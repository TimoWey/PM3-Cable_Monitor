
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002bbf4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000175b0  0802bda4  0802bda4  0003bda4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043354  08043354  00053354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  0804704c  0804704c  0005704c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000007c4  08047298  08047298  00057298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08047a5c  08047a5c  00057a5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08160a8c  08160a8c  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  08160a8c  08160a8c  00170a8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08160a94  08160a94  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08160a94  08160a94  00170a94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  08160aa8  08160aa8  00170aa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08160aac  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013874  20000168  08160c14  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139dc  08160c14  001839dc  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009ca83  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a9  00000000  00000000  0021cd4d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00299c96  00000000  00000000  0021cdf6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000328f2  00000000  00000000  004b6a8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004858  00000000  00000000  004e9380  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00121257  00000000  00000000  004edbd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008284  00000000  00000000  0060ee2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000324e5  00000000  00000000  006170b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ced2  00000000  00000000  00649598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d578  00000000  00000000  0068646c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003866  00000000  00000000  006939e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000180  00000000  00000000  0069724a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bd8c 	.word	0x0802bd8c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802bd8c 	.word	0x0802bd8c

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f009 f9b7 	bl	800a054 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02a fad5 	bl	802b294 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fb6d 	bl	80013c8 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	08160aac 	.word	0x08160aac
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000d00:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000d04:	200139dc 	.word	0x200139dc

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000d0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d10:	ed2d 8b02 	vpush	{d8}
 8000d14:	b088      	sub	sp, #32
 8000d16:	af00      	add	r7, sp, #0
 8000d18:	4605      	mov	r5, r0
 8000d1a:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000d1c:	f000 ffd6 	bl	8001ccc <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d20:	4604      	mov	r4, r0
 8000d22:	2800      	cmp	r0, #0
 8000d24:	f000 8089 	beq.w	8000e3a <calculate_freq_and_signalstrength+0x12e>
 8000d28:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000d2a:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8000e40 <calculate_freq_and_signalstrength+0x134>
 8000d2e:	4633      	mov	r3, r6
 8000d30:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000d34:	edd3 7a00 	vldr	s15, [r3]
 8000d38:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000d3c:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d40:	429a      	cmp	r2, r3
 8000d42:	d1f7      	bne.n	8000d34 <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000d44:	b223      	sxth	r3, r4
 8000d46:	00db      	lsls	r3, r3, #3
 8000d48:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d4c:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000d50:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d52:	b2a1      	uxth	r1, r4
 8000d54:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d58:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d5c:	f027 ffee 	bl	8028d3c <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000d60:	2300      	movs	r3, #0
 8000d62:	4631      	mov	r1, r6
 8000d64:	f107 0008 	add.w	r0, r7, #8
 8000d68:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000d6a:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000d6e:	f028 f869 	bl	8028e44 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000d72:	4632      	mov	r2, r6
 8000d74:	4641      	mov	r1, r8
 8000d76:	4640      	mov	r0, r8
 8000d78:	f028 fcd2 	bl	8029720 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000d7c:	463b      	mov	r3, r7
 8000d7e:	1d3a      	adds	r2, r7, #4
 8000d80:	4631      	mov	r1, r6
 8000d82:	4640      	mov	r0, r8
 8000d84:	f027 ff72 	bl	8028c6c <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d88:	edd7 7a00 	vldr	s15, [r7]
 8000d8c:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000d90:	f000 ff9e 	bl	8001cd0 <MEAS_get_samp_freq>
 8000d94:	ee07 0a90 	vmov	s15, r0
 8000d98:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000d9c:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8000e44 <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000da0:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000da4:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000da8:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000dac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000db0:	d817      	bhi.n	8000de2 <calculate_freq_and_signalstrength+0xd6>
 8000db2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8000e48 <calculate_freq_and_signalstrength+0x13c>
 8000db6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000dba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dbe:	db28      	blt.n	8000e12 <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000dc0:	f000 ff86 	bl	8001cd0 <MEAS_get_samp_freq>
 8000dc4:	2332      	movs	r3, #50	; 0x32
 8000dc6:	fb04 f303 	mul.w	r3, r4, r3
 8000dca:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0; 
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000dce:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000dd2:	edd0 7a00 	vldr	s15, [r0]
 8000dd6:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000dda:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000ddc:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000de0:	e00b      	b.n	8000dfa <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000de2:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8000e4c <calculate_freq_and_signalstrength+0x140>
 8000de6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dee:	d91c      	bls.n	8000e2a <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000df0:	f000 ff6e 	bl	8001cd0 <MEAS_get_samp_freq>
    float signal_strength = 0; 
 8000df4:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8000e50 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000df8:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000dfa:	4628      	mov	r0, r5
 8000dfc:	3720      	adds	r7, #32
    return fft;
 8000dfe:	ed85 8a00 	vstr	s16, [r5]
 8000e02:	ed85 7a01 	vstr	s14, [r5, #4]
 8000e06:	722b      	strb	r3, [r5, #8]
}
 8000e08:	46bd      	mov	sp, r7
 8000e0a:	ecbd 8b02 	vpop	{d8}
 8000e0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000e12:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8000e4c <calculate_freq_and_signalstrength+0x140>
 8000e16:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000e1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e1e:	d8e7      	bhi.n	8000df0 <calculate_freq_and_signalstrength+0xe4>
 8000e20:	eeb4 8a47 	vcmp.f32	s16, s14
 8000e24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e28:	d1e2      	bne.n	8000df0 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000e2a:	f000 ff51 	bl	8001cd0 <MEAS_get_samp_freq>
 8000e2e:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000e32:	009b      	lsls	r3, r3, #2
 8000e34:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8000e38:	e7c9      	b.n	8000dce <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	e784      	b.n	8000d48 <calculate_freq_and_signalstrength+0x3c>
 8000e3e:	bf00      	nop
 8000e40:	44fff000 	.word	0x44fff000
 8000e44:	425c0000 	.word	0x425c0000
 8000e48:	42340000 	.word	0x42340000
 8000e4c:	42820000 	.word	0x42820000
 8000e50:	00000000 	.word	0x00000000

08000e54 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000e54:	ed90 6a02 	vldr	s12, [r0, #8]
 8000e58:	edd0 7a01 	vldr	s15, [r0, #4]
 8000e5c:	ed90 5a00 	vldr	s10, [r0]
 8000e60:	ed91 7a02 	vldr	s14, [r1, #8]
 8000e64:	edd1 4a00 	vldr	s9, [r1]
 8000e68:	ed91 4a01 	vldr	s8, [r1, #4]
 8000e6c:	ee66 6a06 	vmul.f32	s13, s12, s12
 8000e70:	ee77 5ac6 	vsub.f32	s11, s15, s12
 8000e74:	ee65 4a24 	vmul.f32	s9, s10, s9
 8000e78:	ee66 6a87 	vmul.f32	s13, s13, s14
 8000e7c:	ee27 7a46 	vnmul.f32	s14, s14, s12
 8000e80:	eee5 6aa4 	vfma.f32	s13, s11, s9
 8000e84:	eea7 7a84 	vfma.f32	s14, s15, s8
 8000e88:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000e8c:	ee77 4a86 	vadd.f32	s9, s15, s12
 8000e90:	eee4 6a63 	vfms.f32	s13, s8, s7
 8000e94:	ee67 7a86 	vmul.f32	s15, s15, s12
 8000e98:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000e9c:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ea0:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000ea4:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ea8:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8000eac:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8000eb0:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000eb4:	edd0 7a01 	vldr	s15, [r0, #4]
 8000eb8:	ed91 3a01 	vldr	s6, [r1, #4]
 8000ebc:	ed91 7a00 	vldr	s14, [r1]
 8000ec0:	edd0 6a02 	vldr	s13, [r0, #8]
 8000ec4:	edd1 5a02 	vldr	s11, [r1, #8]
 8000ec8:	edd0 4a00 	vldr	s9, [r0]
 8000ecc:	ee67 2aa7 	vmul.f32	s5, s15, s15
 8000ed0:	ee33 6a47 	vsub.f32	s12, s6, s14
 8000ed4:	ee26 5aa6 	vmul.f32	s10, s13, s13
 8000ed8:	ee37 7a65 	vsub.f32	s14, s14, s11
 8000edc:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ee0:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000ee4:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ee8:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000eec:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ef0:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000ef4:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000ef8:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000efc:	ee75 5ac3 	vsub.f32	s11, s11, s6
 8000f00:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f04:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000f08:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f0c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8000f10:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8000f14:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f18:	edd1 7a00 	vldr	s15, [r1]
 8000f1c:	ed91 4a02 	vldr	s8, [r1, #8]
 8000f20:	ed90 6a02 	vldr	s12, [r0, #8]
 8000f24:	edd1 6a01 	vldr	s13, [r1, #4]
 8000f28:	ed90 7a01 	vldr	s14, [r0, #4]
 8000f2c:	9b00      	ldr	r3, [sp, #0]
 8000f2e:	ee74 5a67 	vsub.f32	s11, s8, s15
 8000f32:	ee77 4ae6 	vsub.f32	s9, s15, s13
 8000f36:	ee65 5a86 	vmul.f32	s11, s11, s12
 8000f3a:	edd0 7a00 	vldr	s15, [r0]
 8000f3e:	eee7 5a24 	vfma.f32	s11, s14, s9
 8000f42:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f46:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f4a:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f4e:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f52:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f56:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f5a:	eee7 6aa5 	vfma.f32	s13, s15, s11
 8000f5e:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f62:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f66:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f6a:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f6e:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f72:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8000f76:	edc3 6a00 	vstr	s13, [r3]
}
 8000f7a:	4770      	bx	lr
 8000f7c:	0000      	movs	r0, r0
	...

08000f80 <calculate_distance_and_angle>:
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8000f80:	b530      	push	{r4, r5, lr}
    float32_t distance[3] = {10, 50, 100};
 8000f82:	4b37      	ldr	r3, [pc, #220]	; (8001060 <calculate_distance_and_angle+0xe0>)
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8000f84:	ed2d 8b02 	vpush	{d8}
    float32_t distance[3] = {10, 50, 100};
 8000f88:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 8000f8c:	b097      	sub	sp, #92	; 0x5c
    float32_t distance[3] = {10, 50, 100};
 8000f8e:	f10d 0e1c 	add.w	lr, sp, #28
 8000f92:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 8000f96:	f103 020c 	add.w	r2, r3, #12
 8000f9a:	ca07      	ldmia	r2, {r0, r1, r2}
 8000f9c:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8000fa0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 8000fa4:	f103 0218 	add.w	r2, r3, #24
 8000fa8:	ca07      	ldmia	r2, {r0, r1, r2}
 8000faa:	ac0d      	add	r4, sp, #52	; 0x34
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8000fac:	ab12      	add	r3, sp, #72	; 0x48
 8000fae:	9300      	str	r3, [sp, #0]
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8000fb0:	ad15      	add	r5, sp, #84	; 0x54
    float32_t signal_l[3] = {920, 655, 553};
 8000fb2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8000fb6:	ab11      	add	r3, sp, #68	; 0x44
 8000fb8:	4660      	mov	r0, ip
 8000fba:	4671      	mov	r1, lr
 8000fbc:	aa10      	add	r2, sp, #64	; 0x40
 8000fbe:	f7ff ff49 	bl	8000e54 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8000fc2:	ab14      	add	r3, sp, #80	; 0x50
 8000fc4:	aa13      	add	r2, sp, #76	; 0x4c
 8000fc6:	4620      	mov	r0, r4
 8000fc8:	9500      	str	r5, [sp, #0]
 8000fca:	f7ff ff43 	bl	8000e54 <calculate_coefficients_single_pad>
    return calibration;
 8000fce:	ed9d 7a11 	vldr	s14, [sp, #68]	; 0x44
 8000fd2:	eddd 7a14 	vldr	s15, [sp, #80]	; 0x50
 8000fd6:	eddd 6a15 	vldr	s13, [sp, #84]	; 0x54
 8000fda:	ed9d 6a10 	vldr	s12, [sp, #64]	; 0x40
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000fde:	ee87 8a00 	vdiv.f32	s16, s14, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8000fe2:	eec7 8aa0 	vdiv.f32	s17, s15, s1
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000fe6:	ee20 0a00 	vmul.f32	s0, s0, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8000fea:	ee60 0aa0 	vmul.f32	s1, s1, s1
    return calibration;
 8000fee:	eddd 7a12 	vldr	s15, [sp, #72]	; 0x48
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000ff2:	ee87 7a80 	vdiv.f32	s14, s15, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8000ff6:	eec6 7aa0 	vdiv.f32	s15, s13, s1
    return calibration;
 8000ffa:	eddd 6a13 	vldr	s13, [sp, #76]	; 0x4c
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8000ffe:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001002:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001006:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800100a:	ee78 8aa7 	vadd.f32	s17, s17, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800100e:	ee78 7ac8 	vsub.f32	s15, s17, s16
 8001012:	ee17 0a90 	vmov	r0, s15
 8001016:	f7ff fc29 	bl	800086c <__aeabi_f2d>
 800101a:	a30f      	add	r3, pc, #60	; (adr r3, 8001058 <calculate_distance_and_angle+0xd8>)
 800101c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001020:	f7ff f996 	bl	8000350 <__aeabi_dmul>
 8001024:	f7ff fc7a 	bl	800091c <__aeabi_d2f>
 8001028:	ee00 0a10 	vmov	s0, r0
 800102c:	f028 ff8e 	bl	8029f4c <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001030:	ee38 1a28 	vadd.f32	s2, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001034:	eddf 1a0b 	vldr	s3, [pc, #44]	; 8001064 <calculate_distance_and_angle+0xe4>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001038:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
}
 800103c:	ee60 1a21 	vmul.f32	s3, s0, s3
 8001040:	ee21 1a07 	vmul.f32	s2, s2, s14
 8001044:	eef0 0a68 	vmov.f32	s1, s17
 8001048:	eeb0 0a48 	vmov.f32	s0, s16
 800104c:	b017      	add	sp, #92	; 0x5c
 800104e:	ecbd 8b02 	vpop	{d8}
 8001052:	bd30      	pop	{r4, r5, pc}
 8001054:	f3af 8000 	nop.w
 8001058:	a8ef1b4a 	.word	0xa8ef1b4a
 800105c:	3f99fd66 	.word	0x3f99fd66
 8001060:	0802bda4 	.word	0x0802bda4
 8001064:	42652ee0 	.word	0x42652ee0

08001068 <single_measurement>:
SINGLE_MEAS single_measurement(uint32_t* samples) {
 8001068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800106c:	ed2d 8b04 	vpush	{d8-d9}
 8001070:	b093      	sub	sp, #76	; 0x4c
 8001072:	af00      	add	r7, sp, #0
 8001074:	4605      	mov	r5, r0
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	f000 fe29 	bl	8001ccc <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800107a:	b203      	sxth	r3, r0
 800107c:	009b      	lsls	r3, r3, #2
 800107e:	3307      	adds	r3, #7
 8001080:	f023 0307 	bic.w	r3, r3, #7
 8001084:	ebad 0d03 	sub.w	sp, sp, r3
 8001088:	46e9      	mov	r9, sp
    float32_t samples_PL[buffer_size];
 800108a:	ebad 0d03 	sub.w	sp, sp, r3
 800108e:	46e8      	mov	r8, sp
    float32_t samples_HSR[buffer_size];
 8001090:	ebad 0d03 	sub.w	sp, sp, r3
 8001094:	466e      	mov	r6, sp
    float32_t samples_HSL[buffer_size];
 8001096:	ebad 0d03 	sub.w	sp, sp, r3
 800109a:	46eb      	mov	fp, sp
    float32_t samples_PR[buffer_size];
 800109c:	ee08 9a10 	vmov	s16, r9
    float32_t samples_PL[buffer_size];
 80010a0:	ee08 8a90 	vmov	s17, r8
    float32_t samples_HSR[buffer_size];
 80010a4:	ee09 6a10 	vmov	s18, r6
    float32_t samples_HSL[buffer_size];
 80010a8:	ee09 ba90 	vmov	s19, fp
    for (uint32_t i = 0; i < buffer_size; i++) {
 80010ac:	b3b8      	cbz	r0, 800111e <single_measurement+0xb6>
 80010ae:	4682      	mov	sl, r0
 80010b0:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 80010b2:	f000 fe09 	bl	8001cc8 <MEAS_get_num_of_chan>
 80010b6:	fb04 f000 	mul.w	r0, r4, r0
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 80010ca:	f000 fdfd 	bl	8001cc8 <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3001      	adds	r0, #1
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 80010e4:	f000 fdf0 	bl	8001cc8 <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3002      	adds	r0, #2
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
 80010f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010fa:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80010fe:	f000 fde3 	bl	8001cc8 <MEAS_get_num_of_chan>
 8001102:	fb04 f000 	mul.w	r0, r4, r0
 8001106:	3003      	adds	r0, #3
 8001108:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800110c:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001110:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001112:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001116:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001118:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 800111c:	d1c9      	bne.n	80010b2 <single_measurement+0x4a>
    fft = calculate_freq_and_signalstrength(samples_PR);
 800111e:	ee18 1a10 	vmov	r1, s16
 8001122:	f107 001c 	add.w	r0, r7, #28
 8001126:	f7ff fdf1 	bl	8000d0c <calculate_freq_and_signalstrength>
 800112a:	ed97 0a08 	vldr	s0, [r7, #32]
 800112e:	ed97 8a07 	vldr	s16, [r7, #28]
 8001132:	ed87 0a00 	vstr	s0, [r7]
    fft = calculate_freq_and_signalstrength(samples_PL);
 8001136:	ee18 1a90 	vmov	r1, s17
 800113a:	f107 001c 	add.w	r0, r7, #28
 800113e:	f7ff fde5 	bl	8000d0c <calculate_freq_and_signalstrength>
 8001142:	edd7 0a08 	vldr	s1, [r7, #32]
 8001146:	edd7 8a07 	vldr	s17, [r7, #28]
 800114a:	edc7 0a01 	vstr	s1, [r7, #4]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 800114e:	ee19 1a10 	vmov	r1, s18
 8001152:	f107 001c 	add.w	r0, r7, #28
 8001156:	f7ff fdd9 	bl	8000d0c <calculate_freq_and_signalstrength>
    fft = calculate_freq_and_signalstrength(samples_HSL);
 800115a:	f107 001c 	add.w	r0, r7, #28
 800115e:	ee19 1a90 	vmov	r1, s19
 8001162:	f7ff fdd3 	bl	8000d0c <calculate_freq_and_signalstrength>
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 8001166:	edd7 0a01 	vldr	s1, [r7, #4]
 800116a:	ed97 0a00 	vldr	s0, [r7]
 800116e:	f7ff ff07 	bl	8000f80 <calculate_distance_and_angle>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001172:	ee38 8a28 	vadd.f32	s16, s16, s17
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 8001176:	eeb0 0a41 	vmov.f32	s0, s2
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 800117a:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
}
 800117e:	eef0 0a61 	vmov.f32	s1, s3
 8001182:	ee28 1a01 	vmul.f32	s2, s16, s2
 8001186:	eddf 1a04 	vldr	s3, [pc, #16]	; 8001198 <single_measurement+0x130>
 800118a:	374c      	adds	r7, #76	; 0x4c
 800118c:	46bd      	mov	sp, r7
 800118e:	ecbd 8b04 	vpop	{d8-d9}
 8001192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001196:	bf00      	nop
 8001198:	00000000 	.word	0x00000000

0800119c <accurate_measurement>:
ACCU_MEAS accurate_measurement(uint32_t* samples){
 800119c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80011a0:	f5ad 7d1e 	sub.w	sp, sp, #632	; 0x278
 80011a4:	ad3a      	add	r5, sp, #232	; 0xe8
 80011a6:	4681      	mov	r9, r0
 80011a8:	460f      	mov	r7, r1
 80011aa:	ac08      	add	r4, sp, #32
 80011ac:	ae6c      	add	r6, sp, #432	; 0x1b0
 80011ae:	46aa      	mov	sl, r5
 80011b0:	46a8      	mov	r8, r5
        SINGLE_MEAS single_meas = single_measurement(samples);
 80011b2:	4638      	mov	r0, r7
 80011b4:	f7ff ff58 	bl	8001068 <single_measurement>
        distance[i] = single_meas.distance;
 80011b8:	eca4 0a01 	vstmia	r4!, {s0}
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 80011bc:	4544      	cmp	r4, r8
        SINGLE_MEAS single_meas = single_measurement(samples);
 80011be:	ed8d 0a01 	vstr	s0, [sp, #4]
 80011c2:	edcd 0a02 	vstr	s1, [sp, #8]
 80011c6:	ed8d 1a03 	vstr	s2, [sp, #12]
 80011ca:	edcd 1a04 	vstr	s3, [sp, #16]
        angle[i] = single_meas.angle;
 80011ce:	ece5 0a01 	vstmia	r5!, {s1}
        frequency[i] = single_meas.frequency;
 80011d2:	eca6 1a01 	vstmia	r6!, {s2}
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 80011d6:	d1ec      	bne.n	80011b2 <accurate_measurement+0x16>
    arm_mean_f32(distance, ACCURATE_MEASUREMENT_LOOPS, &accu_meas.distance);
 80011d8:	aa01      	add	r2, sp, #4
 80011da:	a808      	add	r0, sp, #32
 80011dc:	2132      	movs	r1, #50	; 0x32
 80011de:	f027 fd11 	bl	8028c04 <arm_mean_f32>
    arm_std_f32(distance, ACCURATE_MEASUREMENT_LOOPS, &accu_meas.distance_std_dev);
 80011e2:	a808      	add	r0, sp, #32
 80011e4:	aa05      	add	r2, sp, #20
 80011e6:	2132      	movs	r1, #50	; 0x32
 80011e8:	f027 fc98 	bl	8028b1c <arm_std_f32>
    arm_mean_f32(angle, ACCURATE_MEASUREMENT_LOOPS, &accu_meas.angle);
 80011ec:	aa02      	add	r2, sp, #8
 80011ee:	4650      	mov	r0, sl
 80011f0:	2132      	movs	r1, #50	; 0x32
 80011f2:	f027 fd07 	bl	8028c04 <arm_mean_f32>
    arm_std_f32(angle, ACCURATE_MEASUREMENT_LOOPS, &accu_meas.angle_std_dev);
 80011f6:	aa06      	add	r2, sp, #24
 80011f8:	4650      	mov	r0, sl
 80011fa:	2132      	movs	r1, #50	; 0x32
 80011fc:	f027 fc8e 	bl	8028b1c <arm_std_f32>
    arm_mean_f32(frequency, ACCURATE_MEASUREMENT_LOOPS, &accu_meas.frequency);
 8001200:	aa03      	add	r2, sp, #12
 8001202:	a86c      	add	r0, sp, #432	; 0x1b0
 8001204:	2132      	movs	r1, #50	; 0x32
 8001206:	f027 fcfd 	bl	8028c04 <arm_mean_f32>
    arm_std_f32(frequency, ACCURATE_MEASUREMENT_LOOPS, &accu_meas.frequency_std_dev);
 800120a:	aa07      	add	r2, sp, #28
 800120c:	a86c      	add	r0, sp, #432	; 0x1b0
 800120e:	2132      	movs	r1, #50	; 0x32
 8001210:	f027 fc84 	bl	8028b1c <arm_std_f32>
    return accu_meas;
 8001214:	f10d 0c04 	add.w	ip, sp, #4
 8001218:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 800121c:	464c      	mov	r4, r9
 800121e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001220:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8001224:	e884 0007 	stmia.w	r4, {r0, r1, r2}
}
 8001228:	4648      	mov	r0, r9
 800122a:	f50d 7d1e 	add.w	sp, sp, #632	; 0x278
 800122e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001232:	bf00      	nop

08001234 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001234:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001236:	2064      	movs	r0, #100	; 0x64
 8001238:	f00c fb1e 	bl	800d878 <osDelay>
  for(;;)
 800123c:	e7fb      	b.n	8001236 <StartDefaultTask+0x2>
 800123e:	bf00      	nop

08001240 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001240:	b580      	push	{r7, lr}
 8001242:	4c10      	ldr	r4, [pc, #64]	; (8001284 <StartTimeoutTask+0x44>)
 8001244:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8001290 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001248:	4f0f      	ldr	r7, [pc, #60]	; (8001288 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800124a:	4e10      	ldr	r6, [pc, #64]	; (800128c <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 800124c:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800124e:	2300      	movs	r3, #0
 8001250:	461a      	mov	r2, r3
 8001252:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8001254:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001256:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 800125a:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800125c:	f00c fc08 	bl	800da70 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001260:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001262:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001264:	4638      	mov	r0, r7
 8001266:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001268:	b912      	cbnz	r2, 8001270 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 800126a:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800126c:	f009 f90a 	bl	800a484 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001270:	4630      	mov	r0, r6
 8001272:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001276:	f009 f909 	bl	800a48c <HAL_GPIO_TogglePin>

	  osDelay(1000);
 800127a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800127e:	f00c fafb 	bl	800d878 <osDelay>
	  sleep_timeout_value--;
 8001282:	e7e3      	b.n	800124c <StartTimeoutTask+0xc>
 8001284:	2000000c 	.word	0x2000000c
 8001288:	40021000 	.word	0x40021000
 800128c:	40021800 	.word	0x40021800
 8001290:	2000018c 	.word	0x2000018c

08001294 <updateGUI_test>:
	return sleep_timeout_value;
 8001294:	4b01      	ldr	r3, [pc, #4]	; (800129c <updateGUI_test+0x8>)
}
 8001296:	6818      	ldr	r0, [r3, #0]
 8001298:	4770      	bx	lr
 800129a:	bf00      	nop
 800129c:	2000000c 	.word	0x2000000c

080012a0 <gyro_disable>:
{
 80012a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012a2:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012a4:	4e1f      	ldr	r6, [pc, #124]	; (8001324 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80012a6:	4d20      	ldr	r5, [pc, #128]	; (8001328 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80012a8:	4c20      	ldr	r4, [pc, #128]	; (800132c <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012aa:	2700      	movs	r7, #0
 80012ac:	9700      	str	r7, [sp, #0]
 80012ae:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80012b0:	f043 0304 	orr.w	r3, r3, #4
 80012b4:	6333      	str	r3, [r6, #48]	; 0x30
 80012b6:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80012b8:	f003 0304 	and.w	r3, r3, #4
 80012bc:	9300      	str	r3, [sp, #0]
 80012be:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80012c0:	682b      	ldr	r3, [r5, #0]
 80012c2:	f023 030c 	bic.w	r3, r3, #12
 80012c6:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 80012c8:	682b      	ldr	r3, [r5, #0]
 80012ca:	f043 0304 	orr.w	r3, r3, #4
 80012ce:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 80012d0:	69ab      	ldr	r3, [r5, #24]
 80012d2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80012d6:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 80012d8:	200a      	movs	r0, #10
 80012da:	f008 fef5 	bl	800a0c8 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 80012de:	682b      	ldr	r3, [r5, #0]
 80012e0:	f043 030c 	orr.w	r3, r3, #12
 80012e4:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012e6:	9701      	str	r7, [sp, #4]
 80012e8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80012ea:	f043 0320 	orr.w	r3, r3, #32
 80012ee:	6333      	str	r3, [r6, #48]	; 0x30
 80012f0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80012f2:	f003 0320 	and.w	r3, r3, #32
 80012f6:	9301      	str	r3, [sp, #4]
 80012f8:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80012fa:	68a3      	ldr	r3, [r4, #8]
 80012fc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001300:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001302:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001304:	f023 030f 	bic.w	r3, r3, #15
 8001308:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800130a:	68e3      	ldr	r3, [r4, #12]
 800130c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001310:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001312:	200a      	movs	r0, #10
 8001314:	f008 fed8 	bl	800a0c8 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001318:	6823      	ldr	r3, [r4, #0]
 800131a:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800131e:	6023      	str	r3, [r4, #0]
}
 8001320:	b003      	add	sp, #12
 8001322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001324:	40023800 	.word	0x40023800
 8001328:	40020800 	.word	0x40020800
 800132c:	40021400 	.word	0x40021400

08001330 <SystemClock_Config>:
{
 8001330:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001332:	2400      	movs	r4, #0
{
 8001334:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001336:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800133a:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800133e:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001342:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001346:	4a1e      	ldr	r2, [pc, #120]	; (80013c0 <SystemClock_Config+0x90>)
 8001348:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800134a:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 800134c:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800134e:	4b1d      	ldr	r3, [pc, #116]	; (80013c4 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001350:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001354:	6411      	str	r1, [r2, #64]	; 0x40
 8001356:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001358:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800135c:	9201      	str	r2, [sp, #4]
 800135e:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001360:	9402      	str	r4, [sp, #8]
 8001362:	681a      	ldr	r2, [r3, #0]
 8001364:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001368:	601a      	str	r2, [r3, #0]
 800136a:	681b      	ldr	r3, [r3, #0]
 800136c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001370:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001372:	2201      	movs	r2, #1
 8001374:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001378:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 800137c:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800137e:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001380:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001382:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001386:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800138a:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800138e:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001390:	2202      	movs	r2, #2
 8001392:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001394:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001396:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800139a:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800139c:	f00a feb0 	bl	800c100 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80013a0:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013a2:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80013a6:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80013aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013ae:	a803      	add	r0, sp, #12
 80013b0:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80013b2:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80013b6:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013b8:	f00b f8ba 	bl	800c530 <HAL_RCC_ClockConfig>
}
 80013bc:	b015      	add	sp, #84	; 0x54
 80013be:	bd30      	pop	{r4, r5, pc}
 80013c0:	40023800 	.word	0x40023800
 80013c4:	40007000 	.word	0x40007000

080013c8 <main>:
{
 80013c8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013cc:	2400      	movs	r4, #0
{
 80013ce:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80013d0:	f008 fe4e 	bl	800a070 <HAL_Init>
  SystemClock_Config();
 80013d4:	f7ff ffac 	bl	8001330 <SystemClock_Config>
  gyro_disable();
 80013d8:	f7ff ff62 	bl	80012a0 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013dc:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 80013e0:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013e4:	4bbe      	ldr	r3, [pc, #760]	; (80016e0 <main+0x318>)
 80013e6:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013e8:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80013ec:	48bd      	ldr	r0, [pc, #756]	; (80016e4 <main+0x31c>)
  hi2c3.Instance = I2C3;
 80013ee:	4dbe      	ldr	r5, [pc, #760]	; (80016e8 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013f0:	f041 0110 	orr.w	r1, r1, #16
 80013f4:	6319      	str	r1, [r3, #48]	; 0x30
 80013f6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013f8:	f001 0110 	and.w	r1, r1, #16
 80013fc:	9100      	str	r1, [sp, #0]
 80013fe:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001400:	9401      	str	r4, [sp, #4]
 8001402:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001404:	f041 0120 	orr.w	r1, r1, #32
 8001408:	6319      	str	r1, [r3, #48]	; 0x30
 800140a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800140c:	f001 0120 	and.w	r1, r1, #32
 8001410:	9101      	str	r1, [sp, #4]
 8001412:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001414:	9402      	str	r4, [sp, #8]
 8001416:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001418:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800141c:	6319      	str	r1, [r3, #48]	; 0x30
 800141e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001420:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001424:	9102      	str	r1, [sp, #8]
 8001426:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001428:	9403      	str	r4, [sp, #12]
 800142a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800142c:	f041 0104 	orr.w	r1, r1, #4
 8001430:	6319      	str	r1, [r3, #48]	; 0x30
 8001432:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001434:	f001 0104 	and.w	r1, r1, #4
 8001438:	9103      	str	r1, [sp, #12]
 800143a:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800143c:	9404      	str	r4, [sp, #16]
 800143e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001440:	f041 0101 	orr.w	r1, r1, #1
 8001444:	6319      	str	r1, [r3, #48]	; 0x30
 8001446:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001448:	f001 0101 	and.w	r1, r1, #1
 800144c:	9104      	str	r1, [sp, #16]
 800144e:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001450:	9405      	str	r4, [sp, #20]
 8001452:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001454:	f041 0102 	orr.w	r1, r1, #2
 8001458:	6319      	str	r1, [r3, #48]	; 0x30
 800145a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800145c:	f001 0102 	and.w	r1, r1, #2
 8001460:	9105      	str	r1, [sp, #20]
 8001462:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001464:	9406      	str	r4, [sp, #24]
 8001466:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001468:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800146c:	6319      	str	r1, [r3, #48]	; 0x30
 800146e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001470:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001474:	9106      	str	r1, [sp, #24]
 8001476:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001478:	9407      	str	r4, [sp, #28]
 800147a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800147c:	f041 0108 	orr.w	r1, r1, #8
 8001480:	6319      	str	r1, [r3, #48]	; 0x30
 8001482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001484:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001488:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800148a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800148c:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800148e:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001490:	f008 fff8 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001494:	4893      	ldr	r0, [pc, #588]	; (80016e4 <main+0x31c>)
 8001496:	2120      	movs	r1, #32
 8001498:	2201      	movs	r2, #1
 800149a:	f008 fff3 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 800149e:	4893      	ldr	r0, [pc, #588]	; (80016ec <main+0x324>)
 80014a0:	4622      	mov	r2, r4
 80014a2:	2114      	movs	r1, #20
 80014a4:	f008 ffee 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 80014a8:	4891      	ldr	r0, [pc, #580]	; (80016f0 <main+0x328>)
 80014aa:	4622      	mov	r2, r4
 80014ac:	2180      	movs	r1, #128	; 0x80
 80014ae:	f008 ffe9 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80014b2:	4890      	ldr	r0, [pc, #576]	; (80016f4 <main+0x32c>)
 80014b4:	4622      	mov	r2, r4
 80014b6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80014ba:	f008 ffe3 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014be:	488e      	ldr	r0, [pc, #568]	; (80016f8 <main+0x330>)
 80014c0:	4622      	mov	r2, r4
 80014c2:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80014c6:	f008 ffdd 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 80014ca:	488c      	ldr	r0, [pc, #560]	; (80016fc <main+0x334>)
 80014cc:	4622      	mov	r2, r4
 80014ce:	2104      	movs	r1, #4
 80014d0:	f008 ffd8 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 80014d4:	2201      	movs	r2, #1
 80014d6:	4889      	ldr	r0, [pc, #548]	; (80016fc <main+0x334>)
 80014d8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80014dc:	f008 ffd2 	bl	800a484 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014e0:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014e2:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 80014e6:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014e8:	487e      	ldr	r0, [pc, #504]	; (80016e4 <main+0x31c>)
 80014ea:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80014ec:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014f0:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014f4:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014f8:	f008 fe80 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80014fc:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001500:	4878      	ldr	r0, [pc, #480]	; (80016e4 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001502:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001504:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001506:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800150a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800150c:	f008 fe76 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001510:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001512:	4874      	ldr	r0, [pc, #464]	; (80016e4 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001514:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001516:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001518:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800151a:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800151e:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001522:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001524:	f008 fe6a 	bl	800a1fc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001528:	4870      	ldr	r0, [pc, #448]	; (80016ec <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800152a:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800152e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001530:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001534:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001536:	f008 fe61 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 800153a:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 800153c:	486c      	ldr	r0, [pc, #432]	; (80016f0 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 800153e:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001540:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001542:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001546:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800154a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 800154c:	f008 fe56 	bl	800a1fc <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001550:	4866      	ldr	r0, [pc, #408]	; (80016ec <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001552:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001554:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001556:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800155a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800155e:	f008 fe4d 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001562:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001566:	4863      	ldr	r0, [pc, #396]	; (80016f4 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001568:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800156a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800156c:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001570:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001572:	f008 fe43 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001576:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800157a:	485f      	ldr	r0, [pc, #380]	; (80016f8 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800157c:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800157e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001580:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001584:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001586:	f008 fe39 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 800158a:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800158e:	485b      	ldr	r0, [pc, #364]	; (80016fc <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001590:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001592:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001594:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001598:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800159a:	f008 fe2f 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800159e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015a2:	4853      	ldr	r0, [pc, #332]	; (80016f0 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015a4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015a6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015a8:	230f      	movs	r3, #15
 80015aa:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ac:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b0:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015b2:	f008 fe23 	bl	800a1fc <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80015b6:	4622      	mov	r2, r4
 80015b8:	2105      	movs	r1, #5
 80015ba:	2009      	movs	r0, #9
 80015bc:	f008 fda8 	bl	800a110 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80015c0:	2009      	movs	r0, #9
 80015c2:	f008 fde3 	bl	800a18c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80015c6:	484e      	ldr	r0, [pc, #312]	; (8001700 <main+0x338>)
 80015c8:	4b4e      	ldr	r3, [pc, #312]	; (8001704 <main+0x33c>)
 80015ca:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80015cc:	f008 fdec 	bl	800a1a8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80015d0:	494d      	ldr	r1, [pc, #308]	; (8001708 <main+0x340>)
 80015d2:	4b4e      	ldr	r3, [pc, #312]	; (800170c <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015d4:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 80015d6:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015da:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80015de:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015e0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80015e4:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80015e8:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015ec:	f009 f9b0 	bl	800a950 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80015f0:	4651      	mov	r1, sl
 80015f2:	4628      	mov	r0, r5
 80015f4:	f00a fb78 	bl	800bce8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015f8:	4621      	mov	r1, r4
 80015fa:	4628      	mov	r0, r5
 80015fc:	f00a fb94 	bl	800bd28 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001600:	f8df c118 	ldr.w	ip, [pc, #280]	; 800171c <main+0x354>
  hspi5.Instance = SPI5;
 8001604:	4842      	ldr	r0, [pc, #264]	; (8001710 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001606:	4d43      	ldr	r5, [pc, #268]	; (8001714 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001608:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800160a:	f44f 7382 	mov.w	r3, #260	; 0x104
 800160e:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001612:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8001616:	2318      	movs	r3, #24
 8001618:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800161c:	230a      	movs	r3, #10
 800161e:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001620:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001624:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001628:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800162c:	f00b fa6e 	bl	800cb0c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001630:	2307      	movs	r3, #7
 8001632:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001634:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001636:	4b38      	ldr	r3, [pc, #224]	; (8001718 <main+0x350>)
 8001638:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800163a:	2040      	movs	r0, #64	; 0x40
 800163c:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001640:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001644:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001648:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800164a:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800164c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001650:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001652:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001654:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001658:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800165c:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800165e:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8001660:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 8001664:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8001668:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 800166a:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800166c:	f00b f95c 	bl	800c928 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001670:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001674:	a909      	add	r1, sp, #36	; 0x24
 8001676:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001678:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800167c:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8001680:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001682:	f00b f973 	bl	800c96c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001686:	4630      	mov	r0, r6
 8001688:	f008 fd1e 	bl	800a0c8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800168c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001690:	a909      	add	r1, sp, #36	; 0x24
 8001692:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8001694:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001698:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800169c:	f00b f966 	bl	800c96c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016a4:	a909      	add	r1, sp, #36	; 0x24
 80016a6:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80016a8:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016ac:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016b0:	f00b f95c 	bl	800c96c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80016b4:	f44f 730c 	mov.w	r3, #560	; 0x230
 80016b8:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80016ba:	9b08      	ldr	r3, [sp, #32]
 80016bc:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016be:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016c2:	a909      	add	r1, sp, #36	; 0x24
 80016c4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016c6:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80016ca:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016cc:	f00b f94e 	bl	800c96c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80016d0:	4628      	mov	r0, r5
 80016d2:	f240 516a 	movw	r1, #1386	; 0x56a
 80016d6:	f00b f967 	bl	800c9a8 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016da:	2234      	movs	r2, #52	; 0x34
 80016dc:	e020      	b.n	8001720 <main+0x358>
 80016de:	bf00      	nop
 80016e0:	40023800 	.word	0x40023800
 80016e4:	40021000 	.word	0x40021000
 80016e8:	200001a0 	.word	0x200001a0
 80016ec:	40020800 	.word	0x40020800
 80016f0:	40020000 	.word	0x40020000
 80016f4:	40020400 	.word	0x40020400
 80016f8:	40020c00 	.word	0x40020c00
 80016fc:	40021800 	.word	0x40021800
 8001700:	20000198 	.word	0x20000198
 8001704:	40023000 	.word	0x40023000
 8001708:	40005c00 	.word	0x40005c00
 800170c:	000186a0 	.word	0x000186a0
 8001710:	200002d0 	.word	0x200002d0
 8001714:	2000029c 	.word	0x2000029c
 8001718:	a0000140 	.word	0xa0000140
 800171c:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8001720:	4d3a      	ldr	r5, [pc, #232]	; (800180c <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001722:	4621      	mov	r1, r4
 8001724:	eb0d 0002 	add.w	r0, sp, r2
 8001728:	f029 fcb5 	bl	802b096 <memset>
  hltdc.Instance = LTDC;
 800172c:	4b38      	ldr	r3, [pc, #224]	; (8001810 <main+0x448>)
 800172e:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8001730:	2309      	movs	r3, #9
 8001732:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001734:	231d      	movs	r3, #29
 8001736:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001738:	f240 1b0d 	movw	fp, #269	; 0x10d
 800173c:	f240 1343 	movw	r3, #323	; 0x143
 8001740:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001744:	f240 1217 	movw	r2, #279	; 0x117
 8001748:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 800174c:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800174e:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001750:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001754:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001756:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800175a:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 800175e:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001762:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001766:	f00a fb03 	bl	800bd70 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 800176a:	23f0      	movs	r3, #240	; 0xf0
 800176c:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 800176e:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 8001770:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001774:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 8001776:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 8001778:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800177a:	a90d      	add	r1, sp, #52	; 0x34
 800177c:	4622      	mov	r2, r4
 800177e:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8001780:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001782:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8001786:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 8001788:	4d22      	ldr	r5, [pc, #136]	; (8001814 <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 800178a:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800178c:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001790:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001792:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001794:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 8001796:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 8001798:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 800179c:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017a0:	f00a fbbc 	bl	800bf1c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80017a4:	4b1c      	ldr	r3, [pc, #112]	; (8001818 <main+0x450>)
 80017a6:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80017a8:	681b      	ldr	r3, [r3, #0]
 80017aa:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80017ac:	682b      	ldr	r3, [r5, #0]
 80017ae:	68db      	ldr	r3, [r3, #12]
 80017b0:	4798      	blx	r3
  MX_TouchGFX_Init();
 80017b2:	f000 fde9 	bl	8002388 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80017b6:	f000 fde5 	bl	8002384 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 80017ba:	f7ff fd71 	bl	80012a0 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 80017be:	f000 f945 	bl	8001a4c <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 80017c2:	f000 f977 	bl	8001ab4 <MEAS_timer_init>
  osKernelInitialize();
 80017c6:	f00b ffdf 	bl	800d788 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80017ca:	4a14      	ldr	r2, [pc, #80]	; (800181c <main+0x454>)
 80017cc:	4639      	mov	r1, r7
 80017ce:	4650      	mov	r0, sl
 80017d0:	f00c f914 	bl	800d9fc <osMessageQueueNew>
 80017d4:	4b12      	ldr	r3, [pc, #72]	; (8001820 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80017d6:	4a13      	ldr	r2, [pc, #76]	; (8001824 <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80017d8:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80017da:	4621      	mov	r1, r4
 80017dc:	4812      	ldr	r0, [pc, #72]	; (8001828 <main+0x460>)
 80017de:	f00b ffff 	bl	800d7e0 <osThreadNew>
 80017e2:	4b12      	ldr	r3, [pc, #72]	; (800182c <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017e4:	4a12      	ldr	r2, [pc, #72]	; (8001830 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80017e6:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017e8:	4621      	mov	r1, r4
 80017ea:	4812      	ldr	r0, [pc, #72]	; (8001834 <main+0x46c>)
 80017ec:	f00b fff8 	bl	800d7e0 <osThreadNew>
 80017f0:	4b11      	ldr	r3, [pc, #68]	; (8001838 <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80017f2:	4a12      	ldr	r2, [pc, #72]	; (800183c <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017f4:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80017f6:	4621      	mov	r1, r4
 80017f8:	4811      	ldr	r0, [pc, #68]	; (8001840 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017fa:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80017fc:	f00b fff0 	bl	800d7e0 <osThreadNew>
 8001800:	4b10      	ldr	r3, [pc, #64]	; (8001844 <main+0x47c>)
 8001802:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001804:	f00b ffd2 	bl	800d7ac <osKernelStart>
  while (1)
 8001808:	e7fe      	b.n	8001808 <main+0x440>
 800180a:	bf00      	nop
 800180c:	200001f4 	.word	0x200001f4
 8001810:	40016800 	.word	0x40016800
 8001814:	20000188 	.word	0x20000188
 8001818:	20000018 	.word	0x20000018
 800181c:	0802be60 	.word	0x0802be60
 8001820:	2000018c 	.word	0x2000018c
 8001824:	0802be9c 	.word	0x0802be9c
 8001828:	08001235 	.word	0x08001235
 800182c:	20000194 	.word	0x20000194
 8001830:	0802be3c 	.word	0x0802be3c
 8001834:	08002399 	.word	0x08002399
 8001838:	20000184 	.word	0x20000184
 800183c:	0802be78 	.word	0x0802be78
 8001840:	08001241 	.word	0x08001241
 8001844:	20000190 	.word	0x20000190

08001848 <IOE_Init>:
 8001848:	4770      	bx	lr
 800184a:	bf00      	nop

0800184c <IOE_ITConfig>:
 800184c:	4770      	bx	lr
 800184e:	bf00      	nop

08001850 <IOE_Write>:
{
 8001850:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001852:	4c09      	ldr	r4, [pc, #36]	; (8001878 <IOE_Write+0x28>)
{
 8001854:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001856:	6824      	ldr	r4, [r4, #0]
 8001858:	9402      	str	r4, [sp, #8]
{
 800185a:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800185c:	2301      	movs	r3, #1
 800185e:	f88d 4017 	strb.w	r4, [sp, #23]
 8001862:	f10d 0417 	add.w	r4, sp, #23
 8001866:	460a      	mov	r2, r1
 8001868:	9301      	str	r3, [sp, #4]
 800186a:	4601      	mov	r1, r0
 800186c:	9400      	str	r4, [sp, #0]
 800186e:	4803      	ldr	r0, [pc, #12]	; (800187c <IOE_Write+0x2c>)
 8001870:	f009 f936 	bl	800aae0 <HAL_I2C_Mem_Write>
}
 8001874:	b006      	add	sp, #24
 8001876:	bd10      	pop	{r4, pc}
 8001878:	20000004 	.word	0x20000004
 800187c:	200001a0 	.word	0x200001a0

08001880 <IOE_Read>:
{
 8001880:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001882:	4b0b      	ldr	r3, [pc, #44]	; (80018b0 <IOE_Read+0x30>)
{
 8001884:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001886:	681b      	ldr	r3, [r3, #0]
 8001888:	9302      	str	r3, [sp, #8]
{
 800188a:	4684      	mov	ip, r0
 800188c:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800188e:	2301      	movs	r3, #1
 8001890:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001894:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001896:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 800189a:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800189e:	4661      	mov	r1, ip
 80018a0:	4804      	ldr	r0, [pc, #16]	; (80018b4 <IOE_Read+0x34>)
 80018a2:	f009 fa0f 	bl	800acc4 <HAL_I2C_Mem_Read>
}
 80018a6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80018aa:	b007      	add	sp, #28
 80018ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80018b0:	20000004 	.word	0x20000004
 80018b4:	200001a0 	.word	0x200001a0

080018b8 <IOE_ReadMultiple>:
{
 80018b8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80018ba:	4c09      	ldr	r4, [pc, #36]	; (80018e0 <IOE_ReadMultiple+0x28>)
{
 80018bc:	b084      	sub	sp, #16
 80018be:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80018c0:	6820      	ldr	r0, [r4, #0]
 80018c2:	9002      	str	r0, [sp, #8]
 80018c4:	e9cd 2300 	strd	r2, r3, [sp]
 80018c8:	4806      	ldr	r0, [pc, #24]	; (80018e4 <IOE_ReadMultiple+0x2c>)
 80018ca:	460a      	mov	r2, r1
 80018cc:	2301      	movs	r3, #1
 80018ce:	4661      	mov	r1, ip
 80018d0:	f009 f9f8 	bl	800acc4 <HAL_I2C_Mem_Read>
}
 80018d4:	3800      	subs	r0, #0
 80018d6:	bf18      	it	ne
 80018d8:	2001      	movne	r0, #1
 80018da:	b004      	add	sp, #16
 80018dc:	bd10      	pop	{r4, pc}
 80018de:	bf00      	nop
 80018e0:	20000004 	.word	0x20000004
 80018e4:	200001a0 	.word	0x200001a0

080018e8 <IOE_Delay>:
 80018e8:	f008 bbee 	b.w	800a0c8 <HAL_Delay>

080018ec <LCD_IO_Init>:
{
 80018ec:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ee:	4806      	ldr	r0, [pc, #24]	; (8001908 <LCD_IO_Init+0x1c>)
 80018f0:	2200      	movs	r2, #0
 80018f2:	2104      	movs	r1, #4
 80018f4:	f008 fdc6 	bl	800a484 <HAL_GPIO_WritePin>
}
 80018f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018fc:	4802      	ldr	r0, [pc, #8]	; (8001908 <LCD_IO_Init+0x1c>)
 80018fe:	2201      	movs	r2, #1
 8001900:	2104      	movs	r1, #4
 8001902:	f008 bdbf 	b.w	800a484 <HAL_GPIO_WritePin>
 8001906:	bf00      	nop
 8001908:	40020800 	.word	0x40020800

0800190c <LCD_IO_WriteData>:
{
 800190c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800190e:	4d10      	ldr	r5, [pc, #64]	; (8001950 <LCD_IO_WriteData+0x44>)
{
 8001910:	b083      	sub	sp, #12
 8001912:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001914:	2201      	movs	r2, #1
 8001916:	480f      	ldr	r0, [pc, #60]	; (8001954 <LCD_IO_WriteData+0x48>)
 8001918:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800191c:	f008 fdb2 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001920:	4628      	mov	r0, r5
 8001922:	2200      	movs	r2, #0
 8001924:	2104      	movs	r1, #4
 8001926:	f008 fdad 	bl	800a484 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800192a:	4b0b      	ldr	r3, [pc, #44]	; (8001958 <LCD_IO_WriteData+0x4c>)
 800192c:	480b      	ldr	r0, [pc, #44]	; (800195c <LCD_IO_WriteData+0x50>)
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001934:	f10d 0106 	add.w	r1, sp, #6
 8001938:	2201      	movs	r2, #1
 800193a:	f00b f949 	bl	800cbd0 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800193e:	2201      	movs	r2, #1
 8001940:	2104      	movs	r1, #4
 8001942:	4628      	mov	r0, r5
}
 8001944:	b003      	add	sp, #12
 8001946:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800194a:	f008 bd9b 	b.w	800a484 <HAL_GPIO_WritePin>
 800194e:	bf00      	nop
 8001950:	40020800 	.word	0x40020800
 8001954:	40020c00 	.word	0x40020c00
 8001958:	20000008 	.word	0x20000008
 800195c:	200002d0 	.word	0x200002d0

08001960 <LCD_IO_WriteReg>:
{
 8001960:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001962:	4d10      	ldr	r5, [pc, #64]	; (80019a4 <LCD_IO_WriteReg+0x44>)
{
 8001964:	b083      	sub	sp, #12
 8001966:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001968:	2200      	movs	r2, #0
 800196a:	480f      	ldr	r0, [pc, #60]	; (80019a8 <LCD_IO_WriteReg+0x48>)
 800196c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001970:	f008 fd88 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001974:	4628      	mov	r0, r5
 8001976:	2200      	movs	r2, #0
 8001978:	2104      	movs	r1, #4
 800197a:	f008 fd83 	bl	800a484 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800197e:	4b0b      	ldr	r3, [pc, #44]	; (80019ac <LCD_IO_WriteReg+0x4c>)
 8001980:	480b      	ldr	r0, [pc, #44]	; (80019b0 <LCD_IO_WriteReg+0x50>)
 8001982:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001984:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001988:	f10d 0106 	add.w	r1, sp, #6
 800198c:	2201      	movs	r2, #1
 800198e:	f00b f91f 	bl	800cbd0 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001992:	2201      	movs	r2, #1
 8001994:	2104      	movs	r1, #4
 8001996:	4628      	mov	r0, r5
}
 8001998:	b003      	add	sp, #12
 800199a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800199e:	f008 bd71 	b.w	800a484 <HAL_GPIO_WritePin>
 80019a2:	bf00      	nop
 80019a4:	40020800 	.word	0x40020800
 80019a8:	40020c00 	.word	0x40020c00
 80019ac:	20000008 	.word	0x20000008
 80019b0:	200002d0 	.word	0x200002d0

080019b4 <LCD_IO_ReadData>:
{
 80019b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b8:	4e19      	ldr	r6, [pc, #100]	; (8001a20 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019ba:	4f1a      	ldr	r7, [pc, #104]	; (8001a24 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019bc:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001a28 <LCD_IO_ReadData+0x74>
 80019c0:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001a2c <LCD_IO_ReadData+0x78>
{
 80019c4:	b083      	sub	sp, #12
 80019c6:	460c      	mov	r4, r1
 80019c8:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019ca:	2200      	movs	r2, #0
 80019cc:	4630      	mov	r0, r6
 80019ce:	2104      	movs	r1, #4
 80019d0:	f008 fd58 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019d4:	4638      	mov	r0, r7
 80019d6:	2200      	movs	r2, #0
 80019d8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019dc:	f008 fd52 	bl	800a484 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019e0:	f8d9 3000 	ldr.w	r3, [r9]
 80019e4:	f8ad 5004 	strh.w	r5, [sp, #4]
 80019e8:	a901      	add	r1, sp, #4
 80019ea:	2201      	movs	r2, #1
 80019ec:	4640      	mov	r0, r8
 80019ee:	f00b f8ef 	bl	800cbd0 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80019f2:	f8d9 3000 	ldr.w	r3, [r9]
 80019f6:	4622      	mov	r2, r4
 80019f8:	a901      	add	r1, sp, #4
 80019fa:	4640      	mov	r0, r8
 80019fc:	f00b fb90 	bl	800d120 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a00:	4638      	mov	r0, r7
 8001a02:	2201      	movs	r2, #1
 8001a04:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a08:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a0a:	f008 fd3b 	bl	800a484 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a0e:	4630      	mov	r0, r6
 8001a10:	2201      	movs	r2, #1
 8001a12:	2104      	movs	r1, #4
 8001a14:	f008 fd36 	bl	800a484 <HAL_GPIO_WritePin>
}
 8001a18:	4620      	mov	r0, r4
 8001a1a:	b003      	add	sp, #12
 8001a1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a20:	40020800 	.word	0x40020800
 8001a24:	40020c00 	.word	0x40020c00
 8001a28:	20000008 	.word	0x20000008
 8001a2c:	200002d0 	.word	0x200002d0

08001a30 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a30:	f008 bb4a 	b.w	800a0c8 <HAL_Delay>

08001a34 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a34:	4b03      	ldr	r3, [pc, #12]	; (8001a44 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a36:	6802      	ldr	r2, [r0, #0]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d000      	beq.n	8001a3e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a3c:	4770      	bx	lr
    HAL_IncTick();
 8001a3e:	f008 bb31 	b.w	800a0a4 <HAL_IncTick>
 8001a42:	bf00      	nop
 8001a44:	40001000 	.word	0x40001000

08001a48 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a48:	4770      	bx	lr
 8001a4a:	bf00      	nop

08001a4c <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001a4c:	b410      	push	{r4}
 8001a4e:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001a50:	4b15      	ldr	r3, [pc, #84]	; (8001aa8 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001a52:	4916      	ldr	r1, [pc, #88]	; (8001aac <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001a54:	2400      	movs	r4, #0
 8001a56:	9400      	str	r4, [sp, #0]
 8001a58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a5a:	f042 0220 	orr.w	r2, r2, #32
 8001a5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001a60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a62:	f002 0220 	and.w	r2, r2, #32
 8001a66:	9200      	str	r2, [sp, #0]
 8001a68:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001a6a:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001a6c:	4a10      	ldr	r2, [pc, #64]	; (8001ab0 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001a6e:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001a72:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001a74:	6808      	ldr	r0, [r1, #0]
 8001a76:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001a7a:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001a7c:	9401      	str	r4, [sp, #4]
 8001a7e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a80:	f041 0104 	orr.w	r1, r1, #4
 8001a84:	6319      	str	r1, [r3, #48]	; 0x30
 8001a86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a88:	f003 0304 	and.w	r3, r3, #4
 8001a8c:	9301      	str	r3, [sp, #4]
 8001a8e:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001a90:	6813      	ldr	r3, [r2, #0]
 8001a92:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001a96:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001a98:	6813      	ldr	r3, [r2, #0]
 8001a9a:	f043 030c 	orr.w	r3, r3, #12
 8001a9e:	6013      	str	r3, [r2, #0]
}
 8001aa0:	b003      	add	sp, #12
 8001aa2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001aa6:	4770      	bx	lr
 8001aa8:	40023800 	.word	0x40023800
 8001aac:	40021400 	.word	0x40021400
 8001ab0:	40020800 	.word	0x40020800

08001ab4 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001ab4:	b410      	push	{r4}
 8001ab6:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001ab8:	4a0e      	ldr	r2, [pc, #56]	; (8001af4 <MEAS_timer_init+0x40>)
 8001aba:	2000      	movs	r0, #0
 8001abc:	9001      	str	r0, [sp, #4]
 8001abe:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001ac0:	f041 0101 	orr.w	r1, r1, #1
 8001ac4:	6411      	str	r1, [r2, #64]	; 0x40
 8001ac6:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001ac8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001acc:	f002 0201 	and.w	r2, r2, #1
 8001ad0:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001ad2:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001ad6:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001ad8:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001ada:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001adc:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001ade:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001ae0:	4905      	ldr	r1, [pc, #20]	; (8001af8 <MEAS_timer_init+0x44>)
 8001ae2:	f042 0220 	orr.w	r2, r2, #32
 8001ae6:	605a      	str	r2, [r3, #4]
 8001ae8:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001aec:	b003      	add	sp, #12
 8001aee:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001af2:	4770      	bx	lr
 8001af4:	40023800 	.word	0x40023800
 8001af8:	e000e100 	.word	0xe000e100

08001afc <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001afc:	b410      	push	{r4}
 8001afe:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b00:	4a36      	ldr	r2, [pc, #216]	; (8001bdc <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b02:	4b37      	ldr	r3, [pc, #220]	; (8001be0 <MEAS_ADC3_scan_init+0xe4>)
 8001b04:	4c37      	ldr	r4, [pc, #220]	; (8001be4 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b06:	2100      	movs	r1, #0
 8001b08:	9100      	str	r1, [sp, #0]
 8001b0a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001b0c:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001b10:	6450      	str	r0, [r2, #68]	; 0x44
 8001b12:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001b14:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001b18:	9000      	str	r0, [sp, #0]
 8001b1a:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b1c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001b1e:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001b22:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001b24:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001b26:	f040 0004 	orr.w	r0, r0, #4
 8001b2a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001b2c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001b2e:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001b32:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001b34:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001b36:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001b3a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001b3c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001b3e:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001b42:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001b44:	6858      	ldr	r0, [r3, #4]
 8001b46:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001b4a:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001b4c:	6898      	ldr	r0, [r3, #8]
 8001b4e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b52:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001b54:	6898      	ldr	r0, [r3, #8]
 8001b56:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001b5a:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001b5c:	6898      	ldr	r0, [r3, #8]
 8001b5e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001b62:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001b64:	9101      	str	r1, [sp, #4]
 8001b66:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001b68:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001b6c:	6310      	str	r0, [r2, #48]	; 0x30
 8001b6e:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001b70:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001b74:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001b76:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001b7a:	9a01      	ldr	r2, [sp, #4]
 8001b7c:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001b80:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b82:	f022 0201 	bic.w	r2, r2, #1
 8001b86:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN);     // Wait for DMA to finish
 8001b88:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b8a:	07d2      	lsls	r2, r2, #31
 8001b8c:	d4fc      	bmi.n	8001b88 <MEAS_ADC3_scan_init+0x8c>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001b8e:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001b90:	4815      	ldr	r0, [pc, #84]	; (8001be8 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001b92:	4916      	ldr	r1, [pc, #88]	; (8001bec <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001b94:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001b98:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001b9a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b9c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ba0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001ba2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ba4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001ba8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001baa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bac:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001bb0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001bb2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bb4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bb8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001bba:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001bbc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001bc0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001bc2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001bc4:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001bc8:	f042 0210 	orr.w	r2, r2, #16
 8001bcc:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001bce:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001bd0:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001bd2:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001bd4:	b003      	add	sp, #12
 8001bd6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001bda:	4770      	bx	lr
 8001bdc:	40023800 	.word	0x40023800
 8001be0:	40012200 	.word	0x40012200
 8001be4:	e000e100 	.word	0xe000e100
 8001be8:	4001224c 	.word	0x4001224c
 8001bec:	20000328 	.word	0x20000328

08001bf0 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001bf0:	4b1b      	ldr	r3, [pc, #108]	; (8001c60 <DMA2_Stream1_IRQHandler+0x70>)
 8001bf2:	681a      	ldr	r2, [r3, #0]
 8001bf4:	0511      	lsls	r1, r2, #20
 8001bf6:	d400      	bmi.n	8001bfa <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001bf8:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001bfa:	4a1a      	ldr	r2, [pc, #104]	; (8001c64 <DMA2_Stream1_IRQHandler+0x74>)
 8001bfc:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001c00:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001c04:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001c08:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c0c:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001c10:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c12:	f022 0201 	bic.w	r2, r2, #1
 8001c16:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN);	  // Wait for DMA to finish
 8001c18:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c1a:	07d2      	lsls	r2, r2, #31
 8001c1c:	d4fc      	bmi.n	8001c18 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001c1e:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c20:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001c24:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001c28:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c2a:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c2c:	490e      	ldr	r1, [pc, #56]	; (8001c68 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001c2e:	f023 0301 	bic.w	r3, r3, #1
 8001c32:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c34:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001c36:	4b0d      	ldr	r3, [pc, #52]	; (8001c6c <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001c38:	f020 0001 	bic.w	r0, r0, #1
 8001c3c:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001c3e:	6888      	ldr	r0, [r1, #8]
 8001c40:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001c44:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001c46:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001c48:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001c4c:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001c4e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001c50:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001c54:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001c56:	6813      	ldr	r3, [r2, #0]
 8001c58:	f023 0301 	bic.w	r3, r3, #1
 8001c5c:	6013      	str	r3, [r2, #0]
}
 8001c5e:	4770      	bx	lr
 8001c60:	40026400 	.word	0x40026400
 8001c64:	e000e100 	.word	0xe000e100
 8001c68:	40012200 	.word	0x40012200
 8001c6c:	40023800 	.word	0x40023800

08001c70 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001c70:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001c72:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001c76:	2100      	movs	r1, #0
 8001c78:	480f      	ldr	r0, [pc, #60]	; (8001cb8 <MEAS_start_measure+0x48>)
 8001c7a:	f029 fa0c 	bl	802b096 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001c7e:	f7ff ff3d 	bl	8001afc <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001c82:	4a0e      	ldr	r2, [pc, #56]	; (8001cbc <MEAS_start_measure+0x4c>)
 8001c84:	490e      	ldr	r1, [pc, #56]	; (8001cc0 <MEAS_start_measure+0x50>)
 8001c86:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001c88:	480e      	ldr	r0, [pc, #56]	; (8001cc4 <MEAS_start_measure+0x54>)
 8001c8a:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001c8e:	f043 0301 	orr.w	r3, r3, #1
 8001c92:	6293      	str	r3, [r2, #40]	; 0x28
 8001c94:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c98:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001c9a:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001c9c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001ca0:	f043 0301 	orr.w	r3, r3, #1
 8001ca4:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001ca6:	680b      	ldr	r3, [r1, #0]
 8001ca8:	f043 0301 	orr.w	r3, r3, #1
 8001cac:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001cae:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001cb0:	07db      	lsls	r3, r3, #31
 8001cb2:	d4fc      	bmi.n	8001cae <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001cb4:	4800      	ldr	r0, [pc, #0]	; (8001cb8 <MEAS_start_measure+0x48>)
 8001cb6:	bd10      	pop	{r4, pc}
 8001cb8:	20000328 	.word	0x20000328
 8001cbc:	40026400 	.word	0x40026400
 8001cc0:	e000e100 	.word	0xe000e100
 8001cc4:	40012200 	.word	0x40012200

08001cc8 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001cc8:	2004      	movs	r0, #4
 8001cca:	4770      	bx	lr

08001ccc <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001ccc:	2040      	movs	r0, #64	; 0x40
 8001cce:	4770      	bx	lr

08001cd0 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001cd0:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001cd4:	4770      	bx	lr
 8001cd6:	bf00      	nop

08001cd8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001cd8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001cda:	4b0e      	ldr	r3, [pc, #56]	; (8001d14 <HAL_MspInit+0x3c>)
 8001cdc:	2200      	movs	r2, #0
 8001cde:	9200      	str	r2, [sp, #0]
 8001ce0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ce2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001ce6:	6459      	str	r1, [r3, #68]	; 0x44
 8001ce8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001cea:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001cee:	9000      	str	r0, [sp, #0]
 8001cf0:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001cf2:	9201      	str	r2, [sp, #4]
 8001cf4:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001cf6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001cfa:	6418      	str	r0, [r3, #64]	; 0x40
 8001cfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cfe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d02:	9301      	str	r3, [sp, #4]
 8001d04:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d06:	210f      	movs	r1, #15
 8001d08:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001d0c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d0e:	f008 b9ff 	b.w	800a110 <HAL_NVIC_SetPriority>
 8001d12:	bf00      	nop
 8001d14:	40023800 	.word	0x40023800

08001d18 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001d18:	4b0b      	ldr	r3, [pc, #44]	; (8001d48 <HAL_CRC_MspInit+0x30>)
 8001d1a:	6802      	ldr	r2, [r0, #0]
 8001d1c:	429a      	cmp	r2, r3
 8001d1e:	d000      	beq.n	8001d22 <HAL_CRC_MspInit+0xa>
 8001d20:	4770      	bx	lr
{
 8001d22:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001d24:	2200      	movs	r2, #0
 8001d26:	9201      	str	r2, [sp, #4]
 8001d28:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001d2c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001d30:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001d34:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001d38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d3a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001d3e:	9301      	str	r3, [sp, #4]
 8001d40:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001d42:	b002      	add	sp, #8
 8001d44:	4770      	bx	lr
 8001d46:	bf00      	nop
 8001d48:	40023000 	.word	0x40023000

08001d4c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001d4c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001d50:	4b2e      	ldr	r3, [pc, #184]	; (8001e0c <HAL_I2C_MspInit+0xc0>)
 8001d52:	6802      	ldr	r2, [r0, #0]
{
 8001d54:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d56:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001d58:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d5a:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001d5e:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001d62:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001d64:	d002      	beq.n	8001d6c <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001d66:	b00a      	add	sp, #40	; 0x28
 8001d68:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d6c:	4d28      	ldr	r5, [pc, #160]	; (8001e10 <HAL_I2C_MspInit+0xc4>)
 8001d6e:	9401      	str	r4, [sp, #4]
 8001d70:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d72:	4828      	ldr	r0, [pc, #160]	; (8001e14 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d74:	f043 0304 	orr.w	r3, r3, #4
 8001d78:	632b      	str	r3, [r5, #48]	; 0x30
 8001d7a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d7c:	f003 0304 	and.w	r3, r3, #4
 8001d80:	9301      	str	r3, [sp, #4]
 8001d82:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d84:	9402      	str	r4, [sp, #8]
 8001d86:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d88:	f043 0301 	orr.w	r3, r3, #1
 8001d8c:	632b      	str	r3, [r5, #48]	; 0x30
 8001d8e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d90:	f003 0301 	and.w	r3, r3, #1
 8001d94:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001d96:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001d9a:	f04f 0801 	mov.w	r8, #1
 8001d9e:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001da2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001da4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001da6:	2312      	movs	r3, #18
 8001da8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001dac:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001db0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001db2:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001db4:	f008 fa22 	bl	800a1fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001db8:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001dba:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001dbe:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dc0:	4815      	ldr	r0, [pc, #84]	; (8001e18 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dc2:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001dc4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001dc8:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dcc:	f008 fa16 	bl	800a1fc <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001dd0:	9403      	str	r4, [sp, #12]
 8001dd2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001dd4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001dd8:	642b      	str	r3, [r5, #64]	; 0x40
 8001dda:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001ddc:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001de0:	4622      	mov	r2, r4
 8001de2:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001de4:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001de6:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001de8:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001dea:	f008 f991 	bl	800a110 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001dee:	2048      	movs	r0, #72	; 0x48
 8001df0:	f008 f9cc 	bl	800a18c <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001df4:	6a2b      	ldr	r3, [r5, #32]
 8001df6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001dfa:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001dfc:	6a2b      	ldr	r3, [r5, #32]
 8001dfe:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001e02:	622b      	str	r3, [r5, #32]
}
 8001e04:	b00a      	add	sp, #40	; 0x28
 8001e06:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001e0a:	bf00      	nop
 8001e0c:	40005c00 	.word	0x40005c00
 8001e10:	40023800 	.word	0x40023800
 8001e14:	40020800 	.word	0x40020800
 8001e18:	40020000 	.word	0x40020000

08001e1c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001e1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e20:	4604      	mov	r4, r0
 8001e22:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e24:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001e26:	2230      	movs	r2, #48	; 0x30
 8001e28:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e2a:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001e2e:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001e32:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001e34:	f029 f92f 	bl	802b096 <memset>
  if(hltdc->Instance==LTDC)
 8001e38:	4b67      	ldr	r3, [pc, #412]	; (8001fd8 <HAL_LTDC_MspInit+0x1bc>)
 8001e3a:	6822      	ldr	r2, [r4, #0]
 8001e3c:	429a      	cmp	r2, r3
 8001e3e:	d002      	beq.n	8001e46 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001e40:	b01a      	add	sp, #104	; 0x68
 8001e42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001e46:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001e48:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001e4a:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001e4c:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e4e:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001e50:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001e54:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001e56:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001e58:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e5a:	f00a fc39 	bl	800c6d0 <HAL_RCCEx_PeriphCLKConfig>
 8001e5e:	2800      	cmp	r0, #0
 8001e60:	f040 80b7 	bne.w	8001fd2 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001e64:	4b5d      	ldr	r3, [pc, #372]	; (8001fdc <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e66:	485e      	ldr	r0, [pc, #376]	; (8001fe0 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001e68:	2400      	movs	r4, #0
 8001e6a:	9401      	str	r4, [sp, #4]
 8001e6c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001e6e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001e72:	645a      	str	r2, [r3, #68]	; 0x44
 8001e74:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001e76:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001e7a:	9201      	str	r2, [sp, #4]
 8001e7c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e7e:	9402      	str	r4, [sp, #8]
 8001e80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e82:	f042 0220 	orr.w	r2, r2, #32
 8001e86:	631a      	str	r2, [r3, #48]	; 0x30
 8001e88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e8a:	f002 0220 	and.w	r2, r2, #32
 8001e8e:	9202      	str	r2, [sp, #8]
 8001e90:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e92:	9403      	str	r4, [sp, #12]
 8001e94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e96:	f042 0201 	orr.w	r2, r2, #1
 8001e9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e9e:	f002 0201 	and.w	r2, r2, #1
 8001ea2:	9203      	str	r2, [sp, #12]
 8001ea4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ea6:	9404      	str	r4, [sp, #16]
 8001ea8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eaa:	f042 0202 	orr.w	r2, r2, #2
 8001eae:	631a      	str	r2, [r3, #48]	; 0x30
 8001eb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eb2:	f002 0202 	and.w	r2, r2, #2
 8001eb6:	9204      	str	r2, [sp, #16]
 8001eb8:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001eba:	9405      	str	r4, [sp, #20]
 8001ebc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ebe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001ec2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ec4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ec6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001eca:	9205      	str	r2, [sp, #20]
 8001ecc:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ece:	9406      	str	r4, [sp, #24]
 8001ed0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ed2:	f042 0204 	orr.w	r2, r2, #4
 8001ed6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ed8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eda:	f002 0204 	and.w	r2, r2, #4
 8001ede:	9206      	str	r2, [sp, #24]
 8001ee0:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ee2:	9407      	str	r4, [sp, #28]
 8001ee4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ee6:	f042 0208 	orr.w	r2, r2, #8
 8001eea:	631a      	str	r2, [r3, #48]	; 0x30
 8001eec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eee:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001ef2:	2600      	movs	r6, #0
 8001ef4:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ef6:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ef8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001efa:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001efc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001f00:	2302      	movs	r3, #2
 8001f02:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f06:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f0a:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f0c:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f0e:	f008 f975 	bl	800a1fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f12:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f14:	f641 0258 	movw	r2, #6232	; 0x1858
 8001f18:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f1a:	4832      	ldr	r0, [pc, #200]	; (8001fe4 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f1c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f1e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f22:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f26:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f2a:	f008 f967 	bl	800a1fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f2e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001f30:	2203      	movs	r2, #3
 8001f32:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f34:	482c      	ldr	r0, [pc, #176]	; (8001fe8 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f36:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001f3a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f3e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f42:	f008 f95b 	bl	800a1fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f46:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001f48:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001f4c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f4e:	4826      	ldr	r0, [pc, #152]	; (8001fe8 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f50:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001f52:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f56:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f5a:	f008 f94f 	bl	800a1fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f5e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001f60:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001f64:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f66:	4821      	ldr	r0, [pc, #132]	; (8001fec <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f68:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001f6a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f6e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f72:	f008 f943 	bl	800a1fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f76:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001f78:	22c0      	movs	r2, #192	; 0xc0
 8001f7a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f7c:	481c      	ldr	r0, [pc, #112]	; (8001ff0 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f7e:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001f80:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f84:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f88:	f008 f938 	bl	800a1fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f8c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001f8e:	2208      	movs	r2, #8
 8001f90:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f92:	4818      	ldr	r0, [pc, #96]	; (8001ff4 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f94:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001f96:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f9a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f9e:	f008 f92d 	bl	800a1fc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001fa2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fa4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001fa6:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001faa:	4810      	ldr	r0, [pc, #64]	; (8001fec <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001fac:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001fb0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001fb4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fb8:	f008 f920 	bl	800a1fc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001fbc:	4622      	mov	r2, r4
 8001fbe:	2105      	movs	r1, #5
 8001fc0:	2058      	movs	r0, #88	; 0x58
 8001fc2:	f008 f8a5 	bl	800a110 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001fc6:	2058      	movs	r0, #88	; 0x58
 8001fc8:	f008 f8e0 	bl	800a18c <HAL_NVIC_EnableIRQ>
}
 8001fcc:	b01a      	add	sp, #104	; 0x68
 8001fce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001fd2:	f7ff fd39 	bl	8001a48 <Error_Handler>
 8001fd6:	e745      	b.n	8001e64 <HAL_LTDC_MspInit+0x48>
 8001fd8:	40016800 	.word	0x40016800
 8001fdc:	40023800 	.word	0x40023800
 8001fe0:	40021400 	.word	0x40021400
 8001fe4:	40020000 	.word	0x40020000
 8001fe8:	40020400 	.word	0x40020400
 8001fec:	40021800 	.word	0x40021800
 8001ff0:	40020800 	.word	0x40020800
 8001ff4:	40020c00 	.word	0x40020c00

08001ff8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ff8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ffa:	4a1b      	ldr	r2, [pc, #108]	; (8002068 <HAL_SPI_MspInit+0x70>)
 8001ffc:	6801      	ldr	r1, [r0, #0]
{
 8001ffe:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002000:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002002:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002004:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002008:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800200c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800200e:	d001      	beq.n	8002014 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002010:	b008      	add	sp, #32
 8002012:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002014:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002018:	9300      	str	r3, [sp, #0]
 800201a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800201c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002020:	6450      	str	r0, [r2, #68]	; 0x44
 8002022:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002024:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002028:	9000      	str	r0, [sp, #0]
 800202a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800202c:	9301      	str	r3, [sp, #4]
 800202e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002030:	480e      	ldr	r0, [pc, #56]	; (800206c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002032:	f043 0320 	orr.w	r3, r3, #32
 8002036:	6313      	str	r3, [r2, #48]	; 0x30
 8002038:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800203a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002060 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800203e:	f003 0320 	and.w	r3, r3, #32
 8002042:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002044:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002046:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002048:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800204a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800204e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002052:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002054:	f008 f8d2 	bl	800a1fc <HAL_GPIO_Init>
}
 8002058:	b008      	add	sp, #32
 800205a:	bd10      	pop	{r4, pc}
 800205c:	f3af 8000 	nop.w
 8002060:	00000380 	.word	0x00000380
 8002064:	00000002 	.word	0x00000002
 8002068:	40015000 	.word	0x40015000
 800206c:	40021400 	.word	0x40021400

08002070 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002070:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 8002072:	4a21      	ldr	r2, [pc, #132]	; (80020f8 <HAL_TIM_Base_MspInit+0x88>)
 8002074:	6803      	ldr	r3, [r0, #0]
 8002076:	4293      	cmp	r3, r2
{
 8002078:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 800207a:	d008      	beq.n	800208e <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800207c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002080:	d023      	beq.n	80020ca <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002082:	4a1e      	ldr	r2, [pc, #120]	; (80020fc <HAL_TIM_Base_MspInit+0x8c>)
 8002084:	4293      	cmp	r3, r2
 8002086:	d011      	beq.n	80020ac <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002088:	b005      	add	sp, #20
 800208a:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 800208e:	4b1c      	ldr	r3, [pc, #112]	; (8002100 <HAL_TIM_Base_MspInit+0x90>)
 8002090:	2200      	movs	r2, #0
 8002092:	9201      	str	r2, [sp, #4]
 8002094:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002096:	f042 0201 	orr.w	r2, r2, #1
 800209a:	645a      	str	r2, [r3, #68]	; 0x44
 800209c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800209e:	f003 0301 	and.w	r3, r3, #1
 80020a2:	9301      	str	r3, [sp, #4]
 80020a4:	9b01      	ldr	r3, [sp, #4]
}
 80020a6:	b005      	add	sp, #20
 80020a8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 80020ac:	4b14      	ldr	r3, [pc, #80]	; (8002100 <HAL_TIM_Base_MspInit+0x90>)
 80020ae:	2200      	movs	r2, #0
 80020b0:	9203      	str	r2, [sp, #12]
 80020b2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80020b4:	f042 0202 	orr.w	r2, r2, #2
 80020b8:	641a      	str	r2, [r3, #64]	; 0x40
 80020ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020bc:	f003 0302 	and.w	r3, r3, #2
 80020c0:	9303      	str	r3, [sp, #12]
 80020c2:	9b03      	ldr	r3, [sp, #12]
}
 80020c4:	b005      	add	sp, #20
 80020c6:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 80020ca:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80020ce:	2200      	movs	r2, #0
 80020d0:	9202      	str	r2, [sp, #8]
 80020d2:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80020d4:	f041 0101 	orr.w	r1, r1, #1
 80020d8:	6419      	str	r1, [r3, #64]	; 0x40
 80020da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020dc:	f003 0301 	and.w	r3, r3, #1
 80020e0:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80020e2:	201c      	movs	r0, #28
 80020e4:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 80020e6:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80020e8:	f008 f812 	bl	800a110 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80020ec:	201c      	movs	r0, #28
}
 80020ee:	b005      	add	sp, #20
 80020f0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80020f4:	f008 b84a 	b.w	800a18c <HAL_NVIC_EnableIRQ>
 80020f8:	40010000 	.word	0x40010000
 80020fc:	40000400 	.word	0x40000400
 8002100:	40023800 	.word	0x40023800

08002104 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002104:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002106:	4b2b      	ldr	r3, [pc, #172]	; (80021b4 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002108:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800210a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800210c:	2200      	movs	r2, #0
 800210e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002110:	2c00      	cmp	r4, #0
 8002112:	d14c      	bne.n	80021ae <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002114:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002116:	4a28      	ldr	r2, [pc, #160]	; (80021b8 <HAL_SDRAM_MspInit+0xb4>)
 8002118:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 800211a:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800211c:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800211e:	4827      	ldr	r0, [pc, #156]	; (80021bc <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002120:	433b      	orrs	r3, r7
 8002122:	6393      	str	r3, [r2, #56]	; 0x38
 8002124:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002126:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002128:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800212a:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800212c:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002130:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002132:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002134:	2302      	movs	r3, #2
 8002136:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800213a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800213e:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002140:	f008 f85c 	bl	800a1fc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002144:	481e      	ldr	r0, [pc, #120]	; (80021c0 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002146:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002148:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800214a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800214c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002150:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002154:	f008 f852 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002158:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800215c:	4819      	ldr	r0, [pc, #100]	; (80021c4 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800215e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002160:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002162:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002166:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800216a:	f008 f847 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800216e:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002172:	4815      	ldr	r0, [pc, #84]	; (80021c8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002174:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002176:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002178:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800217c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002180:	f008 f83c 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002184:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002188:	4810      	ldr	r0, [pc, #64]	; (80021cc <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800218a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800218c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800218e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002192:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002196:	f008 f831 	bl	800a1fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800219a:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800219c:	480c      	ldr	r0, [pc, #48]	; (80021d0 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800219e:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80021a0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021a2:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80021a6:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80021a8:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80021aa:	f008 f827 	bl	800a1fc <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80021ae:	b009      	add	sp, #36	; 0x24
 80021b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021b2:	bf00      	nop
 80021b4:	20000728 	.word	0x20000728
 80021b8:	40023800 	.word	0x40023800
 80021bc:	40021400 	.word	0x40021400
 80021c0:	40020800 	.word	0x40020800
 80021c4:	40021800 	.word	0x40021800
 80021c8:	40021000 	.word	0x40021000
 80021cc:	40020c00 	.word	0x40020c00
 80021d0:	40020400 	.word	0x40020400

080021d4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80021d4:	b570      	push	{r4, r5, r6, lr}
 80021d6:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80021d8:	4b23      	ldr	r3, [pc, #140]	; (8002268 <HAL_InitTick+0x94>)
 80021da:	2200      	movs	r2, #0
 80021dc:	9202      	str	r2, [sp, #8]
 80021de:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80021e0:	f042 0210 	orr.w	r2, r2, #16
 80021e4:	641a      	str	r2, [r3, #64]	; 0x40
 80021e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021e8:	f003 0310 	and.w	r3, r3, #16
 80021ec:	9302      	str	r3, [sp, #8]
{
 80021ee:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80021f0:	a901      	add	r1, sp, #4
 80021f2:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80021f4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80021f6:	f00a fa49 	bl	800c68c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80021fa:	9b06      	ldr	r3, [sp, #24]
 80021fc:	b9d3      	cbnz	r3, 8002234 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80021fe:	f00a fa35 	bl	800c66c <HAL_RCC_GetPCLK1Freq>
 8002202:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002204:	4a19      	ldr	r2, [pc, #100]	; (800226c <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002206:	4c1a      	ldr	r4, [pc, #104]	; (8002270 <HAL_InitTick+0x9c>)
 8002208:	491a      	ldr	r1, [pc, #104]	; (8002274 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800220a:	fba2 2303 	umull	r2, r3, r2, r3
 800220e:	0c9b      	lsrs	r3, r3, #18
 8002210:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8002212:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002214:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002218:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800221a:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800221e:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002220:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002222:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002224:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002226:	f00b f861 	bl	800d2ec <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800222a:	4606      	mov	r6, r0
 800222c:	b130      	cbz	r0, 800223c <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800222e:	4630      	mov	r0, r6
 8002230:	b008      	add	sp, #32
 8002232:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002234:	f00a fa1a 	bl	800c66c <HAL_RCC_GetPCLK1Freq>
 8002238:	0043      	lsls	r3, r0, #1
 800223a:	e7e3      	b.n	8002204 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 800223c:	4620      	mov	r0, r4
 800223e:	f00b f8e3 	bl	800d408 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002242:	4606      	mov	r6, r0
 8002244:	2800      	cmp	r0, #0
 8002246:	d1f2      	bne.n	800222e <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002248:	2036      	movs	r0, #54	; 0x36
 800224a:	f007 ff9f 	bl	800a18c <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800224e:	2d0f      	cmp	r5, #15
 8002250:	d901      	bls.n	8002256 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002252:	2601      	movs	r6, #1
 8002254:	e7eb      	b.n	800222e <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002256:	4632      	mov	r2, r6
 8002258:	4629      	mov	r1, r5
 800225a:	2036      	movs	r0, #54	; 0x36
 800225c:	f007 ff58 	bl	800a110 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002260:	4b05      	ldr	r3, [pc, #20]	; (8002278 <HAL_InitTick+0xa4>)
 8002262:	601d      	str	r5, [r3, #0]
 8002264:	e7e3      	b.n	800222e <HAL_InitTick+0x5a>
 8002266:	bf00      	nop
 8002268:	40023800 	.word	0x40023800
 800226c:	431bde83 	.word	0x431bde83
 8002270:	2000072c 	.word	0x2000072c
 8002274:	40001000 	.word	0x40001000
 8002278:	20000080 	.word	0x20000080

0800227c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800227c:	4770      	bx	lr
 800227e:	bf00      	nop

08002280 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002280:	e7fe      	b.n	8002280 <HardFault_Handler>
 8002282:	bf00      	nop

08002284 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002284:	e7fe      	b.n	8002284 <MemManage_Handler>
 8002286:	bf00      	nop

08002288 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002288:	e7fe      	b.n	8002288 <BusFault_Handler>
 800228a:	bf00      	nop

0800228c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800228c:	e7fe      	b.n	800228c <UsageFault_Handler>
 800228e:	bf00      	nop

08002290 <DebugMon_Handler>:
 8002290:	4770      	bx	lr
 8002292:	bf00      	nop

08002294 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002294:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002296:	20c8      	movs	r0, #200	; 0xc8
 8002298:	f007 ff16 	bl	800a0c8 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800229c:	4804      	ldr	r0, [pc, #16]	; (80022b0 <EXTI3_IRQHandler+0x1c>)
 800229e:	2200      	movs	r2, #0
 80022a0:	2120      	movs	r1, #32
 80022a2:	f008 f8ef 	bl	800a484 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80022a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80022aa:	2008      	movs	r0, #8
 80022ac:	f008 b8fa 	b.w	800a4a4 <HAL_GPIO_EXTI_IRQHandler>
 80022b0:	40021000 	.word	0x40021000

080022b4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80022b4:	4801      	ldr	r0, [pc, #4]	; (80022bc <TIM6_DAC_IRQHandler+0x8>)
 80022b6:	f00b b8eb 	b.w	800d490 <HAL_TIM_IRQHandler>
 80022ba:	bf00      	nop
 80022bc:	2000072c 	.word	0x2000072c

080022c0 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80022c0:	4801      	ldr	r0, [pc, #4]	; (80022c8 <I2C3_EV_IRQHandler+0x8>)
 80022c2:	f009 b84f 	b.w	800b364 <HAL_I2C_EV_IRQHandler>
 80022c6:	bf00      	nop
 80022c8:	200001a0 	.word	0x200001a0

080022cc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80022cc:	4801      	ldr	r0, [pc, #4]	; (80022d4 <LTDC_IRQHandler+0x8>)
 80022ce:	f009 bdc3 	b.w	800be58 <HAL_LTDC_IRQHandler>
 80022d2:	bf00      	nop
 80022d4:	200001f4 	.word	0x200001f4

080022d8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80022d8:	2001      	movs	r0, #1
 80022da:	4770      	bx	lr

080022dc <_kill>:

int _kill(int pid, int sig)
{
 80022dc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80022de:	f028 ffd3 	bl	802b288 <__errno>
 80022e2:	2316      	movs	r3, #22
 80022e4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80022e6:	f04f 30ff 	mov.w	r0, #4294967295
 80022ea:	bd08      	pop	{r3, pc}

080022ec <_exit>:

void _exit (int status)
{
 80022ec:	b508      	push	{r3, lr}
	errno = EINVAL;
 80022ee:	f028 ffcb 	bl	802b288 <__errno>
 80022f2:	2316      	movs	r3, #22
 80022f4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80022f6:	e7fe      	b.n	80022f6 <_exit+0xa>

080022f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80022f8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80022fa:	1e16      	subs	r6, r2, #0
 80022fc:	dd07      	ble.n	800230e <_read+0x16>
 80022fe:	460c      	mov	r4, r1
 8002300:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002302:	f3af 8000 	nop.w
 8002306:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800230a:	42a5      	cmp	r5, r4
 800230c:	d1f9      	bne.n	8002302 <_read+0xa>
	}

return len;
}
 800230e:	4630      	mov	r0, r6
 8002310:	bd70      	pop	{r4, r5, r6, pc}
 8002312:	bf00      	nop

08002314 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002314:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002316:	1e16      	subs	r6, r2, #0
 8002318:	dd07      	ble.n	800232a <_write+0x16>
 800231a:	460c      	mov	r4, r1
 800231c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 800231e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002322:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002326:	42ac      	cmp	r4, r5
 8002328:	d1f9      	bne.n	800231e <_write+0xa>
	}
	return len;
}
 800232a:	4630      	mov	r0, r6
 800232c:	bd70      	pop	{r4, r5, r6, pc}
 800232e:	bf00      	nop

08002330 <_close>:

int _close(int file)
{
	return -1;
}
 8002330:	f04f 30ff 	mov.w	r0, #4294967295
 8002334:	4770      	bx	lr
 8002336:	bf00      	nop

08002338 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002338:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800233c:	604b      	str	r3, [r1, #4]
	return 0;
}
 800233e:	2000      	movs	r0, #0
 8002340:	4770      	bx	lr
 8002342:	bf00      	nop

08002344 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002344:	2001      	movs	r0, #1
 8002346:	4770      	bx	lr

08002348 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002348:	2000      	movs	r0, #0
 800234a:	4770      	bx	lr

0800234c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800234c:	4a0b      	ldr	r2, [pc, #44]	; (800237c <_sbrk+0x30>)
{
 800234e:	b508      	push	{r3, lr}
 8002350:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002352:	6810      	ldr	r0, [r2, #0]
 8002354:	b128      	cbz	r0, 8002362 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002356:	4403      	add	r3, r0
 8002358:	4669      	mov	r1, sp
 800235a:	428b      	cmp	r3, r1
 800235c:	d807      	bhi.n	800236e <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800235e:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002360:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002362:	4807      	ldr	r0, [pc, #28]	; (8002380 <_sbrk+0x34>)
 8002364:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002366:	4403      	add	r3, r0
 8002368:	4669      	mov	r1, sp
 800236a:	428b      	cmp	r3, r1
 800236c:	d9f7      	bls.n	800235e <_sbrk+0x12>
		errno = ENOMEM;
 800236e:	f028 ff8b 	bl	802b288 <__errno>
 8002372:	230c      	movs	r3, #12
 8002374:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002376:	f04f 30ff 	mov.w	r0, #4294967295
}
 800237a:	bd08      	pop	{r3, pc}
 800237c:	20000774 	.word	0x20000774
 8002380:	200139e0 	.word	0x200139e0

08002384 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8002384:	4770      	bx	lr
 8002386:	bf00      	nop

08002388 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8002388:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800238a:	f000 fba9 	bl	8002ae0 <touchgfx_components_init>
  touchgfx_init();
}
 800238e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8002392:	f000 bb33 	b.w	80029fc <touchgfx_init>
 8002396:	bf00      	nop

08002398 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8002398:	f000 bba4 	b.w	8002ae4 <touchgfx_taskEntry>

0800239c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800239c:	4770      	bx	lr

0800239e <_ZN20STM32TouchControllerD0Ev>:
 800239e:	b510      	push	{r4, lr}
 80023a0:	2104      	movs	r1, #4
 80023a2:	4604      	mov	r4, r0
 80023a4:	f027 fd8b 	bl	8029ebe <_ZdlPvj>
 80023a8:	4620      	mov	r0, r4
 80023aa:	bd10      	pop	{r4, pc}

080023ac <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80023ac:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80023ae:	4b0c      	ldr	r3, [pc, #48]	; (80023e0 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80023b0:	4c0c      	ldr	r4, [pc, #48]	; (80023e4 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80023b2:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80023b4:	4b0c      	ldr	r3, [pc, #48]	; (80023e8 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80023b6:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80023b8:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80023ba:	6863      	ldr	r3, [r4, #4]
 80023bc:	4798      	blx	r3
 80023be:	f640 0311 	movw	r3, #2065	; 0x811
 80023c2:	4298      	cmp	r0, r3
 80023c4:	d10a      	bne.n	80023dc <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80023c6:	4d09      	ldr	r5, [pc, #36]	; (80023ec <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80023c8:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80023ca:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80023cc:	2082      	movs	r0, #130	; 0x82
 80023ce:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80023d0:	682b      	ldr	r3, [r5, #0]
 80023d2:	2082      	movs	r0, #130	; 0x82
 80023d4:	68db      	ldr	r3, [r3, #12]
 80023d6:	4798      	blx	r3
 80023d8:	2000      	movs	r0, #0
    }

    return ret;
}
 80023da:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80023dc:	2001      	movs	r0, #1
 80023de:	e7fc      	b.n	80023da <_Z11BSP_TS_Inittt+0x2e>
 80023e0:	20000778 	.word	0x20000778
 80023e4:	20000050 	.word	0x20000050
 80023e8:	2000077a 	.word	0x2000077a
 80023ec:	2000077c 	.word	0x2000077c

080023f0 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80023f0:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80023f4:	20f0      	movs	r0, #240	; 0xf0
 80023f6:	f7ff bfd9 	b.w	80023ac <_Z11BSP_TS_Inittt>
	...

080023fc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80023fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80023fe:	4d33      	ldr	r5, [pc, #204]	; (80024cc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8002400:	682b      	ldr	r3, [r5, #0]
{
 8002402:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002404:	691b      	ldr	r3, [r3, #16]
 8002406:	2082      	movs	r0, #130	; 0x82
 8002408:	4798      	blx	r3
 800240a:	b280      	uxth	r0, r0
 800240c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800240e:	2800      	cmp	r0, #0
 8002410:	d04a      	beq.n	80024a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8002412:	682b      	ldr	r3, [r5, #0]
 8002414:	f10d 0206 	add.w	r2, sp, #6
 8002418:	695b      	ldr	r3, [r3, #20]
 800241a:	a901      	add	r1, sp, #4
 800241c:	2082      	movs	r0, #130	; 0x82
 800241e:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8002420:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002424:	f640 6274 	movw	r2, #3700	; 0xe74
 8002428:	4293      	cmp	r3, r2
 800242a:	d93f      	bls.n	80024ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 800242c:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8002430:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002434:	1ad2      	subs	r2, r2, r3
 8002436:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8002438:	2a0a      	cmp	r2, #10
 800243a:	d93d      	bls.n	80024b8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 800243c:	230b      	movs	r3, #11
 800243e:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8002442:	4b23      	ldr	r3, [pc, #140]	; (80024d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8002444:	881b      	ldrh	r3, [r3, #0]
 8002446:	429a      	cmp	r2, r3
 8002448:	d901      	bls.n	800244e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 800244a:	3b01      	subs	r3, #1
 800244c:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800244e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002452:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002456:	428b      	cmp	r3, r1
 8002458:	d830      	bhi.n	80024bc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 800245a:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800245e:	330e      	adds	r3, #14
 8002460:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8002462:	210f      	movs	r1, #15
 8002464:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002468:	491a      	ldr	r1, [pc, #104]	; (80024d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 800246a:	8809      	ldrh	r1, [r1, #0]
 800246c:	428b      	cmp	r3, r1
 800246e:	d901      	bls.n	8002474 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002470:	3901      	subs	r1, #1
 8002472:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002474:	4e18      	ldr	r6, [pc, #96]	; (80024d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002476:	4d19      	ldr	r5, [pc, #100]	; (80024dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002478:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 800247a:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 800247c:	4283      	cmp	r3, r0
 800247e:	b281      	uxth	r1, r0
 8002480:	bf8c      	ite	hi
 8002482:	1a59      	subhi	r1, r3, r1
 8002484:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002486:	b2b8      	uxth	r0, r7
 8002488:	42ba      	cmp	r2, r7
 800248a:	bf8c      	ite	hi
 800248c:	1a10      	subhi	r0, r2, r0
 800248e:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002490:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002492:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8002494:	4401      	add	r1, r0
 8002496:	2905      	cmp	r1, #5
        {
            _x = x;
 8002498:	bfc8      	it	gt
 800249a:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 800249c:	6833      	ldr	r3, [r6, #0]
            _y = y;
 800249e:	bfc8      	it	gt
 80024a0:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80024a2:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80024a4:	682b      	ldr	r3, [r5, #0]
 80024a6:	80a3      	strh	r3, [r4, #4]
    }
}
 80024a8:	b003      	add	sp, #12
 80024aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80024ac:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80024ae:	bf9c      	itt	ls
 80024b0:	23b4      	movls	r3, #180	; 0xb4
 80024b2:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80024b6:	e7bb      	b.n	8002430 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80024b8:	2200      	movs	r2, #0
 80024ba:	e7c8      	b.n	800244e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80024bc:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80024c0:	3308      	adds	r3, #8
 80024c2:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80024c4:	2b0e      	cmp	r3, #14
 80024c6:	d8cc      	bhi.n	8002462 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80024c8:	2300      	movs	r3, #0
 80024ca:	e7d3      	b.n	8002474 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80024cc:	2000077c 	.word	0x2000077c
 80024d0:	2000077a 	.word	0x2000077a
 80024d4:	20000778 	.word	0x20000778
 80024d8:	20000780 	.word	0x20000780
 80024dc:	20000784 	.word	0x20000784

080024e0 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80024e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80024e2:	4668      	mov	r0, sp
{
 80024e4:	460d      	mov	r5, r1
 80024e6:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80024e8:	f7ff ff88 	bl	80023fc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 80024ec:	f8bd 0000 	ldrh.w	r0, [sp]
 80024f0:	b148      	cbz	r0, 8002506 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 80024f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80024f6:	602b      	str	r3, [r5, #0]
        y = state.Y;
 80024f8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80024fc:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 80024fe:	4b03      	ldr	r3, [pc, #12]	; (800250c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002500:	223c      	movs	r2, #60	; 0x3c
 8002502:	601a      	str	r2, [r3, #0]
        return true;
 8002504:	2001      	movs	r0, #1
}
 8002506:	b003      	add	sp, #12
 8002508:	bd30      	pop	{r4, r5, pc}
 800250a:	bf00      	nop
 800250c:	2000000c 	.word	0x2000000c

08002510 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002510:	b110      	cbz	r0, 8002518 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002512:	2802      	cmp	r0, #2
 8002514:	d009      	beq.n	800252a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002516:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002518:	4b07      	ldr	r3, [pc, #28]	; (8002538 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 800251a:	681a      	ldr	r2, [r3, #0]
 800251c:	fab2 f282 	clz	r2, r2
 8002520:	0952      	lsrs	r2, r2, #5
 8002522:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002524:	4805      	ldr	r0, [pc, #20]	; (800253c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002526:	f007 bfad 	b.w	800a484 <HAL_GPIO_WritePin>
 800252a:	4b03      	ldr	r3, [pc, #12]	; (8002538 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 800252c:	689a      	ldr	r2, [r3, #8]
 800252e:	fab2 f282 	clz	r2, r2
 8002532:	0952      	lsrs	r2, r2, #5
 8002534:	2110      	movs	r1, #16
 8002536:	e7f5      	b.n	8002524 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002538:	20000788 	.word	0x20000788
 800253c:	40021000 	.word	0x40021000

08002540 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002540:	b110      	cbz	r0, 8002548 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002542:	2802      	cmp	r0, #2
 8002544:	d009      	beq.n	800255a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002546:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002548:	4b07      	ldr	r3, [pc, #28]	; (8002568 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 800254a:	681a      	ldr	r2, [r3, #0]
 800254c:	3a00      	subs	r2, #0
 800254e:	bf18      	it	ne
 8002550:	2201      	movne	r2, #1
 8002552:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002554:	4805      	ldr	r0, [pc, #20]	; (800256c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002556:	f007 bf95 	b.w	800a484 <HAL_GPIO_WritePin>
 800255a:	4b03      	ldr	r3, [pc, #12]	; (8002568 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 800255c:	689a      	ldr	r2, [r3, #8]
 800255e:	3a00      	subs	r2, #0
 8002560:	bf18      	it	ne
 8002562:	2201      	movne	r2, #1
 8002564:	2110      	movs	r1, #16
 8002566:	e7f5      	b.n	8002554 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002568:	20000788 	.word	0x20000788
 800256c:	40021000 	.word	0x40021000

08002570 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002570:	b110      	cbz	r0, 8002578 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002572:	2802      	cmp	r0, #2
 8002574:	d004      	beq.n	8002580 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002576:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002578:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800257a:	4802      	ldr	r0, [pc, #8]	; (8002584 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 800257c:	f007 bf86 	b.w	800a48c <HAL_GPIO_TogglePin>
 8002580:	2110      	movs	r1, #16
 8002582:	e7fa      	b.n	800257a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002584:	40021000 	.word	0x40021000

08002588 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002588:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800258a:	b130      	cbz	r0, 800259a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 800258c:	2802      	cmp	r0, #2
 800258e:	d009      	beq.n	80025a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002590:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002592:	1e43      	subs	r3, r0, #1
 8002594:	4258      	negs	r0, r3
 8002596:	4158      	adcs	r0, r3
 8002598:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800259a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800259c:	4802      	ldr	r0, [pc, #8]	; (80025a8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 800259e:	f007 ff6b 	bl	800a478 <HAL_GPIO_ReadPin>
        break;
 80025a2:	e7f6      	b.n	8002592 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80025a4:	2110      	movs	r1, #16
 80025a6:	e7f9      	b.n	800259c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80025a8:	40021000 	.word	0x40021000

080025ac <_ZN8touchgfx4GPIO4initEv>:
{
 80025ac:	b570      	push	{r4, r5, r6, lr}
 80025ae:	4d08      	ldr	r5, [pc, #32]	; (80025d0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80025b0:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80025b2:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80025b4:	b2e0      	uxtb	r0, r4
 80025b6:	f7ff ffe7 	bl	8002588 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80025ba:	b118      	cbz	r0, 80025c4 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80025bc:	682b      	ldr	r3, [r5, #0]
 80025be:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80025c0:	bf18      	it	ne
 80025c2:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80025c4:	3401      	adds	r4, #1
 80025c6:	2c05      	cmp	r4, #5
 80025c8:	f105 0504 	add.w	r5, r5, #4
 80025cc:	d1f2      	bne.n	80025b4 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80025ce:	bd70      	pop	{r4, r5, r6, pc}
 80025d0:	20000788 	.word	0x20000788

080025d4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80025d4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80025d6:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80025da:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80025de:	4770      	bx	lr

080025e0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80025e0:	2000      	movs	r0, #0
 80025e2:	4770      	bx	lr

080025e4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80025e4:	4b03      	ldr	r3, [pc, #12]	; (80025f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80025e6:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80025e8:	3900      	subs	r1, #0
 80025ea:	bf18      	it	ne
 80025ec:	2101      	movne	r1, #1
 80025ee:	7019      	strb	r1, [r3, #0]
    }
 80025f0:	4770      	bx	lr
 80025f2:	bf00      	nop
 80025f4:	20012da3 	.word	0x20012da3

080025f8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80025f8:	2000      	movs	r0, #0
 80025fa:	4770      	bx	lr

080025fc <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80025fc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80025fe:	b10b      	cbz	r3, 8002604 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002600:	4608      	mov	r0, r1
 8002602:	4718      	bx	r3
        }
    }
 8002604:	4770      	bx	lr

08002606 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002606:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800260a:	4770      	bx	lr

0800260c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800260c:	6840      	ldr	r0, [r0, #4]
 800260e:	6803      	ldr	r3, [r0, #0]
 8002610:	699b      	ldr	r3, [r3, #24]
 8002612:	4718      	bx	r3

08002614 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002614:	4770      	bx	lr

08002616 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002616:	4770      	bx	lr

08002618 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002618:	4770      	bx	lr
	...

0800261c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 800261c:	b510      	push	{r4, lr}
 800261e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002620:	f000 fb4c 	bl	8002cbc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002624:	6823      	ldr	r3, [r4, #0]
 8002626:	4903      	ldr	r1, [pc, #12]	; (8002634 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002628:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800262c:	4620      	mov	r0, r4
}
 800262e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002632:	4718      	bx	r3
 8002634:	d0000000 	.word	0xd0000000

08002638 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002638:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800263a:	6803      	ldr	r3, [r0, #0]
{
 800263c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800263e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002642:	4798      	blx	r3
    enableInterrupts();
 8002644:	6823      	ldr	r3, [r4, #0]
 8002646:	4620      	mov	r0, r4
 8002648:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800264a:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800264c:	f000 f8ec 	bl	8002828 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002650:	6823      	ldr	r3, [r4, #0]
 8002652:	4620      	mov	r0, r4
 8002654:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002656:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002658:	2029      	movs	r0, #41	; 0x29
 800265a:	f7ff f981 	bl	8001960 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800265e:	f000 f8e3 	bl	8002828 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002662:	6823      	ldr	r3, [r4, #0]
 8002664:	4620      	mov	r0, r4
 8002666:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002668:	4798      	blx	r3
    for (;;)
 800266a:	e7f8      	b.n	800265e <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800266c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800266c:	b510      	push	{r4, lr}
 800266e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002670:	f00f f898 	bl	80117a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002674:	6823      	ldr	r3, [r4, #0]
 8002676:	4620      	mov	r0, r4
 8002678:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 800267c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002680:	4718      	bx	r3

08002682 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002682:	f000 bb0d 	b.w	8002ca0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002686 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002686:	f000 bb11 	b.w	8002cac <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800268a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800268a:	f000 bb35 	b.w	8002cf8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800268e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800268e:	f000 badd 	b.w	8002c4c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002692 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002692:	f000 bae3 	b.w	8002c5c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002696 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002696:	f000 bb3b 	b.w	8002d10 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800269a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800269a:	f000 bae7 	b.w	8002c6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800269e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800269e:	f00e baed 	b.w	8010c7c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080026a2 <_ZN11TouchGFXHALD0Ev>:
 80026a2:	b510      	push	{r4, lr}
 80026a4:	217c      	movs	r1, #124	; 0x7c
 80026a6:	4604      	mov	r4, r0
 80026a8:	f027 fc09 	bl	8029ebe <_ZdlPvj>
 80026ac:	4620      	mov	r0, r4
 80026ae:	bd10      	pop	{r4, pc}

080026b0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80026b0:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80026b4:	b11b      	cbz	r3, 80026be <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80026b6:	6840      	ldr	r0, [r0, #4]
 80026b8:	6803      	ldr	r3, [r0, #0]
 80026ba:	681b      	ldr	r3, [r3, #0]
 80026bc:	4718      	bx	r3
    }
 80026be:	4618      	mov	r0, r3
 80026c0:	4770      	bx	lr
	...

080026c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80026c4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80026c6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80026ca:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80026ce:	4b0c      	ldr	r3, [pc, #48]	; (8002700 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80026d0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80026d2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80026d4:	d009      	beq.n	80026ea <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80026d6:	b93a      	cbnz	r2, 80026e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80026d8:	4a0a      	ldr	r2, [pc, #40]	; (8002704 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80026da:	490b      	ldr	r1, [pc, #44]	; (8002708 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80026dc:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80026de:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80026e0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80026e2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80026e4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80026e6:	701a      	strb	r2, [r3, #0]
    }
 80026e8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80026ea:	2a00      	cmp	r2, #0
 80026ec:	d0fc      	beq.n	80026e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80026ee:	4a05      	ldr	r2, [pc, #20]	; (8002704 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80026f0:	4905      	ldr	r1, [pc, #20]	; (8002708 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80026f2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80026f4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80026f6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80026f8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80026fa:	2200      	movs	r2, #0
 80026fc:	e7f3      	b.n	80026e6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80026fe:	bf00      	nop
 8002700:	20012d9c 	.word	0x20012d9c
 8002704:	20012d98 	.word	0x20012d98
 8002708:	20012d9a 	.word	0x20012d9a

0800270c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800270c:	b570      	push	{r4, r5, r6, lr}
 800270e:	460d      	mov	r5, r1
 8002710:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002712:	b935      	cbnz	r5, 8002722 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002714:	4b09      	ldr	r3, [pc, #36]	; (800273c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002716:	4a0a      	ldr	r2, [pc, #40]	; (8002740 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002718:	480a      	ldr	r0, [pc, #40]	; (8002744 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800271a:	f240 21d2 	movw	r1, #722	; 0x2d2
 800271e:	f028 fab5 	bl	802ac8c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002722:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002726:	4b08      	ldr	r3, [pc, #32]	; (8002748 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002728:	3a00      	subs	r2, #0
 800272a:	bf18      	it	ne
 800272c:	2201      	movne	r2, #1
 800272e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002730:	6803      	ldr	r3, [r0, #0]
    }
 8002732:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002736:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800273a:	4718      	bx	r3
 800273c:	0802bed8 	.word	0x0802bed8
 8002740:	0802bf10 	.word	0x0802bf10
 8002744:	0802bf5e 	.word	0x0802bf5e
 8002748:	20012da2 	.word	0x20012da2

0800274c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800274c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800274e:	4b09      	ldr	r3, [pc, #36]	; (8002774 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002750:	881b      	ldrh	r3, [r3, #0]
 8002752:	428b      	cmp	r3, r1
 8002754:	d803      	bhi.n	800275e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002756:	4b08      	ldr	r3, [pc, #32]	; (8002778 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002758:	881b      	ldrh	r3, [r3, #0]
 800275a:	4293      	cmp	r3, r2
 800275c:	d905      	bls.n	800276a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800275e:	4b07      	ldr	r3, [pc, #28]	; (800277c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002760:	4a07      	ldr	r2, [pc, #28]	; (8002780 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002762:	4808      	ldr	r0, [pc, #32]	; (8002784 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002764:	219e      	movs	r1, #158	; 0x9e
 8002766:	f028 fa91 	bl	802ac8c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800276a:	4b07      	ldr	r3, [pc, #28]	; (8002788 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800276c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800276e:	4b07      	ldr	r3, [pc, #28]	; (800278c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002770:	801a      	strh	r2, [r3, #0]
    }
 8002772:	bd08      	pop	{r3, pc}
 8002774:	20012d98 	.word	0x20012d98
 8002778:	20012d9a 	.word	0x20012d9a
 800277c:	0802bfa3 	.word	0x0802bfa3
 8002780:	0802c006 	.word	0x0802c006
 8002784:	0802bf5e 	.word	0x0802bf5e
 8002788:	20012d9e 	.word	0x20012d9e
 800278c:	20012da0 	.word	0x20012da0

08002790 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002790:	2101      	movs	r1, #1
{
 8002792:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002794:	2200      	movs	r2, #0
 8002796:	4608      	mov	r0, r1
 8002798:	f00b f87c 	bl	800d894 <osSemaphoreNew>
 800279c:	4b0a      	ldr	r3, [pc, #40]	; (80027c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800279e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80027a0:	b928      	cbnz	r0, 80027ae <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80027a2:	4b0a      	ldr	r3, [pc, #40]	; (80027cc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80027a4:	4a0a      	ldr	r2, [pc, #40]	; (80027d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80027a6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80027a8:	480a      	ldr	r0, [pc, #40]	; (80027d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80027aa:	f028 fa6f 	bl	802ac8c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80027ae:	2200      	movs	r2, #0
 80027b0:	2104      	movs	r1, #4
 80027b2:	2001      	movs	r0, #1
 80027b4:	f00b f922 	bl	800d9fc <osMessageQueueNew>
 80027b8:	4b07      	ldr	r3, [pc, #28]	; (80027d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80027ba:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80027bc:	b918      	cbnz	r0, 80027c6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80027be:	4b07      	ldr	r3, [pc, #28]	; (80027dc <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80027c0:	4a03      	ldr	r2, [pc, #12]	; (80027d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80027c2:	212c      	movs	r1, #44	; 0x2c
 80027c4:	e7f0      	b.n	80027a8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80027c6:	bd08      	pop	{r3, pc}
 80027c8:	2000079c 	.word	0x2000079c
 80027cc:	0802c124 	.word	0x0802c124
 80027d0:	0802c16d 	.word	0x0802c16d
 80027d4:	0802c19c 	.word	0x0802c19c
 80027d8:	20000798 	.word	0x20000798
 80027dc:	0802c22c 	.word	0x0802c22c

080027e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80027e0:	4b02      	ldr	r3, [pc, #8]	; (80027ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80027e2:	f04f 31ff 	mov.w	r1, #4294967295
 80027e6:	6818      	ldr	r0, [r3, #0]
 80027e8:	f00b b8a8 	b.w	800d93c <osSemaphoreAcquire>
 80027ec:	2000079c 	.word	0x2000079c

080027f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80027f0:	4b01      	ldr	r3, [pc, #4]	; (80027f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80027f2:	6818      	ldr	r0, [r3, #0]
 80027f4:	f00b b8d6 	b.w	800d9a4 <osSemaphoreRelease>
 80027f8:	2000079c 	.word	0x2000079c

080027fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80027fc:	4b02      	ldr	r3, [pc, #8]	; (8002808 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80027fe:	2100      	movs	r1, #0
 8002800:	6818      	ldr	r0, [r3, #0]
 8002802:	f00b b89b 	b.w	800d93c <osSemaphoreAcquire>
 8002806:	bf00      	nop
 8002808:	2000079c 	.word	0x2000079c

0800280c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800280c:	f7ff bff0 	b.w	80027f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002810 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002810:	4803      	ldr	r0, [pc, #12]	; (8002820 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002812:	4904      	ldr	r1, [pc, #16]	; (8002824 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002814:	6800      	ldr	r0, [r0, #0]
 8002816:	2300      	movs	r3, #0
 8002818:	461a      	mov	r2, r3
 800281a:	f00b b929 	b.w	800da70 <osMessageQueuePut>
 800281e:	bf00      	nop
 8002820:	20000798 	.word	0x20000798
 8002824:	20000010 	.word	0x20000010

08002828 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002828:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800282a:	4c08      	ldr	r4, [pc, #32]	; (800284c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800282c:	2300      	movs	r3, #0
 800282e:	461a      	mov	r2, r3
 8002830:	a901      	add	r1, sp, #4
 8002832:	6820      	ldr	r0, [r4, #0]
 8002834:	f00b f952 	bl	800dadc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002838:	6820      	ldr	r0, [r4, #0]
 800283a:	f04f 33ff 	mov.w	r3, #4294967295
 800283e:	2200      	movs	r2, #0
 8002840:	a901      	add	r1, sp, #4
 8002842:	f00b f94b 	bl	800dadc <osMessageQueueGet>
}
 8002846:	b002      	add	sp, #8
 8002848:	bd10      	pop	{r4, pc}
 800284a:	bf00      	nop
 800284c:	20000798 	.word	0x20000798

08002850 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002850:	4770      	bx	lr

08002852 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002852:	2000      	movs	r0, #0
 8002854:	4770      	bx	lr

08002856 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002856:	4770      	bx	lr

08002858 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002858:	4770      	bx	lr

0800285a <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 800285a:	2000      	movs	r0, #0
 800285c:	4770      	bx	lr

0800285e <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800285e:	4770      	bx	lr

08002860 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002860:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002862:	4a03      	ldr	r2, [pc, #12]	; (8002870 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002864:	4b03      	ldr	r3, [pc, #12]	; (8002874 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002866:	4804      	ldr	r0, [pc, #16]	; (8002878 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002868:	2122      	movs	r1, #34	; 0x22
 800286a:	f028 fa0f 	bl	802ac8c <__assert_func>
 800286e:	bf00      	nop
 8002870:	0802c291 	.word	0x0802c291
 8002874:	0802c26e 	.word	0x0802c26e
 8002878:	0802c2cf 	.word	0x0802c2cf

0800287c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800287c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 800287e:	4a03      	ldr	r2, [pc, #12]	; (800288c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002880:	4b03      	ldr	r3, [pc, #12]	; (8002890 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002882:	4804      	ldr	r0, [pc, #16]	; (8002894 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002884:	2127      	movs	r1, #39	; 0x27
 8002886:	f028 fa01 	bl	802ac8c <__assert_func>
 800288a:	bf00      	nop
 800288c:	0802c35d 	.word	0x0802c35d
 8002890:	0802c26e 	.word	0x0802c26e
 8002894:	0802c2cf 	.word	0x0802c2cf

08002898 <_ZN8STM32DMAD0Ev>:
 8002898:	b510      	push	{r4, lr}
 800289a:	2144      	movs	r1, #68	; 0x44
 800289c:	4604      	mov	r4, r0
 800289e:	f027 fb0e 	bl	8029ebe <_ZdlPvj>
 80028a2:	4620      	mov	r0, r4
 80028a4:	bd10      	pop	{r4, pc}
	...

080028a8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80028a8:	b538      	push	{r3, r4, r5, lr}
 80028aa:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 80028ac:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80028ae:	2500      	movs	r5, #0
 80028b0:	4b06      	ldr	r3, [pc, #24]	; (80028cc <_ZN8STM32DMAC1Ev+0x24>)
 80028b2:	7225      	strb	r5, [r4, #8]
 80028b4:	300c      	adds	r0, #12
 80028b6:	6060      	str	r0, [r4, #4]
 80028b8:	7265      	strb	r5, [r4, #9]
 80028ba:	2201      	movs	r2, #1
 80028bc:	f841 3b20 	str.w	r3, [r1], #32
 80028c0:	f00f f8c8 	bl	8011a54 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80028c4:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 80028c6:	4620      	mov	r0, r4
 80028c8:	bd38      	pop	{r3, r4, r5, pc}
 80028ca:	bf00      	nop
 80028cc:	0802c3a4 	.word	0x0802c3a4

080028d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80028d0:	2001      	movs	r0, #1
 80028d2:	4770      	bx	lr

080028d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80028d4:	2038      	movs	r0, #56	; 0x38
 80028d6:	4770      	bx	lr

080028d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80028d8:	2338      	movs	r3, #56	; 0x38
 80028da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80028de:	3008      	adds	r0, #8
 80028e0:	4770      	bx	lr

080028e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80028e2:	2338      	movs	r3, #56	; 0x38
 80028e4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80028e8:	3008      	adds	r0, #8
 80028ea:	4770      	bx	lr

080028ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80028ec:	2001      	movs	r0, #1
 80028ee:	4770      	bx	lr

080028f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80028f0:	f241 30f8 	movw	r0, #5112	; 0x13f8
 80028f4:	4770      	bx	lr

080028f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80028f6:	f241 33f8 	movw	r3, #5112	; 0x13f8
 80028fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80028fe:	3008      	adds	r0, #8
 8002900:	4770      	bx	lr

08002902 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002902:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8002906:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800290a:	3008      	adds	r0, #8
 800290c:	4770      	bx	lr

0800290e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800290e:	2001      	movs	r0, #1
 8002910:	4770      	bx	lr

08002912 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002912:	2010      	movs	r0, #16
 8002914:	4770      	bx	lr

08002916 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002916:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800291a:	3008      	adds	r0, #8
 800291c:	4770      	bx	lr

0800291e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800291e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002922:	3008      	adds	r0, #8
 8002924:	4770      	bx	lr

08002926 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002926:	4608      	mov	r0, r1
 8002928:	f001 bfa4 	b.w	8004874 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

0800292c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800292c:	b510      	push	{r4, lr}
 800292e:	4b03      	ldr	r3, [pc, #12]	; (800293c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002930:	6003      	str	r3, [r0, #0]
 8002932:	4604      	mov	r4, r0
 8002934:	f00d fd2b 	bl	801038e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002938:	4620      	mov	r0, r4
 800293a:	bd10      	pop	{r4, pc}
 800293c:	0802c45c 	.word	0x0802c45c

08002940 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002940:	b510      	push	{r4, lr}
 8002942:	4604      	mov	r4, r0
 8002944:	f7ff fff2 	bl	800292c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002948:	4620      	mov	r0, r4
 800294a:	2140      	movs	r1, #64	; 0x40
 800294c:	f027 fab7 	bl	8029ebe <_ZdlPvj>
 8002950:	4620      	mov	r0, r4
 8002952:	bd10      	pop	{r4, pc}

08002954 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002954:	b510      	push	{r4, lr}
 8002956:	4b03      	ldr	r3, [pc, #12]	; (8002964 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002958:	6003      	str	r3, [r0, #0]
 800295a:	4604      	mov	r4, r0
 800295c:	f00d fd17 	bl	801038e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002960:	4620      	mov	r0, r4
 8002962:	bd10      	pop	{r4, pc}
 8002964:	0802c428 	.word	0x0802c428

08002968 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002968:	b510      	push	{r4, lr}
 800296a:	4604      	mov	r4, r0
 800296c:	f7ff fff2 	bl	8002954 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002970:	4620      	mov	r0, r4
 8002972:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8002976:	f027 faa2 	bl	8029ebe <_ZdlPvj>
 800297a:	4620      	mov	r0, r4
 800297c:	bd10      	pop	{r4, pc}
	...

08002980 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002980:	b510      	push	{r4, lr}
 8002982:	4b03      	ldr	r3, [pc, #12]	; (8002990 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002984:	6003      	str	r3, [r0, #0]
 8002986:	4604      	mov	r4, r0
 8002988:	f00d fd01 	bl	801038e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800298c:	4620      	mov	r0, r4
 800298e:	bd10      	pop	{r4, pc}
 8002990:	0802c3f4 	.word	0x0802c3f4

08002994 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002994:	b510      	push	{r4, lr}
 8002996:	4604      	mov	r4, r0
 8002998:	f7ff fff2 	bl	8002980 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800299c:	4620      	mov	r0, r4
 800299e:	2118      	movs	r1, #24
 80029a0:	f027 fa8d 	bl	8029ebe <_ZdlPvj>
 80029a4:	4620      	mov	r0, r4
 80029a6:	bd10      	pop	{r4, pc}

080029a8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80029a8:	b510      	push	{r4, lr}
 80029aa:	4b09      	ldr	r3, [pc, #36]	; (80029d0 <_ZN12FrontendHeapD1Ev+0x28>)
 80029ac:	6003      	str	r3, [r0, #0]
 80029ae:	4604      	mov	r4, r0
 80029b0:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 80029b4:	300c      	adds	r0, #12
 80029b6:	f7ff ffb9 	bl	800292c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80029ba:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80029be:	f7ff ffc9 	bl	8002954 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80029c2:	f104 0014 	add.w	r0, r4, #20
 80029c6:	f7ff ffdb 	bl	8002980 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80029ca:	4620      	mov	r0, r4
 80029cc:	bd10      	pop	{r4, pc}
 80029ce:	bf00      	nop
 80029d0:	0802c490 	.word	0x0802c490

080029d4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80029d4:	b508      	push	{r3, lr}
 80029d6:	4802      	ldr	r0, [pc, #8]	; (80029e0 <__tcf_0+0xc>)
 80029d8:	f7ff ffe6 	bl	80029a8 <_ZN12FrontendHeapD1Ev>
 80029dc:	bd08      	pop	{r3, pc}
 80029de:	bf00      	nop
 80029e0:	200007a4 	.word	0x200007a4

080029e4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80029e4:	b510      	push	{r4, lr}
 80029e6:	4604      	mov	r4, r0
 80029e8:	f7ff ffde 	bl	80029a8 <_ZN12FrontendHeapD1Ev>
 80029ec:	4620      	mov	r0, r4
 80029ee:	f241 51d0 	movw	r1, #5584	; 0x15d0
 80029f2:	f027 fa64 	bl	8029ebe <_ZdlPvj>
 80029f6:	4620      	mov	r0, r4
 80029f8:	bd10      	pop	{r4, pc}
	...

080029fc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80029fc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002a00:	f000 fa5a 	bl	8002eb8 <_ZN14BitmapDatabase11getInstanceEv>
 8002a04:	4605      	mov	r5, r0
 8002a06:	f000 fa5b 	bl	8002ec0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002a0a:	2400      	movs	r4, #0
 8002a0c:	4601      	mov	r1, r0
 8002a0e:	4623      	mov	r3, r4
 8002a10:	4628      	mov	r0, r5
 8002a12:	4622      	mov	r2, r4
 8002a14:	9400      	str	r4, [sp, #0]
 8002a16:	f016 fd31 	bl	801947c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002a1a:	4b26      	ldr	r3, [pc, #152]	; (8002ab4 <touchgfx_init+0xb8>)
 8002a1c:	4a26      	ldr	r2, [pc, #152]	; (8002ab8 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002a1e:	4d27      	ldr	r5, [pc, #156]	; (8002abc <touchgfx_init+0xc0>)
 8002a20:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002a22:	4620      	mov	r0, r4
 8002a24:	f006 fb06 	bl	8009034 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002a28:	4825      	ldr	r0, [pc, #148]	; (8002ac0 <touchgfx_init+0xc4>)
 8002a2a:	f016 fc8f 	bl	801934c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002a2e:	682b      	ldr	r3, [r5, #0]
 8002a30:	f3bf 8f5b 	dmb	ish
 8002a34:	07db      	lsls	r3, r3, #31
 8002a36:	d437      	bmi.n	8002aa8 <touchgfx_init+0xac>
 8002a38:	4628      	mov	r0, r5
 8002a3a:	f027 fa42 	bl	8029ec2 <__cxa_guard_acquire>
 8002a3e:	b398      	cbz	r0, 8002aa8 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002a40:	4c20      	ldr	r4, [pc, #128]	; (8002ac4 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002a42:	4b21      	ldr	r3, [pc, #132]	; (8002ac8 <touchgfx_init+0xcc>)
 8002a44:	6023      	str	r3, [r4, #0]
 8002a46:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002a4a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 8002a4e:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 8002a52:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 8002a56:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002a58:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002a5c:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002a5e:	6126      	str	r6, [r4, #16]
 8002a60:	f00d fc96 	bl	8010390 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002a64:	4b19      	ldr	r3, [pc, #100]	; (8002acc <touchgfx_init+0xd0>)
 8002a66:	6163      	str	r3, [r4, #20]
 8002a68:	4640      	mov	r0, r8
 8002a6a:	f00d fc91 	bl	8010390 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002a6e:	4b18      	ldr	r3, [pc, #96]	; (8002ad0 <touchgfx_init+0xd4>)
 8002a70:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002a72:	4638      	mov	r0, r7
 8002a74:	f00d fc8c 	bl	8010390 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002a78:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002a7c:	4a15      	ldr	r2, [pc, #84]	; (8002ad4 <touchgfx_init+0xd8>)
 8002a7e:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 8002a82:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 8002a86:	f006 ffa5 	bl	80099d4 <_ZN5ModelC1Ev>
 8002a8a:	4622      	mov	r2, r4
 8002a8c:	f1a6 0108 	sub.w	r1, r6, #8
 8002a90:	4630      	mov	r0, r6
 8002a92:	f006 fc99 	bl	80093c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002a96:	4630      	mov	r0, r6
 8002a98:	f001 feec 	bl	8004874 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002a9c:	480e      	ldr	r0, [pc, #56]	; (8002ad8 <touchgfx_init+0xdc>)
 8002a9e:	f028 f913 	bl	802acc8 <atexit>
 8002aa2:	4628      	mov	r0, r5
 8002aa4:	f027 fa19 	bl	8029eda <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002aa8:	480c      	ldr	r0, [pc, #48]	; (8002adc <touchgfx_init+0xe0>)
}
 8002aaa:	b002      	add	sp, #8
 8002aac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002ab0:	f7ff bdb4 	b.w	800261c <_ZN11TouchGFXHAL10initializeEv>
 8002ab4:	20012e08 	.word	0x20012e08
 8002ab8:	20001e38 	.word	0x20001e38
 8002abc:	200007a0 	.word	0x200007a0
 8002ac0:	20000014 	.word	0x20000014
 8002ac4:	200007a4 	.word	0x200007a4
 8002ac8:	0802c490 	.word	0x0802c490
 8002acc:	0802c3f4 	.word	0x0802c3f4
 8002ad0:	0802c428 	.word	0x0802c428
 8002ad4:	0802c45c 	.word	0x0802c45c
 8002ad8:	080029d5 	.word	0x080029d5
 8002adc:	20001dbc 	.word	0x20001dbc

08002ae0 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002ae0:	4770      	bx	lr
	...

08002ae4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002ae4:	4801      	ldr	r0, [pc, #4]	; (8002aec <touchgfx_taskEntry+0x8>)
 8002ae6:	f7ff bda7 	b.w	8002638 <_ZN11TouchGFXHAL9taskEntryEv>
 8002aea:	bf00      	nop
 8002aec:	20001dbc 	.word	0x20001dbc

08002af0 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002af0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002af2:	4e22      	ldr	r6, [pc, #136]	; (8002b7c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002af4:	4c22      	ldr	r4, [pc, #136]	; (8002b80 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002af6:	4d23      	ldr	r5, [pc, #140]	; (8002b84 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002af8:	4b23      	ldr	r3, [pc, #140]	; (8002b88 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002afa:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002afc:	4630      	mov	r0, r6
 8002afe:	f7ff fed3 	bl	80028a8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002b02:	4628      	mov	r0, r5
 8002b04:	f01a ff86 	bl	801da14 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002b08:	4b20      	ldr	r3, [pc, #128]	; (8002b8c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002b0a:	4821      	ldr	r0, [pc, #132]	; (8002b90 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002b0c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002b0e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002b10:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002b14:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002b18:	491e      	ldr	r1, [pc, #120]	; (8002b94 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002b1a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002b1c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002b20:	491d      	ldr	r1, [pc, #116]	; (8002b98 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8002b22:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002b24:	491d      	ldr	r1, [pc, #116]	; (8002b9c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002b26:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002b2a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002b2c:	21f0      	movs	r1, #240	; 0xf0
 8002b2e:	8001      	strh	r1, [r0, #0]
 8002b30:	481b      	ldr	r0, [pc, #108]	; (8002ba0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8002b32:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002b34:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002b36:	481b      	ldr	r0, [pc, #108]	; (8002ba4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002b38:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002b3c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002b40:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002b44:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002b48:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002b4c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002b50:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8002b54:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002b58:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8002b5c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8002b60:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8002b62:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002b66:	8001      	strh	r1, [r0, #0]
 8002b68:	480f      	ldr	r0, [pc, #60]	; (8002ba8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8002b6a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8002b6c:	490f      	ldr	r1, [pc, #60]	; (8002bac <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8002b6e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002b70:	2201      	movs	r2, #1
 8002b72:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002b76:	4a0e      	ldr	r2, [pc, #56]	; (8002bb0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002b78:	601a      	str	r2, [r3, #0]
}
 8002b7a:	bd70      	pop	{r4, r5, r6, pc}
 8002b7c:	20001d78 	.word	0x20001d78
 8002b80:	20001d74 	.word	0x20001d74
 8002b84:	20001e3c 	.word	0x20001e3c
 8002b88:	0802bec8 	.word	0x0802bec8
 8002b8c:	20001dbc 	.word	0x20001dbc
 8002b90:	20012d98 	.word	0x20012d98
 8002b94:	01000001 	.word	0x01000001
 8002b98:	01010000 	.word	0x01010000
 8002b9c:	20012da4 	.word	0x20012da4
 8002ba0:	20012d9e 	.word	0x20012d9e
 8002ba4:	20012d9a 	.word	0x20012d9a
 8002ba8:	20012da0 	.word	0x20012da0
 8002bac:	20012d9c 	.word	0x20012d9c
 8002bb0:	0802c054 	.word	0x0802c054

08002bb4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002bb4:	2000      	movs	r0, #0
 8002bb6:	4770      	bx	lr

08002bb8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002bb8:	8081      	strh	r1, [r0, #4]
    }
 8002bba:	4770      	bx	lr

08002bbc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002bbc:	80c1      	strh	r1, [r0, #6]
    }
 8002bbe:	4770      	bx	lr

08002bc0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002bc0:	8101      	strh	r1, [r0, #8]
    }
 8002bc2:	4770      	bx	lr

08002bc4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002bc4:	8141      	strh	r1, [r0, #10]
    }
 8002bc6:	4770      	bx	lr

08002bc8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002bc8:	4770      	bx	lr

08002bca <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002bca:	4770      	bx	lr

08002bcc <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002bcc:	4770      	bx	lr

08002bce <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002bce:	4770      	bx	lr

08002bd0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002bd0:	4770      	bx	lr

08002bd2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002bd2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002bd4:	88c4      	ldrh	r4, [r0, #6]
 8002bd6:	6803      	ldr	r3, [r0, #0]
 8002bd8:	1b12      	subs	r2, r2, r4
 8002bda:	8884      	ldrh	r4, [r0, #4]
 8002bdc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002bde:	1b09      	subs	r1, r1, r4
 8002be0:	b212      	sxth	r2, r2
    }
 8002be2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002be6:	b209      	sxth	r1, r1
 8002be8:	4718      	bx	r3

08002bea <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002bea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002bee:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002bf0:	f04f 33ff 	mov.w	r3, #4294967295
 8002bf4:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002bf6:	6813      	ldr	r3, [r2, #0]
 8002bf8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002bfa:	6010      	str	r0, [r2, #0]
    }
 8002bfc:	4770      	bx	lr

08002bfe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002bfe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002c02:	b11a      	cbz	r2, 8002c0c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002c04:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002c08:	b102      	cbz	r2, 8002c0c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002c0a:	6018      	str	r0, [r3, #0]
        }
    }
 8002c0c:	4770      	bx	lr

08002c0e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002c0e:	2000      	movs	r0, #0
 8002c10:	4770      	bx	lr

08002c12 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002c12:	888b      	ldrh	r3, [r1, #4]
 8002c14:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002c16:	2001      	movs	r0, #1
 8002c18:	4770      	bx	lr

08002c1a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002c1a:	4770      	bx	lr

08002c1c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002c1c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002c20:	4770      	bx	lr

08002c22 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002c22:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002c26:	4770      	bx	lr

08002c28 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002c28:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002c2a:	2200      	movs	r2, #0
        return rect.width;
 8002c2c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002c30:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002c34:	8002      	strh	r2, [r0, #0]
 8002c36:	8042      	strh	r2, [r0, #2]
 8002c38:	8084      	strh	r4, [r0, #4]
 8002c3a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002c3c:	bd10      	pop	{r4, pc}

08002c3e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002c3e:	2200      	movs	r2, #0
 8002c40:	8002      	strh	r2, [r0, #0]
 8002c42:	8042      	strh	r2, [r0, #2]
 8002c44:	8082      	strh	r2, [r0, #4]
 8002c46:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002c48:	4770      	bx	lr
	...

08002c4c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002c4c:	4b02      	ldr	r3, [pc, #8]	; (8002c58 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002c4e:	2290      	movs	r2, #144	; 0x90
 8002c50:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8002c54:	4770      	bx	lr
 8002c56:	bf00      	nop
 8002c58:	e000e100 	.word	0xe000e100

08002c5c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c5c:	4b02      	ldr	r3, [pc, #8]	; (8002c68 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8002c5e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002c62:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8002c64:	4770      	bx	lr
 8002c66:	bf00      	nop
 8002c68:	e000e100 	.word	0xe000e100

08002c6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002c6c:	4a09      	ldr	r2, [pc, #36]	; (8002c94 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002c6e:	490a      	ldr	r1, [pc, #40]	; (8002c98 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002c70:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002c72:	480a      	ldr	r0, [pc, #40]	; (8002c9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002c74:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002c78:	3b01      	subs	r3, #1
 8002c7a:	b29b      	uxth	r3, r3
 8002c7c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002c7e:	6911      	ldr	r1, [r2, #16]
 8002c80:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002c84:	3901      	subs	r1, #1
 8002c86:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002c88:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002c8a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002c8c:	f043 0301 	orr.w	r3, r3, #1
 8002c90:	6353      	str	r3, [r2, #52]	; 0x34
}
 8002c92:	4770      	bx	lr
 8002c94:	40016800 	.word	0x40016800
 8002c98:	20001ec2 	.word	0x20001ec2
 8002c9c:	20001ec0 	.word	0x20001ec0

08002ca0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002ca0:	4b01      	ldr	r3, [pc, #4]	; (8002ca8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002ca2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002ca6:	4770      	bx	lr
 8002ca8:	40016800 	.word	0x40016800

08002cac <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002cac:	4b02      	ldr	r3, [pc, #8]	; (8002cb8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002cae:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002cb0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002cb4:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002cb6:	4770      	bx	lr
 8002cb8:	40016800 	.word	0x40016800

08002cbc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002cbc:	b570      	push	{r4, r5, r6, lr}
 8002cbe:	4604      	mov	r4, r0
    HAL::initialize();
 8002cc0:	f00e f831 	bl	8010d26 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002cc4:	6823      	ldr	r3, [r4, #0]
 8002cc6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002cc8:	f012 ffda 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 8002ccc:	4601      	mov	r1, r0
 8002cce:	4620      	mov	r0, r4
 8002cd0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002cd2:	6823      	ldr	r3, [r4, #0]
 8002cd4:	4a05      	ldr	r2, [pc, #20]	; (8002cec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002cd6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002cda:	4620      	mov	r0, r4
 8002cdc:	46ac      	mov	ip, r5
 8002cde:	2300      	movs	r3, #0
}
 8002ce0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002ce4:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002ce8:	4760      	bx	ip
 8002cea:	bf00      	nop
 8002cec:	d004b000 	.word	0xd004b000

08002cf0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002cf0:	f00e b800 	b.w	8010cf4 <_ZN8touchgfx3HAL10beginFrameEv>

08002cf4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002cf4:	f00e b80a 	b.w	8010d0c <_ZN8touchgfx3HAL8endFrameEv>

08002cf8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002cf8:	f00d bfc6 	b.w	8010c88 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002cfc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002cfc:	f00e b927 	b.w	8010f4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002d00 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002d00:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002d04:	b112      	cbz	r2, 8002d0c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002d06:	6803      	ldr	r3, [r0, #0]
 8002d08:	695b      	ldr	r3, [r3, #20]
 8002d0a:	4718      	bx	r3
    }
 8002d0c:	4770      	bx	lr
	...

08002d10 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002d10:	4b04      	ldr	r3, [pc, #16]	; (8002d24 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002d12:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002d16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002d1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002d1e:	f3bf 8f6f 	isb	sy
}
 8002d22:	4770      	bx	lr
 8002d24:	e000e100 	.word	0xe000e100

08002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002d28:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002d2a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002d2c:	4e12      	ldr	r6, [pc, #72]	; (8002d78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002d2e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002d30:	4b12      	ldr	r3, [pc, #72]	; (8002d7c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002d32:	6003      	str	r3, [r0, #0]
 8002d34:	6833      	ldr	r3, [r6, #0]
 8002d36:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002d3a:	4605      	mov	r5, r0
 8002d3c:	b10a      	cbz	r2, 8002d42 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002d3e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002d40:	b900      	cbnz	r0, 8002d44 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8002d42:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002d44:	6803      	ldr	r3, [r0, #0]
 8002d46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d48:	4798      	blx	r3
        return auxiliaryLCD;
 8002d4a:	6833      	ldr	r3, [r6, #0]
 8002d4c:	fab0 f480 	clz	r4, r0
 8002d50:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002d52:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002d54:	b130      	cbz	r0, 8002d64 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002d56:	6803      	ldr	r3, [r0, #0]
 8002d58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d5a:	4798      	blx	r3
 8002d5c:	2800      	cmp	r0, #0
 8002d5e:	bf08      	it	eq
 8002d60:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002d64:	b92c      	cbnz	r4, 8002d72 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002d66:	4b06      	ldr	r3, [pc, #24]	; (8002d80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002d68:	4a06      	ldr	r2, [pc, #24]	; (8002d84 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002d6a:	4807      	ldr	r0, [pc, #28]	; (8002d88 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002d6c:	212c      	movs	r1, #44	; 0x2c
 8002d6e:	f027 ff8d 	bl	802ac8c <__assert_func>
    }
 8002d72:	4628      	mov	r0, r5
 8002d74:	bd70      	pop	{r4, r5, r6, pc}
 8002d76:	bf00      	nop
 8002d78:	20012da4 	.word	0x20012da4
 8002d7c:	0802c5a0 	.word	0x0802c5a0
 8002d80:	0802c49c 	.word	0x0802c49c
 8002d84:	0802c4fa 	.word	0x0802c4fa
 8002d88:	0802c533 	.word	0x0802c533

08002d8c <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002d8c:	4770      	bx	lr
	...

08002d90 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002d94:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002d96:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002d9a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8002d9e:	d105      	bne.n	8002dac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8002da0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002da4:	4281      	cmp	r1, r0
 8002da6:	d8fb      	bhi.n	8002da0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002da8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002dac:	4f17      	ldr	r7, [pc, #92]	; (8002e0c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002dae:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002db2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002db6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002dba:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002dbe:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002dc0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 8002dc2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002dc4:	b2db      	uxtb	r3, r3
 8002dc6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002dc8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002dcc:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002dd0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002dd4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002dd8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002ddc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002de0:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002de4:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002de8:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002dea:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002dee:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002df2:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002df6:	fbbe fef5 	udiv	lr, lr, r5
 8002dfa:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002dfe:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002e02:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002e06:	4281      	cmp	r1, r0
 8002e08:	d8de      	bhi.n	8002dc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002e0a:	e7cd      	b.n	8002da8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002e0c:	fffff800 	.word	0xfffff800

08002e10 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002e10:	b510      	push	{r4, lr}
        return instance;
 8002e12:	4c14      	ldr	r4, [pc, #80]	; (8002e64 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002e14:	6823      	ldr	r3, [r4, #0]
 8002e16:	b323      	cbz	r3, 8002e62 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002e18:	4b13      	ldr	r3, [pc, #76]	; (8002e68 <HAL_LTDC_LineEventCallback+0x58>)
 8002e1a:	4a14      	ldr	r2, [pc, #80]	; (8002e6c <HAL_LTDC_LineEventCallback+0x5c>)
 8002e1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e1e:	8811      	ldrh	r1, [r2, #0]
 8002e20:	428b      	cmp	r3, r1
 8002e22:	d113      	bne.n	8002e4c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002e24:	4b12      	ldr	r3, [pc, #72]	; (8002e70 <HAL_LTDC_LineEventCallback+0x60>)
 8002e26:	8819      	ldrh	r1, [r3, #0]
 8002e28:	f009 f948 	bl	800c0bc <HAL_LTDC_ProgramLineEvent>
 8002e2c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002e2e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8002e32:	3301      	adds	r3, #1
 8002e34:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002e38:	f7ff fcea 	bl	8002810 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002e3c:	6820      	ldr	r0, [r4, #0]
 8002e3e:	f00e fcb1 	bl	80117a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002e42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002e46:	2000      	movs	r0, #0
 8002e48:	f7ff bb62 	b.w	8002510 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002e4c:	f009 f936 	bl	800c0bc <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002e50:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002e52:	6803      	ldr	r3, [r0, #0]
 8002e54:	6a1b      	ldr	r3, [r3, #32]
 8002e56:	4798      	blx	r3
    }
 8002e58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002e5c:	2000      	movs	r0, #0
 8002e5e:	f7ff bb6f 	b.w	8002540 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002e62:	bd10      	pop	{r4, pc}
 8002e64:	20012da4 	.word	0x20012da4
 8002e68:	40016800 	.word	0x40016800
 8002e6c:	20001ec2 	.word	0x20001ec2
 8002e70:	20001ec0 	.word	0x20001ec0

08002e74 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002e74:	4770      	bx	lr

08002e76 <_ZN23ApplicationFontProviderD0Ev>:
 8002e76:	b510      	push	{r4, lr}
 8002e78:	2104      	movs	r1, #4
 8002e7a:	4604      	mov	r4, r0
 8002e7c:	f027 f81f 	bl	8029ebe <_ZdlPvj>
 8002e80:	4620      	mov	r0, r4
 8002e82:	bd10      	pop	{r4, pc}

08002e84 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002e84:	b508      	push	{r3, lr}
    switch (typography)
 8002e86:	2903      	cmp	r1, #3
 8002e88:	d813      	bhi.n	8002eb2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002e8a:	e8df f001 	tbb	[pc, r1]
 8002e8e:	0602      	.short	0x0602
 8002e90:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002e92:	f006 f91b 	bl	80090cc <_ZN17TypedTextDatabase8getFontsEv>
 8002e96:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002e98:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002e9a:	f006 f917 	bl	80090cc <_ZN17TypedTextDatabase8getFontsEv>
 8002e9e:	6840      	ldr	r0, [r0, #4]
 8002ea0:	e7fa      	b.n	8002e98 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002ea2:	f006 f913 	bl	80090cc <_ZN17TypedTextDatabase8getFontsEv>
 8002ea6:	6880      	ldr	r0, [r0, #8]
 8002ea8:	e7f6      	b.n	8002e98 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002eaa:	f006 f90f 	bl	80090cc <_ZN17TypedTextDatabase8getFontsEv>
 8002eae:	68c0      	ldr	r0, [r0, #12]
 8002eb0:	e7f2      	b.n	8002e98 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002eb2:	2000      	movs	r0, #0
 8002eb4:	e7f0      	b.n	8002e98 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002eb8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002eb8:	4800      	ldr	r0, [pc, #0]	; (8002ebc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002eba:	4770      	bx	lr
 8002ebc:	0802c5cc 	.word	0x0802c5cc

08002ec0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002ec0:	200d      	movs	r0, #13
 8002ec2:	4770      	bx	lr

08002ec4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002ec4:	b513      	push	{r0, r1, r4, lr}
 8002ec6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002ec8:	b151      	cbz	r1, 8002ee0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002eca:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002ecc:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002ece:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002ed2:	aa01      	add	r2, sp, #4
 8002ed4:	689c      	ldr	r4, [r3, #8]
 8002ed6:	f10d 0303 	add.w	r3, sp, #3
 8002eda:	47a0      	blx	r4
        return glyph;
    }
 8002edc:	b002      	add	sp, #8
 8002ede:	bd10      	pop	{r4, pc}
            return 0;
 8002ee0:	4608      	mov	r0, r1
 8002ee2:	e7fb      	b.n	8002edc <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002ee4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002ee4:	89c0      	ldrh	r0, [r0, #14]
 8002ee6:	4770      	bx	lr

08002ee8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002ee8:	8a00      	ldrh	r0, [r0, #16]
 8002eea:	4770      	bx	lr

08002eec <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002eec:	88c0      	ldrh	r0, [r0, #6]
 8002eee:	4770      	bx	lr

08002ef0 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002ef0:	8880      	ldrh	r0, [r0, #4]
 8002ef2:	4770      	bx	lr

08002ef4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002ef4:	7a80      	ldrb	r0, [r0, #10]
    }
 8002ef6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002efa:	4770      	bx	lr

08002efc <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002efc:	7a80      	ldrb	r0, [r0, #10]
    }
 8002efe:	09c0      	lsrs	r0, r0, #7
 8002f00:	4770      	bx	lr

08002f02 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002f02:	4770      	bx	lr

08002f04 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002f04:	4770      	bx	lr

08002f06 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002f06:	4770      	bx	lr

08002f08 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002f08:	4770      	bx	lr

08002f0a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002f0a:	4770      	bx	lr

08002f0c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002f0c:	4770      	bx	lr

08002f0e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002f0e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002f10:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002f12:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002f14:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002f16:	466d      	mov	r5, sp
 8002f18:	4601      	mov	r1, r0
 8002f1a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002f1e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002f20:	4628      	mov	r0, r5
 8002f22:	4798      	blx	r3
 8002f24:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f28:	343c      	adds	r4, #60	; 0x3c
 8002f2a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002f2e:	b005      	add	sp, #20
 8002f30:	bd30      	pop	{r4, r5, pc}

08002f32 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002f32:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002f34:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002f36:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002f38:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002f3a:	466d      	mov	r5, sp
 8002f3c:	4601      	mov	r1, r0
 8002f3e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002f42:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002f44:	4628      	mov	r0, r5
 8002f46:	4798      	blx	r3
 8002f48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f4c:	343c      	adds	r4, #60	; 0x3c
 8002f4e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002f52:	b005      	add	sp, #20
 8002f54:	bd30      	pop	{r4, r5, pc}

08002f56 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002f56:	2200      	movs	r2, #0
 8002f58:	8002      	strh	r2, [r0, #0]
 8002f5a:	8042      	strh	r2, [r0, #2]
 8002f5c:	8082      	strh	r2, [r0, #4]
 8002f5e:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002f60:	4770      	bx	lr

08002f62 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002f62:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002f66:	4770      	bx	lr

08002f68 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002f68:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002f6a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002f6c:	4604      	mov	r4, r0
        setX(x);
 8002f6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002f70:	4615      	mov	r5, r2
        setX(x);
 8002f72:	4798      	blx	r3
        setBaselineY(baselineY);
 8002f74:	6823      	ldr	r3, [r4, #0]
 8002f76:	4629      	mov	r1, r5
 8002f78:	4620      	mov	r0, r4
 8002f7a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002f7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002f80:	4718      	bx	r3

08002f82 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002f82:	2000      	movs	r0, #0
 8002f84:	4770      	bx	lr

08002f86 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002f86:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002f88:	4770      	bx	lr

08002f8a <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002f8a:	4770      	bx	lr

08002f8c <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f8c:	4770      	bx	lr

08002f8e <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002f8e:	4770      	bx	lr

08002f90 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002f90:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002f92:	68c2      	ldr	r2, [r0, #12]
 8002f94:	6844      	ldr	r4, [r0, #4]
 8002f96:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f98:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f9a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f9e:	07d2      	lsls	r2, r2, #31
 8002fa0:	bf48      	it	mi
 8002fa2:	5962      	ldrmi	r2, [r4, r5]
 8002fa4:	689b      	ldr	r3, [r3, #8]
    }
 8002fa6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002fa8:	bf48      	it	mi
 8002faa:	58d3      	ldrmi	r3, [r2, r3]
 8002fac:	4718      	bx	r3

08002fae <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002fae:	6843      	ldr	r3, [r0, #4]
 8002fb0:	b12b      	cbz	r3, 8002fbe <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002fb2:	6883      	ldr	r3, [r0, #8]
 8002fb4:	b92b      	cbnz	r3, 8002fc2 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002fb6:	68c0      	ldr	r0, [r0, #12]
 8002fb8:	f000 0001 	and.w	r0, r0, #1
 8002fbc:	4770      	bx	lr
 8002fbe:	4618      	mov	r0, r3
 8002fc0:	4770      	bx	lr
 8002fc2:	2001      	movs	r0, #1
    }
 8002fc4:	4770      	bx	lr

08002fc6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002fc6:	b510      	push	{r4, lr}
    }
 8002fc8:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002fca:	4604      	mov	r4, r0
    }
 8002fcc:	f026 ff77 	bl	8029ebe <_ZdlPvj>
 8002fd0:	4620      	mov	r0, r4
 8002fd2:	bd10      	pop	{r4, pc}

08002fd4 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002fd4:	b510      	push	{r4, lr}
 8002fd6:	214c      	movs	r1, #76	; 0x4c
 8002fd8:	4604      	mov	r4, r0
 8002fda:	f026 ff70 	bl	8029ebe <_ZdlPvj>
 8002fde:	4620      	mov	r0, r4
 8002fe0:	bd10      	pop	{r4, pc}

08002fe2 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002fe2:	b510      	push	{r4, lr}
 8002fe4:	2110      	movs	r1, #16
 8002fe6:	4604      	mov	r4, r0
 8002fe8:	f026 ff69 	bl	8029ebe <_ZdlPvj>
 8002fec:	4620      	mov	r0, r4
 8002fee:	bd10      	pop	{r4, pc}

08002ff0 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002ff0:	b510      	push	{r4, lr}
 8002ff2:	4b03      	ldr	r3, [pc, #12]	; (8003000 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002ff4:	6003      	str	r3, [r0, #0]
 8002ff6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002ff8:	f011 f940 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	bd10      	pop	{r4, pc}
 8003000:	0802c938 	.word	0x0802c938

08003004 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8003004:	b507      	push	{r0, r1, r2, lr}
 8003006:	4b07      	ldr	r3, [pc, #28]	; (8003024 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8003008:	6003      	str	r3, [r0, #0]
 800300a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800300c:	f011 f936 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003010:	9801      	ldr	r0, [sp, #4]
 8003012:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8003016:	f026 ff52 	bl	8029ebe <_ZdlPvj>
 800301a:	9801      	ldr	r0, [sp, #4]
 800301c:	b003      	add	sp, #12
 800301e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003022:	bf00      	nop
 8003024:	0802c938 	.word	0x0802c938

08003028 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003028:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 800302a:	f7ff fe69 	bl	8002d00 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800302e:	bd08      	pop	{r3, pc}

08003030 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003030:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003032:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003034:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003036:	4b12      	ldr	r3, [pc, #72]	; (8003080 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003038:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800303a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800303c:	b28d      	uxth	r5, r1
 800303e:	b92b      	cbnz	r3, 800304c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003040:	4b10      	ldr	r3, [pc, #64]	; (8003084 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003042:	4a11      	ldr	r2, [pc, #68]	; (8003088 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003044:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003046:	4811      	ldr	r0, [pc, #68]	; (800308c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003048:	f027 fe20 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800304c:	4910      	ldr	r1, [pc, #64]	; (8003090 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800304e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003050:	8809      	ldrh	r1, [r1, #0]
 8003052:	4291      	cmp	r1, r2
 8003054:	d803      	bhi.n	800305e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003056:	4b0f      	ldr	r3, [pc, #60]	; (8003094 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003058:	4a0b      	ldr	r2, [pc, #44]	; (8003088 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800305a:	216d      	movs	r1, #109	; 0x6d
 800305c:	e7f3      	b.n	8003046 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800305e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8003062:	4b0d      	ldr	r3, [pc, #52]	; (8003098 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800306a:	6803      	ldr	r3, [r0, #0]
 800306c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800306e:	4798      	blx	r3
 8003070:	1a28      	subs	r0, r5, r0
 8003072:	b201      	sxth	r1, r0
 8003074:	4633      	mov	r3, r6
 8003076:	4620      	mov	r0, r4
    }
 8003078:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800307c:	4718      	bx	r3
 800307e:	bf00      	nop
 8003080:	20012dfc 	.word	0x20012dfc
 8003084:	0802c6d0 	.word	0x0802c6d0
 8003088:	0802c712 	.word	0x0802c712
 800308c:	0802c74d 	.word	0x0802c74d
 8003090:	20012e00 	.word	0x20012e00
 8003094:	0802c794 	.word	0x0802c794
 8003098:	20012e04 	.word	0x20012e04

0800309c <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800309c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800309e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80030a2:	4299      	cmp	r1, r3
{
 80030a4:	4604      	mov	r4, r0
 80030a6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80030a8:	d103      	bne.n	80030b2 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80030aa:	f012 fde9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80030ae:	f001 fbf1 	bl	8004894 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80030b2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80030b6:	429d      	cmp	r5, r3
 80030b8:	d103      	bne.n	80030c2 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80030ba:	f012 fde1 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 80030be:	f001 fca9 	bl	8004a14 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80030c2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80030c6:	42a5      	cmp	r5, r4
 80030c8:	d105      	bne.n	80030d6 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80030ca:	f012 fdd9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 80030ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 80030d2:	f001 bcaf 	b.w	8004a34 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 80030d6:	bd38      	pop	{r3, r4, r5, pc}

080030d8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80030d8:	2200      	movs	r2, #0
 80030da:	f04f 31ff 	mov.w	r1, #4294967295
 80030de:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80030e2:	6082      	str	r2, [r0, #8]
    }
 80030e4:	4770      	bx	lr

080030e6 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80030e6:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80030e8:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80030ea:	4604      	mov	r4, r0
        setX(x);
 80030ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80030ee:	4615      	mov	r5, r2
        setX(x);
 80030f0:	4798      	blx	r3
        setY(y);
 80030f2:	6823      	ldr	r3, [r4, #0]
 80030f4:	4629      	mov	r1, r5
 80030f6:	4620      	mov	r0, r4
 80030f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80030fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80030fe:	4718      	bx	r3

08003100 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003100:	b570      	push	{r4, r5, r6, lr}
 8003102:	4604      	mov	r4, r0
 8003104:	461d      	mov	r5, r3
 8003106:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800310a:	f7ff ffec 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800310e:	6823      	ldr	r3, [r4, #0]
 8003110:	4629      	mov	r1, r5
 8003112:	4620      	mov	r0, r4
 8003114:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003116:	4798      	blx	r3
        setHeight(height);
 8003118:	6823      	ldr	r3, [r4, #0]
 800311a:	4631      	mov	r1, r6
 800311c:	4620      	mov	r0, r4
 800311e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003120:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003124:	4718      	bx	r3
	...

08003128 <_ZN8touchgfx6WidgetC1Ev>:
 8003128:	2200      	movs	r2, #0
 800312a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800312e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003132:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003136:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800313a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800313e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003140:	4a01      	ldr	r2, [pc, #4]	; (8003148 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003142:	6002      	str	r2, [r0, #0]
 8003144:	4770      	bx	lr
 8003146:	bf00      	nop
 8003148:	0802c818 	.word	0x0802c818

0800314c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 800314c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800314e:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8003150:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003152:	2100      	movs	r1, #0
 8003154:	f027 ff9f 	bl	802b096 <memset>
 8003158:	4620      	mov	r0, r4
 800315a:	f7ff ffe5 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 800315e:	4b0a      	ldr	r3, [pc, #40]	; (8003188 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003160:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8003162:	4b0a      	ldr	r3, [pc, #40]	; (800318c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003164:	62a3      	str	r3, [r4, #40]	; 0x28
 8003166:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800316a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 800316c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003170:	2300      	movs	r3, #0
 8003172:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003176:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800317a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800317e:	8723      	strh	r3, [r4, #56]	; 0x38
 8003180:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003182:	4620      	mov	r0, r4
 8003184:	bd10      	pop	{r4, pc}
 8003186:	bf00      	nop
 8003188:	0802f150 	.word	0x0802f150
 800318c:	0802c880 	.word	0x0802c880

08003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003190:	4b1a      	ldr	r3, [pc, #104]	; (80031fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003192:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003194:	881b      	ldrh	r3, [r3, #0]
 8003196:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003198:	428b      	cmp	r3, r1
    void updateTextPosition()
 800319a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 800319c:	d92b      	bls.n	80031f6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800319e:	4b18      	ldr	r3, [pc, #96]	; (8003200 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	b92b      	cbnz	r3, 80031b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80031a4:	4b17      	ldr	r3, [pc, #92]	; (8003204 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80031a6:	4a18      	ldr	r2, [pc, #96]	; (8003208 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80031a8:	4818      	ldr	r0, [pc, #96]	; (800320c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80031aa:	216c      	movs	r1, #108	; 0x6c
 80031ac:	f027 fd6e 	bl	802ac8c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80031b0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80031b4:	4b16      	ldr	r3, [pc, #88]	; (8003210 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80031bc:	4b15      	ldr	r3, [pc, #84]	; (8003214 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80031be:	6818      	ldr	r0, [r3, #0]
 80031c0:	f005 ff74 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80031c4:	682b      	ldr	r3, [r5, #0]
 80031c6:	9001      	str	r0, [sp, #4]
 80031c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80031ca:	4628      	mov	r0, r5
 80031cc:	4798      	blx	r3
 80031ce:	682b      	ldr	r3, [r5, #0]
 80031d0:	9901      	ldr	r1, [sp, #4]
 80031d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80031d4:	4604      	mov	r4, r0
 80031d6:	4628      	mov	r0, r5
 80031d8:	4798      	blx	r3
 80031da:	682b      	ldr	r3, [r5, #0]
 80031dc:	9901      	ldr	r1, [sp, #4]
 80031de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031e0:	fb14 f400 	smulbb	r4, r4, r0
 80031e4:	4628      	mov	r0, r5
 80031e6:	4798      	blx	r3
 80031e8:	b2a4      	uxth	r4, r4
 80031ea:	1823      	adds	r3, r4, r0
 80031ec:	b21b      	sxth	r3, r3
 80031ee:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80031f2:	b002      	add	sp, #8
 80031f4:	bd70      	pop	{r4, r5, r6, pc}
 80031f6:	2300      	movs	r3, #0
 80031f8:	e7f9      	b.n	80031ee <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80031fa:	bf00      	nop
 80031fc:	20012e00 	.word	0x20012e00
 8003200:	20012dfc 	.word	0x20012dfc
 8003204:	0802c6d0 	.word	0x0802c6d0
 8003208:	0802c712 	.word	0x0802c712
 800320c:	0802c74d 	.word	0x0802c74d
 8003210:	20012e04 	.word	0x20012e04
 8003214:	20012e08 	.word	0x20012e08

08003218 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8003218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800321c:	ed2d 8b06 	vpush	{d8-d10}
 8003220:	4604      	mov	r4, r0
 8003222:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 8003224:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003226:	2500      	movs	r5, #0
 8003228:	f014 f9aa 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 800322c:	4b66      	ldr	r3, [pc, #408]	; (80033c8 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 800322e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003230:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003234:	2226      	movs	r2, #38	; 0x26
 8003236:	4629      	mov	r1, r5
 8003238:	4658      	mov	r0, fp
 800323a:	f027 ff2c 	bl	802b096 <memset>
 800323e:	4658      	mov	r0, fp
 8003240:	f7ff ff72 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8003244:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003248:	26ff      	movs	r6, #255	; 0xff
 800324a:	4b60      	ldr	r3, [pc, #384]	; (80033cc <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 800324c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800324e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003250:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003254:	4629      	mov	r1, r5
 8003256:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800325a:	4650      	mov	r0, sl
        : color(col)
 800325c:	66a5      	str	r5, [r4, #104]	; 0x68
 800325e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003262:	f027 ff18 	bl	802b096 <memset>
 8003266:	4650      	mov	r0, sl
 8003268:	f7ff ff5e 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 800326c:	4b58      	ldr	r3, [pc, #352]	; (80033d0 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 800326e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003270:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003274:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003278:	a90a      	add	r1, sp, #40	; 0x28
 800327a:	4650      	mov	r0, sl
 800327c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003280:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003284:	f00f fff3 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8003288:	4648      	mov	r0, r9
 800328a:	f7ff ff5f 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 800328e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8003292:	4b50      	ldr	r3, [pc, #320]	; (80033d4 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8003294:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003298:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800329c:	4638      	mov	r0, r7
 800329e:	f00e feaf 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 80032a2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80032a6:	4618      	mov	r0, r3
 80032a8:	9303      	str	r3, [sp, #12]
 80032aa:	f7ff fd3d 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80032ae:	4b4a      	ldr	r3, [pc, #296]	; (80033d8 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 80032b0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80032b4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80032b8:	3324      	adds	r3, #36	; 0x24
 80032ba:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80032be:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80032c2:	4640      	mov	r0, r8
 80032c4:	f7ff ff42 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80032c8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80032cc:	4618      	mov	r0, r3
 80032ce:	ee08 3a10 	vmov	s16, r3
 80032d2:	f7ff ff3b 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80032d6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80032da:	4618      	mov	r0, r3
 80032dc:	ee08 3a90 	vmov	s17, r3
 80032e0:	f7ff ff34 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80032e4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80032e8:	4618      	mov	r0, r3
 80032ea:	ee09 3a10 	vmov	s18, r3
 80032ee:	f010 f8ff 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80032f2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80032f6:	4618      	mov	r0, r3
 80032f8:	ee09 3a90 	vmov	s19, r3
 80032fc:	f010 f8f8 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003300:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8003304:	4618      	mov	r0, r3
 8003306:	ee0a 3a10 	vmov	s20, r3
 800330a:	f010 f8f1 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800330e:	4a33      	ldr	r2, [pc, #204]	; (80033dc <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8003310:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003314:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8003318:	4a31      	ldr	r2, [pc, #196]	; (80033e0 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800331a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800331e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8003322:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8003326:	f010 ff9f 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800332a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800332e:	462a      	mov	r2, r5
 8003330:	4658      	mov	r0, fp
 8003332:	9300      	str	r3, [sp, #0]
 8003334:	4629      	mov	r1, r5
 8003336:	23f0      	movs	r3, #240	; 0xf0
 8003338:	f7ff fee2 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800333c:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800333e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003342:	66a3      	str	r3, [r4, #104]	; 0x68
 8003344:	4659      	mov	r1, fp
 8003346:	4630      	mov	r0, r6
 8003348:	f00d fa02 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800334c:	462a      	mov	r2, r5
 800334e:	4650      	mov	r0, sl
 8003350:	4629      	mov	r1, r5
 8003352:	f7ff fec8 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8003356:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003358:	4650      	mov	r0, sl
 800335a:	a90a      	add	r1, sp, #40	; 0x28
 800335c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003360:	f00f ff85 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003364:	4651      	mov	r1, sl
 8003366:	4630      	mov	r0, r6
 8003368:	f00d f9f2 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 800336c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8003370:	2159      	movs	r1, #89	; 0x59
 8003372:	4648      	mov	r0, r9
 8003374:	f7ff feb7 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003378:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800337c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003380:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8003384:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003388:	4650      	mov	r0, sl
 800338a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800338e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003392:	4649      	mov	r1, r9
 8003394:	4798      	blx	r3
 8003396:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800339a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800339e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80033a2:	4b10      	ldr	r3, [pc, #64]	; (80033e4 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 80033a4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 80033a6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80033aa:	b92b      	cbnz	r3, 80033b8 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 80033ac:	4b0e      	ldr	r3, [pc, #56]	; (80033e8 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 80033ae:	4a0f      	ldr	r2, [pc, #60]	; (80033ec <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 80033b0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80033b2:	480f      	ldr	r0, [pc, #60]	; (80033f0 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 80033b4:	f027 fc6a 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80033b8:	4b0e      	ldr	r3, [pc, #56]	; (80033f4 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80033ba:	881b      	ldrh	r3, [r3, #0]
 80033bc:	2b24      	cmp	r3, #36	; 0x24
 80033be:	d81d      	bhi.n	80033fc <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 80033c0:	4b0d      	ldr	r3, [pc, #52]	; (80033f8 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 80033c2:	4a0a      	ldr	r2, [pc, #40]	; (80033ec <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 80033c4:	2161      	movs	r1, #97	; 0x61
 80033c6:	e7f4      	b.n	80033b2 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 80033c8:	0802c938 	.word	0x0802c938
 80033cc:	0802f1e0 	.word	0x0802f1e0
 80033d0:	0802f3a8 	.word	0x0802f3a8
 80033d4:	0802c890 	.word	0x0802c890
 80033d8:	0802ef14 	.word	0x0802ef14
 80033dc:	0802c920 	.word	0x0802c920
 80033e0:	0800309d 	.word	0x0800309d
 80033e4:	20012dfc 	.word	0x20012dfc
 80033e8:	0802c6d0 	.word	0x0802c6d0
 80033ec:	0802c7d2 	.word	0x0802c7d2
 80033f0:	0802c74d 	.word	0x0802c74d
 80033f4:	20012e00 	.word	0x20012e00
 80033f8:	0802c794 	.word	0x0802c794
        return texts->getText(typedTextId);
 80033fc:	4b93      	ldr	r3, [pc, #588]	; (800364c <_ZN19CalibrationViewBaseC1Ev+0x434>)
 80033fe:	2124      	movs	r1, #36	; 0x24
 8003400:	6818      	ldr	r0, [r3, #0]
 8003402:	f005 fe53 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8003406:	4a92      	ldr	r2, [pc, #584]	; (8003650 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8003408:	4603      	mov	r3, r0
 800340a:	2104      	movs	r1, #4
 800340c:	4650      	mov	r0, sl
 800340e:	f015 fda7 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8003412:	4648      	mov	r0, r9
        wc1 = value;
 8003414:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8003418:	f00f fb2e 	bl	8012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800341c:	4b8d      	ldr	r3, [pc, #564]	; (8003654 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 800341e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8003420:	a90a      	add	r1, sp, #40	; 0x28
 8003422:	2325      	movs	r3, #37	; 0x25
 8003424:	4648      	mov	r0, r9
 8003426:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800342a:	f00f fb45 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800342e:	4649      	mov	r1, r9
 8003430:	4630      	mov	r0, r6
 8003432:	f00d f98d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003436:	230a      	movs	r3, #10
 8003438:	9300      	str	r3, [sp, #0]
 800343a:	2232      	movs	r2, #50	; 0x32
 800343c:	23f0      	movs	r3, #240	; 0xf0
 800343e:	4629      	mov	r1, r5
 8003440:	4638      	mov	r0, r7
 8003442:	f7ff fe5d 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8003446:	9b03      	ldr	r3, [sp, #12]
 8003448:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800344c:	22a0      	movs	r2, #160	; 0xa0
 800344e:	4611      	mov	r1, r2
 8003450:	4638      	mov	r0, r7
 8003452:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003456:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800345a:	f00e fee7 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800345e:	22a0      	movs	r2, #160	; 0xa0
 8003460:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003464:	4638      	mov	r0, r7
 8003466:	f00e feec 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 800346a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800346e:	2b20      	cmp	r3, #32
 8003470:	d005      	beq.n	800347e <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003472:	2320      	movs	r3, #32
 8003474:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8003478:	4638      	mov	r0, r7
 800347a:	f00e fde1 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800347e:	4638      	mov	r0, r7
 8003480:	2101      	movs	r1, #1
 8003482:	f00e fee9 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003486:	4639      	mov	r1, r7
 8003488:	4630      	mov	r0, r6
 800348a:	ad04      	add	r5, sp, #16
        color = newColor;
 800348c:	f04f 37ff 	mov.w	r7, #4294967295
 8003490:	f00d f95e 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8003494:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8003498:	223c      	movs	r2, #60	; 0x3c
 800349a:	4640      	mov	r0, r8
 800349c:	2146      	movs	r1, #70	; 0x46
 800349e:	f7ff fe22 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80034a2:	4641      	mov	r1, r8
 80034a4:	4628      	mov	r0, r5
        color = newColor;
 80034a6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80034aa:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80034ae:	f00f f869 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80034b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034b6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80034ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80034be:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8003654 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 80034c2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80034c6:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 80034c8:	a90a      	add	r1, sp, #40	; 0x28
 80034ca:	4640      	mov	r0, r8
 80034cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034d0:	f00f faf2 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034d4:	4641      	mov	r1, r8
 80034d6:	4630      	mov	r0, r6
 80034d8:	f00d f93a 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80034dc:	ee18 0a10 	vmov	r0, s16
 80034e0:	2223      	movs	r2, #35	; 0x23
 80034e2:	2145      	movs	r1, #69	; 0x45
 80034e4:	f7ff fdff 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80034e8:	ee18 1a10 	vmov	r1, s16
 80034ec:	4628      	mov	r0, r5
        color = newColor;
 80034ee:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80034f2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80034f6:	f00f f845 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80034fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034fe:	ee18 3a10 	vmov	r3, s16
 8003502:	333c      	adds	r3, #60	; 0x3c
 8003504:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003508:	235a      	movs	r3, #90	; 0x5a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 800350a:	ee18 0a10 	vmov	r0, s16
 800350e:	a90a      	add	r1, sp, #40	; 0x28
 8003510:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003514:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003518:	f00f face 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800351c:	ee18 1a10 	vmov	r1, s16
 8003520:	4630      	mov	r0, r6
 8003522:	f00d f915 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003526:	ee18 0a90 	vmov	r0, s17
 800352a:	220c      	movs	r2, #12
 800352c:	2136      	movs	r1, #54	; 0x36
 800352e:	f7ff fdda 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8003532:	ee18 1a90 	vmov	r1, s17
 8003536:	4628      	mov	r0, r5
        color = newColor;
 8003538:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800353c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8003540:	f00f f820 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003544:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003548:	ee18 3a90 	vmov	r3, s17
 800354c:	333c      	adds	r3, #60	; 0x3c
 800354e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003552:	2359      	movs	r3, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8003554:	ee18 0a90 	vmov	r0, s17
 8003558:	a90a      	add	r1, sp, #40	; 0x28
 800355a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800355e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003562:	f00f faa9 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003566:	ee18 1a90 	vmov	r1, s17
 800356a:	4630      	mov	r0, r6
 800356c:	f00d f8f0 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8003570:	ee19 0a10 	vmov	r0, s18
 8003574:	22f0      	movs	r2, #240	; 0xf0
 8003576:	2121      	movs	r1, #33	; 0x21
 8003578:	f7ff fdb5 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800357c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003580:	aa0a      	add	r2, sp, #40	; 0x28
 8003582:	f04f 0802 	mov.w	r8, #2
 8003586:	a909      	add	r1, sp, #36	; 0x24
 8003588:	ee19 0a10 	vmov	r0, s18
 800358c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8003590:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8003594:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003598:	f00f fc73 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800359c:	2358      	movs	r3, #88	; 0x58
 800359e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80035a2:	3510      	adds	r5, #16
        updateTextPosition();
 80035a4:	ee19 0a10 	vmov	r0, s18
 80035a8:	f7ff fdf2 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80035ac:	ee19 1a10 	vmov	r1, s18
 80035b0:	4630      	mov	r0, r6
        colorPressed = col;
 80035b2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80035b6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80035ba:	f00d f8c9 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80035be:	ee19 0a90 	vmov	r0, s19
 80035c2:	22aa      	movs	r2, #170	; 0xaa
 80035c4:	2121      	movs	r1, #33	; 0x21
 80035c6:	f7ff fd8e 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80035ca:	aa0a      	add	r2, sp, #40	; 0x28
 80035cc:	a909      	add	r1, sp, #36	; 0x24
 80035ce:	ee19 0a90 	vmov	r0, s19
 80035d2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80035d6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80035da:	f00f fc52 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80035de:	2357      	movs	r3, #87	; 0x57
 80035e0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80035e4:	ee19 0a90 	vmov	r0, s19
 80035e8:	f7ff fdd2 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80035ec:	ee19 1a90 	vmov	r1, s19
 80035f0:	4630      	mov	r0, r6
        colorPressed = col;
 80035f2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80035f6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80035fa:	f00d f8a9 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80035fe:	ee1a 0a10 	vmov	r0, s20
 8003602:	2264      	movs	r2, #100	; 0x64
 8003604:	2121      	movs	r1, #33	; 0x21
 8003606:	f7ff fd6e 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800360a:	aa0a      	add	r2, sp, #40	; 0x28
 800360c:	a909      	add	r1, sp, #36	; 0x24
 800360e:	ee1a 0a10 	vmov	r0, s20
 8003612:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8003616:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800361a:	f00f fc32 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800361e:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 8003620:	ee1a 0a10 	vmov	r0, s20
 8003624:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8003628:	f7ff fdb2 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800362c:	4630      	mov	r0, r6
        colorPressed = col;
 800362e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8003632:	ee1a 1a10 	vmov	r1, s20
 8003636:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800363a:	f00d f889 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800363e:	4620      	mov	r0, r4
 8003640:	b00d      	add	sp, #52	; 0x34
 8003642:	ecbd 8b06 	vpop	{d8-d10}
 8003646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800364a:	bf00      	nop
 800364c:	20012e08 	.word	0x20012e08
 8003650:	0802c80a 	.word	0x0802c80a
 8003654:	0802c880 	.word	0x0802c880

08003658 <_ZN24Calibration_HallViewBase25function_cali_hall_sensorEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_hall_sensor()
    {
        // Override and implement this function in Calibration_Hall
    }
 8003658:	4770      	bx	lr

0800365a <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 800365a:	4770      	bx	lr

0800365c <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800365c:	4770      	bx	lr

0800365e <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800365e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003660:	68c2      	ldr	r2, [r0, #12]
 8003662:	6844      	ldr	r4, [r0, #4]
 8003664:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003666:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003668:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800366c:	07d2      	lsls	r2, r2, #31
 800366e:	bf48      	it	mi
 8003670:	5962      	ldrmi	r2, [r4, r5]
 8003672:	689b      	ldr	r3, [r3, #8]
    }
 8003674:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003676:	bf48      	it	mi
 8003678:	58d3      	ldrmi	r3, [r2, r3]
 800367a:	4718      	bx	r3

0800367c <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800367c:	6843      	ldr	r3, [r0, #4]
 800367e:	b12b      	cbz	r3, 800368c <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003680:	6883      	ldr	r3, [r0, #8]
 8003682:	b92b      	cbnz	r3, 8003690 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003684:	68c0      	ldr	r0, [r0, #12]
 8003686:	f000 0001 	and.w	r0, r0, #1
 800368a:	4770      	bx	lr
 800368c:	4618      	mov	r0, r3
 800368e:	4770      	bx	lr
 8003690:	2001      	movs	r0, #1
    }
 8003692:	4770      	bx	lr

08003694 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003694:	b510      	push	{r4, lr}
 8003696:	2110      	movs	r1, #16
 8003698:	4604      	mov	r4, r0
 800369a:	f026 fc10 	bl	8029ebe <_ZdlPvj>
 800369e:	4620      	mov	r0, r4
 80036a0:	bd10      	pop	{r4, pc}
	...

080036a4 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 80036a4:	b510      	push	{r4, lr}
 80036a6:	4b03      	ldr	r3, [pc, #12]	; (80036b4 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 80036a8:	6003      	str	r3, [r0, #0]
 80036aa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80036ac:	f010 fde6 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80036b0:	4620      	mov	r0, r4
 80036b2:	bd10      	pop	{r4, pc}
 80036b4:	0802c984 	.word	0x0802c984

080036b8 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 80036b8:	b507      	push	{r0, r1, r2, lr}
 80036ba:	4b07      	ldr	r3, [pc, #28]	; (80036d8 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 80036bc:	6003      	str	r3, [r0, #0]
 80036be:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80036c0:	f010 fddc 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80036c4:	9801      	ldr	r0, [sp, #4]
 80036c6:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 80036ca:	f026 fbf8 	bl	8029ebe <_ZdlPvj>
 80036ce:	9801      	ldr	r0, [sp, #4]
 80036d0:	b003      	add	sp, #12
 80036d2:	f85d fb04 	ldr.w	pc, [sp], #4
 80036d6:	bf00      	nop
 80036d8:	0802c984 	.word	0x0802c984

080036dc <_ZN24Calibration_HallViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_HallViewBase::handleTickEvent()
{
 80036dc:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 80036de:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 80036e2:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 80036e6:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80036e8:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 80036ea:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80036ee:	d105      	bne.n	80036fc <_ZN24Calibration_HallViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_hall_sensor
        function_cali_hall_sensor();
 80036f0:	6803      	ldr	r3, [r0, #0]
 80036f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80036f4:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80036f6:	2300      	movs	r3, #0
 80036f8:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 80036fc:	bd10      	pop	{r4, pc}

080036fe <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80036fe:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 8003702:	4288      	cmp	r0, r1
{
 8003704:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003706:	d105      	bne.n	8003714 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003708:	f012 faba 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
}
 800370c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003710:	f001 b970 	b.w	80049f4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003714:	bd08      	pop	{r3, pc}
	...

08003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003718:	b510      	push	{r4, lr}
 800371a:	4604      	mov	r4, r0
        : TextArea()
 800371c:	f7ff fd16 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003720:	4b02      	ldr	r3, [pc, #8]	; (800372c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8003722:	6023      	str	r3, [r4, #0]
 8003724:	2300      	movs	r3, #0
 8003726:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003728:	4620      	mov	r0, r4
 800372a:	bd10      	pop	{r4, pc}
 800372c:	0802c890 	.word	0x0802c890

08003730 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8003730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003734:	ed2d 8b06 	vpush	{d8-d10}
 8003738:	4604      	mov	r4, r0
 800373a:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 800373c:	46a3      	mov	fp, r4
 800373e:	2500      	movs	r5, #0
 8003740:	f013 ff1e 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8003744:	4b69      	ldr	r3, [pc, #420]	; (80038ec <_ZN24Calibration_HallViewBaseC1Ev+0x1bc>)
 8003746:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003748:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800374c:	2226      	movs	r2, #38	; 0x26
 800374e:	4629      	mov	r1, r5
 8003750:	4658      	mov	r0, fp
 8003752:	f027 fca0 	bl	802b096 <memset>
 8003756:	4658      	mov	r0, fp
 8003758:	f7ff fce6 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 800375c:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8003760:	27ff      	movs	r7, #255	; 0xff
 8003762:	4b63      	ldr	r3, [pc, #396]	; (80038f0 <_ZN24Calibration_HallViewBaseC1Ev+0x1c0>)
 8003764:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003766:	2226      	movs	r2, #38	; 0x26
 8003768:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800376c:	4629      	mov	r1, r5
 800376e:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003772:	4630      	mov	r0, r6
 8003774:	66a5      	str	r5, [r4, #104]	; 0x68
 8003776:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800377a:	f027 fc8c 	bl	802b096 <memset>
 800377e:	4630      	mov	r0, r6
 8003780:	f7ff fcd2 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8003784:	4b5b      	ldr	r3, [pc, #364]	; (80038f4 <_ZN24Calibration_HallViewBaseC1Ev+0x1c4>)
 8003786:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003788:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800378c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003790:	a90a      	add	r1, sp, #40	; 0x28
 8003792:	4630      	mov	r0, r6
 8003794:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003798:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800379c:	f00f fd67 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80037a0:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 80037a4:	4650      	mov	r0, sl
 80037a6:	f7ff ffb7 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80037aa:	4648      	mov	r0, r9
 80037ac:	f7ff ffb4 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80037b0:	f504 7398 	add.w	r3, r4, #304	; 0x130
 80037b4:	4618      	mov	r0, r3
 80037b6:	ee09 3a10 	vmov	s18, r3
 80037ba:	f7ff ffad 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80037be:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 80037c2:	4618      	mov	r0, r3
 80037c4:	ee09 3a90 	vmov	s19, r3
 80037c8:	f7ff ffa6 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80037cc:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 80037d0:	4618      	mov	r0, r3
 80037d2:	ee0a 3a10 	vmov	s20, r3
 80037d6:	f00f fe8b 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80037da:	f504 7304 	add.w	r3, r4, #528	; 0x210
 80037de:	4618      	mov	r0, r3
 80037e0:	f504 7816 	add.w	r8, r4, #600	; 0x258
 80037e4:	ee0a 3a90 	vmov	s21, r3
 80037e8:	f7ff fcb0 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80037ec:	4640      	mov	r0, r8
 80037ee:	f00e fc07 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 80037f2:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80037f6:	4618      	mov	r0, r3
 80037f8:	9302      	str	r3, [sp, #8]
 80037fa:	f7ff fa95 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80037fe:	4b3e      	ldr	r3, [pc, #248]	; (80038f8 <_ZN24Calibration_HallViewBaseC1Ev+0x1c8>)
 8003800:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 8003804:	3324      	adds	r3, #36	; 0x24
 8003806:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 800380a:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 800380e:	4618      	mov	r0, r3
 8003810:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
 8003814:	ee08 3a10 	vmov	s16, r3
 8003818:	f7ff fc98 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 800381c:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003820:	4618      	mov	r0, r3
 8003822:	ee08 3a90 	vmov	s17, r3
 8003826:	f7ff fc91 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800382a:	4a34      	ldr	r2, [pc, #208]	; (80038fc <_ZN24Calibration_HallViewBaseC1Ev+0x1cc>)
 800382c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003830:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 8003834:	4a32      	ldr	r2, [pc, #200]	; (8003900 <_ZN24Calibration_HallViewBaseC1Ev+0x1d0>)
 8003836:	f8c3 51dc 	str.w	r5, [r3, #476]	; 0x1dc
 800383a:	e9c3 2575 	strd	r2, r5, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800383e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003842:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003846:	f010 fd0f 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800384a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800384e:	462a      	mov	r2, r5
 8003850:	4658      	mov	r0, fp
 8003852:	9300      	str	r3, [sp, #0]
 8003854:	4629      	mov	r1, r5
 8003856:	23f0      	movs	r3, #240	; 0xf0
 8003858:	f7ff fc52 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 800385c:	1d27      	adds	r7, r4, #4
        color = newColor;
 800385e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003862:	66a3      	str	r3, [r4, #104]	; 0x68
 8003864:	4659      	mov	r1, fp
 8003866:	4638      	mov	r0, r7
 8003868:	f00c ff72 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800386c:	462a      	mov	r2, r5
 800386e:	4630      	mov	r0, r6
 8003870:	4629      	mov	r1, r5
 8003872:	f7ff fc38 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8003876:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003878:	4630      	mov	r0, r6
 800387a:	a90a      	add	r1, sp, #40	; 0x28
 800387c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003880:	f00f fcf5 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003884:	4631      	mov	r1, r6
 8003886:	4638      	mov	r0, r7
 8003888:	f00c ff62 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_S.setPosition(0, 160, 207, 27);
 800388c:	231b      	movs	r3, #27
 800388e:	22a0      	movs	r2, #160	; 0xa0
 8003890:	9300      	str	r3, [sp, #0]
 8003892:	4629      	mov	r1, r5
 8003894:	23cf      	movs	r3, #207	; 0xcf
 8003896:	4650      	mov	r0, sl
 8003898:	f7ff fc32 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 800389c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80038a0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80038a4:	ae04      	add	r6, sp, #16
        color = newColor;
 80038a6:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80038aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80038ae:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80038b2:	4651      	mov	r1, sl
 80038b4:	4630      	mov	r0, r6
 80038b6:	4798      	blx	r3
 80038b8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80038bc:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80038c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_96IR).getText());
 80038c4:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 80038c8:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038ca:	4b0e      	ldr	r3, [pc, #56]	; (8003904 <_ZN24Calibration_HallViewBaseC1Ev+0x1d4>)
 80038cc:	681b      	ldr	r3, [r3, #0]
 80038ce:	b92b      	cbnz	r3, 80038dc <_ZN24Calibration_HallViewBaseC1Ev+0x1ac>
 80038d0:	4b0d      	ldr	r3, [pc, #52]	; (8003908 <_ZN24Calibration_HallViewBaseC1Ev+0x1d8>)
 80038d2:	4a0e      	ldr	r2, [pc, #56]	; (800390c <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 80038d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038d6:	480e      	ldr	r0, [pc, #56]	; (8003910 <_ZN24Calibration_HallViewBaseC1Ev+0x1e0>)
 80038d8:	f027 f9d8 	bl	802ac8c <__assert_func>
 80038dc:	4b0d      	ldr	r3, [pc, #52]	; (8003914 <_ZN24Calibration_HallViewBaseC1Ev+0x1e4>)
 80038de:	881b      	ldrh	r3, [r3, #0]
 80038e0:	b9e3      	cbnz	r3, 800391c <_ZN24Calibration_HallViewBaseC1Ev+0x1ec>
 80038e2:	4b0d      	ldr	r3, [pc, #52]	; (8003918 <_ZN24Calibration_HallViewBaseC1Ev+0x1e8>)
 80038e4:	4a09      	ldr	r2, [pc, #36]	; (800390c <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 80038e6:	2161      	movs	r1, #97	; 0x61
 80038e8:	e7f5      	b.n	80038d6 <_ZN24Calibration_HallViewBaseC1Ev+0x1a6>
 80038ea:	bf00      	nop
 80038ec:	0802c984 	.word	0x0802c984
 80038f0:	0802f1e0 	.word	0x0802f1e0
 80038f4:	0802f3a8 	.word	0x0802f3a8
 80038f8:	0802ef14 	.word	0x0802ef14
 80038fc:	0802c96c 	.word	0x0802c96c
 8003900:	080036ff 	.word	0x080036ff
 8003904:	20012dfc 	.word	0x20012dfc
 8003908:	0802c6d0 	.word	0x0802c6d0
 800390c:	0802c7d2 	.word	0x0802c7d2
 8003910:	0802c74d 	.word	0x0802c74d
 8003914:	20012e00 	.word	0x20012e00
 8003918:	0802c794 	.word	0x0802c794
        return texts->getText(typedTextId);
 800391c:	4bd7      	ldr	r3, [pc, #860]	; (8003c7c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 800391e:	4629      	mov	r1, r5
 8003920:	6818      	ldr	r0, [r3, #0]
 8003922:	f005 fbc3 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8003926:	4ad6      	ldr	r2, [pc, #856]	; (8003c80 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003928:	4603      	mov	r3, r0
 800392a:	210a      	movs	r1, #10
 800392c:	9803      	ldr	r0, [sp, #12]
 800392e:	f015 fb17 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003932:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8003934:	4bd3      	ldr	r3, [pc, #844]	; (8003c84 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003936:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_HSL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1XZ));
 800393a:	4650      	mov	r0, sl
 800393c:	930a      	str	r3, [sp, #40]	; 0x28
 800393e:	a90a      	add	r1, sp, #40	; 0x28
 8003940:	2301      	movs	r3, #1
 8003942:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003946:	f00f f8b7 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800394a:	4651      	mov	r1, sl
 800394c:	4638      	mov	r0, r7
 800394e:	f00c feff 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_F.setPosition(25, 187, 207, 22);
 8003952:	2116      	movs	r1, #22
 8003954:	22bb      	movs	r2, #187	; 0xbb
 8003956:	9100      	str	r1, [sp, #0]
 8003958:	23cf      	movs	r3, #207	; 0xcf
 800395a:	2119      	movs	r1, #25
 800395c:	4648      	mov	r0, r9
 800395e:	f7ff fbcf 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003962:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003966:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800396a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800396e:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003972:	4649      	mov	r1, r9
 8003974:	4630      	mov	r0, r6
 8003976:	4798      	blx	r3
 8003978:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800397c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003980:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003984:	49c0      	ldr	r1, [pc, #768]	; (8003c88 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003986:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PU07).getText());
 8003988:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 800398c:	2b00      	cmp	r3, #0
 800398e:	d09f      	beq.n	80038d0 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003990:	48be      	ldr	r0, [pc, #760]	; (8003c8c <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003992:	8803      	ldrh	r3, [r0, #0]
 8003994:	2b02      	cmp	r3, #2
 8003996:	d9a4      	bls.n	80038e2 <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003998:	4ab8      	ldr	r2, [pc, #736]	; (8003c7c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 800399a:	2102      	movs	r1, #2
 800399c:	6810      	ldr	r0, [r2, #0]
 800399e:	f005 fb85 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 80039a2:	4ab7      	ldr	r2, [pc, #732]	; (8003c80 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 80039a4:	4603      	mov	r3, r0
 80039a6:	210a      	movs	r1, #10
 80039a8:	4650      	mov	r0, sl
 80039aa:	f015 fad9 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AFGX));
 80039ae:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 80039b2:	4bb4      	ldr	r3, [pc, #720]	; (8003c84 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 80039b4:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 80039b8:	4661      	mov	r1, ip
 80039ba:	4648      	mov	r0, r9
 80039bc:	f04f 0a03 	mov.w	sl, #3
 80039c0:	930a      	str	r3, [sp, #40]	; 0x28
 80039c2:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 80039c6:	f00f f877 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039ca:	4649      	mov	r1, r9
 80039cc:	4638      	mov	r0, r7
 80039ce:	f00c febf 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_F.setPosition(25, 119, 207, 22);
 80039d2:	f04f 0c16 	mov.w	ip, #22
 80039d6:	2277      	movs	r2, #119	; 0x77
 80039d8:	ee19 0a10 	vmov	r0, s18
 80039dc:	f8cd c000 	str.w	ip, [sp]
 80039e0:	23cf      	movs	r3, #207	; 0xcf
 80039e2:	2119      	movs	r1, #25
 80039e4:	f7ff fb8c 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039e8:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 80039ec:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 80039f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80039f4:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 80039f8:	ee19 1a10 	vmov	r1, s18
 80039fc:	4630      	mov	r0, r6
 80039fe:	4798      	blx	r3
 8003a00:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a04:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003a08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a0c:	499e      	ldr	r1, [pc, #632]	; (8003c88 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003a0e:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IPYE).getText());
 8003a10:	f504 7965 	add.w	r9, r4, #916	; 0x394
 8003a14:	2b00      	cmp	r3, #0
 8003a16:	f43f af5b 	beq.w	80038d0 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a1a:	489c      	ldr	r0, [pc, #624]	; (8003c8c <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003a1c:	8803      	ldrh	r3, [r0, #0]
 8003a1e:	2b04      	cmp	r3, #4
 8003a20:	f67f af5f 	bls.w	80038e2 <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003a24:	4a95      	ldr	r2, [pc, #596]	; (8003c7c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003a26:	2104      	movs	r1, #4
 8003a28:	6810      	ldr	r0, [r2, #0]
 8003a2a:	f005 fb3f 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8003a2e:	4a94      	ldr	r2, [pc, #592]	; (8003c80 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003a30:	4603      	mov	r3, r0
 8003a32:	210a      	movs	r1, #10
 8003a34:	4648      	mov	r0, r9
 8003a36:	f015 fa93 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0EGP));
 8003a3a:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003a3e:	4b91      	ldr	r3, [pc, #580]	; (8003c84 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003a40:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8003a44:	4661      	mov	r1, ip
 8003a46:	ee19 0a10 	vmov	r0, s18
 8003a4a:	930a      	str	r3, [sp, #40]	; 0x28
 8003a4c:	2305      	movs	r3, #5
 8003a4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003a52:	f00f f831 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a56:	ee19 1a10 	vmov	r1, s18
 8003a5a:	4638      	mov	r0, r7
 8003a5c:	f00c fe78 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_S.setPosition(0, 92, 207, 27);
 8003a60:	f04f 0c1b 	mov.w	ip, #27
 8003a64:	225c      	movs	r2, #92	; 0x5c
 8003a66:	ee19 0a90 	vmov	r0, s19
 8003a6a:	f8cd c000 	str.w	ip, [sp]
 8003a6e:	23cf      	movs	r3, #207	; 0xcf
 8003a70:	4629      	mov	r1, r5
 8003a72:	f7ff fb45 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a76:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 8003a7a:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 8003a7e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003a82:	f8a4 51b0 	strh.w	r5, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8003a86:	ee19 1a90 	vmov	r1, s19
 8003a8a:	4630      	mov	r0, r6
 8003a8c:	4798      	blx	r3
 8003a8e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a92:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8003a96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a9a:	497b      	ldr	r1, [pc, #492]	; (8003c88 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003a9c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KCM3).getText());
 8003a9e:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 8003aa2:	2b00      	cmp	r3, #0
 8003aa4:	f43f af14 	beq.w	80038d0 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003aa8:	4878      	ldr	r0, [pc, #480]	; (8003c8c <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003aaa:	8803      	ldrh	r3, [r0, #0]
 8003aac:	2b06      	cmp	r3, #6
 8003aae:	f67f af18 	bls.w	80038e2 <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003ab2:	4a72      	ldr	r2, [pc, #456]	; (8003c7c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003ab4:	2106      	movs	r1, #6
 8003ab6:	6810      	ldr	r0, [r2, #0]
 8003ab8:	f005 faf8 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8003abc:	4a70      	ldr	r2, [pc, #448]	; (8003c80 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003abe:	4603      	mov	r3, r0
 8003ac0:	210a      	movs	r1, #10
 8003ac2:	4648      	mov	r0, r9
 8003ac4:	f015 fa4c 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003ac8:	4b6e      	ldr	r3, [pc, #440]	; (8003c84 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003aca:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_HSR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MWJ));
 8003acc:	ee19 0a90 	vmov	r0, s19
 8003ad0:	2307      	movs	r3, #7
 8003ad2:	a90a      	add	r1, sp, #40	; 0x28
 8003ad4:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003ad8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003adc:	f00e ffec 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ae0:	ee19 1a90 	vmov	r1, s19
 8003ae4:	4638      	mov	r0, r7
 8003ae6:	f00c fe33 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003aea:	ee1a 0a10 	vmov	r0, s20
 8003aee:	f240 1201 	movw	r2, #257	; 0x101
 8003af2:	2121      	movs	r1, #33	; 0x21
 8003af4:	f7ff faf7 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003af8:	aa0a      	add	r2, sp, #40	; 0x28
 8003afa:	2302      	movs	r3, #2
 8003afc:	a909      	add	r1, sp, #36	; 0x24
 8003afe:	ee1a 0a10 	vmov	r0, s20
 8003b02:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003b06:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8003b0a:	f00f f9ba 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003b0e:	2319      	movs	r3, #25
        updateTextPosition();
 8003b10:	ee1a 0a10 	vmov	r0, s20
 8003b14:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8003b18:	f7ff fb3a 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003b1c:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8003b20:	330c      	adds	r3, #12
 8003b22:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8003b26:	ee1a 1a10 	vmov	r1, s20
 8003b2a:	4638      	mov	r0, r7
        colorPressed = col;
 8003b2c:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8003b30:	f00c fe0e 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(32, 60);
 8003b34:	223c      	movs	r2, #60	; 0x3c
 8003b36:	ee1a 0a90 	vmov	r0, s21
 8003b3a:	2120      	movs	r1, #32
 8003b3c:	f7ff fad3 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8003b40:	ee1a 1a90 	vmov	r1, s21
 8003b44:	4630      	mov	r0, r6
        color = newColor;
 8003b46:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8003b4a:	f8a4 5244 	strh.w	r5, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8003b4e:	f00e fd19 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003b52:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003b56:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003b5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003b5e:	4b49      	ldr	r3, [pc, #292]	; (8003c84 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003b60:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8003b62:	ee1a 0a90 	vmov	r0, s21
 8003b66:	231a      	movs	r3, #26
 8003b68:	a90a      	add	r1, sp, #40	; 0x28
 8003b6a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003b6e:	f00e ffa3 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b72:	ee1a 1a90 	vmov	r1, s21
 8003b76:	4638      	mov	r0, r7
 8003b78:	f00c fdea 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003b7c:	230a      	movs	r3, #10
 8003b7e:	9300      	str	r3, [sp, #0]
 8003b80:	2232      	movs	r2, #50	; 0x32
 8003b82:	23f0      	movs	r3, #240	; 0xf0
 8003b84:	4629      	mov	r1, r5
 8003b86:	4640      	mov	r0, r8
 8003b88:	f7ff faba 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b8c:	9b02      	ldr	r3, [sp, #8]
 8003b8e:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b92:	22a0      	movs	r2, #160	; 0xa0
 8003b94:	4611      	mov	r1, r2
 8003b96:	4640      	mov	r0, r8
 8003b98:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003b9c:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 8003ba0:	f00e fb44 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003ba4:	22a0      	movs	r2, #160	; 0xa0
 8003ba6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003baa:	4640      	mov	r0, r8
 8003bac:	f00e fb49 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003bb0:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8003bb4:	2b20      	cmp	r3, #32
 8003bb6:	d005      	beq.n	8003bc4 <_ZN24Calibration_HallViewBaseC1Ev+0x494>
        lineWidthQ5 = widthQ5;
 8003bb8:	2320      	movs	r3, #32
 8003bba:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 8003bbe:	4640      	mov	r0, r8
 8003bc0:	f00e fa3e 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003bc4:	4640      	mov	r0, r8
 8003bc6:	2101      	movs	r1, #1
 8003bc8:	f00e fb46 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003bcc:	4641      	mov	r1, r8
 8003bce:	4638      	mov	r0, r7
 8003bd0:	f00c fdbe 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003bd4:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8003bd6:	ee18 0a10 	vmov	r0, s16
 8003bda:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8003bdc:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 8003be0:	f04f 0800 	mov.w	r8, #0
 8003be4:	2145      	movs	r1, #69	; 0x45
 8003be6:	f7ff fa7e 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003bea:	ee18 1a10 	vmov	r1, s16
 8003bee:	4628      	mov	r0, r5
        color = newColor;
 8003bf0:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8003bf4:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8003bf8:	f00e fcc4 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003bfc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c00:	ee18 3a10 	vmov	r3, s16
 8003c04:	333c      	adds	r3, #60	; 0x3c
 8003c06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003c0a:	4e1e      	ldr	r6, [pc, #120]	; (8003c84 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003c0c:	960a      	str	r6, [sp, #40]	; 0x28
 8003c0e:	231b      	movs	r3, #27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003c10:	ee18 0a10 	vmov	r0, s16
 8003c14:	a90a      	add	r1, sp, #40	; 0x28
 8003c16:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003c1a:	f00e ff4d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c1e:	ee18 1a10 	vmov	r1, s16
 8003c22:	4638      	mov	r0, r7
 8003c24:	f00c fd94 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003c28:	ee18 0a90 	vmov	r0, s17
 8003c2c:	220c      	movs	r2, #12
 8003c2e:	2136      	movs	r1, #54	; 0x36
 8003c30:	f7ff fa59 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8003c34:	ee18 1a90 	vmov	r1, s17
 8003c38:	4628      	mov	r0, r5
        color = newColor;
 8003c3a:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8003c3e:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8003c42:	f00e fc9f 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003c46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c4a:	ee18 3a90 	vmov	r3, s17
 8003c4e:	333c      	adds	r3, #60	; 0x3c
 8003c50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003c54:	231c      	movs	r3, #28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003c56:	ee18 0a90 	vmov	r0, s17
 8003c5a:	a90a      	add	r1, sp, #40	; 0x28
 8003c5c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003c60:	960a      	str	r6, [sp, #40]	; 0x28
 8003c62:	f00e ff29 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c66:	4638      	mov	r0, r7
 8003c68:	ee18 1a90 	vmov	r1, s17
 8003c6c:	f00c fd70 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003c70:	4620      	mov	r0, r4
 8003c72:	b00d      	add	sp, #52	; 0x34
 8003c74:	ecbd 8b06 	vpop	{d8-d10}
 8003c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c7c:	20012e08 	.word	0x20012e08
 8003c80:	0802c80a 	.word	0x0802c80a
 8003c84:	0802c880 	.word	0x0802c880
 8003c88:	20012dfc 	.word	0x20012dfc
 8003c8c:	20012e00 	.word	0x20012e00

08003c90 <_ZN23Calibration_PadViewBase17function_cali_padEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_pad()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003c90:	4770      	bx	lr

08003c92 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003c92:	4770      	bx	lr

08003c94 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c94:	4770      	bx	lr

08003c96 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003c96:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003c98:	68c2      	ldr	r2, [r0, #12]
 8003c9a:	6844      	ldr	r4, [r0, #4]
 8003c9c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003c9e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003ca0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003ca4:	07d2      	lsls	r2, r2, #31
 8003ca6:	bf48      	it	mi
 8003ca8:	5962      	ldrmi	r2, [r4, r5]
 8003caa:	689b      	ldr	r3, [r3, #8]
    }
 8003cac:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003cae:	bf48      	it	mi
 8003cb0:	58d3      	ldrmi	r3, [r2, r3]
 8003cb2:	4718      	bx	r3

08003cb4 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003cb4:	6843      	ldr	r3, [r0, #4]
 8003cb6:	b12b      	cbz	r3, 8003cc4 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003cb8:	6883      	ldr	r3, [r0, #8]
 8003cba:	b92b      	cbnz	r3, 8003cc8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003cbc:	68c0      	ldr	r0, [r0, #12]
 8003cbe:	f000 0001 	and.w	r0, r0, #1
 8003cc2:	4770      	bx	lr
 8003cc4:	4618      	mov	r0, r3
 8003cc6:	4770      	bx	lr
 8003cc8:	2001      	movs	r0, #1
    }
 8003cca:	4770      	bx	lr

08003ccc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ccc:	b510      	push	{r4, lr}
 8003cce:	2110      	movs	r1, #16
 8003cd0:	4604      	mov	r4, r0
 8003cd2:	f026 f8f4 	bl	8029ebe <_ZdlPvj>
 8003cd6:	4620      	mov	r0, r4
 8003cd8:	bd10      	pop	{r4, pc}
	...

08003cdc <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003cdc:	b510      	push	{r4, lr}
 8003cde:	4b03      	ldr	r3, [pc, #12]	; (8003cec <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003ce0:	6003      	str	r3, [r0, #0]
 8003ce2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003ce4:	f010 faca 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003ce8:	4620      	mov	r0, r4
 8003cea:	bd10      	pop	{r4, pc}
 8003cec:	0802c9d4 	.word	0x0802c9d4

08003cf0 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003cf0:	b507      	push	{r0, r1, r2, lr}
 8003cf2:	4b07      	ldr	r3, [pc, #28]	; (8003d10 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003cf4:	6003      	str	r3, [r0, #0]
 8003cf6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003cf8:	f010 fac0 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003cfc:	9801      	ldr	r0, [sp, #4]
 8003cfe:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003d02:	f026 f8dc 	bl	8029ebe <_ZdlPvj>
 8003d06:	9801      	ldr	r0, [sp, #4]
 8003d08:	b003      	add	sp, #12
 8003d0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d0e:	bf00      	nop
 8003d10:	0802c9d4 	.word	0x0802c9d4

08003d14 <_ZN23Calibration_PadViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_PadViewBase::handleTickEvent()
{
 8003d14:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003d16:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8003d1a:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 8003d1e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003d20:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003d22:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003d26:	d105      	bne.n	8003d34 <_ZN23Calibration_PadViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_pad
        function_cali_pad();
 8003d28:	6803      	ldr	r3, [r0, #0]
 8003d2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d2c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8003d2e:	2300      	movs	r3, #0
 8003d30:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003d34:	bd10      	pop	{r4, pc}

08003d36 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003d36:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 8003d3a:	4288      	cmp	r0, r1
{
 8003d3c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003d3e:	d105      	bne.n	8003d4c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003d40:	f011 ff9e 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003d44:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003d48:	f000 be54 	b.w	80049f4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003d4c:	bd08      	pop	{r3, pc}
	...

08003d50 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d54:	ed2d 8b06 	vpush	{d8-d10}
 8003d58:	4604      	mov	r4, r0
 8003d5a:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003d5c:	46a3      	mov	fp, r4
 8003d5e:	2600      	movs	r6, #0
 8003d60:	f013 fc0e 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8003d64:	4b6a      	ldr	r3, [pc, #424]	; (8003f10 <_ZN23Calibration_PadViewBaseC1Ev+0x1c0>)
 8003d66:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003d68:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8003d6c:	2226      	movs	r2, #38	; 0x26
 8003d6e:	4631      	mov	r1, r6
 8003d70:	4658      	mov	r0, fp
 8003d72:	f027 f990 	bl	802b096 <memset>
 8003d76:	4658      	mov	r0, fp
 8003d78:	f7ff f9d6 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8003d7c:	f104 056c 	add.w	r5, r4, #108	; 0x6c
 8003d80:	27ff      	movs	r7, #255	; 0xff
 8003d82:	4b64      	ldr	r3, [pc, #400]	; (8003f14 <_ZN23Calibration_PadViewBaseC1Ev+0x1c4>)
 8003d84:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003d86:	2226      	movs	r2, #38	; 0x26
 8003d88:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003d8c:	4631      	mov	r1, r6
 8003d8e:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003d92:	4628      	mov	r0, r5
 8003d94:	66a6      	str	r6, [r4, #104]	; 0x68
 8003d96:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003d9a:	f027 f97c 	bl	802b096 <memset>
 8003d9e:	4628      	mov	r0, r5
 8003da0:	f7ff f9c2 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8003da4:	4b5c      	ldr	r3, [pc, #368]	; (8003f18 <_ZN23Calibration_PadViewBaseC1Ev+0x1c8>)
 8003da6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003da8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003dac:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003db0:	a90a      	add	r1, sp, #40	; 0x28
 8003db2:	4628      	mov	r0, r5
 8003db4:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003db8:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003dbc:	f00f fa57 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003dc0:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 8003dc4:	4650      	mov	r0, sl
 8003dc6:	f7ff fca7 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dca:	4648      	mov	r0, r9
 8003dcc:	f7ff fca4 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dd0:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8003dd4:	4618      	mov	r0, r3
 8003dd6:	ee09 3a10 	vmov	s18, r3
 8003dda:	f7ff fc9d 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dde:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8003de2:	4618      	mov	r0, r3
 8003de4:	ee09 3a90 	vmov	s19, r3
 8003de8:	f7ff fc96 	bl	8003718 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dec:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003df0:	4618      	mov	r0, r3
 8003df2:	ee0a 3a10 	vmov	s20, r3
 8003df6:	f00f fb7b 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003dfa:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003dfe:	4618      	mov	r0, r3
 8003e00:	f504 7816 	add.w	r8, r4, #600	; 0x258
 8003e04:	ee0a 3a90 	vmov	s21, r3
 8003e08:	f7ff f9a0 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8003e0c:	4640      	mov	r0, r8
 8003e0e:	f00e f8f7 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 8003e12:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003e16:	4618      	mov	r0, r3
 8003e18:	9302      	str	r3, [sp, #8]
 8003e1a:	f7fe ff85 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e1e:	4b3f      	ldr	r3, [pc, #252]	; (8003f1c <_ZN23Calibration_PadViewBaseC1Ev+0x1cc>)
 8003e20:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 8003e24:	3324      	adds	r3, #36	; 0x24
 8003e26:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003e2a:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003e2e:	4618      	mov	r0, r3
 8003e30:	f8c4 62d4 	str.w	r6, [r4, #724]	; 0x2d4
 8003e34:	ee08 3a10 	vmov	s16, r3
 8003e38:	f7ff f988 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8003e3c:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003e40:	4618      	mov	r0, r3
 8003e42:	ee08 3a90 	vmov	s17, r3
 8003e46:	f7ff f981 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003e4a:	4a35      	ldr	r2, [pc, #212]	; (8003f20 <_ZN23Calibration_PadViewBaseC1Ev+0x1d0>)
 8003e4c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003e50:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 8003e54:	4a33      	ldr	r2, [pc, #204]	; (8003f24 <_ZN23Calibration_PadViewBaseC1Ev+0x1d4>)
 8003e56:	f8c3 61dc 	str.w	r6, [r3, #476]	; 0x1dc
 8003e5a:	e9c3 2675 	strd	r2, r6, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003e5e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003e62:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003e66:	f010 f9ff 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003e6a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003e6e:	4632      	mov	r2, r6
 8003e70:	4658      	mov	r0, fp
 8003e72:	9300      	str	r3, [sp, #0]
 8003e74:	4631      	mov	r1, r6
 8003e76:	23f0      	movs	r3, #240	; 0xf0
 8003e78:	f7ff f942 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e7c:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003e7e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003e82:	66a3      	str	r3, [r4, #104]	; 0x68
 8003e84:	4659      	mov	r1, fp
 8003e86:	4638      	mov	r0, r7
 8003e88:	f00c fc62 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003e8c:	4632      	mov	r2, r6
 8003e8e:	4628      	mov	r0, r5
 8003e90:	4631      	mov	r1, r6
 8003e92:	f7ff f928 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8003e96:	f04f 0309 	mov.w	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003e9a:	4628      	mov	r0, r5
 8003e9c:	a90a      	add	r1, sp, #40	; 0x28
 8003e9e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003ea2:	f00f f9e4 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003ea6:	4629      	mov	r1, r5
 8003ea8:	4638      	mov	r0, r7
 8003eaa:	f00c fc51 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_S.setPosition(0, 92, 207, 27);
 8003eae:	231b      	movs	r3, #27
 8003eb0:	225c      	movs	r2, #92	; 0x5c
 8003eb2:	9300      	str	r3, [sp, #0]
 8003eb4:	4631      	mov	r1, r6
 8003eb6:	23cf      	movs	r3, #207	; 0xcf
 8003eb8:	4650      	mov	r0, sl
 8003eba:	f7ff f921 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ebe:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003ec2:	f8a4 60cc 	strh.w	r6, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003ec6:	ad04      	add	r5, sp, #16
        color = newColor;
 8003ec8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003ecc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003ed0:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003ed4:	4651      	mov	r1, sl
 8003ed6:	4628      	mov	r0, r5
 8003ed8:	4798      	blx	r3
 8003eda:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ede:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003ee2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NNGV).getText());
 8003ee6:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003eea:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003eec:	4b0e      	ldr	r3, [pc, #56]	; (8003f28 <_ZN23Calibration_PadViewBaseC1Ev+0x1d8>)
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	b92b      	cbnz	r3, 8003efe <_ZN23Calibration_PadViewBaseC1Ev+0x1ae>
 8003ef2:	4b0e      	ldr	r3, [pc, #56]	; (8003f2c <_ZN23Calibration_PadViewBaseC1Ev+0x1dc>)
 8003ef4:	4a0e      	ldr	r2, [pc, #56]	; (8003f30 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003ef6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ef8:	480e      	ldr	r0, [pc, #56]	; (8003f34 <_ZN23Calibration_PadViewBaseC1Ev+0x1e4>)
 8003efa:	f026 fec7 	bl	802ac8c <__assert_func>
 8003efe:	4b0e      	ldr	r3, [pc, #56]	; (8003f38 <_ZN23Calibration_PadViewBaseC1Ev+0x1e8>)
 8003f00:	881b      	ldrh	r3, [r3, #0]
 8003f02:	2b0a      	cmp	r3, #10
 8003f04:	d81c      	bhi.n	8003f40 <_ZN23Calibration_PadViewBaseC1Ev+0x1f0>
 8003f06:	4b0d      	ldr	r3, [pc, #52]	; (8003f3c <_ZN23Calibration_PadViewBaseC1Ev+0x1ec>)
 8003f08:	4a09      	ldr	r2, [pc, #36]	; (8003f30 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003f0a:	2161      	movs	r1, #97	; 0x61
 8003f0c:	e7f4      	b.n	8003ef8 <_ZN23Calibration_PadViewBaseC1Ev+0x1a8>
 8003f0e:	bf00      	nop
 8003f10:	0802c9d4 	.word	0x0802c9d4
 8003f14:	0802f1e0 	.word	0x0802f1e0
 8003f18:	0802f3a8 	.word	0x0802f3a8
 8003f1c:	0802ef14 	.word	0x0802ef14
 8003f20:	0802c9bc 	.word	0x0802c9bc
 8003f24:	08003d37 	.word	0x08003d37
 8003f28:	20012dfc 	.word	0x20012dfc
 8003f2c:	0802c6d0 	.word	0x0802c6d0
 8003f30:	0802c7d2 	.word	0x0802c7d2
 8003f34:	0802c74d 	.word	0x0802c74d
 8003f38:	20012e00 	.word	0x20012e00
 8003f3c:	0802c794 	.word	0x0802c794
        return texts->getText(typedTextId);
 8003f40:	4bd8      	ldr	r3, [pc, #864]	; (80042a4 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003f42:	210a      	movs	r1, #10
 8003f44:	6818      	ldr	r0, [r3, #0]
 8003f46:	f005 f8b1 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8003f4a:	4ad7      	ldr	r2, [pc, #860]	; (80042a8 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003f4c:	4603      	mov	r3, r0
 8003f4e:	210a      	movs	r1, #10
 8003f50:	9803      	ldr	r0, [sp, #12]
 8003f52:	f015 f805 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003f56:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8003f58:	4bd4      	ldr	r3, [pc, #848]	; (80042ac <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003f5a:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_PADR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WYEC));
 8003f5e:	4650      	mov	r0, sl
 8003f60:	930a      	str	r3, [sp, #40]	; 0x28
 8003f62:	a90a      	add	r1, sp, #40	; 0x28
 8003f64:	230b      	movs	r3, #11
 8003f66:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003f6a:	f00e fda5 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f6e:	4651      	mov	r1, sl
 8003f70:	4638      	mov	r0, r7
 8003f72:	f00c fbed 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_F.setPosition(25, 119, 207, 22);
 8003f76:	2116      	movs	r1, #22
 8003f78:	2277      	movs	r2, #119	; 0x77
 8003f7a:	9100      	str	r1, [sp, #0]
 8003f7c:	23cf      	movs	r3, #207	; 0xcf
 8003f7e:	2119      	movs	r1, #25
 8003f80:	4648      	mov	r0, r9
 8003f82:	f7ff f8bd 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f86:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003f8a:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003f8e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003f92:	f8a4 6118 	strh.w	r6, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003f96:	4649      	mov	r1, r9
 8003f98:	4628      	mov	r0, r5
 8003f9a:	4798      	blx	r3
 8003f9c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003fa0:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003fa4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fa8:	49c1      	ldr	r1, [pc, #772]	; (80042b0 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003faa:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9DMI).getText());
 8003fac:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 8003fb0:	2b00      	cmp	r3, #0
 8003fb2:	d09e      	beq.n	8003ef2 <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fb4:	48bf      	ldr	r0, [pc, #764]	; (80042b4 <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003fb6:	8803      	ldrh	r3, [r0, #0]
 8003fb8:	2b0c      	cmp	r3, #12
 8003fba:	d9a4      	bls.n	8003f06 <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003fbc:	4ab9      	ldr	r2, [pc, #740]	; (80042a4 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003fbe:	210c      	movs	r1, #12
 8003fc0:	6810      	ldr	r0, [r2, #0]
 8003fc2:	f005 f873 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8003fc6:	4ab8      	ldr	r2, [pc, #736]	; (80042a8 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003fc8:	4603      	mov	r3, r0
 8003fca:	210a      	movs	r1, #10
 8003fcc:	4650      	mov	r0, sl
 8003fce:	f014 ffc7 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_PADR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MDOA));
 8003fd2:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003fd6:	4bb5      	ldr	r3, [pc, #724]	; (80042ac <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003fd8:	930a      	str	r3, [sp, #40]	; 0x28
 8003fda:	4661      	mov	r1, ip
 8003fdc:	230d      	movs	r3, #13
 8003fde:	4648      	mov	r0, r9
 8003fe0:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003fe4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003fe8:	f00e fd66 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003fec:	4649      	mov	r1, r9
 8003fee:	4638      	mov	r0, r7
 8003ff0:	f00c fbae 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_F.setPosition(25, 187, 207, 22);
 8003ff4:	f04f 0c16 	mov.w	ip, #22
 8003ff8:	22bb      	movs	r2, #187	; 0xbb
 8003ffa:	ee19 0a10 	vmov	r0, s18
 8003ffe:	f8cd c000 	str.w	ip, [sp]
 8004002:	23cf      	movs	r3, #207	; 0xcf
 8004004:	2119      	movs	r1, #25
 8004006:	f7ff f87b 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 800400a:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 800400e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8004012:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8004016:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 800401a:	ee19 1a10 	vmov	r1, s18
 800401e:	4628      	mov	r0, r5
 8004020:	4798      	blx	r3
 8004022:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004026:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 800402a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800402e:	49a0      	ldr	r1, [pc, #640]	; (80042b0 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8004030:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZTO).getText());
 8004032:	f504 7965 	add.w	r9, r4, #916	; 0x394
 8004036:	2b00      	cmp	r3, #0
 8004038:	f43f af5b 	beq.w	8003ef2 <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800403c:	489d      	ldr	r0, [pc, #628]	; (80042b4 <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 800403e:	8803      	ldrh	r3, [r0, #0]
 8004040:	2b08      	cmp	r3, #8
 8004042:	f67f af60 	bls.w	8003f06 <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8004046:	4a97      	ldr	r2, [pc, #604]	; (80042a4 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8004048:	2108      	movs	r1, #8
 800404a:	6810      	ldr	r0, [r2, #0]
 800404c:	f005 f82e 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8004050:	4a95      	ldr	r2, [pc, #596]	; (80042a8 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8004052:	4603      	mov	r3, r0
 8004054:	210a      	movs	r1, #10
 8004056:	4648      	mov	r0, r9
 8004058:	f014 ff82 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800405c:	f04f 0c09 	mov.w	ip, #9
 8004060:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
    CALIBRATION_PADL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H127));
 8004064:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8004068:	4b90      	ldr	r3, [pc, #576]	; (80042ac <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 800406a:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 800406e:	4661      	mov	r1, ip
 8004070:	ee19 0a10 	vmov	r0, s18
 8004074:	930a      	str	r3, [sp, #40]	; 0x28
 8004076:	f00e fd1f 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800407a:	ee19 1a10 	vmov	r1, s18
 800407e:	4638      	mov	r0, r7
 8004080:	f00c fb66 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_S.setPosition(0, 160, 207, 27);
 8004084:	f04f 0c1b 	mov.w	ip, #27
 8004088:	22a0      	movs	r2, #160	; 0xa0
 800408a:	ee19 0a90 	vmov	r0, s19
 800408e:	f8cd c000 	str.w	ip, [sp]
 8004092:	23cf      	movs	r3, #207	; 0xcf
 8004094:	4631      	mov	r1, r6
 8004096:	f7ff f833 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 800409a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 800409e:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 80040a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80040a6:	f8a4 61b0 	strh.w	r6, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 80040aa:	ee19 1a90 	vmov	r1, s19
 80040ae:	4628      	mov	r0, r5
 80040b0:	4798      	blx	r3
 80040b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040b6:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 80040ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040be:	497c      	ldr	r1, [pc, #496]	; (80042b0 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 80040c0:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KIGA).getText());
 80040c2:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	f43f af13 	beq.w	8003ef2 <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040cc:	4879      	ldr	r0, [pc, #484]	; (80042b4 <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 80040ce:	8803      	ldrh	r3, [r0, #0]
 80040d0:	2b0f      	cmp	r3, #15
 80040d2:	f67f af18 	bls.w	8003f06 <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 80040d6:	4a73      	ldr	r2, [pc, #460]	; (80042a4 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 80040d8:	210f      	movs	r1, #15
 80040da:	6810      	ldr	r0, [r2, #0]
 80040dc:	f004 ffe6 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 80040e0:	4a71      	ldr	r2, [pc, #452]	; (80042a8 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 80040e2:	4603      	mov	r3, r0
 80040e4:	210a      	movs	r1, #10
 80040e6:	4648      	mov	r0, r9
 80040e8:	f014 ff3a 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80040ec:	4b6f      	ldr	r3, [pc, #444]	; (80042ac <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 80040ee:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_PADL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2BW0));
 80040f0:	ee19 0a90 	vmov	r0, s19
 80040f4:	230e      	movs	r3, #14
 80040f6:	a90a      	add	r1, sp, #40	; 0x28
 80040f8:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 80040fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004100:	f00e fcda 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004104:	ee19 1a90 	vmov	r1, s19
 8004108:	4638      	mov	r0, r7
 800410a:	f00c fb21 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800410e:	ee1a 0a10 	vmov	r0, s20
 8004112:	f240 1201 	movw	r2, #257	; 0x101
 8004116:	2121      	movs	r1, #33	; 0x21
 8004118:	f7fe ffe5 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800411c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800411e:	aa0a      	add	r2, sp, #40	; 0x28
 8004120:	a909      	add	r1, sp, #36	; 0x24
 8004122:	ee1a 0a10 	vmov	r0, s20
 8004126:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800412a:	2302      	movs	r3, #2
 800412c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004130:	f00e fea7 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004134:	231f      	movs	r3, #31
        updateTextPosition();
 8004136:	ee1a 0a10 	vmov	r0, s20
 800413a:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 800413e:	f7ff f827 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8004142:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8004146:	330c      	adds	r3, #12
 8004148:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 800414c:	ee1a 1a10 	vmov	r1, s20
 8004150:	4638      	mov	r0, r7
        colorPressed = col;
 8004152:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8004156:	f00c fafb 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(58, 60);
 800415a:	223c      	movs	r2, #60	; 0x3c
 800415c:	ee1a 0a90 	vmov	r0, s21
 8004160:	213a      	movs	r1, #58	; 0x3a
 8004162:	f7fe ffc0 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8004166:	ee1a 1a90 	vmov	r1, s21
 800416a:	4628      	mov	r0, r5
        color = newColor;
 800416c:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8004170:	f8a4 6244 	strh.w	r6, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8004174:	f00e fa06 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004178:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800417c:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8004180:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004184:	4b49      	ldr	r3, [pc, #292]	; (80042ac <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004186:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004188:	ee1a 0a90 	vmov	r0, s21
 800418c:	231e      	movs	r3, #30
 800418e:	a90a      	add	r1, sp, #40	; 0x28
 8004190:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004194:	f00e fc90 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004198:	ee1a 1a90 	vmov	r1, s21
 800419c:	4638      	mov	r0, r7
 800419e:	f00c fad7 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80041a2:	230a      	movs	r3, #10
 80041a4:	9300      	str	r3, [sp, #0]
 80041a6:	2232      	movs	r2, #50	; 0x32
 80041a8:	23f0      	movs	r3, #240	; 0xf0
 80041aa:	4631      	mov	r1, r6
 80041ac:	4640      	mov	r0, r8
 80041ae:	f7fe ffa7 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80041b2:	9b02      	ldr	r3, [sp, #8]
 80041b4:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80041b8:	22a0      	movs	r2, #160	; 0xa0
 80041ba:	4611      	mov	r1, r2
 80041bc:	4640      	mov	r0, r8
 80041be:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80041c2:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 80041c6:	f00e f831 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80041ca:	22a0      	movs	r2, #160	; 0xa0
 80041cc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80041d0:	4640      	mov	r0, r8
 80041d2:	f00e f836 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80041d6:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 80041da:	2b20      	cmp	r3, #32
 80041dc:	d005      	beq.n	80041ea <_ZN23Calibration_PadViewBaseC1Ev+0x49a>
        lineWidthQ5 = widthQ5;
 80041de:	2320      	movs	r3, #32
 80041e0:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 80041e4:	4640      	mov	r0, r8
 80041e6:	f00d ff2b 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80041ea:	4640      	mov	r0, r8
 80041ec:	2101      	movs	r1, #1
 80041ee:	f00e f833 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80041f2:	4641      	mov	r1, r8
 80041f4:	4638      	mov	r0, r7
 80041f6:	f00c faab 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041fa:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80041fc:	ee18 0a10 	vmov	r0, s16
 8004200:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8004202:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 8004206:	f04f 0800 	mov.w	r8, #0
 800420a:	2145      	movs	r1, #69	; 0x45
 800420c:	f7fe ff6b 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004210:	ee18 1a10 	vmov	r1, s16
 8004214:	4628      	mov	r0, r5
        color = newColor;
 8004216:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 800421a:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 800421e:	f00e f9b1 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004222:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004226:	ee18 3a10 	vmov	r3, s16
 800422a:	333c      	adds	r3, #60	; 0x3c
 800422c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004230:	4e1e      	ldr	r6, [pc, #120]	; (80042ac <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004232:	960a      	str	r6, [sp, #40]	; 0x28
 8004234:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004236:	ee18 0a10 	vmov	r0, s16
 800423a:	a90a      	add	r1, sp, #40	; 0x28
 800423c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004240:	f00e fc3a 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004244:	ee18 1a10 	vmov	r1, s16
 8004248:	4638      	mov	r0, r7
 800424a:	f00c fa81 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800424e:	ee18 0a90 	vmov	r0, s17
 8004252:	220c      	movs	r2, #12
 8004254:	2136      	movs	r1, #54	; 0x36
 8004256:	f7fe ff46 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800425a:	ee18 1a90 	vmov	r1, s17
 800425e:	4628      	mov	r0, r5
        color = newColor;
 8004260:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8004264:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8004268:	f00e f98c 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800426c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004270:	ee18 3a90 	vmov	r3, s17
 8004274:	333c      	adds	r3, #60	; 0x3c
 8004276:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800427a:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 800427c:	ee18 0a90 	vmov	r0, s17
 8004280:	a90a      	add	r1, sp, #40	; 0x28
 8004282:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004286:	960a      	str	r6, [sp, #40]	; 0x28
 8004288:	f00e fc16 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800428c:	4638      	mov	r0, r7
 800428e:	ee18 1a90 	vmov	r1, s17
 8004292:	f00c fa5d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004296:	4620      	mov	r0, r4
 8004298:	b00d      	add	sp, #52	; 0x34
 800429a:	ecbd 8b06 	vpop	{d8-d10}
 800429e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042a2:	bf00      	nop
 80042a4:	20012e08 	.word	0x20012e08
 80042a8:	0802c80a 	.word	0x0802c80a
 80042ac:	0802c880 	.word	0x0802c880
 80042b0:	20012dfc 	.word	0x20012dfc
 80042b4:	20012e00 	.word	0x20012e00

080042b8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80042b8:	4770      	bx	lr

080042ba <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80042ba:	4770      	bx	lr

080042bc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80042bc:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80042c0:	6808      	ldr	r0, [r1, #0]
 80042c2:	6849      	ldr	r1, [r1, #4]
 80042c4:	c303      	stmia	r3!, {r0, r1}
    }
 80042c6:	4770      	bx	lr

080042c8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80042c8:	4770      	bx	lr

080042ca <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80042ca:	4770      	bx	lr

080042cc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80042cc:	6041      	str	r1, [r0, #4]
    }
 80042ce:	4770      	bx	lr

080042d0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80042d0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80042d2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80042d4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80042d8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80042dc:	8002      	strh	r2, [r0, #0]
 80042de:	8042      	strh	r2, [r0, #2]
 80042e0:	8084      	strh	r4, [r0, #4]
 80042e2:	80c1      	strh	r1, [r0, #6]
        }
 80042e4:	bd10      	pop	{r4, pc}

080042e6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80042e6:	4770      	bx	lr

080042e8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80042e8:	4770      	bx	lr
	...

080042ec <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80042ec:	4b06      	ldr	r3, [pc, #24]	; (8004308 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80042ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80042f2:	2300      	movs	r3, #0
 80042f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80042f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80042fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004300:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004304:	4770      	bx	lr
 8004306:	bf00      	nop
 8004308:	080046a9 	.word	0x080046a9

0800430c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800430c:	2301      	movs	r3, #1
 800430e:	7203      	strb	r3, [r0, #8]
    }
 8004310:	4770      	bx	lr

08004312 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004312:	4770      	bx	lr

08004314 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004314:	4770      	bx	lr

08004316 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004316:	4770      	bx	lr

08004318 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004318:	4770      	bx	lr

0800431a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800431a:	4770      	bx	lr

0800431c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800431c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800431e:	6840      	ldr	r0, [r0, #4]
 8004320:	6803      	ldr	r3, [r0, #0]
 8004322:	3110      	adds	r1, #16
 8004324:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004326:	4718      	bx	r3

08004328 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004328:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800432a:	6840      	ldr	r0, [r0, #4]
 800432c:	6803      	ldr	r3, [r0, #0]
 800432e:	3110      	adds	r1, #16
 8004330:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004332:	4718      	bx	r3

08004334 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004334:	4770      	bx	lr

08004336 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8004336:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004338:	6840      	ldr	r0, [r0, #4]
 800433a:	6803      	ldr	r3, [r0, #0]
 800433c:	3110      	adds	r1, #16
 800433e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004340:	4718      	bx	r3

08004342 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004342:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004344:	6840      	ldr	r0, [r0, #4]
 8004346:	6803      	ldr	r3, [r0, #0]
 8004348:	3110      	adds	r1, #16
 800434a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800434c:	4718      	bx	r3

0800434e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800434e:	4770      	bx	lr

08004350 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004350:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8004352:	68c2      	ldr	r2, [r0, #12]
 8004354:	6841      	ldr	r1, [r0, #4]
 8004356:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004358:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800435a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800435e:	07d2      	lsls	r2, r2, #31
 8004360:	bf48      	it	mi
 8004362:	590a      	ldrmi	r2, [r1, r4]
 8004364:	689b      	ldr	r3, [r3, #8]
    }
 8004366:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800436a:	bf48      	it	mi
 800436c:	58d3      	ldrmi	r3, [r2, r3]
 800436e:	4718      	bx	r3

08004370 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004370:	6843      	ldr	r3, [r0, #4]
 8004372:	b12b      	cbz	r3, 8004380 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004374:	6883      	ldr	r3, [r0, #8]
 8004376:	b92b      	cbnz	r3, 8004384 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004378:	68c0      	ldr	r0, [r0, #12]
 800437a:	f000 0001 	and.w	r0, r0, #1
 800437e:	4770      	bx	lr
 8004380:	4618      	mov	r0, r3
 8004382:	4770      	bx	lr
 8004384:	2001      	movs	r0, #1
    }
 8004386:	4770      	bx	lr

08004388 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004388:	b510      	push	{r4, lr}
 800438a:	210c      	movs	r1, #12
 800438c:	4604      	mov	r4, r0
 800438e:	f025 fd96 	bl	8029ebe <_ZdlPvj>
 8004392:	4620      	mov	r0, r4
 8004394:	bd10      	pop	{r4, pc}

08004396 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004396:	b510      	push	{r4, lr}
 8004398:	2110      	movs	r1, #16
 800439a:	4604      	mov	r4, r0
 800439c:	f025 fd8f 	bl	8029ebe <_ZdlPvj>
 80043a0:	4620      	mov	r0, r4
 80043a2:	bd10      	pop	{r4, pc}

080043a4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80043a4:	b510      	push	{r4, lr}
 80043a6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80043aa:	4604      	mov	r4, r0
 80043ac:	f025 fd87 	bl	8029ebe <_ZdlPvj>
 80043b0:	4620      	mov	r0, r4
 80043b2:	bd10      	pop	{r4, pc}

080043b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80043b4:	b510      	push	{r4, lr}
 80043b6:	2138      	movs	r1, #56	; 0x38
 80043b8:	4604      	mov	r4, r0
 80043ba:	f025 fd80 	bl	8029ebe <_ZdlPvj>
 80043be:	4620      	mov	r0, r4
 80043c0:	bd10      	pop	{r4, pc}

080043c2 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80043c2:	b510      	push	{r4, lr}
 80043c4:	2128      	movs	r1, #40	; 0x28
 80043c6:	4604      	mov	r4, r0
 80043c8:	f025 fd79 	bl	8029ebe <_ZdlPvj>
 80043cc:	4620      	mov	r0, r4
 80043ce:	bd10      	pop	{r4, pc}

080043d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80043d0:	b510      	push	{r4, lr}
 80043d2:	2138      	movs	r1, #56	; 0x38
 80043d4:	4604      	mov	r4, r0
 80043d6:	f025 fd72 	bl	8029ebe <_ZdlPvj>
 80043da:	4620      	mov	r0, r4
 80043dc:	bd10      	pop	{r4, pc}

080043de <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80043de:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80043e0:	f011 fc4e 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 80043e4:	6803      	ldr	r3, [r0, #0]
    }
 80043e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80043ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80043ec:	4718      	bx	r3
	...

080043f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80043f0:	b513      	push	{r0, r1, r4, lr}
 80043f2:	4604      	mov	r4, r0
        animationCounter++;
 80043f4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80043f6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80043f8:	3001      	adds	r0, #1
 80043fa:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80043fc:	4298      	cmp	r0, r3
        animationCounter++;
 80043fe:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004400:	d905      	bls.n	800440e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8004402:	2301      	movs	r3, #1
 8004404:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004406:	2300      	movs	r3, #0
 8004408:	72a3      	strb	r3, [r4, #10]
    }
 800440a:	b002      	add	sp, #8
 800440c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800440e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004412:	2100      	movs	r1, #0
 8004414:	f013 fa66 	bl	80178e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004418:	f010 0201 	ands.w	r2, r0, #1
 800441c:	b283      	uxth	r3, r0
 800441e:	d12a      	bne.n	8004476 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004420:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004422:	4a19      	ldr	r2, [pc, #100]	; (8004488 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004424:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004428:	89e3      	ldrh	r3, [r4, #14]
 800442a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800442c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004430:	82a0      	strh	r0, [r4, #20]
 8004432:	2000      	movs	r0, #0
 8004434:	1ad2      	subs	r2, r2, r3
 8004436:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800443a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800443c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800443e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004440:	4a12      	ldr	r2, [pc, #72]	; (800448c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004442:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004446:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004448:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800444c:	691b      	ldr	r3, [r3, #16]
 800444e:	f8ad 1000 	strh.w	r1, [sp]
 8004452:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004456:	4669      	mov	r1, sp
 8004458:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800445a:	7aa3      	ldrb	r3, [r4, #10]
 800445c:	2b01      	cmp	r3, #1
 800445e:	d1d4      	bne.n	800440a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004460:	4b0b      	ldr	r3, [pc, #44]	; (8004490 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004462:	781b      	ldrb	r3, [r3, #0]
 8004464:	2b00      	cmp	r3, #0
 8004466:	d0d0      	beq.n	800440a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004468:	f011 fc0a 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800446c:	b002      	add	sp, #8
 800446e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004472:	f011 bc0b 	b.w	8015c8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004476:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800447a:	2800      	cmp	r0, #0
 800447c:	bfd8      	it	le
 800447e:	460a      	movle	r2, r1
 8004480:	4413      	add	r3, r2
 8004482:	81e3      	strh	r3, [r4, #14]
 8004484:	e7cd      	b.n	8004422 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8004486:	bf00      	nop
 8004488:	20012d98 	.word	0x20012d98
 800448c:	20012d9a 	.word	0x20012d9a
 8004490:	20012da2 	.word	0x20012da2

08004494 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004494:	b510      	push	{r4, lr}
 8004496:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004498:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800449c:	b158      	cbz	r0, 80044b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800449e:	6803      	ldr	r3, [r0, #0]
 80044a0:	68db      	ldr	r3, [r3, #12]
 80044a2:	4798      	blx	r3
 80044a4:	b138      	cbz	r0, 80044b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80044a6:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80044aa:	6803      	ldr	r3, [r0, #0]
 80044ac:	689b      	ldr	r3, [r3, #8]
 80044ae:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80044b0:	2300      	movs	r3, #0
 80044b2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80044b6:	bd10      	pop	{r4, pc}

080044b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80044b8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044bc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80044c0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044c2:	68a8      	ldr	r0, [r5, #8]
 80044c4:	6803      	ldr	r3, [r0, #0]
 80044c6:	6a1b      	ldr	r3, [r3, #32]
 80044c8:	4798      	blx	r3
 80044ca:	2897      	cmp	r0, #151	; 0x97
 80044cc:	d805      	bhi.n	80044da <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80044ce:	4b46      	ldr	r3, [pc, #280]	; (80045e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80044d0:	4a46      	ldr	r2, [pc, #280]	; (80045ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80044d2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044d4:	4846      	ldr	r0, [pc, #280]	; (80045f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80044d6:	f026 fbd9 	bl	802ac8c <__assert_func>
 80044da:	6868      	ldr	r0, [r5, #4]
 80044dc:	6803      	ldr	r3, [r0, #0]
 80044de:	6a1b      	ldr	r3, [r3, #32]
 80044e0:	4798      	blx	r3
 80044e2:	280f      	cmp	r0, #15
 80044e4:	d803      	bhi.n	80044ee <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80044e6:	4b43      	ldr	r3, [pc, #268]	; (80045f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80044e8:	4a40      	ldr	r2, [pc, #256]	; (80045ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80044ea:	21a4      	movs	r1, #164	; 0xa4
 80044ec:	e7f2      	b.n	80044d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044ee:	68e8      	ldr	r0, [r5, #12]
 80044f0:	6803      	ldr	r3, [r0, #0]
 80044f2:	6a1b      	ldr	r3, [r3, #32]
 80044f4:	4798      	blx	r3
 80044f6:	280b      	cmp	r0, #11
 80044f8:	d803      	bhi.n	8004502 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80044fa:	4b3f      	ldr	r3, [pc, #252]	; (80045f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80044fc:	4a3b      	ldr	r2, [pc, #236]	; (80045ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80044fe:	21a5      	movs	r1, #165	; 0xa5
 8004500:	e7e8      	b.n	80044d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8004502:	f011 fbbd 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004506:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004600 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800450a:	3004      	adds	r0, #4
 800450c:	f011 fc1e 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004510:	f8d9 0000 	ldr.w	r0, [r9]
 8004514:	b110      	cbz	r0, 800451c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8004516:	6803      	ldr	r3, [r0, #0]
 8004518:	68db      	ldr	r3, [r3, #12]
 800451a:	4798      	blx	r3
    if (*currentTrans)
 800451c:	f8d9 0000 	ldr.w	r0, [r9]
 8004520:	b110      	cbz	r0, 8004528 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004522:	6803      	ldr	r3, [r0, #0]
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	4798      	blx	r3
    if (*currentScreen)
 8004528:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004604 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800452c:	f8d8 0000 	ldr.w	r0, [r8]
 8004530:	b110      	cbz	r0, 8004538 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004532:	6803      	ldr	r3, [r0, #0]
 8004534:	695b      	ldr	r3, [r3, #20]
 8004536:	4798      	blx	r3
    if (*currentPresenter)
 8004538:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800453c:	b110      	cbz	r0, 8004544 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800453e:	6803      	ldr	r3, [r0, #0]
 8004540:	685b      	ldr	r3, [r3, #4]
 8004542:	4798      	blx	r3
    if (*currentScreen)
 8004544:	f8d8 0000 	ldr.w	r0, [r8]
 8004548:	b110      	cbz	r0, 8004550 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800454a:	6803      	ldr	r3, [r0, #0]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	4798      	blx	r3
    if (*currentPresenter)
 8004550:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004554:	b110      	cbz	r0, 800455c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004556:	6803      	ldr	r3, [r0, #0]
 8004558:	689b      	ldr	r3, [r3, #8]
 800455a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800455c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800455e:	6803      	ldr	r3, [r0, #0]
 8004560:	2100      	movs	r1, #0
 8004562:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004564:	4798      	blx	r3
        : screenContainer(0), done(false)
 8004566:	f04f 0b00 	mov.w	fp, #0
 800456a:	4b24      	ldr	r3, [pc, #144]	; (80045fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800456c:	6003      	str	r3, [r0, #0]
 800456e:	4604      	mov	r4, r0
 8004570:	f8c0 b004 	str.w	fp, [r0, #4]
 8004574:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004578:	68a8      	ldr	r0, [r5, #8]
 800457a:	6803      	ldr	r3, [r0, #0]
 800457c:	4659      	mov	r1, fp
 800457e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004580:	4798      	blx	r3
 8004582:	4606      	mov	r6, r0
 8004584:	f005 fad8 	bl	8009b38 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004588:	6868      	ldr	r0, [r5, #4]
 800458a:	6803      	ldr	r3, [r0, #0]
 800458c:	4659      	mov	r1, fp
 800458e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004590:	4798      	blx	r3
 8004592:	4631      	mov	r1, r6
 8004594:	4605      	mov	r5, r0
 8004596:	f005 faab 	bl	8009af0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800459a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800459e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045a2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045a6:	b1e5      	cbz	r5, 80045e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80045a8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80045aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045ae:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80045b0:	f8c5 a008 	str.w	sl, [r5, #8]
 80045b4:	4630      	mov	r0, r6
 80045b6:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80045b8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80045ba:	4798      	blx	r3
    newPresenter->activate();
 80045bc:	682b      	ldr	r3, [r5, #0]
 80045be:	4628      	mov	r0, r5
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045c4:	4621      	mov	r1, r4
 80045c6:	4630      	mov	r0, r6
 80045c8:	f013 f986 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045cc:	6823      	ldr	r3, [r4, #0]
 80045ce:	4620      	mov	r0, r4
 80045d0:	691b      	ldr	r3, [r3, #16]
 80045d2:	4798      	blx	r3
    newTransition->invalidate();
 80045d4:	6823      	ldr	r3, [r4, #0]
 80045d6:	695b      	ldr	r3, [r3, #20]
 80045d8:	4620      	mov	r0, r4
}
 80045da:	b001      	add	sp, #4
 80045dc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045e0:	4718      	bx	r3
    model->bind(newPresenter);
 80045e2:	462b      	mov	r3, r5
 80045e4:	e7e1      	b.n	80045aa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80045e6:	bf00      	nop
 80045e8:	0802ca04 	.word	0x0802ca04
 80045ec:	0802ca92 	.word	0x0802ca92
 80045f0:	0802cba0 	.word	0x0802cba0
 80045f4:	0802cbe7 	.word	0x0802cbe7
 80045f8:	0802cc8a 	.word	0x0802cc8a
 80045fc:	0802e0a8 	.word	0x0802e0a8
 8004600:	20012dec 	.word	0x20012dec
 8004604:	20012de8 	.word	0x20012de8

08004608 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004608:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800460a:	4604      	mov	r4, r0
        animationCounter++;
 800460c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800460e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004610:	3001      	adds	r0, #1
 8004612:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004614:	4298      	cmp	r0, r3
        animationCounter++;
 8004616:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004618:	d905      	bls.n	8004626 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800461a:	2301      	movs	r3, #1
 800461c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800461e:	2300      	movs	r3, #0
 8004620:	72a3      	strb	r3, [r4, #10]
    }
 8004622:	b003      	add	sp, #12
 8004624:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004626:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800462a:	2100      	movs	r1, #0
 800462c:	f013 f95a 	bl	80178e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004630:	f010 0201 	ands.w	r2, r0, #1
 8004634:	b283      	uxth	r3, r0
 8004636:	d128      	bne.n	800468a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004638:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800463a:	4b18      	ldr	r3, [pc, #96]	; (800469c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800463c:	4818      	ldr	r0, [pc, #96]	; (80046a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800463e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004640:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004642:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004644:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004648:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800464c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800464e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004650:	442b      	add	r3, r5
 8004652:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004654:	b212      	sxth	r2, r2
 8004656:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800465a:	6803      	ldr	r3, [r0, #0]
 800465c:	8322      	strh	r2, [r4, #24]
 800465e:	f8ad 2000 	strh.w	r2, [sp]
 8004662:	2200      	movs	r2, #0
 8004664:	691b      	ldr	r3, [r3, #16]
 8004666:	f8ad 2002 	strh.w	r2, [sp, #2]
 800466a:	4669      	mov	r1, sp
 800466c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800466e:	7aa3      	ldrb	r3, [r4, #10]
 8004670:	2b01      	cmp	r3, #1
 8004672:	d1d6      	bne.n	8004622 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004674:	4b0b      	ldr	r3, [pc, #44]	; (80046a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8004676:	781b      	ldrb	r3, [r3, #0]
 8004678:	2b00      	cmp	r3, #0
 800467a:	d0d2      	beq.n	8004622 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800467c:	f011 fb00 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004680:	b003      	add	sp, #12
 8004682:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004686:	f011 bb01 	b.w	8015c8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800468a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800468e:	2800      	cmp	r0, #0
 8004690:	bfd8      	it	le
 8004692:	460a      	movle	r2, r1
 8004694:	4413      	add	r3, r2
 8004696:	81e3      	strh	r3, [r4, #14]
 8004698:	e7cf      	b.n	800463a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800469a:	bf00      	nop
 800469c:	20012d98 	.word	0x20012d98
 80046a0:	20012d9a 	.word	0x20012d9a
 80046a4:	20012da2 	.word	0x20012da2

080046a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80046a8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046ac:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80046b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046b2:	68a8      	ldr	r0, [r5, #8]
 80046b4:	6803      	ldr	r3, [r0, #0]
 80046b6:	6a1b      	ldr	r3, [r3, #32]
 80046b8:	4798      	blx	r3
 80046ba:	f241 137b 	movw	r3, #4475	; 0x117b
 80046be:	4298      	cmp	r0, r3
 80046c0:	d805      	bhi.n	80046ce <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80046c2:	4b46      	ldr	r3, [pc, #280]	; (80047dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80046c4:	4a46      	ldr	r2, [pc, #280]	; (80047e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80046c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046c8:	4846      	ldr	r0, [pc, #280]	; (80047e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80046ca:	f026 fadf 	bl	802ac8c <__assert_func>
 80046ce:	6868      	ldr	r0, [r5, #4]
 80046d0:	6803      	ldr	r3, [r0, #0]
 80046d2:	6a1b      	ldr	r3, [r3, #32]
 80046d4:	4798      	blx	r3
 80046d6:	280f      	cmp	r0, #15
 80046d8:	d803      	bhi.n	80046e2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80046da:	4b43      	ldr	r3, [pc, #268]	; (80047e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80046dc:	4a40      	ldr	r2, [pc, #256]	; (80047e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80046de:	21a4      	movs	r1, #164	; 0xa4
 80046e0:	e7f2      	b.n	80046c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046e2:	68e8      	ldr	r0, [r5, #12]
 80046e4:	6803      	ldr	r3, [r0, #0]
 80046e6:	6a1b      	ldr	r3, [r3, #32]
 80046e8:	4798      	blx	r3
 80046ea:	280b      	cmp	r0, #11
 80046ec:	d803      	bhi.n	80046f6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80046ee:	4b3f      	ldr	r3, [pc, #252]	; (80047ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80046f0:	4a3b      	ldr	r2, [pc, #236]	; (80047e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80046f2:	21a5      	movs	r1, #165	; 0xa5
 80046f4:	e7e8      	b.n	80046c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80046f6:	f011 fac3 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046fa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80047f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80046fe:	3004      	adds	r0, #4
 8004700:	f011 fb24 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004704:	f8d9 0000 	ldr.w	r0, [r9]
 8004708:	b110      	cbz	r0, 8004710 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	68db      	ldr	r3, [r3, #12]
 800470e:	4798      	blx	r3
    if (*currentTrans)
 8004710:	f8d9 0000 	ldr.w	r0, [r9]
 8004714:	b110      	cbz	r0, 800471c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8004716:	6803      	ldr	r3, [r0, #0]
 8004718:	681b      	ldr	r3, [r3, #0]
 800471a:	4798      	blx	r3
    if (*currentScreen)
 800471c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80047f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004720:	f8d8 0000 	ldr.w	r0, [r8]
 8004724:	b110      	cbz	r0, 800472c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004726:	6803      	ldr	r3, [r0, #0]
 8004728:	695b      	ldr	r3, [r3, #20]
 800472a:	4798      	blx	r3
    if (*currentPresenter)
 800472c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004730:	b110      	cbz	r0, 8004738 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004732:	6803      	ldr	r3, [r0, #0]
 8004734:	685b      	ldr	r3, [r3, #4]
 8004736:	4798      	blx	r3
    if (*currentScreen)
 8004738:	f8d8 0000 	ldr.w	r0, [r8]
 800473c:	b110      	cbz	r0, 8004744 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800473e:	6803      	ldr	r3, [r0, #0]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	4798      	blx	r3
    if (*currentPresenter)
 8004744:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004748:	b110      	cbz	r0, 8004750 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800474a:	6803      	ldr	r3, [r0, #0]
 800474c:	689b      	ldr	r3, [r3, #8]
 800474e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004750:	68e8      	ldr	r0, [r5, #12]
 8004752:	6803      	ldr	r3, [r0, #0]
 8004754:	2100      	movs	r1, #0
 8004756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004758:	4798      	blx	r3
 800475a:	f04f 0b00 	mov.w	fp, #0
 800475e:	4b24      	ldr	r3, [pc, #144]	; (80047f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004760:	6003      	str	r3, [r0, #0]
 8004762:	4604      	mov	r4, r0
 8004764:	f8c0 b004 	str.w	fp, [r0, #4]
 8004768:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800476c:	68a8      	ldr	r0, [r5, #8]
 800476e:	6803      	ldr	r3, [r0, #0]
 8004770:	4659      	mov	r1, fp
 8004772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004774:	4798      	blx	r3
 8004776:	4606      	mov	r6, r0
 8004778:	f004 fe8e 	bl	8009498 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800477c:	6868      	ldr	r0, [r5, #4]
 800477e:	6803      	ldr	r3, [r0, #0]
 8004780:	4659      	mov	r1, fp
 8004782:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004784:	4798      	blx	r3
 8004786:	4631      	mov	r1, r6
 8004788:	4605      	mov	r5, r0
 800478a:	f004 fe5f 	bl	800944c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800478e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004792:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004796:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800479a:	b1e5      	cbz	r5, 80047d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 800479c:	1d2b      	adds	r3, r5, #4
 800479e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047a2:	6833      	ldr	r3, [r6, #0]
 80047a4:	f8c5 a008 	str.w	sl, [r5, #8]
 80047a8:	4630      	mov	r0, r6
 80047aa:	68db      	ldr	r3, [r3, #12]
 80047ac:	63f5      	str	r5, [r6, #60]	; 0x3c
 80047ae:	4798      	blx	r3
    newPresenter->activate();
 80047b0:	682b      	ldr	r3, [r5, #0]
 80047b2:	4628      	mov	r0, r5
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80047b8:	4621      	mov	r1, r4
 80047ba:	4630      	mov	r0, r6
 80047bc:	f013 f88c 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80047c0:	6823      	ldr	r3, [r4, #0]
 80047c2:	4620      	mov	r0, r4
 80047c4:	691b      	ldr	r3, [r3, #16]
 80047c6:	4798      	blx	r3
    newTransition->invalidate();
 80047c8:	6823      	ldr	r3, [r4, #0]
 80047ca:	695b      	ldr	r3, [r3, #20]
 80047cc:	4620      	mov	r0, r4
}
 80047ce:	b001      	add	sp, #4
 80047d0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047d4:	4718      	bx	r3
    model->bind(newPresenter);
 80047d6:	462b      	mov	r3, r5
 80047d8:	e7e1      	b.n	800479e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80047da:	bf00      	nop
 80047dc:	0802ca04 	.word	0x0802ca04
 80047e0:	0802cd2d 	.word	0x0802cd2d
 80047e4:	0802cba0 	.word	0x0802cba0
 80047e8:	0802cbe7 	.word	0x0802cbe7
 80047ec:	0802cc8a 	.word	0x0802cc8a
 80047f0:	0802e0a8 	.word	0x0802e0a8
 80047f4:	20012dec 	.word	0x20012dec
 80047f8:	20012de8 	.word	0x20012de8

080047fc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80047fc:	4b04      	ldr	r3, [pc, #16]	; (8004810 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004804:	b10a      	cbz	r2, 800480a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8004806:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004808:	b900      	cbnz	r0, 800480c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800480a:	6898      	ldr	r0, [r3, #8]
    }
 800480c:	4770      	bx	lr
 800480e:	bf00      	nop
 8004810:	20012da4 	.word	0x20012da4

08004814 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004816:	4604      	mov	r4, r0
 8004818:	4617      	mov	r7, r2
 800481a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800481c:	f011 fb64 	bl	8015ee8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004820:	4b10      	ldr	r3, [pc, #64]	; (8004864 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004822:	601c      	str	r4, [r3, #0]
      model(m)
 8004824:	4b10      	ldr	r3, [pc, #64]	; (8004868 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8004826:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004828:	4b10      	ldr	r3, [pc, #64]	; (800486c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800482a:	2500      	movs	r5, #0
 800482c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004830:	4b0f      	ldr	r3, [pc, #60]	; (8004870 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004832:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8004836:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004838:	6803      	ldr	r3, [r0, #0]
 800483a:	2101      	movs	r1, #1
 800483c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800483e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004842:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004846:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004848:	4628      	mov	r0, r5
 800484a:	f004 fbf3 	bl	8009034 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800484e:	f7ff ffd5 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 8004852:	f01a ff0e 	bl	801f672 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8004856:	f7ff ffd1 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 800485a:	f01a ff85 	bl	801f768 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800485e:	4620      	mov	r0, r4
 8004860:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004862:	bf00      	nop
 8004864:	20012df8 	.word	0x20012df8
 8004868:	0802e054 	.word	0x0802e054
 800486c:	0802e03c 	.word	0x0802e03c
 8004870:	20012da4 	.word	0x20012da4

08004874 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004874:	4b06      	ldr	r3, [pc, #24]	; (8004890 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8004876:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800487a:	2300      	movs	r3, #0
 800487c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004880:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004884:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004888:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800488c:	4770      	bx	lr
 800488e:	bf00      	nop
 8004890:	080046a9 	.word	0x080046a9

08004894 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8004894:	4b06      	ldr	r3, [pc, #24]	; (80048b0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8004896:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800489a:	2300      	movs	r3, #0
 800489c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048ac:	4770      	bx	lr
 80048ae:	bf00      	nop
 80048b0:	08004eb9 	.word	0x08004eb9

080048b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80048b4:	4b06      	ldr	r3, [pc, #24]	; (80048d0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80048b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048ba:	2300      	movs	r3, #0
 80048bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048cc:	4770      	bx	lr
 80048ce:	bf00      	nop
 80048d0:	08005cdd 	.word	0x08005cdd

080048d4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80048d4:	4b06      	ldr	r3, [pc, #24]	; (80048f0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80048d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048da:	2300      	movs	r3, #0
 80048dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048ec:	4770      	bx	lr
 80048ee:	bf00      	nop
 80048f0:	08004d79 	.word	0x08004d79

080048f4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80048f4:	4b06      	ldr	r3, [pc, #24]	; (8004910 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80048f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048fa:	2300      	movs	r3, #0
 80048fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004900:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004904:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004908:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800490c:	4770      	bx	lr
 800490e:	bf00      	nop
 8004910:	08005b9d 	.word	0x08005b9d

08004914 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004914:	4b06      	ldr	r3, [pc, #24]	; (8004930 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004916:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800491a:	2300      	movs	r3, #0
 800491c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004920:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004924:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004928:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800492c:	4770      	bx	lr
 800492e:	bf00      	nop
 8004930:	08005a5d 	.word	0x08005a5d

08004934 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004934:	4b06      	ldr	r3, [pc, #24]	; (8004950 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004936:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800493a:	2300      	movs	r3, #0
 800493c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004940:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004944:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004948:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800494c:	4770      	bx	lr
 800494e:	bf00      	nop
 8004950:	0800591d 	.word	0x0800591d

08004954 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004954:	4b06      	ldr	r3, [pc, #24]	; (8004970 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004956:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800495a:	2300      	movs	r3, #0
 800495c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004960:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004964:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004968:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800496c:	4770      	bx	lr
 800496e:	bf00      	nop
 8004970:	080057dd 	.word	0x080057dd

08004974 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004974:	4b06      	ldr	r3, [pc, #24]	; (8004990 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004976:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800497a:	2300      	movs	r3, #0
 800497c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004980:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004984:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004988:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800498c:	4770      	bx	lr
 800498e:	bf00      	nop
 8004990:	08004c39 	.word	0x08004c39

08004994 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004994:	4b06      	ldr	r3, [pc, #24]	; (80049b0 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004996:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800499a:	2300      	movs	r3, #0
 800499c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049ac:	4770      	bx	lr
 80049ae:	bf00      	nop
 80049b0:	0800569d 	.word	0x0800569d

080049b4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80049b4:	4b06      	ldr	r3, [pc, #24]	; (80049d0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80049b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049ba:	2300      	movs	r3, #0
 80049bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049cc:	4770      	bx	lr
 80049ce:	bf00      	nop
 80049d0:	0800555d 	.word	0x0800555d

080049d4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80049d4:	4b06      	ldr	r3, [pc, #24]	; (80049f0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80049d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049da:	2300      	movs	r3, #0
 80049dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049ec:	4770      	bx	lr
 80049ee:	bf00      	nop
 80049f0:	0800541d 	.word	0x0800541d

080049f4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 80049f4:	4b06      	ldr	r3, [pc, #24]	; (8004a10 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 80049f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049fa:	2300      	movs	r3, #0
 80049fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a0c:	4770      	bx	lr
 8004a0e:	bf00      	nop
 8004a10:	08004af9 	.word	0x08004af9

08004a14 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004a14:	4b06      	ldr	r3, [pc, #24]	; (8004a30 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004a16:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a1a:	2300      	movs	r3, #0
 8004a1c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a20:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a24:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a28:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a2c:	4770      	bx	lr
 8004a2e:	bf00      	nop
 8004a30:	080052dd 	.word	0x080052dd

08004a34 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8004a34:	4b06      	ldr	r3, [pc, #24]	; (8004a50 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8004a36:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a3a:	2300      	movs	r3, #0
 8004a3c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a40:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a44:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a48:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a4c:	4770      	bx	lr
 8004a4e:	bf00      	nop
 8004a50:	0800519d 	.word	0x0800519d

08004a54 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004a54:	4b06      	ldr	r3, [pc, #24]	; (8004a70 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004a56:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a5a:	2300      	movs	r3, #0
 8004a5c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a60:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a64:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a68:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a6c:	4770      	bx	lr
 8004a6e:	bf00      	nop
 8004a70:	0800505d 	.word	0x0800505d

08004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004a74:	4b06      	ldr	r3, [pc, #24]	; (8004a90 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004a76:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a7a:	2300      	movs	r3, #0
 8004a7c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a80:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a84:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a88:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a8c:	4770      	bx	lr
 8004a8e:	bf00      	nop
 8004a90:	080044b9 	.word	0x080044b9

08004a94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004a94:	6803      	ldr	r3, [r0, #0]
 8004a96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a98:	4718      	bx	r3
	...

08004a9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004a9c:	4b12      	ldr	r3, [pc, #72]	; (8004ae8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004a9e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004aa0:	6003      	str	r3, [r0, #0]
 8004aa2:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004aa6:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004aa8:	4b10      	ldr	r3, [pc, #64]	; (8004aec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004aaa:	7241      	strb	r1, [r0, #9]
 8004aac:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004aae:	4910      	ldr	r1, [pc, #64]	; (8004af0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004ab0:	4b10      	ldr	r3, [pc, #64]	; (8004af4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ab2:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004ab6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004aba:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004abc:	2200      	movs	r2, #0
 8004abe:	6042      	str	r2, [r0, #4]
 8004ac0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004ac2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004ac4:	81c2      	strh	r2, [r0, #14]
          solid()
 8004ac6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004aca:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004ace:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004ad2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004ad6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ad8:	9100      	str	r1, [sp, #0]
 8004ada:	3010      	adds	r0, #16
 8004adc:	4611      	mov	r1, r2
 8004ade:	f7fe fb0f 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004ae2:	4620      	mov	r0, r4
 8004ae4:	b002      	add	sp, #8
 8004ae6:	bd10      	pop	{r4, pc}
 8004ae8:	0802e0f0 	.word	0x0802e0f0
 8004aec:	0802dfd4 	.word	0x0802dfd4
 8004af0:	20012d9a 	.word	0x20012d9a
 8004af4:	20012d98 	.word	0x20012d98

08004af8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8004af8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004afc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b00:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b02:	68a0      	ldr	r0, [r4, #8]
 8004b04:	6803      	ldr	r3, [r0, #0]
 8004b06:	6a1b      	ldr	r3, [r3, #32]
 8004b08:	4798      	blx	r3
 8004b0a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b0e:	d205      	bcs.n	8004b1c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004b10:	4b42      	ldr	r3, [pc, #264]	; (8004c1c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8004b12:	4a43      	ldr	r2, [pc, #268]	; (8004c20 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004b14:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b16:	4843      	ldr	r0, [pc, #268]	; (8004c24 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8004b18:	f026 f8b8 	bl	802ac8c <__assert_func>
 8004b1c:	6860      	ldr	r0, [r4, #4]
 8004b1e:	6803      	ldr	r3, [r0, #0]
 8004b20:	6a1b      	ldr	r3, [r3, #32]
 8004b22:	4798      	blx	r3
 8004b24:	280f      	cmp	r0, #15
 8004b26:	d803      	bhi.n	8004b30 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8004b28:	4b3f      	ldr	r3, [pc, #252]	; (8004c28 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8004b2a:	4a3d      	ldr	r2, [pc, #244]	; (8004c20 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004b2c:	21a4      	movs	r1, #164	; 0xa4
 8004b2e:	e7f2      	b.n	8004b16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b30:	68e0      	ldr	r0, [r4, #12]
 8004b32:	6803      	ldr	r3, [r0, #0]
 8004b34:	6a1b      	ldr	r3, [r3, #32]
 8004b36:	4798      	blx	r3
 8004b38:	2837      	cmp	r0, #55	; 0x37
 8004b3a:	d803      	bhi.n	8004b44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8004b3c:	4b3b      	ldr	r3, [pc, #236]	; (8004c2c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8004b3e:	4a38      	ldr	r2, [pc, #224]	; (8004c20 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004b40:	21a5      	movs	r1, #165	; 0xa5
 8004b42:	e7e8      	b.n	8004b16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b44:	f011 f89c 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b48:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c30 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8004b4c:	3004      	adds	r0, #4
 8004b4e:	f011 f8fd 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b52:	f8d9 0000 	ldr.w	r0, [r9]
 8004b56:	b110      	cbz	r0, 8004b5e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b58:	6803      	ldr	r3, [r0, #0]
 8004b5a:	68db      	ldr	r3, [r3, #12]
 8004b5c:	4798      	blx	r3
    if (*currentTrans)
 8004b5e:	f8d9 0000 	ldr.w	r0, [r9]
 8004b62:	b110      	cbz	r0, 8004b6a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b64:	6803      	ldr	r3, [r0, #0]
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	4798      	blx	r3
    if (*currentScreen)
 8004b6a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c34 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8004b6e:	f8d8 0000 	ldr.w	r0, [r8]
 8004b72:	b110      	cbz	r0, 8004b7a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b74:	6803      	ldr	r3, [r0, #0]
 8004b76:	695b      	ldr	r3, [r3, #20]
 8004b78:	4798      	blx	r3
    if (*currentPresenter)
 8004b7a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b7e:	b110      	cbz	r0, 8004b86 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b80:	6803      	ldr	r3, [r0, #0]
 8004b82:	685b      	ldr	r3, [r3, #4]
 8004b84:	4798      	blx	r3
    if (*currentScreen)
 8004b86:	f8d8 0000 	ldr.w	r0, [r8]
 8004b8a:	b110      	cbz	r0, 8004b92 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b8c:	6803      	ldr	r3, [r0, #0]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	4798      	blx	r3
    if (*currentPresenter)
 8004b92:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b96:	b110      	cbz	r0, 8004b9e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b98:	6803      	ldr	r3, [r0, #0]
 8004b9a:	689b      	ldr	r3, [r3, #8]
 8004b9c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b9e:	68e0      	ldr	r0, [r4, #12]
 8004ba0:	2100      	movs	r1, #0
 8004ba2:	f7ff ff77 	bl	8004a94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004ba6:	2114      	movs	r1, #20
 8004ba8:	4605      	mov	r5, r0
 8004baa:	f7ff ff77 	bl	8004a9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bae:	68a0      	ldr	r0, [r4, #8]
 8004bb0:	6803      	ldr	r3, [r0, #0]
 8004bb2:	2100      	movs	r1, #0
 8004bb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bb6:	4798      	blx	r3
 8004bb8:	4606      	mov	r6, r0
 8004bba:	f004 fad9 	bl	8009170 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bbe:	6860      	ldr	r0, [r4, #4]
 8004bc0:	6803      	ldr	r3, [r0, #0]
 8004bc2:	2100      	movs	r1, #0
 8004bc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bc6:	4798      	blx	r3
 8004bc8:	4631      	mov	r1, r6
 8004bca:	4604      	mov	r4, r0
 8004bcc:	f004 faaa 	bl	8009124 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004bd0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bd4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004bd8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004bdc:	b1dc      	cbz	r4, 8004c16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8004bde:	1d23      	adds	r3, r4, #4
 8004be0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004be4:	6833      	ldr	r3, [r6, #0]
 8004be6:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bea:	4630      	mov	r0, r6
 8004bec:	68db      	ldr	r3, [r3, #12]
 8004bee:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bf0:	4798      	blx	r3
    newPresenter->activate();
 8004bf2:	6823      	ldr	r3, [r4, #0]
 8004bf4:	4620      	mov	r0, r4
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bfa:	4629      	mov	r1, r5
 8004bfc:	4630      	mov	r0, r6
 8004bfe:	f012 fe6b 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c02:	682b      	ldr	r3, [r5, #0]
 8004c04:	4628      	mov	r0, r5
 8004c06:	691b      	ldr	r3, [r3, #16]
 8004c08:	4798      	blx	r3
    newTransition->invalidate();
 8004c0a:	682b      	ldr	r3, [r5, #0]
 8004c0c:	4628      	mov	r0, r5
 8004c0e:	695b      	ldr	r3, [r3, #20]
}
 8004c10:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c14:	4718      	bx	r3
    model->bind(newPresenter);
 8004c16:	4623      	mov	r3, r4
 8004c18:	e7e2      	b.n	8004be0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8004c1a:	bf00      	nop
 8004c1c:	0802ca04 	.word	0x0802ca04
 8004c20:	0802ce35 	.word	0x0802ce35
 8004c24:	0802cba0 	.word	0x0802cba0
 8004c28:	0802cbe7 	.word	0x0802cbe7
 8004c2c:	0802cc8a 	.word	0x0802cc8a
 8004c30:	20012dec 	.word	0x20012dec
 8004c34:	20012de8 	.word	0x20012de8

08004c38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004c38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c3c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c42:	68a0      	ldr	r0, [r4, #8]
 8004c44:	6803      	ldr	r3, [r0, #0]
 8004c46:	6a1b      	ldr	r3, [r3, #32]
 8004c48:	4798      	blx	r3
 8004c4a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004c4e:	d205      	bcs.n	8004c5c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004c50:	4b42      	ldr	r3, [pc, #264]	; (8004d5c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004c52:	4a43      	ldr	r2, [pc, #268]	; (8004d60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004c54:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c56:	4843      	ldr	r0, [pc, #268]	; (8004d64 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004c58:	f026 f818 	bl	802ac8c <__assert_func>
 8004c5c:	6860      	ldr	r0, [r4, #4]
 8004c5e:	6803      	ldr	r3, [r0, #0]
 8004c60:	6a1b      	ldr	r3, [r3, #32]
 8004c62:	4798      	blx	r3
 8004c64:	280f      	cmp	r0, #15
 8004c66:	d803      	bhi.n	8004c70 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004c68:	4b3f      	ldr	r3, [pc, #252]	; (8004d68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004c6a:	4a3d      	ldr	r2, [pc, #244]	; (8004d60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004c6c:	21a4      	movs	r1, #164	; 0xa4
 8004c6e:	e7f2      	b.n	8004c56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c70:	68e0      	ldr	r0, [r4, #12]
 8004c72:	6803      	ldr	r3, [r0, #0]
 8004c74:	6a1b      	ldr	r3, [r3, #32]
 8004c76:	4798      	blx	r3
 8004c78:	2837      	cmp	r0, #55	; 0x37
 8004c7a:	d803      	bhi.n	8004c84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004c7c:	4b3b      	ldr	r3, [pc, #236]	; (8004d6c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004c7e:	4a38      	ldr	r2, [pc, #224]	; (8004d60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004c80:	21a5      	movs	r1, #165	; 0xa5
 8004c82:	e7e8      	b.n	8004c56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c84:	f010 fffc 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c88:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d70 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004c8c:	3004      	adds	r0, #4
 8004c8e:	f011 f85d 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c92:	f8d9 0000 	ldr.w	r0, [r9]
 8004c96:	b110      	cbz	r0, 8004c9e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c98:	6803      	ldr	r3, [r0, #0]
 8004c9a:	68db      	ldr	r3, [r3, #12]
 8004c9c:	4798      	blx	r3
    if (*currentTrans)
 8004c9e:	f8d9 0000 	ldr.w	r0, [r9]
 8004ca2:	b110      	cbz	r0, 8004caa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ca4:	6803      	ldr	r3, [r0, #0]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	4798      	blx	r3
    if (*currentScreen)
 8004caa:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004d74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004cae:	f8d8 0000 	ldr.w	r0, [r8]
 8004cb2:	b110      	cbz	r0, 8004cba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004cb4:	6803      	ldr	r3, [r0, #0]
 8004cb6:	695b      	ldr	r3, [r3, #20]
 8004cb8:	4798      	blx	r3
    if (*currentPresenter)
 8004cba:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cbe:	b110      	cbz	r0, 8004cc6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004cc0:	6803      	ldr	r3, [r0, #0]
 8004cc2:	685b      	ldr	r3, [r3, #4]
 8004cc4:	4798      	blx	r3
    if (*currentScreen)
 8004cc6:	f8d8 0000 	ldr.w	r0, [r8]
 8004cca:	b110      	cbz	r0, 8004cd2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004ccc:	6803      	ldr	r3, [r0, #0]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	4798      	blx	r3
    if (*currentPresenter)
 8004cd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cd6:	b110      	cbz	r0, 8004cde <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004cd8:	6803      	ldr	r3, [r0, #0]
 8004cda:	689b      	ldr	r3, [r3, #8]
 8004cdc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cde:	68e0      	ldr	r0, [r4, #12]
 8004ce0:	2100      	movs	r1, #0
 8004ce2:	f7ff fed7 	bl	8004a94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004ce6:	2114      	movs	r1, #20
 8004ce8:	4605      	mov	r5, r0
 8004cea:	f7ff fed7 	bl	8004a9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cee:	68a0      	ldr	r0, [r4, #8]
 8004cf0:	6803      	ldr	r3, [r0, #0]
 8004cf2:	2100      	movs	r1, #0
 8004cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf6:	4798      	blx	r3
 8004cf8:	4606      	mov	r6, r0
 8004cfa:	f004 fc8d 	bl	8009618 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cfe:	6860      	ldr	r0, [r4, #4]
 8004d00:	6803      	ldr	r3, [r0, #0]
 8004d02:	2100      	movs	r1, #0
 8004d04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d06:	4798      	blx	r3
 8004d08:	4631      	mov	r1, r6
 8004d0a:	4604      	mov	r4, r0
 8004d0c:	f004 fc5e 	bl	80095cc <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004d10:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d14:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d18:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d1c:	b1dc      	cbz	r4, 8004d56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004d1e:	1d23      	adds	r3, r4, #4
 8004d20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d24:	6833      	ldr	r3, [r6, #0]
 8004d26:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d2a:	4630      	mov	r0, r6
 8004d2c:	68db      	ldr	r3, [r3, #12]
 8004d2e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d30:	4798      	blx	r3
    newPresenter->activate();
 8004d32:	6823      	ldr	r3, [r4, #0]
 8004d34:	4620      	mov	r0, r4
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d3a:	4629      	mov	r1, r5
 8004d3c:	4630      	mov	r0, r6
 8004d3e:	f012 fdcb 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d42:	682b      	ldr	r3, [r5, #0]
 8004d44:	4628      	mov	r0, r5
 8004d46:	691b      	ldr	r3, [r3, #16]
 8004d48:	4798      	blx	r3
    newTransition->invalidate();
 8004d4a:	682b      	ldr	r3, [r5, #0]
 8004d4c:	4628      	mov	r0, r5
 8004d4e:	695b      	ldr	r3, [r3, #20]
}
 8004d50:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d54:	4718      	bx	r3
    model->bind(newPresenter);
 8004d56:	4623      	mov	r3, r4
 8004d58:	e7e2      	b.n	8004d20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004d5a:	bf00      	nop
 8004d5c:	0802ca04 	.word	0x0802ca04
 8004d60:	0802cf53 	.word	0x0802cf53
 8004d64:	0802cba0 	.word	0x0802cba0
 8004d68:	0802cbe7 	.word	0x0802cbe7
 8004d6c:	0802cc8a 	.word	0x0802cc8a
 8004d70:	20012dec 	.word	0x20012dec
 8004d74:	20012de8 	.word	0x20012de8

08004d78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004d78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d7c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d80:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d82:	68a0      	ldr	r0, [r4, #8]
 8004d84:	6803      	ldr	r3, [r0, #0]
 8004d86:	6a1b      	ldr	r3, [r3, #32]
 8004d88:	4798      	blx	r3
 8004d8a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d8e:	d205      	bcs.n	8004d9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004d90:	4b42      	ldr	r3, [pc, #264]	; (8004e9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004d92:	4a43      	ldr	r2, [pc, #268]	; (8004ea0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d94:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d96:	4843      	ldr	r0, [pc, #268]	; (8004ea4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004d98:	f025 ff78 	bl	802ac8c <__assert_func>
 8004d9c:	6860      	ldr	r0, [r4, #4]
 8004d9e:	6803      	ldr	r3, [r0, #0]
 8004da0:	6a1b      	ldr	r3, [r3, #32]
 8004da2:	4798      	blx	r3
 8004da4:	280f      	cmp	r0, #15
 8004da6:	d803      	bhi.n	8004db0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004da8:	4b3f      	ldr	r3, [pc, #252]	; (8004ea8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004daa:	4a3d      	ldr	r2, [pc, #244]	; (8004ea0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004dac:	21a4      	movs	r1, #164	; 0xa4
 8004dae:	e7f2      	b.n	8004d96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004db0:	68e0      	ldr	r0, [r4, #12]
 8004db2:	6803      	ldr	r3, [r0, #0]
 8004db4:	6a1b      	ldr	r3, [r3, #32]
 8004db6:	4798      	blx	r3
 8004db8:	2837      	cmp	r0, #55	; 0x37
 8004dba:	d803      	bhi.n	8004dc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004dbc:	4b3b      	ldr	r3, [pc, #236]	; (8004eac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004dbe:	4a38      	ldr	r2, [pc, #224]	; (8004ea0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004dc0:	21a5      	movs	r1, #165	; 0xa5
 8004dc2:	e7e8      	b.n	8004d96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004dc4:	f010 ff5c 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dc8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004eb0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004dcc:	3004      	adds	r0, #4
 8004dce:	f010 ffbd 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dd2:	f8d9 0000 	ldr.w	r0, [r9]
 8004dd6:	b110      	cbz	r0, 8004dde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004dd8:	6803      	ldr	r3, [r0, #0]
 8004dda:	68db      	ldr	r3, [r3, #12]
 8004ddc:	4798      	blx	r3
    if (*currentTrans)
 8004dde:	f8d9 0000 	ldr.w	r0, [r9]
 8004de2:	b110      	cbz	r0, 8004dea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004de4:	6803      	ldr	r3, [r0, #0]
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	4798      	blx	r3
    if (*currentScreen)
 8004dea:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004eb4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004dee:	f8d8 0000 	ldr.w	r0, [r8]
 8004df2:	b110      	cbz	r0, 8004dfa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004df4:	6803      	ldr	r3, [r0, #0]
 8004df6:	695b      	ldr	r3, [r3, #20]
 8004df8:	4798      	blx	r3
    if (*currentPresenter)
 8004dfa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dfe:	b110      	cbz	r0, 8004e06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e00:	6803      	ldr	r3, [r0, #0]
 8004e02:	685b      	ldr	r3, [r3, #4]
 8004e04:	4798      	blx	r3
    if (*currentScreen)
 8004e06:	f8d8 0000 	ldr.w	r0, [r8]
 8004e0a:	b110      	cbz	r0, 8004e12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e0c:	6803      	ldr	r3, [r0, #0]
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	4798      	blx	r3
    if (*currentPresenter)
 8004e12:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e16:	b110      	cbz	r0, 8004e1e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e18:	6803      	ldr	r3, [r0, #0]
 8004e1a:	689b      	ldr	r3, [r3, #8]
 8004e1c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e1e:	68e0      	ldr	r0, [r4, #12]
 8004e20:	2100      	movs	r1, #0
 8004e22:	f7ff fe37 	bl	8004a94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004e26:	2114      	movs	r1, #20
 8004e28:	4605      	mov	r5, r0
 8004e2a:	f7ff fe37 	bl	8004a9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e2e:	68a0      	ldr	r0, [r4, #8]
 8004e30:	6803      	ldr	r3, [r0, #0]
 8004e32:	2100      	movs	r1, #0
 8004e34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e36:	4798      	blx	r3
 8004e38:	4606      	mov	r6, r0
 8004e3a:	f004 fb8d 	bl	8009558 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e3e:	6860      	ldr	r0, [r4, #4]
 8004e40:	6803      	ldr	r3, [r0, #0]
 8004e42:	2100      	movs	r1, #0
 8004e44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e46:	4798      	blx	r3
 8004e48:	4631      	mov	r1, r6
 8004e4a:	4604      	mov	r4, r0
 8004e4c:	f004 fb5e 	bl	800950c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004e50:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e54:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e58:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e5c:	b1dc      	cbz	r4, 8004e96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004e5e:	1d23      	adds	r3, r4, #4
 8004e60:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e64:	6833      	ldr	r3, [r6, #0]
 8004e66:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e6a:	4630      	mov	r0, r6
 8004e6c:	68db      	ldr	r3, [r3, #12]
 8004e6e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e70:	4798      	blx	r3
    newPresenter->activate();
 8004e72:	6823      	ldr	r3, [r4, #0]
 8004e74:	4620      	mov	r0, r4
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e7a:	4629      	mov	r1, r5
 8004e7c:	4630      	mov	r0, r6
 8004e7e:	f012 fd2b 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e82:	682b      	ldr	r3, [r5, #0]
 8004e84:	4628      	mov	r0, r5
 8004e86:	691b      	ldr	r3, [r3, #16]
 8004e88:	4798      	blx	r3
    newTransition->invalidate();
 8004e8a:	682b      	ldr	r3, [r5, #0]
 8004e8c:	4628      	mov	r0, r5
 8004e8e:	695b      	ldr	r3, [r3, #20]
}
 8004e90:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e94:	4718      	bx	r3
    model->bind(newPresenter);
 8004e96:	4623      	mov	r3, r4
 8004e98:	e7e2      	b.n	8004e60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004e9a:	bf00      	nop
 8004e9c:	0802ca04 	.word	0x0802ca04
 8004ea0:	0802d083 	.word	0x0802d083
 8004ea4:	0802cba0 	.word	0x0802cba0
 8004ea8:	0802cbe7 	.word	0x0802cbe7
 8004eac:	0802cc8a 	.word	0x0802cc8a
 8004eb0:	20012dec 	.word	0x20012dec
 8004eb4:	20012de8 	.word	0x20012de8

08004eb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004eb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ebc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ec0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ec2:	68a0      	ldr	r0, [r4, #8]
 8004ec4:	6803      	ldr	r3, [r0, #0]
 8004ec6:	6a1b      	ldr	r3, [r3, #32]
 8004ec8:	4798      	blx	r3
 8004eca:	f241 137b 	movw	r3, #4475	; 0x117b
 8004ece:	4298      	cmp	r0, r3
 8004ed0:	d805      	bhi.n	8004ede <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004ed2:	4b42      	ldr	r3, [pc, #264]	; (8004fdc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004ed4:	4a42      	ldr	r2, [pc, #264]	; (8004fe0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004ed6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ed8:	4842      	ldr	r0, [pc, #264]	; (8004fe4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004eda:	f025 fed7 	bl	802ac8c <__assert_func>
 8004ede:	6860      	ldr	r0, [r4, #4]
 8004ee0:	6803      	ldr	r3, [r0, #0]
 8004ee2:	6a1b      	ldr	r3, [r3, #32]
 8004ee4:	4798      	blx	r3
 8004ee6:	280f      	cmp	r0, #15
 8004ee8:	d803      	bhi.n	8004ef2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004eea:	4b3f      	ldr	r3, [pc, #252]	; (8004fe8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004eec:	4a3c      	ldr	r2, [pc, #240]	; (8004fe0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004eee:	21a4      	movs	r1, #164	; 0xa4
 8004ef0:	e7f2      	b.n	8004ed8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ef2:	68e0      	ldr	r0, [r4, #12]
 8004ef4:	6803      	ldr	r3, [r0, #0]
 8004ef6:	6a1b      	ldr	r3, [r3, #32]
 8004ef8:	4798      	blx	r3
 8004efa:	2837      	cmp	r0, #55	; 0x37
 8004efc:	d803      	bhi.n	8004f06 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004efe:	4b3b      	ldr	r3, [pc, #236]	; (8004fec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004f00:	4a37      	ldr	r2, [pc, #220]	; (8004fe0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004f02:	21a5      	movs	r1, #165	; 0xa5
 8004f04:	e7e8      	b.n	8004ed8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f06:	f010 febb 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f0a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ff0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004f0e:	3004      	adds	r0, #4
 8004f10:	f010 ff1c 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f14:	f8d9 0000 	ldr.w	r0, [r9]
 8004f18:	b110      	cbz	r0, 8004f20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f1a:	6803      	ldr	r3, [r0, #0]
 8004f1c:	68db      	ldr	r3, [r3, #12]
 8004f1e:	4798      	blx	r3
    if (*currentTrans)
 8004f20:	f8d9 0000 	ldr.w	r0, [r9]
 8004f24:	b110      	cbz	r0, 8004f2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f26:	6803      	ldr	r3, [r0, #0]
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	4798      	blx	r3
    if (*currentScreen)
 8004f2c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ff4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004f30:	f8d8 0000 	ldr.w	r0, [r8]
 8004f34:	b110      	cbz	r0, 8004f3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f36:	6803      	ldr	r3, [r0, #0]
 8004f38:	695b      	ldr	r3, [r3, #20]
 8004f3a:	4798      	blx	r3
    if (*currentPresenter)
 8004f3c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f40:	b110      	cbz	r0, 8004f48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f42:	6803      	ldr	r3, [r0, #0]
 8004f44:	685b      	ldr	r3, [r3, #4]
 8004f46:	4798      	blx	r3
    if (*currentScreen)
 8004f48:	f8d8 0000 	ldr.w	r0, [r8]
 8004f4c:	b110      	cbz	r0, 8004f54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f4e:	6803      	ldr	r3, [r0, #0]
 8004f50:	681b      	ldr	r3, [r3, #0]
 8004f52:	4798      	blx	r3
    if (*currentPresenter)
 8004f54:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f58:	b110      	cbz	r0, 8004f60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f5a:	6803      	ldr	r3, [r0, #0]
 8004f5c:	689b      	ldr	r3, [r3, #8]
 8004f5e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f60:	68e0      	ldr	r0, [r4, #12]
 8004f62:	2100      	movs	r1, #0
 8004f64:	f7ff fd96 	bl	8004a94 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004f68:	2114      	movs	r1, #20
 8004f6a:	4605      	mov	r5, r0
 8004f6c:	f7ff fd96 	bl	8004a9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f70:	68a0      	ldr	r0, [r4, #8]
 8004f72:	6803      	ldr	r3, [r0, #0]
 8004f74:	2100      	movs	r1, #0
 8004f76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f78:	4798      	blx	r3
 8004f7a:	4606      	mov	r6, r0
 8004f7c:	f004 fa8c 	bl	8009498 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f80:	6860      	ldr	r0, [r4, #4]
 8004f82:	6803      	ldr	r3, [r0, #0]
 8004f84:	2100      	movs	r1, #0
 8004f86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f88:	4798      	blx	r3
 8004f8a:	4631      	mov	r1, r6
 8004f8c:	4604      	mov	r4, r0
 8004f8e:	f004 fa5d 	bl	800944c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004f92:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f96:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f9a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f9e:	b1dc      	cbz	r4, 8004fd8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004fa0:	1d23      	adds	r3, r4, #4
 8004fa2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004fa6:	6833      	ldr	r3, [r6, #0]
 8004fa8:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fac:	4630      	mov	r0, r6
 8004fae:	68db      	ldr	r3, [r3, #12]
 8004fb0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fb2:	4798      	blx	r3
    newPresenter->activate();
 8004fb4:	6823      	ldr	r3, [r4, #0]
 8004fb6:	4620      	mov	r0, r4
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fbc:	4629      	mov	r1, r5
 8004fbe:	4630      	mov	r0, r6
 8004fc0:	f012 fc8a 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fc4:	682b      	ldr	r3, [r5, #0]
 8004fc6:	4628      	mov	r0, r5
 8004fc8:	691b      	ldr	r3, [r3, #16]
 8004fca:	4798      	blx	r3
    newTransition->invalidate();
 8004fcc:	682b      	ldr	r3, [r5, #0]
 8004fce:	4628      	mov	r0, r5
 8004fd0:	695b      	ldr	r3, [r3, #20]
}
 8004fd2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fd6:	4718      	bx	r3
    model->bind(newPresenter);
 8004fd8:	4623      	mov	r3, r4
 8004fda:	e7e2      	b.n	8004fa2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004fdc:	0802ca04 	.word	0x0802ca04
 8004fe0:	0802d1a1 	.word	0x0802d1a1
 8004fe4:	0802cba0 	.word	0x0802cba0
 8004fe8:	0802cbe7 	.word	0x0802cbe7
 8004fec:	0802cc8a 	.word	0x0802cc8a
 8004ff0:	20012dec 	.word	0x20012dec
 8004ff4:	20012de8 	.word	0x20012de8

08004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004ff8:	6803      	ldr	r3, [r0, #0]
 8004ffa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ffc:	4718      	bx	r3
	...

08005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005000:	4b12      	ldr	r3, [pc, #72]	; (800504c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005002:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005004:	6003      	str	r3, [r0, #0]
 8005006:	f44f 7380 	mov.w	r3, #256	; 0x100
 800500a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800500c:	4b10      	ldr	r3, [pc, #64]	; (8005050 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800500e:	7241      	strb	r1, [r0, #9]
 8005010:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005012:	4910      	ldr	r1, [pc, #64]	; (8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005014:	4b10      	ldr	r3, [pc, #64]	; (8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005016:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800501a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800501e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005020:	2200      	movs	r2, #0
 8005022:	6042      	str	r2, [r0, #4]
 8005024:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005026:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005028:	81c2      	strh	r2, [r0, #14]
          solid()
 800502a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800502e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005032:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005036:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800503a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800503c:	9100      	str	r1, [sp, #0]
 800503e:	3010      	adds	r0, #16
 8005040:	4611      	mov	r1, r2
 8005042:	f7fe f85d 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005046:	4620      	mov	r0, r4
 8005048:	b002      	add	sp, #8
 800504a:	bd10      	pop	{r4, pc}
 800504c:	0802e0cc 	.word	0x0802e0cc
 8005050:	0802dfd4 	.word	0x0802dfd4
 8005054:	20012d9a 	.word	0x20012d9a
 8005058:	20012d98 	.word	0x20012d98

0800505c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 800505c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005060:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005064:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005066:	68a0      	ldr	r0, [r4, #8]
 8005068:	6803      	ldr	r3, [r0, #0]
 800506a:	6a1b      	ldr	r3, [r3, #32]
 800506c:	4798      	blx	r3
 800506e:	f241 03af 	movw	r3, #4271	; 0x10af
 8005072:	4298      	cmp	r0, r3
 8005074:	d805      	bhi.n	8005082 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005076:	4b42      	ldr	r3, [pc, #264]	; (8005180 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005078:	4a42      	ldr	r2, [pc, #264]	; (8005184 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800507a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800507c:	4842      	ldr	r0, [pc, #264]	; (8005188 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 800507e:	f025 fe05 	bl	802ac8c <__assert_func>
 8005082:	6860      	ldr	r0, [r4, #4]
 8005084:	6803      	ldr	r3, [r0, #0]
 8005086:	6a1b      	ldr	r3, [r3, #32]
 8005088:	4798      	blx	r3
 800508a:	280f      	cmp	r0, #15
 800508c:	d803      	bhi.n	8005096 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 800508e:	4b3f      	ldr	r3, [pc, #252]	; (800518c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005090:	4a3c      	ldr	r2, [pc, #240]	; (8005184 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005092:	21a4      	movs	r1, #164	; 0xa4
 8005094:	e7f2      	b.n	800507c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005096:	68e0      	ldr	r0, [r4, #12]
 8005098:	6803      	ldr	r3, [r0, #0]
 800509a:	6a1b      	ldr	r3, [r3, #32]
 800509c:	4798      	blx	r3
 800509e:	2837      	cmp	r0, #55	; 0x37
 80050a0:	d803      	bhi.n	80050aa <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80050a2:	4b3b      	ldr	r3, [pc, #236]	; (8005190 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80050a4:	4a37      	ldr	r2, [pc, #220]	; (8005184 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80050a6:	21a5      	movs	r1, #165	; 0xa5
 80050a8:	e7e8      	b.n	800507c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80050aa:	f010 fde9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80050ae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005194 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80050b2:	3004      	adds	r0, #4
 80050b4:	f010 fe4a 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80050b8:	f8d9 0000 	ldr.w	r0, [r9]
 80050bc:	b110      	cbz	r0, 80050c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80050be:	6803      	ldr	r3, [r0, #0]
 80050c0:	68db      	ldr	r3, [r3, #12]
 80050c2:	4798      	blx	r3
    if (*currentTrans)
 80050c4:	f8d9 0000 	ldr.w	r0, [r9]
 80050c8:	b110      	cbz	r0, 80050d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80050ca:	6803      	ldr	r3, [r0, #0]
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	4798      	blx	r3
    if (*currentScreen)
 80050d0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005198 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80050d4:	f8d8 0000 	ldr.w	r0, [r8]
 80050d8:	b110      	cbz	r0, 80050e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80050da:	6803      	ldr	r3, [r0, #0]
 80050dc:	695b      	ldr	r3, [r3, #20]
 80050de:	4798      	blx	r3
    if (*currentPresenter)
 80050e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050e4:	b110      	cbz	r0, 80050ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80050e6:	6803      	ldr	r3, [r0, #0]
 80050e8:	685b      	ldr	r3, [r3, #4]
 80050ea:	4798      	blx	r3
    if (*currentScreen)
 80050ec:	f8d8 0000 	ldr.w	r0, [r8]
 80050f0:	b110      	cbz	r0, 80050f8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80050f2:	6803      	ldr	r3, [r0, #0]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	4798      	blx	r3
    if (*currentPresenter)
 80050f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050fc:	b110      	cbz	r0, 8005104 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80050fe:	6803      	ldr	r3, [r0, #0]
 8005100:	689b      	ldr	r3, [r3, #8]
 8005102:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005104:	68e0      	ldr	r0, [r4, #12]
 8005106:	2100      	movs	r1, #0
 8005108:	f7ff ff76 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800510c:	2114      	movs	r1, #20
 800510e:	4605      	mov	r5, r0
 8005110:	f7ff ff76 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005114:	68a0      	ldr	r0, [r4, #8]
 8005116:	6803      	ldr	r3, [r0, #0]
 8005118:	2100      	movs	r1, #0
 800511a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800511c:	4798      	blx	r3
 800511e:	4606      	mov	r6, r0
 8005120:	f004 fcb2 	bl	8009a88 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005124:	6860      	ldr	r0, [r4, #4]
 8005126:	6803      	ldr	r3, [r0, #0]
 8005128:	2100      	movs	r1, #0
 800512a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800512c:	4798      	blx	r3
 800512e:	4631      	mov	r1, r6
 8005130:	4604      	mov	r4, r0
 8005132:	f004 fc83 	bl	8009a3c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005136:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800513a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800513e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005142:	b1dc      	cbz	r4, 800517c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005144:	1d23      	adds	r3, r4, #4
 8005146:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800514a:	6833      	ldr	r3, [r6, #0]
 800514c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005150:	4630      	mov	r0, r6
 8005152:	68db      	ldr	r3, [r3, #12]
 8005154:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005156:	4798      	blx	r3
    newPresenter->activate();
 8005158:	6823      	ldr	r3, [r4, #0]
 800515a:	4620      	mov	r0, r4
 800515c:	681b      	ldr	r3, [r3, #0]
 800515e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005160:	4629      	mov	r1, r5
 8005162:	4630      	mov	r0, r6
 8005164:	f012 fbb8 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005168:	682b      	ldr	r3, [r5, #0]
 800516a:	4628      	mov	r0, r5
 800516c:	691b      	ldr	r3, [r3, #16]
 800516e:	4798      	blx	r3
    newTransition->invalidate();
 8005170:	682b      	ldr	r3, [r5, #0]
 8005172:	4628      	mov	r0, r5
 8005174:	695b      	ldr	r3, [r3, #20]
}
 8005176:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800517a:	4718      	bx	r3
    model->bind(newPresenter);
 800517c:	4623      	mov	r3, r4
 800517e:	e7e2      	b.n	8005146 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005180:	0802ca04 	.word	0x0802ca04
 8005184:	0802d2bb 	.word	0x0802d2bb
 8005188:	0802cba0 	.word	0x0802cba0
 800518c:	0802cbe7 	.word	0x0802cbe7
 8005190:	0802cc8a 	.word	0x0802cc8a
 8005194:	20012dec 	.word	0x20012dec
 8005198:	20012de8 	.word	0x20012de8

0800519c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 800519c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80051a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051a6:	68a0      	ldr	r0, [r4, #8]
 80051a8:	6803      	ldr	r3, [r0, #0]
 80051aa:	6a1b      	ldr	r3, [r3, #32]
 80051ac:	4798      	blx	r3
 80051ae:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 80051b2:	d205      	bcs.n	80051c0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x24>
 80051b4:	4b42      	ldr	r3, [pc, #264]	; (80052c0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 80051b6:	4a43      	ldr	r2, [pc, #268]	; (80052c4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80051b8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051ba:	4843      	ldr	r0, [pc, #268]	; (80052c8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 80051bc:	f025 fd66 	bl	802ac8c <__assert_func>
 80051c0:	6860      	ldr	r0, [r4, #4]
 80051c2:	6803      	ldr	r3, [r0, #0]
 80051c4:	6a1b      	ldr	r3, [r3, #32]
 80051c6:	4798      	blx	r3
 80051c8:	280f      	cmp	r0, #15
 80051ca:	d803      	bhi.n	80051d4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x38>
 80051cc:	4b3f      	ldr	r3, [pc, #252]	; (80052cc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80051ce:	4a3d      	ldr	r2, [pc, #244]	; (80052c4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80051d0:	21a4      	movs	r1, #164	; 0xa4
 80051d2:	e7f2      	b.n	80051ba <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80051d4:	68e0      	ldr	r0, [r4, #12]
 80051d6:	6803      	ldr	r3, [r0, #0]
 80051d8:	6a1b      	ldr	r3, [r3, #32]
 80051da:	4798      	blx	r3
 80051dc:	2837      	cmp	r0, #55	; 0x37
 80051de:	d803      	bhi.n	80051e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4c>
 80051e0:	4b3b      	ldr	r3, [pc, #236]	; (80052d0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80051e2:	4a38      	ldr	r2, [pc, #224]	; (80052c4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80051e4:	21a5      	movs	r1, #165	; 0xa5
 80051e6:	e7e8      	b.n	80051ba <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80051e8:	f010 fd4a 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051ec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80052d4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80051f0:	3004      	adds	r0, #4
 80051f2:	f010 fdab 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051f6:	f8d9 0000 	ldr.w	r0, [r9]
 80051fa:	b110      	cbz	r0, 8005202 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	68db      	ldr	r3, [r3, #12]
 8005200:	4798      	blx	r3
    if (*currentTrans)
 8005202:	f8d9 0000 	ldr.w	r0, [r9]
 8005206:	b110      	cbz	r0, 800520e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005208:	6803      	ldr	r3, [r0, #0]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	4798      	blx	r3
    if (*currentScreen)
 800520e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80052d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8005212:	f8d8 0000 	ldr.w	r0, [r8]
 8005216:	b110      	cbz	r0, 800521e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005218:	6803      	ldr	r3, [r0, #0]
 800521a:	695b      	ldr	r3, [r3, #20]
 800521c:	4798      	blx	r3
    if (*currentPresenter)
 800521e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005222:	b110      	cbz	r0, 800522a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005224:	6803      	ldr	r3, [r0, #0]
 8005226:	685b      	ldr	r3, [r3, #4]
 8005228:	4798      	blx	r3
    if (*currentScreen)
 800522a:	f8d8 0000 	ldr.w	r0, [r8]
 800522e:	b110      	cbz	r0, 8005236 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005230:	6803      	ldr	r3, [r0, #0]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	4798      	blx	r3
    if (*currentPresenter)
 8005236:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800523a:	b110      	cbz	r0, 8005242 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800523c:	6803      	ldr	r3, [r0, #0]
 800523e:	689b      	ldr	r3, [r3, #8]
 8005240:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005242:	68e0      	ldr	r0, [r4, #12]
 8005244:	2100      	movs	r1, #0
 8005246:	f7ff fed7 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800524a:	2114      	movs	r1, #20
 800524c:	4605      	mov	r5, r0
 800524e:	f7ff fed7 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005252:	68a0      	ldr	r0, [r4, #8]
 8005254:	6803      	ldr	r3, [r0, #0]
 8005256:	2100      	movs	r1, #0
 8005258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800525a:	4798      	blx	r3
 800525c:	4606      	mov	r6, r0
 800525e:	f003 ffe1 	bl	8009224 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005262:	6860      	ldr	r0, [r4, #4]
 8005264:	6803      	ldr	r3, [r0, #0]
 8005266:	2100      	movs	r1, #0
 8005268:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800526a:	4798      	blx	r3
 800526c:	4631      	mov	r1, r6
 800526e:	4604      	mov	r4, r0
 8005270:	f003 ffb2 	bl	80091d8 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8005274:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005278:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800527c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005280:	b1dc      	cbz	r4, 80052ba <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x11e>
 8005282:	1d23      	adds	r3, r4, #4
 8005284:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005288:	6833      	ldr	r3, [r6, #0]
 800528a:	f8c4 a008 	str.w	sl, [r4, #8]
 800528e:	4630      	mov	r0, r6
 8005290:	68db      	ldr	r3, [r3, #12]
 8005292:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005294:	4798      	blx	r3
    newPresenter->activate();
 8005296:	6823      	ldr	r3, [r4, #0]
 8005298:	4620      	mov	r0, r4
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800529e:	4629      	mov	r1, r5
 80052a0:	4630      	mov	r0, r6
 80052a2:	f012 fb19 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052a6:	682b      	ldr	r3, [r5, #0]
 80052a8:	4628      	mov	r0, r5
 80052aa:	691b      	ldr	r3, [r3, #16]
 80052ac:	4798      	blx	r3
    newTransition->invalidate();
 80052ae:	682b      	ldr	r3, [r5, #0]
 80052b0:	4628      	mov	r0, r5
 80052b2:	695b      	ldr	r3, [r3, #20]
}
 80052b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052b8:	4718      	bx	r3
    model->bind(newPresenter);
 80052ba:	4623      	mov	r3, r4
 80052bc:	e7e2      	b.n	8005284 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xe8>
 80052be:	bf00      	nop
 80052c0:	0802ca04 	.word	0x0802ca04
 80052c4:	0802d3db 	.word	0x0802d3db
 80052c8:	0802cba0 	.word	0x0802cba0
 80052cc:	0802cbe7 	.word	0x0802cbe7
 80052d0:	0802cc8a 	.word	0x0802cc8a
 80052d4:	20012dec 	.word	0x20012dec
 80052d8:	20012de8 	.word	0x20012de8

080052dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80052dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80052e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80052e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80052e6:	68a0      	ldr	r0, [r4, #8]
 80052e8:	6803      	ldr	r3, [r0, #0]
 80052ea:	6a1b      	ldr	r3, [r3, #32]
 80052ec:	4798      	blx	r3
 80052ee:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 80052f2:	d205      	bcs.n	8005300 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x24>
 80052f4:	4b42      	ldr	r3, [pc, #264]	; (8005400 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80052f6:	4a43      	ldr	r2, [pc, #268]	; (8005404 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80052f8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80052fa:	4843      	ldr	r0, [pc, #268]	; (8005408 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80052fc:	f025 fcc6 	bl	802ac8c <__assert_func>
 8005300:	6860      	ldr	r0, [r4, #4]
 8005302:	6803      	ldr	r3, [r0, #0]
 8005304:	6a1b      	ldr	r3, [r3, #32]
 8005306:	4798      	blx	r3
 8005308:	280f      	cmp	r0, #15
 800530a:	d803      	bhi.n	8005314 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x38>
 800530c:	4b3f      	ldr	r3, [pc, #252]	; (800540c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 800530e:	4a3d      	ldr	r2, [pc, #244]	; (8005404 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005310:	21a4      	movs	r1, #164	; 0xa4
 8005312:	e7f2      	b.n	80052fa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005314:	68e0      	ldr	r0, [r4, #12]
 8005316:	6803      	ldr	r3, [r0, #0]
 8005318:	6a1b      	ldr	r3, [r3, #32]
 800531a:	4798      	blx	r3
 800531c:	2837      	cmp	r0, #55	; 0x37
 800531e:	d803      	bhi.n	8005328 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4c>
 8005320:	4b3b      	ldr	r3, [pc, #236]	; (8005410 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005322:	4a38      	ldr	r2, [pc, #224]	; (8005404 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005324:	21a5      	movs	r1, #165	; 0xa5
 8005326:	e7e8      	b.n	80052fa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005328:	f010 fcaa 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800532c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005414 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005330:	3004      	adds	r0, #4
 8005332:	f010 fd0b 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005336:	f8d9 0000 	ldr.w	r0, [r9]
 800533a:	b110      	cbz	r0, 8005342 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800533c:	6803      	ldr	r3, [r0, #0]
 800533e:	68db      	ldr	r3, [r3, #12]
 8005340:	4798      	blx	r3
    if (*currentTrans)
 8005342:	f8d9 0000 	ldr.w	r0, [r9]
 8005346:	b110      	cbz	r0, 800534e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005348:	6803      	ldr	r3, [r0, #0]
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	4798      	blx	r3
    if (*currentScreen)
 800534e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005418 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005352:	f8d8 0000 	ldr.w	r0, [r8]
 8005356:	b110      	cbz	r0, 800535e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005358:	6803      	ldr	r3, [r0, #0]
 800535a:	695b      	ldr	r3, [r3, #20]
 800535c:	4798      	blx	r3
    if (*currentPresenter)
 800535e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005362:	b110      	cbz	r0, 800536a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005364:	6803      	ldr	r3, [r0, #0]
 8005366:	685b      	ldr	r3, [r3, #4]
 8005368:	4798      	blx	r3
    if (*currentScreen)
 800536a:	f8d8 0000 	ldr.w	r0, [r8]
 800536e:	b110      	cbz	r0, 8005376 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005370:	6803      	ldr	r3, [r0, #0]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	4798      	blx	r3
    if (*currentPresenter)
 8005376:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800537a:	b110      	cbz	r0, 8005382 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800537c:	6803      	ldr	r3, [r0, #0]
 800537e:	689b      	ldr	r3, [r3, #8]
 8005380:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005382:	68e0      	ldr	r0, [r4, #12]
 8005384:	2100      	movs	r1, #0
 8005386:	f7ff fe37 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800538a:	2114      	movs	r1, #20
 800538c:	4605      	mov	r5, r0
 800538e:	f7ff fe37 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005392:	68a0      	ldr	r0, [r4, #8]
 8005394:	6803      	ldr	r3, [r0, #0]
 8005396:	2100      	movs	r1, #0
 8005398:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800539a:	4798      	blx	r3
 800539c:	4606      	mov	r6, r0
 800539e:	f003 ffbb 	bl	8009318 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053a2:	6860      	ldr	r0, [r4, #4]
 80053a4:	6803      	ldr	r3, [r0, #0]
 80053a6:	2100      	movs	r1, #0
 80053a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053aa:	4798      	blx	r3
 80053ac:	4631      	mov	r1, r6
 80053ae:	4604      	mov	r4, r0
 80053b0:	f003 ff8c 	bl	80092cc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80053b4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80053b8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80053bc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80053c0:	b1dc      	cbz	r4, 80053fa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x11e>
 80053c2:	1d23      	adds	r3, r4, #4
 80053c4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80053c8:	6833      	ldr	r3, [r6, #0]
 80053ca:	f8c4 a008 	str.w	sl, [r4, #8]
 80053ce:	4630      	mov	r0, r6
 80053d0:	68db      	ldr	r3, [r3, #12]
 80053d2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80053d4:	4798      	blx	r3
    newPresenter->activate();
 80053d6:	6823      	ldr	r3, [r4, #0]
 80053d8:	4620      	mov	r0, r4
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80053de:	4629      	mov	r1, r5
 80053e0:	4630      	mov	r0, r6
 80053e2:	f012 fa79 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80053e6:	682b      	ldr	r3, [r5, #0]
 80053e8:	4628      	mov	r0, r5
 80053ea:	691b      	ldr	r3, [r3, #16]
 80053ec:	4798      	blx	r3
    newTransition->invalidate();
 80053ee:	682b      	ldr	r3, [r5, #0]
 80053f0:	4628      	mov	r0, r5
 80053f2:	695b      	ldr	r3, [r3, #20]
}
 80053f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053f8:	4718      	bx	r3
    model->bind(newPresenter);
 80053fa:	4623      	mov	r3, r4
 80053fc:	e7e2      	b.n	80053c4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xe8>
 80053fe:	bf00      	nop
 8005400:	0802ca04 	.word	0x0802ca04
 8005404:	0802d503 	.word	0x0802d503
 8005408:	0802cba0 	.word	0x0802cba0
 800540c:	0802cbe7 	.word	0x0802cbe7
 8005410:	0802cc8a 	.word	0x0802cc8a
 8005414:	20012dec 	.word	0x20012dec
 8005418:	20012de8 	.word	0x20012de8

0800541c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 800541c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005420:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005424:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005426:	68a0      	ldr	r0, [r4, #8]
 8005428:	6803      	ldr	r3, [r0, #0]
 800542a:	6a1b      	ldr	r3, [r3, #32]
 800542c:	4798      	blx	r3
 800542e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005432:	d205      	bcs.n	8005440 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8005434:	4b42      	ldr	r3, [pc, #264]	; (8005540 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 8005436:	4a43      	ldr	r2, [pc, #268]	; (8005544 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005438:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800543a:	4843      	ldr	r0, [pc, #268]	; (8005548 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 800543c:	f025 fc26 	bl	802ac8c <__assert_func>
 8005440:	6860      	ldr	r0, [r4, #4]
 8005442:	6803      	ldr	r3, [r0, #0]
 8005444:	6a1b      	ldr	r3, [r3, #32]
 8005446:	4798      	blx	r3
 8005448:	280f      	cmp	r0, #15
 800544a:	d803      	bhi.n	8005454 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 800544c:	4b3f      	ldr	r3, [pc, #252]	; (800554c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 800544e:	4a3d      	ldr	r2, [pc, #244]	; (8005544 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005450:	21a4      	movs	r1, #164	; 0xa4
 8005452:	e7f2      	b.n	800543a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005454:	68e0      	ldr	r0, [r4, #12]
 8005456:	6803      	ldr	r3, [r0, #0]
 8005458:	6a1b      	ldr	r3, [r3, #32]
 800545a:	4798      	blx	r3
 800545c:	2837      	cmp	r0, #55	; 0x37
 800545e:	d803      	bhi.n	8005468 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8005460:	4b3b      	ldr	r3, [pc, #236]	; (8005550 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8005462:	4a38      	ldr	r2, [pc, #224]	; (8005544 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005464:	21a5      	movs	r1, #165	; 0xa5
 8005466:	e7e8      	b.n	800543a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005468:	f010 fc0a 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800546c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005554 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8005470:	3004      	adds	r0, #4
 8005472:	f010 fc6b 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005476:	f8d9 0000 	ldr.w	r0, [r9]
 800547a:	b110      	cbz	r0, 8005482 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800547c:	6803      	ldr	r3, [r0, #0]
 800547e:	68db      	ldr	r3, [r3, #12]
 8005480:	4798      	blx	r3
    if (*currentTrans)
 8005482:	f8d9 0000 	ldr.w	r0, [r9]
 8005486:	b110      	cbz	r0, 800548e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005488:	6803      	ldr	r3, [r0, #0]
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	4798      	blx	r3
    if (*currentScreen)
 800548e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005558 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8005492:	f8d8 0000 	ldr.w	r0, [r8]
 8005496:	b110      	cbz	r0, 800549e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005498:	6803      	ldr	r3, [r0, #0]
 800549a:	695b      	ldr	r3, [r3, #20]
 800549c:	4798      	blx	r3
    if (*currentPresenter)
 800549e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054a2:	b110      	cbz	r0, 80054aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80054a4:	6803      	ldr	r3, [r0, #0]
 80054a6:	685b      	ldr	r3, [r3, #4]
 80054a8:	4798      	blx	r3
    if (*currentScreen)
 80054aa:	f8d8 0000 	ldr.w	r0, [r8]
 80054ae:	b110      	cbz	r0, 80054b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80054b0:	6803      	ldr	r3, [r0, #0]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	4798      	blx	r3
    if (*currentPresenter)
 80054b6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054ba:	b110      	cbz	r0, 80054c2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80054bc:	6803      	ldr	r3, [r0, #0]
 80054be:	689b      	ldr	r3, [r3, #8]
 80054c0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80054c2:	68e0      	ldr	r0, [r4, #12]
 80054c4:	2100      	movs	r1, #0
 80054c6:	f7ff fd97 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80054ca:	2114      	movs	r1, #20
 80054cc:	4605      	mov	r5, r0
 80054ce:	f7ff fd97 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80054d2:	68a0      	ldr	r0, [r4, #8]
 80054d4:	6803      	ldr	r3, [r0, #0]
 80054d6:	2100      	movs	r1, #0
 80054d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054da:	4798      	blx	r3
 80054dc:	4606      	mov	r6, r0
 80054de:	f003 fe47 	bl	8009170 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80054e2:	6860      	ldr	r0, [r4, #4]
 80054e4:	6803      	ldr	r3, [r0, #0]
 80054e6:	2100      	movs	r1, #0
 80054e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054ea:	4798      	blx	r3
 80054ec:	4631      	mov	r1, r6
 80054ee:	4604      	mov	r4, r0
 80054f0:	f003 fe18 	bl	8009124 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80054f4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80054f8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80054fc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005500:	b1dc      	cbz	r4, 800553a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8005502:	1d23      	adds	r3, r4, #4
 8005504:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005508:	6833      	ldr	r3, [r6, #0]
 800550a:	f8c4 a008 	str.w	sl, [r4, #8]
 800550e:	4630      	mov	r0, r6
 8005510:	68db      	ldr	r3, [r3, #12]
 8005512:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005514:	4798      	blx	r3
    newPresenter->activate();
 8005516:	6823      	ldr	r3, [r4, #0]
 8005518:	4620      	mov	r0, r4
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800551e:	4629      	mov	r1, r5
 8005520:	4630      	mov	r0, r6
 8005522:	f012 f9d9 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005526:	682b      	ldr	r3, [r5, #0]
 8005528:	4628      	mov	r0, r5
 800552a:	691b      	ldr	r3, [r3, #16]
 800552c:	4798      	blx	r3
    newTransition->invalidate();
 800552e:	682b      	ldr	r3, [r5, #0]
 8005530:	4628      	mov	r0, r5
 8005532:	695b      	ldr	r3, [r3, #20]
}
 8005534:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005538:	4718      	bx	r3
    model->bind(newPresenter);
 800553a:	4623      	mov	r3, r4
 800553c:	e7e2      	b.n	8005504 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 800553e:	bf00      	nop
 8005540:	0802ca04 	.word	0x0802ca04
 8005544:	0802d629 	.word	0x0802d629
 8005548:	0802cba0 	.word	0x0802cba0
 800554c:	0802cbe7 	.word	0x0802cbe7
 8005550:	0802cc8a 	.word	0x0802cc8a
 8005554:	20012dec 	.word	0x20012dec
 8005558:	20012de8 	.word	0x20012de8

0800555c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800555c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005560:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005564:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005566:	68a0      	ldr	r0, [r4, #8]
 8005568:	6803      	ldr	r3, [r0, #0]
 800556a:	6a1b      	ldr	r3, [r3, #32]
 800556c:	4798      	blx	r3
 800556e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8005572:	4298      	cmp	r0, r3
 8005574:	d805      	bhi.n	8005582 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005576:	4b42      	ldr	r3, [pc, #264]	; (8005680 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005578:	4a42      	ldr	r2, [pc, #264]	; (8005684 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800557a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800557c:	4842      	ldr	r0, [pc, #264]	; (8005688 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800557e:	f025 fb85 	bl	802ac8c <__assert_func>
 8005582:	6860      	ldr	r0, [r4, #4]
 8005584:	6803      	ldr	r3, [r0, #0]
 8005586:	6a1b      	ldr	r3, [r3, #32]
 8005588:	4798      	blx	r3
 800558a:	280f      	cmp	r0, #15
 800558c:	d803      	bhi.n	8005596 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800558e:	4b3f      	ldr	r3, [pc, #252]	; (800568c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005590:	4a3c      	ldr	r2, [pc, #240]	; (8005684 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005592:	21a4      	movs	r1, #164	; 0xa4
 8005594:	e7f2      	b.n	800557c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005596:	68e0      	ldr	r0, [r4, #12]
 8005598:	6803      	ldr	r3, [r0, #0]
 800559a:	6a1b      	ldr	r3, [r3, #32]
 800559c:	4798      	blx	r3
 800559e:	2837      	cmp	r0, #55	; 0x37
 80055a0:	d803      	bhi.n	80055aa <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80055a2:	4b3b      	ldr	r3, [pc, #236]	; (8005690 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80055a4:	4a37      	ldr	r2, [pc, #220]	; (8005684 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80055a6:	21a5      	movs	r1, #165	; 0xa5
 80055a8:	e7e8      	b.n	800557c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80055aa:	f010 fb69 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80055ae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005694 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80055b2:	3004      	adds	r0, #4
 80055b4:	f010 fbca 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80055b8:	f8d9 0000 	ldr.w	r0, [r9]
 80055bc:	b110      	cbz	r0, 80055c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80055be:	6803      	ldr	r3, [r0, #0]
 80055c0:	68db      	ldr	r3, [r3, #12]
 80055c2:	4798      	blx	r3
    if (*currentTrans)
 80055c4:	f8d9 0000 	ldr.w	r0, [r9]
 80055c8:	b110      	cbz	r0, 80055d0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80055ca:	6803      	ldr	r3, [r0, #0]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	4798      	blx	r3
    if (*currentScreen)
 80055d0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005698 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80055d4:	f8d8 0000 	ldr.w	r0, [r8]
 80055d8:	b110      	cbz	r0, 80055e0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80055da:	6803      	ldr	r3, [r0, #0]
 80055dc:	695b      	ldr	r3, [r3, #20]
 80055de:	4798      	blx	r3
    if (*currentPresenter)
 80055e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055e4:	b110      	cbz	r0, 80055ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80055e6:	6803      	ldr	r3, [r0, #0]
 80055e8:	685b      	ldr	r3, [r3, #4]
 80055ea:	4798      	blx	r3
    if (*currentScreen)
 80055ec:	f8d8 0000 	ldr.w	r0, [r8]
 80055f0:	b110      	cbz	r0, 80055f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80055f2:	6803      	ldr	r3, [r0, #0]
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	4798      	blx	r3
    if (*currentPresenter)
 80055f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055fc:	b110      	cbz	r0, 8005604 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80055fe:	6803      	ldr	r3, [r0, #0]
 8005600:	689b      	ldr	r3, [r3, #8]
 8005602:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005604:	68e0      	ldr	r0, [r4, #12]
 8005606:	2100      	movs	r1, #0
 8005608:	f7ff fcf6 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800560c:	2114      	movs	r1, #20
 800560e:	4605      	mov	r5, r0
 8005610:	f7ff fcf6 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005614:	68a0      	ldr	r0, [r4, #8]
 8005616:	6803      	ldr	r3, [r0, #0]
 8005618:	2100      	movs	r1, #0
 800561a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800561c:	4798      	blx	r3
 800561e:	4606      	mov	r6, r0
 8005620:	f004 f896 	bl	8009750 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005624:	6860      	ldr	r0, [r4, #4]
 8005626:	6803      	ldr	r3, [r0, #0]
 8005628:	2100      	movs	r1, #0
 800562a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800562c:	4798      	blx	r3
 800562e:	4631      	mov	r1, r6
 8005630:	4604      	mov	r4, r0
 8005632:	f004 f867 	bl	8009704 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005636:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800563a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800563e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005642:	b1dc      	cbz	r4, 800567c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005644:	1d23      	adds	r3, r4, #4
 8005646:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800564a:	6833      	ldr	r3, [r6, #0]
 800564c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005650:	4630      	mov	r0, r6
 8005652:	68db      	ldr	r3, [r3, #12]
 8005654:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005656:	4798      	blx	r3
    newPresenter->activate();
 8005658:	6823      	ldr	r3, [r4, #0]
 800565a:	4620      	mov	r0, r4
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005660:	4629      	mov	r1, r5
 8005662:	4630      	mov	r0, r6
 8005664:	f012 f938 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005668:	682b      	ldr	r3, [r5, #0]
 800566a:	4628      	mov	r0, r5
 800566c:	691b      	ldr	r3, [r3, #16]
 800566e:	4798      	blx	r3
    newTransition->invalidate();
 8005670:	682b      	ldr	r3, [r5, #0]
 8005672:	4628      	mov	r0, r5
 8005674:	695b      	ldr	r3, [r3, #20]
}
 8005676:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800567a:	4718      	bx	r3
    model->bind(newPresenter);
 800567c:	4623      	mov	r3, r4
 800567e:	e7e2      	b.n	8005646 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005680:	0802ca04 	.word	0x0802ca04
 8005684:	0802d747 	.word	0x0802d747
 8005688:	0802cba0 	.word	0x0802cba0
 800568c:	0802cbe7 	.word	0x0802cbe7
 8005690:	0802cc8a 	.word	0x0802cc8a
 8005694:	20012dec 	.word	0x20012dec
 8005698:	20012de8 	.word	0x20012de8

0800569c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800569c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80056a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80056a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80056a6:	68a0      	ldr	r0, [r4, #8]
 80056a8:	6803      	ldr	r3, [r0, #0]
 80056aa:	6a1b      	ldr	r3, [r3, #32]
 80056ac:	4798      	blx	r3
 80056ae:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80056b2:	4298      	cmp	r0, r3
 80056b4:	d805      	bhi.n	80056c2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80056b6:	4b42      	ldr	r3, [pc, #264]	; (80057c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80056b8:	4a42      	ldr	r2, [pc, #264]	; (80057c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80056ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80056bc:	4842      	ldr	r0, [pc, #264]	; (80057c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80056be:	f025 fae5 	bl	802ac8c <__assert_func>
 80056c2:	6860      	ldr	r0, [r4, #4]
 80056c4:	6803      	ldr	r3, [r0, #0]
 80056c6:	6a1b      	ldr	r3, [r3, #32]
 80056c8:	4798      	blx	r3
 80056ca:	280f      	cmp	r0, #15
 80056cc:	d803      	bhi.n	80056d6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80056ce:	4b3f      	ldr	r3, [pc, #252]	; (80057cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80056d0:	4a3c      	ldr	r2, [pc, #240]	; (80057c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80056d2:	21a4      	movs	r1, #164	; 0xa4
 80056d4:	e7f2      	b.n	80056bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80056d6:	68e0      	ldr	r0, [r4, #12]
 80056d8:	6803      	ldr	r3, [r0, #0]
 80056da:	6a1b      	ldr	r3, [r3, #32]
 80056dc:	4798      	blx	r3
 80056de:	2837      	cmp	r0, #55	; 0x37
 80056e0:	d803      	bhi.n	80056ea <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80056e2:	4b3b      	ldr	r3, [pc, #236]	; (80057d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80056e4:	4a37      	ldr	r2, [pc, #220]	; (80057c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80056e6:	21a5      	movs	r1, #165	; 0xa5
 80056e8:	e7e8      	b.n	80056bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80056ea:	f010 fac9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80056ee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80057d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80056f2:	3004      	adds	r0, #4
 80056f4:	f010 fb2a 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80056f8:	f8d9 0000 	ldr.w	r0, [r9]
 80056fc:	b110      	cbz	r0, 8005704 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80056fe:	6803      	ldr	r3, [r0, #0]
 8005700:	68db      	ldr	r3, [r3, #12]
 8005702:	4798      	blx	r3
    if (*currentTrans)
 8005704:	f8d9 0000 	ldr.w	r0, [r9]
 8005708:	b110      	cbz	r0, 8005710 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800570a:	6803      	ldr	r3, [r0, #0]
 800570c:	681b      	ldr	r3, [r3, #0]
 800570e:	4798      	blx	r3
    if (*currentScreen)
 8005710:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80057d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005714:	f8d8 0000 	ldr.w	r0, [r8]
 8005718:	b110      	cbz	r0, 8005720 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800571a:	6803      	ldr	r3, [r0, #0]
 800571c:	695b      	ldr	r3, [r3, #20]
 800571e:	4798      	blx	r3
    if (*currentPresenter)
 8005720:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005724:	b110      	cbz	r0, 800572c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005726:	6803      	ldr	r3, [r0, #0]
 8005728:	685b      	ldr	r3, [r3, #4]
 800572a:	4798      	blx	r3
    if (*currentScreen)
 800572c:	f8d8 0000 	ldr.w	r0, [r8]
 8005730:	b110      	cbz	r0, 8005738 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005732:	6803      	ldr	r3, [r0, #0]
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	4798      	blx	r3
    if (*currentPresenter)
 8005738:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800573c:	b110      	cbz	r0, 8005744 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800573e:	6803      	ldr	r3, [r0, #0]
 8005740:	689b      	ldr	r3, [r3, #8]
 8005742:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005744:	68e0      	ldr	r0, [r4, #12]
 8005746:	2100      	movs	r1, #0
 8005748:	f7ff fc56 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800574c:	2114      	movs	r1, #20
 800574e:	4605      	mov	r5, r0
 8005750:	f7ff fc56 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005754:	68a0      	ldr	r0, [r4, #8]
 8005756:	6803      	ldr	r3, [r0, #0]
 8005758:	2100      	movs	r1, #0
 800575a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800575c:	4798      	blx	r3
 800575e:	4606      	mov	r6, r0
 8005760:	f003 ffb4 	bl	80096cc <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005764:	6860      	ldr	r0, [r4, #4]
 8005766:	6803      	ldr	r3, [r0, #0]
 8005768:	2100      	movs	r1, #0
 800576a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800576c:	4798      	blx	r3
 800576e:	4631      	mov	r1, r6
 8005770:	4604      	mov	r4, r0
 8005772:	f003 ff85 	bl	8009680 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8005776:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800577a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800577e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005782:	b1dc      	cbz	r4, 80057bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005784:	1d23      	adds	r3, r4, #4
 8005786:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800578a:	6833      	ldr	r3, [r6, #0]
 800578c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005790:	4630      	mov	r0, r6
 8005792:	68db      	ldr	r3, [r3, #12]
 8005794:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005796:	4798      	blx	r3
    newPresenter->activate();
 8005798:	6823      	ldr	r3, [r4, #0]
 800579a:	4620      	mov	r0, r4
 800579c:	681b      	ldr	r3, [r3, #0]
 800579e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80057a0:	4629      	mov	r1, r5
 80057a2:	4630      	mov	r0, r6
 80057a4:	f012 f898 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80057a8:	682b      	ldr	r3, [r5, #0]
 80057aa:	4628      	mov	r0, r5
 80057ac:	691b      	ldr	r3, [r3, #16]
 80057ae:	4798      	blx	r3
    newTransition->invalidate();
 80057b0:	682b      	ldr	r3, [r5, #0]
 80057b2:	4628      	mov	r0, r5
 80057b4:	695b      	ldr	r3, [r3, #20]
}
 80057b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80057ba:	4718      	bx	r3
    model->bind(newPresenter);
 80057bc:	4623      	mov	r3, r4
 80057be:	e7e2      	b.n	8005786 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80057c0:	0802ca04 	.word	0x0802ca04
 80057c4:	0802d88b 	.word	0x0802d88b
 80057c8:	0802cba0 	.word	0x0802cba0
 80057cc:	0802cbe7 	.word	0x0802cbe7
 80057d0:	0802cc8a 	.word	0x0802cc8a
 80057d4:	20012dec 	.word	0x20012dec
 80057d8:	20012de8 	.word	0x20012de8

080057dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80057dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80057e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80057e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80057e6:	68a0      	ldr	r0, [r4, #8]
 80057e8:	6803      	ldr	r3, [r0, #0]
 80057ea:	6a1b      	ldr	r3, [r3, #32]
 80057ec:	4798      	blx	r3
 80057ee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80057f2:	d205      	bcs.n	8005800 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80057f4:	4b42      	ldr	r3, [pc, #264]	; (8005900 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80057f6:	4a43      	ldr	r2, [pc, #268]	; (8005904 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80057f8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80057fa:	4843      	ldr	r0, [pc, #268]	; (8005908 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80057fc:	f025 fa46 	bl	802ac8c <__assert_func>
 8005800:	6860      	ldr	r0, [r4, #4]
 8005802:	6803      	ldr	r3, [r0, #0]
 8005804:	6a1b      	ldr	r3, [r3, #32]
 8005806:	4798      	blx	r3
 8005808:	280f      	cmp	r0, #15
 800580a:	d803      	bhi.n	8005814 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800580c:	4b3f      	ldr	r3, [pc, #252]	; (800590c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800580e:	4a3d      	ldr	r2, [pc, #244]	; (8005904 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005810:	21a4      	movs	r1, #164	; 0xa4
 8005812:	e7f2      	b.n	80057fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005814:	68e0      	ldr	r0, [r4, #12]
 8005816:	6803      	ldr	r3, [r0, #0]
 8005818:	6a1b      	ldr	r3, [r3, #32]
 800581a:	4798      	blx	r3
 800581c:	2837      	cmp	r0, #55	; 0x37
 800581e:	d803      	bhi.n	8005828 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005820:	4b3b      	ldr	r3, [pc, #236]	; (8005910 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005822:	4a38      	ldr	r2, [pc, #224]	; (8005904 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005824:	21a5      	movs	r1, #165	; 0xa5
 8005826:	e7e8      	b.n	80057fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005828:	f010 fa2a 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800582c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005914 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005830:	3004      	adds	r0, #4
 8005832:	f010 fa8b 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005836:	f8d9 0000 	ldr.w	r0, [r9]
 800583a:	b110      	cbz	r0, 8005842 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800583c:	6803      	ldr	r3, [r0, #0]
 800583e:	68db      	ldr	r3, [r3, #12]
 8005840:	4798      	blx	r3
    if (*currentTrans)
 8005842:	f8d9 0000 	ldr.w	r0, [r9]
 8005846:	b110      	cbz	r0, 800584e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005848:	6803      	ldr	r3, [r0, #0]
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	4798      	blx	r3
    if (*currentScreen)
 800584e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005918 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005852:	f8d8 0000 	ldr.w	r0, [r8]
 8005856:	b110      	cbz	r0, 800585e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005858:	6803      	ldr	r3, [r0, #0]
 800585a:	695b      	ldr	r3, [r3, #20]
 800585c:	4798      	blx	r3
    if (*currentPresenter)
 800585e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005862:	b110      	cbz	r0, 800586a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005864:	6803      	ldr	r3, [r0, #0]
 8005866:	685b      	ldr	r3, [r3, #4]
 8005868:	4798      	blx	r3
    if (*currentScreen)
 800586a:	f8d8 0000 	ldr.w	r0, [r8]
 800586e:	b110      	cbz	r0, 8005876 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005870:	6803      	ldr	r3, [r0, #0]
 8005872:	681b      	ldr	r3, [r3, #0]
 8005874:	4798      	blx	r3
    if (*currentPresenter)
 8005876:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800587a:	b110      	cbz	r0, 8005882 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800587c:	6803      	ldr	r3, [r0, #0]
 800587e:	689b      	ldr	r3, [r3, #8]
 8005880:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005882:	68e0      	ldr	r0, [r4, #12]
 8005884:	2100      	movs	r1, #0
 8005886:	f7ff fbb7 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800588a:	2114      	movs	r1, #20
 800588c:	4605      	mov	r5, r0
 800588e:	f7ff fbb7 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005892:	68a0      	ldr	r0, [r4, #8]
 8005894:	6803      	ldr	r3, [r0, #0]
 8005896:	2100      	movs	r1, #0
 8005898:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800589a:	4798      	blx	r3
 800589c:	4606      	mov	r6, r0
 800589e:	f003 febb 	bl	8009618 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80058a2:	6860      	ldr	r0, [r4, #4]
 80058a4:	6803      	ldr	r3, [r0, #0]
 80058a6:	2100      	movs	r1, #0
 80058a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058aa:	4798      	blx	r3
 80058ac:	4631      	mov	r1, r6
 80058ae:	4604      	mov	r4, r0
 80058b0:	f003 fe8c 	bl	80095cc <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80058b4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80058b8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80058bc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80058c0:	b1dc      	cbz	r4, 80058fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80058c2:	1d23      	adds	r3, r4, #4
 80058c4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80058c8:	6833      	ldr	r3, [r6, #0]
 80058ca:	f8c4 a008 	str.w	sl, [r4, #8]
 80058ce:	4630      	mov	r0, r6
 80058d0:	68db      	ldr	r3, [r3, #12]
 80058d2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80058d4:	4798      	blx	r3
    newPresenter->activate();
 80058d6:	6823      	ldr	r3, [r4, #0]
 80058d8:	4620      	mov	r0, r4
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80058de:	4629      	mov	r1, r5
 80058e0:	4630      	mov	r0, r6
 80058e2:	f011 fff9 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80058e6:	682b      	ldr	r3, [r5, #0]
 80058e8:	4628      	mov	r0, r5
 80058ea:	691b      	ldr	r3, [r3, #16]
 80058ec:	4798      	blx	r3
    newTransition->invalidate();
 80058ee:	682b      	ldr	r3, [r5, #0]
 80058f0:	4628      	mov	r0, r5
 80058f2:	695b      	ldr	r3, [r3, #20]
}
 80058f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058f8:	4718      	bx	r3
    model->bind(newPresenter);
 80058fa:	4623      	mov	r3, r4
 80058fc:	e7e2      	b.n	80058c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80058fe:	bf00      	nop
 8005900:	0802ca04 	.word	0x0802ca04
 8005904:	0802d9cb 	.word	0x0802d9cb
 8005908:	0802cba0 	.word	0x0802cba0
 800590c:	0802cbe7 	.word	0x0802cbe7
 8005910:	0802cc8a 	.word	0x0802cc8a
 8005914:	20012dec 	.word	0x20012dec
 8005918:	20012de8 	.word	0x20012de8

0800591c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 800591c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005920:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005924:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005926:	68a0      	ldr	r0, [r4, #8]
 8005928:	6803      	ldr	r3, [r0, #0]
 800592a:	6a1b      	ldr	r3, [r3, #32]
 800592c:	4798      	blx	r3
 800592e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8005932:	4298      	cmp	r0, r3
 8005934:	d805      	bhi.n	8005942 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8005936:	4b42      	ldr	r3, [pc, #264]	; (8005a40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8005938:	4a42      	ldr	r2, [pc, #264]	; (8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800593a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800593c:	4842      	ldr	r0, [pc, #264]	; (8005a48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800593e:	f025 f9a5 	bl	802ac8c <__assert_func>
 8005942:	6860      	ldr	r0, [r4, #4]
 8005944:	6803      	ldr	r3, [r0, #0]
 8005946:	6a1b      	ldr	r3, [r3, #32]
 8005948:	4798      	blx	r3
 800594a:	280f      	cmp	r0, #15
 800594c:	d803      	bhi.n	8005956 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800594e:	4b3f      	ldr	r3, [pc, #252]	; (8005a4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005950:	4a3c      	ldr	r2, [pc, #240]	; (8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005952:	21a4      	movs	r1, #164	; 0xa4
 8005954:	e7f2      	b.n	800593c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005956:	68e0      	ldr	r0, [r4, #12]
 8005958:	6803      	ldr	r3, [r0, #0]
 800595a:	6a1b      	ldr	r3, [r3, #32]
 800595c:	4798      	blx	r3
 800595e:	2837      	cmp	r0, #55	; 0x37
 8005960:	d803      	bhi.n	800596a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005962:	4b3b      	ldr	r3, [pc, #236]	; (8005a50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005964:	4a37      	ldr	r2, [pc, #220]	; (8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005966:	21a5      	movs	r1, #165	; 0xa5
 8005968:	e7e8      	b.n	800593c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800596a:	f010 f989 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800596e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005a54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005972:	3004      	adds	r0, #4
 8005974:	f010 f9ea 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005978:	f8d9 0000 	ldr.w	r0, [r9]
 800597c:	b110      	cbz	r0, 8005984 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800597e:	6803      	ldr	r3, [r0, #0]
 8005980:	68db      	ldr	r3, [r3, #12]
 8005982:	4798      	blx	r3
    if (*currentTrans)
 8005984:	f8d9 0000 	ldr.w	r0, [r9]
 8005988:	b110      	cbz	r0, 8005990 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800598a:	6803      	ldr	r3, [r0, #0]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	4798      	blx	r3
    if (*currentScreen)
 8005990:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005a58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005994:	f8d8 0000 	ldr.w	r0, [r8]
 8005998:	b110      	cbz	r0, 80059a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800599a:	6803      	ldr	r3, [r0, #0]
 800599c:	695b      	ldr	r3, [r3, #20]
 800599e:	4798      	blx	r3
    if (*currentPresenter)
 80059a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80059a4:	b110      	cbz	r0, 80059ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80059a6:	6803      	ldr	r3, [r0, #0]
 80059a8:	685b      	ldr	r3, [r3, #4]
 80059aa:	4798      	blx	r3
    if (*currentScreen)
 80059ac:	f8d8 0000 	ldr.w	r0, [r8]
 80059b0:	b110      	cbz	r0, 80059b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80059b2:	6803      	ldr	r3, [r0, #0]
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	4798      	blx	r3
    if (*currentPresenter)
 80059b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80059bc:	b110      	cbz	r0, 80059c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80059be:	6803      	ldr	r3, [r0, #0]
 80059c0:	689b      	ldr	r3, [r3, #8]
 80059c2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80059c4:	68e0      	ldr	r0, [r4, #12]
 80059c6:	2100      	movs	r1, #0
 80059c8:	f7ff fb16 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80059cc:	2114      	movs	r1, #20
 80059ce:	4605      	mov	r5, r0
 80059d0:	f7ff fb16 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80059d4:	68a0      	ldr	r0, [r4, #8]
 80059d6:	6803      	ldr	r3, [r0, #0]
 80059d8:	2100      	movs	r1, #0
 80059da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059dc:	4798      	blx	r3
 80059de:	4606      	mov	r6, r0
 80059e0:	f003 ffec 	bl	80099bc <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80059e4:	6860      	ldr	r0, [r4, #4]
 80059e6:	6803      	ldr	r3, [r0, #0]
 80059e8:	2100      	movs	r1, #0
 80059ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059ec:	4798      	blx	r3
 80059ee:	4631      	mov	r1, r6
 80059f0:	4604      	mov	r4, r0
 80059f2:	f003 ffbd 	bl	8009970 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80059f6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059fa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005a02:	b1dc      	cbz	r4, 8005a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8005a04:	1d23      	adds	r3, r4, #4
 8005a06:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005a0a:	6833      	ldr	r3, [r6, #0]
 8005a0c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005a10:	4630      	mov	r0, r6
 8005a12:	68db      	ldr	r3, [r3, #12]
 8005a14:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005a16:	4798      	blx	r3
    newPresenter->activate();
 8005a18:	6823      	ldr	r3, [r4, #0]
 8005a1a:	4620      	mov	r0, r4
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005a20:	4629      	mov	r1, r5
 8005a22:	4630      	mov	r0, r6
 8005a24:	f011 ff58 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005a28:	682b      	ldr	r3, [r5, #0]
 8005a2a:	4628      	mov	r0, r5
 8005a2c:	691b      	ldr	r3, [r3, #16]
 8005a2e:	4798      	blx	r3
    newTransition->invalidate();
 8005a30:	682b      	ldr	r3, [r5, #0]
 8005a32:	4628      	mov	r0, r5
 8005a34:	695b      	ldr	r3, [r3, #20]
}
 8005a36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a3a:	4718      	bx	r3
    model->bind(newPresenter);
 8005a3c:	4623      	mov	r3, r4
 8005a3e:	e7e2      	b.n	8005a06 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005a40:	0802ca04 	.word	0x0802ca04
 8005a44:	0802dafb 	.word	0x0802dafb
 8005a48:	0802cba0 	.word	0x0802cba0
 8005a4c:	0802cbe7 	.word	0x0802cbe7
 8005a50:	0802cc8a 	.word	0x0802cc8a
 8005a54:	20012dec 	.word	0x20012dec
 8005a58:	20012de8 	.word	0x20012de8

08005a5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005a5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a66:	68a0      	ldr	r0, [r4, #8]
 8005a68:	6803      	ldr	r3, [r0, #0]
 8005a6a:	6a1b      	ldr	r3, [r3, #32]
 8005a6c:	4798      	blx	r3
 8005a6e:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005a72:	4298      	cmp	r0, r3
 8005a74:	d805      	bhi.n	8005a82 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8005a76:	4b42      	ldr	r3, [pc, #264]	; (8005b80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8005a78:	4a42      	ldr	r2, [pc, #264]	; (8005b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005a7a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a7c:	4842      	ldr	r0, [pc, #264]	; (8005b88 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005a7e:	f025 f905 	bl	802ac8c <__assert_func>
 8005a82:	6860      	ldr	r0, [r4, #4]
 8005a84:	6803      	ldr	r3, [r0, #0]
 8005a86:	6a1b      	ldr	r3, [r3, #32]
 8005a88:	4798      	blx	r3
 8005a8a:	280f      	cmp	r0, #15
 8005a8c:	d803      	bhi.n	8005a96 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005a8e:	4b3f      	ldr	r3, [pc, #252]	; (8005b8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005a90:	4a3c      	ldr	r2, [pc, #240]	; (8005b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005a92:	21a4      	movs	r1, #164	; 0xa4
 8005a94:	e7f2      	b.n	8005a7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a96:	68e0      	ldr	r0, [r4, #12]
 8005a98:	6803      	ldr	r3, [r0, #0]
 8005a9a:	6a1b      	ldr	r3, [r3, #32]
 8005a9c:	4798      	blx	r3
 8005a9e:	2837      	cmp	r0, #55	; 0x37
 8005aa0:	d803      	bhi.n	8005aaa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005aa2:	4b3b      	ldr	r3, [pc, #236]	; (8005b90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005aa4:	4a37      	ldr	r2, [pc, #220]	; (8005b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005aa6:	21a5      	movs	r1, #165	; 0xa5
 8005aa8:	e7e8      	b.n	8005a7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005aaa:	f010 f8e9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005aae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b94 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005ab2:	3004      	adds	r0, #4
 8005ab4:	f010 f94a 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005ab8:	f8d9 0000 	ldr.w	r0, [r9]
 8005abc:	b110      	cbz	r0, 8005ac4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005abe:	6803      	ldr	r3, [r0, #0]
 8005ac0:	68db      	ldr	r3, [r3, #12]
 8005ac2:	4798      	blx	r3
    if (*currentTrans)
 8005ac4:	f8d9 0000 	ldr.w	r0, [r9]
 8005ac8:	b110      	cbz	r0, 8005ad0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005aca:	6803      	ldr	r3, [r0, #0]
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	4798      	blx	r3
    if (*currentScreen)
 8005ad0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005b98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005ad4:	f8d8 0000 	ldr.w	r0, [r8]
 8005ad8:	b110      	cbz	r0, 8005ae0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005ada:	6803      	ldr	r3, [r0, #0]
 8005adc:	695b      	ldr	r3, [r3, #20]
 8005ade:	4798      	blx	r3
    if (*currentPresenter)
 8005ae0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ae4:	b110      	cbz	r0, 8005aec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005ae6:	6803      	ldr	r3, [r0, #0]
 8005ae8:	685b      	ldr	r3, [r3, #4]
 8005aea:	4798      	blx	r3
    if (*currentScreen)
 8005aec:	f8d8 0000 	ldr.w	r0, [r8]
 8005af0:	b110      	cbz	r0, 8005af8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005af2:	6803      	ldr	r3, [r0, #0]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	4798      	blx	r3
    if (*currentPresenter)
 8005af8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005afc:	b110      	cbz	r0, 8005b04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005afe:	6803      	ldr	r3, [r0, #0]
 8005b00:	689b      	ldr	r3, [r3, #8]
 8005b02:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005b04:	68e0      	ldr	r0, [r4, #12]
 8005b06:	2100      	movs	r1, #0
 8005b08:	f7ff fa76 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005b0c:	2114      	movs	r1, #20
 8005b0e:	4605      	mov	r5, r0
 8005b10:	f7ff fa76 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005b14:	68a0      	ldr	r0, [r4, #8]
 8005b16:	6803      	ldr	r3, [r0, #0]
 8005b18:	2100      	movs	r1, #0
 8005b1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b1c:	4798      	blx	r3
 8005b1e:	4606      	mov	r6, r0
 8005b20:	f003 feb8 	bl	8009894 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005b24:	6860      	ldr	r0, [r4, #4]
 8005b26:	6803      	ldr	r3, [r0, #0]
 8005b28:	2100      	movs	r1, #0
 8005b2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b2c:	4798      	blx	r3
 8005b2e:	4631      	mov	r1, r6
 8005b30:	4604      	mov	r4, r0
 8005b32:	f003 fe89 	bl	8009848 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005b36:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005b3a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005b3e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005b42:	b1dc      	cbz	r4, 8005b7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005b44:	1d23      	adds	r3, r4, #4
 8005b46:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005b4a:	6833      	ldr	r3, [r6, #0]
 8005b4c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005b50:	4630      	mov	r0, r6
 8005b52:	68db      	ldr	r3, [r3, #12]
 8005b54:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005b56:	4798      	blx	r3
    newPresenter->activate();
 8005b58:	6823      	ldr	r3, [r4, #0]
 8005b5a:	4620      	mov	r0, r4
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b60:	4629      	mov	r1, r5
 8005b62:	4630      	mov	r0, r6
 8005b64:	f011 feb8 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b68:	682b      	ldr	r3, [r5, #0]
 8005b6a:	4628      	mov	r0, r5
 8005b6c:	691b      	ldr	r3, [r3, #16]
 8005b6e:	4798      	blx	r3
    newTransition->invalidate();
 8005b70:	682b      	ldr	r3, [r5, #0]
 8005b72:	4628      	mov	r0, r5
 8005b74:	695b      	ldr	r3, [r3, #20]
}
 8005b76:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b7a:	4718      	bx	r3
    model->bind(newPresenter);
 8005b7c:	4623      	mov	r3, r4
 8005b7e:	e7e2      	b.n	8005b46 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005b80:	0802ca04 	.word	0x0802ca04
 8005b84:	0802dc3d 	.word	0x0802dc3d
 8005b88:	0802cba0 	.word	0x0802cba0
 8005b8c:	0802cbe7 	.word	0x0802cbe7
 8005b90:	0802cc8a 	.word	0x0802cc8a
 8005b94:	20012dec 	.word	0x20012dec
 8005b98:	20012de8 	.word	0x20012de8

08005b9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ba0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005ba4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005ba6:	68a0      	ldr	r0, [r4, #8]
 8005ba8:	6803      	ldr	r3, [r0, #0]
 8005baa:	6a1b      	ldr	r3, [r3, #32]
 8005bac:	4798      	blx	r3
 8005bae:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005bb2:	d205      	bcs.n	8005bc0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005bb4:	4b42      	ldr	r3, [pc, #264]	; (8005cc0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005bb6:	4a43      	ldr	r2, [pc, #268]	; (8005cc4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005bb8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005bba:	4843      	ldr	r0, [pc, #268]	; (8005cc8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005bbc:	f025 f866 	bl	802ac8c <__assert_func>
 8005bc0:	6860      	ldr	r0, [r4, #4]
 8005bc2:	6803      	ldr	r3, [r0, #0]
 8005bc4:	6a1b      	ldr	r3, [r3, #32]
 8005bc6:	4798      	blx	r3
 8005bc8:	280f      	cmp	r0, #15
 8005bca:	d803      	bhi.n	8005bd4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005bcc:	4b3f      	ldr	r3, [pc, #252]	; (8005ccc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005bce:	4a3d      	ldr	r2, [pc, #244]	; (8005cc4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005bd0:	21a4      	movs	r1, #164	; 0xa4
 8005bd2:	e7f2      	b.n	8005bba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005bd4:	68e0      	ldr	r0, [r4, #12]
 8005bd6:	6803      	ldr	r3, [r0, #0]
 8005bd8:	6a1b      	ldr	r3, [r3, #32]
 8005bda:	4798      	blx	r3
 8005bdc:	2837      	cmp	r0, #55	; 0x37
 8005bde:	d803      	bhi.n	8005be8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005be0:	4b3b      	ldr	r3, [pc, #236]	; (8005cd0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005be2:	4a38      	ldr	r2, [pc, #224]	; (8005cc4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005be4:	21a5      	movs	r1, #165	; 0xa5
 8005be6:	e7e8      	b.n	8005bba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005be8:	f010 f84a 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005bec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005cd4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005bf0:	3004      	adds	r0, #4
 8005bf2:	f010 f8ab 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005bf6:	f8d9 0000 	ldr.w	r0, [r9]
 8005bfa:	b110      	cbz	r0, 8005c02 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005bfc:	6803      	ldr	r3, [r0, #0]
 8005bfe:	68db      	ldr	r3, [r3, #12]
 8005c00:	4798      	blx	r3
    if (*currentTrans)
 8005c02:	f8d9 0000 	ldr.w	r0, [r9]
 8005c06:	b110      	cbz	r0, 8005c0e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005c08:	6803      	ldr	r3, [r0, #0]
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	4798      	blx	r3
    if (*currentScreen)
 8005c0e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005cd8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005c12:	f8d8 0000 	ldr.w	r0, [r8]
 8005c16:	b110      	cbz	r0, 8005c1e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005c18:	6803      	ldr	r3, [r0, #0]
 8005c1a:	695b      	ldr	r3, [r3, #20]
 8005c1c:	4798      	blx	r3
    if (*currentPresenter)
 8005c1e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c22:	b110      	cbz	r0, 8005c2a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005c24:	6803      	ldr	r3, [r0, #0]
 8005c26:	685b      	ldr	r3, [r3, #4]
 8005c28:	4798      	blx	r3
    if (*currentScreen)
 8005c2a:	f8d8 0000 	ldr.w	r0, [r8]
 8005c2e:	b110      	cbz	r0, 8005c36 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005c30:	6803      	ldr	r3, [r0, #0]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	4798      	blx	r3
    if (*currentPresenter)
 8005c36:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c3a:	b110      	cbz	r0, 8005c42 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005c3c:	6803      	ldr	r3, [r0, #0]
 8005c3e:	689b      	ldr	r3, [r3, #8]
 8005c40:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c42:	68e0      	ldr	r0, [r4, #12]
 8005c44:	2100      	movs	r1, #0
 8005c46:	f7ff f9d7 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c4a:	2114      	movs	r1, #20
 8005c4c:	4605      	mov	r5, r0
 8005c4e:	f7ff f9d7 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c52:	68a0      	ldr	r0, [r4, #8]
 8005c54:	6803      	ldr	r3, [r0, #0]
 8005c56:	2100      	movs	r1, #0
 8005c58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c5a:	4798      	blx	r3
 8005c5c:	4606      	mov	r6, r0
 8005c5e:	f003 fdbf 	bl	80097e0 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c62:	6860      	ldr	r0, [r4, #4]
 8005c64:	6803      	ldr	r3, [r0, #0]
 8005c66:	2100      	movs	r1, #0
 8005c68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c6a:	4798      	blx	r3
 8005c6c:	4631      	mov	r1, r6
 8005c6e:	4604      	mov	r4, r0
 8005c70:	f003 fd90 	bl	8009794 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005c74:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c78:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c7c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c80:	b1dc      	cbz	r4, 8005cba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005c82:	1d23      	adds	r3, r4, #4
 8005c84:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c88:	6833      	ldr	r3, [r6, #0]
 8005c8a:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c8e:	4630      	mov	r0, r6
 8005c90:	68db      	ldr	r3, [r3, #12]
 8005c92:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c94:	4798      	blx	r3
    newPresenter->activate();
 8005c96:	6823      	ldr	r3, [r4, #0]
 8005c98:	4620      	mov	r0, r4
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c9e:	4629      	mov	r1, r5
 8005ca0:	4630      	mov	r0, r6
 8005ca2:	f011 fe19 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ca6:	682b      	ldr	r3, [r5, #0]
 8005ca8:	4628      	mov	r0, r5
 8005caa:	691b      	ldr	r3, [r3, #16]
 8005cac:	4798      	blx	r3
    newTransition->invalidate();
 8005cae:	682b      	ldr	r3, [r5, #0]
 8005cb0:	4628      	mov	r0, r5
 8005cb2:	695b      	ldr	r3, [r3, #20]
}
 8005cb4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005cb8:	4718      	bx	r3
    model->bind(newPresenter);
 8005cba:	4623      	mov	r3, r4
 8005cbc:	e7e2      	b.n	8005c84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005cbe:	bf00      	nop
 8005cc0:	0802ca04 	.word	0x0802ca04
 8005cc4:	0802dd7f 	.word	0x0802dd7f
 8005cc8:	0802cba0 	.word	0x0802cba0
 8005ccc:	0802cbe7 	.word	0x0802cbe7
 8005cd0:	0802cc8a 	.word	0x0802cc8a
 8005cd4:	20012dec 	.word	0x20012dec
 8005cd8:	20012de8 	.word	0x20012de8

08005cdc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005cdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ce0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005ce4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005ce6:	68a0      	ldr	r0, [r4, #8]
 8005ce8:	6803      	ldr	r3, [r0, #0]
 8005cea:	6a1b      	ldr	r3, [r3, #32]
 8005cec:	4798      	blx	r3
 8005cee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005cf2:	d205      	bcs.n	8005d00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005cf4:	4b42      	ldr	r3, [pc, #264]	; (8005e00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005cf6:	4a43      	ldr	r2, [pc, #268]	; (8005e04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005cf8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005cfa:	4843      	ldr	r0, [pc, #268]	; (8005e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005cfc:	f024 ffc6 	bl	802ac8c <__assert_func>
 8005d00:	6860      	ldr	r0, [r4, #4]
 8005d02:	6803      	ldr	r3, [r0, #0]
 8005d04:	6a1b      	ldr	r3, [r3, #32]
 8005d06:	4798      	blx	r3
 8005d08:	280f      	cmp	r0, #15
 8005d0a:	d803      	bhi.n	8005d14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005d0c:	4b3f      	ldr	r3, [pc, #252]	; (8005e0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005d0e:	4a3d      	ldr	r2, [pc, #244]	; (8005e04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005d10:	21a4      	movs	r1, #164	; 0xa4
 8005d12:	e7f2      	b.n	8005cfa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d14:	68e0      	ldr	r0, [r4, #12]
 8005d16:	6803      	ldr	r3, [r0, #0]
 8005d18:	6a1b      	ldr	r3, [r3, #32]
 8005d1a:	4798      	blx	r3
 8005d1c:	2837      	cmp	r0, #55	; 0x37
 8005d1e:	d803      	bhi.n	8005d28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005d20:	4b3b      	ldr	r3, [pc, #236]	; (8005e10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005d22:	4a38      	ldr	r2, [pc, #224]	; (8005e04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005d24:	21a5      	movs	r1, #165	; 0xa5
 8005d26:	e7e8      	b.n	8005cfa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005d28:	f00f ffaa 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005d2c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005e14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005d30:	3004      	adds	r0, #4
 8005d32:	f010 f80b 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d36:	f8d9 0000 	ldr.w	r0, [r9]
 8005d3a:	b110      	cbz	r0, 8005d42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005d3c:	6803      	ldr	r3, [r0, #0]
 8005d3e:	68db      	ldr	r3, [r3, #12]
 8005d40:	4798      	blx	r3
    if (*currentTrans)
 8005d42:	f8d9 0000 	ldr.w	r0, [r9]
 8005d46:	b110      	cbz	r0, 8005d4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005d48:	6803      	ldr	r3, [r0, #0]
 8005d4a:	681b      	ldr	r3, [r3, #0]
 8005d4c:	4798      	blx	r3
    if (*currentScreen)
 8005d4e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005e18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005d52:	f8d8 0000 	ldr.w	r0, [r8]
 8005d56:	b110      	cbz	r0, 8005d5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005d58:	6803      	ldr	r3, [r0, #0]
 8005d5a:	695b      	ldr	r3, [r3, #20]
 8005d5c:	4798      	blx	r3
    if (*currentPresenter)
 8005d5e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d62:	b110      	cbz	r0, 8005d6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005d64:	6803      	ldr	r3, [r0, #0]
 8005d66:	685b      	ldr	r3, [r3, #4]
 8005d68:	4798      	blx	r3
    if (*currentScreen)
 8005d6a:	f8d8 0000 	ldr.w	r0, [r8]
 8005d6e:	b110      	cbz	r0, 8005d76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005d70:	6803      	ldr	r3, [r0, #0]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	4798      	blx	r3
    if (*currentPresenter)
 8005d76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d7a:	b110      	cbz	r0, 8005d82 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005d7c:	6803      	ldr	r3, [r0, #0]
 8005d7e:	689b      	ldr	r3, [r3, #8]
 8005d80:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d82:	68e0      	ldr	r0, [r4, #12]
 8005d84:	2100      	movs	r1, #0
 8005d86:	f7ff f937 	bl	8004ff8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d8a:	2114      	movs	r1, #20
 8005d8c:	4605      	mov	r5, r0
 8005d8e:	f7ff f937 	bl	8005000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005d92:	68a0      	ldr	r0, [r4, #8]
 8005d94:	6803      	ldr	r3, [r0, #0]
 8005d96:	2100      	movs	r1, #0
 8005d98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d9a:	4798      	blx	r3
 8005d9c:	4606      	mov	r6, r0
 8005d9e:	f003 fbdb 	bl	8009558 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005da2:	6860      	ldr	r0, [r4, #4]
 8005da4:	6803      	ldr	r3, [r0, #0]
 8005da6:	2100      	movs	r1, #0
 8005da8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005daa:	4798      	blx	r3
 8005dac:	4631      	mov	r1, r6
 8005dae:	4604      	mov	r4, r0
 8005db0:	f003 fbac 	bl	800950c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005db4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005db8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005dbc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005dc0:	b1dc      	cbz	r4, 8005dfa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005dc2:	1d23      	adds	r3, r4, #4
 8005dc4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005dc8:	6833      	ldr	r3, [r6, #0]
 8005dca:	f8c4 a008 	str.w	sl, [r4, #8]
 8005dce:	4630      	mov	r0, r6
 8005dd0:	68db      	ldr	r3, [r3, #12]
 8005dd2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005dd4:	4798      	blx	r3
    newPresenter->activate();
 8005dd6:	6823      	ldr	r3, [r4, #0]
 8005dd8:	4620      	mov	r0, r4
 8005dda:	681b      	ldr	r3, [r3, #0]
 8005ddc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005dde:	4629      	mov	r1, r5
 8005de0:	4630      	mov	r0, r6
 8005de2:	f011 fd79 	bl	80178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005de6:	682b      	ldr	r3, [r5, #0]
 8005de8:	4628      	mov	r0, r5
 8005dea:	691b      	ldr	r3, [r3, #16]
 8005dec:	4798      	blx	r3
    newTransition->invalidate();
 8005dee:	682b      	ldr	r3, [r5, #0]
 8005df0:	4628      	mov	r0, r5
 8005df2:	695b      	ldr	r3, [r3, #20]
}
 8005df4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005df8:	4718      	bx	r3
    model->bind(newPresenter);
 8005dfa:	4623      	mov	r3, r4
 8005dfc:	e7e2      	b.n	8005dc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005dfe:	bf00      	nop
 8005e00:	0802ca04 	.word	0x0802ca04
 8005e04:	0802deab 	.word	0x0802deab
 8005e08:	0802cba0 	.word	0x0802cba0
 8005e0c:	0802cbe7 	.word	0x0802cbe7
 8005e10:	0802cc8a 	.word	0x0802cc8a
 8005e14:	20012dec 	.word	0x20012dec
 8005e18:	20012de8 	.word	0x20012de8

08005e1c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005e1c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005e1e:	4770      	bx	lr

08005e20 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005e20:	4770      	bx	lr

08005e22 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005e22:	4770      	bx	lr

08005e24 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005e24:	b510      	push	{r4, lr}
}
 8005e26:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005e2a:	4604      	mov	r4, r0
}
 8005e2c:	f024 f847 	bl	8029ebe <_ZdlPvj>
 8005e30:	4620      	mov	r0, r4
 8005e32:	bd10      	pop	{r4, pc}

08005e34 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8005e38:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005e3c:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005e3e:	2600      	movs	r6, #0
 8005e40:	ed2d 8b02 	vpush	{d8}
 8005e44:	8483      	strh	r3, [r0, #36]	; 0x24
 8005e46:	4bb2      	ldr	r3, [pc, #712]	; (8006110 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8005e48:	6286      	str	r6, [r0, #40]	; 0x28
 8005e4a:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005e4e:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005e52:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8005e56:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8005e5a:	f848 3b2c 	str.w	r3, [r8], #44
 8005e5e:	b08b      	sub	sp, #44	; 0x2c
 8005e60:	4604      	mov	r4, r0
 8005e62:	4640      	mov	r0, r8
 8005e64:	f7fd f972 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8005e68:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005e6c:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005e70:	4618      	mov	r0, r3
 8005e72:	9303      	str	r3, [sp, #12]
 8005e74:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8005e78:	f7fd f968 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8005e7c:	4658      	mov	r0, fp
 8005e7e:	f7fd f965 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8005e82:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8005e86:	4da3      	ldr	r5, [pc, #652]	; (8006114 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8005e88:	4650      	mov	r0, sl
 8005e8a:	f7fd f95f 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005e8e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005e92:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8005e96:	4648      	mov	r0, r9
 8005e98:	f7fd f958 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8005e9c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005ea0:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005ea4:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005ea6:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8005eaa:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8005eae:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005eb2:	f7fd f94b 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005eb6:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8005eba:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8005ebe:	4638      	mov	r0, r7
 8005ec0:	f00c fe98 	bl	8012bf4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8005ec4:	4a94      	ldr	r2, [pc, #592]	; (8006118 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8005ec6:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8005ec8:	4640      	mov	r0, r8
 8005eca:	226d      	movs	r2, #109	; 0x6d
 8005ecc:	21d9      	movs	r1, #217	; 0xd9
 8005ece:	ad04      	add	r5, sp, #16
 8005ed0:	f7fd f909 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005ed4:	f04f 33ff 	mov.w	r3, #4294967295
 8005ed8:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8005eda:	4641      	mov	r1, r8
 8005edc:	4628      	mov	r0, r5
        linespace = space;
 8005ede:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005ee2:	f00c fb4f 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ee6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005eea:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8005eee:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005ef2:	4b8a      	ldr	r3, [pc, #552]	; (800611c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005ef4:	9308      	str	r3, [sp, #32]
 8005ef6:	223f      	movs	r2, #63	; 0x3f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8005ef8:	a908      	add	r1, sp, #32
 8005efa:	4640      	mov	r0, r8
 8005efc:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005f00:	f00c fdda 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005f04:	4641      	mov	r1, r8
 8005f06:	4620      	mov	r0, r4
 8005f08:	f00a fc22 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8005f0c:	9b03      	ldr	r3, [sp, #12]
 8005f0e:	4631      	mov	r1, r6
 8005f10:	4618      	mov	r0, r3
 8005f12:	226d      	movs	r2, #109	; 0x6d
 8005f14:	f7fd f8e7 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8005f18:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8005f1a:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8005f1e:	f04f 32ff 	mov.w	r2, #4294967295
 8005f22:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005f26:	4619      	mov	r1, r3
 8005f28:	4628      	mov	r0, r5
 8005f2a:	f00c fb2b 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f32:	4b7a      	ldr	r3, [pc, #488]	; (800611c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005f34:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8005f36:	9b03      	ldr	r3, [sp, #12]
 8005f38:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8005f3c:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005f40:	2240      	movs	r2, #64	; 0x40
 8005f42:	a908      	add	r1, sp, #32
 8005f44:	4618      	mov	r0, r3
 8005f46:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005f4a:	f00c fdb5 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8005f4e:	9b03      	ldr	r3, [sp, #12]
 8005f50:	4620      	mov	r0, r4
 8005f52:	4619      	mov	r1, r3
 8005f54:	f00a fbfc 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8005f58:	4632      	mov	r2, r6
 8005f5a:	4658      	mov	r0, fp
 8005f5c:	2171      	movs	r1, #113	; 0x71
 8005f5e:	f7fd f8c2 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005f62:	f04f 32ff 	mov.w	r2, #4294967295
 8005f66:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8005f6a:	4659      	mov	r1, fp
 8005f6c:	4628      	mov	r0, r5
        linespace = space;
 8005f6e:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005f72:	f00c fb07 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f7a:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8005f7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f82:	4b66      	ldr	r3, [pc, #408]	; (800611c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005f84:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005f86:	a908      	add	r1, sp, #32
 8005f88:	2341      	movs	r3, #65	; 0x41
 8005f8a:	4658      	mov	r0, fp
 8005f8c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005f90:	f00c fd92 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005f94:	4659      	mov	r1, fp
 8005f96:	4620      	mov	r0, r4
 8005f98:	f00a fbda 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8005f9c:	4650      	mov	r0, sl
 8005f9e:	227c      	movs	r2, #124	; 0x7c
 8005fa0:	214c      	movs	r1, #76	; 0x4c
 8005fa2:	f7fd f8a0 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8005fa6:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8005faa:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8005fae:	f04f 32ff 	mov.w	r2, #4294967295
 8005fb2:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005fb6:	4651      	mov	r1, sl
 8005fb8:	4628      	mov	r0, r5
 8005fba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005fbe:	4798      	blx	r3
 8005fc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fc4:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8005fc8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fcc:	4b53      	ldr	r3, [pc, #332]	; (800611c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005fce:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8005fd0:	a908      	add	r1, sp, #32
 8005fd2:	233e      	movs	r3, #62	; 0x3e
 8005fd4:	4650      	mov	r0, sl
 8005fd6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005fda:	f00c fd6d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8005fde:	4651      	mov	r1, sl
 8005fe0:	4620      	mov	r0, r4
 8005fe2:	f00a fbb5 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8005fe6:	4648      	mov	r0, r9
 8005fe8:	228b      	movs	r2, #139	; 0x8b
 8005fea:	2156      	movs	r1, #86	; 0x56
 8005fec:	f7fd f87b 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8005ff0:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8005ff4:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8005ff8:	f04f 32ff 	mov.w	r2, #4294967295
 8005ffc:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8006000:	4649      	mov	r1, r9
 8006002:	4628      	mov	r0, r5
 8006004:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006008:	4798      	blx	r3
 800600a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800600e:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8006012:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006016:	4b41      	ldr	r3, [pc, #260]	; (800611c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8006018:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 800601a:	a908      	add	r1, sp, #32
 800601c:	233d      	movs	r3, #61	; 0x3d
 800601e:	4648      	mov	r0, r9
 8006020:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006024:	f00c fd48 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8006028:	4649      	mov	r1, r9
 800602a:	4620      	mov	r0, r4
 800602c:	f00a fb90 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8006030:	ee18 0a10 	vmov	r0, s16
 8006034:	229a      	movs	r2, #154	; 0x9a
 8006036:	2156      	movs	r1, #86	; 0x56
 8006038:	f7fd f855 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800603c:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8006040:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8006044:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8006048:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 800604c:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8006050:	4628      	mov	r0, r5
 8006052:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006056:	4798      	blx	r3
 8006058:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800605c:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8006060:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006064:	4b2d      	ldr	r3, [pc, #180]	; (800611c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8006066:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8006068:	ee18 0a10 	vmov	r0, s16
 800606c:	233c      	movs	r3, #60	; 0x3c
 800606e:	a908      	add	r1, sp, #32
 8006070:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006074:	f00c fd20 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8006078:	ee18 1a10 	vmov	r1, s16
 800607c:	4620      	mov	r0, r4
 800607e:	f00a fb67 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006082:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8006084:	a908      	add	r1, sp, #32
 8006086:	4638      	mov	r0, r7
 8006088:	f8ad 3020 	strh.w	r3, [sp, #32]
 800608c:	f00a faf2 	bl	8010674 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8006090:	2212      	movs	r2, #18
 8006092:	4638      	mov	r0, r7
 8006094:	211c      	movs	r1, #28
 8006096:	f7fd f826 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800609a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800609e:	4638      	mov	r0, r7
 80060a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80060a2:	21b8      	movs	r1, #184	; 0xb8
 80060a4:	4798      	blx	r3
        setHeight(height);
 80060a6:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80060aa:	4638      	mov	r0, r7
 80060ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80060ae:	216a      	movs	r1, #106	; 0x6a
 80060b0:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 80060b2:	225c      	movs	r2, #92	; 0x5c
 80060b4:	4611      	mov	r1, r2
 80060b6:	4638      	mov	r0, r7
 80060b8:	f00c fe47 	bl	8012d4a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 80060bc:	4638      	mov	r0, r7
 80060be:	225a      	movs	r2, #90	; 0x5a
 80060c0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80060c4:	f00c fec6 	bl	8012e54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80060c8:	4633      	mov	r3, r6
 80060ca:	225a      	movs	r2, #90	; 0x5a
 80060cc:	4638      	mov	r0, r7
 80060ce:	9600      	str	r6, [sp, #0]
 80060d0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80060d4:	f00a f97b 	bl	80103ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80060d8:	4631      	mov	r1, r6
 80060da:	4638      	mov	r0, r7
 80060dc:	f00c fe64 	bl	8012da8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80060e0:	2335      	movs	r3, #53	; 0x35
 80060e2:	2208      	movs	r2, #8
 80060e4:	4638      	mov	r0, r7
 80060e6:	2105      	movs	r1, #5
 80060e8:	f00c fe1a 	bl	8012d20 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80060ec:	4638      	mov	r0, r7
 80060ee:	2101      	movs	r1, #1
 80060f0:	f00c fdb8 	bl	8012c64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80060f4:	4638      	mov	r0, r7
 80060f6:	2101      	movs	r1, #1
 80060f8:	f00c fdb7 	bl	8012c6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80060fc:	4620      	mov	r0, r4
 80060fe:	4639      	mov	r1, r7
 8006100:	f00a fb26 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006104:	4620      	mov	r0, r4
 8006106:	b00b      	add	sp, #44	; 0x2c
 8006108:	ecbd 8b02 	vpop	{d8}
 800610c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006110:	0802e114 	.word	0x0802e114
 8006114:	0802c890 	.word	0x0802c890
 8006118:	00a900f0 	.word	0x00a900f0
 800611c:	0802c880 	.word	0x0802c880

08006120 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006120:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8006122:	4770      	bx	lr

08006124 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8006124:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8006126:	4770      	bx	lr

08006128 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006128:	4770      	bx	lr

0800612a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800612a:	888b      	ldrh	r3, [r1, #4]
 800612c:	69c0      	ldr	r0, [r0, #28]
 800612e:	680a      	ldr	r2, [r1, #0]
 8006130:	0adb      	lsrs	r3, r3, #11
 8006132:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8006136:	4410      	add	r0, r2
 8006138:	4770      	bx	lr

0800613a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800613a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800613c:	b1c2      	cbz	r2, 8006170 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800613e:	7b13      	ldrb	r3, [r2, #12]
 8006140:	b1b3      	cbz	r3, 8006170 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8006142:	7b54      	ldrb	r4, [r2, #13]
 8006144:	7ad2      	ldrb	r2, [r2, #11]
 8006146:	0224      	lsls	r4, r4, #8
 8006148:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800614c:	4314      	orrs	r4, r2
 800614e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006150:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006152:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8006156:	8813      	ldrh	r3, [r2, #0]
 8006158:	428b      	cmp	r3, r1
 800615a:	d102      	bne.n	8006162 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800615c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006160:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8006162:	d805      	bhi.n	8006170 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006164:	3801      	subs	r0, #1
 8006166:	b280      	uxth	r0, r0
 8006168:	3204      	adds	r2, #4
 800616a:	2800      	cmp	r0, #0
 800616c:	d1f3      	bne.n	8006156 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800616e:	e7f7      	b.n	8006160 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006170:	2000      	movs	r0, #0
 8006172:	e7f5      	b.n	8006160 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006174 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006174:	b510      	push	{r4, lr}
 8006176:	212c      	movs	r1, #44	; 0x2c
 8006178:	4604      	mov	r4, r0
 800617a:	f023 fea0 	bl	8029ebe <_ZdlPvj>
 800617e:	4620      	mov	r0, r4
 8006180:	bd10      	pop	{r4, pc}
	...

08006184 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006184:	b530      	push	{r4, r5, lr}
 8006186:	b08b      	sub	sp, #44	; 0x2c
 8006188:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800618a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800618e:	9508      	str	r5, [sp, #32]
 8006190:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8006194:	9507      	str	r5, [sp, #28]
 8006196:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800619a:	9506      	str	r5, [sp, #24]
 800619c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80061a0:	9505      	str	r5, [sp, #20]
 80061a2:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80061a6:	9504      	str	r5, [sp, #16]
 80061a8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80061ac:	9503      	str	r5, [sp, #12]
 80061ae:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80061b2:	9502      	str	r5, [sp, #8]
 80061b4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80061b8:	9501      	str	r5, [sp, #4]
 80061ba:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80061be:	9500      	str	r5, [sp, #0]
 80061c0:	f010 fef4 	bl	8016fac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80061c4:	4b06      	ldr	r3, [pc, #24]	; (80061e0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80061c6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80061c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80061ca:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80061cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80061ce:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80061d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80061d2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80061d4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80061d6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80061d8:	4620      	mov	r0, r4
 80061da:	b00b      	add	sp, #44	; 0x2c
 80061dc:	bd30      	pop	{r4, r5, pc}
 80061de:	bf00      	nop
 80061e0:	0802e1a8 	.word	0x0802e1a8

080061e4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80061e4:	4770      	bx	lr

080061e6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80061e6:	4770      	bx	lr

080061e8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80061e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80061ea:	68c2      	ldr	r2, [r0, #12]
 80061ec:	6844      	ldr	r4, [r0, #4]
 80061ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80061f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80061f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80061f6:	07d2      	lsls	r2, r2, #31
 80061f8:	bf48      	it	mi
 80061fa:	5962      	ldrmi	r2, [r4, r5]
 80061fc:	689b      	ldr	r3, [r3, #8]
    }
 80061fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006200:	bf48      	it	mi
 8006202:	58d3      	ldrmi	r3, [r2, r3]
 8006204:	4718      	bx	r3

08006206 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006206:	6843      	ldr	r3, [r0, #4]
 8006208:	b12b      	cbz	r3, 8006216 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800620a:	6883      	ldr	r3, [r0, #8]
 800620c:	b92b      	cbnz	r3, 800621a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800620e:	68c0      	ldr	r0, [r0, #12]
 8006210:	f000 0001 	and.w	r0, r0, #1
 8006214:	4770      	bx	lr
 8006216:	4618      	mov	r0, r3
 8006218:	4770      	bx	lr
 800621a:	2001      	movs	r0, #1
    }
 800621c:	4770      	bx	lr

0800621e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800621e:	b510      	push	{r4, lr}
 8006220:	2110      	movs	r1, #16
 8006222:	4604      	mov	r4, r0
 8006224:	f023 fe4b 	bl	8029ebe <_ZdlPvj>
 8006228:	4620      	mov	r0, r4
 800622a:	bd10      	pop	{r4, pc}

0800622c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800622c:	b510      	push	{r4, lr}
 800622e:	4b03      	ldr	r3, [pc, #12]	; (800623c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006230:	6003      	str	r3, [r0, #0]
 8006232:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006234:	f00e f822 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006238:	4620      	mov	r0, r4
 800623a:	bd10      	pop	{r4, pc}
 800623c:	0802e220 	.word	0x0802e220

08006240 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006240:	b507      	push	{r0, r1, r2, lr}
 8006242:	4b07      	ldr	r3, [pc, #28]	; (8006260 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8006244:	6003      	str	r3, [r0, #0]
 8006246:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006248:	f00e f818 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800624c:	9801      	ldr	r0, [sp, #4]
 800624e:	f241 117c 	movw	r1, #4476	; 0x117c
 8006252:	f023 fe34 	bl	8029ebe <_ZdlPvj>
 8006256:	9801      	ldr	r0, [sp, #4]
 8006258:	b003      	add	sp, #12
 800625a:	f85d fb04 	ldr.w	pc, [sp], #4
 800625e:	bf00      	nop
 8006260:	0802e220 	.word	0x0802e220

08006264 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006264:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8006266:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800626a:	4299      	cmp	r1, r3
{
 800626c:	4604      	mov	r4, r0
 800626e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8006270:	d103      	bne.n	800627a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006272:	f00f fd05 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8006276:	f7fe fb1d 	bl	80048b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800627a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800627e:	429d      	cmp	r5, r3
 8006280:	d103      	bne.n	800628a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006282:	f00f fcfd 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8006286:	f7fe fba5 	bl	80049d4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800628a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800628e:	429d      	cmp	r5, r3
 8006290:	d103      	bne.n	800629a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8006292:	f00f fcf5 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8006296:	f7fe fbdd 	bl	8004a54 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800629a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 800629e:	42a5      	cmp	r5, r4
 80062a0:	d10a      	bne.n	80062b8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80062a2:	4806      	ldr	r0, [pc, #24]	; (80062bc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80062a4:	2200      	movs	r2, #0
 80062a6:	2120      	movs	r1, #32
 80062a8:	f004 f8ec 	bl	800a484 <HAL_GPIO_WritePin>
 80062ac:	f00f fce8 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80062b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80062b4:	f7fe bbde 	b.w	8004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80062b8:	bd38      	pop	{r3, r4, r5, pc}
 80062ba:	bf00      	nop
 80062bc:	40021000 	.word	0x40021000

080062c0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80062c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062c4:	ed2d 8b06 	vpush	{d8-d10}
 80062c8:	4604      	mov	r4, r0
 80062ca:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80062cc:	46a3      	mov	fp, r4
        : presenter(0)
 80062ce:	2500      	movs	r5, #0
 80062d0:	f011 f956 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 80062d4:	4b6a      	ldr	r3, [pc, #424]	; (8006480 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80062d6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80062d8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80062dc:	2226      	movs	r2, #38	; 0x26
 80062de:	4629      	mov	r1, r5
 80062e0:	4658      	mov	r0, fp
 80062e2:	f024 fed8 	bl	802b096 <memset>
 80062e6:	4658      	mov	r0, fp
 80062e8:	f7fc ff1e 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 80062ec:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80062f0:	26ff      	movs	r6, #255	; 0xff
 80062f2:	4b64      	ldr	r3, [pc, #400]	; (8006484 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80062f4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80062f6:	2226      	movs	r2, #38	; 0x26
 80062f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80062fc:	4629      	mov	r1, r5
 80062fe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006302:	4650      	mov	r0, sl
        : color(col)
 8006304:	66a5      	str	r5, [r4, #104]	; 0x68
 8006306:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800630a:	f024 fec4 	bl	802b096 <memset>
 800630e:	4650      	mov	r0, sl
 8006310:	f7fc ff0a 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8006314:	4b5c      	ldr	r3, [pc, #368]	; (8006488 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8006316:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006318:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800631c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006320:	a90c      	add	r1, sp, #48	; 0x30
 8006322:	4650      	mov	r0, sl
 8006324:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006328:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800632c:	f00c ff9f 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006330:	4648      	mov	r0, r9
 8006332:	f7fc ff0b 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8006336:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800633a:	4b54      	ldr	r3, [pc, #336]	; (800648c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 800633c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006340:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006344:	4638      	mov	r0, r7
 8006346:	f00b fe5b 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 800634a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800634e:	4618      	mov	r0, r3
 8006350:	9303      	str	r3, [sp, #12]
 8006352:	f7fc fce9 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006356:	4b4e      	ldr	r3, [pc, #312]	; (8006490 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8006358:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800635c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006360:	3324      	adds	r3, #36	; 0x24
 8006362:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006366:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800636a:	4640      	mov	r0, r8
 800636c:	f7fc feee 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8006370:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006374:	4618      	mov	r0, r3
 8006376:	ee08 3a10 	vmov	s16, r3
 800637a:	f7fc fee7 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 800637e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006382:	4618      	mov	r0, r3
 8006384:	ee08 3a90 	vmov	s17, r3
 8006388:	f7fc fee0 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 800638c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006390:	4618      	mov	r0, r3
 8006392:	ee09 3a10 	vmov	s18, r3
 8006396:	f00d f8ab 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800639a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800639e:	4618      	mov	r0, r3
 80063a0:	ee09 3a90 	vmov	s19, r3
 80063a4:	f00d f8a4 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063a8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80063ac:	4618      	mov	r0, r3
 80063ae:	ee0a 3a10 	vmov	s20, r3
 80063b2:	f00d f89d 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063b6:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80063ba:	4618      	mov	r0, r3
 80063bc:	ee0a 3a90 	vmov	s21, r3
 80063c0:	f00c ff2e 	bl	8013220 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80063c4:	4a33      	ldr	r2, [pc, #204]	; (8006494 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80063c6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80063ca:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80063ce:	4a32      	ldr	r2, [pc, #200]	; (8006498 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80063d0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80063d4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80063d8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80063dc:	f00d ff44 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80063e0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80063e4:	462a      	mov	r2, r5
 80063e6:	4658      	mov	r0, fp
 80063e8:	9300      	str	r3, [sp, #0]
 80063ea:	4629      	mov	r1, r5
 80063ec:	23f0      	movs	r3, #240	; 0xf0
 80063ee:	f7fc fe87 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063f2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80063f4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80063f8:	66a3      	str	r3, [r4, #104]	; 0x68
 80063fa:	4659      	mov	r1, fp
 80063fc:	4630      	mov	r0, r6
 80063fe:	f00a f9a7 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006402:	462a      	mov	r2, r5
 8006404:	4650      	mov	r0, sl
 8006406:	4629      	mov	r1, r5
 8006408:	f7fc fe6d 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800640c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800640e:	4650      	mov	r0, sl
 8006410:	a90c      	add	r1, sp, #48	; 0x30
 8006412:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006416:	f00c ff2a 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800641a:	4651      	mov	r1, sl
 800641c:	4630      	mov	r0, r6
 800641e:	f00a f997 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8006422:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006426:	2156      	movs	r1, #86	; 0x56
 8006428:	4648      	mov	r0, r9
 800642a:	f7fc fe5c 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800642e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006432:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006436:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800643a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800643e:	4650      	mov	r0, sl
 8006440:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006444:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006448:	4649      	mov	r1, r9
 800644a:	4798      	blx	r3
 800644c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006450:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006454:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006458:	4b10      	ldr	r3, [pc, #64]	; (800649c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800645a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 800645c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8006460:	b92b      	cbnz	r3, 800646e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8006462:	4b0f      	ldr	r3, [pc, #60]	; (80064a0 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8006464:	4a0f      	ldr	r2, [pc, #60]	; (80064a4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8006466:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006468:	480f      	ldr	r0, [pc, #60]	; (80064a8 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800646a:	f024 fc0f 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800646e:	4b0f      	ldr	r3, [pc, #60]	; (80064ac <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006470:	881b      	ldrh	r3, [r3, #0]
 8006472:	2b3a      	cmp	r3, #58	; 0x3a
 8006474:	d81e      	bhi.n	80064b4 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8006476:	4b0e      	ldr	r3, [pc, #56]	; (80064b0 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8006478:	4a0a      	ldr	r2, [pc, #40]	; (80064a4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800647a:	2161      	movs	r1, #97	; 0x61
 800647c:	e7f4      	b.n	8006468 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 800647e:	bf00      	nop
 8006480:	0802e220 	.word	0x0802e220
 8006484:	0802f1e0 	.word	0x0802f1e0
 8006488:	0802f3a8 	.word	0x0802f3a8
 800648c:	0802c890 	.word	0x0802c890
 8006490:	0802ef14 	.word	0x0802ef14
 8006494:	0802e208 	.word	0x0802e208
 8006498:	08006265 	.word	0x08006265
 800649c:	20012dfc 	.word	0x20012dfc
 80064a0:	0802c6d0 	.word	0x0802c6d0
 80064a4:	0802c7d2 	.word	0x0802c7d2
 80064a8:	0802c74d 	.word	0x0802c74d
 80064ac:	20012e00 	.word	0x20012e00
 80064b0:	0802c794 	.word	0x0802c794
        return texts->getText(typedTextId);
 80064b4:	4ba5      	ldr	r3, [pc, #660]	; (800674c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80064b6:	213a      	movs	r1, #58	; 0x3a
 80064b8:	6818      	ldr	r0, [r3, #0]
 80064ba:	f002 fdf7 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 80064be:	4aa4      	ldr	r2, [pc, #656]	; (8006750 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80064c0:	4603      	mov	r3, r0
 80064c2:	2104      	movs	r1, #4
 80064c4:	4650      	mov	r0, sl
 80064c6:	f012 fd4b 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80064ca:	4648      	mov	r0, r9
        wc1 = value;
 80064cc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80064d0:	f00c fad2 	bl	8012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80064d4:	4b9f      	ldr	r3, [pc, #636]	; (8006754 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80064d6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80064d8:	a90c      	add	r1, sp, #48	; 0x30
 80064da:	233b      	movs	r3, #59	; 0x3b
 80064dc:	4648      	mov	r0, r9
 80064de:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80064e2:	f00c fae9 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064e6:	4649      	mov	r1, r9
 80064e8:	4630      	mov	r0, r6
 80064ea:	f00a f931 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80064ee:	230a      	movs	r3, #10
 80064f0:	9300      	str	r3, [sp, #0]
 80064f2:	2232      	movs	r2, #50	; 0x32
 80064f4:	23f0      	movs	r3, #240	; 0xf0
 80064f6:	4629      	mov	r1, r5
 80064f8:	4638      	mov	r0, r7
 80064fa:	f7fc fe01 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064fe:	9b03      	ldr	r3, [sp, #12]
 8006500:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006504:	22a0      	movs	r2, #160	; 0xa0
 8006506:	4611      	mov	r1, r2
 8006508:	4638      	mov	r0, r7
 800650a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800650e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006512:	f00b fe8b 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006516:	22a0      	movs	r2, #160	; 0xa0
 8006518:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800651c:	4638      	mov	r0, r7
 800651e:	f00b fe90 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006522:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006526:	2b20      	cmp	r3, #32
 8006528:	d005      	beq.n	8006536 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800652a:	2320      	movs	r3, #32
 800652c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006530:	4638      	mov	r0, r7
 8006532:	f00b fd85 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006536:	4638      	mov	r0, r7
 8006538:	2101      	movs	r1, #1
 800653a:	f00b fe8d 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800653e:	4639      	mov	r1, r7
 8006540:	4630      	mov	r0, r6
 8006542:	ad04      	add	r5, sp, #16
        color = newColor;
 8006544:	f04f 37ff 	mov.w	r7, #4294967295
 8006548:	f00a f902 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800654c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006550:	2223      	movs	r2, #35	; 0x23
 8006552:	4640      	mov	r0, r8
 8006554:	2145      	movs	r1, #69	; 0x45
 8006556:	f7fc fdc6 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800655a:	4641      	mov	r1, r8
 800655c:	4628      	mov	r0, r5
        color = newColor;
 800655e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006562:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006566:	f00c f80d 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800656a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 800656e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8006572:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006576:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800657a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006754 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 800657e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006582:	2360      	movs	r3, #96	; 0x60
 8006584:	4649      	mov	r1, r9
 8006586:	4640      	mov	r0, r8
 8006588:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800658c:	f00c fa94 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006590:	4641      	mov	r1, r8
 8006592:	4630      	mov	r0, r6
 8006594:	f00a f8dc 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006598:	ee18 0a10 	vmov	r0, s16
 800659c:	220c      	movs	r2, #12
 800659e:	2136      	movs	r1, #54	; 0x36
 80065a0:	f7fc fda1 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80065a4:	ee18 1a10 	vmov	r1, s16
 80065a8:	4628      	mov	r0, r5
        color = newColor;
 80065aa:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80065ae:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80065b2:	f00b ffe7 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80065ba:	ee18 3a10 	vmov	r3, s16
 80065be:	333c      	adds	r3, #60	; 0x3c
 80065c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065c4:	2361      	movs	r3, #97	; 0x61
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80065c6:	ee18 0a10 	vmov	r0, s16
 80065ca:	4649      	mov	r1, r9
 80065cc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80065d0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80065d4:	f00c fa70 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065d8:	ee18 1a10 	vmov	r1, s16
 80065dc:	4630      	mov	r0, r6
 80065de:	f00a f8b7 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80065e2:	ee18 0a90 	vmov	r0, s17
 80065e6:	223c      	movs	r2, #60	; 0x3c
 80065e8:	2158      	movs	r1, #88	; 0x58
 80065ea:	f7fc fd7c 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80065ee:	ee18 1a90 	vmov	r1, s17
 80065f2:	4628      	mov	r0, r5
        color = newColor;
 80065f4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80065f8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80065fc:	f00b ffc2 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006600:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006604:	ee18 3a90 	vmov	r3, s17
 8006608:	333c      	adds	r3, #60	; 0x3c
 800660a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800660e:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006610:	ee18 0a90 	vmov	r0, s17
 8006614:	4649      	mov	r1, r9
 8006616:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800661a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800661e:	f00c fa4b 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006622:	ee18 1a90 	vmov	r1, s17
 8006626:	4630      	mov	r0, r6
 8006628:	f00a f892 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800662c:	ee19 0a10 	vmov	r0, s18
 8006630:	22f0      	movs	r2, #240	; 0xf0
 8006632:	2121      	movs	r1, #33	; 0x21
 8006634:	f7fc fd57 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006638:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800663c:	464a      	mov	r2, r9
 800663e:	f04f 0802 	mov.w	r8, #2
 8006642:	a90b      	add	r1, sp, #44	; 0x2c
 8006644:	ee19 0a10 	vmov	r0, s18
 8006648:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800664c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006650:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006654:	f00c fc15 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006658:	2362      	movs	r3, #98	; 0x62
 800665a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800665e:	350c      	adds	r5, #12
        updateTextPosition();
 8006660:	ee19 0a10 	vmov	r0, s18
 8006664:	f7fc fd94 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006668:	ee19 1a10 	vmov	r1, s18
 800666c:	4630      	mov	r0, r6
        colorPressed = col;
 800666e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006672:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006676:	f00a f86b 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800667a:	ee19 0a90 	vmov	r0, s19
 800667e:	22aa      	movs	r2, #170	; 0xaa
 8006680:	2121      	movs	r1, #33	; 0x21
 8006682:	f7fc fd30 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006686:	464a      	mov	r2, r9
 8006688:	a90b      	add	r1, sp, #44	; 0x2c
 800668a:	ee19 0a90 	vmov	r0, s19
 800668e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006692:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006696:	f00c fbf4 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800669a:	2363      	movs	r3, #99	; 0x63
 800669c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80066a0:	ee19 0a90 	vmov	r0, s19
 80066a4:	f7fc fd74 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80066a8:	ee19 1a90 	vmov	r1, s19
 80066ac:	4630      	mov	r0, r6
        colorPressed = col;
 80066ae:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80066b2:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80066b6:	f00a f84b 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80066ba:	ee1a 0a10 	vmov	r0, s20
 80066be:	2264      	movs	r2, #100	; 0x64
 80066c0:	2121      	movs	r1, #33	; 0x21
 80066c2:	f7fc fd10 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066c6:	464a      	mov	r2, r9
 80066c8:	a90b      	add	r1, sp, #44	; 0x2c
 80066ca:	ee1a 0a10 	vmov	r0, s20
 80066ce:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80066d2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80066d6:	f00c fbd4 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80066da:	2364      	movs	r3, #100	; 0x64
 80066dc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80066e0:	ee1a 0a10 	vmov	r0, s20
 80066e4:	f7fc fd54 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80066e8:	ee1a 1a10 	vmov	r1, s20
 80066ec:	4630      	mov	r0, r6
        colorPressed = col;
 80066ee:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80066f2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80066f6:	f00a f82b 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80066fa:	ee1a 0a90 	vmov	r0, s21
 80066fe:	2205      	movs	r2, #5
 8006700:	21c6      	movs	r1, #198	; 0xc6
 8006702:	f7fc fcf0 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006706:	2301      	movs	r3, #1
 8006708:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800670c:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800670e:	ee1a 0a90 	vmov	r0, s21
 8006712:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006716:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800671a:	aa0a      	add	r2, sp, #40	; 0x28
 800671c:	ab0b      	add	r3, sp, #44	; 0x2c
 800671e:	a909      	add	r1, sp, #36	; 0x24
 8006720:	f8cd 9000 	str.w	r9, [sp]
 8006724:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006728:	f00c fce5 	bl	80130f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800672c:	4630      	mov	r0, r6
 800672e:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8006732:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8006736:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800673a:	f00a f809 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800673e:	4620      	mov	r0, r4
 8006740:	b00f      	add	sp, #60	; 0x3c
 8006742:	ecbd 8b06 	vpop	{d8-d10}
 8006746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800674a:	bf00      	nop
 800674c:	20012e08 	.word	0x20012e08
 8006750:	0802c80a 	.word	0x0802c80a
 8006754:	0802c880 	.word	0x0802c880

08006758 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006758:	4770      	bx	lr

0800675a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800675a:	4770      	bx	lr

0800675c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800675c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800675e:	68c2      	ldr	r2, [r0, #12]
 8006760:	6844      	ldr	r4, [r0, #4]
 8006762:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006764:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006766:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800676a:	07d2      	lsls	r2, r2, #31
 800676c:	bf48      	it	mi
 800676e:	5962      	ldrmi	r2, [r4, r5]
 8006770:	689b      	ldr	r3, [r3, #8]
    }
 8006772:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006774:	bf48      	it	mi
 8006776:	58d3      	ldrmi	r3, [r2, r3]
 8006778:	4718      	bx	r3

0800677a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800677a:	6843      	ldr	r3, [r0, #4]
 800677c:	b12b      	cbz	r3, 800678a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800677e:	6883      	ldr	r3, [r0, #8]
 8006780:	b92b      	cbnz	r3, 800678e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006782:	68c0      	ldr	r0, [r0, #12]
 8006784:	f000 0001 	and.w	r0, r0, #1
 8006788:	4770      	bx	lr
 800678a:	4618      	mov	r0, r3
 800678c:	4770      	bx	lr
 800678e:	2001      	movs	r0, #1
    }
 8006790:	4770      	bx	lr

08006792 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006792:	b510      	push	{r4, lr}
 8006794:	2110      	movs	r1, #16
 8006796:	4604      	mov	r4, r0
 8006798:	f023 fb91 	bl	8029ebe <_ZdlPvj>
 800679c:	4620      	mov	r0, r4
 800679e:	bd10      	pop	{r4, pc}

080067a0 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80067a0:	b510      	push	{r4, lr}
 80067a2:	4b03      	ldr	r3, [pc, #12]	; (80067b0 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80067a4:	6003      	str	r3, [r0, #0]
 80067a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067a8:	f00d fd68 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067ac:	4620      	mov	r0, r4
 80067ae:	bd10      	pop	{r4, pc}
 80067b0:	0802e26c 	.word	0x0802e26c

080067b4 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80067b4:	b507      	push	{r0, r1, r2, lr}
 80067b6:	4b07      	ldr	r3, [pc, #28]	; (80067d4 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80067b8:	6003      	str	r3, [r0, #0]
 80067ba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067bc:	f00d fd5e 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067c0:	9801      	ldr	r0, [sp, #4]
 80067c2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80067c6:	f023 fb7a 	bl	8029ebe <_ZdlPvj>
 80067ca:	9801      	ldr	r0, [sp, #4]
 80067cc:	b003      	add	sp, #12
 80067ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80067d2:	bf00      	nop
 80067d4:	0802e26c 	.word	0x0802e26c

080067d8 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80067d8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80067da:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80067de:	4299      	cmp	r1, r3
{
 80067e0:	4604      	mov	r4, r0
 80067e2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80067e4:	d103      	bne.n	80067ee <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80067e6:	f00f fa4b 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80067ea:	f7fe f853 	bl	8004894 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80067ee:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80067f2:	429d      	cmp	r5, r3
 80067f4:	d103      	bne.n	80067fe <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80067f6:	f00f fa43 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80067fa:	f7fe f87b 	bl	80048f4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80067fe:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006802:	42a5      	cmp	r5, r4
 8006804:	d105      	bne.n	8006812 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006806:	f00f fa3b 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 800680a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 800680e:	f7fe b8a1 	b.w	8004954 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006812:	bd38      	pop	{r3, r4, r5, pc}

08006814 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006818:	ed2d 8b06 	vpush	{d8-d10}
 800681c:	4604      	mov	r4, r0
 800681e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006820:	46a3      	mov	fp, r4
 8006822:	2500      	movs	r5, #0
 8006824:	f010 feac 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8006828:	4b66      	ldr	r3, [pc, #408]	; (80069c4 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800682a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800682c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006830:	2226      	movs	r2, #38	; 0x26
 8006832:	4629      	mov	r1, r5
 8006834:	4658      	mov	r0, fp
 8006836:	f024 fc2e 	bl	802b096 <memset>
 800683a:	4658      	mov	r0, fp
 800683c:	f7fc fc74 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8006840:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006844:	26ff      	movs	r6, #255	; 0xff
 8006846:	4b60      	ldr	r3, [pc, #384]	; (80069c8 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006848:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800684a:	2226      	movs	r2, #38	; 0x26
 800684c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006850:	4629      	mov	r1, r5
 8006852:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006856:	4650      	mov	r0, sl
 8006858:	66a5      	str	r5, [r4, #104]	; 0x68
 800685a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800685e:	f024 fc1a 	bl	802b096 <memset>
 8006862:	4650      	mov	r0, sl
 8006864:	f7fc fc60 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8006868:	4b58      	ldr	r3, [pc, #352]	; (80069cc <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800686a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800686c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006870:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006874:	a90a      	add	r1, sp, #40	; 0x28
 8006876:	4650      	mov	r0, sl
 8006878:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800687c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006880:	f00c fcf5 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006884:	4648      	mov	r0, r9
 8006886:	f7fc fc61 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800688a:	4b51      	ldr	r3, [pc, #324]	; (80069d0 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800688c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006890:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006894:	4618      	mov	r0, r3
 8006896:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800689a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800689e:	ee08 3a90 	vmov	s17, r3
 80068a2:	f7fc fc53 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80068a6:	4638      	mov	r0, r7
 80068a8:	f00b fbaa 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 80068ac:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80068b0:	4618      	mov	r0, r3
 80068b2:	9303      	str	r3, [sp, #12]
 80068b4:	f7fc fa38 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80068b8:	4b46      	ldr	r3, [pc, #280]	; (80069d4 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80068ba:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80068be:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80068c2:	3324      	adds	r3, #36	; 0x24
 80068c4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80068c8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80068cc:	4640      	mov	r0, r8
 80068ce:	f7fc fc3d 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80068d2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80068d6:	4618      	mov	r0, r3
 80068d8:	ee08 3a10 	vmov	s16, r3
 80068dc:	f7fc fc36 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80068e0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80068e4:	4618      	mov	r0, r3
 80068e6:	ee09 3a10 	vmov	s18, r3
 80068ea:	f00c fe01 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068ee:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80068f2:	4618      	mov	r0, r3
 80068f4:	ee09 3a90 	vmov	s19, r3
 80068f8:	f00c fdfa 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068fc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006900:	4618      	mov	r0, r3
 8006902:	ee0a 3a10 	vmov	s20, r3
 8006906:	f00c fdf3 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800690a:	4a33      	ldr	r2, [pc, #204]	; (80069d8 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 800690c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006910:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006914:	4a31      	ldr	r2, [pc, #196]	; (80069dc <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006916:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800691a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800691e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006922:	f00d fca1 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006926:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800692a:	462a      	mov	r2, r5
 800692c:	4658      	mov	r0, fp
 800692e:	9300      	str	r3, [sp, #0]
 8006930:	4629      	mov	r1, r5
 8006932:	23f0      	movs	r3, #240	; 0xf0
 8006934:	f7fc fbe4 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006938:	1d26      	adds	r6, r4, #4
        color = newColor;
 800693a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800693e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006940:	4659      	mov	r1, fp
 8006942:	4630      	mov	r0, r6
 8006944:	f009 ff04 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006948:	462a      	mov	r2, r5
 800694a:	4650      	mov	r0, sl
 800694c:	4629      	mov	r1, r5
 800694e:	f7fc fbca 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006952:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006954:	4650      	mov	r0, sl
 8006956:	a90a      	add	r1, sp, #40	; 0x28
 8006958:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800695c:	f00c fc87 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006960:	4651      	mov	r1, sl
 8006962:	4630      	mov	r0, r6
 8006964:	f009 fef4 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006968:	f44f 729a 	mov.w	r2, #308	; 0x134
 800696c:	2156      	movs	r1, #86	; 0x56
 800696e:	4648      	mov	r0, r9
 8006970:	f7fc fbb9 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006974:	f04f 33ff 	mov.w	r3, #4294967295
 8006978:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800697c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006980:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006984:	f10d 0b10 	add.w	fp, sp, #16
 8006988:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800698c:	4649      	mov	r1, r9
 800698e:	4658      	mov	r0, fp
 8006990:	4798      	blx	r3
 8006992:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006996:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800699a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800699e:	4b10      	ldr	r3, [pc, #64]	; (80069e0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80069a0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80069a2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80069a6:	b92b      	cbnz	r3, 80069b4 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80069a8:	4b0e      	ldr	r3, [pc, #56]	; (80069e4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80069aa:	4a0f      	ldr	r2, [pc, #60]	; (80069e8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80069ac:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80069ae:	480f      	ldr	r0, [pc, #60]	; (80069ec <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80069b0:	f024 f96c 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80069b4:	4b0e      	ldr	r3, [pc, #56]	; (80069f0 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80069b6:	881b      	ldrh	r3, [r3, #0]
 80069b8:	2b2b      	cmp	r3, #43	; 0x2b
 80069ba:	d81d      	bhi.n	80069f8 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80069bc:	4b0d      	ldr	r3, [pc, #52]	; (80069f4 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80069be:	4a0a      	ldr	r2, [pc, #40]	; (80069e8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80069c0:	2161      	movs	r1, #97	; 0x61
 80069c2:	e7f4      	b.n	80069ae <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80069c4:	0802e26c 	.word	0x0802e26c
 80069c8:	0802f1e0 	.word	0x0802f1e0
 80069cc:	0802f3a8 	.word	0x0802f3a8
 80069d0:	0802c890 	.word	0x0802c890
 80069d4:	0802ef14 	.word	0x0802ef14
 80069d8:	0802e254 	.word	0x0802e254
 80069dc:	080067d9 	.word	0x080067d9
 80069e0:	20012dfc 	.word	0x20012dfc
 80069e4:	0802c6d0 	.word	0x0802c6d0
 80069e8:	0802c7d2 	.word	0x0802c7d2
 80069ec:	0802c74d 	.word	0x0802c74d
 80069f0:	20012e00 	.word	0x20012e00
 80069f4:	0802c794 	.word	0x0802c794
        return texts->getText(typedTextId);
 80069f8:	4b95      	ldr	r3, [pc, #596]	; (8006c50 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80069fa:	212b      	movs	r1, #43	; 0x2b
 80069fc:	6818      	ldr	r0, [r3, #0]
 80069fe:	f002 fb55 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8006a02:	4a94      	ldr	r2, [pc, #592]	; (8006c54 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006a04:	4603      	mov	r3, r0
 8006a06:	2104      	movs	r1, #4
 8006a08:	4650      	mov	r0, sl
 8006a0a:	f012 faa9 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006a0e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006a12:	4648      	mov	r0, r9
 8006a14:	f00c f830 	bl	8012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006a18:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006c58 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006a1c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006a20:	232c      	movs	r3, #44	; 0x2c
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006a22:	a90a      	add	r1, sp, #40	; 0x28
 8006a24:	4648      	mov	r0, r9
 8006a26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a2a:	f00c f845 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a2e:	4649      	mov	r1, r9
 8006a30:	4630      	mov	r0, r6
 8006a32:	f009 fe8d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006a36:	223c      	movs	r2, #60	; 0x3c
 8006a38:	ee18 0a90 	vmov	r0, s17
 8006a3c:	213d      	movs	r1, #61	; 0x3d
 8006a3e:	f7fc fb52 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a42:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006a46:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006a4a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006a4e:	4658      	mov	r0, fp
        linespace = space;
 8006a50:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006a54:	f00b fd96 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a58:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006a5c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006a60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a64:	2339      	movs	r3, #57	; 0x39
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006a66:	ee18 0a90 	vmov	r0, s17
 8006a6a:	a90a      	add	r1, sp, #40	; 0x28
 8006a6c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a70:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006a74:	f00c f820 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a78:	ee18 1a90 	vmov	r1, s17
 8006a7c:	4630      	mov	r0, r6
 8006a7e:	f009 fe67 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006a82:	230a      	movs	r3, #10
 8006a84:	9300      	str	r3, [sp, #0]
 8006a86:	2232      	movs	r2, #50	; 0x32
 8006a88:	23f0      	movs	r3, #240	; 0xf0
 8006a8a:	4629      	mov	r1, r5
 8006a8c:	4638      	mov	r0, r7
 8006a8e:	f7fc fb37 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a92:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a96:	22a0      	movs	r2, #160	; 0xa0
 8006a98:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a9c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006aa0:	9b03      	ldr	r3, [sp, #12]
 8006aa2:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006aa6:	4611      	mov	r1, r2
 8006aa8:	4638      	mov	r0, r7
 8006aaa:	f00b fbbf 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006aae:	22a0      	movs	r2, #160	; 0xa0
 8006ab0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006ab4:	4638      	mov	r0, r7
 8006ab6:	f00b fbc4 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006aba:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006abe:	2b20      	cmp	r3, #32
 8006ac0:	d005      	beq.n	8006ace <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006ac2:	2320      	movs	r3, #32
 8006ac4:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006ac8:	4638      	mov	r0, r7
 8006aca:	f00b fab9 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006ace:	4638      	mov	r0, r7
 8006ad0:	2101      	movs	r1, #1
 8006ad2:	f00b fbc1 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006ad6:	4639      	mov	r1, r7
 8006ad8:	4630      	mov	r0, r6
 8006ada:	f009 fe39 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006ade:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006ae2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006ae4:	2223      	movs	r2, #35	; 0x23
 8006ae6:	4640      	mov	r0, r8
        linespace = space;
 8006ae8:	f04f 0a00 	mov.w	sl, #0
 8006aec:	2145      	movs	r1, #69	; 0x45
 8006aee:	f7fc fafa 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006af2:	4641      	mov	r1, r8
 8006af4:	4638      	mov	r0, r7
        color = newColor;
 8006af6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006afa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006afe:	f00b fd41 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b02:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006b06:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006b0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b0e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006c58 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006b12:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006b16:	235e      	movs	r3, #94	; 0x5e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006b18:	a90a      	add	r1, sp, #40	; 0x28
 8006b1a:	4640      	mov	r0, r8
 8006b1c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b20:	f00b ffca 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b24:	4641      	mov	r1, r8
 8006b26:	4630      	mov	r0, r6
 8006b28:	f009 fe12 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006b2c:	ee18 0a10 	vmov	r0, s16
 8006b30:	220c      	movs	r2, #12
 8006b32:	2136      	movs	r1, #54	; 0x36
 8006b34:	f7fc fad7 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006b38:	ee18 1a10 	vmov	r1, s16
 8006b3c:	4638      	mov	r0, r7
        color = newColor;
 8006b3e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006b42:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006b46:	f00b fd1d 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b4a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006b4e:	ee18 3a10 	vmov	r3, s16
 8006b52:	333c      	adds	r3, #60	; 0x3c
 8006b54:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b58:	235f      	movs	r3, #95	; 0x5f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006b5a:	ee18 0a10 	vmov	r0, s16
 8006b5e:	a90a      	add	r1, sp, #40	; 0x28
 8006b60:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b64:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006b68:	f00b ffa6 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b6c:	ee18 1a10 	vmov	r1, s16
 8006b70:	4630      	mov	r0, r6
 8006b72:	f009 fded 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006b76:	ee19 0a10 	vmov	r0, s18
 8006b7a:	22f0      	movs	r2, #240	; 0xf0
 8006b7c:	2121      	movs	r1, #33	; 0x21
 8006b7e:	f7fc fab2 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006b82:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b86:	aa0a      	add	r2, sp, #40	; 0x28
 8006b88:	f04f 0802 	mov.w	r8, #2
 8006b8c:	a909      	add	r1, sp, #36	; 0x24
 8006b8e:	ee19 0a10 	vmov	r0, s18
 8006b92:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b96:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006b9a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b9e:	f00c f970 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006ba2:	235d      	movs	r3, #93	; 0x5d
 8006ba4:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006ba8:	3710      	adds	r7, #16
        updateTextPosition();
 8006baa:	ee19 0a10 	vmov	r0, s18
 8006bae:	f7fc faef 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bb2:	ee19 1a10 	vmov	r1, s18
 8006bb6:	4630      	mov	r0, r6
        colorPressed = col;
 8006bb8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006bbc:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006bc0:	f009 fdc6 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006bc4:	ee19 0a90 	vmov	r0, s19
 8006bc8:	22aa      	movs	r2, #170	; 0xaa
 8006bca:	2121      	movs	r1, #33	; 0x21
 8006bcc:	f7fc fa8b 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006bd0:	aa0a      	add	r2, sp, #40	; 0x28
 8006bd2:	a909      	add	r1, sp, #36	; 0x24
 8006bd4:	ee19 0a90 	vmov	r0, s19
 8006bd8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006bdc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006be0:	f00c f94f 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006be4:	235c      	movs	r3, #92	; 0x5c
 8006be6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006bea:	ee19 0a90 	vmov	r0, s19
 8006bee:	f7fc facf 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bf2:	ee19 1a90 	vmov	r1, s19
 8006bf6:	4630      	mov	r0, r6
        colorPressed = col;
 8006bf8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006bfc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006c00:	f009 fda6 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006c04:	ee1a 0a10 	vmov	r0, s20
 8006c08:	2264      	movs	r2, #100	; 0x64
 8006c0a:	2121      	movs	r1, #33	; 0x21
 8006c0c:	f7fc fa6b 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c10:	aa0a      	add	r2, sp, #40	; 0x28
 8006c12:	a909      	add	r1, sp, #36	; 0x24
 8006c14:	ee1a 0a10 	vmov	r0, s20
 8006c18:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006c1c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006c20:	f00c f92f 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c24:	235b      	movs	r3, #91	; 0x5b
        updateTextPosition();
 8006c26:	ee1a 0a10 	vmov	r0, s20
 8006c2a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006c2e:	f7fc faaf 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c32:	4630      	mov	r0, r6
        colorPressed = col;
 8006c34:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006c38:	ee1a 1a10 	vmov	r1, s20
 8006c3c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006c40:	f009 fd86 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c44:	4620      	mov	r0, r4
 8006c46:	b00d      	add	sp, #52	; 0x34
 8006c48:	ecbd 8b06 	vpop	{d8-d10}
 8006c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c50:	20012e08 	.word	0x20012e08
 8006c54:	0802c80a 	.word	0x0802c80a
 8006c58:	0802c880 	.word	0x0802c880

08006c5c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006c5c:	4770      	bx	lr

08006c5e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c5e:	4770      	bx	lr

08006c60 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006c60:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c62:	68c2      	ldr	r2, [r0, #12]
 8006c64:	6844      	ldr	r4, [r0, #4]
 8006c66:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006c68:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006c6a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006c6e:	07d2      	lsls	r2, r2, #31
 8006c70:	bf48      	it	mi
 8006c72:	5962      	ldrmi	r2, [r4, r5]
 8006c74:	689b      	ldr	r3, [r3, #8]
    }
 8006c76:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c78:	bf48      	it	mi
 8006c7a:	58d3      	ldrmi	r3, [r2, r3]
 8006c7c:	4718      	bx	r3

08006c7e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006c7e:	6843      	ldr	r3, [r0, #4]
 8006c80:	b12b      	cbz	r3, 8006c8e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006c82:	6883      	ldr	r3, [r0, #8]
 8006c84:	b92b      	cbnz	r3, 8006c92 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006c86:	68c0      	ldr	r0, [r0, #12]
 8006c88:	f000 0001 	and.w	r0, r0, #1
 8006c8c:	4770      	bx	lr
 8006c8e:	4618      	mov	r0, r3
 8006c90:	4770      	bx	lr
 8006c92:	2001      	movs	r0, #1
    }
 8006c94:	4770      	bx	lr

08006c96 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c96:	b510      	push	{r4, lr}
 8006c98:	2110      	movs	r1, #16
 8006c9a:	4604      	mov	r4, r0
 8006c9c:	f023 f90f 	bl	8029ebe <_ZdlPvj>
 8006ca0:	4620      	mov	r0, r4
 8006ca2:	bd10      	pop	{r4, pc}

08006ca4 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006ca4:	b510      	push	{r4, lr}
 8006ca6:	4b03      	ldr	r3, [pc, #12]	; (8006cb4 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006ca8:	6003      	str	r3, [r0, #0]
 8006caa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006cac:	f00d fae6 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006cb0:	4620      	mov	r0, r4
 8006cb2:	bd10      	pop	{r4, pc}
 8006cb4:	0802e2b8 	.word	0x0802e2b8

08006cb8 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006cb8:	b507      	push	{r0, r1, r2, lr}
 8006cba:	4b07      	ldr	r3, [pc, #28]	; (8006cd8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006cbc:	6003      	str	r3, [r0, #0]
 8006cbe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006cc0:	f00d fadc 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006cc4:	9801      	ldr	r0, [sp, #4]
 8006cc6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006cca:	f023 f8f8 	bl	8029ebe <_ZdlPvj>
 8006cce:	9801      	ldr	r0, [sp, #4]
 8006cd0:	b003      	add	sp, #12
 8006cd2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006cd6:	bf00      	nop
 8006cd8:	0802e2b8 	.word	0x0802e2b8

08006cdc <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006cdc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006cde:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006ce2:	4299      	cmp	r1, r3
{
 8006ce4:	4604      	mov	r4, r0
 8006ce6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006ce8:	d103      	bne.n	8006cf2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006cea:	f00e ffc9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006cee:	f7fd fdf1 	bl	80048d4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006cf2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006cf6:	429d      	cmp	r5, r3
 8006cf8:	d103      	bne.n	8006d02 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006cfa:	f00e ffc1 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006cfe:	f7fd fe59 	bl	80049b4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006d02:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006d06:	42a5      	cmp	r5, r4
 8006d08:	d105      	bne.n	8006d16 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006d0a:	f00e ffb9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006d0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006d12:	f7fd be3f 	b.w	8004994 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006d16:	bd38      	pop	{r3, r4, r5, pc}

08006d18 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d1c:	ed2d 8b06 	vpush	{d8-d10}
 8006d20:	4604      	mov	r4, r0
 8006d22:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006d24:	46a3      	mov	fp, r4
 8006d26:	2500      	movs	r5, #0
 8006d28:	f010 fc2a 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8006d2c:	4b66      	ldr	r3, [pc, #408]	; (8006ec8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006d2e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006d30:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006d34:	2226      	movs	r2, #38	; 0x26
 8006d36:	4629      	mov	r1, r5
 8006d38:	4658      	mov	r0, fp
 8006d3a:	f024 f9ac 	bl	802b096 <memset>
 8006d3e:	4658      	mov	r0, fp
 8006d40:	f7fc f9f2 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8006d44:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006d48:	26ff      	movs	r6, #255	; 0xff
 8006d4a:	4b60      	ldr	r3, [pc, #384]	; (8006ecc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006d4c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006d4e:	2226      	movs	r2, #38	; 0x26
 8006d50:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006d54:	4629      	mov	r1, r5
 8006d56:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006d5a:	4650      	mov	r0, sl
 8006d5c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006d5e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d62:	f024 f998 	bl	802b096 <memset>
 8006d66:	4650      	mov	r0, sl
 8006d68:	f7fc f9de 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8006d6c:	4b58      	ldr	r3, [pc, #352]	; (8006ed0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006d6e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006d70:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006d74:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006d78:	a90a      	add	r1, sp, #40	; 0x28
 8006d7a:	4650      	mov	r0, sl
 8006d7c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006d80:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006d84:	f00c fa73 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006d88:	4648      	mov	r0, r9
 8006d8a:	f7fc f9df 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8006d8e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006d92:	4b50      	ldr	r3, [pc, #320]	; (8006ed4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006d94:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006d98:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006d9c:	4638      	mov	r0, r7
 8006d9e:	f00b f92f 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 8006da2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006da6:	4618      	mov	r0, r3
 8006da8:	9303      	str	r3, [sp, #12]
 8006daa:	f7fb ffbd 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006dae:	4b4a      	ldr	r3, [pc, #296]	; (8006ed8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006db0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006db4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006db8:	3324      	adds	r3, #36	; 0x24
 8006dba:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006dbe:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006dc2:	4640      	mov	r0, r8
 8006dc4:	f7fc f9c2 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8006dc8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006dcc:	4618      	mov	r0, r3
 8006dce:	ee08 3a10 	vmov	s16, r3
 8006dd2:	f7fc f9bb 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8006dd6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006dda:	4618      	mov	r0, r3
 8006ddc:	ee08 3a90 	vmov	s17, r3
 8006de0:	f7fc f9b4 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8006de4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006de8:	4618      	mov	r0, r3
 8006dea:	ee09 3a10 	vmov	s18, r3
 8006dee:	f00c fb7f 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006df2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006df6:	4618      	mov	r0, r3
 8006df8:	ee09 3a90 	vmov	s19, r3
 8006dfc:	f00c fb78 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006e00:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006e04:	4618      	mov	r0, r3
 8006e06:	ee0a 3a10 	vmov	s20, r3
 8006e0a:	f00c fb71 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006e0e:	4a33      	ldr	r2, [pc, #204]	; (8006edc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006e10:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006e14:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006e18:	4a31      	ldr	r2, [pc, #196]	; (8006ee0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006e1a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006e1e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006e22:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006e26:	f00d fa1f 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006e2a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006e2e:	462a      	mov	r2, r5
 8006e30:	4658      	mov	r0, fp
 8006e32:	9300      	str	r3, [sp, #0]
 8006e34:	4629      	mov	r1, r5
 8006e36:	23f0      	movs	r3, #240	; 0xf0
 8006e38:	f7fc f962 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e3c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006e3e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006e42:	66a3      	str	r3, [r4, #104]	; 0x68
 8006e44:	4659      	mov	r1, fp
 8006e46:	4630      	mov	r0, r6
 8006e48:	f009 fc82 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006e4c:	462a      	mov	r2, r5
 8006e4e:	4650      	mov	r0, sl
 8006e50:	4629      	mov	r1, r5
 8006e52:	f7fc f948 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006e56:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006e58:	4650      	mov	r0, sl
 8006e5a:	a90a      	add	r1, sp, #40	; 0x28
 8006e5c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e60:	f00c fa05 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e64:	4651      	mov	r1, sl
 8006e66:	4630      	mov	r0, r6
 8006e68:	f009 fc72 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006e6c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006e70:	2156      	movs	r1, #86	; 0x56
 8006e72:	4648      	mov	r0, r9
 8006e74:	f7fc f937 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006e78:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006e7c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006e80:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006e84:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006e88:	4650      	mov	r0, sl
 8006e8a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006e8e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006e92:	4649      	mov	r1, r9
 8006e94:	4798      	blx	r3
 8006e96:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006e9a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006e9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006ea2:	4b10      	ldr	r3, [pc, #64]	; (8006ee4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006ea4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006ea6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006eaa:	b92b      	cbnz	r3, 8006eb8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006eac:	4b0e      	ldr	r3, [pc, #56]	; (8006ee8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006eae:	4a0f      	ldr	r2, [pc, #60]	; (8006eec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006eb0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006eb2:	480f      	ldr	r0, [pc, #60]	; (8006ef0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006eb4:	f023 feea 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006eb8:	4b0e      	ldr	r3, [pc, #56]	; (8006ef4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006eba:	881b      	ldrh	r3, [r3, #0]
 8006ebc:	2b26      	cmp	r3, #38	; 0x26
 8006ebe:	d81d      	bhi.n	8006efc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006ec0:	4b0d      	ldr	r3, [pc, #52]	; (8006ef8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006ec2:	4a0a      	ldr	r2, [pc, #40]	; (8006eec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006ec4:	2161      	movs	r1, #97	; 0x61
 8006ec6:	e7f4      	b.n	8006eb2 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006ec8:	0802e2b8 	.word	0x0802e2b8
 8006ecc:	0802f1e0 	.word	0x0802f1e0
 8006ed0:	0802f3a8 	.word	0x0802f3a8
 8006ed4:	0802c890 	.word	0x0802c890
 8006ed8:	0802ef14 	.word	0x0802ef14
 8006edc:	0802e2a0 	.word	0x0802e2a0
 8006ee0:	08006cdd 	.word	0x08006cdd
 8006ee4:	20012dfc 	.word	0x20012dfc
 8006ee8:	0802c6d0 	.word	0x0802c6d0
 8006eec:	0802c7d2 	.word	0x0802c7d2
 8006ef0:	0802c74d 	.word	0x0802c74d
 8006ef4:	20012e00 	.word	0x20012e00
 8006ef8:	0802c794 	.word	0x0802c794
        return texts->getText(typedTextId);
 8006efc:	4b93      	ldr	r3, [pc, #588]	; (800714c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8006efe:	2126      	movs	r1, #38	; 0x26
 8006f00:	6818      	ldr	r0, [r3, #0]
 8006f02:	f002 f8d3 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8006f06:	4a92      	ldr	r2, [pc, #584]	; (8007150 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006f08:	4603      	mov	r3, r0
 8006f0a:	2104      	movs	r1, #4
 8006f0c:	4650      	mov	r0, sl
 8006f0e:	f012 f827 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006f12:	4648      	mov	r0, r9
        wc1 = value;
 8006f14:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006f18:	f00b fdae 	bl	8012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006f1c:	4b8d      	ldr	r3, [pc, #564]	; (8007154 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006f1e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006f20:	a90a      	add	r1, sp, #40	; 0x28
 8006f22:	2327      	movs	r3, #39	; 0x27
 8006f24:	4648      	mov	r0, r9
 8006f26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f2a:	f00b fdc5 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f2e:	4649      	mov	r1, r9
 8006f30:	4630      	mov	r0, r6
 8006f32:	f009 fc0d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006f36:	230a      	movs	r3, #10
 8006f38:	9300      	str	r3, [sp, #0]
 8006f3a:	2232      	movs	r2, #50	; 0x32
 8006f3c:	23f0      	movs	r3, #240	; 0xf0
 8006f3e:	4629      	mov	r1, r5
 8006f40:	4638      	mov	r0, r7
 8006f42:	f7fc f8dd 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f46:	9b03      	ldr	r3, [sp, #12]
 8006f48:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006f4c:	22a0      	movs	r2, #160	; 0xa0
 8006f4e:	4611      	mov	r1, r2
 8006f50:	4638      	mov	r0, r7
 8006f52:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006f56:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006f5a:	f00b f967 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006f5e:	22a0      	movs	r2, #160	; 0xa0
 8006f60:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006f64:	4638      	mov	r0, r7
 8006f66:	f00b f96c 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006f6a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006f6e:	2b20      	cmp	r3, #32
 8006f70:	d005      	beq.n	8006f7e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006f72:	2320      	movs	r3, #32
 8006f74:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006f78:	4638      	mov	r0, r7
 8006f7a:	f00b f861 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006f7e:	4638      	mov	r0, r7
 8006f80:	2101      	movs	r1, #1
 8006f82:	f00b f969 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006f86:	4639      	mov	r1, r7
 8006f88:	4630      	mov	r0, r6
 8006f8a:	ad04      	add	r5, sp, #16
        color = newColor;
 8006f8c:	f04f 37ff 	mov.w	r7, #4294967295
 8006f90:	f009 fbde 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006f94:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006f98:	2223      	movs	r2, #35	; 0x23
 8006f9a:	4640      	mov	r0, r8
 8006f9c:	2145      	movs	r1, #69	; 0x45
 8006f9e:	f7fc f8a2 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006fa2:	4641      	mov	r1, r8
 8006fa4:	4628      	mov	r0, r5
        color = newColor;
 8006fa6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006faa:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006fae:	f00b fae9 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006fb2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006fb6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006fba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006fbe:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8007154 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006fc2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006fc6:	234c      	movs	r3, #76	; 0x4c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8006fc8:	a90a      	add	r1, sp, #40	; 0x28
 8006fca:	4640      	mov	r0, r8
 8006fcc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fd0:	f00b fd72 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fd4:	4641      	mov	r1, r8
 8006fd6:	4630      	mov	r0, r6
 8006fd8:	f009 fbba 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006fdc:	ee18 0a10 	vmov	r0, s16
 8006fe0:	220c      	movs	r2, #12
 8006fe2:	2136      	movs	r1, #54	; 0x36
 8006fe4:	f7fc f87f 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8006fe8:	ee18 1a10 	vmov	r1, s16
 8006fec:	4628      	mov	r0, r5
        color = newColor;
 8006fee:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006ff2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006ff6:	f00b fac5 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ffa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ffe:	ee18 3a10 	vmov	r3, s16
 8007002:	333c      	adds	r3, #60	; 0x3c
 8007004:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007008:	234b      	movs	r3, #75	; 0x4b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800700a:	ee18 0a10 	vmov	r0, s16
 800700e:	a90a      	add	r1, sp, #40	; 0x28
 8007010:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007014:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007018:	f00b fd4e 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800701c:	ee18 1a10 	vmov	r1, s16
 8007020:	4630      	mov	r0, r6
 8007022:	f009 fb95 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8007026:	ee18 0a90 	vmov	r0, s17
 800702a:	223c      	movs	r2, #60	; 0x3c
 800702c:	2121      	movs	r1, #33	; 0x21
 800702e:	f7fc f85a 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007032:	ee18 1a90 	vmov	r1, s17
 8007036:	4628      	mov	r0, r5
        color = newColor;
 8007038:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800703c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007040:	f00b faa0 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007044:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007048:	ee18 3a90 	vmov	r3, s17
 800704c:	333c      	adds	r3, #60	; 0x3c
 800704e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007052:	2335      	movs	r3, #53	; 0x35
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8007054:	ee18 0a90 	vmov	r0, s17
 8007058:	a90a      	add	r1, sp, #40	; 0x28
 800705a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800705e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007062:	f00b fd29 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007066:	ee18 1a90 	vmov	r1, s17
 800706a:	4630      	mov	r0, r6
 800706c:	f009 fb70 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007070:	ee19 0a10 	vmov	r0, s18
 8007074:	22f0      	movs	r2, #240	; 0xf0
 8007076:	2121      	movs	r1, #33	; 0x21
 8007078:	f7fc f835 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800707c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007080:	aa0a      	add	r2, sp, #40	; 0x28
 8007082:	f04f 0802 	mov.w	r8, #2
 8007086:	a909      	add	r1, sp, #36	; 0x24
 8007088:	ee19 0a10 	vmov	r0, s18
 800708c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007090:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007094:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007098:	f00b fef3 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800709c:	234a      	movs	r3, #74	; 0x4a
 800709e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80070a2:	3510      	adds	r5, #16
        updateTextPosition();
 80070a4:	ee19 0a10 	vmov	r0, s18
 80070a8:	f7fc f872 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80070ac:	ee19 1a10 	vmov	r1, s18
 80070b0:	4630      	mov	r0, r6
        colorPressed = col;
 80070b2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80070b6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80070ba:	f009 fb49 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80070be:	ee19 0a90 	vmov	r0, s19
 80070c2:	22aa      	movs	r2, #170	; 0xaa
 80070c4:	2121      	movs	r1, #33	; 0x21
 80070c6:	f7fc f80e 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070ca:	aa0a      	add	r2, sp, #40	; 0x28
 80070cc:	a909      	add	r1, sp, #36	; 0x24
 80070ce:	ee19 0a90 	vmov	r0, s19
 80070d2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80070d6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80070da:	f00b fed2 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80070de:	2349      	movs	r3, #73	; 0x49
 80070e0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80070e4:	ee19 0a90 	vmov	r0, s19
 80070e8:	f7fc f852 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80070ec:	ee19 1a90 	vmov	r1, s19
 80070f0:	4630      	mov	r0, r6
        colorPressed = col;
 80070f2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80070f6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80070fa:	f009 fb29 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80070fe:	ee1a 0a10 	vmov	r0, s20
 8007102:	2264      	movs	r2, #100	; 0x64
 8007104:	2121      	movs	r1, #33	; 0x21
 8007106:	f7fb ffee 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800710a:	aa0a      	add	r2, sp, #40	; 0x28
 800710c:	a909      	add	r1, sp, #36	; 0x24
 800710e:	ee1a 0a10 	vmov	r0, s20
 8007112:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007116:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800711a:	f00b feb2 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800711e:	2348      	movs	r3, #72	; 0x48
        updateTextPosition();
 8007120:	ee1a 0a10 	vmov	r0, s20
 8007124:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007128:	f7fc f832 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800712c:	4630      	mov	r0, r6
        colorPressed = col;
 800712e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8007132:	ee1a 1a10 	vmov	r1, s20
 8007136:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800713a:	f009 fb09 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800713e:	4620      	mov	r0, r4
 8007140:	b00d      	add	sp, #52	; 0x34
 8007142:	ecbd 8b06 	vpop	{d8-d10}
 8007146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800714a:	bf00      	nop
 800714c:	20012e08 	.word	0x20012e08
 8007150:	0802c80a 	.word	0x0802c80a
 8007154:	0802c880 	.word	0x0802c880

08007158 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007158:	4770      	bx	lr

0800715a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800715a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800715c:	68c2      	ldr	r2, [r0, #12]
 800715e:	6844      	ldr	r4, [r0, #4]
 8007160:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007162:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007164:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007168:	07d2      	lsls	r2, r2, #31
 800716a:	bf48      	it	mi
 800716c:	5962      	ldrmi	r2, [r4, r5]
 800716e:	689b      	ldr	r3, [r3, #8]
    }
 8007170:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007172:	bf48      	it	mi
 8007174:	58d3      	ldrmi	r3, [r2, r3]
 8007176:	4718      	bx	r3

08007178 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007178:	6843      	ldr	r3, [r0, #4]
 800717a:	b12b      	cbz	r3, 8007188 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800717c:	6883      	ldr	r3, [r0, #8]
 800717e:	b92b      	cbnz	r3, 800718c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007180:	68c0      	ldr	r0, [r0, #12]
 8007182:	f000 0001 	and.w	r0, r0, #1
 8007186:	4770      	bx	lr
 8007188:	4618      	mov	r0, r3
 800718a:	4770      	bx	lr
 800718c:	2001      	movs	r0, #1
    }
 800718e:	4770      	bx	lr

08007190 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007190:	b510      	push	{r4, lr}
 8007192:	2110      	movs	r1, #16
 8007194:	4604      	mov	r4, r0
 8007196:	f022 fe92 	bl	8029ebe <_ZdlPvj>
 800719a:	4620      	mov	r0, r4
 800719c:	bd10      	pop	{r4, pc}

0800719e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800719e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80071a2:	f002 b93b 	b.w	800941c <_ZN17Gauge_with_Values10initializeEv>

080071a6 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80071a6:	3098      	adds	r0, #152	; 0x98
 80071a8:	4288      	cmp	r0, r1
{
 80071aa:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80071ac:	d105      	bne.n	80071ba <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80071ae:	f00e fd67 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80071b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80071b6:	f7fd bbdd 	b.w	8004974 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80071ba:	bd08      	pop	{r3, pc}

080071bc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80071bc:	b510      	push	{r4, lr}
 80071be:	4b07      	ldr	r3, [pc, #28]	; (80071dc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80071c0:	6003      	str	r3, [r0, #0]
 80071c2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80071c4:	f00d f85a 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80071c8:	4b05      	ldr	r3, [pc, #20]	; (80071e0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80071ca:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80071ce:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80071d2:	f7fe fe25 	bl	8005e20 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80071d6:	4620      	mov	r0, r4
 80071d8:	bd10      	pop	{r4, pc}
 80071da:	bf00      	nop
 80071dc:	0802e304 	.word	0x0802e304
 80071e0:	0802e86c 	.word	0x0802e86c

080071e4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80071e4:	b510      	push	{r4, lr}
 80071e6:	4604      	mov	r4, r0
}
 80071e8:	f7ff ffe8 	bl	80071bc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80071ec:	4620      	mov	r0, r4
 80071ee:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80071f2:	f022 fe64 	bl	8029ebe <_ZdlPvj>
 80071f6:	4620      	mov	r0, r4
 80071f8:	bd10      	pop	{r4, pc}
	...

080071fc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80071fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007200:	ed2d 8b04 	vpush	{d8-d9}
 8007204:	4604      	mov	r4, r0
 8007206:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007208:	46a1      	mov	r9, r4
 800720a:	2500      	movs	r5, #0
 800720c:	f010 f9b8 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8007210:	4bad      	ldr	r3, [pc, #692]	; (80074c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8007212:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007214:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007218:	2226      	movs	r2, #38	; 0x26
 800721a:	4629      	mov	r1, r5
 800721c:	4648      	mov	r0, r9
 800721e:	f023 ff3a 	bl	802b096 <memset>
 8007222:	4648      	mov	r0, r9
 8007224:	f7fb ff80 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8007228:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800722c:	26ff      	movs	r6, #255	; 0xff
 800722e:	4ba7      	ldr	r3, [pc, #668]	; (80074cc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8007230:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007232:	2226      	movs	r2, #38	; 0x26
 8007234:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007238:	4629      	mov	r1, r5
 800723a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800723e:	4640      	mov	r0, r8
 8007240:	66a5      	str	r5, [r4, #104]	; 0x68
 8007242:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007246:	f023 ff26 	bl	802b096 <memset>
 800724a:	4640      	mov	r0, r8
 800724c:	f7fb ff6c 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8007250:	4b9f      	ldr	r3, [pc, #636]	; (80074d0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8007252:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007254:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007258:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800725c:	a90a      	add	r1, sp, #40	; 0x28
 800725e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007262:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007264:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007268:	f00c f801 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800726c:	4658      	mov	r0, fp
 800726e:	f00c f93f 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007272:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8007276:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800727a:	4618      	mov	r0, r3
 800727c:	ee08 3a90 	vmov	s17, r3
 8007280:	f7fb ff64 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007284:	4638      	mov	r0, r7
 8007286:	f00a febb 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 800728a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800728e:	4618      	mov	r0, r3
 8007290:	9303      	str	r3, [sp, #12]
 8007292:	f7fb fd49 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007296:	4b8f      	ldr	r3, [pc, #572]	; (80074d4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8007298:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800729c:	3324      	adds	r3, #36	; 0x24
 800729e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80072a2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80072a6:	4618      	mov	r0, r3
 80072a8:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80072ac:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80072b0:	ee08 3a10 	vmov	s16, r3
 80072b4:	f7fb ff4a 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80072b8:	4650      	mov	r0, sl
 80072ba:	f7fb ff47 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80072be:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80072c2:	4618      	mov	r0, r3
 80072c4:	ee09 3a10 	vmov	s18, r3
 80072c8:	f002 f89e 	bl	8009408 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80072cc:	4a82      	ldr	r2, [pc, #520]	; (80074d8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
 80072ce:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80072d2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80072d6:	4a81      	ldr	r2, [pc, #516]	; (80074dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80072d8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80072dc:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80072e0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80072e4:	f00c ffc0 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80072e8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80072ec:	462a      	mov	r2, r5
 80072ee:	4648      	mov	r0, r9
 80072f0:	9300      	str	r3, [sp, #0]
 80072f2:	4629      	mov	r1, r5
 80072f4:	23f0      	movs	r3, #240	; 0xf0
 80072f6:	f7fb ff03 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80072fa:	1d26      	adds	r6, r4, #4
        color = newColor;
 80072fc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007300:	66a3      	str	r3, [r4, #104]	; 0x68
 8007302:	4649      	mov	r1, r9
 8007304:	4630      	mov	r0, r6
 8007306:	f009 fa23 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800730a:	462a      	mov	r2, r5
 800730c:	4640      	mov	r0, r8
 800730e:	4629      	mov	r1, r5
 8007310:	f7fb fee9 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007314:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007316:	4640      	mov	r0, r8
 8007318:	a90a      	add	r1, sp, #40	; 0x28
 800731a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800731e:	f00b ffa6 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007322:	4641      	mov	r1, r8
 8007324:	4630      	mov	r0, r6
 8007326:	f009 fa13 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800732a:	4658      	mov	r0, fp
 800732c:	f240 1201 	movw	r2, #257	; 0x101
 8007330:	2121      	movs	r1, #33	; 0x21
 8007332:	f7fb fed8 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007336:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007338:	aa0a      	add	r2, sp, #40	; 0x28
 800733a:	a909      	add	r1, sp, #36	; 0x24
 800733c:	4658      	mov	r0, fp
 800733e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007342:	2302      	movs	r3, #2
 8007344:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007348:	f00b fd9b 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800734c:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 800734e:	4658      	mov	r0, fp
 8007350:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8007354:	f7fb ff1c 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007358:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800735c:	3314      	adds	r3, #20
        color = col;
 800735e:	f04f 39ff 	mov.w	r9, #4294967295
 8007362:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007366:	4659      	mov	r1, fp
 8007368:	4630      	mov	r0, r6
        colorPressed = col;
 800736a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800736e:	f009 f9ef 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007372:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007376:	223c      	movs	r2, #60	; 0x3c
 8007378:	ee18 0a90 	vmov	r0, s17
 800737c:	2117      	movs	r1, #23
 800737e:	f7fb feb2 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007382:	ee18 1a90 	vmov	r1, s17
 8007386:	4640      	mov	r0, r8
        color = newColor;
 8007388:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800738c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007390:	f00b f8f8 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007394:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007398:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800739c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80073a0:	f04f 0b32 	mov.w	fp, #50	; 0x32
 80073a4:	4b4e      	ldr	r3, [pc, #312]	; (80074e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 80073a6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80073a8:	ee18 0a90 	vmov	r0, s17
 80073ac:	a90a      	add	r1, sp, #40	; 0x28
 80073ae:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80073b2:	f00b fb81 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073b6:	ee18 1a90 	vmov	r1, s17
 80073ba:	4630      	mov	r0, r6
 80073bc:	f009 f9c8 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80073c0:	230a      	movs	r3, #10
 80073c2:	9300      	str	r3, [sp, #0]
 80073c4:	465a      	mov	r2, fp
 80073c6:	23f0      	movs	r3, #240	; 0xf0
 80073c8:	4629      	mov	r1, r5
 80073ca:	4638      	mov	r0, r7
 80073cc:	f7fb fe98 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073d0:	9b03      	ldr	r3, [sp, #12]
 80073d2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80073d6:	22a0      	movs	r2, #160	; 0xa0
 80073d8:	4611      	mov	r1, r2
 80073da:	4638      	mov	r0, r7
 80073dc:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80073e0:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80073e4:	f00a ff22 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80073e8:	22a0      	movs	r2, #160	; 0xa0
 80073ea:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80073ee:	4638      	mov	r0, r7
 80073f0:	f00a ff27 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80073f4:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80073f8:	2b20      	cmp	r3, #32
 80073fa:	d005      	beq.n	8007408 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x20c>
        lineWidthQ5 = widthQ5;
 80073fc:	2320      	movs	r3, #32
 80073fe:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007402:	4638      	mov	r0, r7
 8007404:	f00a fe1c 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007408:	4638      	mov	r0, r7
 800740a:	2101      	movs	r1, #1
 800740c:	f00a ff24 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007410:	4639      	mov	r1, r7
 8007412:	4630      	mov	r0, r6
 8007414:	f009 f99c 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007418:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 800741a:	ee18 0a10 	vmov	r0, s16
 800741e:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8007420:	f04f 39ff 	mov.w	r9, #4294967295
 8007424:	2145      	movs	r1, #69	; 0x45
 8007426:	f7fb fe5e 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800742a:	ee18 1a10 	vmov	r1, s16
 800742e:	4640      	mov	r0, r8
        color = newColor;
 8007430:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8007434:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007438:	f00b f8a4 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800743c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007440:	ee18 3a10 	vmov	r3, s16
 8007444:	333c      	adds	r3, #60	; 0x3c
 8007446:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800744a:	4f25      	ldr	r7, [pc, #148]	; (80074e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 800744c:	970a      	str	r7, [sp, #40]	; 0x28
 800744e:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8007450:	ee18 0a10 	vmov	r0, s16
 8007454:	a90a      	add	r1, sp, #40	; 0x28
 8007456:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800745a:	f00b fb2d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800745e:	ee18 1a10 	vmov	r1, s16
 8007462:	4630      	mov	r0, r6
 8007464:	f009 f974 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007468:	220c      	movs	r2, #12
 800746a:	4650      	mov	r0, sl
 800746c:	2136      	movs	r1, #54	; 0x36
 800746e:	f7fb fe3a 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007472:	4651      	mov	r1, sl
 8007474:	4640      	mov	r0, r8
        color = newColor;
 8007476:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800747a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800747e:	f00b f881 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007482:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007486:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800748a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800748e:	2334      	movs	r3, #52	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8007490:	a90a      	add	r1, sp, #40	; 0x28
 8007492:	4650      	mov	r0, sl
 8007494:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007498:	970a      	str	r7, [sp, #40]	; 0x28
 800749a:	f00b fb0d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800749e:	4651      	mov	r1, sl
 80074a0:	4630      	mov	r0, r6
 80074a2:	f009 f955 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80074a6:	ee19 0a10 	vmov	r0, s18
 80074aa:	224e      	movs	r2, #78	; 0x4e
 80074ac:	4629      	mov	r1, r5
 80074ae:	f7fb fe1a 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80074b2:	4630      	mov	r0, r6
 80074b4:	ee19 1a10 	vmov	r1, s18
 80074b8:	f009 f94a 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80074bc:	4620      	mov	r0, r4
 80074be:	b00d      	add	sp, #52	; 0x34
 80074c0:	ecbd 8b04 	vpop	{d8-d9}
 80074c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80074c8:	0802e304 	.word	0x0802e304
 80074cc:	0802f1e0 	.word	0x0802f1e0
 80074d0:	0802f3a8 	.word	0x0802f3a8
 80074d4:	0802ef14 	.word	0x0802ef14
 80074d8:	0802e2ec 	.word	0x0802e2ec
 80074dc:	080071a7 	.word	0x080071a7
 80074e0:	0802c880 	.word	0x0802c880

080074e4 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80074e4:	4770      	bx	lr

080074e6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80074e6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80074e8:	68c2      	ldr	r2, [r0, #12]
 80074ea:	6844      	ldr	r4, [r0, #4]
 80074ec:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80074ee:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80074f0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80074f4:	07d2      	lsls	r2, r2, #31
 80074f6:	bf48      	it	mi
 80074f8:	5962      	ldrmi	r2, [r4, r5]
 80074fa:	689b      	ldr	r3, [r3, #8]
    }
 80074fc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80074fe:	bf48      	it	mi
 8007500:	58d3      	ldrmi	r3, [r2, r3]
 8007502:	4718      	bx	r3

08007504 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007504:	6843      	ldr	r3, [r0, #4]
 8007506:	b12b      	cbz	r3, 8007514 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007508:	6883      	ldr	r3, [r0, #8]
 800750a:	b92b      	cbnz	r3, 8007518 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800750c:	68c0      	ldr	r0, [r0, #12]
 800750e:	f000 0001 	and.w	r0, r0, #1
 8007512:	4770      	bx	lr
 8007514:	4618      	mov	r0, r3
 8007516:	4770      	bx	lr
 8007518:	2001      	movs	r0, #1
    }
 800751a:	4770      	bx	lr

0800751c <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800751c:	b510      	push	{r4, lr}
 800751e:	2110      	movs	r1, #16
 8007520:	4604      	mov	r4, r0
 8007522:	f022 fccc 	bl	8029ebe <_ZdlPvj>
 8007526:	4620      	mov	r0, r4
 8007528:	bd10      	pop	{r4, pc}

0800752a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800752a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800752e:	f001 bf75 	b.w	800941c <_ZN17Gauge_with_Values10initializeEv>

08007532 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007532:	3098      	adds	r0, #152	; 0x98
 8007534:	4288      	cmp	r0, r1
{
 8007536:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007538:	d105      	bne.n	8007546 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800753a:	f00e fba1 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800753e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007542:	f7fd ba17 	b.w	8004974 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007546:	bd08      	pop	{r3, pc}

08007548 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007548:	b510      	push	{r4, lr}
 800754a:	4b07      	ldr	r3, [pc, #28]	; (8007568 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 800754c:	6003      	str	r3, [r0, #0]
 800754e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007550:	f00c fe94 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8007554:	4b05      	ldr	r3, [pc, #20]	; (800756c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8007556:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800755a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800755e:	f7fe fc5f 	bl	8005e20 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8007562:	4620      	mov	r0, r4
 8007564:	bd10      	pop	{r4, pc}
 8007566:	bf00      	nop
 8007568:	0802e350 	.word	0x0802e350
 800756c:	0802e86c 	.word	0x0802e86c

08007570 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007570:	b510      	push	{r4, lr}
 8007572:	4604      	mov	r4, r0
}
 8007574:	f7ff ffe8 	bl	8007548 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8007578:	4620      	mov	r0, r4
 800757a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800757e:	f022 fc9e 	bl	8029ebe <_ZdlPvj>
 8007582:	4620      	mov	r0, r4
 8007584:	bd10      	pop	{r4, pc}
	...

08007588 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8007588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800758c:	ed2d 8b04 	vpush	{d8-d9}
 8007590:	4604      	mov	r4, r0
 8007592:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8007594:	46a1      	mov	r9, r4
 8007596:	2500      	movs	r5, #0
 8007598:	f00f fff2 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 800759c:	4bac      	ldr	r3, [pc, #688]	; (8007850 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800759e:	63e5      	str	r5, [r4, #60]	; 0x3c
 80075a0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80075a4:	2226      	movs	r2, #38	; 0x26
 80075a6:	4629      	mov	r1, r5
 80075a8:	4648      	mov	r0, r9
 80075aa:	f023 fd74 	bl	802b096 <memset>
 80075ae:	4648      	mov	r0, r9
 80075b0:	f7fb fdba 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 80075b4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80075b8:	26ff      	movs	r6, #255	; 0xff
 80075ba:	4ba6      	ldr	r3, [pc, #664]	; (8007854 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80075bc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80075be:	2226      	movs	r2, #38	; 0x26
 80075c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80075c4:	4629      	mov	r1, r5
 80075c6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80075ca:	4640      	mov	r0, r8
 80075cc:	66a5      	str	r5, [r4, #104]	; 0x68
 80075ce:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80075d2:	f023 fd60 	bl	802b096 <memset>
 80075d6:	4640      	mov	r0, r8
 80075d8:	f7fb fda6 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 80075dc:	4b9e      	ldr	r3, [pc, #632]	; (8007858 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80075de:	66e3      	str	r3, [r4, #108]	; 0x6c
 80075e0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80075e4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80075e8:	a90a      	add	r1, sp, #40	; 0x28
 80075ea:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80075ec:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80075f0:	f00b fe3d 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80075f4:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80075f8:	4618      	mov	r0, r3
 80075fa:	ee08 3a10 	vmov	s16, r3
 80075fe:	f00b ff77 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007602:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8007606:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800760a:	4618      	mov	r0, r3
 800760c:	ee08 3a90 	vmov	s17, r3
 8007610:	f7fb fd9c 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007614:	4638      	mov	r0, r7
 8007616:	f00a fcf3 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 800761a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800761e:	4618      	mov	r0, r3
 8007620:	9303      	str	r3, [sp, #12]
 8007622:	f7fb fb81 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007626:	4b8d      	ldr	r3, [pc, #564]	; (800785c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8007628:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800762c:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8007630:	3324      	adds	r3, #36	; 0x24
 8007632:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8007636:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800763a:	4658      	mov	r0, fp
 800763c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007640:	f7fb fd84 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007644:	4650      	mov	r0, sl
 8007646:	f7fb fd81 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 800764a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800764e:	4618      	mov	r0, r3
 8007650:	ee09 3a10 	vmov	s18, r3
 8007654:	f001 fed8 	bl	8009408 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007658:	4a81      	ldr	r2, [pc, #516]	; (8007860 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800765a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800765e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8007662:	4a80      	ldr	r2, [pc, #512]	; (8007864 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007664:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007668:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 800766c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007670:	f00c fdfa 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007674:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007678:	462a      	mov	r2, r5
 800767a:	4648      	mov	r0, r9
 800767c:	9300      	str	r3, [sp, #0]
 800767e:	4629      	mov	r1, r5
 8007680:	23f0      	movs	r3, #240	; 0xf0
 8007682:	f7fb fd3d 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007686:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007688:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800768c:	66a3      	str	r3, [r4, #104]	; 0x68
 800768e:	4649      	mov	r1, r9
 8007690:	4630      	mov	r0, r6
 8007692:	f009 f85d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007696:	462a      	mov	r2, r5
 8007698:	4640      	mov	r0, r8
 800769a:	4629      	mov	r1, r5
 800769c:	f7fb fd23 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80076a0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80076a2:	4640      	mov	r0, r8
 80076a4:	a90a      	add	r1, sp, #40	; 0x28
 80076a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076aa:	f00b fde0 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80076ae:	4641      	mov	r1, r8
 80076b0:	4630      	mov	r0, r6
 80076b2:	f009 f84d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80076b6:	ee18 0a10 	vmov	r0, s16
 80076ba:	f240 1201 	movw	r2, #257	; 0x101
 80076be:	2121      	movs	r1, #33	; 0x21
 80076c0:	f7fb fd11 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80076c4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076c6:	aa0a      	add	r2, sp, #40	; 0x28
 80076c8:	a909      	add	r1, sp, #36	; 0x24
 80076ca:	ee18 0a10 	vmov	r0, s16
 80076ce:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076d2:	2302      	movs	r3, #2
 80076d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076d8:	f00b fbd3 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80076dc:	232d      	movs	r3, #45	; 0x2d
        updateTextPosition();
 80076de:	ee18 0a10 	vmov	r0, s16
 80076e2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80076e6:	f7fb fd53 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80076ea:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80076ee:	3314      	adds	r3, #20
        color = col;
 80076f0:	f04f 39ff 	mov.w	r9, #4294967295
 80076f4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80076f8:	ee18 1a10 	vmov	r1, s16
 80076fc:	4630      	mov	r0, r6
        colorPressed = col;
 80076fe:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8007702:	f009 f825 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007706:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800770a:	223c      	movs	r2, #60	; 0x3c
 800770c:	ee18 0a90 	vmov	r0, s17
 8007710:	2117      	movs	r1, #23
 8007712:	f7fb fce8 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007716:	ee18 1a90 	vmov	r1, s17
 800771a:	4640      	mov	r0, r8
        color = newColor;
 800771c:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8007720:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007724:	f00a ff2e 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007728:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800772c:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007730:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007734:	4b4c      	ldr	r3, [pc, #304]	; (8007868 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8007736:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8007738:	ee18 0a90 	vmov	r0, s17
 800773c:	232e      	movs	r3, #46	; 0x2e
 800773e:	a90a      	add	r1, sp, #40	; 0x28
 8007740:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007744:	f00b f9b8 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007748:	ee18 1a90 	vmov	r1, s17
 800774c:	4630      	mov	r0, r6
 800774e:	f008 ffff 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007752:	230a      	movs	r3, #10
 8007754:	9300      	str	r3, [sp, #0]
 8007756:	2232      	movs	r2, #50	; 0x32
 8007758:	23f0      	movs	r3, #240	; 0xf0
 800775a:	4629      	mov	r1, r5
 800775c:	4638      	mov	r0, r7
 800775e:	f7fb fccf 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007762:	9b03      	ldr	r3, [sp, #12]
 8007764:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007768:	22a0      	movs	r2, #160	; 0xa0
 800776a:	4611      	mov	r1, r2
 800776c:	4638      	mov	r0, r7
 800776e:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007772:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007776:	f00a fd59 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800777a:	22a0      	movs	r2, #160	; 0xa0
 800777c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007780:	4638      	mov	r0, r7
 8007782:	f00a fd5e 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007786:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800778a:	2b20      	cmp	r3, #32
 800778c:	d005      	beq.n	800779a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800778e:	2320      	movs	r3, #32
 8007790:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007794:	4638      	mov	r0, r7
 8007796:	f00a fc53 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800779a:	4638      	mov	r0, r7
 800779c:	2101      	movs	r1, #1
 800779e:	f00a fd5b 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80077a2:	4639      	mov	r1, r7
 80077a4:	4630      	mov	r0, r6
 80077a6:	f008 ffd3 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80077aa:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80077ac:	2223      	movs	r2, #35	; 0x23
 80077ae:	4658      	mov	r0, fp
        color = newColor;
 80077b0:	f04f 39ff 	mov.w	r9, #4294967295
 80077b4:	2145      	movs	r1, #69	; 0x45
 80077b6:	f7fb fc96 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80077ba:	4659      	mov	r1, fp
 80077bc:	4640      	mov	r0, r8
        color = newColor;
 80077be:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80077c2:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80077c6:	f00a fedd 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80077ca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80077ce:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80077d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80077d6:	4f24      	ldr	r7, [pc, #144]	; (8007868 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80077d8:	970a      	str	r7, [sp, #40]	; 0x28
 80077da:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80077dc:	a90a      	add	r1, sp, #40	; 0x28
 80077de:	4658      	mov	r0, fp
 80077e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077e4:	f00b f968 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077e8:	4659      	mov	r1, fp
 80077ea:	4630      	mov	r0, r6
 80077ec:	f008 ffb0 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80077f0:	220c      	movs	r2, #12
 80077f2:	4650      	mov	r0, sl
 80077f4:	2136      	movs	r1, #54	; 0x36
 80077f6:	f7fb fc76 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80077fa:	4651      	mov	r1, sl
 80077fc:	4640      	mov	r0, r8
        color = newColor;
 80077fe:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8007802:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8007806:	f00a febd 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800780a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800780e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007812:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007816:	2330      	movs	r3, #48	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8007818:	a90a      	add	r1, sp, #40	; 0x28
 800781a:	4650      	mov	r0, sl
 800781c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007820:	970a      	str	r7, [sp, #40]	; 0x28
 8007822:	f00b f949 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007826:	4651      	mov	r1, sl
 8007828:	4630      	mov	r0, r6
 800782a:	f008 ff91 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800782e:	ee19 0a10 	vmov	r0, s18
 8007832:	224e      	movs	r2, #78	; 0x4e
 8007834:	4629      	mov	r1, r5
 8007836:	f7fb fc56 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800783a:	4630      	mov	r0, r6
 800783c:	ee19 1a10 	vmov	r1, s18
 8007840:	f008 ff86 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007844:	4620      	mov	r0, r4
 8007846:	b00d      	add	sp, #52	; 0x34
 8007848:	ecbd 8b04 	vpop	{d8-d9}
 800784c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007850:	0802e350 	.word	0x0802e350
 8007854:	0802f1e0 	.word	0x0802f1e0
 8007858:	0802f3a8 	.word	0x0802f3a8
 800785c:	0802ef14 	.word	0x0802ef14
 8007860:	0802e338 	.word	0x0802e338
 8007864:	08007533 	.word	0x08007533
 8007868:	0802c880 	.word	0x0802c880

0800786c <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 800786c:	4770      	bx	lr

0800786e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800786e:	4770      	bx	lr

08007870 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007870:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007872:	68c2      	ldr	r2, [r0, #12]
 8007874:	6844      	ldr	r4, [r0, #4]
 8007876:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007878:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800787a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800787e:	07d2      	lsls	r2, r2, #31
 8007880:	bf48      	it	mi
 8007882:	5962      	ldrmi	r2, [r4, r5]
 8007884:	689b      	ldr	r3, [r3, #8]
    }
 8007886:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007888:	bf48      	it	mi
 800788a:	58d3      	ldrmi	r3, [r2, r3]
 800788c:	4718      	bx	r3

0800788e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800788e:	6843      	ldr	r3, [r0, #4]
 8007890:	b12b      	cbz	r3, 800789e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007892:	6883      	ldr	r3, [r0, #8]
 8007894:	b92b      	cbnz	r3, 80078a2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007896:	68c0      	ldr	r0, [r0, #12]
 8007898:	f000 0001 	and.w	r0, r0, #1
 800789c:	4770      	bx	lr
 800789e:	4618      	mov	r0, r3
 80078a0:	4770      	bx	lr
 80078a2:	2001      	movs	r0, #1
    }
 80078a4:	4770      	bx	lr

080078a6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078a6:	b510      	push	{r4, lr}
 80078a8:	2110      	movs	r1, #16
 80078aa:	4604      	mov	r4, r0
 80078ac:	f022 fb07 	bl	8029ebe <_ZdlPvj>
 80078b0:	4620      	mov	r0, r4
 80078b2:	bd10      	pop	{r4, pc}

080078b4 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80078b4:	b510      	push	{r4, lr}
 80078b6:	4b03      	ldr	r3, [pc, #12]	; (80078c4 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80078b8:	6003      	str	r3, [r0, #0]
 80078ba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80078bc:	f00c fcde 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80078c0:	4620      	mov	r0, r4
 80078c2:	bd10      	pop	{r4, pc}
 80078c4:	0802e39c 	.word	0x0802e39c

080078c8 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80078c8:	b507      	push	{r0, r1, r2, lr}
 80078ca:	4b07      	ldr	r3, [pc, #28]	; (80078e8 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80078cc:	6003      	str	r3, [r0, #0]
 80078ce:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80078d0:	f00c fcd4 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80078d4:	9801      	ldr	r0, [sp, #4]
 80078d6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80078da:	f022 faf0 	bl	8029ebe <_ZdlPvj>
 80078de:	9801      	ldr	r0, [sp, #4]
 80078e0:	b003      	add	sp, #12
 80078e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80078e6:	bf00      	nop
 80078e8:	0802e39c 	.word	0x0802e39c

080078ec <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80078ec:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80078ee:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80078f2:	4299      	cmp	r1, r3
{
 80078f4:	4604      	mov	r4, r0
 80078f6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80078f8:	d103      	bne.n	8007902 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80078fa:	f00e f9c1 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80078fe:	f7fc ffe9 	bl	80048d4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8007902:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007906:	429d      	cmp	r5, r3
 8007908:	d103      	bne.n	8007912 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800790a:	f00e f9b9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 800790e:	f7fd f801 	bl	8004914 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8007912:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8007916:	42a5      	cmp	r5, r4
 8007918:	d105      	bne.n	8007926 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800791a:	f00e f9b1 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 800791e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8007922:	f7fd b807 	b.w	8004934 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8007926:	bd38      	pop	{r3, r4, r5, pc}

08007928 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800792c:	ed2d 8b06 	vpush	{d8-d10}
 8007930:	4604      	mov	r4, r0
 8007932:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8007934:	46a3      	mov	fp, r4
 8007936:	2500      	movs	r5, #0
 8007938:	f00f fe22 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 800793c:	4b66      	ldr	r3, [pc, #408]	; (8007ad8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 800793e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007940:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007944:	2226      	movs	r2, #38	; 0x26
 8007946:	4629      	mov	r1, r5
 8007948:	4658      	mov	r0, fp
 800794a:	f023 fba4 	bl	802b096 <memset>
 800794e:	4658      	mov	r0, fp
 8007950:	f7fb fbea 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8007954:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007958:	26ff      	movs	r6, #255	; 0xff
 800795a:	4b60      	ldr	r3, [pc, #384]	; (8007adc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 800795c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800795e:	2226      	movs	r2, #38	; 0x26
 8007960:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007964:	4629      	mov	r1, r5
 8007966:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800796a:	4650      	mov	r0, sl
 800796c:	66a5      	str	r5, [r4, #104]	; 0x68
 800796e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007972:	f023 fb90 	bl	802b096 <memset>
 8007976:	4650      	mov	r0, sl
 8007978:	f7fb fbd6 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 800797c:	4b58      	ldr	r3, [pc, #352]	; (8007ae0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 800797e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007980:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007984:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007988:	a90a      	add	r1, sp, #40	; 0x28
 800798a:	4650      	mov	r0, sl
 800798c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007990:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007994:	f00b fc6b 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007998:	4648      	mov	r0, r9
 800799a:	f7fb fbd7 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800799e:	4b51      	ldr	r3, [pc, #324]	; (8007ae4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 80079a0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80079a4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80079a8:	4618      	mov	r0, r3
 80079aa:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80079ae:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80079b2:	ee08 3a90 	vmov	s17, r3
 80079b6:	f7fb fbc9 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80079ba:	4638      	mov	r0, r7
 80079bc:	f00a fb20 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 80079c0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80079c4:	4618      	mov	r0, r3
 80079c6:	9303      	str	r3, [sp, #12]
 80079c8:	f7fb f9ae 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80079cc:	4b46      	ldr	r3, [pc, #280]	; (8007ae8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80079ce:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80079d2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80079d6:	3324      	adds	r3, #36	; 0x24
 80079d8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80079dc:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80079e0:	4640      	mov	r0, r8
 80079e2:	f7fb fbb3 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80079e6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80079ea:	4618      	mov	r0, r3
 80079ec:	ee08 3a10 	vmov	s16, r3
 80079f0:	f7fb fbac 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80079f4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80079f8:	4618      	mov	r0, r3
 80079fa:	ee09 3a10 	vmov	s18, r3
 80079fe:	f00b fd77 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007a02:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007a06:	4618      	mov	r0, r3
 8007a08:	ee09 3a90 	vmov	s19, r3
 8007a0c:	f00b fd70 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007a10:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007a14:	4618      	mov	r0, r3
 8007a16:	ee0a 3a10 	vmov	s20, r3
 8007a1a:	f00b fd69 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007a1e:	4a33      	ldr	r2, [pc, #204]	; (8007aec <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8007a20:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007a24:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007a28:	4a31      	ldr	r2, [pc, #196]	; (8007af0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007a2a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007a2e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8007a32:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8007a36:	f00c fc17 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007a3a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007a3e:	462a      	mov	r2, r5
 8007a40:	4658      	mov	r0, fp
 8007a42:	9300      	str	r3, [sp, #0]
 8007a44:	4629      	mov	r1, r5
 8007a46:	23f0      	movs	r3, #240	; 0xf0
 8007a48:	f7fb fb5a 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a4c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007a4e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007a52:	66a3      	str	r3, [r4, #104]	; 0x68
 8007a54:	4659      	mov	r1, fp
 8007a56:	4630      	mov	r0, r6
 8007a58:	f008 fe7a 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007a5c:	462a      	mov	r2, r5
 8007a5e:	4650      	mov	r0, sl
 8007a60:	4629      	mov	r1, r5
 8007a62:	f7fb fb40 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007a66:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007a68:	4650      	mov	r0, sl
 8007a6a:	a90a      	add	r1, sp, #40	; 0x28
 8007a6c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007a70:	f00b fbfd 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007a74:	4651      	mov	r1, sl
 8007a76:	4630      	mov	r0, r6
 8007a78:	f008 fe6a 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007a7c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007a80:	2156      	movs	r1, #86	; 0x56
 8007a82:	4648      	mov	r0, r9
 8007a84:	f7fb fb2f 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007a88:	f04f 33ff 	mov.w	r3, #4294967295
 8007a8c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007a90:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007a94:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007a98:	f10d 0b10 	add.w	fp, sp, #16
 8007a9c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007aa0:	4649      	mov	r1, r9
 8007aa2:	4658      	mov	r0, fp
 8007aa4:	4798      	blx	r3
 8007aa6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007aaa:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007aae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007ab2:	4b10      	ldr	r3, [pc, #64]	; (8007af4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007ab4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007ab6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007aba:	b92b      	cbnz	r3, 8007ac8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007abc:	4b0e      	ldr	r3, [pc, #56]	; (8007af8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007abe:	4a0f      	ldr	r2, [pc, #60]	; (8007afc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007ac0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ac2:	480f      	ldr	r0, [pc, #60]	; (8007b00 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007ac4:	f023 f8e2 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007ac8:	4b0e      	ldr	r3, [pc, #56]	; (8007b04 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007aca:	881b      	ldrh	r3, [r3, #0]
 8007acc:	2b28      	cmp	r3, #40	; 0x28
 8007ace:	d81d      	bhi.n	8007b0c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007ad0:	4b0d      	ldr	r3, [pc, #52]	; (8007b08 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007ad2:	4a0a      	ldr	r2, [pc, #40]	; (8007afc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007ad4:	2161      	movs	r1, #97	; 0x61
 8007ad6:	e7f4      	b.n	8007ac2 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007ad8:	0802e39c 	.word	0x0802e39c
 8007adc:	0802f1e0 	.word	0x0802f1e0
 8007ae0:	0802f3a8 	.word	0x0802f3a8
 8007ae4:	0802c890 	.word	0x0802c890
 8007ae8:	0802ef14 	.word	0x0802ef14
 8007aec:	0802e384 	.word	0x0802e384
 8007af0:	080078ed 	.word	0x080078ed
 8007af4:	20012dfc 	.word	0x20012dfc
 8007af8:	0802c6d0 	.word	0x0802c6d0
 8007afc:	0802c7d2 	.word	0x0802c7d2
 8007b00:	0802c74d 	.word	0x0802c74d
 8007b04:	20012e00 	.word	0x20012e00
 8007b08:	0802c794 	.word	0x0802c794
        return texts->getText(typedTextId);
 8007b0c:	4b95      	ldr	r3, [pc, #596]	; (8007d64 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8007b0e:	2128      	movs	r1, #40	; 0x28
 8007b10:	6818      	ldr	r0, [r3, #0]
 8007b12:	f001 facb 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8007b16:	4a94      	ldr	r2, [pc, #592]	; (8007d68 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007b18:	4603      	mov	r3, r0
 8007b1a:	2104      	movs	r1, #4
 8007b1c:	4650      	mov	r0, sl
 8007b1e:	f011 fa1f 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007b22:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8007b26:	4648      	mov	r0, r9
 8007b28:	f00a ffa6 	bl	8012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007b2c:	f04f 0a29 	mov.w	sl, #41	; 0x29
 8007b30:	4b8e      	ldr	r3, [pc, #568]	; (8007d6c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007b32:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8007b34:	a90a      	add	r1, sp, #40	; 0x28
 8007b36:	4648      	mov	r0, r9
 8007b38:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8007b3c:	f00a ffbc 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b40:	4649      	mov	r1, r9
 8007b42:	4630      	mov	r0, r6
 8007b44:	f008 fe04 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8007b48:	ee18 0a90 	vmov	r0, s17
 8007b4c:	223c      	movs	r2, #60	; 0x3c
 8007b4e:	4651      	mov	r1, sl
 8007b50:	f7fb fac9 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007b54:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007b58:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8007b5c:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007b60:	4658      	mov	r0, fp
        linespace = space;
 8007b62:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007b66:	f00a fd0d 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b6a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007b6e:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007b72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b76:	4b7d      	ldr	r3, [pc, #500]	; (8007d6c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007b78:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007b7a:	ee18 0a90 	vmov	r0, s17
 8007b7e:	2338      	movs	r3, #56	; 0x38
 8007b80:	a90a      	add	r1, sp, #40	; 0x28
 8007b82:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b86:	f00a ff97 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b8a:	ee18 1a90 	vmov	r1, s17
 8007b8e:	4630      	mov	r0, r6
 8007b90:	f008 fdde 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007b94:	230a      	movs	r3, #10
 8007b96:	9300      	str	r3, [sp, #0]
 8007b98:	2232      	movs	r2, #50	; 0x32
 8007b9a:	23f0      	movs	r3, #240	; 0xf0
 8007b9c:	4629      	mov	r1, r5
 8007b9e:	4638      	mov	r0, r7
 8007ba0:	f7fb faae 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ba4:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ba8:	22a0      	movs	r2, #160	; 0xa0
 8007baa:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007bae:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007bb2:	9b03      	ldr	r3, [sp, #12]
 8007bb4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007bb8:	4611      	mov	r1, r2
 8007bba:	4638      	mov	r0, r7
 8007bbc:	f00a fb36 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007bc0:	22a0      	movs	r2, #160	; 0xa0
 8007bc2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007bc6:	4638      	mov	r0, r7
 8007bc8:	f00a fb3b 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007bcc:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007bd0:	2b20      	cmp	r3, #32
 8007bd2:	d005      	beq.n	8007be0 <_ZN26Measurement_SingleViewBaseC1Ev+0x2b8>
        lineWidthQ5 = widthQ5;
 8007bd4:	2320      	movs	r3, #32
 8007bd6:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007bda:	4638      	mov	r0, r7
 8007bdc:	f00a fa30 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007be0:	4638      	mov	r0, r7
 8007be2:	2101      	movs	r1, #1
 8007be4:	f00a fb38 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007be8:	4639      	mov	r1, r7
 8007bea:	4630      	mov	r0, r6
 8007bec:	f008 fdb0 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007bf0:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007bf4:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007bf6:	2223      	movs	r2, #35	; 0x23
 8007bf8:	4640      	mov	r0, r8
        linespace = space;
 8007bfa:	f04f 0a00 	mov.w	sl, #0
 8007bfe:	2145      	movs	r1, #69	; 0x45
 8007c00:	f7fb fa71 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007c04:	4641      	mov	r1, r8
 8007c06:	4638      	mov	r0, r7
        color = newColor;
 8007c08:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007c0c:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007c10:	f00a fcb8 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c14:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c18:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007c1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c20:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007d6c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007c24:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c28:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007c2a:	a90a      	add	r1, sp, #40	; 0x28
 8007c2c:	4640      	mov	r0, r8
 8007c2e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c32:	f00a ff41 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c36:	4641      	mov	r1, r8
 8007c38:	4630      	mov	r0, r6
 8007c3a:	f008 fd89 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007c3e:	ee18 0a10 	vmov	r0, s16
 8007c42:	220c      	movs	r2, #12
 8007c44:	2136      	movs	r1, #54	; 0x36
 8007c46:	f7fb fa4e 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007c4a:	ee18 1a10 	vmov	r1, s16
 8007c4e:	4638      	mov	r0, r7
        color = newColor;
 8007c50:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007c54:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007c58:	f00a fc94 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c5c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c60:	ee18 3a10 	vmov	r3, s16
 8007c64:	333c      	adds	r3, #60	; 0x3c
 8007c66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c6a:	2350      	movs	r3, #80	; 0x50
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007c6c:	ee18 0a10 	vmov	r0, s16
 8007c70:	a90a      	add	r1, sp, #40	; 0x28
 8007c72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c76:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c7a:	f00a ff1d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c7e:	ee18 1a10 	vmov	r1, s16
 8007c82:	4630      	mov	r0, r6
 8007c84:	f008 fd64 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007c88:	ee19 0a10 	vmov	r0, s18
 8007c8c:	22f0      	movs	r2, #240	; 0xf0
 8007c8e:	2121      	movs	r1, #33	; 0x21
 8007c90:	f7fb fa29 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007c94:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c98:	aa0a      	add	r2, sp, #40	; 0x28
 8007c9a:	f04f 0802 	mov.w	r8, #2
 8007c9e:	a909      	add	r1, sp, #36	; 0x24
 8007ca0:	ee19 0a10 	vmov	r0, s18
 8007ca4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007ca8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007cac:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007cb0:	f00b f8e7 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007cb4:	234f      	movs	r3, #79	; 0x4f
 8007cb6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007cba:	3710      	adds	r7, #16
        updateTextPosition();
 8007cbc:	ee19 0a10 	vmov	r0, s18
 8007cc0:	f7fb fa66 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007cc4:	ee19 1a10 	vmov	r1, s18
 8007cc8:	4630      	mov	r0, r6
        colorPressed = col;
 8007cca:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007cce:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007cd2:	f008 fd3d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007cd6:	ee19 0a90 	vmov	r0, s19
 8007cda:	22aa      	movs	r2, #170	; 0xaa
 8007cdc:	2121      	movs	r1, #33	; 0x21
 8007cde:	f7fb fa02 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007ce2:	aa0a      	add	r2, sp, #40	; 0x28
 8007ce4:	a909      	add	r1, sp, #36	; 0x24
 8007ce6:	ee19 0a90 	vmov	r0, s19
 8007cea:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007cee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007cf2:	f00b f8c6 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007cf6:	234e      	movs	r3, #78	; 0x4e
 8007cf8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007cfc:	ee19 0a90 	vmov	r0, s19
 8007d00:	f7fb fa46 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007d04:	ee19 1a90 	vmov	r1, s19
 8007d08:	4630      	mov	r0, r6
        colorPressed = col;
 8007d0a:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007d0e:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007d12:	f008 fd1d 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007d16:	ee1a 0a10 	vmov	r0, s20
 8007d1a:	2264      	movs	r2, #100	; 0x64
 8007d1c:	2121      	movs	r1, #33	; 0x21
 8007d1e:	f7fb f9e2 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007d22:	aa0a      	add	r2, sp, #40	; 0x28
 8007d24:	a909      	add	r1, sp, #36	; 0x24
 8007d26:	ee1a 0a10 	vmov	r0, s20
 8007d2a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007d2e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007d32:	f00b f8a6 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007d36:	234d      	movs	r3, #77	; 0x4d
        updateTextPosition();
 8007d38:	ee1a 0a10 	vmov	r0, s20
 8007d3c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007d40:	f7fb fa26 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007d44:	4630      	mov	r0, r6
        colorPressed = col;
 8007d46:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007d4a:	ee1a 1a10 	vmov	r1, s20
 8007d4e:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007d52:	f008 fcfd 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d56:	4620      	mov	r0, r4
 8007d58:	b00d      	add	sp, #52	; 0x34
 8007d5a:	ecbd 8b06 	vpop	{d8-d10}
 8007d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d62:	bf00      	nop
 8007d64:	20012e08 	.word	0x20012e08
 8007d68:	0802c80a 	.word	0x0802c80a
 8007d6c:	0802c880 	.word	0x0802c880

08007d70 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007d70:	4770      	bx	lr

08007d72 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007d72:	4770      	bx	lr

08007d74 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007d74:	4770      	bx	lr

08007d76 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007d76:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d78:	68c2      	ldr	r2, [r0, #12]
 8007d7a:	6844      	ldr	r4, [r0, #4]
 8007d7c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007d7e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007d80:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007d84:	07d2      	lsls	r2, r2, #31
 8007d86:	bf48      	it	mi
 8007d88:	5962      	ldrmi	r2, [r4, r5]
 8007d8a:	689b      	ldr	r3, [r3, #8]
    }
 8007d8c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d8e:	bf48      	it	mi
 8007d90:	58d3      	ldrmi	r3, [r2, r3]
 8007d92:	4718      	bx	r3

08007d94 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007d94:	6843      	ldr	r3, [r0, #4]
 8007d96:	b12b      	cbz	r3, 8007da4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007d98:	6883      	ldr	r3, [r0, #8]
 8007d9a:	b92b      	cbnz	r3, 8007da8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007d9c:	68c0      	ldr	r0, [r0, #12]
 8007d9e:	f000 0001 	and.w	r0, r0, #1
 8007da2:	4770      	bx	lr
 8007da4:	4618      	mov	r0, r3
 8007da6:	4770      	bx	lr
 8007da8:	2001      	movs	r0, #1
    }
 8007daa:	4770      	bx	lr

08007dac <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007dac:	b510      	push	{r4, lr}
 8007dae:	2110      	movs	r1, #16
 8007db0:	4604      	mov	r4, r0
 8007db2:	f022 f884 	bl	8029ebe <_ZdlPvj>
 8007db6:	4620      	mov	r0, r4
 8007db8:	bd10      	pop	{r4, pc}
	...

08007dbc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007dbc:	b510      	push	{r4, lr}
 8007dbe:	4b03      	ldr	r3, [pc, #12]	; (8007dcc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007dc0:	6003      	str	r3, [r0, #0]
 8007dc2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007dc4:	f00c fa5a 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007dc8:	4620      	mov	r0, r4
 8007dca:	bd10      	pop	{r4, pc}
 8007dcc:	0802e3e8 	.word	0x0802e3e8

08007dd0 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007dd0:	b507      	push	{r0, r1, r2, lr}
 8007dd2:	4b07      	ldr	r3, [pc, #28]	; (8007df0 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007dd4:	6003      	str	r3, [r0, #0]
 8007dd6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007dd8:	f00c fa50 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007ddc:	9801      	ldr	r0, [sp, #4]
 8007dde:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007de2:	f022 f86c 	bl	8029ebe <_ZdlPvj>
 8007de6:	9801      	ldr	r0, [sp, #4]
 8007de8:	b003      	add	sp, #12
 8007dea:	f85d fb04 	ldr.w	pc, [sp], #4
 8007dee:	bf00      	nop
 8007df0:	0802e3e8 	.word	0x0802e3e8

08007df4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007df4:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007df6:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007dfa:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8007dfe:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007e00:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007e02:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007e06:	d105      	bne.n	8007e14 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007e08:	6803      	ldr	r3, [r0, #0]
 8007e0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e0c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8007e0e:	2300      	movs	r3, #0
 8007e10:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007e14:	bd10      	pop	{r4, pc}

08007e16 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007e16:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007e1a:	4288      	cmp	r0, r1
{
 8007e1c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007e1e:	d105      	bne.n	8007e2c <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007e20:	f00d ff2e 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007e24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007e28:	f7fc bd64 	b.w	80048f4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007e2c:	bd08      	pop	{r3, pc}
	...

08007e30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e34:	ed2d 8b0a 	vpush	{d8-d12}
 8007e38:	4604      	mov	r4, r0
 8007e3a:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007e3c:	46a1      	mov	r9, r4
 8007e3e:	2500      	movs	r5, #0
 8007e40:	f00f fb9e 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8007e44:	4ba9      	ldr	r3, [pc, #676]	; (80080ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8007e46:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007e48:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007e4c:	2226      	movs	r2, #38	; 0x26
 8007e4e:	4629      	mov	r1, r5
 8007e50:	4648      	mov	r0, r9
 8007e52:	f023 f920 	bl	802b096 <memset>
 8007e56:	4648      	mov	r0, r9
 8007e58:	f7fb f966 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8007e5c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007e60:	26ff      	movs	r6, #255	; 0xff
 8007e62:	4ba3      	ldr	r3, [pc, #652]	; (80080f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007e64:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007e66:	2226      	movs	r2, #38	; 0x26
 8007e68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007e6c:	4629      	mov	r1, r5
 8007e6e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007e72:	4640      	mov	r0, r8
 8007e74:	66a5      	str	r5, [r4, #104]	; 0x68
 8007e76:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e7a:	f023 f90c 	bl	802b096 <memset>
 8007e7e:	4640      	mov	r0, r8
 8007e80:	f7fb f952 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8007e84:	4b9b      	ldr	r3, [pc, #620]	; (80080f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007e86:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007e88:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007e8c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007e90:	a90a      	add	r1, sp, #40	; 0x28
 8007e92:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007e96:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007e98:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007e9c:	f00b f9e7 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007ea0:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007ea4:	4658      	mov	r0, fp
 8007ea6:	f7fb f951 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007eaa:	4638      	mov	r0, r7
 8007eac:	f00a fea2 	bl	8012bf4 <_ZN8touchgfx5GaugeC1Ev>
 8007eb0:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007eb4:	4618      	mov	r0, r3
 8007eb6:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007eba:	4e8f      	ldr	r6, [pc, #572]	; (80080f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8007ebc:	f7fb f946 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007ec0:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007ec4:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007ec8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007eca:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8007ece:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007ed2:	f7fb f93b 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007ed6:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007eda:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8007ede:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007ee0:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007ee4:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007ee8:	f7fb f930 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007eec:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007ef0:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007ef4:	4618      	mov	r0, r3
 8007ef6:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007efa:	ee0a 3a90 	vmov	s21, r3
 8007efe:	f7fb f925 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007f02:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007f06:	4618      	mov	r0, r3
 8007f08:	ee0b 3a10 	vmov	s22, r3
 8007f0c:	f7fb f91e 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007f10:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007f14:	4618      	mov	r0, r3
 8007f16:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8007f1a:	ee0b 3a90 	vmov	s23, r3
 8007f1e:	f7fb f915 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007f22:	4650      	mov	r0, sl
 8007f24:	f00a f86c 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 8007f28:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007f2c:	4618      	mov	r0, r3
 8007f2e:	9303      	str	r3, [sp, #12]
 8007f30:	f7fa fefa 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f34:	4b71      	ldr	r3, [pc, #452]	; (80080fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007f36:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8007f3a:	3324      	adds	r3, #36	; 0x24
 8007f3c:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007f40:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007f44:	4618      	mov	r0, r3
 8007f46:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007f4a:	ee08 3a10 	vmov	s16, r3
 8007f4e:	f7fb f8fd 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007f52:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007f56:	4618      	mov	r0, r3
 8007f58:	ee08 3a90 	vmov	s17, r3
 8007f5c:	f7fb f8f6 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8007f60:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007f64:	4618      	mov	r0, r3
 8007f66:	ee0c 3a10 	vmov	s24, r3
 8007f6a:	f00b fac1 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007f6e:	4a64      	ldr	r2, [pc, #400]	; (8008100 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007f70:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007f74:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007f78:	4a62      	ldr	r2, [pc, #392]	; (8008104 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007f7a:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007f7e:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007f82:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007f86:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007f8a:	f00c f96d 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007f8e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007f92:	462a      	mov	r2, r5
 8007f94:	4648      	mov	r0, r9
 8007f96:	9300      	str	r3, [sp, #0]
 8007f98:	4629      	mov	r1, r5
 8007f9a:	23f0      	movs	r3, #240	; 0xf0
 8007f9c:	f7fb f8b0 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fa0:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007fa2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007fa6:	66a3      	str	r3, [r4, #104]	; 0x68
 8007fa8:	4649      	mov	r1, r9
 8007faa:	4630      	mov	r0, r6
 8007fac:	f008 fbd0 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007fb0:	462a      	mov	r2, r5
 8007fb2:	4640      	mov	r0, r8
 8007fb4:	4629      	mov	r1, r5
 8007fb6:	f7fb f896 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007fba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007fbc:	4640      	mov	r0, r8
 8007fbe:	a90a      	add	r1, sp, #40	; 0x28
 8007fc0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007fc4:	f00b f953 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007fc8:	4641      	mov	r1, r8
 8007fca:	4630      	mov	r0, r6
 8007fcc:	f008 fbc0 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007fd0:	223c      	movs	r2, #60	; 0x3c
 8007fd2:	211f      	movs	r1, #31
 8007fd4:	4658      	mov	r0, fp
 8007fd6:	f7fb f886 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8007fda:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8007fde:	f04f 33ff 	mov.w	r3, #4294967295
 8007fe2:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007fe6:	4659      	mov	r1, fp
 8007fe8:	4640      	mov	r0, r8
        linespace = space;
 8007fea:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007fee:	f00a fac9 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ff2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007ff6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007ffa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007ffe:	4b42      	ldr	r3, [pc, #264]	; (8008108 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8008000:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8008002:	a90a      	add	r1, sp, #40	; 0x28
 8008004:	2337      	movs	r3, #55	; 0x37
 8008006:	4658      	mov	r0, fp
 8008008:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800800c:	f00a fd54 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008010:	4659      	mov	r1, fp
 8008012:	4630      	mov	r0, r6
 8008014:	f008 fb9c 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008018:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800801a:	4638      	mov	r0, r7
 800801c:	a90a      	add	r1, sp, #40	; 0x28
 800801e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008022:	f008 fb27 	bl	8010674 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8008026:	236a      	movs	r3, #106	; 0x6a
 8008028:	4638      	mov	r0, r7
 800802a:	9300      	str	r3, [sp, #0]
 800802c:	225e      	movs	r2, #94	; 0x5e
 800802e:	23b8      	movs	r3, #184	; 0xb8
 8008030:	211c      	movs	r1, #28
 8008032:	f7fb f865 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8008036:	225c      	movs	r2, #92	; 0x5c
 8008038:	4611      	mov	r1, r2
 800803a:	4638      	mov	r0, r7
 800803c:	f00a fe85 	bl	8012d4a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8008040:	4638      	mov	r0, r7
 8008042:	225a      	movs	r2, #90	; 0x5a
 8008044:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008048:	f00a ff04 	bl	8012e54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800804c:	462b      	mov	r3, r5
 800804e:	225a      	movs	r2, #90	; 0x5a
 8008050:	4638      	mov	r0, r7
 8008052:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008056:	9500      	str	r5, [sp, #0]
 8008058:	f008 f9b9 	bl	80103ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800805c:	4638      	mov	r0, r7
 800805e:	4629      	mov	r1, r5
 8008060:	f00a fea2 	bl	8012da8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8008064:	2335      	movs	r3, #53	; 0x35
 8008066:	2208      	movs	r2, #8
 8008068:	4638      	mov	r0, r7
 800806a:	2105      	movs	r1, #5
 800806c:	f00a fe58 	bl	8012d20 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008070:	4638      	mov	r0, r7
 8008072:	2101      	movs	r1, #1
 8008074:	f00a fdf6 	bl	8012c64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008078:	4638      	mov	r0, r7
 800807a:	2101      	movs	r1, #1
 800807c:	f00a fdf5 	bl	8012c6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8008080:	4639      	mov	r1, r7
 8008082:	4630      	mov	r0, r6
 8008084:	f008 fb64 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8008088:	230f      	movs	r3, #15
 800808a:	22e6      	movs	r2, #230	; 0xe6
 800808c:	ee19 0a10 	vmov	r0, s18
 8008090:	9300      	str	r3, [sp, #0]
 8008092:	4629      	mov	r1, r5
 8008094:	23f0      	movs	r3, #240	; 0xf0
 8008096:	f7fb f833 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800809a:	f04f 33ff 	mov.w	r3, #4294967295
 800809e:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 80080a2:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 80080a6:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 80080aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80080ae:	4f17      	ldr	r7, [pc, #92]	; (800810c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80080b0:	ee19 1a10 	vmov	r1, s18
 80080b4:	4640      	mov	r0, r8
 80080b6:	4798      	blx	r3
 80080b8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80080bc:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 80080c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80080c4:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80080c6:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 80080ca:	b92b      	cbnz	r3, 80080d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 80080cc:	4b10      	ldr	r3, [pc, #64]	; (8008110 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80080ce:	4a11      	ldr	r2, [pc, #68]	; (8008114 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80080d0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80080d2:	4811      	ldr	r0, [pc, #68]	; (8008118 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80080d4:	f022 fdda 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80080d8:	f8df b044 	ldr.w	fp, [pc, #68]	; 8008120 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80080dc:	f8bb 3000 	ldrh.w	r3, [fp]
 80080e0:	2b10      	cmp	r3, #16
 80080e2:	d81f      	bhi.n	8008124 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 80080e4:	4b0d      	ldr	r3, [pc, #52]	; (800811c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80080e6:	4a0b      	ldr	r2, [pc, #44]	; (8008114 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80080e8:	2161      	movs	r1, #97	; 0x61
 80080ea:	e7f2      	b.n	80080d2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
 80080ec:	0802e3e8 	.word	0x0802e3e8
 80080f0:	0802f1e0 	.word	0x0802f1e0
 80080f4:	0802f3a8 	.word	0x0802f3a8
 80080f8:	0802c890 	.word	0x0802c890
 80080fc:	0802ef14 	.word	0x0802ef14
 8008100:	0802e3d0 	.word	0x0802e3d0
 8008104:	08007e17 	.word	0x08007e17
 8008108:	0802c880 	.word	0x0802c880
 800810c:	20012dfc 	.word	0x20012dfc
 8008110:	0802c6d0 	.word	0x0802c6d0
 8008114:	0802c7d2 	.word	0x0802c7d2
 8008118:	0802c74d 	.word	0x0802c74d
 800811c:	0802c794 	.word	0x0802c794
 8008120:	20012e00 	.word	0x20012e00
        return texts->getText(typedTextId);
 8008124:	4bde      	ldr	r3, [pc, #888]	; (80084a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8008126:	2110      	movs	r1, #16
 8008128:	6818      	ldr	r0, [r3, #0]
 800812a:	f000 ffbf 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 800812e:	4add      	ldr	r2, [pc, #884]	; (80084a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8008130:	4603      	mov	r3, r0
 8008132:	210a      	movs	r1, #10
 8008134:	4648      	mov	r0, r9
 8008136:	f010 ff13 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800813a:	4bdb      	ldr	r3, [pc, #876]	; (80084a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 800813c:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8008140:	ee19 0a10 	vmov	r0, s18
 8008144:	930a      	str	r3, [sp, #40]	; 0x28
 8008146:	a90a      	add	r1, sp, #40	; 0x28
 8008148:	2313      	movs	r3, #19
 800814a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800814e:	f00a fcb3 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008152:	ee19 1a10 	vmov	r1, s18
 8008156:	4630      	mov	r0, r6
 8008158:	f008 fafa 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 800815c:	210f      	movs	r1, #15
 800815e:	22d7      	movs	r2, #215	; 0xd7
 8008160:	ee19 0a90 	vmov	r0, s19
 8008164:	9100      	str	r1, [sp, #0]
 8008166:	23f0      	movs	r3, #240	; 0xf0
 8008168:	4629      	mov	r1, r5
 800816a:	f7fa ffc9 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 800816e:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8008172:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8008176:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800817a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800817e:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8008182:	4640      	mov	r0, r8
 8008184:	ee19 1a90 	vmov	r1, s19
 8008188:	4798      	blx	r3
 800818a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800818e:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8008192:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008196:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8008198:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 800819c:	2b00      	cmp	r3, #0
 800819e:	d095      	beq.n	80080cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80081a0:	f8bb 3000 	ldrh.w	r3, [fp]
 80081a4:	2b11      	cmp	r3, #17
 80081a6:	d99d      	bls.n	80080e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 80081a8:	4abd      	ldr	r2, [pc, #756]	; (80084a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80081aa:	2111      	movs	r1, #17
 80081ac:	6810      	ldr	r0, [r2, #0]
 80081ae:	f000 ff7d 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 80081b2:	4abc      	ldr	r2, [pc, #752]	; (80084a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80081b4:	4603      	mov	r3, r0
 80081b6:	210a      	movs	r1, #10
 80081b8:	4648      	mov	r0, r9
 80081ba:	f010 fed1 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80081be:	4bba      	ldr	r3, [pc, #744]	; (80084a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 80081c0:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80081c4:	ee19 0a90 	vmov	r0, s19
 80081c8:	930a      	str	r3, [sp, #40]	; 0x28
 80081ca:	a90a      	add	r1, sp, #40	; 0x28
 80081cc:	2314      	movs	r3, #20
 80081ce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081d2:	f00a fc71 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081d6:	ee19 1a90 	vmov	r1, s19
 80081da:	4630      	mov	r0, r6
 80081dc:	f008 fab8 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80081e0:	210f      	movs	r1, #15
 80081e2:	22c8      	movs	r2, #200	; 0xc8
 80081e4:	ee1a 0a10 	vmov	r0, s20
 80081e8:	9100      	str	r1, [sp, #0]
 80081ea:	23f0      	movs	r3, #240	; 0xf0
 80081ec:	4629      	mov	r1, r5
 80081ee:	f7fa ff87 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80081f2:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80081f6:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80081fa:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80081fe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008202:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8008206:	4640      	mov	r0, r8
 8008208:	ee1a 1a10 	vmov	r1, s20
 800820c:	4798      	blx	r3
 800820e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008212:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8008216:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800821a:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800821c:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8008220:	2b00      	cmp	r3, #0
 8008222:	f43f af53 	beq.w	80080cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008226:	f8bb 3000 	ldrh.w	r3, [fp]
 800822a:	2b12      	cmp	r3, #18
 800822c:	f67f af5a 	bls.w	80080e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008230:	4a9b      	ldr	r2, [pc, #620]	; (80084a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 8008232:	4f9d      	ldr	r7, [pc, #628]	; (80084a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 8008234:	6810      	ldr	r0, [r2, #0]
 8008236:	2112      	movs	r1, #18
 8008238:	f000 ff38 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 800823c:	4a99      	ldr	r2, [pc, #612]	; (80084a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800823e:	4603      	mov	r3, r0
 8008240:	210a      	movs	r1, #10
 8008242:	4648      	mov	r0, r9
 8008244:	f010 fe8c 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008248:	2315      	movs	r3, #21
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 800824a:	ee1a 0a10 	vmov	r0, s20
 800824e:	a90a      	add	r1, sp, #40	; 0x28
 8008250:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8008254:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008258:	970a      	str	r7, [sp, #40]	; 0x28
 800825a:	f00a fc2d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800825e:	ee1a 1a10 	vmov	r1, s20
 8008262:	4630      	mov	r0, r6
 8008264:	f008 fa74 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8008268:	224c      	movs	r2, #76	; 0x4c
 800826a:	ee1a 0a90 	vmov	r0, s21
 800826e:	2171      	movs	r1, #113	; 0x71
 8008270:	f7fa ff39 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008274:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008278:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800827c:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8008280:	4640      	mov	r0, r8
        linespace = space;
 8008282:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8008286:	f00a f97d 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800828a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800828e:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8008292:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008296:	2316      	movs	r3, #22
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8008298:	ee1a 0a90 	vmov	r0, s21
 800829c:	a90a      	add	r1, sp, #40	; 0x28
 800829e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082a2:	970a      	str	r7, [sp, #40]	; 0x28
 80082a4:	f00a fc08 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082a8:	ee1a 1a90 	vmov	r1, s21
 80082ac:	4630      	mov	r0, r6
 80082ae:	f008 fa4f 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 80082b2:	22b9      	movs	r2, #185	; 0xb9
 80082b4:	ee1b 0a10 	vmov	r0, s22
 80082b8:	4629      	mov	r1, r5
 80082ba:	f7fa ff14 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80082be:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80082c2:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80082c6:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 80082ca:	4640      	mov	r0, r8
        linespace = space;
 80082cc:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80082d0:	f00a f958 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80082d4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80082d8:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80082dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80082e0:	2317      	movs	r3, #23
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80082e2:	ee1b 0a10 	vmov	r0, s22
 80082e6:	a90a      	add	r1, sp, #40	; 0x28
 80082e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082ec:	970a      	str	r7, [sp, #40]	; 0x28
 80082ee:	f00a fbe3 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082f2:	ee1b 1a10 	vmov	r1, s22
 80082f6:	4630      	mov	r0, r6
 80082f8:	f008 fa2a 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80082fc:	22b9      	movs	r2, #185	; 0xb9
 80082fe:	ee1b 0a90 	vmov	r0, s23
 8008302:	21d9      	movs	r1, #217	; 0xd9
 8008304:	f7fa feef 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008308:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800830c:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8008310:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8008314:	4640      	mov	r0, r8
        linespace = space;
 8008316:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 800831a:	f00a f933 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800831e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008322:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8008326:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800832a:	2318      	movs	r3, #24
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 800832c:	ee1b 0a90 	vmov	r0, s23
 8008330:	a90a      	add	r1, sp, #40	; 0x28
 8008332:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008336:	970a      	str	r7, [sp, #40]	; 0x28
 8008338:	f00a fbbe 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800833c:	ee1b 1a90 	vmov	r1, s23
 8008340:	4630      	mov	r0, r6
 8008342:	f008 fa05 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008346:	230a      	movs	r3, #10
 8008348:	9300      	str	r3, [sp, #0]
 800834a:	2232      	movs	r2, #50	; 0x32
 800834c:	23f0      	movs	r3, #240	; 0xf0
 800834e:	4629      	mov	r1, r5
 8008350:	4650      	mov	r0, sl
 8008352:	f7fa fed5 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008356:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800835a:	22a0      	movs	r2, #160	; 0xa0
 800835c:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008360:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8008364:	9b03      	ldr	r3, [sp, #12]
 8008366:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 800836a:	4611      	mov	r1, r2
 800836c:	4650      	mov	r0, sl
 800836e:	f009 ff5d 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008372:	22a0      	movs	r2, #160	; 0xa0
 8008374:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008378:	4650      	mov	r0, sl
 800837a:	f009 ff62 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800837e:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8008382:	2b20      	cmp	r3, #32
 8008384:	d005      	beq.n	8008392 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x562>
        lineWidthQ5 = widthQ5;
 8008386:	2320      	movs	r3, #32
 8008388:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800838c:	4650      	mov	r0, sl
 800838e:	f009 fe57 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008392:	4650      	mov	r0, sl
 8008394:	2101      	movs	r1, #1
 8008396:	f009 ff5f 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800839a:	4651      	mov	r1, sl
 800839c:	4630      	mov	r0, r6
 800839e:	f008 f9d7 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80083a2:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 80083a6:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80083a8:	ee18 0a10 	vmov	r0, s16
 80083ac:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80083ae:	f04f 0900 	mov.w	r9, #0
 80083b2:	2145      	movs	r1, #69	; 0x45
 80083b4:	f7fa fe97 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80083b8:	ee18 1a10 	vmov	r1, s16
 80083bc:	4628      	mov	r0, r5
        color = newColor;
 80083be:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 80083c2:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80083c6:	f00a f8dd 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80083ce:	ee18 3a10 	vmov	r3, s16
 80083d2:	333c      	adds	r3, #60	; 0x3c
 80083d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083d8:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80084a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 80083dc:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80083e0:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80083e2:	ee18 0a10 	vmov	r0, s16
 80083e6:	a90a      	add	r1, sp, #40	; 0x28
 80083e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80083ec:	f00a fb64 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083f0:	ee18 1a10 	vmov	r1, s16
 80083f4:	4630      	mov	r0, r6
 80083f6:	f008 f9ab 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80083fa:	ee18 0a90 	vmov	r0, s17
 80083fe:	220c      	movs	r2, #12
 8008400:	2136      	movs	r1, #54	; 0x36
 8008402:	f7fa fe70 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008406:	ee18 1a90 	vmov	r1, s17
 800840a:	4628      	mov	r0, r5
        color = newColor;
 800840c:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8008410:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8008414:	f00a f8b6 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008418:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800841c:	ee18 3a90 	vmov	r3, s17
 8008420:	333c      	adds	r3, #60	; 0x3c
 8008422:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008426:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8008428:	ee18 0a90 	vmov	r0, s17
 800842c:	a90a      	add	r1, sp, #40	; 0x28
 800842e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008432:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8008436:	f00a fb3f 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800843a:	ee18 1a90 	vmov	r1, s17
 800843e:	4630      	mov	r0, r6
 8008440:	f008 f986 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8008444:	ee1c 0a10 	vmov	r0, s24
 8008448:	f44f 7280 	mov.w	r2, #256	; 0x100
 800844c:	2121      	movs	r1, #33	; 0x21
 800844e:	f7fa fe4a 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008452:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008454:	aa0a      	add	r2, sp, #40	; 0x28
 8008456:	a909      	add	r1, sp, #36	; 0x24
 8008458:	ee1c 0a10 	vmov	r0, s24
 800845c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008460:	2302      	movs	r3, #2
 8008462:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008466:	f00a fd0c 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800846a:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 800846c:	ee1c 0a10 	vmov	r0, s24
 8008470:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8008474:	f7fa fe8c 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008478:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 800847c:	3304      	adds	r3, #4
 800847e:	4630      	mov	r0, r6
 8008480:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8008484:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8008488:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800848c:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8008490:	f008 f95e 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008494:	4620      	mov	r0, r4
 8008496:	b00d      	add	sp, #52	; 0x34
 8008498:	ecbd 8b0a 	vpop	{d8-d12}
 800849c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084a0:	20012e08 	.word	0x20012e08
 80084a4:	0802c80a 	.word	0x0802c80a
 80084a8:	0802c880 	.word	0x0802c880

080084ac <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80084ac:	4770      	bx	lr

080084ae <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80084ae:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80084b0:	68c2      	ldr	r2, [r0, #12]
 80084b2:	6844      	ldr	r4, [r0, #4]
 80084b4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80084b6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80084b8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80084bc:	07d2      	lsls	r2, r2, #31
 80084be:	bf48      	it	mi
 80084c0:	5962      	ldrmi	r2, [r4, r5]
 80084c2:	689b      	ldr	r3, [r3, #8]
    }
 80084c4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80084c6:	bf48      	it	mi
 80084c8:	58d3      	ldrmi	r3, [r2, r3]
 80084ca:	4718      	bx	r3

080084cc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80084cc:	6843      	ldr	r3, [r0, #4]
 80084ce:	b12b      	cbz	r3, 80084dc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80084d0:	6883      	ldr	r3, [r0, #8]
 80084d2:	b92b      	cbnz	r3, 80084e0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80084d4:	68c0      	ldr	r0, [r0, #12]
 80084d6:	f000 0001 	and.w	r0, r0, #1
 80084da:	4770      	bx	lr
 80084dc:	4618      	mov	r0, r3
 80084de:	4770      	bx	lr
 80084e0:	2001      	movs	r0, #1
    }
 80084e2:	4770      	bx	lr

080084e4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80084e4:	b510      	push	{r4, lr}
 80084e6:	2110      	movs	r1, #16
 80084e8:	4604      	mov	r4, r0
 80084ea:	f021 fce8 	bl	8029ebe <_ZdlPvj>
 80084ee:	4620      	mov	r0, r4
 80084f0:	bd10      	pop	{r4, pc}

080084f2 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80084f2:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80084f6:	f000 bf91 	b.w	800941c <_ZN17Gauge_with_Values10initializeEv>

080084fa <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80084fa:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80084fe:	4288      	cmp	r0, r1
{
 8008500:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008502:	d105      	bne.n	8008510 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008504:	f00d fbbc 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8008508:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800850c:	f7fc b9f2 	b.w	80048f4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008510:	bd08      	pop	{r3, pc}
	...

08008514 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8008514:	b510      	push	{r4, lr}
 8008516:	4b07      	ldr	r3, [pc, #28]	; (8008534 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8008518:	6003      	str	r3, [r0, #0]
 800851a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800851c:	f00b feae 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8008520:	4b05      	ldr	r3, [pc, #20]	; (8008538 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8008522:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8008526:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800852a:	f7fd fc79 	bl	8005e20 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800852e:	4620      	mov	r0, r4
 8008530:	bd10      	pop	{r4, pc}
 8008532:	bf00      	nop
 8008534:	0802e438 	.word	0x0802e438
 8008538:	0802e86c 	.word	0x0802e86c

0800853c <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800853c:	b510      	push	{r4, lr}
 800853e:	4604      	mov	r4, r0
}
 8008540:	f7ff ffe8 	bl	8008514 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008544:	4620      	mov	r0, r4
 8008546:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800854a:	f021 fcb8 	bl	8029ebe <_ZdlPvj>
 800854e:	4620      	mov	r0, r4
 8008550:	bd10      	pop	{r4, pc}
	...

08008554 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8008554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008558:	ed2d 8b04 	vpush	{d8-d9}
 800855c:	4604      	mov	r4, r0
 800855e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8008560:	46a3      	mov	fp, r4
 8008562:	2500      	movs	r5, #0
 8008564:	f00f f80c 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8008568:	4bae      	ldr	r3, [pc, #696]	; (8008824 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800856a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800856c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008570:	2226      	movs	r2, #38	; 0x26
 8008572:	4629      	mov	r1, r5
 8008574:	4658      	mov	r0, fp
 8008576:	f022 fd8e 	bl	802b096 <memset>
 800857a:	4658      	mov	r0, fp
 800857c:	f7fa fdd4 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8008580:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008584:	26ff      	movs	r6, #255	; 0xff
 8008586:	4ba8      	ldr	r3, [pc, #672]	; (8008828 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8008588:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800858a:	2226      	movs	r2, #38	; 0x26
 800858c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008590:	4629      	mov	r1, r5
 8008592:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008596:	66a5      	str	r5, [r4, #104]	; 0x68
 8008598:	4650      	mov	r0, sl
 800859a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800859e:	f022 fd7a 	bl	802b096 <memset>
 80085a2:	4650      	mov	r0, sl
 80085a4:	f7fa fdc0 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 80085a8:	4ba0      	ldr	r3, [pc, #640]	; (800882c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 80085aa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80085ac:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80085b0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80085b4:	a90a      	add	r1, sp, #40	; 0x28
 80085b6:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80085ba:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80085be:	4650      	mov	r0, sl
 80085c0:	f00a fe55 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80085c4:	4638      	mov	r0, r7
 80085c6:	f009 fd1b 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 80085ca:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80085ce:	4618      	mov	r0, r3
 80085d0:	9303      	str	r3, [sp, #12]
 80085d2:	f7fa fba9 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80085d6:	4b96      	ldr	r3, [pc, #600]	; (8008830 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80085d8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80085dc:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80085e0:	3324      	adds	r3, #36	; 0x24
 80085e2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80085e6:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80085ea:	4648      	mov	r0, r9
 80085ec:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80085f0:	f7fa fdac 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80085f4:	4640      	mov	r0, r8
 80085f6:	f7fa fda9 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80085fa:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80085fe:	4618      	mov	r0, r3
 8008600:	ee08 3a10 	vmov	s16, r3
 8008604:	f7fa fda2 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8008608:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800860c:	4618      	mov	r0, r3
 800860e:	ee08 3a90 	vmov	s17, r3
 8008612:	f00a ff6d 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008616:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800861a:	4618      	mov	r0, r3
 800861c:	ee09 3a10 	vmov	s18, r3
 8008620:	f000 fef2 	bl	8009408 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008624:	4a83      	ldr	r2, [pc, #524]	; (8008834 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 8008626:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800862a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800862e:	4a82      	ldr	r2, [pc, #520]	; (8008838 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008630:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008634:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8008638:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800863c:	f00b fe14 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008640:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008644:	462a      	mov	r2, r5
 8008646:	9300      	str	r3, [sp, #0]
 8008648:	4629      	mov	r1, r5
 800864a:	23f0      	movs	r3, #240	; 0xf0
 800864c:	4658      	mov	r0, fp
 800864e:	f7fa fd57 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008652:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008654:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008658:	66a3      	str	r3, [r4, #104]	; 0x68
 800865a:	4659      	mov	r1, fp
 800865c:	4630      	mov	r0, r6
 800865e:	f008 f877 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008662:	462a      	mov	r2, r5
 8008664:	4629      	mov	r1, r5
 8008666:	4650      	mov	r0, sl
 8008668:	f7fa fd3d 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800866c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800866e:	a90a      	add	r1, sp, #40	; 0x28
 8008670:	4650      	mov	r0, sl
 8008672:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008676:	f00a fdfa 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800867a:	4651      	mov	r1, sl
 800867c:	4630      	mov	r0, r6
 800867e:	f008 f867 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008682:	230a      	movs	r3, #10
 8008684:	9300      	str	r3, [sp, #0]
 8008686:	2232      	movs	r2, #50	; 0x32
 8008688:	23f0      	movs	r3, #240	; 0xf0
 800868a:	4629      	mov	r1, r5
 800868c:	4638      	mov	r0, r7
 800868e:	f7fa fd37 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008692:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008696:	22a0      	movs	r2, #160	; 0xa0
 8008698:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800869c:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 80086a0:	9b03      	ldr	r3, [sp, #12]
 80086a2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80086a6:	4611      	mov	r1, r2
 80086a8:	4638      	mov	r0, r7
 80086aa:	f009 fdbf 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80086ae:	22a0      	movs	r2, #160	; 0xa0
 80086b0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80086b4:	4638      	mov	r0, r7
 80086b6:	f009 fdc4 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80086ba:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80086be:	2b20      	cmp	r3, #32
 80086c0:	d005      	beq.n	80086ce <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80086c2:	2320      	movs	r3, #32
 80086c4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80086c8:	4638      	mov	r0, r7
 80086ca:	f009 fcb9 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80086ce:	4638      	mov	r0, r7
 80086d0:	2101      	movs	r1, #1
 80086d2:	f009 fdc1 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80086d6:	4639      	mov	r1, r7
 80086d8:	4630      	mov	r0, r6
 80086da:	ad04      	add	r5, sp, #16
 80086dc:	f008 f838 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80086e0:	f04f 3aff 	mov.w	sl, #4294967295
        linespace = space;
 80086e4:	2700      	movs	r7, #0
    textArea2.setXY(69, 35);
 80086e6:	2223      	movs	r2, #35	; 0x23
 80086e8:	4648      	mov	r0, r9
 80086ea:	2145      	movs	r1, #69	; 0x45
 80086ec:	f7fa fcfb 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80086f0:	4649      	mov	r1, r9
 80086f2:	4628      	mov	r0, r5
        color = newColor;
 80086f4:	f8c4 a14c 	str.w	sl, [r4, #332]	; 0x14c
        linespace = space;
 80086f8:	f8a4 7150 	strh.w	r7, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80086fc:	f009 ff42 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008700:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008704:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8008708:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800870c:	f8df b12c 	ldr.w	fp, [pc, #300]	; 800883c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8008710:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8008714:	2347      	movs	r3, #71	; 0x47
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8008716:	a90a      	add	r1, sp, #40	; 0x28
 8008718:	4648      	mov	r0, r9
 800871a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800871e:	f00a f9cb 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008722:	4649      	mov	r1, r9
 8008724:	4630      	mov	r0, r6
 8008726:	f008 f813 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800872a:	223c      	movs	r2, #60	; 0x3c
 800872c:	4640      	mov	r0, r8
 800872e:	211f      	movs	r1, #31
 8008730:	f7fa fcd9 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008734:	4641      	mov	r1, r8
 8008736:	4628      	mov	r0, r5
        color = newColor;
 8008738:	f8c4 a194 	str.w	sl, [r4, #404]	; 0x194
        linespace = space;
 800873c:	f8a4 7198 	strh.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8008740:	f009 ff20 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008744:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008748:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800874c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008750:	f04f 0936 	mov.w	r9, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8008754:	a90a      	add	r1, sp, #40	; 0x28
 8008756:	4640      	mov	r0, r8
 8008758:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800875c:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8008760:	f00a f9aa 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008764:	4641      	mov	r1, r8
 8008766:	4630      	mov	r0, r6
 8008768:	f007 fff2 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800876c:	ee18 0a10 	vmov	r0, s16
 8008770:	220c      	movs	r2, #12
 8008772:	4649      	mov	r1, r9
 8008774:	f7fa fcb7 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008778:	ee18 1a10 	vmov	r1, s16
 800877c:	4628      	mov	r0, r5
        color = newColor;
 800877e:	f8c4 a1dc 	str.w	sl, [r4, #476]	; 0x1dc
        linespace = space;
 8008782:	f8a4 71e0 	strh.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8008786:	f009 fefd 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800878a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800878e:	ee18 3a10 	vmov	r3, s16
 8008792:	333c      	adds	r3, #60	; 0x3c
 8008794:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008798:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800879a:	ee18 0a10 	vmov	r0, s16
 800879e:	a90a      	add	r1, sp, #40	; 0x28
 80087a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80087a4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80087a8:	f00a f986 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80087ac:	ee18 1a10 	vmov	r1, s16
 80087b0:	4630      	mov	r0, r6
 80087b2:	f007 ffcd 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80087b6:	ee18 0a90 	vmov	r0, s17
 80087ba:	f240 1201 	movw	r2, #257	; 0x101
 80087be:	2121      	movs	r1, #33	; 0x21
 80087c0:	f7fa fc91 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80087c4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80087c6:	aa0a      	add	r2, sp, #40	; 0x28
 80087c8:	a909      	add	r1, sp, #36	; 0x24
 80087ca:	ee18 0a90 	vmov	r0, s17
 80087ce:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80087d2:	2302      	movs	r3, #2
 80087d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80087d8:	f00a fb53 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80087dc:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 80087de:	ee18 0a90 	vmov	r0, s17
 80087e2:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80087e6:	f7fa fcd3 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80087ea:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80087ee:	3314      	adds	r3, #20
 80087f0:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80087f4:	ee18 1a90 	vmov	r1, s17
 80087f8:	4630      	mov	r0, r6
        colorPressed = col;
 80087fa:	e9c4 aa8c 	strd	sl, sl, [r4, #560]	; 0x230
 80087fe:	f007 ffa7 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8008802:	ee19 0a10 	vmov	r0, s18
 8008806:	224e      	movs	r2, #78	; 0x4e
 8008808:	4639      	mov	r1, r7
 800880a:	f7fa fc6c 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 800880e:	4630      	mov	r0, r6
 8008810:	ee19 1a10 	vmov	r1, s18
 8008814:	f007 ff9c 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008818:	4620      	mov	r0, r4
 800881a:	b00d      	add	sp, #52	; 0x34
 800881c:	ecbd 8b04 	vpop	{d8-d9}
 8008820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008824:	0802e438 	.word	0x0802e438
 8008828:	0802f1e0 	.word	0x0802f1e0
 800882c:	0802f3a8 	.word	0x0802f3a8
 8008830:	0802ef14 	.word	0x0802ef14
 8008834:	0802e420 	.word	0x0802e420
 8008838:	080084fb 	.word	0x080084fb
 800883c:	0802c880 	.word	0x0802c880

08008840 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8008840:	4770      	bx	lr

08008842 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008842:	4770      	bx	lr

08008844 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008844:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008846:	68c2      	ldr	r2, [r0, #12]
 8008848:	6844      	ldr	r4, [r0, #4]
 800884a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800884c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800884e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008852:	07d2      	lsls	r2, r2, #31
 8008854:	bf48      	it	mi
 8008856:	5962      	ldrmi	r2, [r4, r5]
 8008858:	689b      	ldr	r3, [r3, #8]
    }
 800885a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800885c:	bf48      	it	mi
 800885e:	58d3      	ldrmi	r3, [r2, r3]
 8008860:	4718      	bx	r3

08008862 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008862:	6843      	ldr	r3, [r0, #4]
 8008864:	b12b      	cbz	r3, 8008872 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008866:	6883      	ldr	r3, [r0, #8]
 8008868:	b92b      	cbnz	r3, 8008876 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800886a:	68c0      	ldr	r0, [r0, #12]
 800886c:	f000 0001 	and.w	r0, r0, #1
 8008870:	4770      	bx	lr
 8008872:	4618      	mov	r0, r3
 8008874:	4770      	bx	lr
 8008876:	2001      	movs	r0, #1
    }
 8008878:	4770      	bx	lr

0800887a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800887a:	b510      	push	{r4, lr}
 800887c:	2110      	movs	r1, #16
 800887e:	4604      	mov	r4, r0
 8008880:	f021 fb1d 	bl	8029ebe <_ZdlPvj>
 8008884:	4620      	mov	r0, r4
 8008886:	bd10      	pop	{r4, pc}

08008888 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008888:	b510      	push	{r4, lr}
 800888a:	4b03      	ldr	r3, [pc, #12]	; (8008898 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 800888c:	6003      	str	r3, [r0, #0]
 800888e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008890:	f00b fcf4 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008894:	4620      	mov	r0, r4
 8008896:	bd10      	pop	{r4, pc}
 8008898:	0802e484 	.word	0x0802e484

0800889c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800889c:	b507      	push	{r0, r1, r2, lr}
 800889e:	4b07      	ldr	r3, [pc, #28]	; (80088bc <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80088a0:	6003      	str	r3, [r0, #0]
 80088a2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80088a4:	f00b fcea 	bl	801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80088a8:	9801      	ldr	r0, [sp, #4]
 80088aa:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80088ae:	f021 fb06 	bl	8029ebe <_ZdlPvj>
 80088b2:	9801      	ldr	r0, [sp, #4]
 80088b4:	b003      	add	sp, #12
 80088b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80088ba:	bf00      	nop
 80088bc:	0802e484 	.word	0x0802e484

080088c0 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80088c0:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80088c4:	4288      	cmp	r0, r1
{
 80088c6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80088c8:	d105      	bne.n	80088d6 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80088ca:	f00d f9d9 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 80088ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 80088d2:	f7fb bfdf 	b.w	8004894 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 80088d6:	bd08      	pop	{r3, pc}

080088d8 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 80088d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088dc:	ed2d 8b04 	vpush	{d8-d9}
 80088e0:	4604      	mov	r4, r0
 80088e2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80088e4:	46a3      	mov	fp, r4
 80088e6:	2500      	movs	r5, #0
 80088e8:	f00e fe4a 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 80088ec:	4bd1      	ldr	r3, [pc, #836]	; (8008c34 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80088ee:	63e5      	str	r5, [r4, #60]	; 0x3c
 80088f0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80088f4:	2226      	movs	r2, #38	; 0x26
 80088f6:	4629      	mov	r1, r5
 80088f8:	4658      	mov	r0, fp
 80088fa:	f022 fbcc 	bl	802b096 <memset>
 80088fe:	4658      	mov	r0, fp
 8008900:	f7fa fc12 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 8008904:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008908:	26ff      	movs	r6, #255	; 0xff
 800890a:	4bcb      	ldr	r3, [pc, #812]	; (8008c38 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800890c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800890e:	2226      	movs	r2, #38	; 0x26
 8008910:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008914:	4629      	mov	r1, r5
 8008916:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800891a:	4650      	mov	r0, sl
 800891c:	66a5      	str	r5, [r4, #104]	; 0x68
 800891e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008922:	f022 fbb8 	bl	802b096 <memset>
 8008926:	4650      	mov	r0, sl
 8008928:	f7fa fbfe 	bl	8003128 <_ZN8touchgfx6WidgetC1Ev>
 800892c:	4bc3      	ldr	r3, [pc, #780]	; (8008c3c <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800892e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008930:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008934:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008938:	a90a      	add	r1, sp, #40	; 0x28
 800893a:	4650      	mov	r0, sl
 800893c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008940:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008944:	f00a fc93 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008948:	4648      	mov	r0, r9
 800894a:	f7fa fbff 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 800894e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8008952:	4bbb      	ldr	r3, [pc, #748]	; (8008c40 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8008954:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008958:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800895c:	4638      	mov	r0, r7
 800895e:	f009 fb4f 	bl	8012000 <_ZN8touchgfx4LineC1Ev>
 8008962:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008966:	4618      	mov	r0, r3
 8008968:	9303      	str	r3, [sp, #12]
 800896a:	f7fa f9dd 	bl	8002d28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800896e:	4bb5      	ldr	r3, [pc, #724]	; (8008c44 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8008970:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8008974:	3324      	adds	r3, #36	; 0x24
 8008976:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800897a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800897e:	4618      	mov	r0, r3
 8008980:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8008984:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8008988:	ee09 3a10 	vmov	s18, r3
 800898c:	f00a fdb0 	bl	80134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008990:	4640      	mov	r0, r8
 8008992:	f7fa fbdb 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 8008996:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800899a:	4618      	mov	r0, r3
 800899c:	ee08 3a10 	vmov	s16, r3
 80089a0:	f7fa fbd4 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
 80089a4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80089a8:	4618      	mov	r0, r3
 80089aa:	ee08 3a90 	vmov	s17, r3
 80089ae:	f7fa fbcd 	bl	800314c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80089b2:	4aa5      	ldr	r2, [pc, #660]	; (8008c48 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80089b4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80089b8:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 80089bc:	4aa3      	ldr	r2, [pc, #652]	; (8008c4c <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80089be:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80089c2:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 80089c6:	f504 7024 	add.w	r0, r4, #656	; 0x290
 80089ca:	f00b fc4d 	bl	8014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80089ce:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80089d2:	462a      	mov	r2, r5
 80089d4:	4658      	mov	r0, fp
 80089d6:	9300      	str	r3, [sp, #0]
 80089d8:	4629      	mov	r1, r5
 80089da:	23f0      	movs	r3, #240	; 0xf0
 80089dc:	f7fa fb90 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 80089e0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80089e2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80089e6:	66a3      	str	r3, [r4, #104]	; 0x68
 80089e8:	4659      	mov	r1, fp
 80089ea:	4630      	mov	r0, r6
 80089ec:	f007 feb0 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80089f0:	462a      	mov	r2, r5
 80089f2:	4650      	mov	r0, sl
 80089f4:	4629      	mov	r1, r5
 80089f6:	f7fa fb76 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80089fa:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80089fc:	4650      	mov	r0, sl
 80089fe:	a90a      	add	r1, sp, #40	; 0x28
 8008a00:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a04:	f00a fc33 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008a08:	4651      	mov	r1, sl
 8008a0a:	4630      	mov	r0, r6
 8008a0c:	f007 fea0 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008a10:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008a14:	2156      	movs	r1, #86	; 0x56
 8008a16:	4648      	mov	r0, r9
 8008a18:	f7fa fb65 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008a1c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008a20:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008a24:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008a28:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8008a2c:	4650      	mov	r0, sl
 8008a2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008a32:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008a36:	4649      	mov	r1, r9
 8008a38:	4798      	blx	r3
 8008a3a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8008a3e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008a42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008a46:	4b82      	ldr	r3, [pc, #520]	; (8008c50 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8008a48:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8008a4a:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8008a4e:	b92b      	cbnz	r3, 8008a5c <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8008a50:	4b80      	ldr	r3, [pc, #512]	; (8008c54 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8008a52:	4a81      	ldr	r2, [pc, #516]	; (8008c58 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008a54:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008a56:	4881      	ldr	r0, [pc, #516]	; (8008c5c <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8008a58:	f022 f918 	bl	802ac8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008a5c:	4b80      	ldr	r3, [pc, #512]	; (8008c60 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008a5e:	881b      	ldrh	r3, [r3, #0]
 8008a60:	2b22      	cmp	r3, #34	; 0x22
 8008a62:	d803      	bhi.n	8008a6c <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8008a64:	4b7f      	ldr	r3, [pc, #508]	; (8008c64 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8008a66:	4a7c      	ldr	r2, [pc, #496]	; (8008c58 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008a68:	2161      	movs	r1, #97	; 0x61
 8008a6a:	e7f4      	b.n	8008a56 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8008a6c:	4b7e      	ldr	r3, [pc, #504]	; (8008c68 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8008a6e:	2122      	movs	r1, #34	; 0x22
 8008a70:	6818      	ldr	r0, [r3, #0]
 8008a72:	f000 fb1b 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8008a76:	4a7d      	ldr	r2, [pc, #500]	; (8008c6c <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8008a78:	4603      	mov	r3, r0
 8008a7a:	2104      	movs	r1, #4
 8008a7c:	4650      	mov	r0, sl
 8008a7e:	f010 fa6f 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8008a82:	4648      	mov	r0, r9
        wc1 = value;
 8008a84:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8008a88:	f009 fff6 	bl	8012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008a8c:	4b78      	ldr	r3, [pc, #480]	; (8008c70 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8008a8e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8008a90:	a90a      	add	r1, sp, #40	; 0x28
 8008a92:	2323      	movs	r3, #35	; 0x23
 8008a94:	4648      	mov	r0, r9
 8008a96:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008a9a:	f00a f80d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008a9e:	4649      	mov	r1, r9
 8008aa0:	4630      	mov	r0, r6
 8008aa2:	f007 fe55 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008aa6:	230a      	movs	r3, #10
 8008aa8:	9300      	str	r3, [sp, #0]
 8008aaa:	2232      	movs	r2, #50	; 0x32
 8008aac:	23f0      	movs	r3, #240	; 0xf0
 8008aae:	4629      	mov	r1, r5
 8008ab0:	4638      	mov	r0, r7
 8008ab2:	f7fa fb25 	bl	8003100 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008ab6:	9b03      	ldr	r3, [sp, #12]
 8008ab8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008abc:	22a0      	movs	r2, #160	; 0xa0
 8008abe:	4611      	mov	r1, r2
 8008ac0:	4638      	mov	r0, r7
 8008ac2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008ac6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008aca:	f009 fbaf 	bl	801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008ace:	22a0      	movs	r2, #160	; 0xa0
 8008ad0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008ad4:	4638      	mov	r0, r7
 8008ad6:	f009 fbb4 	bl	8012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008ada:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008ade:	2b20      	cmp	r3, #32
 8008ae0:	d005      	beq.n	8008aee <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008ae2:	2320      	movs	r3, #32
 8008ae4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008ae8:	4638      	mov	r0, r7
 8008aea:	f009 faa9 	bl	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008aee:	4638      	mov	r0, r7
 8008af0:	2101      	movs	r1, #1
 8008af2:	f009 fbb1 	bl	8012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008af6:	4639      	mov	r1, r7
 8008af8:	4630      	mov	r0, r6
 8008afa:	f007 fe29 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008afe:	ee19 0a10 	vmov	r0, s18
 8008b02:	22f0      	movs	r2, #240	; 0xf0
 8008b04:	2121      	movs	r1, #33	; 0x21
 8008b06:	f7fa faee 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008b0a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b0c:	aa0a      	add	r2, sp, #40	; 0x28
 8008b0e:	a909      	add	r1, sp, #36	; 0x24
 8008b10:	ee19 0a10 	vmov	r0, s18
 8008b14:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b18:	2302      	movs	r3, #2
 8008b1a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008b1e:	f00a f9b0 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008b22:	2352      	movs	r3, #82	; 0x52
        updateTextPosition();
 8008b24:	ee19 0a10 	vmov	r0, s18
 8008b28:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008b2c:	f7fa fb30 	bl	8003190 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008b30:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008b34:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008b38:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8008b3c:	ee19 1a10 	vmov	r1, s18
 8008b40:	4630      	mov	r0, r6
        colorPressed = col;
 8008b42:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8008b46:	ad04      	add	r5, sp, #16
 8008b48:	f007 fe02 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008b4c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008b50:	225b      	movs	r2, #91	; 0x5b
 8008b52:	4640      	mov	r0, r8
 8008b54:	2105      	movs	r1, #5
 8008b56:	f7fa fac6 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008b5a:	4641      	mov	r1, r8
 8008b5c:	4628      	mov	r0, r5
        color = newColor;
 8008b5e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8008b62:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8008b66:	f009 fd0d 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008b6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008b6e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008b72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008b76:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008c70 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8008b7a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008b7e:	2353      	movs	r3, #83	; 0x53
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8008b80:	a90a      	add	r1, sp, #40	; 0x28
 8008b82:	4640      	mov	r0, r8
 8008b84:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008b88:	f009 ff96 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008b8c:	4641      	mov	r1, r8
 8008b8e:	4630      	mov	r0, r6
 8008b90:	f007 fdde 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008b94:	ee18 0a10 	vmov	r0, s16
 8008b98:	2223      	movs	r2, #35	; 0x23
 8008b9a:	2145      	movs	r1, #69	; 0x45
 8008b9c:	f7fa faa3 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008ba0:	ee18 1a10 	vmov	r1, s16
 8008ba4:	4628      	mov	r0, r5
        color = newColor;
 8008ba6:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008baa:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008bae:	f009 fce9 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008bb2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008bb6:	ee18 3a10 	vmov	r3, s16
 8008bba:	333c      	adds	r3, #60	; 0x3c
 8008bbc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008bc0:	2355      	movs	r3, #85	; 0x55
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008bc2:	ee18 0a10 	vmov	r0, s16
 8008bc6:	a90a      	add	r1, sp, #40	; 0x28
 8008bc8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008bcc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008bd0:	f009 ff72 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008bd4:	ee18 1a10 	vmov	r1, s16
 8008bd8:	4630      	mov	r0, r6
 8008bda:	f007 fdb9 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008bde:	ee18 0a90 	vmov	r0, s17
 8008be2:	220c      	movs	r2, #12
 8008be4:	2136      	movs	r1, #54	; 0x36
 8008be6:	f7fa fa7e 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008bea:	ee18 1a90 	vmov	r1, s17
 8008bee:	4628      	mov	r0, r5
        color = newColor;
 8008bf0:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008bf4:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008bf8:	f009 fcc4 	bl	8012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008bfc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c00:	ee18 3a90 	vmov	r3, s17
 8008c04:	333c      	adds	r3, #60	; 0x3c
 8008c06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008c0a:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008c0c:	ee18 0a90 	vmov	r0, s17
 8008c10:	a90a      	add	r1, sp, #40	; 0x28
 8008c12:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c16:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008c1a:	f009 ff4d 	bl	8012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c1e:	4630      	mov	r0, r6
 8008c20:	ee18 1a90 	vmov	r1, s17
 8008c24:	f007 fd94 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008c28:	4620      	mov	r0, r4
 8008c2a:	b00d      	add	sp, #52	; 0x34
 8008c2c:	ecbd 8b04 	vpop	{d8-d9}
 8008c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c34:	0802e484 	.word	0x0802e484
 8008c38:	0802f1e0 	.word	0x0802f1e0
 8008c3c:	0802f3a8 	.word	0x0802f3a8
 8008c40:	0802c890 	.word	0x0802c890
 8008c44:	0802ef14 	.word	0x0802ef14
 8008c48:	0802e46c 	.word	0x0802e46c
 8008c4c:	080088c1 	.word	0x080088c1
 8008c50:	20012dfc 	.word	0x20012dfc
 8008c54:	0802c6d0 	.word	0x0802c6d0
 8008c58:	0802c7d2 	.word	0x0802c7d2
 8008c5c:	0802c74d 	.word	0x0802c74d
 8008c60:	20012e00 	.word	0x20012e00
 8008c64:	0802c794 	.word	0x0802c794
 8008c68:	20012e08 	.word	0x20012e08
 8008c6c:	0802c80a 	.word	0x0802c80a
 8008c70:	0802c880 	.word	0x0802c880

08008c74 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008c74:	4770      	bx	lr

08008c76 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008c76:	4770      	bx	lr

08008c78 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008c78:	b510      	push	{r4, lr}
}
 8008c7a:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008c7c:	4604      	mov	r4, r0
}
 8008c7e:	f021 f91e 	bl	8029ebe <_ZdlPvj>
 8008c82:	4620      	mov	r0, r4
 8008c84:	bd10      	pop	{r4, pc}
	...

08008c88 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008c88:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008c8c:	4604      	mov	r4, r0
 8008c8e:	4626      	mov	r6, r4
 8008c90:	f00e fc76 	bl	8017580 <_ZN8touchgfx6ScreenC1Ev>
 8008c94:	2500      	movs	r5, #0
 8008c96:	4b2e      	ldr	r3, [pc, #184]	; (8008d50 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008c98:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008c9a:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008c9e:	4b2d      	ldr	r3, [pc, #180]	; (8008d54 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008ca0:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008ca2:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008ca6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008caa:	23ff      	movs	r3, #255	; 0xff
 8008cac:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008cb0:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008cb4:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008cb8:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008cbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008cc0:	4a25      	ldr	r2, [pc, #148]	; (8008d58 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008cc2:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008cc6:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008cca:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008ccc:	a901      	add	r1, sp, #4
 8008cce:	4638      	mov	r0, r7
 8008cd0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008cd4:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008cd8:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008cdc:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008ce0:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008ce4:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008ce8:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008cec:	66a5      	str	r5, [r4, #104]	; 0x68
 8008cee:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008cf2:	f00a fabc 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008cf6:	462a      	mov	r2, r5
 8008cf8:	4629      	mov	r1, r5
 8008cfa:	4630      	mov	r0, r6
 8008cfc:	f7fa f9f3 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008d00:	4630      	mov	r0, r6
 8008d02:	21f0      	movs	r1, #240	; 0xf0
 8008d04:	f7f9 ff5c 	bl	8002bc0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008d08:	4630      	mov	r0, r6
 8008d0a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008d0e:	f7f9 ff59 	bl	8002bc4 <_ZN8touchgfx8Drawable9setHeightEs>
 8008d12:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008d16:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008d1a:	66a3      	str	r3, [r4, #104]	; 0x68
 8008d1c:	4631      	mov	r1, r6
 8008d1e:	4640      	mov	r0, r8
 8008d20:	f007 fd16 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008d24:	462a      	mov	r2, r5
 8008d26:	4638      	mov	r0, r7
 8008d28:	f06f 0102 	mvn.w	r1, #2
 8008d2c:	f7fa f9db 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8008d30:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008d32:	a901      	add	r1, sp, #4
 8008d34:	4638      	mov	r0, r7
 8008d36:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008d3a:	f00a fa98 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008d3e:	4640      	mov	r0, r8
 8008d40:	4639      	mov	r1, r7
 8008d42:	f007 fd05 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008d46:	4620      	mov	r0, r4
 8008d48:	b002      	add	sp, #8
 8008d4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008d4e:	bf00      	nop
 8008d50:	0802e4b8 	.word	0x0802e4b8
 8008d54:	0802f1e0 	.word	0x0802f1e0
 8008d58:	0802f3a8 	.word	0x0802f3a8

08008d5c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008d5c:	4770      	bx	lr
	...

08008d60 <_Z23getFont_verdana_10_4bppv>:
{
 8008d60:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008d62:	4d17      	ldr	r5, [pc, #92]	; (8008dc0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008d64:	682c      	ldr	r4, [r5, #0]
 8008d66:	f3bf 8f5b 	dmb	ish
 8008d6a:	f014 0401 	ands.w	r4, r4, #1
{
 8008d6e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008d70:	d122      	bne.n	8008db8 <_Z23getFont_verdana_10_4bppv+0x58>
 8008d72:	4628      	mov	r0, r5
 8008d74:	f021 f8a5 	bl	8029ec2 <__cxa_guard_acquire>
 8008d78:	b1f0      	cbz	r0, 8008db8 <_Z23getFont_verdana_10_4bppv+0x58>
 8008d7a:	233f      	movs	r3, #63	; 0x3f
 8008d7c:	9309      	str	r3, [sp, #36]	; 0x24
 8008d7e:	4b11      	ldr	r3, [pc, #68]	; (8008dc4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8008d80:	9308      	str	r3, [sp, #32]
 8008d82:	4b11      	ldr	r3, [pc, #68]	; (8008dc8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008d84:	9307      	str	r3, [sp, #28]
 8008d86:	2301      	movs	r3, #1
 8008d88:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008d8c:	9304      	str	r3, [sp, #16]
 8008d8e:	2304      	movs	r3, #4
 8008d90:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008d94:	230a      	movs	r3, #10
 8008d96:	490d      	ldr	r1, [pc, #52]	; (8008dcc <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008d98:	9300      	str	r3, [sp, #0]
 8008d9a:	225f      	movs	r2, #95	; 0x5f
 8008d9c:	230c      	movs	r3, #12
 8008d9e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008da2:	480b      	ldr	r0, [pc, #44]	; (8008dd0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008da4:	940a      	str	r4, [sp, #40]	; 0x28
 8008da6:	9401      	str	r4, [sp, #4]
 8008da8:	f7fd f9ec 	bl	8006184 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008dac:	4809      	ldr	r0, [pc, #36]	; (8008dd4 <_Z23getFont_verdana_10_4bppv+0x74>)
 8008dae:	f021 ff8b 	bl	802acc8 <atexit>
 8008db2:	4628      	mov	r0, r5
 8008db4:	f021 f891 	bl	8029eda <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008db8:	4805      	ldr	r0, [pc, #20]	; (8008dd0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008dba:	b00f      	add	sp, #60	; 0x3c
 8008dbc:	bd30      	pop	{r4, r5, pc}
 8008dbe:	bf00      	nop
 8008dc0:	20001ec4 	.word	0x20001ec4
 8008dc4:	0804704c 	.word	0x0804704c
 8008dc8:	08047288 	.word	0x08047288
 8008dcc:	08046094 	.word	0x08046094
 8008dd0:	20001ec8 	.word	0x20001ec8
 8008dd4:	08008d5d 	.word	0x08008d5d

08008dd8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008dd8:	4770      	bx	lr
	...

08008ddc <_Z23getFont_verdana_12_4bppv>:
{
 8008ddc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008dde:	4d17      	ldr	r5, [pc, #92]	; (8008e3c <_Z23getFont_verdana_12_4bppv+0x60>)
 8008de0:	682c      	ldr	r4, [r5, #0]
 8008de2:	f3bf 8f5b 	dmb	ish
 8008de6:	f014 0401 	ands.w	r4, r4, #1
{
 8008dea:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008dec:	d122      	bne.n	8008e34 <_Z23getFont_verdana_12_4bppv+0x58>
 8008dee:	4628      	mov	r0, r5
 8008df0:	f021 f867 	bl	8029ec2 <__cxa_guard_acquire>
 8008df4:	b1f0      	cbz	r0, 8008e34 <_Z23getFont_verdana_12_4bppv+0x58>
 8008df6:	233f      	movs	r3, #63	; 0x3f
 8008df8:	9309      	str	r3, [sp, #36]	; 0x24
 8008dfa:	4b11      	ldr	r3, [pc, #68]	; (8008e40 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008dfc:	9308      	str	r3, [sp, #32]
 8008dfe:	4b11      	ldr	r3, [pc, #68]	; (8008e44 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008e00:	9307      	str	r3, [sp, #28]
 8008e02:	2301      	movs	r3, #1
 8008e04:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008e08:	9304      	str	r3, [sp, #16]
 8008e0a:	2304      	movs	r3, #4
 8008e0c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008e10:	230c      	movs	r3, #12
 8008e12:	490d      	ldr	r1, [pc, #52]	; (8008e48 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008e14:	9300      	str	r3, [sp, #0]
 8008e16:	2260      	movs	r2, #96	; 0x60
 8008e18:	230f      	movs	r3, #15
 8008e1a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008e1e:	480b      	ldr	r0, [pc, #44]	; (8008e4c <_Z23getFont_verdana_12_4bppv+0x70>)
 8008e20:	940a      	str	r4, [sp, #40]	; 0x28
 8008e22:	9401      	str	r4, [sp, #4]
 8008e24:	f7fd f9ae 	bl	8006184 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008e28:	4809      	ldr	r0, [pc, #36]	; (8008e50 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008e2a:	f021 ff4d 	bl	802acc8 <atexit>
 8008e2e:	4628      	mov	r0, r5
 8008e30:	f021 f853 	bl	8029eda <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008e34:	4805      	ldr	r0, [pc, #20]	; (8008e4c <_Z23getFont_verdana_12_4bppv+0x70>)
 8008e36:	b00f      	add	sp, #60	; 0x3c
 8008e38:	bd30      	pop	{r4, r5, pc}
 8008e3a:	bf00      	nop
 8008e3c:	20001ef4 	.word	0x20001ef4
 8008e40:	08047080 	.word	0x08047080
 8008e44:	0804728c 	.word	0x0804728c
 8008e48:	080465c8 	.word	0x080465c8
 8008e4c:	20001ef8 	.word	0x20001ef8
 8008e50:	08008dd9 	.word	0x08008dd9

08008e54 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008e54:	4770      	bx	lr
	...

08008e58 <_Z23getFont_verdana_19_4bppv>:
{
 8008e58:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008e5a:	4d17      	ldr	r5, [pc, #92]	; (8008eb8 <_Z23getFont_verdana_19_4bppv+0x60>)
 8008e5c:	682c      	ldr	r4, [r5, #0]
 8008e5e:	f3bf 8f5b 	dmb	ish
 8008e62:	f014 0401 	ands.w	r4, r4, #1
{
 8008e66:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008e68:	d122      	bne.n	8008eb0 <_Z23getFont_verdana_19_4bppv+0x58>
 8008e6a:	4628      	mov	r0, r5
 8008e6c:	f021 f829 	bl	8029ec2 <__cxa_guard_acquire>
 8008e70:	b1f0      	cbz	r0, 8008eb0 <_Z23getFont_verdana_19_4bppv+0x58>
 8008e72:	233f      	movs	r3, #63	; 0x3f
 8008e74:	9309      	str	r3, [sp, #36]	; 0x24
 8008e76:	4b11      	ldr	r3, [pc, #68]	; (8008ebc <_Z23getFont_verdana_19_4bppv+0x64>)
 8008e78:	9308      	str	r3, [sp, #32]
 8008e7a:	4b11      	ldr	r3, [pc, #68]	; (8008ec0 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008e7c:	9307      	str	r3, [sp, #28]
 8008e7e:	2301      	movs	r3, #1
 8008e80:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008e84:	9304      	str	r3, [sp, #16]
 8008e86:	2304      	movs	r3, #4
 8008e88:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008e8c:	2313      	movs	r3, #19
 8008e8e:	490d      	ldr	r1, [pc, #52]	; (8008ec4 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008e90:	9300      	str	r3, [sp, #0]
 8008e92:	225f      	movs	r2, #95	; 0x5f
 8008e94:	2317      	movs	r3, #23
 8008e96:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008e9a:	480b      	ldr	r0, [pc, #44]	; (8008ec8 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008e9c:	940a      	str	r4, [sp, #40]	; 0x28
 8008e9e:	9401      	str	r4, [sp, #4]
 8008ea0:	f7fd f970 	bl	8006184 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008ea4:	4809      	ldr	r0, [pc, #36]	; (8008ecc <_Z23getFont_verdana_19_4bppv+0x74>)
 8008ea6:	f021 ff0f 	bl	802acc8 <atexit>
 8008eaa:	4628      	mov	r0, r5
 8008eac:	f021 f815 	bl	8029eda <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008eb0:	4805      	ldr	r0, [pc, #20]	; (8008ec8 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008eb2:	b00f      	add	sp, #60	; 0x3c
 8008eb4:	bd30      	pop	{r4, r5, pc}
 8008eb6:	bf00      	nop
 8008eb8:	20001f24 	.word	0x20001f24
 8008ebc:	08047104 	.word	0x08047104
 8008ec0:	08047290 	.word	0x08047290
 8008ec4:	08046b08 	.word	0x08046b08
 8008ec8:	20001f28 	.word	0x20001f28
 8008ecc:	08008e55 	.word	0x08008e55

08008ed0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008ed0:	4770      	bx	lr
	...

08008ed4 <_Z23getFont_verdana_40_4bppv>:
{
 8008ed4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008ed6:	4d16      	ldr	r5, [pc, #88]	; (8008f30 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008ed8:	682c      	ldr	r4, [r5, #0]
 8008eda:	f3bf 8f5b 	dmb	ish
 8008ede:	f014 0401 	ands.w	r4, r4, #1
{
 8008ee2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008ee4:	d120      	bne.n	8008f28 <_Z23getFont_verdana_40_4bppv+0x54>
 8008ee6:	4628      	mov	r0, r5
 8008ee8:	f020 ffeb 	bl	8029ec2 <__cxa_guard_acquire>
 8008eec:	b1e0      	cbz	r0, 8008f28 <_Z23getFont_verdana_40_4bppv+0x54>
 8008eee:	233f      	movs	r3, #63	; 0x3f
 8008ef0:	9309      	str	r3, [sp, #36]	; 0x24
 8008ef2:	4b10      	ldr	r3, [pc, #64]	; (8008f34 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008ef4:	9308      	str	r3, [sp, #32]
 8008ef6:	4b10      	ldr	r3, [pc, #64]	; (8008f38 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008ef8:	4910      	ldr	r1, [pc, #64]	; (8008f3c <_Z23getFont_verdana_40_4bppv+0x68>)
 8008efa:	4811      	ldr	r0, [pc, #68]	; (8008f40 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008efc:	940a      	str	r4, [sp, #40]	; 0x28
 8008efe:	2201      	movs	r2, #1
 8008f00:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008f04:	2304      	movs	r3, #4
 8008f06:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8008f0a:	2328      	movs	r3, #40	; 0x28
 8008f0c:	9300      	str	r3, [sp, #0]
 8008f0e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008f12:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008f16:	9405      	str	r4, [sp, #20]
 8008f18:	f7fd f934 	bl	8006184 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008f1c:	4809      	ldr	r0, [pc, #36]	; (8008f44 <_Z23getFont_verdana_40_4bppv+0x70>)
 8008f1e:	f021 fed3 	bl	802acc8 <atexit>
 8008f22:	4628      	mov	r0, r5
 8008f24:	f020 ffd9 	bl	8029eda <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008f28:	4805      	ldr	r0, [pc, #20]	; (8008f40 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008f2a:	b00f      	add	sp, #60	; 0x3c
 8008f2c:	bd30      	pop	{r4, r5, pc}
 8008f2e:	bf00      	nop
 8008f30:	20001f54 	.word	0x20001f54
 8008f34:	08047284 	.word	0x08047284
 8008f38:	08047294 	.word	0x08047294
 8008f3c:	0804703c 	.word	0x0804703c
 8008f40:	20001f58 	.word	0x20001f58
 8008f44:	08008ed1 	.word	0x08008ed1

08008f48 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008f48:	2000      	movs	r0, #0
 8008f4a:	4770      	bx	lr

08008f4c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008f4c:	2000      	movs	r0, #0
 8008f4e:	4770      	bx	lr

08008f50 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008f50:	b40e      	push	{r1, r2, r3}
 8008f52:	b503      	push	{r0, r1, lr}
 8008f54:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008f56:	2100      	movs	r1, #0
{
 8008f58:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008f5c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008f5e:	f00d fe4d 	bl	8016bfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008f62:	b002      	add	sp, #8
 8008f64:	f85d eb04 	ldr.w	lr, [sp], #4
 8008f68:	b003      	add	sp, #12
 8008f6a:	4770      	bx	lr

08008f6c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008f6c:	b40c      	push	{r2, r3}
 8008f6e:	b507      	push	{r0, r1, r2, lr}
 8008f70:	ab04      	add	r3, sp, #16
 8008f72:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008f76:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008f78:	f00d fe40 	bl	8016bfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008f7c:	b003      	add	sp, #12
 8008f7e:	f85d eb04 	ldr.w	lr, [sp], #4
 8008f82:	b002      	add	sp, #8
 8008f84:	4770      	bx	lr
	...

08008f88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008f88:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008f8a:	b510      	push	{r4, lr}
 8008f8c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008f8e:	b373      	cbz	r3, 8008fee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008f90:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008f92:	b92b      	cbnz	r3, 8008fa0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008f94:	4b18      	ldr	r3, [pc, #96]	; (8008ff8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008f96:	4a19      	ldr	r2, [pc, #100]	; (8008ffc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008f98:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008f9a:	4819      	ldr	r0, [pc, #100]	; (8009000 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008f9c:	f021 fe76 	bl	802ac8c <__assert_func>
            return buffer[pos];
 8008fa0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008fa2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008fa6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008fa8:	b30b      	cbz	r3, 8008fee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008faa:	f00f fa24 	bl	80183f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008fae:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008fb0:	2b01      	cmp	r3, #1
 8008fb2:	d803      	bhi.n	8008fbc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008fb4:	4b13      	ldr	r3, [pc, #76]	; (8009004 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008fb6:	4a14      	ldr	r2, [pc, #80]	; (8009008 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008fb8:	21cb      	movs	r1, #203	; 0xcb
 8008fba:	e7ee      	b.n	8008f9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008fbc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008fbe:	1c53      	adds	r3, r2, #1
 8008fc0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008fc2:	2b09      	cmp	r3, #9
 8008fc4:	4619      	mov	r1, r3
 8008fc6:	bf88      	it	hi
 8008fc8:	f1a3 010a 	subhi.w	r1, r3, #10
 8008fcc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008fd0:	f640 103f 	movw	r0, #2367	; 0x93f
 8008fd4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008fd6:	4281      	cmp	r1, r0
 8008fd8:	d109      	bne.n	8008fee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008fda:	2b0a      	cmp	r3, #10
 8008fdc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008fe0:	bf28      	it	cs
 8008fe2:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008fe4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008fe8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008fea:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008fec:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008fee:	4620      	mov	r0, r4
}
 8008ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008ff4:	f00f b902 	b.w	80181fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008ff8:	0802e4e4 	.word	0x0802e4e4
 8008ffc:	0802e4ed 	.word	0x0802e4ed
 8009000:	0802e598 	.word	0x0802e598
 8009004:	0802e5e2 	.word	0x0802e5e2
 8009008:	0802e5f0 	.word	0x0802e5f0

0800900c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800900c:	f00f b8bd 	b.w	801818a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08009010 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8009010:	b510      	push	{r4, lr}
 8009012:	b086      	sub	sp, #24
 8009014:	ac02      	add	r4, sp, #8
 8009016:	e884 0006 	stmia.w	r4, {r1, r2}
 800901a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800901c:	ab0a      	add	r3, sp, #40	; 0x28
 800901e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8009020:	9301      	str	r3, [sp, #4]
 8009022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009024:	9300      	str	r3, [sp, #0]
 8009026:	4621      	mov	r1, r4
 8009028:	9b08      	ldr	r3, [sp, #32]
 800902a:	f00c f9ab 	bl	8015384 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800902e:	b006      	add	sp, #24
 8009030:	bd10      	pop	{r4, pc}
	...

08009034 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009034:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8009036:	bb18      	cbnz	r0, 8009080 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8009038:	4b12      	ldr	r3, [pc, #72]	; (8009084 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800903a:	4813      	ldr	r0, [pc, #76]	; (8009088 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800903c:	681c      	ldr	r4, [r3, #0]
 800903e:	4913      	ldr	r1, [pc, #76]	; (800908c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8009040:	b1b4      	cbz	r4, 8009070 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8009042:	6822      	ldr	r2, [r4, #0]
 8009044:	4422      	add	r2, r4
 8009046:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8009048:	6862      	ldr	r2, [r4, #4]
 800904a:	4422      	add	r2, r4
 800904c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800904e:	68a2      	ldr	r2, [r4, #8]
 8009050:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8009052:	4b0f      	ldr	r3, [pc, #60]	; (8009090 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8009054:	2200      	movs	r2, #0
 8009056:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8009058:	f000 f838 	bl	80090cc <_ZN17TypedTextDatabase8getFontsEv>
 800905c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800905e:	f000 f833 	bl	80090c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8009062:	4b0c      	ldr	r3, [pc, #48]	; (8009094 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8009064:	601c      	str	r4, [r3, #0]
        fonts = f;
 8009066:	4b0c      	ldr	r3, [pc, #48]	; (8009098 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8009068:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800906a:	4b0c      	ldr	r3, [pc, #48]	; (800909c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800906c:	8018      	strh	r0, [r3, #0]
    }
}
 800906e:	e007      	b.n	8009080 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8009070:	4b0b      	ldr	r3, [pc, #44]	; (80090a0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8009072:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8009074:	4b0b      	ldr	r3, [pc, #44]	; (80090a4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8009076:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8009078:	4b0b      	ldr	r3, [pc, #44]	; (80090a8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800907a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800907c:	2c00      	cmp	r4, #0
 800907e:	d1e8      	bne.n	8009052 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8009080:	bd38      	pop	{r3, r4, r5, pc}
 8009082:	bf00      	nop
 8009084:	20001f84 	.word	0x20001f84
 8009088:	20001f88 	.word	0x20001f88
 800908c:	20001f8c 	.word	0x20001f8c
 8009090:	20001f90 	.word	0x20001f90
 8009094:	20012dfc 	.word	0x20012dfc
 8009098:	20012e04 	.word	0x20012e04
 800909c:	20012e00 	.word	0x20012e00
 80090a0:	0804742c 	.word	0x0804742c
 80090a4:	08047298 	.word	0x08047298
 80090a8:	08047a58 	.word	0x08047a58

080090ac <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80090ac:	4b04      	ldr	r3, [pc, #16]	; (80090c0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80090ae:	681b      	ldr	r3, [r3, #0]
 80090b0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80090b4:	4b03      	ldr	r3, [pc, #12]	; (80090c4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80090b6:	681b      	ldr	r3, [r3, #0]
}
 80090b8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80090bc:	4770      	bx	lr
 80090be:	bf00      	nop
 80090c0:	20001f8c 	.word	0x20001f8c
 80090c4:	20001f88 	.word	0x20001f88

080090c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80090c8:	2065      	movs	r0, #101	; 0x65
 80090ca:	4770      	bx	lr

080090cc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80090cc:	4800      	ldr	r0, [pc, #0]	; (80090d0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80090ce:	4770      	bx	lr
 80090d0:	20001f94 	.word	0x20001f94

080090d4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80090d4:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80090d6:	f7ff febf 	bl	8008e58 <_Z23getFont_verdana_19_4bppv>
};
 80090da:	4c06      	ldr	r4, [pc, #24]	; (80090f4 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80090dc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80090de:	f7ff fef9 	bl	8008ed4 <_Z23getFont_verdana_40_4bppv>
};
 80090e2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80090e4:	f7ff fe3c 	bl	8008d60 <_Z23getFont_verdana_10_4bppv>
};
 80090e8:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80090ea:	f7ff fe77 	bl	8008ddc <_Z23getFont_verdana_12_4bppv>
};
 80090ee:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80090f0:	bd10      	pop	{r4, pc}
 80090f2:	bf00      	nop
 80090f4:	20001f94 	.word	0x20001f94

080090f8 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80090f8:	4770      	bx	lr

080090fa <_ZThn4_N20CalibrationPresenterD1Ev>:
 80090fa:	3804      	subs	r0, #4
 80090fc:	4770      	bx	lr

080090fe <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80090fe:	4770      	bx	lr

08009100 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009100:	68c0      	ldr	r0, [r0, #12]
 8009102:	6803      	ldr	r3, [r0, #0]
 8009104:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009106:	4718      	bx	r3

08009108 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009108:	f1a0 0004 	sub.w	r0, r0, #4
 800910c:	f7ff bff8 	b.w	8009100 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08009110 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8009110:	b510      	push	{r4, lr}
 8009112:	2110      	movs	r1, #16
 8009114:	4604      	mov	r4, r0
 8009116:	f020 fed2 	bl	8029ebe <_ZdlPvj>
 800911a:	4620      	mov	r0, r4
 800911c:	bd10      	pop	{r4, pc}

0800911e <_ZThn4_N20CalibrationPresenterD0Ev>:
 800911e:	f1a0 0004 	sub.w	r0, r0, #4
 8009122:	e7f5      	b.n	8009110 <_ZN20CalibrationPresenterD0Ev>

08009124 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8009124:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8009126:	2200      	movs	r2, #0
 8009128:	6082      	str	r2, [r0, #8]
    : view(v)
 800912a:	4a04      	ldr	r2, [pc, #16]	; (800913c <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 800912c:	60c1      	str	r1, [r0, #12]
 800912e:	f102 0408 	add.w	r4, r2, #8
 8009132:	3224      	adds	r2, #36	; 0x24
 8009134:	6004      	str	r4, [r0, #0]
 8009136:	6042      	str	r2, [r0, #4]
}
 8009138:	bd10      	pop	{r4, pc}
 800913a:	bf00      	nop
 800913c:	0802e6c4 	.word	0x0802e6c4

08009140 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8009140:	4770      	bx	lr
	...

08009144 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8009144:	b510      	push	{r4, lr}
 8009146:	4b03      	ldr	r3, [pc, #12]	; (8009154 <_ZN15CalibrationViewD1Ev+0x10>)
 8009148:	6003      	str	r3, [r0, #0]
 800914a:	4604      	mov	r4, r0
 800914c:	f7f9 ff50 	bl	8002ff0 <_ZN19CalibrationViewBaseD1Ev>
 8009150:	4620      	mov	r0, r4
 8009152:	bd10      	pop	{r4, pc}
 8009154:	0802e700 	.word	0x0802e700

08009158 <_ZN15CalibrationViewD0Ev>:
 8009158:	b510      	push	{r4, lr}
 800915a:	4604      	mov	r4, r0
 800915c:	f7ff fff2 	bl	8009144 <_ZN15CalibrationViewD1Ev>
 8009160:	4620      	mov	r0, r4
 8009162:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009166:	f020 feaa 	bl	8029ebe <_ZdlPvj>
 800916a:	4620      	mov	r0, r4
 800916c:	bd10      	pop	{r4, pc}
	...

08009170 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8009170:	b510      	push	{r4, lr}
 8009172:	4604      	mov	r4, r0
 8009174:	f7fa f850 	bl	8003218 <_ZN19CalibrationViewBaseC1Ev>
 8009178:	4b01      	ldr	r3, [pc, #4]	; (8009180 <_ZN15CalibrationViewC1Ev+0x10>)
 800917a:	6023      	str	r3, [r4, #0]
}
 800917c:	4620      	mov	r0, r4
 800917e:	bd10      	pop	{r4, pc}
 8009180:	0802e700 	.word	0x0802e700

08009184 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8009184:	f7f9 bf01 	b.w	8002f8a <_ZN19CalibrationViewBase11setupScreenEv>

08009188 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8009188:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800918a:	4a0a      	ldr	r2, [pc, #40]	; (80091b4 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 800918c:	4605      	mov	r5, r0
 800918e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009190:	460b      	mov	r3, r1
 8009192:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009196:	2104      	movs	r1, #4
 8009198:	f00f fee2 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800919c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80091a0:	f00d fe56 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80091a4:	b92c      	cbnz	r4, 80091b2 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 80091a6:	f00c fd6b 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80091aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80091ae:	f7fb bc61 	b.w	8004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80091b2:	bd38      	pop	{r3, r4, r5, pc}
 80091b4:	0802e6f4 	.word	0x0802e6f4

080091b8 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 80091b8:	4770      	bx	lr

080091ba <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 80091ba:	3804      	subs	r0, #4
 80091bc:	4770      	bx	lr

080091be <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 80091be:	4770      	bx	lr

080091c0 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 80091c0:	4770      	bx	lr

080091c2 <_ZN25Calibration_HallPresenterD0Ev>:
 80091c2:	b510      	push	{r4, lr}
 80091c4:	2110      	movs	r1, #16
 80091c6:	4604      	mov	r4, r0
 80091c8:	f020 fe79 	bl	8029ebe <_ZdlPvj>
 80091cc:	4620      	mov	r0, r4
 80091ce:	bd10      	pop	{r4, pc}

080091d0 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 80091d0:	f1a0 0004 	sub.w	r0, r0, #4
 80091d4:	e7f5      	b.n	80091c2 <_ZN25Calibration_HallPresenterD0Ev>

080091d6 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 80091d6:	4770      	bx	lr

080091d8 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 80091d8:	b510      	push	{r4, lr}
 80091da:	2200      	movs	r2, #0
 80091dc:	6082      	str	r2, [r0, #8]
    : view(v)
 80091de:	4a04      	ldr	r2, [pc, #16]	; (80091f0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80091e0:	60c1      	str	r1, [r0, #12]
 80091e2:	f102 0408 	add.w	r4, r2, #8
 80091e6:	3224      	adds	r2, #36	; 0x24
 80091e8:	6004      	str	r4, [r0, #0]
 80091ea:	6042      	str	r2, [r0, #4]
}
 80091ec:	bd10      	pop	{r4, pc}
 80091ee:	bf00      	nop
 80091f0:	0802e730 	.word	0x0802e730

080091f4 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80091f4:	4770      	bx	lr

080091f6 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80091f6:	4770      	bx	lr

080091f8 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80091f8:	b510      	push	{r4, lr}
 80091fa:	4b03      	ldr	r3, [pc, #12]	; (8009208 <_ZN20Calibration_HallViewD1Ev+0x10>)
 80091fc:	6003      	str	r3, [r0, #0]
 80091fe:	4604      	mov	r4, r0
 8009200:	f7fa fa50 	bl	80036a4 <_ZN24Calibration_HallViewBaseD1Ev>
 8009204:	4620      	mov	r0, r4
 8009206:	bd10      	pop	{r4, pc}
 8009208:	0802e770 	.word	0x0802e770

0800920c <_ZN20Calibration_HallViewD0Ev>:
 800920c:	b510      	push	{r4, lr}
 800920e:	4604      	mov	r4, r0
 8009210:	f7ff fff2 	bl	80091f8 <_ZN20Calibration_HallViewD1Ev>
 8009214:	4620      	mov	r0, r4
 8009216:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 800921a:	f020 fe50 	bl	8029ebe <_ZdlPvj>
 800921e:	4620      	mov	r0, r4
 8009220:	bd10      	pop	{r4, pc}
	...

08009224 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8009224:	b510      	push	{r4, lr}
 8009226:	4604      	mov	r4, r0
 8009228:	f7fa fa82 	bl	8003730 <_ZN24Calibration_HallViewBaseC1Ev>
 800922c:	4b01      	ldr	r3, [pc, #4]	; (8009234 <_ZN20Calibration_HallViewC1Ev+0x10>)
 800922e:	6023      	str	r3, [r4, #0]
}
 8009230:	4620      	mov	r0, r4
 8009232:	bd10      	pop	{r4, pc}
 8009234:	0802e770 	.word	0x0802e770

08009238 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8009238:	f7fa ba0f 	b.w	800365a <_ZN24Calibration_HallViewBase11setupScreenEv>

0800923c <_ZN20Calibration_HallView25function_cali_hall_sensorEv>:

void Calibration_HallView::function_cali_hall_sensor()
{
 800923c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800923e:	4604      	mov	r4, r0
 8009240:	2500      	movs	r5, #0
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8009242:	ab01      	add	r3, sp, #4
 8009244:	4a18      	ldr	r2, [pc, #96]	; (80092a8 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 8009246:	9501      	str	r5, [sp, #4]
 8009248:	210a      	movs	r1, #10
 800924a:	f500 706a 	add.w	r0, r0, #936	; 0x3a8
 800924e:	f010 f873 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//uint32_t* Samples = MEAS_start_measure();
	//FFT fft = calculate_freq_and_signalstrength(3, Samples);

	Unicode::snprintfFloat(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%.2f", 0.0);
	CALIBRATION_HSR_S.invalidate();
 8009252:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 8009256:	f00d fdfb 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800925a:	ab01      	add	r3, sp, #4
 800925c:	4a12      	ldr	r2, [pc, #72]	; (80092a8 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 800925e:	9501      	str	r5, [sp, #4]
 8009260:	210a      	movs	r1, #10
 8009262:	f504 7065 	add.w	r0, r4, #916	; 0x394
 8009266:	f010 f867 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%.2f", 0.0);
	CALIBRATION_HSR_F.invalidate();
 800926a:	f504 7098 	add.w	r0, r4, #304	; 0x130
 800926e:	f00d fdef 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009272:	ab01      	add	r3, sp, #4
 8009274:	4a0c      	ldr	r2, [pc, #48]	; (80092a8 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 8009276:	9501      	str	r5, [sp, #4]
 8009278:	210a      	movs	r1, #10
 800927a:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 800927e:	f010 f85b 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//fft = calculate_freq_and_signalstrength(4, Samples);

	Unicode::snprintfFloat(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%.2f", 0.0);
	CALIBRATION_HSL_S.invalidate();
 8009282:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8009286:	f00d fde3 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800928a:	4a07      	ldr	r2, [pc, #28]	; (80092a8 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x6c>)
 800928c:	9501      	str	r5, [sp, #4]
 800928e:	ab01      	add	r3, sp, #4
 8009290:	210a      	movs	r1, #10
 8009292:	f504 7060 	add.w	r0, r4, #896	; 0x380
 8009296:	f010 f84f 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%.2f", 0.0);
	CALIBRATION_HSL_F.invalidate();
 800929a:	f104 00e4 	add.w	r0, r4, #228	; 0xe4

#endif
}
 800929e:	b003      	add	sp, #12
 80092a0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	CALIBRATION_HSL_F.invalidate();
 80092a4:	f00d bdd4 	b.w	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 80092a8:	0802e760 	.word	0x0802e760

080092ac <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 80092ac:	4770      	bx	lr

080092ae <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 80092ae:	3804      	subs	r0, #4
 80092b0:	4770      	bx	lr

080092b2 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 80092b2:	4770      	bx	lr

080092b4 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 80092b4:	4770      	bx	lr

080092b6 <_ZN24Calibration_PadPresenterD0Ev>:
 80092b6:	b510      	push	{r4, lr}
 80092b8:	2110      	movs	r1, #16
 80092ba:	4604      	mov	r4, r0
 80092bc:	f020 fdff 	bl	8029ebe <_ZdlPvj>
 80092c0:	4620      	mov	r0, r4
 80092c2:	bd10      	pop	{r4, pc}

080092c4 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80092c4:	f1a0 0004 	sub.w	r0, r0, #4
 80092c8:	e7f5      	b.n	80092b6 <_ZN24Calibration_PadPresenterD0Ev>

080092ca <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80092ca:	4770      	bx	lr

080092cc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80092cc:	b510      	push	{r4, lr}
 80092ce:	2200      	movs	r2, #0
 80092d0:	6082      	str	r2, [r0, #8]
    : view(v)
 80092d2:	4a04      	ldr	r2, [pc, #16]	; (80092e4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80092d4:	60c1      	str	r1, [r0, #12]
 80092d6:	f102 0408 	add.w	r4, r2, #8
 80092da:	3224      	adds	r2, #36	; 0x24
 80092dc:	6004      	str	r4, [r0, #0]
 80092de:	6042      	str	r2, [r0, #4]
}
 80092e0:	bd10      	pop	{r4, pc}
 80092e2:	bf00      	nop
 80092e4:	0802e7a4 	.word	0x0802e7a4

080092e8 <_ZN19Calibration_PadView14tearDownScreenEv>:
    Calibration_PadViewBase::setupScreen();
}

void Calibration_PadView::tearDownScreen() {
    Calibration_PadViewBase::tearDownScreen();
}
 80092e8:	4770      	bx	lr

080092ea <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value) {}
 80092ea:	4770      	bx	lr

080092ec <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 80092ec:	b510      	push	{r4, lr}
 80092ee:	4b03      	ldr	r3, [pc, #12]	; (80092fc <_ZN19Calibration_PadViewD1Ev+0x10>)
 80092f0:	6003      	str	r3, [r0, #0]
 80092f2:	4604      	mov	r4, r0
 80092f4:	f7fa fcf2 	bl	8003cdc <_ZN23Calibration_PadViewBaseD1Ev>
 80092f8:	4620      	mov	r0, r4
 80092fa:	bd10      	pop	{r4, pc}
 80092fc:	0802e7dc 	.word	0x0802e7dc

08009300 <_ZN19Calibration_PadViewD0Ev>:
 8009300:	b510      	push	{r4, lr}
 8009302:	4604      	mov	r4, r0
 8009304:	f7ff fff2 	bl	80092ec <_ZN19Calibration_PadViewD1Ev>
 8009308:	4620      	mov	r0, r4
 800930a:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 800930e:	f020 fdd6 	bl	8029ebe <_ZdlPvj>
 8009312:	4620      	mov	r0, r4
 8009314:	bd10      	pop	{r4, pc}
	...

08009318 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView() {}
 8009318:	b510      	push	{r4, lr}
 800931a:	4604      	mov	r4, r0
 800931c:	f7fa fd18 	bl	8003d50 <_ZN23Calibration_PadViewBaseC1Ev>
 8009320:	4b01      	ldr	r3, [pc, #4]	; (8009328 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8009322:	6023      	str	r3, [r4, #0]
 8009324:	4620      	mov	r0, r4
 8009326:	bd10      	pop	{r4, pc}
 8009328:	0802e7dc 	.word	0x0802e7dc

0800932c <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800932c:	f7fa bcb1 	b.w	8003c92 <_ZN23Calibration_PadViewBase11setupScreenEv>

08009330 <_ZN19Calibration_PadView17function_cali_padEv>:

void Calibration_PadView::function_cali_pad() {
 8009330:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009332:	4604      	mov	r4, r0
 8009334:	2500      	movs	r5, #0
 8009336:	ab01      	add	r3, sp, #4
 8009338:	4a18      	ldr	r2, [pc, #96]	; (800939c <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 800933a:	9501      	str	r5, [sp, #4]
 800933c:	210a      	movs	r1, #10
 800933e:	f500 705b 	add.w	r0, r0, #876	; 0x36c
 8009342:	f00f fff9 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
#ifndef SIMULATOR
	
    Unicode::snprintfFloat(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADR_S.invalidate();
 8009346:	f104 0098 	add.w	r0, r4, #152	; 0x98
 800934a:	f00d fd81 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800934e:	ab01      	add	r3, sp, #4
 8009350:	4a12      	ldr	r2, [pc, #72]	; (800939c <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 8009352:	9501      	str	r5, [sp, #4]
 8009354:	210a      	movs	r1, #10
 8009356:	f504 7060 	add.w	r0, r4, #896	; 0x380
 800935a:	f00f ffed 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADR_F.invalidate();
 800935e:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 8009362:	f00d fd75 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009366:	ab01      	add	r3, sp, #4
 8009368:	4a0c      	ldr	r2, [pc, #48]	; (800939c <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 800936a:	9501      	str	r5, [sp, #4]
 800936c:	210a      	movs	r1, #10
 800936e:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 8009372:	f00f ffe1 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

    Unicode::snprintfFloat(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADL_S.invalidate();
 8009376:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800937a:	f00d fd69 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800937e:	4a07      	ldr	r2, [pc, #28]	; (800939c <_ZN19Calibration_PadView17function_cali_padEv+0x6c>)
 8009380:	9501      	str	r5, [sp, #4]
 8009382:	ab01      	add	r3, sp, #4
 8009384:	210a      	movs	r1, #10
 8009386:	f504 7065 	add.w	r0, r4, #916	; 0x394
 800938a:	f00f ffd5 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE,
                           "%.2f", 0.0);
    CALIBRATION_PADL_F.invalidate();
 800938e:	f504 7098 	add.w	r0, r4, #304	; 0x130

#endif
}
 8009392:	b003      	add	sp, #12
 8009394:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    CALIBRATION_PADL_F.invalidate();
 8009398:	f00d bd5a 	b.w	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800939c:	0802e760 	.word	0x0802e760

080093a0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80093a0:	4770      	bx	lr

080093a2 <_ZN19FrontendApplicationD0Ev>:
 80093a2:	b510      	push	{r4, lr}
 80093a4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80093a8:	4604      	mov	r4, r0
 80093aa:	f020 fd88 	bl	8029ebe <_ZdlPvj>
 80093ae:	4620      	mov	r0, r4
 80093b0:	bd10      	pop	{r4, pc}

080093b2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80093b2:	b510      	push	{r4, lr}
 80093b4:	4604      	mov	r4, r0
    {
        model.tick();
 80093b6:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80093ba:	f000 fb11 	bl	80099e0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80093be:	4620      	mov	r0, r4
    }
 80093c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80093c4:	f00c bd20 	b.w	8015e08 <_ZN8touchgfx11Application15handleTickEventEv>

080093c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80093c8:	b510      	push	{r4, lr}
 80093ca:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80093cc:	f7fb fa22 	bl	8004814 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80093d0:	4b01      	ldr	r3, [pc, #4]	; (80093d8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80093d2:	6023      	str	r3, [r4, #0]
{

}
 80093d4:	4620      	mov	r0, r4
 80093d6:	bd10      	pop	{r4, pc}
 80093d8:	0802e818 	.word	0x0802e818

080093dc <_ZN17Gauge_with_ValuesD1Ev>:
 80093dc:	b510      	push	{r4, lr}
 80093de:	4b03      	ldr	r3, [pc, #12]	; (80093ec <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80093e0:	6003      	str	r3, [r0, #0]
 80093e2:	4604      	mov	r4, r0
 80093e4:	f7fc fd1c 	bl	8005e20 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80093e8:	4620      	mov	r0, r4
 80093ea:	bd10      	pop	{r4, pc}
 80093ec:	0802e86c 	.word	0x0802e86c

080093f0 <_ZN17Gauge_with_ValuesD0Ev>:
 80093f0:	b510      	push	{r4, lr}
 80093f2:	4604      	mov	r4, r0
 80093f4:	f7ff fff2 	bl	80093dc <_ZN17Gauge_with_ValuesD1Ev>
 80093f8:	4620      	mov	r0, r4
 80093fa:	f44f 7162 	mov.w	r1, #904	; 0x388
 80093fe:	f020 fd5e 	bl	8029ebe <_ZdlPvj>
 8009402:	4620      	mov	r0, r4
 8009404:	bd10      	pop	{r4, pc}
	...

08009408 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8009408:	b510      	push	{r4, lr}
 800940a:	4604      	mov	r4, r0
 800940c:	f7fc fd12 	bl	8005e34 <_ZN21Gauge_with_ValuesBaseC1Ev>
 8009410:	4b01      	ldr	r3, [pc, #4]	; (8009418 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8009412:	6023      	str	r3, [r4, #0]
{

}
 8009414:	4620      	mov	r0, r4
 8009416:	bd10      	pop	{r4, pc}
 8009418:	0802e86c 	.word	0x0802e86c

0800941c <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 800941c:	f7fc bd01 	b.w	8005e22 <_ZN21Gauge_with_ValuesBase10initializeEv>

08009420 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8009420:	4770      	bx	lr

08009422 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8009422:	3804      	subs	r0, #4
 8009424:	4770      	bx	lr

08009426 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8009426:	4770      	bx	lr

08009428 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009428:	68c0      	ldr	r0, [r0, #12]
 800942a:	6803      	ldr	r3, [r0, #0]
 800942c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800942e:	4718      	bx	r3

08009430 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009430:	f1a0 0004 	sub.w	r0, r0, #4
 8009434:	f7ff bff8 	b.w	8009428 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08009438 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8009438:	b510      	push	{r4, lr}
 800943a:	2110      	movs	r1, #16
 800943c:	4604      	mov	r4, r0
 800943e:	f020 fd3e 	bl	8029ebe <_ZdlPvj>
 8009442:	4620      	mov	r0, r4
 8009444:	bd10      	pop	{r4, pc}

08009446 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8009446:	f1a0 0004 	sub.w	r0, r0, #4
 800944a:	e7f5      	b.n	8009438 <_ZN18Main_MenuPresenterD0Ev>

0800944c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800944c:	b510      	push	{r4, lr}
 800944e:	2200      	movs	r2, #0
 8009450:	6082      	str	r2, [r0, #8]
    : view(v)
 8009452:	4a04      	ldr	r2, [pc, #16]	; (8009464 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8009454:	60c1      	str	r1, [r0, #12]
 8009456:	f102 0408 	add.w	r4, r2, #8
 800945a:	3224      	adds	r2, #36	; 0x24
 800945c:	6004      	str	r4, [r0, #0]
 800945e:	6042      	str	r2, [r0, #4]
}
 8009460:	bd10      	pop	{r4, pc}
 8009462:	bf00      	nop
 8009464:	0802e8f8 	.word	0x0802e8f8

08009468 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8009468:	4770      	bx	lr
	...

0800946c <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800946c:	b510      	push	{r4, lr}
 800946e:	4b03      	ldr	r3, [pc, #12]	; (800947c <_ZN13Main_MenuViewD1Ev+0x10>)
 8009470:	6003      	str	r3, [r0, #0]
 8009472:	4604      	mov	r4, r0
 8009474:	f7fc feda 	bl	800622c <_ZN17Main_MenuViewBaseD1Ev>
 8009478:	4620      	mov	r0, r4
 800947a:	bd10      	pop	{r4, pc}
 800947c:	0802e930 	.word	0x0802e930

08009480 <_ZN13Main_MenuViewD0Ev>:
 8009480:	b510      	push	{r4, lr}
 8009482:	4604      	mov	r4, r0
 8009484:	f7ff fff2 	bl	800946c <_ZN13Main_MenuViewD1Ev>
 8009488:	4620      	mov	r0, r4
 800948a:	f241 117c 	movw	r1, #4476	; 0x117c
 800948e:	f020 fd16 	bl	8029ebe <_ZdlPvj>
 8009492:	4620      	mov	r0, r4
 8009494:	bd10      	pop	{r4, pc}
	...

08009498 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8009498:	b510      	push	{r4, lr}
 800949a:	4604      	mov	r4, r0
 800949c:	f7fc ff10 	bl	80062c0 <_ZN17Main_MenuViewBaseC1Ev>
 80094a0:	4b01      	ldr	r3, [pc, #4]	; (80094a8 <_ZN13Main_MenuViewC1Ev+0x10>)
 80094a2:	6023      	str	r3, [r4, #0]
}
 80094a4:	4620      	mov	r0, r4
 80094a6:	bd10      	pop	{r4, pc}
 80094a8:	0802e930 	.word	0x0802e930

080094ac <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80094ac:	f7fc be9a 	b.w	80061e4 <_ZN17Main_MenuViewBase11setupScreenEv>

080094b0 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80094b0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80094b2:	4a0a      	ldr	r2, [pc, #40]	; (80094dc <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80094b4:	4605      	mov	r5, r0
 80094b6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80094b8:	460b      	mov	r3, r1
 80094ba:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80094be:	2104      	movs	r1, #4
 80094c0:	f00f fd4e 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80094c4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80094c8:	f00d fcc2 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80094cc:	b92c      	cbnz	r4, 80094da <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80094ce:	f00c fbd7 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80094d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80094d6:	f7fb bacd 	b.w	8004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80094da:	bd38      	pop	{r3, r4, r5, pc}
 80094dc:	0802e6f4 	.word	0x0802e6f4

080094e0 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80094e0:	4770      	bx	lr

080094e2 <_ZThn4_N20MeasurementPresenterD1Ev>:
 80094e2:	3804      	subs	r0, #4
 80094e4:	4770      	bx	lr

080094e6 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80094e6:	4770      	bx	lr

080094e8 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80094e8:	68c0      	ldr	r0, [r0, #12]
 80094ea:	6803      	ldr	r3, [r0, #0]
 80094ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80094ee:	4718      	bx	r3

080094f0 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80094f0:	f1a0 0004 	sub.w	r0, r0, #4
 80094f4:	f7ff bff8 	b.w	80094e8 <_ZN20MeasurementPresenter15setTimeoutValueEi>

080094f8 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80094f8:	b510      	push	{r4, lr}
 80094fa:	2110      	movs	r1, #16
 80094fc:	4604      	mov	r4, r0
 80094fe:	f020 fcde 	bl	8029ebe <_ZdlPvj>
 8009502:	4620      	mov	r0, r4
 8009504:	bd10      	pop	{r4, pc}

08009506 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8009506:	f1a0 0004 	sub.w	r0, r0, #4
 800950a:	e7f5      	b.n	80094f8 <_ZN20MeasurementPresenterD0Ev>

0800950c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800950c:	b510      	push	{r4, lr}
 800950e:	2200      	movs	r2, #0
 8009510:	6082      	str	r2, [r0, #8]
    : view(v)
 8009512:	4a04      	ldr	r2, [pc, #16]	; (8009524 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8009514:	60c1      	str	r1, [r0, #12]
 8009516:	f102 0408 	add.w	r4, r2, #8
 800951a:	3224      	adds	r2, #36	; 0x24
 800951c:	6004      	str	r4, [r0, #0]
 800951e:	6042      	str	r2, [r0, #4]
}
 8009520:	bd10      	pop	{r4, pc}
 8009522:	bf00      	nop
 8009524:	0802e960 	.word	0x0802e960

08009528 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8009528:	4770      	bx	lr
	...

0800952c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800952c:	b510      	push	{r4, lr}
 800952e:	4b03      	ldr	r3, [pc, #12]	; (800953c <_ZN15MeasurementViewD1Ev+0x10>)
 8009530:	6003      	str	r3, [r0, #0]
 8009532:	4604      	mov	r4, r0
 8009534:	f7fd f934 	bl	80067a0 <_ZN19MeasurementViewBaseD1Ev>
 8009538:	4620      	mov	r0, r4
 800953a:	bd10      	pop	{r4, pc}
 800953c:	0802e998 	.word	0x0802e998

08009540 <_ZN15MeasurementViewD0Ev>:
 8009540:	b510      	push	{r4, lr}
 8009542:	4604      	mov	r4, r0
 8009544:	f7ff fff2 	bl	800952c <_ZN15MeasurementViewD1Ev>
 8009548:	4620      	mov	r0, r4
 800954a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800954e:	f020 fcb6 	bl	8029ebe <_ZdlPvj>
 8009552:	4620      	mov	r0, r4
 8009554:	bd10      	pop	{r4, pc}
	...

08009558 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8009558:	b510      	push	{r4, lr}
 800955a:	4604      	mov	r4, r0
 800955c:	f7fd f95a 	bl	8006814 <_ZN19MeasurementViewBaseC1Ev>
 8009560:	4b01      	ldr	r3, [pc, #4]	; (8009568 <_ZN15MeasurementViewC1Ev+0x10>)
 8009562:	6023      	str	r3, [r4, #0]
}
 8009564:	4620      	mov	r0, r4
 8009566:	bd10      	pop	{r4, pc}
 8009568:	0802e998 	.word	0x0802e998

0800956c <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800956c:	f7fd b8f4 	b.w	8006758 <_ZN19MeasurementViewBase11setupScreenEv>

08009570 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8009570:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009572:	4a0a      	ldr	r2, [pc, #40]	; (800959c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8009574:	4605      	mov	r5, r0
 8009576:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009578:	460b      	mov	r3, r1
 800957a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800957e:	2104      	movs	r1, #4
 8009580:	f00f fcee 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009584:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009588:	f00d fc62 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800958c:	b92c      	cbnz	r4, 800959a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800958e:	f00c fb77 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009592:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009596:	f7fb ba6d 	b.w	8004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800959a:	bd38      	pop	{r3, r4, r5, pc}
 800959c:	0802e6f4 	.word	0x0802e6f4

080095a0 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80095a0:	4770      	bx	lr

080095a2 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80095a2:	3804      	subs	r0, #4
 80095a4:	4770      	bx	lr

080095a6 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80095a6:	4770      	bx	lr

080095a8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80095a8:	68c0      	ldr	r0, [r0, #12]
 80095aa:	6803      	ldr	r3, [r0, #0]
 80095ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095ae:	4718      	bx	r3

080095b0 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80095b0:	f1a0 0004 	sub.w	r0, r0, #4
 80095b4:	f7ff bff8 	b.w	80095a8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080095b8 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80095b8:	b510      	push	{r4, lr}
 80095ba:	2110      	movs	r1, #16
 80095bc:	4604      	mov	r4, r0
 80095be:	f020 fc7e 	bl	8029ebe <_ZdlPvj>
 80095c2:	4620      	mov	r0, r4
 80095c4:	bd10      	pop	{r4, pc}

080095c6 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80095c6:	f1a0 0004 	sub.w	r0, r0, #4
 80095ca:	e7f5      	b.n	80095b8 <_ZN29Measurement_AccuratePresenterD0Ev>

080095cc <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80095cc:	b510      	push	{r4, lr}
 80095ce:	2200      	movs	r2, #0
 80095d0:	6082      	str	r2, [r0, #8]
    : view(v)
 80095d2:	4a04      	ldr	r2, [pc, #16]	; (80095e4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80095d4:	60c1      	str	r1, [r0, #12]
 80095d6:	f102 0408 	add.w	r4, r2, #8
 80095da:	3224      	adds	r2, #36	; 0x24
 80095dc:	6004      	str	r4, [r0, #0]
 80095de:	6042      	str	r2, [r0, #4]
}
 80095e0:	bd10      	pop	{r4, pc}
 80095e2:	bf00      	nop
 80095e4:	0802e9c8 	.word	0x0802e9c8

080095e8 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80095e8:	4770      	bx	lr
	...

080095ec <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80095ec:	b510      	push	{r4, lr}
 80095ee:	4b03      	ldr	r3, [pc, #12]	; (80095fc <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80095f0:	6003      	str	r3, [r0, #0]
 80095f2:	4604      	mov	r4, r0
 80095f4:	f7fd fb56 	bl	8006ca4 <_ZN28Measurement_AccurateViewBaseD1Ev>
 80095f8:	4620      	mov	r0, r4
 80095fa:	bd10      	pop	{r4, pc}
 80095fc:	0802ea00 	.word	0x0802ea00

08009600 <_ZN24Measurement_AccurateViewD0Ev>:
 8009600:	b510      	push	{r4, lr}
 8009602:	4604      	mov	r4, r0
 8009604:	f7ff fff2 	bl	80095ec <_ZN24Measurement_AccurateViewD1Ev>
 8009608:	4620      	mov	r0, r4
 800960a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800960e:	f020 fc56 	bl	8029ebe <_ZdlPvj>
 8009612:	4620      	mov	r0, r4
 8009614:	bd10      	pop	{r4, pc}
	...

08009618 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8009618:	b510      	push	{r4, lr}
 800961a:	4604      	mov	r4, r0
 800961c:	f7fd fb7c 	bl	8006d18 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8009620:	4b01      	ldr	r3, [pc, #4]	; (8009628 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8009622:	6023      	str	r3, [r4, #0]
}
 8009624:	4620      	mov	r0, r4
 8009626:	bd10      	pop	{r4, pc}
 8009628:	0802ea00 	.word	0x0802ea00

0800962c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800962c:	f7fd bb16 	b.w	8006c5c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08009630 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8009630:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009632:	4a0a      	ldr	r2, [pc, #40]	; (800965c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8009634:	4605      	mov	r5, r0
 8009636:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009638:	460b      	mov	r3, r1
 800963a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800963e:	2104      	movs	r1, #4
 8009640:	f00f fc8e 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009644:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009648:	f00d fc02 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800964c:	b92c      	cbnz	r4, 800965a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800964e:	f00c fb17 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009652:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009656:	f7fb ba0d 	b.w	8004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800965a:	bd38      	pop	{r3, r4, r5, pc}
 800965c:	0802e6f4 	.word	0x0802e6f4

08009660 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8009660:	4770      	bx	lr

08009662 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8009662:	3804      	subs	r0, #4
 8009664:	4770      	bx	lr

08009666 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8009666:	4770      	bx	lr

08009668 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8009668:	4770      	bx	lr

0800966a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800966a:	b510      	push	{r4, lr}
 800966c:	2110      	movs	r1, #16
 800966e:	4604      	mov	r4, r0
 8009670:	f020 fc25 	bl	8029ebe <_ZdlPvj>
 8009674:	4620      	mov	r0, r4
 8009676:	bd10      	pop	{r4, pc}

08009678 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8009678:	f1a0 0004 	sub.w	r0, r0, #4
 800967c:	e7f5      	b.n	800966a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800967e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800967e:	4770      	bx	lr

08009680 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8009680:	b510      	push	{r4, lr}
 8009682:	2200      	movs	r2, #0
 8009684:	6082      	str	r2, [r0, #8]
    : view(v)
 8009686:	4a04      	ldr	r2, [pc, #16]	; (8009698 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8009688:	60c1      	str	r1, [r0, #12]
 800968a:	f102 0408 	add.w	r4, r2, #8
 800968e:	3224      	adds	r2, #36	; 0x24
 8009690:	6004      	str	r4, [r0, #0]
 8009692:	6042      	str	r2, [r0, #4]
}
 8009694:	bd10      	pop	{r4, pc}
 8009696:	bf00      	nop
 8009698:	0802ea30 	.word	0x0802ea30

0800969c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800969c:	4770      	bx	lr
	...

080096a0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80096a0:	b510      	push	{r4, lr}
 80096a2:	4b03      	ldr	r3, [pc, #12]	; (80096b0 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80096a4:	6003      	str	r3, [r0, #0]
 80096a6:	4604      	mov	r4, r0
 80096a8:	f7fd fd88 	bl	80071bc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80096ac:	4620      	mov	r0, r4
 80096ae:	bd10      	pop	{r4, pc}
 80096b0:	0802ea68 	.word	0x0802ea68

080096b4 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80096b4:	b510      	push	{r4, lr}
 80096b6:	4604      	mov	r4, r0
 80096b8:	f7ff fff2 	bl	80096a0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80096bc:	4620      	mov	r0, r4
 80096be:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80096c2:	f020 fbfc 	bl	8029ebe <_ZdlPvj>
 80096c6:	4620      	mov	r0, r4
 80096c8:	bd10      	pop	{r4, pc}
	...

080096cc <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80096cc:	b510      	push	{r4, lr}
 80096ce:	4604      	mov	r4, r0
 80096d0:	f7fd fd94 	bl	80071fc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80096d4:	4b01      	ldr	r3, [pc, #4]	; (80096dc <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80096d6:	6023      	str	r3, [r4, #0]
}
 80096d8:	4620      	mov	r0, r4
 80096da:	bd10      	pop	{r4, pc}
 80096dc:	0802ea68 	.word	0x0802ea68

080096e0 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80096e0:	f7fd bd5d 	b.w	800719e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080096e4 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80096e4:	4770      	bx	lr

080096e6 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80096e6:	3804      	subs	r0, #4
 80096e8:	4770      	bx	lr

080096ea <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80096ea:	4770      	bx	lr

080096ec <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80096ec:	4770      	bx	lr

080096ee <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80096ee:	b510      	push	{r4, lr}
 80096f0:	2110      	movs	r1, #16
 80096f2:	4604      	mov	r4, r0
 80096f4:	f020 fbe3 	bl	8029ebe <_ZdlPvj>
 80096f8:	4620      	mov	r0, r4
 80096fa:	bd10      	pop	{r4, pc}

080096fc <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80096fc:	f1a0 0004 	sub.w	r0, r0, #4
 8009700:	e7f5      	b.n	80096ee <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08009702 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8009702:	4770      	bx	lr

08009704 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8009704:	b510      	push	{r4, lr}
 8009706:	2200      	movs	r2, #0
 8009708:	6082      	str	r2, [r0, #8]
    : view(v)
 800970a:	4a04      	ldr	r2, [pc, #16]	; (800971c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800970c:	60c1      	str	r1, [r0, #12]
 800970e:	f102 0408 	add.w	r4, r2, #8
 8009712:	3224      	adds	r2, #36	; 0x24
 8009714:	6004      	str	r4, [r0, #0]
 8009716:	6042      	str	r2, [r0, #4]
}
 8009718:	bd10      	pop	{r4, pc}
 800971a:	bf00      	nop
 800971c:	0802ea94 	.word	0x0802ea94

08009720 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8009720:	4770      	bx	lr
	...

08009724 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8009724:	b510      	push	{r4, lr}
 8009726:	4b03      	ldr	r3, [pc, #12]	; (8009734 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8009728:	6003      	str	r3, [r0, #0]
 800972a:	4604      	mov	r4, r0
 800972c:	f7fd ff0c 	bl	8007548 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8009730:	4620      	mov	r0, r4
 8009732:	bd10      	pop	{r4, pc}
 8009734:	0802eacc 	.word	0x0802eacc

08009738 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8009738:	b510      	push	{r4, lr}
 800973a:	4604      	mov	r4, r0
 800973c:	f7ff fff2 	bl	8009724 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8009740:	4620      	mov	r0, r4
 8009742:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009746:	f020 fbba 	bl	8029ebe <_ZdlPvj>
 800974a:	4620      	mov	r0, r4
 800974c:	bd10      	pop	{r4, pc}
	...

08009750 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8009750:	b510      	push	{r4, lr}
 8009752:	4604      	mov	r4, r0
 8009754:	f7fd ff18 	bl	8007588 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8009758:	4b01      	ldr	r3, [pc, #4]	; (8009760 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800975a:	6023      	str	r3, [r4, #0]
}
 800975c:	4620      	mov	r0, r4
 800975e:	bd10      	pop	{r4, pc}
 8009760:	0802eacc 	.word	0x0802eacc

08009764 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009764:	f7fd bee1 	b.w	800752a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08009768 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8009768:	4770      	bx	lr

0800976a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800976a:	3804      	subs	r0, #4
 800976c:	4770      	bx	lr

0800976e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800976e:	4770      	bx	lr

08009770 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009770:	68c0      	ldr	r0, [r0, #12]
 8009772:	6803      	ldr	r3, [r0, #0]
 8009774:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009776:	4718      	bx	r3

08009778 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009778:	f1a0 0004 	sub.w	r0, r0, #4
 800977c:	f7ff bff8 	b.w	8009770 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009780 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009780:	b510      	push	{r4, lr}
 8009782:	2110      	movs	r1, #16
 8009784:	4604      	mov	r4, r0
 8009786:	f020 fb9a 	bl	8029ebe <_ZdlPvj>
 800978a:	4620      	mov	r0, r4
 800978c:	bd10      	pop	{r4, pc}

0800978e <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800978e:	f1a0 0004 	sub.w	r0, r0, #4
 8009792:	e7f5      	b.n	8009780 <_ZN27Measurement_SinglePresenterD0Ev>

08009794 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009794:	b510      	push	{r4, lr}
 8009796:	2200      	movs	r2, #0
 8009798:	6082      	str	r2, [r0, #8]
    : view(v)
 800979a:	4a04      	ldr	r2, [pc, #16]	; (80097ac <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800979c:	60c1      	str	r1, [r0, #12]
 800979e:	f102 0408 	add.w	r4, r2, #8
 80097a2:	3224      	adds	r2, #36	; 0x24
 80097a4:	6004      	str	r4, [r0, #0]
 80097a6:	6042      	str	r2, [r0, #4]
}
 80097a8:	bd10      	pop	{r4, pc}
 80097aa:	bf00      	nop
 80097ac:	0802eaf8 	.word	0x0802eaf8

080097b0 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80097b0:	4770      	bx	lr
	...

080097b4 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80097b4:	b510      	push	{r4, lr}
 80097b6:	4b03      	ldr	r3, [pc, #12]	; (80097c4 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80097b8:	6003      	str	r3, [r0, #0]
 80097ba:	4604      	mov	r4, r0
 80097bc:	f7fe f87a 	bl	80078b4 <_ZN26Measurement_SingleViewBaseD1Ev>
 80097c0:	4620      	mov	r0, r4
 80097c2:	bd10      	pop	{r4, pc}
 80097c4:	0802eb30 	.word	0x0802eb30

080097c8 <_ZN22Measurement_SingleViewD0Ev>:
 80097c8:	b510      	push	{r4, lr}
 80097ca:	4604      	mov	r4, r0
 80097cc:	f7ff fff2 	bl	80097b4 <_ZN22Measurement_SingleViewD1Ev>
 80097d0:	4620      	mov	r0, r4
 80097d2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80097d6:	f020 fb72 	bl	8029ebe <_ZdlPvj>
 80097da:	4620      	mov	r0, r4
 80097dc:	bd10      	pop	{r4, pc}
	...

080097e0 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80097e0:	b510      	push	{r4, lr}
 80097e2:	4604      	mov	r4, r0
 80097e4:	f7fe f8a0 	bl	8007928 <_ZN26Measurement_SingleViewBaseC1Ev>
 80097e8:	4b01      	ldr	r3, [pc, #4]	; (80097f0 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80097ea:	6023      	str	r3, [r4, #0]
}
 80097ec:	4620      	mov	r0, r4
 80097ee:	bd10      	pop	{r4, pc}
 80097f0:	0802eb30 	.word	0x0802eb30

080097f4 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80097f4:	f7fe b83a 	b.w	800786c <_ZN26Measurement_SingleViewBase11setupScreenEv>

080097f8 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80097f8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80097fa:	4a0a      	ldr	r2, [pc, #40]	; (8009824 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80097fc:	4605      	mov	r5, r0
 80097fe:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009800:	460b      	mov	r3, r1
 8009802:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009806:	2104      	movs	r1, #4
 8009808:	f00f fbaa 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800980c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009810:	f00d fb1e 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009814:	b92c      	cbnz	r4, 8009822 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8009816:	f00c fa33 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800981a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800981e:	f7fb b929 	b.w	8004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009822:	bd38      	pop	{r3, r4, r5, pc}
 8009824:	0802e6f4 	.word	0x0802e6f4

08009828 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8009828:	4770      	bx	lr

0800982a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800982a:	3804      	subs	r0, #4
 800982c:	4770      	bx	lr

0800982e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800982e:	4770      	bx	lr

08009830 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8009830:	4770      	bx	lr

08009832 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8009832:	b510      	push	{r4, lr}
 8009834:	2110      	movs	r1, #16
 8009836:	4604      	mov	r4, r0
 8009838:	f020 fb41 	bl	8029ebe <_ZdlPvj>
 800983c:	4620      	mov	r0, r4
 800983e:	bd10      	pop	{r4, pc}

08009840 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8009840:	f1a0 0004 	sub.w	r0, r0, #4
 8009844:	e7f5      	b.n	8009832 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08009846 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8009846:	4770      	bx	lr

08009848 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8009848:	b510      	push	{r4, lr}
 800984a:	2200      	movs	r2, #0
 800984c:	6082      	str	r2, [r0, #8]
    : view(v)
 800984e:	4a04      	ldr	r2, [pc, #16]	; (8009860 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8009850:	60c1      	str	r1, [r0, #12]
 8009852:	f102 0408 	add.w	r4, r2, #8
 8009856:	3224      	adds	r2, #36	; 0x24
 8009858:	6004      	str	r4, [r0, #0]
 800985a:	6042      	str	r2, [r0, #4]
}
 800985c:	bd10      	pop	{r4, pc}
 800985e:	bf00      	nop
 8009860:	0802eb60 	.word	0x0802eb60

08009864 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009864:	4770      	bx	lr
	...

08009868 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8009868:	b510      	push	{r4, lr}
 800986a:	4b03      	ldr	r3, [pc, #12]	; (8009878 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800986c:	6003      	str	r3, [r0, #0]
 800986e:	4604      	mov	r4, r0
 8009870:	f7fe faa4 	bl	8007dbc <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009874:	4620      	mov	r0, r4
 8009876:	bd10      	pop	{r4, pc}
 8009878:	0802eb98 	.word	0x0802eb98

0800987c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800987c:	b510      	push	{r4, lr}
 800987e:	4604      	mov	r4, r0
 8009880:	f7ff fff2 	bl	8009868 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009884:	4620      	mov	r0, r4
 8009886:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800988a:	f020 fb18 	bl	8029ebe <_ZdlPvj>
 800988e:	4620      	mov	r0, r4
 8009890:	bd10      	pop	{r4, pc}
	...

08009894 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009894:	b510      	push	{r4, lr}
 8009896:	4604      	mov	r4, r0
 8009898:	f7fe faca 	bl	8007e30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800989c:	4b01      	ldr	r3, [pc, #4]	; (80098a4 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800989e:	6023      	str	r3, [r4, #0]
}
 80098a0:	4620      	mov	r0, r4
 80098a2:	bd10      	pop	{r4, pc}
 80098a4:	0802eb98 	.word	0x0802eb98

080098a8 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80098a8:	f7fe ba63 	b.w	8007d72 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080098ac <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80098ac:	b530      	push	{r4, r5, lr}
 80098ae:	4d25      	ldr	r5, [pc, #148]	; (8009944 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x98>)
 80098b0:	4604      	mov	r4, r0
 80098b2:	6828      	ldr	r0, [r5, #0]
#ifndef SIMULATOR
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();
 80098b4:	6803      	ldr	r3, [r0, #0]
{
 80098b6:	b08b      	sub	sp, #44	; 0x2c
	touchgfx::HAL::getInstance()->disableInterrupts();
 80098b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80098ba:	4798      	blx	r3

	int test = 	0;

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);

	test = updateGUI_test();
 80098bc:	f7f7 fcea 	bl	8001294 <updateGUI_test>
 80098c0:	9001      	str	r0, [sp, #4]

	// Start measurement
	uint32_t* Samples = MEAS_start_measure();
 80098c2:	f7f8 f9d5 	bl	8001c70 <MEAS_start_measure>
 80098c6:	4601      	mov	r1, r0

	//SINGLE_MEAS single_meas = single_measurement(Samples);
	ACCU_MEAS accu_meas = accurate_measurement(Samples);
 80098c8:	a803      	add	r0, sp, #12
 80098ca:	f7f7 fc67 	bl	800119c <accurate_measurement>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(accu_meas.angle);
 80098ce:	eddd 7a04 	vldr	s15, [sp, #16]
 80098d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098d6:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80098da:	ee17 1a90 	vmov	r1, s15
 80098de:	9000      	str	r0, [sp, #0]
 80098e0:	f009 fa62 	bl	8012da8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 80098e4:	9800      	ldr	r0, [sp, #0]
 80098e6:	f00d fab3 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80098ea:	9b01      	ldr	r3, [sp, #4]
 80098ec:	4a16      	ldr	r2, [pc, #88]	; (8009948 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x9c>)
 80098ee:	210a      	movs	r1, #10
 80098f0:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80098f4:	f00f fb34 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80098f8:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80098fc:	f00d faa8 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", accu_meas.frequency);
 8009900:	9b05      	ldr	r3, [sp, #20]
 8009902:	4a12      	ldr	r2, [pc, #72]	; (800994c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa0>)
 8009904:	9302      	str	r3, [sp, #8]
 8009906:	210a      	movs	r1, #10
 8009908:	ab02      	add	r3, sp, #8
 800990a:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 800990e:	f00f fd13 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8009912:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8009916:	f00d fa9b 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	//if(fft.error == CALC_ERROR_NONE)
	//{
		Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", accu_meas.distance);
 800991a:	9b03      	ldr	r3, [sp, #12]
 800991c:	4a0b      	ldr	r2, [pc, #44]	; (800994c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa0>)
 800991e:	9302      	str	r3, [sp, #8]
 8009920:	210a      	movs	r1, #10
 8009922:	ab02      	add	r3, sp, #8
 8009924:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8009928:	f00f fd06 	bl	8019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	//} else Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "Error");
	
	SMD1_Distance.invalidate();
 800992c:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8009930:	f00d fa8e 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009934:	6828      	ldr	r0, [r5, #0]

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 8009936:	6803      	ldr	r3, [r0, #0]
 8009938:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 800993a:	b00b      	add	sp, #44	; 0x2c
 800993c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8009940:	4718      	bx	r3
 8009942:	bf00      	nop
 8009944:	20012da4 	.word	0x20012da4
 8009948:	0802e6f4 	.word	0x0802e6f4
 800994c:	0802e760 	.word	0x0802e760

08009950 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8009950:	4770      	bx	lr

08009952 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8009952:	3804      	subs	r0, #4
 8009954:	4770      	bx	lr

08009956 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8009956:	4770      	bx	lr

08009958 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8009958:	4770      	bx	lr

0800995a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800995a:	b510      	push	{r4, lr}
 800995c:	2110      	movs	r1, #16
 800995e:	4604      	mov	r4, r0
 8009960:	f020 faad 	bl	8029ebe <_ZdlPvj>
 8009964:	4620      	mov	r0, r4
 8009966:	bd10      	pop	{r4, pc}

08009968 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009968:	f1a0 0004 	sub.w	r0, r0, #4
 800996c:	e7f5      	b.n	800995a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800996e <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800996e:	4770      	bx	lr

08009970 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009970:	b510      	push	{r4, lr}
 8009972:	2200      	movs	r2, #0
 8009974:	6082      	str	r2, [r0, #8]
    : view(v)
 8009976:	4a04      	ldr	r2, [pc, #16]	; (8009988 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009978:	60c1      	str	r1, [r0, #12]
 800997a:	f102 0408 	add.w	r4, r2, #8
 800997e:	3224      	adds	r2, #36	; 0x24
 8009980:	6004      	str	r4, [r0, #0]
 8009982:	6042      	str	r2, [r0, #4]
}
 8009984:	bd10      	pop	{r4, pc}
 8009986:	bf00      	nop
 8009988:	0802ebc8 	.word	0x0802ebc8

0800998c <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800998c:	4770      	bx	lr
	...

08009990 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009990:	b510      	push	{r4, lr}
 8009992:	4b03      	ldr	r3, [pc, #12]	; (80099a0 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009994:	6003      	str	r3, [r0, #0]
 8009996:	4604      	mov	r4, r0
 8009998:	f7fe fdbc 	bl	8008514 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800999c:	4620      	mov	r0, r4
 800999e:	bd10      	pop	{r4, pc}
 80099a0:	0802ec00 	.word	0x0802ec00

080099a4 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80099a4:	b510      	push	{r4, lr}
 80099a6:	4604      	mov	r4, r0
 80099a8:	f7ff fff2 	bl	8009990 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 80099ac:	4620      	mov	r0, r4
 80099ae:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80099b2:	f020 fa84 	bl	8029ebe <_ZdlPvj>
 80099b6:	4620      	mov	r0, r4
 80099b8:	bd10      	pop	{r4, pc}
	...

080099bc <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80099bc:	b510      	push	{r4, lr}
 80099be:	4604      	mov	r4, r0
 80099c0:	f7fe fdc8 	bl	8008554 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80099c4:	4b01      	ldr	r3, [pc, #4]	; (80099cc <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80099c6:	6023      	str	r3, [r4, #0]
}
 80099c8:	4620      	mov	r0, r4
 80099ca:	bd10      	pop	{r4, pc}
 80099cc:	0802ec00 	.word	0x0802ec00

080099d0 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80099d0:	f7fe bd8f 	b.w	80084f2 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080099d4 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80099d4:	2100      	movs	r1, #0
 80099d6:	223c      	movs	r2, #60	; 0x3c
 80099d8:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80099dc:	4770      	bx	lr
	...

080099e0 <_ZN5Model4tickEv>:

void Model::tick()
{
 80099e0:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80099e2:	4d0a      	ldr	r5, [pc, #40]	; (8009a0c <_ZN5Model4tickEv+0x2c>)
{
 80099e4:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80099e6:	6828      	ldr	r0, [r5, #0]
 80099e8:	f004 f8ac 	bl	800db44 <osMessageQueueGetCount>
 80099ec:	b168      	cbz	r0, 8009a0a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80099ee:	2300      	movs	r3, #0
 80099f0:	6828      	ldr	r0, [r5, #0]
 80099f2:	461a      	mov	r2, r3
 80099f4:	1d21      	adds	r1, r4, #4
 80099f6:	f004 f871 	bl	800dadc <osMessageQueueGet>
 80099fa:	b930      	cbnz	r0, 8009a0a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80099fc:	6820      	ldr	r0, [r4, #0]
 80099fe:	6861      	ldr	r1, [r4, #4]
 8009a00:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8009a02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8009a06:	689b      	ldr	r3, [r3, #8]
 8009a08:	4718      	bx	r3
}
 8009a0a:	bd70      	pop	{r4, r5, r6, pc}
 8009a0c:	2000018c 	.word	0x2000018c

08009a10 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8009a10:	4770      	bx	lr

08009a12 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8009a12:	3804      	subs	r0, #4
 8009a14:	4770      	bx	lr

08009a16 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8009a16:	4770      	bx	lr

08009a18 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009a18:	68c0      	ldr	r0, [r0, #12]
 8009a1a:	6803      	ldr	r3, [r0, #0]
 8009a1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a1e:	4718      	bx	r3

08009a20 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009a20:	f1a0 0004 	sub.w	r0, r0, #4
 8009a24:	f7ff bff8 	b.w	8009a18 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08009a28 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8009a28:	b510      	push	{r4, lr}
 8009a2a:	2110      	movs	r1, #16
 8009a2c:	4604      	mov	r4, r0
 8009a2e:	f020 fa46 	bl	8029ebe <_ZdlPvj>
 8009a32:	4620      	mov	r0, r4
 8009a34:	bd10      	pop	{r4, pc}

08009a36 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8009a36:	f1a0 0004 	sub.w	r0, r0, #4
 8009a3a:	e7f5      	b.n	8009a28 <_ZN21Project_InfoPresenterD0Ev>

08009a3c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009a3c:	b510      	push	{r4, lr}
 8009a3e:	2200      	movs	r2, #0
 8009a40:	6082      	str	r2, [r0, #8]
    : view(v)
 8009a42:	4a04      	ldr	r2, [pc, #16]	; (8009a54 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009a44:	60c1      	str	r1, [r0, #12]
 8009a46:	f102 0408 	add.w	r4, r2, #8
 8009a4a:	3224      	adds	r2, #36	; 0x24
 8009a4c:	6004      	str	r4, [r0, #0]
 8009a4e:	6042      	str	r2, [r0, #4]
}
 8009a50:	bd10      	pop	{r4, pc}
 8009a52:	bf00      	nop
 8009a54:	0802ec2c 	.word	0x0802ec2c

08009a58 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009a58:	4770      	bx	lr
	...

08009a5c <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009a5c:	b510      	push	{r4, lr}
 8009a5e:	4b03      	ldr	r3, [pc, #12]	; (8009a6c <_ZN16Project_InfoViewD1Ev+0x10>)
 8009a60:	6003      	str	r3, [r0, #0]
 8009a62:	4604      	mov	r4, r0
 8009a64:	f7fe ff10 	bl	8008888 <_ZN20Project_InfoViewBaseD1Ev>
 8009a68:	4620      	mov	r0, r4
 8009a6a:	bd10      	pop	{r4, pc}
 8009a6c:	0802ec64 	.word	0x0802ec64

08009a70 <_ZN16Project_InfoViewD0Ev>:
 8009a70:	b510      	push	{r4, lr}
 8009a72:	4604      	mov	r4, r0
 8009a74:	f7ff fff2 	bl	8009a5c <_ZN16Project_InfoViewD1Ev>
 8009a78:	4620      	mov	r0, r4
 8009a7a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009a7e:	f020 fa1e 	bl	8029ebe <_ZdlPvj>
 8009a82:	4620      	mov	r0, r4
 8009a84:	bd10      	pop	{r4, pc}
	...

08009a88 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009a88:	b510      	push	{r4, lr}
 8009a8a:	4604      	mov	r4, r0
 8009a8c:	f7fe ff24 	bl	80088d8 <_ZN20Project_InfoViewBaseC1Ev>
 8009a90:	4b01      	ldr	r3, [pc, #4]	; (8009a98 <_ZN16Project_InfoViewC1Ev+0x10>)
 8009a92:	6023      	str	r3, [r4, #0]
}
 8009a94:	4620      	mov	r0, r4
 8009a96:	bd10      	pop	{r4, pc}
 8009a98:	0802ec64 	.word	0x0802ec64

08009a9c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009a9c:	f7fe bed0 	b.w	8008840 <_ZN20Project_InfoViewBase11setupScreenEv>

08009aa0 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009aa0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009aa2:	4a0a      	ldr	r2, [pc, #40]	; (8009acc <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009aa4:	4605      	mov	r5, r0
 8009aa6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009aa8:	460b      	mov	r3, r1
 8009aaa:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009aae:	2104      	movs	r1, #4
 8009ab0:	f00f fa56 	bl	8018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009ab4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009ab8:	f00d f9ca 	bl	8016e50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009abc:	b92c      	cbnz	r4, 8009aca <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8009abe:	f00c f8df 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009ac2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009ac6:	f7fa bfd5 	b.w	8004a74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009aca:	bd38      	pop	{r3, r4, r5, pc}
 8009acc:	0802e6f4 	.word	0x0802e6f4

08009ad0 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8009ad0:	4770      	bx	lr

08009ad2 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8009ad2:	3804      	subs	r0, #4
 8009ad4:	4770      	bx	lr

08009ad6 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009ad6:	4770      	bx	lr

08009ad8 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009ad8:	4770      	bx	lr

08009ada <_ZN21Shutting_OffPresenterD0Ev>:
 8009ada:	b510      	push	{r4, lr}
 8009adc:	2110      	movs	r1, #16
 8009ade:	4604      	mov	r4, r0
 8009ae0:	f020 f9ed 	bl	8029ebe <_ZdlPvj>
 8009ae4:	4620      	mov	r0, r4
 8009ae6:	bd10      	pop	{r4, pc}

08009ae8 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009ae8:	f1a0 0004 	sub.w	r0, r0, #4
 8009aec:	e7f5      	b.n	8009ada <_ZN21Shutting_OffPresenterD0Ev>

08009aee <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8009aee:	4770      	bx	lr

08009af0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8009af0:	b510      	push	{r4, lr}
 8009af2:	2200      	movs	r2, #0
 8009af4:	6082      	str	r2, [r0, #8]
    : view(v)
 8009af6:	4a04      	ldr	r2, [pc, #16]	; (8009b08 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8009af8:	60c1      	str	r1, [r0, #12]
 8009afa:	f102 0408 	add.w	r4, r2, #8
 8009afe:	3224      	adds	r2, #36	; 0x24
 8009b00:	6004      	str	r4, [r0, #0]
 8009b02:	6042      	str	r2, [r0, #4]
}
 8009b04:	bd10      	pop	{r4, pc}
 8009b06:	bf00      	nop
 8009b08:	0802ec94 	.word	0x0802ec94

08009b0c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8009b0c:	4770      	bx	lr
	...

08009b10 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8009b10:	b510      	push	{r4, lr}
 8009b12:	4b03      	ldr	r3, [pc, #12]	; (8009b20 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8009b14:	6003      	str	r3, [r0, #0]
 8009b16:	4604      	mov	r4, r0
 8009b18:	f7ff f8ac 	bl	8008c74 <_ZN20Shutting_OffViewBaseD1Ev>
 8009b1c:	4620      	mov	r0, r4
 8009b1e:	bd10      	pop	{r4, pc}
 8009b20:	0802eccc 	.word	0x0802eccc

08009b24 <_ZN16Shutting_OffViewD0Ev>:
 8009b24:	b510      	push	{r4, lr}
 8009b26:	4604      	mov	r4, r0
 8009b28:	f7ff fff2 	bl	8009b10 <_ZN16Shutting_OffViewD1Ev>
 8009b2c:	4620      	mov	r0, r4
 8009b2e:	2198      	movs	r1, #152	; 0x98
 8009b30:	f020 f9c5 	bl	8029ebe <_ZdlPvj>
 8009b34:	4620      	mov	r0, r4
 8009b36:	bd10      	pop	{r4, pc}

08009b38 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009b38:	b510      	push	{r4, lr}
 8009b3a:	4604      	mov	r4, r0
 8009b3c:	f7ff f8a4 	bl	8008c88 <_ZN20Shutting_OffViewBaseC1Ev>
 8009b40:	4b01      	ldr	r3, [pc, #4]	; (8009b48 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8009b42:	6023      	str	r3, [r4, #0]
}
 8009b44:	4620      	mov	r0, r4
 8009b46:	bd10      	pop	{r4, pc}
 8009b48:	0802eccc 	.word	0x0802eccc

08009b4c <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009b4c:	f7ff b893 	b.w	8008c76 <_ZN20Shutting_OffViewBase11setupScreenEv>

08009b50 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009b50:	20f0      	movs	r0, #240	; 0xf0
 8009b52:	4770      	bx	lr

08009b54 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009b54:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009b58:	4770      	bx	lr
 8009b5a:	bf00      	nop

08009b5c <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009b5c:	2029      	movs	r0, #41	; 0x29
 8009b5e:	f7f7 beff 	b.w	8001960 <LCD_IO_WriteReg>
 8009b62:	bf00      	nop

08009b64 <ili9341_DisplayOff>:
 8009b64:	2028      	movs	r0, #40	; 0x28
 8009b66:	f7f7 befb 	b.w	8001960 <LCD_IO_WriteReg>
 8009b6a:	bf00      	nop

08009b6c <ili9341_Init>:
{
 8009b6c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009b6e:	f7f7 febd 	bl	80018ec <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009b72:	20ca      	movs	r0, #202	; 0xca
 8009b74:	f7f7 fef4 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b78:	20c3      	movs	r0, #195	; 0xc3
 8009b7a:	f7f7 fec7 	bl	800190c <LCD_IO_WriteData>
 8009b7e:	2008      	movs	r0, #8
 8009b80:	f7f7 fec4 	bl	800190c <LCD_IO_WriteData>
 8009b84:	2050      	movs	r0, #80	; 0x50
 8009b86:	f7f7 fec1 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b8a:	20cf      	movs	r0, #207	; 0xcf
 8009b8c:	f7f7 fee8 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b90:	2000      	movs	r0, #0
 8009b92:	f7f7 febb 	bl	800190c <LCD_IO_WriteData>
 8009b96:	20c1      	movs	r0, #193	; 0xc1
 8009b98:	f7f7 feb8 	bl	800190c <LCD_IO_WriteData>
 8009b9c:	2030      	movs	r0, #48	; 0x30
 8009b9e:	f7f7 feb5 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009ba2:	20ed      	movs	r0, #237	; 0xed
 8009ba4:	f7f7 fedc 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ba8:	2064      	movs	r0, #100	; 0x64
 8009baa:	f7f7 feaf 	bl	800190c <LCD_IO_WriteData>
 8009bae:	2003      	movs	r0, #3
 8009bb0:	f7f7 feac 	bl	800190c <LCD_IO_WriteData>
 8009bb4:	2012      	movs	r0, #18
 8009bb6:	f7f7 fea9 	bl	800190c <LCD_IO_WriteData>
 8009bba:	2081      	movs	r0, #129	; 0x81
 8009bbc:	f7f7 fea6 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bc0:	20e8      	movs	r0, #232	; 0xe8
 8009bc2:	f7f7 fecd 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bc6:	2085      	movs	r0, #133	; 0x85
 8009bc8:	f7f7 fea0 	bl	800190c <LCD_IO_WriteData>
 8009bcc:	2000      	movs	r0, #0
 8009bce:	f7f7 fe9d 	bl	800190c <LCD_IO_WriteData>
 8009bd2:	2078      	movs	r0, #120	; 0x78
 8009bd4:	f7f7 fe9a 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bd8:	20cb      	movs	r0, #203	; 0xcb
 8009bda:	f7f7 fec1 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bde:	2039      	movs	r0, #57	; 0x39
 8009be0:	f7f7 fe94 	bl	800190c <LCD_IO_WriteData>
 8009be4:	202c      	movs	r0, #44	; 0x2c
 8009be6:	f7f7 fe91 	bl	800190c <LCD_IO_WriteData>
 8009bea:	2000      	movs	r0, #0
 8009bec:	f7f7 fe8e 	bl	800190c <LCD_IO_WriteData>
 8009bf0:	2034      	movs	r0, #52	; 0x34
 8009bf2:	f7f7 fe8b 	bl	800190c <LCD_IO_WriteData>
 8009bf6:	2002      	movs	r0, #2
 8009bf8:	f7f7 fe88 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bfc:	20f7      	movs	r0, #247	; 0xf7
 8009bfe:	f7f7 feaf 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c02:	2020      	movs	r0, #32
 8009c04:	f7f7 fe82 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c08:	20ea      	movs	r0, #234	; 0xea
 8009c0a:	f7f7 fea9 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c0e:	2000      	movs	r0, #0
 8009c10:	f7f7 fe7c 	bl	800190c <LCD_IO_WriteData>
 8009c14:	2000      	movs	r0, #0
 8009c16:	f7f7 fe79 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c1a:	20b1      	movs	r0, #177	; 0xb1
 8009c1c:	f7f7 fea0 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c20:	2000      	movs	r0, #0
 8009c22:	f7f7 fe73 	bl	800190c <LCD_IO_WriteData>
 8009c26:	201b      	movs	r0, #27
 8009c28:	f7f7 fe70 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c2c:	20b6      	movs	r0, #182	; 0xb6
 8009c2e:	f7f7 fe97 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c32:	200a      	movs	r0, #10
 8009c34:	f7f7 fe6a 	bl	800190c <LCD_IO_WriteData>
 8009c38:	20a2      	movs	r0, #162	; 0xa2
 8009c3a:	f7f7 fe67 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c3e:	20c0      	movs	r0, #192	; 0xc0
 8009c40:	f7f7 fe8e 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c44:	2010      	movs	r0, #16
 8009c46:	f7f7 fe61 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c4a:	20c1      	movs	r0, #193	; 0xc1
 8009c4c:	f7f7 fe88 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c50:	2010      	movs	r0, #16
 8009c52:	f7f7 fe5b 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c56:	20c5      	movs	r0, #197	; 0xc5
 8009c58:	f7f7 fe82 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c5c:	2045      	movs	r0, #69	; 0x45
 8009c5e:	f7f7 fe55 	bl	800190c <LCD_IO_WriteData>
 8009c62:	2015      	movs	r0, #21
 8009c64:	f7f7 fe52 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c68:	20c7      	movs	r0, #199	; 0xc7
 8009c6a:	f7f7 fe79 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c6e:	2090      	movs	r0, #144	; 0x90
 8009c70:	f7f7 fe4c 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c74:	2036      	movs	r0, #54	; 0x36
 8009c76:	f7f7 fe73 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c7a:	20c8      	movs	r0, #200	; 0xc8
 8009c7c:	f7f7 fe46 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c80:	20f2      	movs	r0, #242	; 0xf2
 8009c82:	f7f7 fe6d 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c86:	2000      	movs	r0, #0
 8009c88:	f7f7 fe40 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c8c:	20b0      	movs	r0, #176	; 0xb0
 8009c8e:	f7f7 fe67 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c92:	20c2      	movs	r0, #194	; 0xc2
 8009c94:	f7f7 fe3a 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c98:	20b6      	movs	r0, #182	; 0xb6
 8009c9a:	f7f7 fe61 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c9e:	200a      	movs	r0, #10
 8009ca0:	f7f7 fe34 	bl	800190c <LCD_IO_WriteData>
 8009ca4:	20a7      	movs	r0, #167	; 0xa7
 8009ca6:	f7f7 fe31 	bl	800190c <LCD_IO_WriteData>
 8009caa:	2027      	movs	r0, #39	; 0x27
 8009cac:	f7f7 fe2e 	bl	800190c <LCD_IO_WriteData>
 8009cb0:	2004      	movs	r0, #4
 8009cb2:	f7f7 fe2b 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cb6:	202a      	movs	r0, #42	; 0x2a
 8009cb8:	f7f7 fe52 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cbc:	2000      	movs	r0, #0
 8009cbe:	f7f7 fe25 	bl	800190c <LCD_IO_WriteData>
 8009cc2:	2000      	movs	r0, #0
 8009cc4:	f7f7 fe22 	bl	800190c <LCD_IO_WriteData>
 8009cc8:	2000      	movs	r0, #0
 8009cca:	f7f7 fe1f 	bl	800190c <LCD_IO_WriteData>
 8009cce:	20ef      	movs	r0, #239	; 0xef
 8009cd0:	f7f7 fe1c 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cd4:	202b      	movs	r0, #43	; 0x2b
 8009cd6:	f7f7 fe43 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cda:	2000      	movs	r0, #0
 8009cdc:	f7f7 fe16 	bl	800190c <LCD_IO_WriteData>
 8009ce0:	2000      	movs	r0, #0
 8009ce2:	f7f7 fe13 	bl	800190c <LCD_IO_WriteData>
 8009ce6:	2001      	movs	r0, #1
 8009ce8:	f7f7 fe10 	bl	800190c <LCD_IO_WriteData>
 8009cec:	203f      	movs	r0, #63	; 0x3f
 8009cee:	f7f7 fe0d 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cf2:	20f6      	movs	r0, #246	; 0xf6
 8009cf4:	f7f7 fe34 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cf8:	2001      	movs	r0, #1
 8009cfa:	f7f7 fe07 	bl	800190c <LCD_IO_WriteData>
 8009cfe:	2000      	movs	r0, #0
 8009d00:	f7f7 fe04 	bl	800190c <LCD_IO_WriteData>
 8009d04:	2006      	movs	r0, #6
 8009d06:	f7f7 fe01 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d0a:	202c      	movs	r0, #44	; 0x2c
 8009d0c:	f7f7 fe28 	bl	8001960 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009d10:	20c8      	movs	r0, #200	; 0xc8
 8009d12:	f7f7 fe8d 	bl	8001a30 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009d16:	2026      	movs	r0, #38	; 0x26
 8009d18:	f7f7 fe22 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d1c:	2001      	movs	r0, #1
 8009d1e:	f7f7 fdf5 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d22:	20e0      	movs	r0, #224	; 0xe0
 8009d24:	f7f7 fe1c 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d28:	200f      	movs	r0, #15
 8009d2a:	f7f7 fdef 	bl	800190c <LCD_IO_WriteData>
 8009d2e:	2029      	movs	r0, #41	; 0x29
 8009d30:	f7f7 fdec 	bl	800190c <LCD_IO_WriteData>
 8009d34:	2024      	movs	r0, #36	; 0x24
 8009d36:	f7f7 fde9 	bl	800190c <LCD_IO_WriteData>
 8009d3a:	200c      	movs	r0, #12
 8009d3c:	f7f7 fde6 	bl	800190c <LCD_IO_WriteData>
 8009d40:	200e      	movs	r0, #14
 8009d42:	f7f7 fde3 	bl	800190c <LCD_IO_WriteData>
 8009d46:	2009      	movs	r0, #9
 8009d48:	f7f7 fde0 	bl	800190c <LCD_IO_WriteData>
 8009d4c:	204e      	movs	r0, #78	; 0x4e
 8009d4e:	f7f7 fddd 	bl	800190c <LCD_IO_WriteData>
 8009d52:	2078      	movs	r0, #120	; 0x78
 8009d54:	f7f7 fdda 	bl	800190c <LCD_IO_WriteData>
 8009d58:	203c      	movs	r0, #60	; 0x3c
 8009d5a:	f7f7 fdd7 	bl	800190c <LCD_IO_WriteData>
 8009d5e:	2009      	movs	r0, #9
 8009d60:	f7f7 fdd4 	bl	800190c <LCD_IO_WriteData>
 8009d64:	2013      	movs	r0, #19
 8009d66:	f7f7 fdd1 	bl	800190c <LCD_IO_WriteData>
 8009d6a:	2005      	movs	r0, #5
 8009d6c:	f7f7 fdce 	bl	800190c <LCD_IO_WriteData>
 8009d70:	2017      	movs	r0, #23
 8009d72:	f7f7 fdcb 	bl	800190c <LCD_IO_WriteData>
 8009d76:	2011      	movs	r0, #17
 8009d78:	f7f7 fdc8 	bl	800190c <LCD_IO_WriteData>
 8009d7c:	2000      	movs	r0, #0
 8009d7e:	f7f7 fdc5 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d82:	20e1      	movs	r0, #225	; 0xe1
 8009d84:	f7f7 fdec 	bl	8001960 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d88:	2000      	movs	r0, #0
 8009d8a:	f7f7 fdbf 	bl	800190c <LCD_IO_WriteData>
 8009d8e:	2016      	movs	r0, #22
 8009d90:	f7f7 fdbc 	bl	800190c <LCD_IO_WriteData>
 8009d94:	201b      	movs	r0, #27
 8009d96:	f7f7 fdb9 	bl	800190c <LCD_IO_WriteData>
 8009d9a:	2004      	movs	r0, #4
 8009d9c:	f7f7 fdb6 	bl	800190c <LCD_IO_WriteData>
 8009da0:	2011      	movs	r0, #17
 8009da2:	f7f7 fdb3 	bl	800190c <LCD_IO_WriteData>
 8009da6:	2007      	movs	r0, #7
 8009da8:	f7f7 fdb0 	bl	800190c <LCD_IO_WriteData>
 8009dac:	2031      	movs	r0, #49	; 0x31
 8009dae:	f7f7 fdad 	bl	800190c <LCD_IO_WriteData>
 8009db2:	2033      	movs	r0, #51	; 0x33
 8009db4:	f7f7 fdaa 	bl	800190c <LCD_IO_WriteData>
 8009db8:	2042      	movs	r0, #66	; 0x42
 8009dba:	f7f7 fda7 	bl	800190c <LCD_IO_WriteData>
 8009dbe:	2005      	movs	r0, #5
 8009dc0:	f7f7 fda4 	bl	800190c <LCD_IO_WriteData>
 8009dc4:	200c      	movs	r0, #12
 8009dc6:	f7f7 fda1 	bl	800190c <LCD_IO_WriteData>
 8009dca:	200a      	movs	r0, #10
 8009dcc:	f7f7 fd9e 	bl	800190c <LCD_IO_WriteData>
 8009dd0:	2028      	movs	r0, #40	; 0x28
 8009dd2:	f7f7 fd9b 	bl	800190c <LCD_IO_WriteData>
 8009dd6:	202f      	movs	r0, #47	; 0x2f
 8009dd8:	f7f7 fd98 	bl	800190c <LCD_IO_WriteData>
 8009ddc:	200f      	movs	r0, #15
 8009dde:	f7f7 fd95 	bl	800190c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009de2:	2011      	movs	r0, #17
 8009de4:	f7f7 fdbc 	bl	8001960 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009de8:	20c8      	movs	r0, #200	; 0xc8
 8009dea:	f7f7 fe21 	bl	8001a30 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009dee:	2029      	movs	r0, #41	; 0x29
 8009df0:	f7f7 fdb6 	bl	8001960 <LCD_IO_WriteReg>
}
 8009df4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009df8:	202c      	movs	r0, #44	; 0x2c
 8009dfa:	f7f7 bdb1 	b.w	8001960 <LCD_IO_WriteReg>
 8009dfe:	bf00      	nop

08009e00 <ili9341_ReadID>:
{
 8009e00:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009e02:	f7f7 fd73 	bl	80018ec <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009e06:	2103      	movs	r1, #3
 8009e08:	20d3      	movs	r0, #211	; 0xd3
 8009e0a:	f7f7 fdd3 	bl	80019b4 <LCD_IO_ReadData>
}
 8009e0e:	b280      	uxth	r0, r0
 8009e10:	bd08      	pop	{r3, pc}
 8009e12:	bf00      	nop

08009e14 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009e14:	221f      	movs	r2, #31
 8009e16:	210b      	movs	r1, #11
 8009e18:	b2c0      	uxtb	r0, r0
 8009e1a:	f7f7 bd19 	b.w	8001850 <IOE_Write>
 8009e1e:	bf00      	nop

08009e20 <stmpe811_Reset>:
{
 8009e20:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009e22:	b2c4      	uxtb	r4, r0
 8009e24:	2202      	movs	r2, #2
 8009e26:	2103      	movs	r1, #3
 8009e28:	4620      	mov	r0, r4
 8009e2a:	f7f7 fd11 	bl	8001850 <IOE_Write>
  IOE_Delay(10); 
 8009e2e:	200a      	movs	r0, #10
 8009e30:	f7f7 fd5a 	bl	80018e8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009e34:	4620      	mov	r0, r4
 8009e36:	2200      	movs	r2, #0
 8009e38:	2103      	movs	r1, #3
 8009e3a:	f7f7 fd09 	bl	8001850 <IOE_Write>
}
 8009e3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009e42:	2002      	movs	r0, #2
 8009e44:	f7f7 bd50 	b.w	80018e8 <IOE_Delay>

08009e48 <stmpe811_ReadID>:
{
 8009e48:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009e4a:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009e4c:	f7f7 fcfc 	bl	8001848 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009e50:	2100      	movs	r1, #0
 8009e52:	4620      	mov	r0, r4
 8009e54:	f7f7 fd14 	bl	8001880 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009e58:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009e5a:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009e5c:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009e5e:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009e60:	f7f7 fd0e 	bl	8001880 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009e64:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009e68:	b280      	uxth	r0, r0
 8009e6a:	bd10      	pop	{r4, pc}

08009e6c <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009e6c:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009e6e:	b2c4      	uxtb	r4, r0
 8009e70:	2140      	movs	r1, #64	; 0x40
 8009e72:	4620      	mov	r0, r4
 8009e74:	f7f7 fd04 	bl	8001880 <IOE_Read>
  
  if(state > 0)
 8009e78:	0603      	lsls	r3, r0, #24
 8009e7a:	d40b      	bmi.n	8009e94 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009e7c:	4620      	mov	r0, r4
 8009e7e:	2201      	movs	r2, #1
 8009e80:	214b      	movs	r1, #75	; 0x4b
 8009e82:	f7f7 fce5 	bl	8001850 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009e86:	4620      	mov	r0, r4
 8009e88:	2200      	movs	r2, #0
 8009e8a:	214b      	movs	r1, #75	; 0x4b
 8009e8c:	f7f7 fce0 	bl	8001850 <IOE_Write>
  uint8_t ret = 0;
 8009e90:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009e92:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009e94:	214c      	movs	r1, #76	; 0x4c
 8009e96:	4620      	mov	r0, r4
 8009e98:	f7f7 fcf2 	bl	8001880 <IOE_Read>
      ret = 1;
 8009e9c:	3800      	subs	r0, #0
 8009e9e:	bf18      	it	ne
 8009ea0:	2001      	movne	r0, #1
}
 8009ea2:	bd10      	pop	{r4, pc}

08009ea4 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009ea4:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009ea6:	210b      	movs	r1, #11
 8009ea8:	b2c0      	uxtb	r0, r0
 8009eaa:	f7f7 fce9 	bl	8001880 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009eae:	f000 001f 	and.w	r0, r0, #31
 8009eb2:	bd08      	pop	{r3, pc}

08009eb4 <stmpe811_TS_GetXY>:
{
 8009eb4:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009eb6:	2304      	movs	r3, #4
{
 8009eb8:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009eba:	b2c4      	uxtb	r4, r0
{
 8009ebc:	4615      	mov	r5, r2
 8009ebe:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009ec0:	eb0d 0203 	add.w	r2, sp, r3
 8009ec4:	21d7      	movs	r1, #215	; 0xd7
 8009ec6:	4620      	mov	r0, r4
 8009ec8:	f7f7 fcf6 	bl	80018b8 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009ecc:	9b01      	ldr	r3, [sp, #4]
 8009ece:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009ed0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009ed2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009ed6:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009ed8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009eda:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009edc:	2201      	movs	r2, #1
 8009ede:	214b      	movs	r1, #75	; 0x4b
 8009ee0:	f7f7 fcb6 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009ee4:	2200      	movs	r2, #0
 8009ee6:	214b      	movs	r1, #75	; 0x4b
 8009ee8:	4620      	mov	r0, r4
 8009eea:	f7f7 fcb1 	bl	8001850 <IOE_Write>
}
 8009eee:	b002      	add	sp, #8
 8009ef0:	bd70      	pop	{r4, r5, r6, pc}
 8009ef2:	bf00      	nop

08009ef4 <stmpe811_TS_Start>:
{
 8009ef4:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009ef6:	b2c4      	uxtb	r4, r0
 8009ef8:	2104      	movs	r1, #4
 8009efa:	4620      	mov	r0, r4
 8009efc:	f7f7 fcc0 	bl	8001880 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009f00:	2104      	movs	r1, #4
 8009f02:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009f06:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009f08:	4620      	mov	r0, r4
 8009f0a:	f7f7 fca1 	bl	8001850 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8009f0e:	2117      	movs	r1, #23
 8009f10:	4620      	mov	r0, r4
 8009f12:	f7f7 fcb5 	bl	8001880 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8009f16:	2117      	movs	r1, #23
 8009f18:	f000 020f 	and.w	r2, r0, #15
 8009f1c:	4620      	mov	r0, r4
 8009f1e:	f7f7 fc97 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009f22:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8009f26:	4620      	mov	r0, r4
 8009f28:	2104      	movs	r1, #4
 8009f2a:	f7f7 fc91 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009f2e:	2249      	movs	r2, #73	; 0x49
 8009f30:	2120      	movs	r1, #32
 8009f32:	4620      	mov	r0, r4
 8009f34:	f7f7 fc8c 	bl	8001850 <IOE_Write>
  IOE_Delay(2); 
 8009f38:	2002      	movs	r0, #2
 8009f3a:	f7f7 fcd5 	bl	80018e8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009f3e:	4620      	mov	r0, r4
 8009f40:	2201      	movs	r2, #1
 8009f42:	2121      	movs	r1, #33	; 0x21
 8009f44:	f7f7 fc84 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009f48:	4620      	mov	r0, r4
 8009f4a:	229a      	movs	r2, #154	; 0x9a
 8009f4c:	2141      	movs	r1, #65	; 0x41
 8009f4e:	f7f7 fc7f 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009f52:	4620      	mov	r0, r4
 8009f54:	2201      	movs	r2, #1
 8009f56:	214a      	movs	r1, #74	; 0x4a
 8009f58:	f7f7 fc7a 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009f5c:	4620      	mov	r0, r4
 8009f5e:	2201      	movs	r2, #1
 8009f60:	214b      	movs	r1, #75	; 0x4b
 8009f62:	f7f7 fc75 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009f66:	4620      	mov	r0, r4
 8009f68:	2200      	movs	r2, #0
 8009f6a:	214b      	movs	r1, #75	; 0x4b
 8009f6c:	f7f7 fc70 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009f70:	4620      	mov	r0, r4
 8009f72:	2201      	movs	r2, #1
 8009f74:	2156      	movs	r1, #86	; 0x56
 8009f76:	f7f7 fc6b 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009f7a:	4620      	mov	r0, r4
 8009f7c:	2201      	movs	r2, #1
 8009f7e:	2158      	movs	r1, #88	; 0x58
 8009f80:	f7f7 fc66 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009f84:	4620      	mov	r0, r4
 8009f86:	2201      	movs	r2, #1
 8009f88:	2140      	movs	r1, #64	; 0x40
 8009f8a:	f7f7 fc61 	bl	8001850 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009f8e:	4620      	mov	r0, r4
 8009f90:	22ff      	movs	r2, #255	; 0xff
 8009f92:	210b      	movs	r1, #11
 8009f94:	f7f7 fc5c 	bl	8001850 <IOE_Write>
}
 8009f98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009f9c:	2002      	movs	r0, #2
 8009f9e:	f7f7 bca3 	b.w	80018e8 <IOE_Delay>
 8009fa2:	bf00      	nop

08009fa4 <stmpe811_TS_DisableIT>:
{
 8009fa4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009fa6:	b2c4      	uxtb	r4, r0
 8009fa8:	2109      	movs	r1, #9
 8009faa:	4620      	mov	r0, r4
 8009fac:	f7f7 fc68 	bl	8001880 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009fb0:	2109      	movs	r1, #9
 8009fb2:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009fb6:	4620      	mov	r0, r4
 8009fb8:	f7f7 fc4a 	bl	8001850 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009fbc:	210a      	movs	r1, #10
 8009fbe:	4620      	mov	r0, r4
 8009fc0:	f7f7 fc5e 	bl	8001880 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009fc4:	210a      	movs	r1, #10
 8009fc6:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009fca:	4620      	mov	r0, r4
}
 8009fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009fd0:	f7f7 bc3e 	b.w	8001850 <IOE_Write>

08009fd4 <stmpe811_TS_EnableIT>:
{
 8009fd4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009fd6:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009fd8:	f7f7 fc38 	bl	800184c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009fdc:	210a      	movs	r1, #10
 8009fde:	4620      	mov	r0, r4
 8009fe0:	f7f7 fc4e 	bl	8001880 <IOE_Read>
  tmp |= Source; 
 8009fe4:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009fe8:	b2c2      	uxtb	r2, r0
 8009fea:	210a      	movs	r1, #10
 8009fec:	4620      	mov	r0, r4
 8009fee:	f7f7 fc2f 	bl	8001850 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009ff2:	2109      	movs	r1, #9
 8009ff4:	4620      	mov	r0, r4
 8009ff6:	f7f7 fc43 	bl	8001880 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009ffa:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009ffe:	b2c2      	uxtb	r2, r0
 800a000:	2109      	movs	r1, #9
 800a002:	4620      	mov	r0, r4
}
 800a004:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a008:	f7f7 bc22 	b.w	8001850 <IOE_Write>

0800a00c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800a00c:	4a10      	ldr	r2, [pc, #64]	; (800a050 <stmpe811_Init+0x44>)
 800a00e:	7813      	ldrb	r3, [r2, #0]
 800a010:	4298      	cmp	r0, r3
 800a012:	d004      	beq.n	800a01e <stmpe811_Init+0x12>
 800a014:	7851      	ldrb	r1, [r2, #1]
 800a016:	4288      	cmp	r0, r1
 800a018:	d001      	beq.n	800a01e <stmpe811_Init+0x12>
 800a01a:	b113      	cbz	r3, 800a022 <stmpe811_Init+0x16>
 800a01c:	b101      	cbz	r1, 800a020 <stmpe811_Init+0x14>
 800a01e:	4770      	bx	lr
 800a020:	2301      	movs	r3, #1
{
 800a022:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800a024:	b2c4      	uxtb	r4, r0
 800a026:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800a028:	f7f7 fc0e 	bl	8001848 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800a02c:	2202      	movs	r2, #2
 800a02e:	2103      	movs	r1, #3
 800a030:	4620      	mov	r0, r4
 800a032:	f7f7 fc0d 	bl	8001850 <IOE_Write>
  IOE_Delay(10); 
 800a036:	200a      	movs	r0, #10
 800a038:	f7f7 fc56 	bl	80018e8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800a03c:	4620      	mov	r0, r4
 800a03e:	2200      	movs	r2, #0
 800a040:	2103      	movs	r1, #3
 800a042:	f7f7 fc05 	bl	8001850 <IOE_Write>
}
 800a046:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800a04a:	2002      	movs	r0, #2
 800a04c:	f7f7 bc4c 	b.w	80018e8 <IOE_Delay>
 800a050:	20001fa4 	.word	0x20001fa4

0800a054 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a054:	4b05      	ldr	r3, [pc, #20]	; (800a06c <SystemInit+0x18>)
 800a056:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a05a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a05e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800a062:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a066:	6099      	str	r1, [r3, #8]
#endif
}
 800a068:	4770      	bx	lr
 800a06a:	bf00      	nop
 800a06c:	e000ed00 	.word	0xe000ed00

0800a070 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a070:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a072:	4b0b      	ldr	r3, [pc, #44]	; (800a0a0 <HAL_Init+0x30>)
 800a074:	681a      	ldr	r2, [r3, #0]
 800a076:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a07a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a07c:	681a      	ldr	r2, [r3, #0]
 800a07e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a082:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a084:	681a      	ldr	r2, [r3, #0]
 800a086:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a08a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a08c:	2003      	movs	r0, #3
 800a08e:	f000 f82d 	bl	800a0ec <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a092:	2000      	movs	r0, #0
 800a094:	f7f8 f89e 	bl	80021d4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a098:	f7f7 fe1e 	bl	8001cd8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a09c:	2000      	movs	r0, #0
 800a09e:	bd08      	pop	{r3, pc}
 800a0a0:	40023c00 	.word	0x40023c00

0800a0a4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a0a4:	4a03      	ldr	r2, [pc, #12]	; (800a0b4 <HAL_IncTick+0x10>)
 800a0a6:	4b04      	ldr	r3, [pc, #16]	; (800a0b8 <HAL_IncTick+0x14>)
 800a0a8:	6811      	ldr	r1, [r2, #0]
 800a0aa:	781b      	ldrb	r3, [r3, #0]
 800a0ac:	440b      	add	r3, r1
 800a0ae:	6013      	str	r3, [r2, #0]
}
 800a0b0:	4770      	bx	lr
 800a0b2:	bf00      	nop
 800a0b4:	20001fa8 	.word	0x20001fa8
 800a0b8:	2000007c 	.word	0x2000007c

0800a0bc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a0bc:	4b01      	ldr	r3, [pc, #4]	; (800a0c4 <HAL_GetTick+0x8>)
 800a0be:	6818      	ldr	r0, [r3, #0]
}
 800a0c0:	4770      	bx	lr
 800a0c2:	bf00      	nop
 800a0c4:	20001fa8 	.word	0x20001fa8

0800a0c8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a0c8:	b538      	push	{r3, r4, r5, lr}
 800a0ca:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a0cc:	f7ff fff6 	bl	800a0bc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a0d0:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800a0d2:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800a0d4:	d002      	beq.n	800a0dc <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800a0d6:	4b04      	ldr	r3, [pc, #16]	; (800a0e8 <HAL_Delay+0x20>)
 800a0d8:	781b      	ldrb	r3, [r3, #0]
 800a0da:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a0dc:	f7ff ffee 	bl	800a0bc <HAL_GetTick>
 800a0e0:	1b43      	subs	r3, r0, r5
 800a0e2:	42a3      	cmp	r3, r4
 800a0e4:	d3fa      	bcc.n	800a0dc <HAL_Delay+0x14>
  {
  }
}
 800a0e6:	bd38      	pop	{r3, r4, r5, pc}
 800a0e8:	2000007c 	.word	0x2000007c

0800a0ec <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a0ec:	4907      	ldr	r1, [pc, #28]	; (800a10c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800a0ee:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a0f0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a0f2:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a0f6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a0fa:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a0fc:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a0fe:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800a102:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800a106:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800a108:	4770      	bx	lr
 800a10a:	bf00      	nop
 800a10c:	e000ed00 	.word	0xe000ed00

0800a110 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a110:	4b1c      	ldr	r3, [pc, #112]	; (800a184 <HAL_NVIC_SetPriority+0x74>)
 800a112:	68db      	ldr	r3, [r3, #12]
 800a114:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a118:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a11a:	f1c3 0e07 	rsb	lr, r3, #7
 800a11e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a122:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a126:	bf28      	it	cs
 800a128:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a12c:	f1bc 0f06 	cmp.w	ip, #6
 800a130:	d91b      	bls.n	800a16a <HAL_NVIC_SetPriority+0x5a>
 800a132:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a134:	f04f 3cff 	mov.w	ip, #4294967295
 800a138:	fa0c fc03 	lsl.w	ip, ip, r3
 800a13c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a140:	f04f 3cff 	mov.w	ip, #4294967295
 800a144:	fa0c fc0e 	lsl.w	ip, ip, lr
 800a148:	ea21 010c 	bic.w	r1, r1, ip
 800a14c:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800a14e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a150:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800a154:	db0c      	blt.n	800a170 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a156:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800a15a:	0109      	lsls	r1, r1, #4
 800a15c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800a160:	b2c9      	uxtb	r1, r1
 800a162:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a166:	f85d fb04 	ldr.w	pc, [sp], #4
 800a16a:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a16c:	4613      	mov	r3, r2
 800a16e:	e7e7      	b.n	800a140 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a170:	4b05      	ldr	r3, [pc, #20]	; (800a188 <HAL_NVIC_SetPriority+0x78>)
 800a172:	f000 000f 	and.w	r0, r0, #15
 800a176:	0109      	lsls	r1, r1, #4
 800a178:	4403      	add	r3, r0
 800a17a:	b2c9      	uxtb	r1, r1
 800a17c:	7619      	strb	r1, [r3, #24]
 800a17e:	f85d fb04 	ldr.w	pc, [sp], #4
 800a182:	bf00      	nop
 800a184:	e000ed00 	.word	0xe000ed00
 800a188:	e000ecfc 	.word	0xe000ecfc

0800a18c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a18c:	2800      	cmp	r0, #0
 800a18e:	db07      	blt.n	800a1a0 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a190:	0941      	lsrs	r1, r0, #5
 800a192:	4a04      	ldr	r2, [pc, #16]	; (800a1a4 <HAL_NVIC_EnableIRQ+0x18>)
 800a194:	f000 001f 	and.w	r0, r0, #31
 800a198:	2301      	movs	r3, #1
 800a19a:	4083      	lsls	r3, r0
 800a19c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a1a0:	4770      	bx	lr
 800a1a2:	bf00      	nop
 800a1a4:	e000e100 	.word	0xe000e100

0800a1a8 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a1a8:	b180      	cbz	r0, 800a1cc <HAL_CRC_Init+0x24>
{
 800a1aa:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a1ac:	7943      	ldrb	r3, [r0, #5]
 800a1ae:	4604      	mov	r4, r0
 800a1b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a1b4:	b11b      	cbz	r3, 800a1be <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a1b6:	2301      	movs	r3, #1
 800a1b8:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a1ba:	2000      	movs	r0, #0
}
 800a1bc:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800a1be:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800a1c0:	f7f7 fdaa 	bl	8001d18 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800a1c4:	2301      	movs	r3, #1
 800a1c6:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800a1c8:	2000      	movs	r0, #0
}
 800a1ca:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a1cc:	2001      	movs	r0, #1
}
 800a1ce:	4770      	bx	lr

0800a1d0 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a1d0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a1d4:	2b02      	cmp	r3, #2
 800a1d6:	d003      	beq.n	800a1e0 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a1d8:	2380      	movs	r3, #128	; 0x80
 800a1da:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800a1dc:	2001      	movs	r0, #1
 800a1de:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800a1e0:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800a1e2:	2305      	movs	r3, #5
 800a1e4:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800a1e8:	6813      	ldr	r3, [r2, #0]
 800a1ea:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800a1ee:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800a1f0:	6013      	str	r3, [r2, #0]
}
 800a1f2:	4770      	bx	lr

0800a1f4 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800a1f4:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800a1f8:	4770      	bx	lr
 800a1fa:	bf00      	nop

0800a1fc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a1fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a200:	2200      	movs	r2, #0
 800a202:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a204:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a468 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a208:	4e90      	ldr	r6, [pc, #576]	; (800a44c <HAL_GPIO_Init+0x250>)
{
 800a20a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a20c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a20e:	4689      	mov	r9, r1
 800a210:	e005      	b.n	800a21e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a212:	3301      	adds	r3, #1
 800a214:	2b10      	cmp	r3, #16
 800a216:	f102 0202 	add.w	r2, r2, #2
 800a21a:	f000 8095 	beq.w	800a348 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800a21e:	2101      	movs	r1, #1
 800a220:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a222:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800a226:	43a1      	bics	r1, r4
 800a228:	d1f3      	bne.n	800a212 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a22a:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800a22e:	f00c 0103 	and.w	r1, ip, #3
 800a232:	1e4d      	subs	r5, r1, #1
 800a234:	2d01      	cmp	r5, #1
 800a236:	f240 808a 	bls.w	800a34e <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a23a:	2903      	cmp	r1, #3
 800a23c:	f040 80ca 	bne.w	800a3d4 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a240:	4091      	lsls	r1, r2
 800a242:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800a244:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a246:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a248:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a24a:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a24e:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a250:	d0df      	beq.n	800a212 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a252:	2100      	movs	r1, #0
 800a254:	9103      	str	r1, [sp, #12]
 800a256:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a25a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800a25e:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800a262:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a266:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800a26a:	9103      	str	r1, [sp, #12]
 800a26c:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a26e:	f023 0103 	bic.w	r1, r3, #3
 800a272:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800a276:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a27a:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a27e:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a280:	00bf      	lsls	r7, r7, #2
 800a282:	f04f 0e0f 	mov.w	lr, #15
 800a286:	fa0e fe07 	lsl.w	lr, lr, r7
 800a28a:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a28e:	4d70      	ldr	r5, [pc, #448]	; (800a450 <HAL_GPIO_Init+0x254>)
 800a290:	42a8      	cmp	r0, r5
 800a292:	d02e      	beq.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a294:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800a298:	42a8      	cmp	r0, r5
 800a29a:	f000 809f 	beq.w	800a3dc <HAL_GPIO_Init+0x1e0>
 800a29e:	4d6d      	ldr	r5, [pc, #436]	; (800a454 <HAL_GPIO_Init+0x258>)
 800a2a0:	42a8      	cmp	r0, r5
 800a2a2:	f000 80a2 	beq.w	800a3ea <HAL_GPIO_Init+0x1ee>
 800a2a6:	4d6c      	ldr	r5, [pc, #432]	; (800a458 <HAL_GPIO_Init+0x25c>)
 800a2a8:	42a8      	cmp	r0, r5
 800a2aa:	f000 80a5 	beq.w	800a3f8 <HAL_GPIO_Init+0x1fc>
 800a2ae:	4d6b      	ldr	r5, [pc, #428]	; (800a45c <HAL_GPIO_Init+0x260>)
 800a2b0:	42a8      	cmp	r0, r5
 800a2b2:	f000 80a8 	beq.w	800a406 <HAL_GPIO_Init+0x20a>
 800a2b6:	4d6a      	ldr	r5, [pc, #424]	; (800a460 <HAL_GPIO_Init+0x264>)
 800a2b8:	42a8      	cmp	r0, r5
 800a2ba:	f000 80b2 	beq.w	800a422 <HAL_GPIO_Init+0x226>
 800a2be:	4d69      	ldr	r5, [pc, #420]	; (800a464 <HAL_GPIO_Init+0x268>)
 800a2c0:	42a8      	cmp	r0, r5
 800a2c2:	f000 80b5 	beq.w	800a430 <HAL_GPIO_Init+0x234>
 800a2c6:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a46c <HAL_GPIO_Init+0x270>
 800a2ca:	4570      	cmp	r0, lr
 800a2cc:	f000 80a2 	beq.w	800a414 <HAL_GPIO_Init+0x218>
 800a2d0:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a470 <HAL_GPIO_Init+0x274>
 800a2d4:	4570      	cmp	r0, lr
 800a2d6:	f000 80b2 	beq.w	800a43e <HAL_GPIO_Init+0x242>
 800a2da:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a474 <HAL_GPIO_Init+0x278>
 800a2de:	4570      	cmp	r0, lr
 800a2e0:	bf0c      	ite	eq
 800a2e2:	f04f 0e09 	moveq.w	lr, #9
 800a2e6:	f04f 0e0a 	movne.w	lr, #10
 800a2ea:	fa0e f707 	lsl.w	r7, lr, r7
 800a2ee:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a2f2:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800a2f6:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800a2f8:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a2fc:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800a300:	bf0c      	ite	eq
 800a302:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a304:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800a308:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800a30a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a30c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800a310:	bf0c      	ite	eq
 800a312:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a314:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800a318:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800a31a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a31c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800a320:	bf0c      	ite	eq
 800a322:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a324:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800a328:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a32a:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a32c:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a330:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800a334:	bf0c      	ite	eq
 800a336:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a338:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a33c:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800a33e:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a340:	f102 0202 	add.w	r2, r2, #2
 800a344:	f47f af6b 	bne.w	800a21e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800a348:	b005      	add	sp, #20
 800a34a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a34e:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a352:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a356:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a35a:	2503      	movs	r5, #3
 800a35c:	fa05 f802 	lsl.w	r8, r5, r2
 800a360:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a364:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a368:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a36a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a36c:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a370:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a374:	409f      	lsls	r7, r3
 800a376:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a37a:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a37e:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a380:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a382:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a386:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a38a:	4097      	lsls	r7, r2
 800a38c:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a390:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a392:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a394:	fa01 f102 	lsl.w	r1, r1, r2
 800a398:	f47f af54 	bne.w	800a244 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a39c:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a3a0:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a3a4:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a3a8:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a3ac:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a3ae:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a3b2:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a3b6:	fa07 f708 	lsl.w	r7, r7, r8
 800a3ba:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a3bc:	270f      	movs	r7, #15
 800a3be:	fa07 f808 	lsl.w	r8, r7, r8
 800a3c2:	9f00      	ldr	r7, [sp, #0]
 800a3c4:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a3c8:	9f01      	ldr	r7, [sp, #4]
 800a3ca:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a3ce:	f8ce 7020 	str.w	r7, [lr, #32]
 800a3d2:	e737      	b.n	800a244 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a3d4:	2503      	movs	r5, #3
 800a3d6:	4095      	lsls	r5, r2
 800a3d8:	43ed      	mvns	r5, r5
 800a3da:	e7d1      	b.n	800a380 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a3dc:	f04f 0e01 	mov.w	lr, #1
 800a3e0:	fa0e f707 	lsl.w	r7, lr, r7
 800a3e4:	ea48 0807 	orr.w	r8, r8, r7
 800a3e8:	e783      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a3ea:	f04f 0e02 	mov.w	lr, #2
 800a3ee:	fa0e f707 	lsl.w	r7, lr, r7
 800a3f2:	ea48 0807 	orr.w	r8, r8, r7
 800a3f6:	e77c      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a3f8:	f04f 0e03 	mov.w	lr, #3
 800a3fc:	fa0e f707 	lsl.w	r7, lr, r7
 800a400:	ea48 0807 	orr.w	r8, r8, r7
 800a404:	e775      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a406:	f04f 0e04 	mov.w	lr, #4
 800a40a:	fa0e f707 	lsl.w	r7, lr, r7
 800a40e:	ea48 0807 	orr.w	r8, r8, r7
 800a412:	e76e      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a414:	f04f 0e07 	mov.w	lr, #7
 800a418:	fa0e f707 	lsl.w	r7, lr, r7
 800a41c:	ea48 0807 	orr.w	r8, r8, r7
 800a420:	e767      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a422:	f04f 0e05 	mov.w	lr, #5
 800a426:	fa0e f707 	lsl.w	r7, lr, r7
 800a42a:	ea48 0807 	orr.w	r8, r8, r7
 800a42e:	e760      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a430:	f04f 0e06 	mov.w	lr, #6
 800a434:	fa0e f707 	lsl.w	r7, lr, r7
 800a438:	ea48 0807 	orr.w	r8, r8, r7
 800a43c:	e759      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a43e:	f04f 0e08 	mov.w	lr, #8
 800a442:	fa0e f707 	lsl.w	r7, lr, r7
 800a446:	ea48 0807 	orr.w	r8, r8, r7
 800a44a:	e752      	b.n	800a2f2 <HAL_GPIO_Init+0xf6>
 800a44c:	40013c00 	.word	0x40013c00
 800a450:	40020000 	.word	0x40020000
 800a454:	40020800 	.word	0x40020800
 800a458:	40020c00 	.word	0x40020c00
 800a45c:	40021000 	.word	0x40021000
 800a460:	40021400 	.word	0x40021400
 800a464:	40021800 	.word	0x40021800
 800a468:	40023800 	.word	0x40023800
 800a46c:	40021c00 	.word	0x40021c00
 800a470:	40022000 	.word	0x40022000
 800a474:	40022400 	.word	0x40022400

0800a478 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a478:	6903      	ldr	r3, [r0, #16]
 800a47a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a47c:	bf14      	ite	ne
 800a47e:	2001      	movne	r0, #1
 800a480:	2000      	moveq	r0, #0
 800a482:	4770      	bx	lr

0800a484 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a484:	b902      	cbnz	r2, 800a488 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a486:	0409      	lsls	r1, r1, #16
 800a488:	6181      	str	r1, [r0, #24]
  }
}
 800a48a:	4770      	bx	lr

0800a48c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a48c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a48e:	ea01 0203 	and.w	r2, r1, r3
 800a492:	ea21 0103 	bic.w	r1, r1, r3
 800a496:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a49a:	6181      	str	r1, [r0, #24]
}
 800a49c:	4770      	bx	lr
 800a49e:	bf00      	nop

0800a4a0 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a4a0:	4770      	bx	lr
 800a4a2:	bf00      	nop

0800a4a4 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a4a4:	4a04      	ldr	r2, [pc, #16]	; (800a4b8 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a4a6:	6951      	ldr	r1, [r2, #20]
 800a4a8:	4201      	tst	r1, r0
 800a4aa:	d100      	bne.n	800a4ae <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a4ac:	4770      	bx	lr
{
 800a4ae:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a4b0:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a4b2:	f7ff fff5 	bl	800a4a0 <HAL_GPIO_EXTI_Callback>
}
 800a4b6:	bd08      	pop	{r3, pc}
 800a4b8:	40013c00 	.word	0x40013c00

0800a4bc <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4c0:	6804      	ldr	r4, [r0, #0]
{
 800a4c2:	b083      	sub	sp, #12
 800a4c4:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4c6:	6823      	ldr	r3, [r4, #0]
{
 800a4c8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a4cc:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a4d4:	4606      	mov	r6, r0
 800a4d6:	468a      	mov	sl, r1
 800a4d8:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4da:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a4dc:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a4e0:	d136      	bne.n	800a550 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4e2:	6965      	ldr	r5, [r4, #20]
 800a4e4:	07e8      	lsls	r0, r5, #31
 800a4e6:	d5fc      	bpl.n	800a4e2 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a4e8:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a4ec:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a4ee:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a4f2:	d003      	beq.n	800a4fc <I2C_RequestMemoryWrite+0x40>
 800a4f4:	e04f      	b.n	800a596 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4f6:	6961      	ldr	r1, [r4, #20]
 800a4f8:	054d      	lsls	r5, r1, #21
 800a4fa:	d45d      	bmi.n	800a5b8 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a4fc:	6961      	ldr	r1, [r4, #20]
 800a4fe:	078b      	lsls	r3, r1, #30
 800a500:	d5f9      	bpl.n	800a4f6 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a502:	2300      	movs	r3, #0
 800a504:	9301      	str	r3, [sp, #4]
 800a506:	6963      	ldr	r3, [r4, #20]
 800a508:	9301      	str	r3, [sp, #4]
 800a50a:	69a3      	ldr	r3, [r4, #24]
 800a50c:	9301      	str	r3, [sp, #4]
 800a50e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a510:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a514:	f040 8088 	bne.w	800a628 <I2C_RequestMemoryWrite+0x16c>
 800a518:	6963      	ldr	r3, [r4, #20]
 800a51a:	061a      	lsls	r2, r3, #24
 800a51c:	d464      	bmi.n	800a5e8 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a51e:	6963      	ldr	r3, [r4, #20]
 800a520:	055b      	lsls	r3, r3, #21
 800a522:	d5f9      	bpl.n	800a518 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a524:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a526:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a52a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a52c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a52e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a530:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a534:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a538:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a53a:	f043 0304 	orr.w	r3, r3, #4
 800a53e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a540:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a542:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a544:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a546:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a54a:	d066      	beq.n	800a61a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a54c:	2001      	movs	r0, #1
 800a54e:	e01f      	b.n	800a590 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a550:	6963      	ldr	r3, [r4, #20]
 800a552:	07d9      	lsls	r1, r3, #31
 800a554:	d4c8      	bmi.n	800a4e8 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a556:	f7ff fdb1 	bl	800a0bc <HAL_GetTick>
 800a55a:	eba0 000b 	sub.w	r0, r0, fp
 800a55e:	4581      	cmp	r9, r0
 800a560:	d304      	bcc.n	800a56c <I2C_RequestMemoryWrite+0xb0>
 800a562:	f1b9 0f00 	cmp.w	r9, #0
 800a566:	d001      	beq.n	800a56c <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a568:	6834      	ldr	r4, [r6, #0]
 800a56a:	e7b7      	b.n	800a4dc <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a56c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a56e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a570:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a572:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a576:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a57a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a57c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a57e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a582:	f042 0220 	orr.w	r2, r2, #32
 800a586:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a588:	680b      	ldr	r3, [r1, #0]
 800a58a:	05dc      	lsls	r4, r3, #23
 800a58c:	d435      	bmi.n	800a5fa <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a58e:	2003      	movs	r0, #3
}
 800a590:	b003      	add	sp, #12
 800a592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a596:	6963      	ldr	r3, [r4, #20]
 800a598:	0798      	lsls	r0, r3, #30
 800a59a:	d4b2      	bmi.n	800a502 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a59c:	6963      	ldr	r3, [r4, #20]
 800a59e:	055a      	lsls	r2, r3, #21
 800a5a0:	d40a      	bmi.n	800a5b8 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5a2:	f7ff fd8b 	bl	800a0bc <HAL_GetTick>
 800a5a6:	eba0 000b 	sub.w	r0, r0, fp
 800a5aa:	4581      	cmp	r9, r0
 800a5ac:	d34e      	bcc.n	800a64c <I2C_RequestMemoryWrite+0x190>
 800a5ae:	f1b9 0f00 	cmp.w	r9, #0
 800a5b2:	d04b      	beq.n	800a64c <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a5b4:	6834      	ldr	r4, [r6, #0]
 800a5b6:	e79a      	b.n	800a4ee <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a5b8:	6823      	ldr	r3, [r4, #0]
 800a5ba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a5be:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a5c0:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a5c2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a5c6:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a5c8:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a5ca:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a5cc:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a5d0:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a5d4:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a5d6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a5da:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a5de:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a5e0:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a5e2:	b003      	add	sp, #12
 800a5e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a5e8:	f1b8 0f01 	cmp.w	r8, #1
 800a5ec:	d109      	bne.n	800a602 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a5ee:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a5f0:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a5f2:	6127      	str	r7, [r4, #16]
}
 800a5f4:	b003      	add	sp, #12
 800a5f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a5fa:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a5fe:	6433      	str	r3, [r6, #64]	; 0x40
 800a600:	e7c5      	b.n	800a58e <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a602:	0a3b      	lsrs	r3, r7, #8
 800a604:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a606:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a60a:	d12e      	bne.n	800a66a <I2C_RequestMemoryWrite+0x1ae>
 800a60c:	6963      	ldr	r3, [r4, #20]
 800a60e:	0619      	lsls	r1, r3, #24
 800a610:	d4ed      	bmi.n	800a5ee <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a612:	6963      	ldr	r3, [r4, #20]
 800a614:	055a      	lsls	r2, r3, #21
 800a616:	d5f9      	bpl.n	800a60c <I2C_RequestMemoryWrite+0x150>
 800a618:	e784      	b.n	800a524 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a61a:	6832      	ldr	r2, [r6, #0]
 800a61c:	6813      	ldr	r3, [r2, #0]
 800a61e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a622:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a624:	6013      	str	r3, [r2, #0]
 800a626:	e7b3      	b.n	800a590 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a628:	6963      	ldr	r3, [r4, #20]
 800a62a:	061d      	lsls	r5, r3, #24
 800a62c:	d4dc      	bmi.n	800a5e8 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a62e:	6963      	ldr	r3, [r4, #20]
 800a630:	0559      	lsls	r1, r3, #21
 800a632:	f53f af77 	bmi.w	800a524 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a636:	f7ff fd41 	bl	800a0bc <HAL_GetTick>
 800a63a:	eba0 000b 	sub.w	r0, r0, fp
 800a63e:	4581      	cmp	r9, r0
 800a640:	d325      	bcc.n	800a68e <I2C_RequestMemoryWrite+0x1d2>
 800a642:	f1b9 0f00 	cmp.w	r9, #0
 800a646:	d022      	beq.n	800a68e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a648:	6834      	ldr	r4, [r6, #0]
 800a64a:	e761      	b.n	800a510 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a64c:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a64e:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a650:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a652:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a656:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a65a:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a65c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a660:	f043 0320 	orr.w	r3, r3, #32
 800a664:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a666:	2001      	movs	r0, #1
 800a668:	e792      	b.n	800a590 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a66a:	6963      	ldr	r3, [r4, #20]
 800a66c:	061b      	lsls	r3, r3, #24
 800a66e:	d4be      	bmi.n	800a5ee <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a670:	6963      	ldr	r3, [r4, #20]
 800a672:	0558      	lsls	r0, r3, #21
 800a674:	f53f af56 	bmi.w	800a524 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a678:	f7ff fd20 	bl	800a0bc <HAL_GetTick>
 800a67c:	eba0 000b 	sub.w	r0, r0, fp
 800a680:	4581      	cmp	r9, r0
 800a682:	d304      	bcc.n	800a68e <I2C_RequestMemoryWrite+0x1d2>
 800a684:	f1b9 0f00 	cmp.w	r9, #0
 800a688:	d001      	beq.n	800a68e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a68a:	6834      	ldr	r4, [r6, #0]
 800a68c:	e7bb      	b.n	800a606 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a68e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a690:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a692:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a694:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a698:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a69c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a69e:	4313      	orrs	r3, r2
 800a6a0:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a6a2:	e74d      	b.n	800a540 <I2C_RequestMemoryWrite+0x84>

0800a6a4 <I2C_RequestMemoryRead>:
{
 800a6a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6a8:	6804      	ldr	r4, [r0, #0]
{
 800a6aa:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6ac:	6823      	ldr	r3, [r4, #0]
 800a6ae:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a6b2:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a6b4:	6823      	ldr	r3, [r4, #0]
{
 800a6b6:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a6b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a6bc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a6c0:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a6c4:	6023      	str	r3, [r4, #0]
{
 800a6c6:	4606      	mov	r6, r0
 800a6c8:	468b      	mov	fp, r1
 800a6ca:	4617      	mov	r7, r2
 800a6cc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a6d0:	d13a      	bne.n	800a748 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a6d2:	6965      	ldr	r5, [r4, #20]
 800a6d4:	07eb      	lsls	r3, r5, #31
 800a6d6:	d5fc      	bpl.n	800a6d2 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a6d8:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a6dc:	6123      	str	r3, [r4, #16]
 800a6de:	fa5f fb8b 	uxtb.w	fp, fp
 800a6e2:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a6e6:	d003      	beq.n	800a6f0 <I2C_RequestMemoryRead+0x4c>
 800a6e8:	e069      	b.n	800a7be <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6ea:	6965      	ldr	r5, [r4, #20]
 800a6ec:	056a      	lsls	r2, r5, #21
 800a6ee:	d44e      	bmi.n	800a78e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a6f0:	6965      	ldr	r5, [r4, #20]
 800a6f2:	07a9      	lsls	r1, r5, #30
 800a6f4:	d5f9      	bpl.n	800a6ea <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a6f6:	2300      	movs	r3, #0
 800a6f8:	9301      	str	r3, [sp, #4]
 800a6fa:	6963      	ldr	r3, [r4, #20]
 800a6fc:	9301      	str	r3, [sp, #4]
 800a6fe:	69a3      	ldr	r3, [r4, #24]
 800a700:	9301      	str	r3, [sp, #4]
 800a702:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a704:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a708:	f040 80bd 	bne.w	800a886 <I2C_RequestMemoryRead+0x1e2>
 800a70c:	6963      	ldr	r3, [r4, #20]
 800a70e:	0618      	lsls	r0, r3, #24
 800a710:	d468      	bmi.n	800a7e4 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a712:	6963      	ldr	r3, [r4, #20]
 800a714:	0559      	lsls	r1, r3, #21
 800a716:	d5f9      	bpl.n	800a70c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a718:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a71a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a71e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a720:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a722:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a724:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a728:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a72c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a72e:	f043 0304 	orr.w	r3, r3, #4
 800a732:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a734:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a736:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a738:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a73a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a73e:	d070      	beq.n	800a822 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a740:	2001      	movs	r0, #1
}
 800a742:	b003      	add	sp, #12
 800a744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a748:	6963      	ldr	r3, [r4, #20]
 800a74a:	07dd      	lsls	r5, r3, #31
 800a74c:	d4c4      	bmi.n	800a6d8 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a74e:	f7ff fcb5 	bl	800a0bc <HAL_GetTick>
 800a752:	eba0 0009 	sub.w	r0, r0, r9
 800a756:	4582      	cmp	sl, r0
 800a758:	d304      	bcc.n	800a764 <I2C_RequestMemoryRead+0xc0>
 800a75a:	f1ba 0f00 	cmp.w	sl, #0
 800a75e:	d001      	beq.n	800a764 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a760:	6834      	ldr	r4, [r6, #0]
 800a762:	e7b3      	b.n	800a6cc <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a764:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a766:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a768:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a76a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a76e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a772:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a774:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a776:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a77a:	f042 0220 	orr.w	r2, r2, #32
 800a77e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a780:	680b      	ldr	r3, [r1, #0]
 800a782:	05dc      	lsls	r4, r3, #23
 800a784:	d43d      	bmi.n	800a802 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a786:	2003      	movs	r0, #3
}
 800a788:	b003      	add	sp, #12
 800a78a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a78e:	6823      	ldr	r3, [r4, #0]
 800a790:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a794:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a796:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a798:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a79c:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a79e:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a7a0:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a7a2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a7a6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a7aa:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a7ac:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a7b0:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a7b4:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a7b6:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a7b8:	b003      	add	sp, #12
 800a7ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a7be:	6963      	ldr	r3, [r4, #20]
 800a7c0:	079b      	lsls	r3, r3, #30
 800a7c2:	d498      	bmi.n	800a6f6 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7c4:	6963      	ldr	r3, [r4, #20]
 800a7c6:	0558      	lsls	r0, r3, #21
 800a7c8:	d4e1      	bmi.n	800a78e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7ca:	f7ff fc77 	bl	800a0bc <HAL_GetTick>
 800a7ce:	eba0 0009 	sub.w	r0, r0, r9
 800a7d2:	4582      	cmp	sl, r0
 800a7d4:	f0c0 808f 	bcc.w	800a8f6 <I2C_RequestMemoryRead+0x252>
 800a7d8:	f1ba 0f00 	cmp.w	sl, #0
 800a7dc:	f000 808b 	beq.w	800a8f6 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a7e0:	6834      	ldr	r4, [r6, #0]
 800a7e2:	e77e      	b.n	800a6e2 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a7e4:	f1b8 0f01 	cmp.w	r8, #1
 800a7e8:	d10f      	bne.n	800a80a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a7ea:	b2ff      	uxtb	r7, r7
 800a7ec:	6127      	str	r7, [r4, #16]
 800a7ee:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a7f2:	d16e      	bne.n	800a8d2 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a7f4:	6963      	ldr	r3, [r4, #20]
 800a7f6:	061b      	lsls	r3, r3, #24
 800a7f8:	d41a      	bmi.n	800a830 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7fa:	6963      	ldr	r3, [r4, #20]
 800a7fc:	055f      	lsls	r7, r3, #21
 800a7fe:	d5f9      	bpl.n	800a7f4 <I2C_RequestMemoryRead+0x150>
 800a800:	e78a      	b.n	800a718 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a802:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a806:	6433      	str	r3, [r6, #64]	; 0x40
 800a808:	e7bd      	b.n	800a786 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a80a:	0a3b      	lsrs	r3, r7, #8
 800a80c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a80e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a812:	d17e      	bne.n	800a912 <I2C_RequestMemoryRead+0x26e>
 800a814:	6963      	ldr	r3, [r4, #20]
 800a816:	061d      	lsls	r5, r3, #24
 800a818:	d4e7      	bmi.n	800a7ea <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a81a:	6963      	ldr	r3, [r4, #20]
 800a81c:	0558      	lsls	r0, r3, #21
 800a81e:	d5f9      	bpl.n	800a814 <I2C_RequestMemoryRead+0x170>
 800a820:	e77a      	b.n	800a718 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a822:	6832      	ldr	r2, [r6, #0]
 800a824:	6813      	ldr	r3, [r2, #0]
 800a826:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a82a:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a82c:	6013      	str	r3, [r2, #0]
 800a82e:	e7ab      	b.n	800a788 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a830:	6823      	ldr	r3, [r4, #0]
 800a832:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a836:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a838:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a83c:	d113      	bne.n	800a866 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a83e:	6963      	ldr	r3, [r4, #20]
 800a840:	07d8      	lsls	r0, r3, #31
 800a842:	d5fc      	bpl.n	800a83e <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a844:	f04b 0301 	orr.w	r3, fp, #1
 800a848:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a84a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a84e:	d003      	beq.n	800a858 <I2C_RequestMemoryRead+0x1b4>
 800a850:	e02b      	b.n	800a8aa <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a852:	6963      	ldr	r3, [r4, #20]
 800a854:	055b      	lsls	r3, r3, #21
 800a856:	d49a      	bmi.n	800a78e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a858:	6963      	ldr	r3, [r4, #20]
 800a85a:	43db      	mvns	r3, r3
 800a85c:	f013 0302 	ands.w	r3, r3, #2
 800a860:	d1f7      	bne.n	800a852 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a862:	4618      	mov	r0, r3
 800a864:	e790      	b.n	800a788 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a866:	6963      	ldr	r3, [r4, #20]
 800a868:	07d9      	lsls	r1, r3, #31
 800a86a:	d4eb      	bmi.n	800a844 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a86c:	f7ff fc26 	bl	800a0bc <HAL_GetTick>
 800a870:	eba0 0009 	sub.w	r0, r0, r9
 800a874:	4582      	cmp	sl, r0
 800a876:	f4ff af75 	bcc.w	800a764 <I2C_RequestMemoryRead+0xc0>
 800a87a:	f1ba 0f00 	cmp.w	sl, #0
 800a87e:	f43f af71 	beq.w	800a764 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a882:	6834      	ldr	r4, [r6, #0]
 800a884:	e7d8      	b.n	800a838 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a886:	6963      	ldr	r3, [r4, #20]
 800a888:	061a      	lsls	r2, r3, #24
 800a88a:	d4ab      	bmi.n	800a7e4 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a88c:	6963      	ldr	r3, [r4, #20]
 800a88e:	055d      	lsls	r5, r3, #21
 800a890:	f53f af42 	bmi.w	800a718 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a894:	f7ff fc12 	bl	800a0bc <HAL_GetTick>
 800a898:	eba0 0009 	sub.w	r0, r0, r9
 800a89c:	4582      	cmp	sl, r0
 800a89e:	d34b      	bcc.n	800a938 <I2C_RequestMemoryRead+0x294>
 800a8a0:	f1ba 0f00 	cmp.w	sl, #0
 800a8a4:	d048      	beq.n	800a938 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8a6:	6834      	ldr	r4, [r6, #0]
 800a8a8:	e72c      	b.n	800a704 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a8aa:	6963      	ldr	r3, [r4, #20]
 800a8ac:	43db      	mvns	r3, r3
 800a8ae:	f013 0302 	ands.w	r3, r3, #2
 800a8b2:	d0d6      	beq.n	800a862 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8b4:	6963      	ldr	r3, [r4, #20]
 800a8b6:	055a      	lsls	r2, r3, #21
 800a8b8:	f53f af69 	bmi.w	800a78e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8bc:	f7ff fbfe 	bl	800a0bc <HAL_GetTick>
 800a8c0:	eba0 0009 	sub.w	r0, r0, r9
 800a8c4:	4582      	cmp	sl, r0
 800a8c6:	d316      	bcc.n	800a8f6 <I2C_RequestMemoryRead+0x252>
 800a8c8:	f1ba 0f00 	cmp.w	sl, #0
 800a8cc:	d013      	beq.n	800a8f6 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a8ce:	6834      	ldr	r4, [r6, #0]
 800a8d0:	e7bb      	b.n	800a84a <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8d2:	6963      	ldr	r3, [r4, #20]
 800a8d4:	061d      	lsls	r5, r3, #24
 800a8d6:	d4ab      	bmi.n	800a830 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8d8:	6963      	ldr	r3, [r4, #20]
 800a8da:	055a      	lsls	r2, r3, #21
 800a8dc:	f53f af1c 	bmi.w	800a718 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8e0:	f7ff fbec 	bl	800a0bc <HAL_GetTick>
 800a8e4:	eba0 0009 	sub.w	r0, r0, r9
 800a8e8:	4582      	cmp	sl, r0
 800a8ea:	d325      	bcc.n	800a938 <I2C_RequestMemoryRead+0x294>
 800a8ec:	f1ba 0f00 	cmp.w	sl, #0
 800a8f0:	d022      	beq.n	800a938 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8f2:	6834      	ldr	r4, [r6, #0]
 800a8f4:	e77b      	b.n	800a7ee <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a8f6:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a8f8:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a8fa:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a8fc:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a900:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a904:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a906:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a90a:	f043 0320 	orr.w	r3, r3, #32
 800a90e:	6433      	str	r3, [r6, #64]	; 0x40
 800a910:	e716      	b.n	800a740 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a912:	6963      	ldr	r3, [r4, #20]
 800a914:	0619      	lsls	r1, r3, #24
 800a916:	f53f af68 	bmi.w	800a7ea <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a91a:	6963      	ldr	r3, [r4, #20]
 800a91c:	055b      	lsls	r3, r3, #21
 800a91e:	f53f aefb 	bmi.w	800a718 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a922:	f7ff fbcb 	bl	800a0bc <HAL_GetTick>
 800a926:	eba0 0009 	sub.w	r0, r0, r9
 800a92a:	4582      	cmp	sl, r0
 800a92c:	d304      	bcc.n	800a938 <I2C_RequestMemoryRead+0x294>
 800a92e:	f1ba 0f00 	cmp.w	sl, #0
 800a932:	d001      	beq.n	800a938 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a934:	6834      	ldr	r4, [r6, #0]
 800a936:	e76a      	b.n	800a80e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a938:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a93a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a93c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a93e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a942:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a946:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a948:	4313      	orrs	r3, r2
 800a94a:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a94c:	e6f2      	b.n	800a734 <I2C_RequestMemoryRead+0x90>
 800a94e:	bf00      	nop

0800a950 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a950:	2800      	cmp	r0, #0
 800a952:	f000 80b9 	beq.w	800aac8 <HAL_I2C_Init+0x178>
{
 800a956:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a958:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a95c:	4604      	mov	r4, r0
 800a95e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a962:	2b00      	cmp	r3, #0
 800a964:	f000 8098 	beq.w	800aa98 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a968:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a96a:	2224      	movs	r2, #36	; 0x24
 800a96c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a970:	681a      	ldr	r2, [r3, #0]
 800a972:	f022 0201 	bic.w	r2, r2, #1
 800a976:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a978:	681a      	ldr	r2, [r3, #0]
 800a97a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a97e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a980:	681a      	ldr	r2, [r3, #0]
 800a982:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a986:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a988:	f001 fe70 	bl	800c66c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a98c:	6865      	ldr	r5, [r4, #4]
 800a98e:	4b4f      	ldr	r3, [pc, #316]	; (800aacc <HAL_I2C_Init+0x17c>)
 800a990:	429d      	cmp	r5, r3
 800a992:	d84f      	bhi.n	800aa34 <HAL_I2C_Init+0xe4>
 800a994:	4b4e      	ldr	r3, [pc, #312]	; (800aad0 <HAL_I2C_Init+0x180>)
 800a996:	4298      	cmp	r0, r3
 800a998:	d97c      	bls.n	800aa94 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a99a:	4b4e      	ldr	r3, [pc, #312]	; (800aad4 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a99c:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a99e:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a9a2:	1e43      	subs	r3, r0, #1
 800a9a4:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a9a8:	6822      	ldr	r2, [r4, #0]
 800a9aa:	6851      	ldr	r1, [r2, #4]
 800a9ac:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a9b0:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a9b4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a9b6:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a9b8:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a9bc:	f10c 0c01 	add.w	ip, ip, #1
 800a9c0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a9c4:	ea41 010c 	orr.w	r1, r1, ip
 800a9c8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a9ca:	69d1      	ldr	r1, [r2, #28]
 800a9cc:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a9d0:	3301      	adds	r3, #1
 800a9d2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a9d6:	4203      	tst	r3, r0
 800a9d8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a9dc:	d161      	bne.n	800aaa2 <HAL_I2C_Init+0x152>
 800a9de:	2304      	movs	r3, #4
 800a9e0:	430b      	orrs	r3, r1
 800a9e2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a9e4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a9e8:	6811      	ldr	r1, [r2, #0]
 800a9ea:	4303      	orrs	r3, r0
 800a9ec:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a9f0:	430b      	orrs	r3, r1
 800a9f2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a9f4:	6891      	ldr	r1, [r2, #8]
 800a9f6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a9fa:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a9fe:	4303      	orrs	r3, r0
 800aa00:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800aa04:	430b      	orrs	r3, r1
 800aa06:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800aa08:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800aa0c:	68d1      	ldr	r1, [r2, #12]
 800aa0e:	4303      	orrs	r3, r0
 800aa10:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800aa14:	430b      	orrs	r3, r1
 800aa16:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800aa18:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800aa1a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800aa1c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800aa20:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800aa22:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800aa24:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800aa26:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800aa2a:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa2c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800aa30:	4618      	mov	r0, r3
}
 800aa32:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800aa34:	4b28      	ldr	r3, [pc, #160]	; (800aad8 <HAL_I2C_Init+0x188>)
 800aa36:	4298      	cmp	r0, r3
 800aa38:	d92c      	bls.n	800aa94 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aa3a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800aa3c:	4b25      	ldr	r3, [pc, #148]	; (800aad4 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aa3e:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aa40:	4e26      	ldr	r6, [pc, #152]	; (800aadc <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800aa42:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aa46:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aa4a:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800aa4e:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800aa50:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aa54:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800aa58:	fb01 f303 	mul.w	r3, r1, r3
 800aa5c:	fba6 6303 	umull	r6, r3, r6, r3
 800aa60:	6a11      	ldr	r1, [r2, #32]
 800aa62:	099b      	lsrs	r3, r3, #6
 800aa64:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aa68:	3301      	adds	r3, #1
 800aa6a:	430b      	orrs	r3, r1
 800aa6c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aa6e:	69d1      	ldr	r1, [r2, #28]
 800aa70:	68a3      	ldr	r3, [r4, #8]
 800aa72:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800aa76:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800aa7a:	b9ab      	cbnz	r3, 800aaa8 <HAL_I2C_Init+0x158>
 800aa7c:	1e43      	subs	r3, r0, #1
 800aa7e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800aa82:	fbb3 f3f5 	udiv	r3, r3, r5
 800aa86:	3301      	adds	r3, #1
 800aa88:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aa8c:	b1d3      	cbz	r3, 800aac4 <HAL_I2C_Init+0x174>
 800aa8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800aa92:	e7a5      	b.n	800a9e0 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800aa94:	2001      	movs	r0, #1
}
 800aa96:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800aa98:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800aa9c:	f7f7 f956 	bl	8001d4c <HAL_I2C_MspInit>
 800aaa0:	e762      	b.n	800a968 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aaa2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aaa6:	e79b      	b.n	800a9e0 <HAL_I2C_Init+0x90>
 800aaa8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800aaac:	1e43      	subs	r3, r0, #1
 800aaae:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800aab2:	fbb3 f3f5 	udiv	r3, r3, r5
 800aab6:	3301      	adds	r3, #1
 800aab8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800aabc:	b113      	cbz	r3, 800aac4 <HAL_I2C_Init+0x174>
 800aabe:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800aac2:	e78d      	b.n	800a9e0 <HAL_I2C_Init+0x90>
 800aac4:	2301      	movs	r3, #1
 800aac6:	e78b      	b.n	800a9e0 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800aac8:	2001      	movs	r0, #1
}
 800aaca:	4770      	bx	lr
 800aacc:	000186a0 	.word	0x000186a0
 800aad0:	001e847f 	.word	0x001e847f
 800aad4:	431bde83 	.word	0x431bde83
 800aad8:	003d08ff 	.word	0x003d08ff
 800aadc:	10624dd3 	.word	0x10624dd3

0800aae0 <HAL_I2C_Mem_Write>:
{
 800aae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aae4:	4604      	mov	r4, r0
 800aae6:	b083      	sub	sp, #12
 800aae8:	4699      	mov	r9, r3
 800aaea:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800aaee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800aaf0:	460f      	mov	r7, r1
 800aaf2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800aaf4:	f7ff fae2 	bl	800a0bc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800aaf8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800aafc:	2b20      	cmp	r3, #32
 800aafe:	d004      	beq.n	800ab0a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800ab00:	2702      	movs	r7, #2
}
 800ab02:	4638      	mov	r0, r7
 800ab04:	b003      	add	sp, #12
 800ab06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab0a:	4605      	mov	r5, r0
 800ab0c:	e005      	b.n	800ab1a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab0e:	f7ff fad5 	bl	800a0bc <HAL_GetTick>
 800ab12:	1b40      	subs	r0, r0, r5
 800ab14:	2819      	cmp	r0, #25
 800ab16:	f200 80a8 	bhi.w	800ac6a <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab1a:	6820      	ldr	r0, [r4, #0]
 800ab1c:	6983      	ldr	r3, [r0, #24]
 800ab1e:	ea6f 0c03 	mvn.w	ip, r3
 800ab22:	f01c 0b02 	ands.w	fp, ip, #2
 800ab26:	d0f2      	beq.n	800ab0e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800ab28:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ab2c:	2b01      	cmp	r3, #1
 800ab2e:	d0e7      	beq.n	800ab00 <HAL_I2C_Mem_Write+0x20>
 800ab30:	2301      	movs	r3, #1
 800ab32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ab36:	6803      	ldr	r3, [r0, #0]
 800ab38:	07db      	lsls	r3, r3, #31
 800ab3a:	d572      	bpl.n	800ac22 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ab3c:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ab3e:	6807      	ldr	r7, [r0, #0]
 800ab40:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800ab44:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800ab46:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ab48:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800ab4a:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ab4c:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800ab50:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800ab54:	2040      	movs	r0, #64	; 0x40
 800ab56:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ab5a:	2000      	movs	r0, #0
 800ab5c:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800ab5e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800ab62:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800ab64:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ab66:	4856      	ldr	r0, [pc, #344]	; (800acc0 <HAL_I2C_Mem_Write+0x1e0>)
 800ab68:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ab6a:	464b      	mov	r3, r9
 800ab6c:	4642      	mov	r2, r8
 800ab6e:	4620      	mov	r0, r4
 800ab70:	f7ff fca4 	bl	800a4bc <I2C_RequestMemoryWrite>
 800ab74:	4607      	mov	r7, r0
 800ab76:	bb00      	cbnz	r0, 800abba <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800ab78:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ab7a:	2b00      	cmp	r3, #0
 800ab7c:	f000 809e 	beq.w	800acbc <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ab80:	6823      	ldr	r3, [r4, #0]
 800ab82:	1c72      	adds	r2, r6, #1
 800ab84:	d159      	bne.n	800ac3a <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ab86:	695a      	ldr	r2, [r3, #20]
 800ab88:	0610      	lsls	r0, r2, #24
 800ab8a:	d41b      	bmi.n	800abc4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ab8c:	695a      	ldr	r2, [r3, #20]
 800ab8e:	0551      	lsls	r1, r2, #21
 800ab90:	d5f9      	bpl.n	800ab86 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ab92:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ab94:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab98:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ab9a:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ab9c:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800ab9e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aba2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aba6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800aba8:	f043 0304 	orr.w	r3, r3, #4
 800abac:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800abae:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800abb0:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800abb2:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800abb4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800abb8:	d038      	beq.n	800ac2c <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800abba:	2701      	movs	r7, #1
}
 800abbc:	4638      	mov	r0, r7
 800abbe:	b003      	add	sp, #12
 800abc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800abc4:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800abc8:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800abcc:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800abce:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800abd2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800abd6:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800abd8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800abda:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800abdc:	3a01      	subs	r2, #1
 800abde:	b292      	uxth	r2, r2
 800abe0:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800abe2:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800abe4:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800abe6:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800abe8:	0740      	lsls	r0, r0, #29
 800abea:	d517      	bpl.n	800ac1c <HAL_I2C_Mem_Write+0x13c>
 800abec:	b942      	cbnz	r2, 800ac00 <HAL_I2C_Mem_Write+0x120>
 800abee:	1c72      	adds	r2, r6, #1
 800abf0:	d156      	bne.n	800aca0 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800abf2:	695a      	ldr	r2, [r3, #20]
 800abf4:	0750      	lsls	r0, r2, #29
 800abf6:	d446      	bmi.n	800ac86 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800abf8:	695a      	ldr	r2, [r3, #20]
 800abfa:	0551      	lsls	r1, r2, #21
 800abfc:	d5f9      	bpl.n	800abf2 <HAL_I2C_Mem_Write+0x112>
 800abfe:	e7c8      	b.n	800ab92 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ac00:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800ac04:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800ac06:	f10c 0102 	add.w	r1, ip, #2
 800ac0a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ac0c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800ac0e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800ac12:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800ac14:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800ac16:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800ac18:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800ac1a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ac1c:	2a00      	cmp	r2, #0
 800ac1e:	d1b0      	bne.n	800ab82 <HAL_I2C_Mem_Write+0xa2>
 800ac20:	e7e5      	b.n	800abee <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800ac22:	6803      	ldr	r3, [r0, #0]
 800ac24:	f043 0301 	orr.w	r3, r3, #1
 800ac28:	6003      	str	r3, [r0, #0]
 800ac2a:	e787      	b.n	800ab3c <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac2c:	6822      	ldr	r2, [r4, #0]
 800ac2e:	6813      	ldr	r3, [r2, #0]
 800ac30:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800ac34:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac36:	6013      	str	r3, [r2, #0]
 800ac38:	e763      	b.n	800ab02 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ac3a:	695a      	ldr	r2, [r3, #20]
 800ac3c:	0612      	lsls	r2, r2, #24
 800ac3e:	d4c1      	bmi.n	800abc4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ac40:	695a      	ldr	r2, [r3, #20]
 800ac42:	0551      	lsls	r1, r2, #21
 800ac44:	d4a5      	bmi.n	800ab92 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac46:	f7ff fa39 	bl	800a0bc <HAL_GetTick>
 800ac4a:	1b40      	subs	r0, r0, r5
 800ac4c:	4286      	cmp	r6, r0
 800ac4e:	d301      	bcc.n	800ac54 <HAL_I2C_Mem_Write+0x174>
 800ac50:	2e00      	cmp	r6, #0
 800ac52:	d195      	bne.n	800ab80 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac54:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac56:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac58:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac5a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac5e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac62:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ac64:	4313      	orrs	r3, r2
 800ac66:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800ac68:	e7a1      	b.n	800abae <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac6a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac6c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac70:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac74:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac78:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac7a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac7e:	f043 0320 	orr.w	r3, r3, #32
 800ac82:	6423      	str	r3, [r4, #64]	; 0x40
 800ac84:	e73c      	b.n	800ab00 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac86:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac88:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800ac8e:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac90:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ac92:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ac96:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac9a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800ac9e:	e730      	b.n	800ab02 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aca0:	695a      	ldr	r2, [r3, #20]
 800aca2:	0752      	lsls	r2, r2, #29
 800aca4:	d4ef      	bmi.n	800ac86 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aca6:	695a      	ldr	r2, [r3, #20]
 800aca8:	0551      	lsls	r1, r2, #21
 800acaa:	f53f af72 	bmi.w	800ab92 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800acae:	f7ff fa05 	bl	800a0bc <HAL_GetTick>
 800acb2:	1b40      	subs	r0, r0, r5
 800acb4:	4286      	cmp	r6, r0
 800acb6:	d3cd      	bcc.n	800ac54 <HAL_I2C_Mem_Write+0x174>
 800acb8:	2e00      	cmp	r6, #0
 800acba:	d0cb      	beq.n	800ac54 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800acbc:	6823      	ldr	r3, [r4, #0]
 800acbe:	e796      	b.n	800abee <HAL_I2C_Mem_Write+0x10e>
 800acc0:	ffff0000 	.word	0xffff0000

0800acc4 <HAL_I2C_Mem_Read>:
{
 800acc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800acc8:	4604      	mov	r4, r0
 800acca:	b087      	sub	sp, #28
 800accc:	4699      	mov	r9, r3
 800acce:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800acd2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800acd4:	460f      	mov	r7, r1
 800acd6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800acd8:	f7ff f9f0 	bl	800a0bc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800acdc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ace0:	2b20      	cmp	r3, #32
 800ace2:	d004      	beq.n	800acee <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800ace4:	2702      	movs	r7, #2
}
 800ace6:	4638      	mov	r0, r7
 800ace8:	b007      	add	sp, #28
 800acea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acee:	4606      	mov	r6, r0
 800acf0:	e005      	b.n	800acfe <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800acf2:	f7ff f9e3 	bl	800a0bc <HAL_GetTick>
 800acf6:	1b80      	subs	r0, r0, r6
 800acf8:	2819      	cmp	r0, #25
 800acfa:	f200 80d2 	bhi.w	800aea2 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800acfe:	f8d4 c000 	ldr.w	ip, [r4]
 800ad02:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800ad06:	43c0      	mvns	r0, r0
 800ad08:	f010 0b02 	ands.w	fp, r0, #2
 800ad0c:	d0f1      	beq.n	800acf2 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800ad0e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ad12:	2b01      	cmp	r3, #1
 800ad14:	d0e6      	beq.n	800ace4 <HAL_I2C_Mem_Read+0x20>
 800ad16:	2301      	movs	r3, #1
 800ad18:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ad1c:	f8dc 3000 	ldr.w	r3, [ip]
 800ad20:	07d9      	lsls	r1, r3, #31
 800ad22:	d537      	bpl.n	800ad94 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ad24:	f8dc 0000 	ldr.w	r0, [ip]
 800ad28:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800ad2c:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800ad30:	9810      	ldr	r0, [sp, #64]	; 0x40
 800ad32:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800ad34:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ad36:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800ad3a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800ad3e:	2040      	movs	r0, #64	; 0x40
 800ad40:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ad44:	2000      	movs	r0, #0
 800ad46:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800ad48:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800ad4c:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800ad4e:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ad50:	4893      	ldr	r0, [pc, #588]	; (800afa0 <HAL_I2C_Mem_Read+0x2dc>)
 800ad52:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ad54:	4639      	mov	r1, r7
 800ad56:	464b      	mov	r3, r9
 800ad58:	4642      	mov	r2, r8
 800ad5a:	4620      	mov	r0, r4
 800ad5c:	f7ff fca2 	bl	800a6a4 <I2C_RequestMemoryRead>
 800ad60:	4607      	mov	r7, r0
 800ad62:	2800      	cmp	r0, #0
 800ad64:	f040 80ab 	bne.w	800aebe <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800ad68:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800ad6a:	b9d2      	cbnz	r2, 800ada2 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad6c:	6823      	ldr	r3, [r4, #0]
 800ad6e:	9002      	str	r0, [sp, #8]
 800ad70:	695a      	ldr	r2, [r3, #20]
 800ad72:	9202      	str	r2, [sp, #8]
 800ad74:	699a      	ldr	r2, [r3, #24]
 800ad76:	9202      	str	r2, [sp, #8]
 800ad78:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad7a:	681a      	ldr	r2, [r3, #0]
 800ad7c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad80:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad82:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ad84:	2220      	movs	r2, #32
 800ad86:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ad8a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad8e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800ad92:	e7a8      	b.n	800ace6 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800ad94:	f8dc 3000 	ldr.w	r3, [ip]
 800ad98:	f043 0301 	orr.w	r3, r3, #1
 800ad9c:	f8cc 3000 	str.w	r3, [ip]
 800ada0:	e7c0      	b.n	800ad24 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800ada2:	2a01      	cmp	r2, #1
 800ada4:	f000 812c 	beq.w	800b000 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800ada8:	2a02      	cmp	r2, #2
 800adaa:	f000 80bd 	beq.w	800af28 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adae:	6823      	ldr	r3, [r4, #0]
 800adb0:	9005      	str	r0, [sp, #20]
 800adb2:	6959      	ldr	r1, [r3, #20]
 800adb4:	9105      	str	r1, [sp, #20]
 800adb6:	6999      	ldr	r1, [r3, #24]
 800adb8:	9105      	str	r1, [sp, #20]
 800adba:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800adbc:	2a03      	cmp	r2, #3
 800adbe:	d849      	bhi.n	800ae54 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800adc0:	2a01      	cmp	r2, #1
 800adc2:	f000 80eb 	beq.w	800af9c <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800adc6:	2a02      	cmp	r2, #2
 800adc8:	f000 8089 	beq.w	800aede <HAL_I2C_Mem_Read+0x21a>
 800adcc:	1c69      	adds	r1, r5, #1
 800adce:	f040 80bb 	bne.w	800af48 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800add2:	695a      	ldr	r2, [r3, #20]
 800add4:	0752      	lsls	r2, r2, #29
 800add6:	d5fc      	bpl.n	800add2 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800add8:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adda:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800addc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ade0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ade2:	691b      	ldr	r3, [r3, #16]
 800ade4:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ade6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ade8:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800adea:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800adec:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800adee:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800adf0:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800adf2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800adf4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800adf6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800adf8:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800adfa:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800adfc:	6822      	ldr	r2, [r4, #0]
 800adfe:	f040 80af 	bne.w	800af60 <HAL_I2C_Mem_Read+0x29c>
 800ae02:	6953      	ldr	r3, [r2, #20]
 800ae04:	075b      	lsls	r3, r3, #29
 800ae06:	d5fc      	bpl.n	800ae02 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae08:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae0a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae0c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ae10:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae12:	6913      	ldr	r3, [r2, #16]
 800ae14:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ae16:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ae18:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ae1a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae1c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800ae1e:	3b01      	subs	r3, #1
 800ae20:	b29b      	uxth	r3, r3
 800ae22:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae24:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800ae26:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800ae28:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800ae2c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ae2e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae32:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800ae34:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ae36:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ae38:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ae3a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ae3c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800ae3e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ae40:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800ae42:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ae44:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ae46:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ae48:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ae4a:	2a00      	cmp	r2, #0
 800ae4c:	d099      	beq.n	800ad82 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800ae4e:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ae50:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800ae52:	d9b5      	bls.n	800adc0 <HAL_I2C_Mem_Read+0xfc>
 800ae54:	b95d      	cbnz	r5, 800ae6e <HAL_I2C_Mem_Read+0x1aa>
 800ae56:	e0c5      	b.n	800afe4 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ae58:	695a      	ldr	r2, [r3, #20]
 800ae5a:	06d0      	lsls	r0, r2, #27
 800ae5c:	f100 80b2 	bmi.w	800afc4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae60:	f7ff f92c 	bl	800a0bc <HAL_GetTick>
 800ae64:	1b80      	subs	r0, r0, r6
 800ae66:	4285      	cmp	r5, r0
 800ae68:	f0c0 8086 	bcc.w	800af78 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ae6c:	6823      	ldr	r3, [r4, #0]
 800ae6e:	695a      	ldr	r2, [r3, #20]
 800ae70:	0652      	lsls	r2, r2, #25
 800ae72:	d5f1      	bpl.n	800ae58 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae74:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ae76:	691b      	ldr	r3, [r3, #16]
 800ae78:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800ae7a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ae7c:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ae7e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ae80:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ae82:	3b01      	subs	r3, #1
 800ae84:	b29b      	uxth	r3, r3
 800ae86:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ae88:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ae8a:	3a01      	subs	r2, #1
 800ae8c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ae8e:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ae92:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ae94:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ae96:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ae9a:	d5d6      	bpl.n	800ae4a <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae9c:	6903      	ldr	r3, [r0, #16]
 800ae9e:	704b      	strb	r3, [r1, #1]
 800aea0:	e036      	b.n	800af10 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800aea2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aea4:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800aea8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800aeac:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800aeb0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800aeb2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800aeb6:	f043 0320 	orr.w	r3, r3, #32
 800aeba:	6423      	str	r3, [r4, #64]	; 0x40
 800aebc:	e712      	b.n	800ace4 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800aebe:	2701      	movs	r7, #1
}
 800aec0:	4638      	mov	r0, r7
 800aec2:	b007      	add	sp, #28
 800aec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aec8:	695a      	ldr	r2, [r3, #20]
 800aeca:	0750      	lsls	r0, r2, #29
 800aecc:	d40c      	bmi.n	800aee8 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aece:	f7ff f8f5 	bl	800a0bc <HAL_GetTick>
 800aed2:	1b80      	subs	r0, r0, r6
 800aed4:	4285      	cmp	r5, r0
 800aed6:	d34f      	bcc.n	800af78 <HAL_I2C_Mem_Read+0x2b4>
 800aed8:	2d00      	cmp	r5, #0
 800aeda:	d04d      	beq.n	800af78 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aedc:	6823      	ldr	r3, [r4, #0]
 800aede:	1c69      	adds	r1, r5, #1
 800aee0:	d1f2      	bne.n	800aec8 <HAL_I2C_Mem_Read+0x204>
 800aee2:	695a      	ldr	r2, [r3, #20]
 800aee4:	0752      	lsls	r2, r2, #29
 800aee6:	d5fc      	bpl.n	800aee2 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aee8:	681a      	ldr	r2, [r3, #0]
 800aeea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aeee:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aef0:	691a      	ldr	r2, [r3, #16]
 800aef2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aef4:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800aef6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aef8:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800aefa:	3b01      	subs	r3, #1
 800aefc:	b29b      	uxth	r3, r3
 800aefe:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800af00:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800af02:	3b01      	subs	r3, #1
 800af04:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af06:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800af08:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af0a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800af0c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af0e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800af10:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800af12:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800af14:	3301      	adds	r3, #1
 800af16:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800af18:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800af1a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800af1c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800af1e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800af20:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800af22:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800af24:	8563      	strh	r3, [r4, #42]	; 0x2a
 800af26:	e790      	b.n	800ae4a <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af28:	6823      	ldr	r3, [r4, #0]
 800af2a:	6819      	ldr	r1, [r3, #0]
 800af2c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800af30:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800af32:	6819      	ldr	r1, [r3, #0]
 800af34:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800af38:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af3a:	9004      	str	r0, [sp, #16]
 800af3c:	6959      	ldr	r1, [r3, #20]
 800af3e:	9104      	str	r1, [sp, #16]
 800af40:	6999      	ldr	r1, [r3, #24]
 800af42:	9104      	str	r1, [sp, #16]
 800af44:	9904      	ldr	r1, [sp, #16]
 800af46:	e739      	b.n	800adbc <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800af48:	695a      	ldr	r2, [r3, #20]
 800af4a:	0750      	lsls	r0, r2, #29
 800af4c:	f53f af44 	bmi.w	800add8 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af50:	f7ff f8b4 	bl	800a0bc <HAL_GetTick>
 800af54:	1b80      	subs	r0, r0, r6
 800af56:	4285      	cmp	r5, r0
 800af58:	d30e      	bcc.n	800af78 <HAL_I2C_Mem_Read+0x2b4>
 800af5a:	b16d      	cbz	r5, 800af78 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800af5c:	6823      	ldr	r3, [r4, #0]
 800af5e:	e735      	b.n	800adcc <HAL_I2C_Mem_Read+0x108>
 800af60:	6953      	ldr	r3, [r2, #20]
 800af62:	0758      	lsls	r0, r3, #29
 800af64:	f53f af50 	bmi.w	800ae08 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af68:	f7ff f8a8 	bl	800a0bc <HAL_GetTick>
 800af6c:	1b80      	subs	r0, r0, r6
 800af6e:	4285      	cmp	r5, r0
 800af70:	d302      	bcc.n	800af78 <HAL_I2C_Mem_Read+0x2b4>
 800af72:	2d00      	cmp	r5, #0
 800af74:	f47f af41 	bne.w	800adfa <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800af78:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800af7a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800af7c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800af7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800af82:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af86:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800af88:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800af8c:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af8e:	f043 0320 	orr.w	r3, r3, #32
}
 800af92:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af94:	6423      	str	r3, [r4, #64]	; 0x40
}
 800af96:	b007      	add	sp, #28
 800af98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af9c:	b95d      	cbnz	r5, 800afb6 <HAL_I2C_Mem_Read+0x2f2>
 800af9e:	e02b      	b.n	800aff8 <HAL_I2C_Mem_Read+0x334>
 800afa0:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800afa4:	695a      	ldr	r2, [r3, #20]
 800afa6:	06d2      	lsls	r2, r2, #27
 800afa8:	d40c      	bmi.n	800afc4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800afaa:	f7ff f887 	bl	800a0bc <HAL_GetTick>
 800afae:	1b80      	subs	r0, r0, r6
 800afb0:	4285      	cmp	r5, r0
 800afb2:	d3e1      	bcc.n	800af78 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800afb4:	6823      	ldr	r3, [r4, #0]
 800afb6:	695a      	ldr	r2, [r3, #20]
 800afb8:	0651      	lsls	r1, r2, #25
 800afba:	d5f3      	bpl.n	800afa4 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afbc:	691a      	ldr	r2, [r3, #16]
 800afbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800afc0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800afc2:	e7a5      	b.n	800af10 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800afc4:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800afc6:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800afca:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800afcc:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800afce:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800afd0:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800afd4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800afd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800afda:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800afdc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800afe0:	2701      	movs	r7, #1
 800afe2:	e680      	b.n	800ace6 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800afe4:	695a      	ldr	r2, [r3, #20]
 800afe6:	0652      	lsls	r2, r2, #25
 800afe8:	f53f af44 	bmi.w	800ae74 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800afec:	695a      	ldr	r2, [r3, #20]
 800afee:	06d1      	lsls	r1, r2, #27
 800aff0:	d4e8      	bmi.n	800afc4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aff2:	f7ff f863 	bl	800a0bc <HAL_GetTick>
 800aff6:	e7bf      	b.n	800af78 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aff8:	695a      	ldr	r2, [r3, #20]
 800affa:	0650      	lsls	r0, r2, #25
 800affc:	d5f6      	bpl.n	800afec <HAL_I2C_Mem_Read+0x328>
 800affe:	e7dd      	b.n	800afbc <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b000:	6823      	ldr	r3, [r4, #0]
 800b002:	6819      	ldr	r1, [r3, #0]
 800b004:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b008:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b00a:	9003      	str	r0, [sp, #12]
 800b00c:	6959      	ldr	r1, [r3, #20]
 800b00e:	9103      	str	r1, [sp, #12]
 800b010:	6999      	ldr	r1, [r3, #24]
 800b012:	9103      	str	r1, [sp, #12]
 800b014:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b016:	6819      	ldr	r1, [r3, #0]
 800b018:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b01c:	6019      	str	r1, [r3, #0]
 800b01e:	e6cd      	b.n	800adbc <HAL_I2C_Mem_Read+0xf8>

0800b020 <HAL_I2C_MasterTxCpltCallback>:
 800b020:	4770      	bx	lr
 800b022:	bf00      	nop

0800b024 <HAL_I2C_MasterRxCpltCallback>:
 800b024:	4770      	bx	lr
 800b026:	bf00      	nop

0800b028 <HAL_I2C_SlaveTxCpltCallback>:
 800b028:	4770      	bx	lr
 800b02a:	bf00      	nop

0800b02c <HAL_I2C_SlaveRxCpltCallback>:
 800b02c:	4770      	bx	lr
 800b02e:	bf00      	nop

0800b030 <HAL_I2C_AddrCallback>:
}
 800b030:	4770      	bx	lr
 800b032:	bf00      	nop

0800b034 <HAL_I2C_ListenCpltCallback>:
 800b034:	4770      	bx	lr
 800b036:	bf00      	nop

0800b038 <HAL_I2C_MemTxCpltCallback>:
 800b038:	4770      	bx	lr
 800b03a:	bf00      	nop

0800b03c <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b03c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800b040:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800b042:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800b044:	b959      	cbnz	r1, 800b05e <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b046:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b048:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b04a:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b04c:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b04e:	d00d      	beq.n	800b06c <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800b050:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800b054:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800b056:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b058:	3201      	adds	r2, #1
 800b05a:	6502      	str	r2, [r0, #80]	; 0x50
 800b05c:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800b05e:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b060:	2901      	cmp	r1, #1
 800b062:	d009      	beq.n	800b078 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800b064:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b066:	2902      	cmp	r1, #2
 800b068:	d00e      	beq.n	800b088 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800b06a:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b06c:	b2d2      	uxtb	r2, r2
 800b06e:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800b070:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b072:	3202      	adds	r2, #2
 800b074:	6502      	str	r2, [r0, #80]	; 0x50
 800b076:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b078:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800b07a:	6801      	ldr	r1, [r0, #0]
 800b07c:	b2d2      	uxtb	r2, r2
 800b07e:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800b080:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b082:	3201      	adds	r2, #1
 800b084:	6502      	str	r2, [r0, #80]	; 0x50
 800b086:	4770      	bx	lr
 800b088:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800b08a:	2a22      	cmp	r2, #34	; 0x22
 800b08c:	d01f      	beq.n	800b0ce <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b08e:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b090:	b289      	uxth	r1, r1
 800b092:	b9c1      	cbnz	r1, 800b0c6 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b094:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b096:	b289      	uxth	r1, r1
 800b098:	2900      	cmp	r1, #0
 800b09a:	d1e6      	bne.n	800b06a <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800b09c:	2a21      	cmp	r2, #33	; 0x21
 800b09e:	d1e4      	bne.n	800b06a <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b0a0:	6802      	ldr	r2, [r0, #0]
{
 800b0a2:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b0a4:	6854      	ldr	r4, [r2, #4]
 800b0a6:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800b0aa:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b0ac:	6814      	ldr	r4, [r2, #0]
 800b0ae:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800b0b2:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800b0b4:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b0b6:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800b0b8:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0bc:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800b0c0:	f7ff ffba 	bl	800b038 <HAL_I2C_MemTxCpltCallback>
}
 800b0c4:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b0c6:	2a21      	cmp	r2, #33	; 0x21
 800b0c8:	d00a      	beq.n	800b0e0 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b0ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800b0cc:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800b0ce:	6801      	ldr	r1, [r0, #0]
 800b0d0:	680a      	ldr	r2, [r1, #0]
 800b0d2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b0d6:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800b0d8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b0da:	3201      	adds	r2, #1
 800b0dc:	6502      	str	r2, [r0, #80]	; 0x50
 800b0de:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b0e0:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800b0e2:	6802      	ldr	r2, [r0, #0]
 800b0e4:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b0e8:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800b0ea:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b0ec:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800b0ee:	3a01      	subs	r2, #1
 800b0f0:	b292      	uxth	r2, r2
 800b0f2:	855a      	strh	r2, [r3, #42]	; 0x2a
 800b0f4:	4770      	bx	lr
 800b0f6:	bf00      	nop

0800b0f8 <HAL_I2C_MemRxCpltCallback>:
 800b0f8:	4770      	bx	lr
 800b0fa:	bf00      	nop

0800b0fc <HAL_I2C_ErrorCallback>:
 800b0fc:	4770      	bx	lr
 800b0fe:	bf00      	nop

0800b100 <HAL_I2C_AbortCpltCallback>:
 800b100:	4770      	bx	lr
 800b102:	bf00      	nop

0800b104 <I2C_DMAAbort>:
{
 800b104:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b106:	4b3a      	ldr	r3, [pc, #232]	; (800b1f0 <I2C_DMAAbort+0xec>)
 800b108:	4a3a      	ldr	r2, [pc, #232]	; (800b1f4 <I2C_DMAAbort+0xf0>)
 800b10a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800b10c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800b10e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b110:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800b112:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b114:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800b118:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b11a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b11c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b120:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b122:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800b126:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b12a:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b12c:	9301      	str	r3, [sp, #4]
 800b12e:	e005      	b.n	800b13c <I2C_DMAAbort+0x38>
    count--;
 800b130:	9b01      	ldr	r3, [sp, #4]
 800b132:	3b01      	subs	r3, #1
 800b134:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b136:	6813      	ldr	r3, [r2, #0]
 800b138:	059b      	lsls	r3, r3, #22
 800b13a:	d506      	bpl.n	800b14a <I2C_DMAAbort+0x46>
    if (count == 0U)
 800b13c:	9b01      	ldr	r3, [sp, #4]
 800b13e:	2b00      	cmp	r3, #0
 800b140:	d1f6      	bne.n	800b130 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800b142:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b144:	f043 0320 	orr.w	r3, r3, #32
 800b148:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800b14a:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800b14c:	b34c      	cbz	r4, 800b1a2 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800b14e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800b150:	2500      	movs	r5, #0
 800b152:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800b154:	b1f3      	cbz	r3, 800b194 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b156:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b158:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b15a:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800b15e:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800b160:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b162:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800b164:	2400      	movs	r4, #0
 800b166:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800b168:	6813      	ldr	r3, [r2, #0]
 800b16a:	f023 0301 	bic.w	r3, r3, #1
 800b16e:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b170:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b174:	2b60      	cmp	r3, #96	; 0x60
 800b176:	d02a      	beq.n	800b1ce <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b178:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800b17c:	2928      	cmp	r1, #40	; 0x28
 800b17e:	d019      	beq.n	800b1b4 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800b180:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b182:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b184:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b188:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800b18c:	f7ff ffb6 	bl	800b0fc <HAL_I2C_ErrorCallback>
}
 800b190:	b002      	add	sp, #8
 800b192:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b194:	6815      	ldr	r5, [r2, #0]
 800b196:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b19a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b19c:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b19e:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800b1a0:	e7e2      	b.n	800b168 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800b1a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800b1a4:	b1f3      	cbz	r3, 800b1e4 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1a6:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b1a8:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1aa:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b1ae:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b1b0:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b1b2:	e7d7      	b.n	800b164 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800b1b4:	6813      	ldr	r3, [r2, #0]
 800b1b6:	f043 0301 	orr.w	r3, r3, #1
 800b1ba:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1bc:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b1be:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1c0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b1c4:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b1c6:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b1c8:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800b1cc:	e7de      	b.n	800b18c <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b1ce:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800b1d0:	2220      	movs	r2, #32
 800b1d2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b1d6:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b1da:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800b1dc:	f7ff ff90 	bl	800b100 <HAL_I2C_AbortCpltCallback>
}
 800b1e0:	b002      	add	sp, #8
 800b1e2:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1e4:	6814      	ldr	r4, [r2, #0]
 800b1e6:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800b1ea:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800b1ec:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b1ee:	e7bb      	b.n	800b168 <I2C_DMAAbort+0x64>
 800b1f0:	20000078 	.word	0x20000078
 800b1f4:	14f8b589 	.word	0x14f8b589

0800b1f8 <I2C_ITError>:
{
 800b1f8:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1fa:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800b1fe:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b202:	2b10      	cmp	r3, #16
{
 800b204:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b206:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b208:	d039      	beq.n	800b27e <I2C_ITError+0x86>
 800b20a:	b2d9      	uxtb	r1, r3
 800b20c:	2940      	cmp	r1, #64	; 0x40
 800b20e:	d036      	beq.n	800b27e <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b210:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800b214:	2928      	cmp	r1, #40	; 0x28
 800b216:	d03d      	beq.n	800b294 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b218:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b21a:	6859      	ldr	r1, [r3, #4]
 800b21c:	0508      	lsls	r0, r1, #20
 800b21e:	d407      	bmi.n	800b230 <I2C_ITError+0x38>
 800b220:	2a60      	cmp	r2, #96	; 0x60
 800b222:	d005      	beq.n	800b230 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800b224:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b226:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b228:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b22c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800b230:	2200      	movs	r2, #0
 800b232:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b234:	685a      	ldr	r2, [r3, #4]
 800b236:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b23a:	d134      	bne.n	800b2a6 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b23c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b240:	2960      	cmp	r1, #96	; 0x60
 800b242:	d075      	beq.n	800b330 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b244:	695a      	ldr	r2, [r3, #20]
 800b246:	0650      	lsls	r0, r2, #25
 800b248:	d505      	bpl.n	800b256 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b24a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b24c:	691b      	ldr	r3, [r3, #16]
 800b24e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b250:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b252:	3301      	adds	r3, #1
 800b254:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800b256:	4620      	mov	r0, r4
 800b258:	f7ff ff50 	bl	800b0fc <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800b25c:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800b25e:	0719      	lsls	r1, r3, #28
 800b260:	d004      	beq.n	800b26c <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b262:	6822      	ldr	r2, [r4, #0]
 800b264:	6853      	ldr	r3, [r2, #4]
 800b266:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b26a:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800b26c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b270:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b272:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800b274:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b276:	d501      	bpl.n	800b27c <I2C_ITError+0x84>
 800b278:	2b28      	cmp	r3, #40	; 0x28
 800b27a:	d02f      	beq.n	800b2dc <I2C_ITError+0xe4>
}
 800b27c:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b27e:	2a22      	cmp	r2, #34	; 0x22
 800b280:	d1c6      	bne.n	800b210 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b282:	6823      	ldr	r3, [r4, #0]
 800b284:	681a      	ldr	r2, [r3, #0]
 800b286:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b28a:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b28c:	685a      	ldr	r2, [r3, #4]
 800b28e:	0512      	lsls	r2, r2, #20
 800b290:	d5c8      	bpl.n	800b224 <I2C_ITError+0x2c>
 800b292:	e7cd      	b.n	800b230 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b294:	2300      	movs	r3, #0
 800b296:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b298:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800b29a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b29e:	685a      	ldr	r2, [r3, #4]
 800b2a0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b2a4:	d0ca      	beq.n	800b23c <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b2a6:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b2a8:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b2aa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b2ae:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b2b0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b2b4:	2b01      	cmp	r3, #1
 800b2b6:	d01e      	beq.n	800b2f6 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b2b8:	4b28      	ldr	r3, [pc, #160]	; (800b35c <I2C_ITError+0x164>)
 800b2ba:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b2bc:	f7fe ff88 	bl	800a1d0 <HAL_DMA_Abort_IT>
 800b2c0:	2800      	cmp	r0, #0
 800b2c2:	d0cb      	beq.n	800b25c <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800b2c4:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b2c6:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800b2c8:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b2ca:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b2cc:	f023 0301 	bic.w	r3, r3, #1
 800b2d0:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b2d2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b2d6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b2d8:	4798      	blx	r3
 800b2da:	e7bf      	b.n	800b25c <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b2dc:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800b2de:	4920      	ldr	r1, [pc, #128]	; (800b360 <I2C_ITError+0x168>)
 800b2e0:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800b2e2:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800b2e4:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800b2e6:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800b2e8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b2ec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800b2f0:	f7ff fea0 	bl	800b034 <HAL_I2C_ListenCpltCallback>
}
 800b2f4:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b2f6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b2f8:	4b18      	ldr	r3, [pc, #96]	; (800b35c <I2C_ITError+0x164>)
 800b2fa:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b2fc:	f7fe ff68 	bl	800a1d0 <HAL_DMA_Abort_IT>
 800b300:	2800      	cmp	r0, #0
 800b302:	d0ab      	beq.n	800b25c <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b304:	6823      	ldr	r3, [r4, #0]
 800b306:	695a      	ldr	r2, [r3, #20]
 800b308:	0651      	lsls	r1, r2, #25
 800b30a:	d506      	bpl.n	800b31a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b30c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b30e:	691b      	ldr	r3, [r3, #16]
 800b310:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800b312:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b314:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b316:	3201      	adds	r2, #1
 800b318:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b31a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b31c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800b31e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b322:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b324:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b326:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b32a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b32c:	4798      	blx	r3
 800b32e:	e795      	b.n	800b25c <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800b330:	2120      	movs	r1, #32
 800b332:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b336:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b338:	695a      	ldr	r2, [r3, #20]
 800b33a:	0652      	lsls	r2, r2, #25
 800b33c:	d506      	bpl.n	800b34c <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b33e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b340:	691b      	ldr	r3, [r3, #16]
 800b342:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b344:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b346:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b348:	3201      	adds	r2, #1
 800b34a:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b34c:	681a      	ldr	r2, [r3, #0]
 800b34e:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b352:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b354:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b356:	f7ff fed3 	bl	800b100 <HAL_I2C_AbortCpltCallback>
 800b35a:	e77f      	b.n	800b25c <I2C_ITError+0x64>
 800b35c:	0800b105 	.word	0x0800b105
 800b360:	ffff0000 	.word	0xffff0000

0800b364 <HAL_I2C_EV_IRQHandler>:
{
 800b364:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b366:	6803      	ldr	r3, [r0, #0]
{
 800b368:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b36a:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b36c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b36e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b372:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b376:	2910      	cmp	r1, #16
{
 800b378:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b37a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b37c:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b380:	d022      	beq.n	800b3c8 <HAL_I2C_EV_IRQHandler+0x64>
 800b382:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b386:	d01f      	beq.n	800b3c8 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b388:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b38a:	2900      	cmp	r1, #0
 800b38c:	f000 8094 	beq.w	800b4b8 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b390:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b392:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b394:	f011 0602 	ands.w	r6, r1, #2
 800b398:	d059      	beq.n	800b44e <HAL_I2C_EV_IRQHandler+0xea>
 800b39a:	0586      	lsls	r6, r0, #22
 800b39c:	d559      	bpl.n	800b452 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b39e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b3a0:	b102      	cbz	r2, 800b3a4 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b3a2:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b3a4:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b3a8:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b3ac:	2a28      	cmp	r2, #40	; 0x28
 800b3ae:	f000 821e 	beq.w	800b7ee <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b3b2:	2200      	movs	r2, #0
 800b3b4:	920c      	str	r2, [sp, #48]	; 0x30
 800b3b6:	6959      	ldr	r1, [r3, #20]
 800b3b8:	910c      	str	r1, [sp, #48]	; 0x30
 800b3ba:	699b      	ldr	r3, [r3, #24]
 800b3bc:	930c      	str	r3, [sp, #48]	; 0x30
 800b3be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b3c0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b3c4:	b00e      	add	sp, #56	; 0x38
 800b3c6:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b3c8:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b3ca:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b3cc:	f011 0f01 	tst.w	r1, #1
 800b3d0:	d11a      	bne.n	800b408 <HAL_I2C_EV_IRQHandler+0xa4>
 800b3d2:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b3d6:	d0f5      	beq.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b3d8:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b3dc:	d0f2      	beq.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3de:	070d      	lsls	r5, r1, #28
 800b3e0:	d56d      	bpl.n	800b4be <HAL_I2C_EV_IRQHandler+0x15a>
 800b3e2:	0585      	lsls	r5, r0, #22
 800b3e4:	f140 8083 	bpl.w	800b4ee <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b3e8:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b3ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b3ec:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b3ee:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b3f0:	2900      	cmp	r1, #0
 800b3f2:	f000 81e3 	beq.w	800b7bc <HAL_I2C_EV_IRQHandler+0x458>
 800b3f6:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b3f8:	2a00      	cmp	r2, #0
 800b3fa:	f000 81df 	beq.w	800b7bc <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b3fe:	685a      	ldr	r2, [r3, #4]
 800b400:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b404:	605a      	str	r2, [r3, #4]
 800b406:	e7dd      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b408:	0585      	lsls	r5, r0, #22
 800b40a:	d56e      	bpl.n	800b4ea <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b40c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b40e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b412:	f000 81e9 	beq.w	800b7e8 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b416:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b418:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b41c:	bf04      	itt	eq
 800b41e:	2208      	moveq	r2, #8
 800b420:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b422:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b426:	2a40      	cmp	r2, #64	; 0x40
 800b428:	f000 81d7 	beq.w	800b7da <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b42c:	6922      	ldr	r2, [r4, #16]
 800b42e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b432:	f000 81b2 	beq.w	800b79a <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b436:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b438:	2a00      	cmp	r2, #0
 800b43a:	f040 81ef 	bne.w	800b81c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b43e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b440:	11d2      	asrs	r2, r2, #7
 800b442:	f002 0206 	and.w	r2, r2, #6
 800b446:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b44a:	611a      	str	r2, [r3, #16]
 800b44c:	e7ba      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b44e:	06cd      	lsls	r5, r1, #27
 800b450:	d47c      	bmi.n	800b54c <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b452:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b456:	2a21      	cmp	r2, #33	; 0x21
 800b458:	f000 80f5 	beq.w	800b646 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b45c:	064e      	lsls	r6, r1, #25
 800b45e:	f140 8132 	bpl.w	800b6c6 <HAL_I2C_EV_IRQHandler+0x362>
 800b462:	0545      	lsls	r5, r0, #21
 800b464:	f140 812f 	bpl.w	800b6c6 <HAL_I2C_EV_IRQHandler+0x362>
 800b468:	0749      	lsls	r1, r1, #29
 800b46a:	f100 812f 	bmi.w	800b6cc <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b46e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b472:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b474:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b476:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b478:	2a00      	cmp	r2, #0
 800b47a:	d0a3      	beq.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b47c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b47e:	691b      	ldr	r3, [r3, #16]
 800b480:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b482:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b484:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b486:	3b01      	subs	r3, #1
 800b488:	b29b      	uxth	r3, r3
 800b48a:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b48c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b48e:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b490:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b492:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b494:	2b00      	cmp	r3, #0
 800b496:	d195      	bne.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b498:	292a      	cmp	r1, #42	; 0x2a
 800b49a:	d193      	bne.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b49c:	6822      	ldr	r2, [r4, #0]
 800b49e:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b4a0:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b4a2:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b4a4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b4a8:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b4aa:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b4ac:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b4ae:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b4b2:	f7ff fdbb 	bl	800b02c <HAL_I2C_SlaveRxCpltCallback>
 800b4b6:	e785      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b4b8:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b4ba:	6959      	ldr	r1, [r3, #20]
 800b4bc:	e76a      	b.n	800b394 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b4be:	078d      	lsls	r5, r1, #30
 800b4c0:	d515      	bpl.n	800b4ee <HAL_I2C_EV_IRQHandler+0x18a>
 800b4c2:	0585      	lsls	r5, r0, #22
 800b4c4:	d513      	bpl.n	800b4ee <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b4c6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b4ca:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b4cc:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b4ce:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b4d2:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b4d4:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b4d6:	f000 81b3 	beq.w	800b840 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4da:	2200      	movs	r2, #0
 800b4dc:	920a      	str	r2, [sp, #40]	; 0x28
 800b4de:	695a      	ldr	r2, [r3, #20]
 800b4e0:	920a      	str	r2, [sp, #40]	; 0x28
 800b4e2:	699b      	ldr	r3, [r3, #24]
 800b4e4:	930a      	str	r3, [sp, #40]	; 0x28
 800b4e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b4e8:	e76c      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b4ea:	070d      	lsls	r5, r1, #28
 800b4ec:	d5e7      	bpl.n	800b4be <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b4ee:	0776      	lsls	r6, r6, #29
 800b4f0:	f140 80f5 	bpl.w	800b6de <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b4f4:	685d      	ldr	r5, [r3, #4]
 800b4f6:	052d      	lsls	r5, r5, #20
 800b4f8:	f53f af64 	bmi.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b4fc:	060e      	lsls	r6, r1, #24
 800b4fe:	f140 8115 	bpl.w	800b72c <HAL_I2C_EV_IRQHandler+0x3c8>
 800b502:	0545      	lsls	r5, r0, #21
 800b504:	f140 8112 	bpl.w	800b72c <HAL_I2C_EV_IRQHandler+0x3c8>
 800b508:	074e      	lsls	r6, r1, #29
 800b50a:	f100 8112 	bmi.w	800b732 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b50e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b512:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b514:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b518:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b51a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b51c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b51e:	2800      	cmp	r0, #0
 800b520:	f040 8235 	bne.w	800b98e <HAL_I2C_EV_IRQHandler+0x62a>
 800b524:	2a21      	cmp	r2, #33	; 0x21
 800b526:	f000 8347 	beq.w	800bbb8 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b52a:	2940      	cmp	r1, #64	; 0x40
 800b52c:	f47f af4a 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b530:	2a22      	cmp	r2, #34	; 0x22
 800b532:	f47f af47 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b536:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b538:	b292      	uxth	r2, r2
 800b53a:	2a00      	cmp	r2, #0
 800b53c:	f000 8268 	beq.w	800ba10 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b540:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b544:	2a40      	cmp	r2, #64	; 0x40
 800b546:	f040 80b4 	bne.w	800b6b2 <HAL_I2C_EV_IRQHandler+0x34e>
 800b54a:	e0fc      	b.n	800b746 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b54c:	0585      	lsls	r5, r0, #22
 800b54e:	d580      	bpl.n	800b452 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b550:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b554:	685a      	ldr	r2, [r3, #4]
 800b556:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b55a:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b55c:	960d      	str	r6, [sp, #52]	; 0x34
 800b55e:	695a      	ldr	r2, [r3, #20]
 800b560:	920d      	str	r2, [sp, #52]	; 0x34
 800b562:	681a      	ldr	r2, [r3, #0]
 800b564:	f042 0201 	orr.w	r2, r2, #1
 800b568:	601a      	str	r2, [r3, #0]
 800b56a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b56c:	681a      	ldr	r2, [r3, #0]
 800b56e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b572:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b574:	685a      	ldr	r2, [r3, #4]
 800b576:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b578:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b57a:	d521      	bpl.n	800b5c0 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b57c:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b580:	2a22      	cmp	r2, #34	; 0x22
 800b582:	f000 817a 	beq.w	800b87a <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b586:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b588:	6802      	ldr	r2, [r0, #0]
 800b58a:	6852      	ldr	r2, [r2, #4]
 800b58c:	b292      	uxth	r2, r2
 800b58e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b590:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b592:	b292      	uxth	r2, r2
 800b594:	b11a      	cbz	r2, 800b59e <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b596:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b598:	f042 0204 	orr.w	r2, r2, #4
 800b59c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b59e:	685a      	ldr	r2, [r3, #4]
 800b5a0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b5a4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b5a6:	f7fe fe25 	bl	800a1f4 <HAL_DMA_GetState>
 800b5aa:	2801      	cmp	r0, #1
 800b5ac:	d008      	beq.n	800b5c0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b5ae:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b5b0:	4b99      	ldr	r3, [pc, #612]	; (800b818 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b5b2:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b5b4:	f7fe fe0c 	bl	800a1d0 <HAL_DMA_Abort_IT>
 800b5b8:	b110      	cbz	r0, 800b5c0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b5ba:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b5bc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b5be:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b5c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b5c2:	b29b      	uxth	r3, r3
 800b5c4:	b313      	cbz	r3, 800b60c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b5c6:	6823      	ldr	r3, [r4, #0]
 800b5c8:	695a      	ldr	r2, [r3, #20]
 800b5ca:	0752      	lsls	r2, r2, #29
 800b5cc:	d50a      	bpl.n	800b5e4 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5ce:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b5d0:	691b      	ldr	r3, [r3, #16]
 800b5d2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b5d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b5d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b5d8:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b5da:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b5dc:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b5de:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b5e0:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b5e2:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b5e4:	695a      	ldr	r2, [r3, #20]
 800b5e6:	0656      	lsls	r6, r2, #25
 800b5e8:	d509      	bpl.n	800b5fe <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b5ec:	691b      	ldr	r3, [r3, #16]
 800b5ee:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b5f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b5f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b5f4:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b5f6:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b5f8:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b5fa:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b5fc:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b5fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b600:	b29b      	uxth	r3, r3
 800b602:	b11b      	cbz	r3, 800b60c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b604:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b606:	f043 0304 	orr.w	r3, r3, #4
 800b60a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b60c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b60e:	2b00      	cmp	r3, #0
 800b610:	f040 80dd 	bne.w	800b7ce <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b614:	2d2a      	cmp	r5, #42	; 0x2a
 800b616:	f000 8151 	beq.w	800b8bc <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b61a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b61e:	2b28      	cmp	r3, #40	; 0x28
 800b620:	f000 8154 	beq.w	800b8cc <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b624:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b626:	2b22      	cmp	r3, #34	; 0x22
 800b628:	d002      	beq.n	800b630 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b62a:	2d22      	cmp	r5, #34	; 0x22
 800b62c:	f47f aeca 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b630:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b632:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b634:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b636:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b638:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b63c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b640:	f7ff fcf4 	bl	800b02c <HAL_I2C_SlaveRxCpltCallback>
 800b644:	e6be      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b646:	060d      	lsls	r5, r1, #24
 800b648:	d528      	bpl.n	800b69c <HAL_I2C_EV_IRQHandler+0x338>
 800b64a:	0546      	lsls	r6, r0, #21
 800b64c:	d526      	bpl.n	800b69c <HAL_I2C_EV_IRQHandler+0x338>
 800b64e:	074d      	lsls	r5, r1, #29
 800b650:	d427      	bmi.n	800b6a2 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b652:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b656:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b658:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b65a:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b65c:	2900      	cmp	r1, #0
 800b65e:	f43f aeb1 	beq.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b662:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b664:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b668:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b66a:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b66c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b66e:	3901      	subs	r1, #1
 800b670:	b289      	uxth	r1, r1
 800b672:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b674:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b676:	b289      	uxth	r1, r1
 800b678:	2900      	cmp	r1, #0
 800b67a:	f47f aea3 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b67e:	2829      	cmp	r0, #41	; 0x29
 800b680:	f47f aea0 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b684:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b686:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b688:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b68c:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b68e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b690:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b692:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b696:	f7ff fcc7 	bl	800b028 <HAL_I2C_SlaveTxCpltCallback>
 800b69a:	e693      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b69c:	0749      	lsls	r1, r1, #29
 800b69e:	f57f ae91 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b6a2:	0582      	lsls	r2, r0, #22
 800b6a4:	f57f ae8e 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b6a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b6aa:	b292      	uxth	r2, r2
 800b6ac:	2a00      	cmp	r2, #0
 800b6ae:	f43f ae89 	beq.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b6b2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6b4:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b6b8:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b6ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b6bc:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b6be:	3b01      	subs	r3, #1
 800b6c0:	b29b      	uxth	r3, r3
 800b6c2:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b6c4:	e67e      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b6c6:	074a      	lsls	r2, r1, #29
 800b6c8:	f57f ae7c 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b6cc:	0586      	lsls	r6, r0, #22
 800b6ce:	f57f ae79 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b6d2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b6d4:	b292      	uxth	r2, r2
 800b6d6:	2a00      	cmp	r2, #0
 800b6d8:	f43f ae74 	beq.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b6dc:	e01b      	b.n	800b716 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b6de:	685a      	ldr	r2, [r3, #4]
 800b6e0:	0512      	lsls	r2, r2, #20
 800b6e2:	f53f ae6f 	bmi.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b6e6:	064e      	lsls	r6, r1, #25
 800b6e8:	d433      	bmi.n	800b752 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b6ea:	0749      	lsls	r1, r1, #29
 800b6ec:	f57f ae6a 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b6f0:	0582      	lsls	r2, r0, #22
 800b6f2:	f57f ae67 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b6f6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b6f8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b6fa:	b292      	uxth	r2, r2
 800b6fc:	2a04      	cmp	r2, #4
 800b6fe:	f000 8113 	beq.w	800b928 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b702:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b704:	b292      	uxth	r2, r2
 800b706:	2a03      	cmp	r2, #3
 800b708:	f000 8153 	beq.w	800b9b2 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b70c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b70e:	b292      	uxth	r2, r2
 800b710:	2a02      	cmp	r2, #2
 800b712:	f000 8182 	beq.w	800ba1a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b716:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b718:	691b      	ldr	r3, [r3, #16]
 800b71a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b71c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b71e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b720:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b722:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b724:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b726:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b728:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b72a:	e64b      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b72c:	074d      	lsls	r5, r1, #29
 800b72e:	f57f ae49 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b732:	0581      	lsls	r1, r0, #22
 800b734:	f57f ae46 	bpl.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b738:	2a21      	cmp	r2, #33	; 0x21
 800b73a:	f000 80fd 	beq.w	800b938 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b73e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b742:	f47f ae3f 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b746:	4620      	mov	r0, r4
}
 800b748:	b00e      	add	sp, #56	; 0x38
 800b74a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b74e:	f7ff bc75 	b.w	800b03c <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b752:	0545      	lsls	r5, r0, #21
 800b754:	d5c9      	bpl.n	800b6ea <HAL_I2C_EV_IRQHandler+0x386>
 800b756:	f011 0104 	ands.w	r1, r1, #4
 800b75a:	d1c9      	bne.n	800b6f0 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b75c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b760:	2a22      	cmp	r2, #34	; 0x22
 800b762:	f47f ae2f 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b766:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b768:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b76a:	2a03      	cmp	r2, #3
 800b76c:	f240 81ec 	bls.w	800bb48 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b770:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b772:	691b      	ldr	r3, [r3, #16]
 800b774:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b776:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b778:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b77a:	3b01      	subs	r3, #1
 800b77c:	b29b      	uxth	r3, r3
 800b77e:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b780:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b782:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b784:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b786:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b788:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b78a:	f47f ae1b 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b78e:	6822      	ldr	r2, [r4, #0]
 800b790:	6853      	ldr	r3, [r2, #4]
 800b792:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b796:	6053      	str	r3, [r2, #4]
 800b798:	e614      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b79a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b79e:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b7a0:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b7a2:	bf16      	itet	ne
 800b7a4:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b7a8:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b7ac:	b2d2      	uxtbne	r2, r2
 800b7ae:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b7b0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b7b2:	b11a      	cbz	r2, 800b7bc <HAL_I2C_EV_IRQHandler+0x458>
 800b7b4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b7b6:	2a00      	cmp	r2, #0
 800b7b8:	f47f ae21 	bne.w	800b3fe <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b7bc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b7be:	2a00      	cmp	r2, #0
 800b7c0:	f43f ae00 	beq.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b7c4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b7c6:	2a00      	cmp	r2, #0
 800b7c8:	f47f ae19 	bne.w	800b3fe <HAL_I2C_EV_IRQHandler+0x9a>
 800b7cc:	e5fa      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b7ce:	4620      	mov	r0, r4
}
 800b7d0:	b00e      	add	sp, #56	; 0x38
 800b7d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b7d6:	f7ff bd0f 	b.w	800b1f8 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b7da:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b7dc:	bb52      	cbnz	r2, 800b834 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b7de:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b7e0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b7e4:	611a      	str	r2, [r3, #16]
 800b7e6:	e5ed      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b7e8:	2201      	movs	r2, #1
 800b7ea:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b7ec:	e619      	b.n	800b422 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b7ee:	685a      	ldr	r2, [r3, #4]
 800b7f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b7f4:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b7f6:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b7f8:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b7fc:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b800:	bf54      	ite	pl
 800b802:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b804:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b806:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b80a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b80e:	4620      	mov	r0, r4
 800b810:	f7ff fc0e 	bl	800b030 <HAL_I2C_AddrCallback>
 800b814:	e5d6      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800b816:	bf00      	nop
 800b818:	0800b105 	.word	0x0800b105
      else if (hi2c->EventCount == 1U)
 800b81c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b81e:	2a01      	cmp	r2, #1
 800b820:	f47f add0 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b824:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b826:	11d2      	asrs	r2, r2, #7
 800b828:	f002 0206 	and.w	r2, r2, #6
 800b82c:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b830:	611a      	str	r2, [r3, #16]
 800b832:	e5c7      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b834:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b836:	f042 0201 	orr.w	r2, r2, #1
 800b83a:	b2d2      	uxtb	r2, r2
 800b83c:	611a      	str	r2, [r3, #16]
 800b83e:	e5c1      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b840:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b842:	b911      	cbnz	r1, 800b84a <HAL_I2C_EV_IRQHandler+0x4e6>
 800b844:	2a40      	cmp	r2, #64	; 0x40
 800b846:	f000 809b 	beq.w	800b980 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b84a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b84c:	b922      	cbnz	r2, 800b858 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b84e:	6921      	ldr	r1, [r4, #16]
 800b850:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b854:	f000 809f 	beq.w	800b996 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b858:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b85a:	b292      	uxth	r2, r2
 800b85c:	2a00      	cmp	r2, #0
 800b85e:	d142      	bne.n	800b8e6 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b860:	9203      	str	r2, [sp, #12]
 800b862:	695a      	ldr	r2, [r3, #20]
 800b864:	9203      	str	r2, [sp, #12]
 800b866:	699a      	ldr	r2, [r3, #24]
 800b868:	9203      	str	r2, [sp, #12]
 800b86a:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b86c:	681a      	ldr	r2, [r3, #0]
 800b86e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b872:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b874:	2300      	movs	r3, #0
 800b876:	6523      	str	r3, [r4, #80]	; 0x50
 800b878:	e5a4      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b87a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b87c:	6802      	ldr	r2, [r0, #0]
 800b87e:	6852      	ldr	r2, [r2, #4]
 800b880:	b292      	uxth	r2, r2
 800b882:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b884:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b886:	b292      	uxth	r2, r2
 800b888:	b11a      	cbz	r2, 800b892 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b88a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b88c:	f042 0204 	orr.w	r2, r2, #4
 800b890:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b892:	685a      	ldr	r2, [r3, #4]
 800b894:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b898:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b89a:	f7fe fcab 	bl	800a1f4 <HAL_DMA_GetState>
 800b89e:	2801      	cmp	r0, #1
 800b8a0:	f43f ae8e 	beq.w	800b5c0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b8a4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b8a6:	4b98      	ldr	r3, [pc, #608]	; (800bb08 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b8a8:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b8aa:	f7fe fc91 	bl	800a1d0 <HAL_DMA_Abort_IT>
 800b8ae:	2800      	cmp	r0, #0
 800b8b0:	f43f ae86 	beq.w	800b5c0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b8b4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b8b6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b8b8:	4798      	blx	r3
 800b8ba:	e681      	b.n	800b5c0 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b8bc:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b8be:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b8c0:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b8c2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b8c6:	f7ff fbb1 	bl	800b02c <HAL_I2C_SlaveRxCpltCallback>
 800b8ca:	e6a6      	b.n	800b61a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b8cc:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b8ce:	498f      	ldr	r1, [pc, #572]	; (800bb0c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b8d0:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b8d2:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b8d4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b8d6:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b8d8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b8dc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b8e0:	f7ff fba8 	bl	800b034 <HAL_I2C_ListenCpltCallback>
 800b8e4:	e56e      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b8e6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b8e8:	b292      	uxth	r2, r2
 800b8ea:	2a01      	cmp	r2, #1
 800b8ec:	d070      	beq.n	800b9d0 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b8ee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b8f0:	b292      	uxth	r2, r2
 800b8f2:	2a02      	cmp	r2, #2
 800b8f4:	f000 80d6 	beq.w	800baa4 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8f8:	681a      	ldr	r2, [r3, #0]
 800b8fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b8fe:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b900:	685a      	ldr	r2, [r3, #4]
 800b902:	0511      	lsls	r1, r2, #20
 800b904:	d508      	bpl.n	800b918 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b906:	2820      	cmp	r0, #32
 800b908:	f200 80f8 	bhi.w	800bafc <HAL_I2C_EV_IRQHandler+0x798>
 800b90c:	2807      	cmp	r0, #7
 800b90e:	f200 80ea 	bhi.w	800bae6 <HAL_I2C_EV_IRQHandler+0x782>
 800b912:	2801      	cmp	r0, #1
 800b914:	f000 80ed 	beq.w	800baf2 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b918:	2200      	movs	r2, #0
 800b91a:	9209      	str	r2, [sp, #36]	; 0x24
 800b91c:	695a      	ldr	r2, [r3, #20]
 800b91e:	9209      	str	r2, [sp, #36]	; 0x24
 800b920:	699b      	ldr	r3, [r3, #24]
 800b922:	9309      	str	r3, [sp, #36]	; 0x24
 800b924:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b926:	e7a5      	b.n	800b874 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b928:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b92a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b92c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b930:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b932:	691b      	ldr	r3, [r3, #16]
 800b934:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b936:	e6f1      	b.n	800b71c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b938:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b93a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b93e:	2a21      	cmp	r2, #33	; 0x21
 800b940:	f47f ad40 	bne.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b944:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b946:	b292      	uxth	r2, r2
 800b948:	2a00      	cmp	r2, #0
 800b94a:	f47f aeb2 	bne.w	800b6b2 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b94e:	2908      	cmp	r1, #8
 800b950:	f000 80e2 	beq.w	800bb18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b954:	2920      	cmp	r1, #32
 800b956:	f000 80df 	beq.w	800bb18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b95a:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b95e:	f000 80db 	beq.w	800bb18 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b962:	6859      	ldr	r1, [r3, #4]
 800b964:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b968:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b96a:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b96c:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b96e:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b970:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b974:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b976:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b97a:	f7ff fb51 	bl	800b020 <HAL_I2C_MasterTxCpltCallback>
 800b97e:	e521      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b980:	9101      	str	r1, [sp, #4]
 800b982:	695a      	ldr	r2, [r3, #20]
 800b984:	9201      	str	r2, [sp, #4]
 800b986:	699b      	ldr	r3, [r3, #24]
 800b988:	9301      	str	r3, [sp, #4]
 800b98a:	9b01      	ldr	r3, [sp, #4]
 800b98c:	e51a      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b98e:	2a21      	cmp	r2, #33	; 0x21
 800b990:	f43f add1 	beq.w	800b536 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b994:	e5c9      	b.n	800b52a <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b996:	9202      	str	r2, [sp, #8]
 800b998:	695a      	ldr	r2, [r3, #20]
 800b99a:	9202      	str	r2, [sp, #8]
 800b99c:	699a      	ldr	r2, [r3, #24]
 800b99e:	9202      	str	r2, [sp, #8]
 800b9a0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b9a2:	681a      	ldr	r2, [r3, #0]
 800b9a4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b9a8:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b9aa:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b9ac:	3301      	adds	r3, #1
 800b9ae:	6523      	str	r3, [r4, #80]	; 0x50
 800b9b0:	e508      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b9b2:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b9b4:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b9b6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9ba:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b9bc:	f43f aeab 	beq.w	800b716 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b9c0:	2902      	cmp	r1, #2
 800b9c2:	f43f aea8 	beq.w	800b716 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b9c6:	681a      	ldr	r2, [r3, #0]
 800b9c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9cc:	601a      	str	r2, [r3, #0]
 800b9ce:	e6a2      	b.n	800b716 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b9d0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b9d4:	f000 811b 	beq.w	800bc0e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b9d8:	2808      	cmp	r0, #8
 800b9da:	f000 8108 	beq.w	800bbee <HAL_I2C_EV_IRQHandler+0x88a>
 800b9de:	2820      	cmp	r0, #32
 800b9e0:	f000 8105 	beq.w	800bbee <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b9e4:	2d12      	cmp	r5, #18
 800b9e6:	f000 80ff 	beq.w	800bbe8 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b9ea:	2810      	cmp	r0, #16
 800b9ec:	d804      	bhi.n	800b9f8 <HAL_I2C_EV_IRQHandler+0x694>
 800b9ee:	4a48      	ldr	r2, [pc, #288]	; (800bb10 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b9f0:	40c2      	lsrs	r2, r0
 800b9f2:	07d1      	lsls	r1, r2, #31
 800b9f4:	f100 814c 	bmi.w	800bc90 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b9f8:	681a      	ldr	r2, [r3, #0]
 800b9fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9fe:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba00:	2200      	movs	r2, #0
 800ba02:	9206      	str	r2, [sp, #24]
 800ba04:	695a      	ldr	r2, [r3, #20]
 800ba06:	9206      	str	r2, [sp, #24]
 800ba08:	699b      	ldr	r3, [r3, #24]
 800ba0a:	9306      	str	r3, [sp, #24]
 800ba0c:	9b06      	ldr	r3, [sp, #24]
 800ba0e:	e731      	b.n	800b874 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ba10:	685a      	ldr	r2, [r3, #4]
 800ba12:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba16:	605a      	str	r2, [r3, #4]
 800ba18:	e4d4      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800ba1a:	3901      	subs	r1, #1
 800ba1c:	290f      	cmp	r1, #15
 800ba1e:	d809      	bhi.n	800ba34 <HAL_I2C_EV_IRQHandler+0x6d0>
 800ba20:	e8df f001 	tbb	[pc, r1]
 800ba24:	3608363b 	.word	0x3608363b
 800ba28:	08080808 	.word	0x08080808
 800ba2c:	08080808 	.word	0x08080808
 800ba30:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ba34:	681a      	ldr	r2, [r3, #0]
 800ba36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ba3a:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ba3e:	691b      	ldr	r3, [r3, #16]
 800ba40:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ba42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ba44:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba46:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800ba48:	3b01      	subs	r3, #1
 800ba4a:	b29b      	uxth	r3, r3
 800ba4c:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba4e:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800ba50:	1c51      	adds	r1, r2, #1
 800ba52:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba54:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800ba56:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ba58:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800ba5a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ba5c:	3b01      	subs	r3, #1
 800ba5e:	b29b      	uxth	r3, r3
 800ba60:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ba62:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800ba64:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ba66:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800ba6a:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800ba6c:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ba6e:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800ba70:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ba74:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800ba78:	2b40      	cmp	r3, #64	; 0x40
 800ba7a:	f000 80f5 	beq.w	800bc68 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba7e:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ba80:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba82:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ba86:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ba88:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ba8a:	f7ff facb 	bl	800b024 <HAL_I2C_MasterRxCpltCallback>
 800ba8e:	e499      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba90:	681a      	ldr	r2, [r3, #0]
 800ba92:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ba96:	601a      	str	r2, [r3, #0]
 800ba98:	e7d0      	b.n	800ba3c <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba9a:	681a      	ldr	r2, [r3, #0]
 800ba9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800baa0:	601a      	str	r2, [r3, #0]
 800baa2:	e7cb      	b.n	800ba3c <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800baa4:	2810      	cmp	r0, #16
 800baa6:	d804      	bhi.n	800bab2 <HAL_I2C_EV_IRQHandler+0x74e>
 800baa8:	4a19      	ldr	r2, [pc, #100]	; (800bb10 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800baaa:	40c2      	lsrs	r2, r0
 800baac:	07d2      	lsls	r2, r2, #31
 800baae:	f100 80c2 	bmi.w	800bc36 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bab2:	681a      	ldr	r2, [r3, #0]
 800bab4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bab8:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800baba:	681a      	ldr	r2, [r3, #0]
 800babc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bac0:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bac2:	685a      	ldr	r2, [r3, #4]
 800bac4:	0516      	lsls	r6, r2, #20
 800bac6:	d506      	bpl.n	800bad6 <HAL_I2C_EV_IRQHandler+0x772>
 800bac8:	2820      	cmp	r0, #32
 800baca:	f240 80bc 	bls.w	800bc46 <HAL_I2C_EV_IRQHandler+0x8e2>
 800bace:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800bad2:	f000 80bd 	beq.w	800bc50 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bad6:	2200      	movs	r2, #0
 800bad8:	9208      	str	r2, [sp, #32]
 800bada:	695a      	ldr	r2, [r3, #20]
 800badc:	9208      	str	r2, [sp, #32]
 800bade:	699b      	ldr	r3, [r3, #24]
 800bae0:	9308      	str	r3, [sp, #32]
 800bae2:	9b08      	ldr	r3, [sp, #32]
 800bae4:	e6c6      	b.n	800b874 <HAL_I2C_EV_IRQHandler+0x510>
 800bae6:	4a0b      	ldr	r2, [pc, #44]	; (800bb14 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800bae8:	3808      	subs	r0, #8
 800baea:	40c2      	lsrs	r2, r0
 800baec:	07d2      	lsls	r2, r2, #31
 800baee:	f57f af13 	bpl.w	800b918 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800baf2:	685a      	ldr	r2, [r3, #4]
 800baf4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800baf8:	605a      	str	r2, [r3, #4]
 800bafa:	e70d      	b.n	800b918 <HAL_I2C_EV_IRQHandler+0x5b4>
 800bafc:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800bb00:	f47f af0a 	bne.w	800b918 <HAL_I2C_EV_IRQHandler+0x5b4>
 800bb04:	e7f5      	b.n	800baf2 <HAL_I2C_EV_IRQHandler+0x78e>
 800bb06:	bf00      	nop
 800bb08:	0800b105 	.word	0x0800b105
 800bb0c:	ffff0000 	.word	0xffff0000
 800bb10:	00010014 	.word	0x00010014
 800bb14:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bb18:	6859      	ldr	r1, [r3, #4]
 800bb1a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bb1e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bb20:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800bb22:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800bb24:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bb26:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800bb2a:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800bb2c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800bb2e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb32:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb36:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb3a:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800bb3c:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb3e:	f47f af1c 	bne.w	800b97a <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800bb42:	f7ff fa79 	bl	800b038 <HAL_I2C_MemTxCpltCallback>
 800bb46:	e43d      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800bb48:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800bb4a:	2802      	cmp	r0, #2
 800bb4c:	f43f af60 	beq.w	800ba10 <HAL_I2C_EV_IRQHandler+0x6ac>
 800bb50:	2a01      	cmp	r2, #1
 800bb52:	f63f af5d 	bhi.w	800ba10 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800bb56:	4a62      	ldr	r2, [pc, #392]	; (800bce0 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800bb58:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800bb5a:	6812      	ldr	r2, [r2, #0]
 800bb5c:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800bb60:	fbb2 f2f0 	udiv	r2, r2, r0
 800bb64:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800bb68:	920b      	str	r2, [sp, #44]	; 0x2c
 800bb6a:	e004      	b.n	800bb76 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800bb6c:	681a      	ldr	r2, [r3, #0]
 800bb6e:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800bb72:	f000 8092 	beq.w	800bc9a <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800bb76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bb78:	3a01      	subs	r2, #1
 800bb7a:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800bb7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bb7e:	2900      	cmp	r1, #0
 800bb80:	d1f4      	bne.n	800bb6c <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bb82:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb84:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bb86:	f042 0220 	orr.w	r2, r2, #32
 800bb8a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bb8c:	685a      	ldr	r2, [r3, #4]
 800bb8e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bb92:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb94:	691b      	ldr	r3, [r3, #16]
 800bb96:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bb98:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bb9a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800bb9c:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800bb9e:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800bba0:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800bba2:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800bba4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bba6:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800bba8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800bbac:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbae:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800bbb2:	f7ff faa3 	bl	800b0fc <HAL_I2C_ErrorCallback>
 800bbb6:	e405      	b.n	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800bbb8:	2d08      	cmp	r5, #8
 800bbba:	d0ad      	beq.n	800bb18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bbbc:	2d20      	cmp	r5, #32
 800bbbe:	d0ab      	beq.n	800bb18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bbc0:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800bbc4:	d0a8      	beq.n	800bb18 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bbc6:	685a      	ldr	r2, [r3, #4]
 800bbc8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bbcc:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bbce:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbd0:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800bbd2:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bbd4:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbd6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bbda:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800bbdc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bbe0:	f7ff fa1e 	bl	800b020 <HAL_I2C_MasterTxCpltCallback>
 800bbe4:	f7ff bbee 	b.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800bbe8:	2801      	cmp	r0, #1
 800bbea:	f43f af05 	beq.w	800b9f8 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bbee:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bbf0:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bbf2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bbf6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bbf8:	9107      	str	r1, [sp, #28]
 800bbfa:	695a      	ldr	r2, [r3, #20]
 800bbfc:	9207      	str	r2, [sp, #28]
 800bbfe:	699a      	ldr	r2, [r3, #24]
 800bc00:	9207      	str	r2, [sp, #28]
 800bc02:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bc04:	681a      	ldr	r2, [r3, #0]
 800bc06:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bc0a:	601a      	str	r2, [r3, #0]
 800bc0c:	e632      	b.n	800b874 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc0e:	681a      	ldr	r2, [r3, #0]
 800bc10:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bc14:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bc16:	685a      	ldr	r2, [r3, #4]
 800bc18:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800bc1c:	d02d      	beq.n	800bc7a <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc1e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bc20:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc22:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bc26:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bc28:	9104      	str	r1, [sp, #16]
 800bc2a:	695a      	ldr	r2, [r3, #20]
 800bc2c:	9204      	str	r2, [sp, #16]
 800bc2e:	699b      	ldr	r3, [r3, #24]
 800bc30:	9304      	str	r3, [sp, #16]
 800bc32:	9b04      	ldr	r3, [sp, #16]
 800bc34:	e61e      	b.n	800b874 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc36:	681a      	ldr	r2, [r3, #0]
 800bc38:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bc3c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bc3e:	685a      	ldr	r2, [r3, #4]
 800bc40:	0515      	lsls	r5, r2, #20
 800bc42:	f57f af48 	bpl.w	800bad6 <HAL_I2C_EV_IRQHandler+0x772>
 800bc46:	2807      	cmp	r0, #7
 800bc48:	d807      	bhi.n	800bc5a <HAL_I2C_EV_IRQHandler+0x8f6>
 800bc4a:	2801      	cmp	r0, #1
 800bc4c:	f47f af43 	bne.w	800bad6 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800bc50:	685a      	ldr	r2, [r3, #4]
 800bc52:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bc56:	605a      	str	r2, [r3, #4]
 800bc58:	e73d      	b.n	800bad6 <HAL_I2C_EV_IRQHandler+0x772>
 800bc5a:	4a22      	ldr	r2, [pc, #136]	; (800bce4 <HAL_I2C_EV_IRQHandler+0x980>)
 800bc5c:	3808      	subs	r0, #8
 800bc5e:	40c2      	lsrs	r2, r0
 800bc60:	07d0      	lsls	r0, r2, #31
 800bc62:	f57f af38 	bpl.w	800bad6 <HAL_I2C_EV_IRQHandler+0x772>
 800bc66:	e7f3      	b.n	800bc50 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bc68:	2300      	movs	r3, #0
 800bc6a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bc6e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800bc70:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bc72:	f7ff fa41 	bl	800b0f8 <HAL_I2C_MemRxCpltCallback>
 800bc76:	f7ff bba5 	b.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bc7a:	9205      	str	r2, [sp, #20]
 800bc7c:	695a      	ldr	r2, [r3, #20]
 800bc7e:	9205      	str	r2, [sp, #20]
 800bc80:	699a      	ldr	r2, [r3, #24]
 800bc82:	9205      	str	r2, [sp, #20]
 800bc84:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bc86:	681a      	ldr	r2, [r3, #0]
 800bc88:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bc8c:	601a      	str	r2, [r3, #0]
 800bc8e:	e5f1      	b.n	800b874 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc90:	681a      	ldr	r2, [r3, #0]
 800bc92:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bc96:	601a      	str	r2, [r3, #0]
 800bc98:	e6b2      	b.n	800ba00 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc9a:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bc9c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc9e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800bca2:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bca4:	6859      	ldr	r1, [r3, #4]
 800bca6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bcaa:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bcac:	691b      	ldr	r3, [r3, #16]
 800bcae:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bcb0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bcb2:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800bcb4:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800bcb6:	b29b      	uxth	r3, r3
 800bcb8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800bcba:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800bcbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bcc0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800bcc4:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bcc6:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800bcc8:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bcca:	f47f aed9 	bne.w	800ba80 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bcce:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bcd2:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800bcd4:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bcd6:	f7ff fa0f 	bl	800b0f8 <HAL_I2C_MemRxCpltCallback>
 800bcda:	f7ff bb73 	b.w	800b3c4 <HAL_I2C_EV_IRQHandler+0x60>
 800bcde:	bf00      	nop
 800bce0:	20000078 	.word	0x20000078
 800bce4:	01000101 	.word	0x01000101

0800bce8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bce8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bcec:	2a20      	cmp	r2, #32
{
 800bcee:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800bcf0:	fa5f fc82 	uxtb.w	ip, r2
 800bcf4:	d001      	beq.n	800bcfa <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bcf6:	2002      	movs	r0, #2
  }
}
 800bcf8:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800bcfa:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bcfc:	2024      	movs	r0, #36	; 0x24
 800bcfe:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bd02:	6810      	ldr	r0, [r2, #0]
 800bd04:	f020 0001 	bic.w	r0, r0, #1
 800bd08:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800bd0a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bd0c:	f020 0010 	bic.w	r0, r0, #16
 800bd10:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800bd12:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bd14:	4301      	orrs	r1, r0
 800bd16:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bd18:	6811      	ldr	r1, [r2, #0]
 800bd1a:	f041 0101 	orr.w	r1, r1, #1
 800bd1e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800bd20:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800bd22:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bd26:	4770      	bx	lr

0800bd28 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bd28:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bd2c:	2a20      	cmp	r2, #32
 800bd2e:	d001      	beq.n	800bd34 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bd30:	2002      	movs	r0, #2
  }
}
 800bd32:	4770      	bx	lr
{
 800bd34:	b410      	push	{r4}
 800bd36:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800bd3a:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bd3c:	2224      	movs	r2, #36	; 0x24
 800bd3e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bd42:	6822      	ldr	r2, [r4, #0]
 800bd44:	f022 0201 	bic.w	r2, r2, #1
 800bd48:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800bd4a:	4603      	mov	r3, r0
 800bd4c:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800bd4e:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800bd52:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800bd54:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800bd56:	b289      	uxth	r1, r1
 800bd58:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bd5a:	6822      	ldr	r2, [r4, #0]
 800bd5c:	f042 0201 	orr.w	r2, r2, #1
 800bd60:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800bd62:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bd66:	2000      	movs	r0, #0
}
 800bd68:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bd6c:	4770      	bx	lr
 800bd6e:	bf00      	nop

0800bd70 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800bd70:	2800      	cmp	r0, #0
 800bd72:	d069      	beq.n	800be48 <HAL_LTDC_Init+0xd8>
{
 800bd74:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800bd76:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800bd7a:	4604      	mov	r4, r0
 800bd7c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bd80:	2b00      	cmp	r3, #0
 800bd82:	d05c      	beq.n	800be3e <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd84:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bd86:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd88:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bd8c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bd90:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bd92:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bd94:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bd98:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800bd9c:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bd9e:	6999      	ldr	r1, [r3, #24]
 800bda0:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bda2:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bda4:	430a      	orrs	r2, r1
 800bda6:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bda8:	689a      	ldr	r2, [r3, #8]
 800bdaa:	4928      	ldr	r1, [pc, #160]	; (800be4c <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800bdac:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bdae:	400a      	ands	r2, r1
 800bdb0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800bdb2:	689a      	ldr	r2, [r3, #8]
 800bdb4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bdb8:	69a0      	ldr	r0, [r4, #24]
 800bdba:	4302      	orrs	r2, r0
 800bdbc:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bdbe:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800bdc0:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bdc2:	400a      	ands	r2, r1
 800bdc4:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800bdc6:	68da      	ldr	r2, [r3, #12]
 800bdc8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bdcc:	6a20      	ldr	r0, [r4, #32]
 800bdce:	4302      	orrs	r2, r0
 800bdd0:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bdd2:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800bdd4:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bdd6:	400a      	ands	r2, r1
 800bdd8:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800bdda:	691a      	ldr	r2, [r3, #16]
 800bddc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bde0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bde2:	4302      	orrs	r2, r0
 800bde4:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bde6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800bde8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bdea:	400a      	ands	r2, r1
 800bdec:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bdee:	695a      	ldr	r2, [r3, #20]
 800bdf0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bdf2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bdf6:	430a      	orrs	r2, r1
 800bdf8:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bdfa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bdfc:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800be00:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800be04:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800be08:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800be0a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800be0c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800be10:	432a      	orrs	r2, r5
 800be12:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800be16:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800be1a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800be1c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800be1e:	f042 0206 	orr.w	r2, r2, #6
 800be22:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800be24:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800be26:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800be2a:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800be2c:	ea42 020c 	orr.w	r2, r2, ip
 800be30:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800be32:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800be36:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800be3a:	4608      	mov	r0, r1
}
 800be3c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800be3e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800be42:	f7f5 ffeb 	bl	8001e1c <HAL_LTDC_MspInit>
 800be46:	e79d      	b.n	800bd84 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800be48:	2001      	movs	r0, #1
}
 800be4a:	4770      	bx	lr
 800be4c:	f000f800 	.word	0xf000f800

0800be50 <HAL_LTDC_ErrorCallback>:
 800be50:	4770      	bx	lr
 800be52:	bf00      	nop

0800be54 <HAL_LTDC_ReloadEventCallback>:
 800be54:	4770      	bx	lr
 800be56:	bf00      	nop

0800be58 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800be58:	6803      	ldr	r3, [r0, #0]
{
 800be5a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800be5c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800be5e:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800be60:	076a      	lsls	r2, r5, #29
{
 800be62:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800be64:	d501      	bpl.n	800be6a <HAL_LTDC_IRQHandler+0x12>
 800be66:	0771      	lsls	r1, r6, #29
 800be68:	d41d      	bmi.n	800bea6 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800be6a:	07aa      	lsls	r2, r5, #30
 800be6c:	d501      	bpl.n	800be72 <HAL_LTDC_IRQHandler+0x1a>
 800be6e:	07b3      	lsls	r3, r6, #30
 800be70:	d42d      	bmi.n	800bece <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800be72:	07e8      	lsls	r0, r5, #31
 800be74:	d501      	bpl.n	800be7a <HAL_LTDC_IRQHandler+0x22>
 800be76:	07f1      	lsls	r1, r6, #31
 800be78:	d440      	bmi.n	800befc <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800be7a:	072a      	lsls	r2, r5, #28
 800be7c:	d501      	bpl.n	800be82 <HAL_LTDC_IRQHandler+0x2a>
 800be7e:	0733      	lsls	r3, r6, #28
 800be80:	d400      	bmi.n	800be84 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800be82:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800be84:	6823      	ldr	r3, [r4, #0]
 800be86:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800be88:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800be8a:	f022 0208 	bic.w	r2, r2, #8
 800be8e:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800be90:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800be92:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800be94:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800be96:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800be9a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800be9e:	4620      	mov	r0, r4
 800bea0:	f7ff ffd8 	bl	800be54 <HAL_LTDC_ReloadEventCallback>
}
 800bea4:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bea6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bea8:	f022 0204 	bic.w	r2, r2, #4
 800beac:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800beae:	2204      	movs	r2, #4
 800beb0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800beb2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800beb6:	f043 0301 	orr.w	r3, r3, #1
 800beba:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bebe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bec0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bec4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bec8:	f7ff ffc2 	bl	800be50 <HAL_LTDC_ErrorCallback>
 800becc:	e7cd      	b.n	800be6a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bece:	6823      	ldr	r3, [r4, #0]
 800bed0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bed2:	f022 0202 	bic.w	r2, r2, #2
 800bed6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bed8:	2202      	movs	r2, #2
 800beda:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bedc:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bee0:	f043 0302 	orr.w	r3, r3, #2
 800bee4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bee8:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800beea:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800beec:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bef0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bef4:	4620      	mov	r0, r4
 800bef6:	f7ff ffab 	bl	800be50 <HAL_LTDC_ErrorCallback>
 800befa:	e7ba      	b.n	800be72 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800befc:	6823      	ldr	r3, [r4, #0]
 800befe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bf00:	f022 0201 	bic.w	r2, r2, #1
 800bf04:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bf06:	2201      	movs	r2, #1
 800bf08:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bf0a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bf0c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bf10:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bf14:	4620      	mov	r0, r4
 800bf16:	f7f6 ff7b 	bl	8002e10 <HAL_LTDC_LineEventCallback>
 800bf1a:	e7ae      	b.n	800be7a <HAL_LTDC_IRQHandler+0x22>

0800bf1c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bf1c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bf20:	2b01      	cmp	r3, #1
 800bf22:	f000 80c2 	beq.w	800c0aa <HAL_LTDC_ConfigLayer+0x18e>
{
 800bf26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bf2a:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bf2e:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bf32:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bf36:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bf38:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bf3a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bf3e:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bf42:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bf46:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bf4a:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bf4e:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bf52:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bf54:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bf58:	460c      	mov	r4, r1
 800bf5a:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bf5c:	9301      	str	r3, [sp, #4]
 800bf5e:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bf60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bf62:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bf66:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bf6a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bf6c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bf6e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bf72:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bf74:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bf78:	6823      	ldr	r3, [r4, #0]
 800bf7a:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bf7e:	9b01      	ldr	r3, [sp, #4]
 800bf80:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bf84:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bf88:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bf8a:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bf8c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bf90:	1c51      	adds	r1, r2, #1
 800bf92:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bf96:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bf98:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bf9a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bf9e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bfa2:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bfa6:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bfaa:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bfae:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bfb2:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bfb6:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bfb8:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bfba:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bfbe:	3301      	adds	r3, #1
 800bfc0:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bfc4:	4403      	add	r3, r0
 800bfc6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bfca:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bfce:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bfd2:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bfd4:	f023 0307 	bic.w	r3, r3, #7
 800bfd8:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bfdc:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bfe0:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bfe4:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bfe8:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bfec:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bff0:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bff4:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bff8:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bffc:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c000:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800c004:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800c008:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800c00c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800c010:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800c014:	696b      	ldr	r3, [r5, #20]
 800c016:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800c01a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800c01e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800c022:	f023 0307 	bic.w	r3, r3, #7
 800c026:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800c02a:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800c02e:	4303      	orrs	r3, r0
 800c030:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c034:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c038:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c03a:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c03e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c042:	bb69      	cbnz	r1, 800c0a0 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800c044:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c046:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c048:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c04a:	fb03 f707 	mul.w	r7, r3, r7
 800c04e:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c050:	fb02 f303 	mul.w	r3, r2, r3
 800c054:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c058:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c05c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c05e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800c062:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c066:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800c06a:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800c06e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800c072:	f023 0307 	bic.w	r3, r3, #7
 800c076:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c07a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c07e:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c082:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c084:	4313      	orrs	r3, r2
 800c086:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800c08a:	2300      	movs	r3, #0
  return HAL_OK;
 800c08c:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c08e:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800c092:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c096:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800c09a:	b003      	add	sp, #12
 800c09c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800c0a0:	3901      	subs	r1, #1
 800c0a2:	2906      	cmp	r1, #6
 800c0a4:	d903      	bls.n	800c0ae <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c0a6:	2301      	movs	r3, #1
 800c0a8:	e7cd      	b.n	800c046 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800c0aa:	2002      	movs	r0, #2
}
 800c0ac:	4770      	bx	lr
 800c0ae:	4b02      	ldr	r3, [pc, #8]	; (800c0b8 <HAL_LTDC_ConfigLayer+0x19c>)
 800c0b0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800c0b4:	e7c7      	b.n	800c046 <HAL_LTDC_ConfigLayer+0x12a>
 800c0b6:	bf00      	nop
 800c0b8:	0802ed10 	.word	0x0802ed10

0800c0bc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800c0bc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c0c0:	2b01      	cmp	r3, #1
 800c0c2:	d019      	beq.n	800c0f8 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c0c4:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c0c6:	2302      	movs	r3, #2
{
 800c0c8:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c0ca:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c0ce:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c0d0:	4c0a      	ldr	r4, [pc, #40]	; (800c0fc <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c0d2:	f023 0301 	bic.w	r3, r3, #1
 800c0d6:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c0d8:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c0da:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800c0dc:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c0de:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800c0e2:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c0e6:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800c0e8:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c0ec:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800c0f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800c0f4:	4618      	mov	r0, r3
}
 800c0f6:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800c0f8:	2002      	movs	r0, #2
}
 800c0fa:	4770      	bx	lr
 800c0fc:	40016800 	.word	0x40016800

0800c100 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c100:	2800      	cmp	r0, #0
 800c102:	f000 81a2 	beq.w	800c44a <HAL_RCC_OscConfig+0x34a>
{
 800c106:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c10a:	6803      	ldr	r3, [r0, #0]
 800c10c:	07dd      	lsls	r5, r3, #31
{
 800c10e:	b082      	sub	sp, #8
 800c110:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c112:	d52f      	bpl.n	800c174 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c114:	499e      	ldr	r1, [pc, #632]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c116:	688a      	ldr	r2, [r1, #8]
 800c118:	f002 020c 	and.w	r2, r2, #12
 800c11c:	2a04      	cmp	r2, #4
 800c11e:	f000 80ed 	beq.w	800c2fc <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c122:	688a      	ldr	r2, [r1, #8]
 800c124:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c128:	2a08      	cmp	r2, #8
 800c12a:	f000 80e3 	beq.w	800c2f4 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c12e:	6863      	ldr	r3, [r4, #4]
 800c130:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c134:	f000 80ec 	beq.w	800c310 <HAL_RCC_OscConfig+0x210>
 800c138:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800c13c:	f000 8175 	beq.w	800c42a <HAL_RCC_OscConfig+0x32a>
 800c140:	4d93      	ldr	r5, [pc, #588]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c142:	682a      	ldr	r2, [r5, #0]
 800c144:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800c148:	602a      	str	r2, [r5, #0]
 800c14a:	682a      	ldr	r2, [r5, #0]
 800c14c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800c150:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c152:	2b00      	cmp	r3, #0
 800c154:	f040 80e1 	bne.w	800c31a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c158:	f7fd ffb0 	bl	800a0bc <HAL_GetTick>
 800c15c:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c15e:	e005      	b.n	800c16c <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c160:	f7fd ffac 	bl	800a0bc <HAL_GetTick>
 800c164:	1b80      	subs	r0, r0, r6
 800c166:	2864      	cmp	r0, #100	; 0x64
 800c168:	f200 8101 	bhi.w	800c36e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c16c:	682b      	ldr	r3, [r5, #0]
 800c16e:	039b      	lsls	r3, r3, #14
 800c170:	d4f6      	bmi.n	800c160 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c172:	6823      	ldr	r3, [r4, #0]
 800c174:	079f      	lsls	r7, r3, #30
 800c176:	d528      	bpl.n	800c1ca <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c178:	4a85      	ldr	r2, [pc, #532]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c17a:	6891      	ldr	r1, [r2, #8]
 800c17c:	f011 0f0c 	tst.w	r1, #12
 800c180:	f000 8090 	beq.w	800c2a4 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c184:	6891      	ldr	r1, [r2, #8]
 800c186:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c18a:	2908      	cmp	r1, #8
 800c18c:	f000 8086 	beq.w	800c29c <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c190:	68e3      	ldr	r3, [r4, #12]
 800c192:	2b00      	cmp	r3, #0
 800c194:	f000 810e 	beq.w	800c3b4 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800c198:	4b7e      	ldr	r3, [pc, #504]	; (800c394 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c19a:	4e7d      	ldr	r6, [pc, #500]	; (800c390 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800c19c:	2201      	movs	r2, #1
 800c19e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c1a0:	f7fd ff8c 	bl	800a0bc <HAL_GetTick>
 800c1a4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c1a6:	e005      	b.n	800c1b4 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c1a8:	f7fd ff88 	bl	800a0bc <HAL_GetTick>
 800c1ac:	1b40      	subs	r0, r0, r5
 800c1ae:	2802      	cmp	r0, #2
 800c1b0:	f200 80dd 	bhi.w	800c36e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c1b4:	6833      	ldr	r3, [r6, #0]
 800c1b6:	0798      	lsls	r0, r3, #30
 800c1b8:	d5f6      	bpl.n	800c1a8 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c1ba:	6833      	ldr	r3, [r6, #0]
 800c1bc:	6922      	ldr	r2, [r4, #16]
 800c1be:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c1c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c1c6:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c1c8:	6823      	ldr	r3, [r4, #0]
 800c1ca:	071a      	lsls	r2, r3, #28
 800c1cc:	d451      	bmi.n	800c272 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c1ce:	0758      	lsls	r0, r3, #29
 800c1d0:	d52f      	bpl.n	800c232 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c1d2:	4a6f      	ldr	r2, [pc, #444]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c1d4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c1d6:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800c1da:	d07f      	beq.n	800c2dc <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800c1dc:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c1de:	4e6e      	ldr	r6, [pc, #440]	; (800c398 <HAL_RCC_OscConfig+0x298>)
 800c1e0:	6833      	ldr	r3, [r6, #0]
 800c1e2:	05d9      	lsls	r1, r3, #23
 800c1e4:	f140 80b3 	bpl.w	800c34e <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c1e8:	68a3      	ldr	r3, [r4, #8]
 800c1ea:	2b01      	cmp	r3, #1
 800c1ec:	f000 80c3 	beq.w	800c376 <HAL_RCC_OscConfig+0x276>
 800c1f0:	2b05      	cmp	r3, #5
 800c1f2:	f000 812c 	beq.w	800c44e <HAL_RCC_OscConfig+0x34e>
 800c1f6:	4e66      	ldr	r6, [pc, #408]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c1f8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c1fa:	f022 0201 	bic.w	r2, r2, #1
 800c1fe:	6732      	str	r2, [r6, #112]	; 0x70
 800c200:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c202:	f022 0204 	bic.w	r2, r2, #4
 800c206:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c208:	2b00      	cmp	r3, #0
 800c20a:	f040 80b9 	bne.w	800c380 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800c20e:	f7fd ff55 	bl	800a0bc <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c212:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c216:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c218:	e005      	b.n	800c226 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c21a:	f7fd ff4f 	bl	800a0bc <HAL_GetTick>
 800c21e:	1bc0      	subs	r0, r0, r7
 800c220:	4540      	cmp	r0, r8
 800c222:	f200 80a4 	bhi.w	800c36e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c226:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c228:	0798      	lsls	r0, r3, #30
 800c22a:	d4f6      	bmi.n	800c21a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800c22c:	2d00      	cmp	r5, #0
 800c22e:	f040 8106 	bne.w	800c43e <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c232:	69a0      	ldr	r0, [r4, #24]
 800c234:	b1c8      	cbz	r0, 800c26a <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c236:	4d56      	ldr	r5, [pc, #344]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c238:	68ab      	ldr	r3, [r5, #8]
 800c23a:	f003 030c 	and.w	r3, r3, #12
 800c23e:	2b08      	cmp	r3, #8
 800c240:	f000 80c9 	beq.w	800c3d6 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800c244:	4b53      	ldr	r3, [pc, #332]	; (800c394 <HAL_RCC_OscConfig+0x294>)
 800c246:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c248:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c24a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c24c:	f000 8109 	beq.w	800c462 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c250:	f7fd ff34 	bl	800a0bc <HAL_GetTick>
 800c254:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c256:	e005      	b.n	800c264 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c258:	f7fd ff30 	bl	800a0bc <HAL_GetTick>
 800c25c:	1b00      	subs	r0, r0, r4
 800c25e:	2802      	cmp	r0, #2
 800c260:	f200 8085 	bhi.w	800c36e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c264:	682b      	ldr	r3, [r5, #0]
 800c266:	019b      	lsls	r3, r3, #6
 800c268:	d4f6      	bmi.n	800c258 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c26a:	2000      	movs	r0, #0
}
 800c26c:	b002      	add	sp, #8
 800c26e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c272:	6963      	ldr	r3, [r4, #20]
 800c274:	b30b      	cbz	r3, 800c2ba <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800c276:	4b47      	ldr	r3, [pc, #284]	; (800c394 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c278:	4e45      	ldr	r6, [pc, #276]	; (800c390 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800c27a:	2201      	movs	r2, #1
 800c27c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c280:	f7fd ff1c 	bl	800a0bc <HAL_GetTick>
 800c284:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c286:	e004      	b.n	800c292 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c288:	f7fd ff18 	bl	800a0bc <HAL_GetTick>
 800c28c:	1b40      	subs	r0, r0, r5
 800c28e:	2802      	cmp	r0, #2
 800c290:	d86d      	bhi.n	800c36e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c292:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c294:	079b      	lsls	r3, r3, #30
 800c296:	d5f7      	bpl.n	800c288 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c298:	6823      	ldr	r3, [r4, #0]
 800c29a:	e798      	b.n	800c1ce <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c29c:	6852      	ldr	r2, [r2, #4]
 800c29e:	0256      	lsls	r6, r2, #9
 800c2a0:	f53f af76 	bmi.w	800c190 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c2a4:	4a3a      	ldr	r2, [pc, #232]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c2a6:	6812      	ldr	r2, [r2, #0]
 800c2a8:	0795      	lsls	r5, r2, #30
 800c2aa:	d544      	bpl.n	800c336 <HAL_RCC_OscConfig+0x236>
 800c2ac:	68e2      	ldr	r2, [r4, #12]
 800c2ae:	2a01      	cmp	r2, #1
 800c2b0:	d041      	beq.n	800c336 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800c2b2:	2001      	movs	r0, #1
}
 800c2b4:	b002      	add	sp, #8
 800c2b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800c2ba:	4a36      	ldr	r2, [pc, #216]	; (800c394 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c2bc:	4e34      	ldr	r6, [pc, #208]	; (800c390 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800c2be:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c2c2:	f7fd fefb 	bl	800a0bc <HAL_GetTick>
 800c2c6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c2c8:	e004      	b.n	800c2d4 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c2ca:	f7fd fef7 	bl	800a0bc <HAL_GetTick>
 800c2ce:	1b40      	subs	r0, r0, r5
 800c2d0:	2802      	cmp	r0, #2
 800c2d2:	d84c      	bhi.n	800c36e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c2d4:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c2d6:	079f      	lsls	r7, r3, #30
 800c2d8:	d4f7      	bmi.n	800c2ca <HAL_RCC_OscConfig+0x1ca>
 800c2da:	e7dd      	b.n	800c298 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c2dc:	9301      	str	r3, [sp, #4]
 800c2de:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c2e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c2e4:	6413      	str	r3, [r2, #64]	; 0x40
 800c2e6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c2e8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c2ec:	9301      	str	r3, [sp, #4]
 800c2ee:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c2f0:	2501      	movs	r5, #1
 800c2f2:	e774      	b.n	800c1de <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c2f4:	684a      	ldr	r2, [r1, #4]
 800c2f6:	0250      	lsls	r0, r2, #9
 800c2f8:	f57f af19 	bpl.w	800c12e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c2fc:	4a24      	ldr	r2, [pc, #144]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c2fe:	6812      	ldr	r2, [r2, #0]
 800c300:	0391      	lsls	r1, r2, #14
 800c302:	f57f af37 	bpl.w	800c174 <HAL_RCC_OscConfig+0x74>
 800c306:	6862      	ldr	r2, [r4, #4]
 800c308:	2a00      	cmp	r2, #0
 800c30a:	f47f af33 	bne.w	800c174 <HAL_RCC_OscConfig+0x74>
 800c30e:	e7d0      	b.n	800c2b2 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c310:	4a1f      	ldr	r2, [pc, #124]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c312:	6813      	ldr	r3, [r2, #0]
 800c314:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c318:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c31a:	f7fd fecf 	bl	800a0bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c31e:	4e1c      	ldr	r6, [pc, #112]	; (800c390 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800c320:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c322:	e004      	b.n	800c32e <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c324:	f7fd feca 	bl	800a0bc <HAL_GetTick>
 800c328:	1b40      	subs	r0, r0, r5
 800c32a:	2864      	cmp	r0, #100	; 0x64
 800c32c:	d81f      	bhi.n	800c36e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c32e:	6833      	ldr	r3, [r6, #0]
 800c330:	039a      	lsls	r2, r3, #14
 800c332:	d5f7      	bpl.n	800c324 <HAL_RCC_OscConfig+0x224>
 800c334:	e71d      	b.n	800c172 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c336:	4916      	ldr	r1, [pc, #88]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c338:	6920      	ldr	r0, [r4, #16]
 800c33a:	680a      	ldr	r2, [r1, #0]
 800c33c:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c340:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800c344:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c346:	071a      	lsls	r2, r3, #28
 800c348:	f57f af41 	bpl.w	800c1ce <HAL_RCC_OscConfig+0xce>
 800c34c:	e791      	b.n	800c272 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c34e:	6833      	ldr	r3, [r6, #0]
 800c350:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c354:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c356:	f7fd feb1 	bl	800a0bc <HAL_GetTick>
 800c35a:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c35c:	6833      	ldr	r3, [r6, #0]
 800c35e:	05da      	lsls	r2, r3, #23
 800c360:	f53f af42 	bmi.w	800c1e8 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c364:	f7fd feaa 	bl	800a0bc <HAL_GetTick>
 800c368:	1bc0      	subs	r0, r0, r7
 800c36a:	2802      	cmp	r0, #2
 800c36c:	d9f6      	bls.n	800c35c <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c36e:	2003      	movs	r0, #3
}
 800c370:	b002      	add	sp, #8
 800c372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c376:	4a06      	ldr	r2, [pc, #24]	; (800c390 <HAL_RCC_OscConfig+0x290>)
 800c378:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c37a:	f043 0301 	orr.w	r3, r3, #1
 800c37e:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c380:	f7fd fe9c 	bl	800a0bc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c384:	4f02      	ldr	r7, [pc, #8]	; (800c390 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c386:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c388:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c38c:	e00b      	b.n	800c3a6 <HAL_RCC_OscConfig+0x2a6>
 800c38e:	bf00      	nop
 800c390:	40023800 	.word	0x40023800
 800c394:	42470000 	.word	0x42470000
 800c398:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c39c:	f7fd fe8e 	bl	800a0bc <HAL_GetTick>
 800c3a0:	1b80      	subs	r0, r0, r6
 800c3a2:	4540      	cmp	r0, r8
 800c3a4:	d8e3      	bhi.n	800c36e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c3a6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c3a8:	079b      	lsls	r3, r3, #30
 800c3aa:	d5f7      	bpl.n	800c39c <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c3ac:	2d00      	cmp	r5, #0
 800c3ae:	f43f af40 	beq.w	800c232 <HAL_RCC_OscConfig+0x132>
 800c3b2:	e044      	b.n	800c43e <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c3b4:	4a42      	ldr	r2, [pc, #264]	; (800c4c0 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c3b6:	4e43      	ldr	r6, [pc, #268]	; (800c4c4 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c3b8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c3ba:	f7fd fe7f 	bl	800a0bc <HAL_GetTick>
 800c3be:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c3c0:	e004      	b.n	800c3cc <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c3c2:	f7fd fe7b 	bl	800a0bc <HAL_GetTick>
 800c3c6:	1b40      	subs	r0, r0, r5
 800c3c8:	2802      	cmp	r0, #2
 800c3ca:	d8d0      	bhi.n	800c36e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c3cc:	6833      	ldr	r3, [r6, #0]
 800c3ce:	0799      	lsls	r1, r3, #30
 800c3d0:	d4f7      	bmi.n	800c3c2 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c3d2:	6823      	ldr	r3, [r4, #0]
 800c3d4:	e6f9      	b.n	800c1ca <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c3d6:	2801      	cmp	r0, #1
 800c3d8:	f43f af48 	beq.w	800c26c <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c3dc:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c3de:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c3e0:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c3e4:	4291      	cmp	r1, r2
 800c3e6:	f47f af64 	bne.w	800c2b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c3ea:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c3ec:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c3f0:	4291      	cmp	r1, r2
 800c3f2:	f47f af5e 	bne.w	800c2b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c3f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c3f8:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c3fc:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c3fe:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c402:	f47f af56 	bne.w	800c2b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c406:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c408:	0852      	lsrs	r2, r2, #1
 800c40a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c40e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c410:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c414:	f47f af4d 	bne.w	800c2b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c418:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c41a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c41e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c422:	bf14      	ite	ne
 800c424:	2001      	movne	r0, #1
 800c426:	2000      	moveq	r0, #0
 800c428:	e720      	b.n	800c26c <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c42a:	4b26      	ldr	r3, [pc, #152]	; (800c4c4 <HAL_RCC_OscConfig+0x3c4>)
 800c42c:	681a      	ldr	r2, [r3, #0]
 800c42e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c432:	601a      	str	r2, [r3, #0]
 800c434:	681a      	ldr	r2, [r3, #0]
 800c436:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c43a:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c43c:	e76d      	b.n	800c31a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c43e:	4a21      	ldr	r2, [pc, #132]	; (800c4c4 <HAL_RCC_OscConfig+0x3c4>)
 800c440:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c442:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c446:	6413      	str	r3, [r2, #64]	; 0x40
 800c448:	e6f3      	b.n	800c232 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c44a:	2001      	movs	r0, #1
}
 800c44c:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c44e:	4b1d      	ldr	r3, [pc, #116]	; (800c4c4 <HAL_RCC_OscConfig+0x3c4>)
 800c450:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c452:	f042 0204 	orr.w	r2, r2, #4
 800c456:	671a      	str	r2, [r3, #112]	; 0x70
 800c458:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c45a:	f042 0201 	orr.w	r2, r2, #1
 800c45e:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c460:	e78e      	b.n	800c380 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c462:	f7fd fe2b 	bl	800a0bc <HAL_GetTick>
 800c466:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c468:	e005      	b.n	800c476 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c46a:	f7fd fe27 	bl	800a0bc <HAL_GetTick>
 800c46e:	1b80      	subs	r0, r0, r6
 800c470:	2802      	cmp	r0, #2
 800c472:	f63f af7c 	bhi.w	800c36e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c476:	682b      	ldr	r3, [r5, #0]
 800c478:	0199      	lsls	r1, r3, #6
 800c47a:	d4f6      	bmi.n	800c46a <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c47c:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c480:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c482:	430b      	orrs	r3, r1
 800c484:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c488:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c48c:	0852      	lsrs	r2, r2, #1
 800c48e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c492:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c494:	490a      	ldr	r1, [pc, #40]	; (800c4c0 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c496:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c49a:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c49c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c49e:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c4a0:	f7fd fe0c 	bl	800a0bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c4a4:	4d07      	ldr	r5, [pc, #28]	; (800c4c4 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c4a6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c4a8:	e005      	b.n	800c4b6 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c4aa:	f7fd fe07 	bl	800a0bc <HAL_GetTick>
 800c4ae:	1b00      	subs	r0, r0, r4
 800c4b0:	2802      	cmp	r0, #2
 800c4b2:	f63f af5c 	bhi.w	800c36e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c4b6:	682b      	ldr	r3, [r5, #0]
 800c4b8:	019a      	lsls	r2, r3, #6
 800c4ba:	d5f6      	bpl.n	800c4aa <HAL_RCC_OscConfig+0x3aa>
 800c4bc:	e6d5      	b.n	800c26a <HAL_RCC_OscConfig+0x16a>
 800c4be:	bf00      	nop
 800c4c0:	42470000 	.word	0x42470000
 800c4c4:	40023800 	.word	0x40023800

0800c4c8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c4c8:	4916      	ldr	r1, [pc, #88]	; (800c524 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c4ca:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c4cc:	688b      	ldr	r3, [r1, #8]
 800c4ce:	f003 030c 	and.w	r3, r3, #12
 800c4d2:	2b04      	cmp	r3, #4
 800c4d4:	d01b      	beq.n	800c50e <HAL_RCC_GetSysClockFreq+0x46>
 800c4d6:	2b08      	cmp	r3, #8
 800c4d8:	d117      	bne.n	800c50a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c4da:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c4dc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c4de:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c4e0:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c4e4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c4e8:	d113      	bne.n	800c512 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c4ea:	480f      	ldr	r0, [pc, #60]	; (800c528 <HAL_RCC_GetSysClockFreq+0x60>)
 800c4ec:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c4f0:	fba1 0100 	umull	r0, r1, r1, r0
 800c4f4:	f7f4 fa62 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c4f8:	4b0a      	ldr	r3, [pc, #40]	; (800c524 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c4fa:	685b      	ldr	r3, [r3, #4]
 800c4fc:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c500:	3301      	adds	r3, #1
 800c502:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c504:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c508:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c50a:	4807      	ldr	r0, [pc, #28]	; (800c528 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c50c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c50e:	4807      	ldr	r0, [pc, #28]	; (800c52c <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c510:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c512:	4806      	ldr	r0, [pc, #24]	; (800c52c <HAL_RCC_GetSysClockFreq+0x64>)
 800c514:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c518:	2300      	movs	r3, #0
 800c51a:	fba1 0100 	umull	r0, r1, r1, r0
 800c51e:	f7f4 fa4d 	bl	80009bc <__aeabi_uldivmod>
 800c522:	e7e9      	b.n	800c4f8 <HAL_RCC_GetSysClockFreq+0x30>
 800c524:	40023800 	.word	0x40023800
 800c528:	00f42400 	.word	0x00f42400
 800c52c:	007a1200 	.word	0x007a1200

0800c530 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c530:	2800      	cmp	r0, #0
 800c532:	f000 8087 	beq.w	800c644 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c536:	4a48      	ldr	r2, [pc, #288]	; (800c658 <HAL_RCC_ClockConfig+0x128>)
 800c538:	6813      	ldr	r3, [r2, #0]
 800c53a:	f003 030f 	and.w	r3, r3, #15
 800c53e:	428b      	cmp	r3, r1
{
 800c540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c544:	460d      	mov	r5, r1
 800c546:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c548:	d209      	bcs.n	800c55e <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c54a:	b2cb      	uxtb	r3, r1
 800c54c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c54e:	6813      	ldr	r3, [r2, #0]
 800c550:	f003 030f 	and.w	r3, r3, #15
 800c554:	428b      	cmp	r3, r1
 800c556:	d002      	beq.n	800c55e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c558:	2001      	movs	r0, #1
}
 800c55a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c55e:	6823      	ldr	r3, [r4, #0]
 800c560:	0798      	lsls	r0, r3, #30
 800c562:	d514      	bpl.n	800c58e <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c564:	0759      	lsls	r1, r3, #29
 800c566:	d504      	bpl.n	800c572 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c568:	493c      	ldr	r1, [pc, #240]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c56a:	688a      	ldr	r2, [r1, #8]
 800c56c:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c570:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c572:	071a      	lsls	r2, r3, #28
 800c574:	d504      	bpl.n	800c580 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c576:	4939      	ldr	r1, [pc, #228]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c578:	688a      	ldr	r2, [r1, #8]
 800c57a:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c57e:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c580:	4936      	ldr	r1, [pc, #216]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c582:	68a0      	ldr	r0, [r4, #8]
 800c584:	688a      	ldr	r2, [r1, #8]
 800c586:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c58a:	4302      	orrs	r2, r0
 800c58c:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c58e:	07df      	lsls	r7, r3, #31
 800c590:	d521      	bpl.n	800c5d6 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c592:	6862      	ldr	r2, [r4, #4]
 800c594:	2a01      	cmp	r2, #1
 800c596:	d057      	beq.n	800c648 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c598:	1e93      	subs	r3, r2, #2
 800c59a:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c59c:	4b2f      	ldr	r3, [pc, #188]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c59e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c5a0:	d94d      	bls.n	800c63e <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c5a2:	0799      	lsls	r1, r3, #30
 800c5a4:	d5d8      	bpl.n	800c558 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c5a6:	4e2d      	ldr	r6, [pc, #180]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c5a8:	68b3      	ldr	r3, [r6, #8]
 800c5aa:	f023 0303 	bic.w	r3, r3, #3
 800c5ae:	4313      	orrs	r3, r2
 800c5b0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c5b2:	f7fd fd83 	bl	800a0bc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c5b6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c5ba:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c5bc:	e004      	b.n	800c5c8 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c5be:	f7fd fd7d 	bl	800a0bc <HAL_GetTick>
 800c5c2:	1bc0      	subs	r0, r0, r7
 800c5c4:	4540      	cmp	r0, r8
 800c5c6:	d844      	bhi.n	800c652 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c5c8:	68b3      	ldr	r3, [r6, #8]
 800c5ca:	6862      	ldr	r2, [r4, #4]
 800c5cc:	f003 030c 	and.w	r3, r3, #12
 800c5d0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c5d4:	d1f3      	bne.n	800c5be <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c5d6:	4a20      	ldr	r2, [pc, #128]	; (800c658 <HAL_RCC_ClockConfig+0x128>)
 800c5d8:	6813      	ldr	r3, [r2, #0]
 800c5da:	f003 030f 	and.w	r3, r3, #15
 800c5de:	42ab      	cmp	r3, r5
 800c5e0:	d906      	bls.n	800c5f0 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c5e2:	b2eb      	uxtb	r3, r5
 800c5e4:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c5e6:	6813      	ldr	r3, [r2, #0]
 800c5e8:	f003 030f 	and.w	r3, r3, #15
 800c5ec:	42ab      	cmp	r3, r5
 800c5ee:	d1b3      	bne.n	800c558 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c5f0:	6823      	ldr	r3, [r4, #0]
 800c5f2:	075a      	lsls	r2, r3, #29
 800c5f4:	d506      	bpl.n	800c604 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c5f6:	4919      	ldr	r1, [pc, #100]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c5f8:	68e0      	ldr	r0, [r4, #12]
 800c5fa:	688a      	ldr	r2, [r1, #8]
 800c5fc:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c600:	4302      	orrs	r2, r0
 800c602:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c604:	071b      	lsls	r3, r3, #28
 800c606:	d507      	bpl.n	800c618 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c608:	4a14      	ldr	r2, [pc, #80]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c60a:	6921      	ldr	r1, [r4, #16]
 800c60c:	6893      	ldr	r3, [r2, #8]
 800c60e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c612:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c616:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c618:	f7ff ff56 	bl	800c4c8 <HAL_RCC_GetSysClockFreq>
 800c61c:	4a0f      	ldr	r2, [pc, #60]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c61e:	4c10      	ldr	r4, [pc, #64]	; (800c660 <HAL_RCC_ClockConfig+0x130>)
 800c620:	6892      	ldr	r2, [r2, #8]
 800c622:	4910      	ldr	r1, [pc, #64]	; (800c664 <HAL_RCC_ClockConfig+0x134>)
 800c624:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c628:	4603      	mov	r3, r0
 800c62a:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c62c:	480e      	ldr	r0, [pc, #56]	; (800c668 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c62e:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c630:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c632:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c634:	f7f5 fdce 	bl	80021d4 <HAL_InitTick>
  return HAL_OK;
 800c638:	2000      	movs	r0, #0
}
 800c63a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c63e:	0198      	lsls	r0, r3, #6
 800c640:	d4b1      	bmi.n	800c5a6 <HAL_RCC_ClockConfig+0x76>
 800c642:	e789      	b.n	800c558 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c644:	2001      	movs	r0, #1
}
 800c646:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c648:	4b04      	ldr	r3, [pc, #16]	; (800c65c <HAL_RCC_ClockConfig+0x12c>)
 800c64a:	681b      	ldr	r3, [r3, #0]
 800c64c:	039e      	lsls	r6, r3, #14
 800c64e:	d4aa      	bmi.n	800c5a6 <HAL_RCC_ClockConfig+0x76>
 800c650:	e782      	b.n	800c558 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c652:	2003      	movs	r0, #3
 800c654:	e781      	b.n	800c55a <HAL_RCC_ClockConfig+0x2a>
 800c656:	bf00      	nop
 800c658:	40023c00 	.word	0x40023c00
 800c65c:	40023800 	.word	0x40023800
 800c660:	0802ecf8 	.word	0x0802ecf8
 800c664:	20000078 	.word	0x20000078
 800c668:	20000080 	.word	0x20000080

0800c66c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c66c:	4b04      	ldr	r3, [pc, #16]	; (800c680 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c66e:	4905      	ldr	r1, [pc, #20]	; (800c684 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c670:	689b      	ldr	r3, [r3, #8]
 800c672:	4a05      	ldr	r2, [pc, #20]	; (800c688 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c674:	6808      	ldr	r0, [r1, #0]
 800c676:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c67a:	5cd3      	ldrb	r3, [r2, r3]
}
 800c67c:	40d8      	lsrs	r0, r3
 800c67e:	4770      	bx	lr
 800c680:	40023800 	.word	0x40023800
 800c684:	20000078 	.word	0x20000078
 800c688:	0802ed08 	.word	0x0802ed08

0800c68c <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c68c:	4b0e      	ldr	r3, [pc, #56]	; (800c6c8 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c68e:	220f      	movs	r2, #15
 800c690:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c692:	689a      	ldr	r2, [r3, #8]
 800c694:	f002 0203 	and.w	r2, r2, #3
 800c698:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c69a:	689a      	ldr	r2, [r3, #8]
 800c69c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c6a0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c6a2:	689a      	ldr	r2, [r3, #8]
 800c6a4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c6a8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c6aa:	689b      	ldr	r3, [r3, #8]
 800c6ac:	08db      	lsrs	r3, r3, #3
{
 800c6ae:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c6b0:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c6b4:	4c05      	ldr	r4, [pc, #20]	; (800c6cc <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c6b6:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c6b8:	6823      	ldr	r3, [r4, #0]
}
 800c6ba:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c6be:	f003 030f 	and.w	r3, r3, #15
 800c6c2:	600b      	str	r3, [r1, #0]
}
 800c6c4:	4770      	bx	lr
 800c6c6:	bf00      	nop
 800c6c8:	40023800 	.word	0x40023800
 800c6cc:	40023c00 	.word	0x40023c00

0800c6d0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c6d2:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c6d4:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c6d8:	b083      	sub	sp, #12
 800c6da:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c6dc:	d111      	bne.n	800c702 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c6de:	f013 0f0c 	tst.w	r3, #12
 800c6e2:	d16f      	bne.n	800c7c4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c6e4:	0698      	lsls	r0, r3, #26
 800c6e6:	f100 80c2 	bmi.w	800c86e <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c6ea:	f013 0310 	ands.w	r3, r3, #16
 800c6ee:	f000 80bb 	beq.w	800c868 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c6f2:	4b89      	ldr	r3, [pc, #548]	; (800c918 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c6f4:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c6f8:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c6fc:	2000      	movs	r0, #0
}
 800c6fe:	b003      	add	sp, #12
 800c700:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c702:	4b86      	ldr	r3, [pc, #536]	; (800c91c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c704:	4e86      	ldr	r6, [pc, #536]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c706:	2200      	movs	r2, #0
 800c708:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c70a:	f7fd fcd7 	bl	800a0bc <HAL_GetTick>
 800c70e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c710:	e004      	b.n	800c71c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c712:	f7fd fcd3 	bl	800a0bc <HAL_GetTick>
 800c716:	1b43      	subs	r3, r0, r5
 800c718:	2b02      	cmp	r3, #2
 800c71a:	d850      	bhi.n	800c7be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c71c:	6833      	ldr	r3, [r6, #0]
 800c71e:	0118      	lsls	r0, r3, #4
 800c720:	d4f7      	bmi.n	800c712 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c722:	6823      	ldr	r3, [r4, #0]
 800c724:	07d9      	lsls	r1, r3, #31
 800c726:	d506      	bpl.n	800c736 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c728:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c72c:	0712      	lsls	r2, r2, #28
 800c72e:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c732:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c736:	079a      	lsls	r2, r3, #30
 800c738:	d515      	bpl.n	800c766 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c73a:	4979      	ldr	r1, [pc, #484]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c73c:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c73e:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c742:	6865      	ldr	r5, [r4, #4]
 800c744:	0612      	lsls	r2, r2, #24
 800c746:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c74a:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c74e:	4302      	orrs	r2, r0
 800c750:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c754:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c758:	69e2      	ldr	r2, [r4, #28]
 800c75a:	f020 001f 	bic.w	r0, r0, #31
 800c75e:	3a01      	subs	r2, #1
 800c760:	4302      	orrs	r2, r0
 800c762:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c766:	065b      	lsls	r3, r3, #25
 800c768:	d509      	bpl.n	800c77e <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c76a:	1d20      	adds	r0, r4, #4
 800c76c:	c80b      	ldmia	r0, {r0, r1, r3}
 800c76e:	061b      	lsls	r3, r3, #24
 800c770:	4a6b      	ldr	r2, [pc, #428]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c772:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c776:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c77a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c77e:	4b67      	ldr	r3, [pc, #412]	; (800c91c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c780:	4e67      	ldr	r6, [pc, #412]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c782:	2201      	movs	r2, #1
 800c784:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c786:	f7fd fc99 	bl	800a0bc <HAL_GetTick>
 800c78a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c78c:	e004      	b.n	800c798 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c78e:	f7fd fc95 	bl	800a0bc <HAL_GetTick>
 800c792:	1b40      	subs	r0, r0, r5
 800c794:	2802      	cmp	r0, #2
 800c796:	d812      	bhi.n	800c7be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c798:	6833      	ldr	r3, [r6, #0]
 800c79a:	011f      	lsls	r7, r3, #4
 800c79c:	d5f7      	bpl.n	800c78e <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c79e:	6823      	ldr	r3, [r4, #0]
 800c7a0:	e79d      	b.n	800c6de <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c7a2:	f7fd fc8b 	bl	800a0bc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c7a6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c7aa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c7ac:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c7ae:	079b      	lsls	r3, r3, #30
 800c7b0:	f100 80a5 	bmi.w	800c8fe <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c7b4:	f7fd fc82 	bl	800a0bc <HAL_GetTick>
 800c7b8:	1b80      	subs	r0, r0, r6
 800c7ba:	42b8      	cmp	r0, r7
 800c7bc:	d9f6      	bls.n	800c7ac <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c7be:	2003      	movs	r0, #3
}
 800c7c0:	b003      	add	sp, #12
 800c7c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c7c4:	4b55      	ldr	r3, [pc, #340]	; (800c91c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c7c6:	4e56      	ldr	r6, [pc, #344]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c7c8:	2200      	movs	r2, #0
 800c7ca:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c7cc:	f7fd fc76 	bl	800a0bc <HAL_GetTick>
 800c7d0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c7d2:	e004      	b.n	800c7de <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c7d4:	f7fd fc72 	bl	800a0bc <HAL_GetTick>
 800c7d8:	1b43      	subs	r3, r0, r5
 800c7da:	2b02      	cmp	r3, #2
 800c7dc:	d8ef      	bhi.n	800c7be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c7de:	6833      	ldr	r3, [r6, #0]
 800c7e0:	0098      	lsls	r0, r3, #2
 800c7e2:	d4f7      	bmi.n	800c7d4 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c7e4:	6822      	ldr	r2, [r4, #0]
 800c7e6:	0751      	lsls	r1, r2, #29
 800c7e8:	d515      	bpl.n	800c816 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c7ea:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c7ec:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c7f0:	6920      	ldr	r0, [r4, #16]
 800c7f2:	061b      	lsls	r3, r3, #24
 800c7f4:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c7f8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c7fc:	430b      	orrs	r3, r1
 800c7fe:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c802:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c806:	6a21      	ldr	r1, [r4, #32]
 800c808:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c80c:	3901      	subs	r1, #1
 800c80e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c812:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c816:	0713      	lsls	r3, r2, #28
 800c818:	d514      	bpl.n	800c844 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c81a:	4a41      	ldr	r2, [pc, #260]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c81c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c81e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c822:	6920      	ldr	r0, [r4, #16]
 800c824:	071b      	lsls	r3, r3, #28
 800c826:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c82a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c82e:	430b      	orrs	r3, r1
 800c830:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c834:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c838:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c83a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c83e:	430b      	orrs	r3, r1
 800c840:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c844:	4b35      	ldr	r3, [pc, #212]	; (800c91c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c846:	4e36      	ldr	r6, [pc, #216]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c848:	2201      	movs	r2, #1
 800c84a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c84c:	f7fd fc36 	bl	800a0bc <HAL_GetTick>
 800c850:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c852:	e004      	b.n	800c85e <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c854:	f7fd fc32 	bl	800a0bc <HAL_GetTick>
 800c858:	1b40      	subs	r0, r0, r5
 800c85a:	2802      	cmp	r0, #2
 800c85c:	d8af      	bhi.n	800c7be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c85e:	6833      	ldr	r3, [r6, #0]
 800c860:	009f      	lsls	r7, r3, #2
 800c862:	d5f7      	bpl.n	800c854 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c864:	6823      	ldr	r3, [r4, #0]
 800c866:	e73d      	b.n	800c6e4 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c868:	4618      	mov	r0, r3
}
 800c86a:	b003      	add	sp, #12
 800c86c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c86e:	4b2c      	ldr	r3, [pc, #176]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c870:	4d2c      	ldr	r5, [pc, #176]	; (800c924 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c872:	2200      	movs	r2, #0
 800c874:	9201      	str	r2, [sp, #4]
 800c876:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c878:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c87c:	641a      	str	r2, [r3, #64]	; 0x40
 800c87e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c880:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c884:	9301      	str	r3, [sp, #4]
 800c886:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c888:	682b      	ldr	r3, [r5, #0]
 800c88a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c88e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c890:	f7fd fc14 	bl	800a0bc <HAL_GetTick>
 800c894:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c896:	e004      	b.n	800c8a2 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c898:	f7fd fc10 	bl	800a0bc <HAL_GetTick>
 800c89c:	1b83      	subs	r3, r0, r6
 800c89e:	2b02      	cmp	r3, #2
 800c8a0:	d88d      	bhi.n	800c7be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c8a2:	682b      	ldr	r3, [r5, #0]
 800c8a4:	05d9      	lsls	r1, r3, #23
 800c8a6:	d5f7      	bpl.n	800c898 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c8a8:	4d1d      	ldr	r5, [pc, #116]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c8aa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c8ac:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c8ae:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c8b2:	d111      	bne.n	800c8d8 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c8b4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c8b8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c8bc:	d021      	beq.n	800c902 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c8be:	4918      	ldr	r1, [pc, #96]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c8c0:	688a      	ldr	r2, [r1, #8]
 800c8c2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c8c6:	608a      	str	r2, [r1, #8]
 800c8c8:	4a15      	ldr	r2, [pc, #84]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c8ca:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c8cc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c8d0:	430b      	orrs	r3, r1
 800c8d2:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c8d4:	6823      	ldr	r3, [r4, #0]
 800c8d6:	e708      	b.n	800c6ea <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c8d8:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c8dc:	4291      	cmp	r1, r2
 800c8de:	d0eb      	beq.n	800c8b8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c8e0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c8e2:	4a0e      	ldr	r2, [pc, #56]	; (800c91c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c8e4:	2101      	movs	r1, #1
 800c8e6:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c8ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c8ee:	2100      	movs	r1, #0
 800c8f0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c8f4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c8f6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c8f8:	07da      	lsls	r2, r3, #31
 800c8fa:	f53f af52 	bmi.w	800c7a2 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c8fe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c900:	e7d8      	b.n	800c8b4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c902:	4807      	ldr	r0, [pc, #28]	; (800c920 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c904:	6882      	ldr	r2, [r0, #8]
 800c906:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c90a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c90e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c912:	430a      	orrs	r2, r1
 800c914:	6082      	str	r2, [r0, #8]
 800c916:	e7d7      	b.n	800c8c8 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c918:	42471000 	.word	0x42471000
 800c91c:	42470000 	.word	0x42470000
 800c920:	40023800 	.word	0x40023800
 800c924:	40007000 	.word	0x40007000

0800c928 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c928:	b1f0      	cbz	r0, 800c968 <HAL_SDRAM_Init+0x40>
{
 800c92a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c92c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c930:	460d      	mov	r5, r1
 800c932:	4604      	mov	r4, r0
 800c934:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c938:	b18b      	cbz	r3, 800c95e <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c93a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c93c:	2302      	movs	r3, #2
 800c93e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c942:	f851 0b04 	ldr.w	r0, [r1], #4
 800c946:	f000 fe51 	bl	800d5ec <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c94a:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c94e:	4629      	mov	r1, r5
 800c950:	f000 fe8a 	bl	800d668 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c954:	2301      	movs	r3, #1
 800c956:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c95a:	2000      	movs	r0, #0
}
 800c95c:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c95e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c962:	f7f5 fbcf 	bl	8002104 <HAL_SDRAM_MspInit>
 800c966:	e7e8      	b.n	800c93a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c968:	2001      	movs	r0, #1
}
 800c96a:	4770      	bx	lr

0800c96c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c96c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c96e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c972:	2b02      	cmp	r3, #2
{
 800c974:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c976:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c978:	d004      	beq.n	800c984 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c97a:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c97e:	2c01      	cmp	r4, #1
 800c980:	d001      	beq.n	800c986 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c982:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c984:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c986:	460e      	mov	r6, r1
 800c988:	2302      	movs	r3, #2
 800c98a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c98e:	6828      	ldr	r0, [r5, #0]
 800c990:	f000 feb6 	bl	800d700 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c994:	6833      	ldr	r3, [r6, #0]
 800c996:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c998:	bf06      	itte	eq
 800c99a:	2305      	moveq	r3, #5
 800c99c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c9a0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c9a4:	2000      	movs	r0, #0
}
 800c9a6:	bd70      	pop	{r4, r5, r6, pc}

0800c9a8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c9a8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c9aa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c9ae:	2b02      	cmp	r3, #2
{
 800c9b0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c9b2:	b2d8      	uxtb	r0, r3
 800c9b4:	d005      	beq.n	800c9c2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c9b6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c9ba:	2b01      	cmp	r3, #1
 800c9bc:	b2dd      	uxtb	r5, r3
 800c9be:	d001      	beq.n	800c9c4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c9c0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c9c2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c9c4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c9c6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c9c8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c9cc:	f000 fec2 	bl	800d754 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c9d0:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c9d4:	2000      	movs	r0, #0
}
 800c9d6:	bd38      	pop	{r3, r4, r5, pc}

0800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c9d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9dc:	b082      	sub	sp, #8
 800c9de:	461d      	mov	r5, r3
 800c9e0:	4616      	mov	r6, r2
 800c9e2:	460c      	mov	r4, r1
 800c9e4:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c9e6:	f7fd fb69 	bl	800a0bc <HAL_GetTick>
 800c9ea:	4435      	add	r5, r6
 800c9ec:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c9ee:	f7fd fb65 	bl	800a0bc <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c9f2:	4b27      	ldr	r3, [pc, #156]	; (800ca90 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c9f4:	681b      	ldr	r3, [r3, #0]
 800c9f6:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c9fa:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c9fe:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800ca00:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800ca02:	1c73      	adds	r3, r6, #1
 800ca04:	6839      	ldr	r1, [r7, #0]
 800ca06:	d107      	bne.n	800ca18 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800ca08:	688b      	ldr	r3, [r1, #8]
 800ca0a:	ea34 0303 	bics.w	r3, r4, r3
 800ca0e:	d0fb      	beq.n	800ca08 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800ca10:	2000      	movs	r0, #0
}
 800ca12:	b002      	add	sp, #8
 800ca14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800ca18:	688b      	ldr	r3, [r1, #8]
 800ca1a:	ea34 0303 	bics.w	r3, r4, r3
 800ca1e:	d1f7      	bne.n	800ca10 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800ca20:	f7fd fb4c 	bl	800a0bc <HAL_GetTick>
 800ca24:	eba0 0008 	sub.w	r0, r0, r8
 800ca28:	42a8      	cmp	r0, r5
 800ca2a:	d208      	bcs.n	800ca3e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800ca2c:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800ca2e:	2b00      	cmp	r3, #0
      count--;
 800ca30:	9b01      	ldr	r3, [sp, #4]
 800ca32:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800ca36:	bf08      	it	eq
 800ca38:	2500      	moveq	r5, #0
      count--;
 800ca3a:	9301      	str	r3, [sp, #4]
 800ca3c:	e7e1      	b.n	800ca02 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca3e:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800ca42:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca44:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800ca48:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800ca4c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca4e:	d013      	beq.n	800ca78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800ca50:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ca52:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800ca56:	d107      	bne.n	800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800ca58:	681a      	ldr	r2, [r3, #0]
 800ca5a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800ca5e:	601a      	str	r2, [r3, #0]
 800ca60:	681a      	ldr	r2, [r3, #0]
 800ca62:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800ca66:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800ca68:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800ca6a:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800ca6c:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800ca70:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800ca74:	2003      	movs	r0, #3
 800ca76:	e7cc      	b.n	800ca12 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca78:	68ba      	ldr	r2, [r7, #8]
 800ca7a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ca7e:	d002      	beq.n	800ca86 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ca80:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ca84:	d1e4      	bne.n	800ca50 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800ca86:	681a      	ldr	r2, [r3, #0]
 800ca88:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ca8c:	601a      	str	r2, [r3, #0]
 800ca8e:	e7df      	b.n	800ca50 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800ca90:	20000078 	.word	0x20000078

0800ca94 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800ca94:	b538      	push	{r3, r4, r5, lr}
 800ca96:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca98:	6842      	ldr	r2, [r0, #4]
 800ca9a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800ca9e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800caa0:	d006      	beq.n	800cab0 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800caa2:	460a      	mov	r2, r1
 800caa4:	2101      	movs	r1, #1
 800caa6:	f7ff ff97 	bl	800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800caaa:	b978      	cbnz	r0, 800cacc <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800caac:	2000      	movs	r0, #0
}
 800caae:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cab0:	6882      	ldr	r2, [r0, #8]
 800cab2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800cab6:	d01c      	beq.n	800caf2 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800cab8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800cabc:	d00c      	beq.n	800cad8 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cabe:	460a      	mov	r2, r1
 800cac0:	4620      	mov	r0, r4
 800cac2:	2180      	movs	r1, #128	; 0x80
 800cac4:	f7ff ff88 	bl	800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cac8:	2800      	cmp	r0, #0
 800caca:	d0ef      	beq.n	800caac <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cacc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800cace:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800cad2:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cad4:	6563      	str	r3, [r4, #84]	; 0x54
}
 800cad6:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800cad8:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cada:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800cadc:	6829      	ldr	r1, [r5, #0]
 800cade:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800cae2:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cae4:	2101      	movs	r1, #1
 800cae6:	f7ff ff77 	bl	800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800caea:	2800      	cmp	r0, #0
 800caec:	d1ee      	bne.n	800cacc <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800caee:	2000      	movs	r0, #0
 800caf0:	e7dd      	b.n	800caae <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800caf2:	6800      	ldr	r0, [r0, #0]
 800caf4:	6802      	ldr	r2, [r0, #0]
 800caf6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cafa:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cafc:	460a      	mov	r2, r1
 800cafe:	4620      	mov	r0, r4
 800cb00:	2180      	movs	r1, #128	; 0x80
 800cb02:	f7ff ff69 	bl	800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cb06:	2800      	cmp	r0, #0
 800cb08:	d0d0      	beq.n	800caac <SPI_EndRxTransaction+0x18>
 800cb0a:	e7df      	b.n	800cacc <SPI_EndRxTransaction+0x38>

0800cb0c <HAL_SPI_Init>:
  if (hspi == NULL)
 800cb0c:	2800      	cmp	r0, #0
 800cb0e:	d05c      	beq.n	800cbca <HAL_SPI_Init+0xbe>
{
 800cb10:	b570      	push	{r4, r5, r6, lr}
 800cb12:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800cb14:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800cb16:	2800      	cmp	r0, #0
 800cb18:	d047      	beq.n	800cbaa <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800cb1a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800cb1c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800cb20:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800cb24:	2200      	movs	r2, #0
 800cb26:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800cb28:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800cb2c:	2b00      	cmp	r3, #0
 800cb2e:	d042      	beq.n	800cbb6 <HAL_SPI_Init+0xaa>
 800cb30:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800cb32:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cb34:	68a5      	ldr	r5, [r4, #8]
 800cb36:	69a2      	ldr	r2, [r4, #24]
 800cb38:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800cb3a:	2302      	movs	r3, #2
 800cb3c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800cb40:	680b      	ldr	r3, [r1, #0]
 800cb42:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cb46:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cb48:	6863      	ldr	r3, [r4, #4]
 800cb4a:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800cb4e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800cb52:	432b      	orrs	r3, r5
 800cb54:	68e5      	ldr	r5, [r4, #12]
 800cb56:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800cb5a:	432b      	orrs	r3, r5
 800cb5c:	6925      	ldr	r5, [r4, #16]
 800cb5e:	f005 0502 	and.w	r5, r5, #2
 800cb62:	432b      	orrs	r3, r5
 800cb64:	6965      	ldr	r5, [r4, #20]
 800cb66:	f005 0501 	and.w	r5, r5, #1
 800cb6a:	432b      	orrs	r3, r5
 800cb6c:	69e5      	ldr	r5, [r4, #28]
 800cb6e:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800cb72:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800cb76:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800cb7a:	4333      	orrs	r3, r6
 800cb7c:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cb7e:	0c12      	lsrs	r2, r2, #16
 800cb80:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cb84:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cb88:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cb8c:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cb90:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cb92:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cb94:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cb96:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cb98:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cb9a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800cb9e:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cba0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cba2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800cba4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800cba8:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbaa:	6863      	ldr	r3, [r4, #4]
 800cbac:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cbb0:	d0b6      	beq.n	800cb20 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800cbb2:	61e0      	str	r0, [r4, #28]
 800cbb4:	e7b4      	b.n	800cb20 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800cbb6:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800cbb8:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800cbbc:	f7f5 fa1c 	bl	8001ff8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cbc0:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cbc4:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800cbc8:	e7b3      	b.n	800cb32 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800cbca:	2001      	movs	r0, #1
}
 800cbcc:	4770      	bx	lr
 800cbce:	bf00      	nop

0800cbd0 <HAL_SPI_Transmit>:
{
 800cbd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbd4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cbd6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cbda:	2801      	cmp	r0, #1
{
 800cbdc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cbde:	f000 8085 	beq.w	800ccec <HAL_SPI_Transmit+0x11c>
 800cbe2:	461d      	mov	r5, r3
 800cbe4:	2301      	movs	r3, #1
 800cbe6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cbea:	4688      	mov	r8, r1
 800cbec:	4617      	mov	r7, r2
 800cbee:	f7fd fa65 	bl	800a0bc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cbf2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800cbf6:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800cbf8:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cbfa:	b2d8      	uxtb	r0, r3
 800cbfc:	d009      	beq.n	800cc12 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800cbfe:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cc00:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cc02:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cc04:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cc08:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cc0c:	b002      	add	sp, #8
 800cc0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cc12:	f1b8 0f00 	cmp.w	r8, #0
 800cc16:	d0f3      	beq.n	800cc00 <HAL_SPI_Transmit+0x30>
 800cc18:	2f00      	cmp	r7, #0
 800cc1a:	d0f1      	beq.n	800cc00 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cc1c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800cc1e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800cc20:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cc24:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cc26:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cc28:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cc2c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800cc30:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cc34:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800cc36:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800cc38:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800cc3a:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800cc3c:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800cc3e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cc40:	f000 8085 	beq.w	800cd4e <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cc44:	6803      	ldr	r3, [r0, #0]
 800cc46:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800cc48:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cc4a:	d403      	bmi.n	800cc54 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800cc4c:	6803      	ldr	r3, [r0, #0]
 800cc4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cc52:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cc54:	68e3      	ldr	r3, [r4, #12]
 800cc56:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cc5a:	d04b      	beq.n	800ccf4 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cc5c:	6863      	ldr	r3, [r4, #4]
 800cc5e:	2b00      	cmp	r3, #0
 800cc60:	f000 8097 	beq.w	800cd92 <HAL_SPI_Transmit+0x1c2>
 800cc64:	2f01      	cmp	r7, #1
 800cc66:	f000 8094 	beq.w	800cd92 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800cc6a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc6c:	b29b      	uxth	r3, r3
 800cc6e:	b1ab      	cbz	r3, 800cc9c <HAL_SPI_Transmit+0xcc>
 800cc70:	1c68      	adds	r0, r5, #1
 800cc72:	f040 8083 	bne.w	800cd7c <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cc76:	6823      	ldr	r3, [r4, #0]
 800cc78:	689a      	ldr	r2, [r3, #8]
 800cc7a:	0791      	lsls	r1, r2, #30
 800cc7c:	f140 8094 	bpl.w	800cda8 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc82:	7812      	ldrb	r2, [r2, #0]
 800cc84:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cc86:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc88:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc8a:	3901      	subs	r1, #1
 800cc8c:	b289      	uxth	r1, r1
 800cc8e:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc90:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc92:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800cc94:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc96:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800cc98:	2900      	cmp	r1, #0
 800cc9a:	d1ec      	bne.n	800cc76 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cc9c:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cc9e:	4b5b      	ldr	r3, [pc, #364]	; (800ce0c <HAL_SPI_Transmit+0x23c>)
 800cca0:	4a5b      	ldr	r2, [pc, #364]	; (800ce10 <HAL_SPI_Transmit+0x240>)
 800cca2:	681b      	ldr	r3, [r3, #0]
 800cca4:	fba2 2303 	umull	r2, r3, r2, r3
 800cca8:	0d5b      	lsrs	r3, r3, #21
 800ccaa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800ccae:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ccb2:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ccb6:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ccb8:	d107      	bne.n	800ccca <HAL_SPI_Transmit+0xfa>
 800ccba:	e098      	b.n	800cdee <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800ccbc:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ccbe:	6822      	ldr	r2, [r4, #0]
      count--;
 800ccc0:	3b01      	subs	r3, #1
 800ccc2:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ccc4:	6893      	ldr	r3, [r2, #8]
 800ccc6:	061b      	lsls	r3, r3, #24
 800ccc8:	d502      	bpl.n	800ccd0 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800ccca:	9b01      	ldr	r3, [sp, #4]
 800cccc:	2b00      	cmp	r3, #0
 800ccce:	d1f5      	bne.n	800ccbc <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ccd0:	68a3      	ldr	r3, [r4, #8]
 800ccd2:	b933      	cbnz	r3, 800cce2 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ccd4:	6822      	ldr	r2, [r4, #0]
 800ccd6:	9300      	str	r3, [sp, #0]
 800ccd8:	68d3      	ldr	r3, [r2, #12]
 800ccda:	9300      	str	r3, [sp, #0]
 800ccdc:	6893      	ldr	r3, [r2, #8]
 800ccde:	9300      	str	r3, [sp, #0]
 800cce0:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cce2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cce4:	3800      	subs	r0, #0
 800cce6:	bf18      	it	ne
 800cce8:	2001      	movne	r0, #1
error:
 800ccea:	e789      	b.n	800cc00 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800ccec:	2002      	movs	r0, #2
}
 800ccee:	b002      	add	sp, #8
 800ccf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ccf4:	6861      	ldr	r1, [r4, #4]
 800ccf6:	2900      	cmp	r1, #0
 800ccf8:	d176      	bne.n	800cde8 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccfa:	4643      	mov	r3, r8
 800ccfc:	f833 7b02 	ldrh.w	r7, [r3], #2
 800cd00:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd02:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd06:	3b01      	subs	r3, #1
 800cd08:	b29b      	uxth	r3, r3
 800cd0a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cd0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd0e:	b29b      	uxth	r3, r3
 800cd10:	2b00      	cmp	r3, #0
 800cd12:	d0c4      	beq.n	800cc9e <HAL_SPI_Transmit+0xce>
 800cd14:	1c6b      	adds	r3, r5, #1
 800cd16:	d15e      	bne.n	800cdd6 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cd18:	6883      	ldr	r3, [r0, #8]
 800cd1a:	079f      	lsls	r7, r3, #30
 800cd1c:	d50f      	bpl.n	800cd3e <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd1e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cd20:	f832 3b02 	ldrh.w	r3, [r2], #2
 800cd24:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800cd26:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd28:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd2a:	3b01      	subs	r3, #1
 800cd2c:	b29b      	uxth	r3, r3
 800cd2e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cd30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd32:	b29b      	uxth	r3, r3
 800cd34:	2b00      	cmp	r3, #0
 800cd36:	d0b1      	beq.n	800cc9c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cd38:	6883      	ldr	r3, [r0, #8]
 800cd3a:	079f      	lsls	r7, r3, #30
 800cd3c:	d4ef      	bmi.n	800cd1e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cd3e:	f7fd f9bd 	bl	800a0bc <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cd42:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd44:	b29b      	uxth	r3, r3
 800cd46:	2b00      	cmp	r3, #0
 800cd48:	d0a8      	beq.n	800cc9c <HAL_SPI_Transmit+0xcc>
 800cd4a:	6820      	ldr	r0, [r4, #0]
 800cd4c:	e7e4      	b.n	800cd18 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800cd4e:	6803      	ldr	r3, [r0, #0]
 800cd50:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cd54:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800cd56:	6803      	ldr	r3, [r0, #0]
 800cd58:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800cd5c:	6003      	str	r3, [r0, #0]
 800cd5e:	e771      	b.n	800cc44 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cd60:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cd62:	7812      	ldrb	r2, [r2, #0]
 800cd64:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cd66:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd68:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd6a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd6c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cd6e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd70:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd72:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cd74:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd76:	b29b      	uxth	r3, r3
 800cd78:	2b00      	cmp	r3, #0
 800cd7a:	d08f      	beq.n	800cc9c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cd7c:	6823      	ldr	r3, [r4, #0]
 800cd7e:	689a      	ldr	r2, [r3, #8]
 800cd80:	0792      	lsls	r2, r2, #30
 800cd82:	d4ed      	bmi.n	800cd60 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cd84:	f7fd f99a 	bl	800a0bc <HAL_GetTick>
 800cd88:	1b80      	subs	r0, r0, r6
 800cd8a:	42a8      	cmp	r0, r5
 800cd8c:	d3f2      	bcc.n	800cd74 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800cd8e:	2003      	movs	r0, #3
 800cd90:	e736      	b.n	800cc00 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cd92:	f898 3000 	ldrb.w	r3, [r8]
 800cd96:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800cd98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd9a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd9c:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd9e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cda0:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cda2:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cda4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cda6:	e760      	b.n	800cc6a <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cda8:	f7fd f988 	bl	800a0bc <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cdac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cdae:	b29b      	uxth	r3, r3
 800cdb0:	2b00      	cmp	r3, #0
 800cdb2:	f47f af60 	bne.w	800cc76 <HAL_SPI_Transmit+0xa6>
 800cdb6:	e771      	b.n	800cc9c <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cdb8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cdba:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cdbe:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cdc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cdc2:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cdc4:	3b01      	subs	r3, #1
 800cdc6:	b29b      	uxth	r3, r3
 800cdc8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cdca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cdcc:	b29b      	uxth	r3, r3
 800cdce:	2b00      	cmp	r3, #0
 800cdd0:	f43f af64 	beq.w	800cc9c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cdd4:	6822      	ldr	r2, [r4, #0]
 800cdd6:	6893      	ldr	r3, [r2, #8]
 800cdd8:	0799      	lsls	r1, r3, #30
 800cdda:	d4ed      	bmi.n	800cdb8 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cddc:	f7fd f96e 	bl	800a0bc <HAL_GetTick>
 800cde0:	1b80      	subs	r0, r0, r6
 800cde2:	42a8      	cmp	r0, r5
 800cde4:	d3f1      	bcc.n	800cdca <HAL_SPI_Transmit+0x1fa>
 800cde6:	e7d2      	b.n	800cd8e <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cde8:	2f01      	cmp	r7, #1
 800cdea:	d18f      	bne.n	800cd0c <HAL_SPI_Transmit+0x13c>
 800cdec:	e785      	b.n	800ccfa <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cdee:	4633      	mov	r3, r6
 800cdf0:	462a      	mov	r2, r5
 800cdf2:	2180      	movs	r1, #128	; 0x80
 800cdf4:	4620      	mov	r0, r4
 800cdf6:	f7ff fdef 	bl	800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cdfa:	2800      	cmp	r0, #0
 800cdfc:	f43f af68 	beq.w	800ccd0 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ce00:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ce02:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ce04:	4313      	orrs	r3, r2
 800ce06:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ce08:	6562      	str	r2, [r4, #84]	; 0x54
 800ce0a:	e761      	b.n	800ccd0 <HAL_SPI_Transmit+0x100>
 800ce0c:	20000078 	.word	0x20000078
 800ce10:	165e9f81 	.word	0x165e9f81

0800ce14 <HAL_SPI_TransmitReceive>:
{
 800ce14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce18:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ce1a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800ce1e:	2801      	cmp	r0, #1
{
 800ce20:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800ce22:	f000 80ac 	beq.w	800cf7e <HAL_SPI_TransmitReceive+0x16a>
 800ce26:	461e      	mov	r6, r3
 800ce28:	2301      	movs	r3, #1
 800ce2a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ce2e:	4690      	mov	r8, r2
 800ce30:	460f      	mov	r7, r1
 800ce32:	f7fd f943 	bl	800a0bc <HAL_GetTick>
 800ce36:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800ce38:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800ce3c:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ce3e:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800ce40:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ce42:	d011      	beq.n	800ce68 <HAL_SPI_TransmitReceive+0x54>
 800ce44:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800ce48:	d009      	beq.n	800ce5e <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800ce4a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ce4c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ce4e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ce50:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ce54:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ce58:	b002      	add	sp, #8
 800ce5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800ce5e:	68a1      	ldr	r1, [r4, #8]
 800ce60:	2900      	cmp	r1, #0
 800ce62:	d1f2      	bne.n	800ce4a <HAL_SPI_TransmitReceive+0x36>
 800ce64:	2a04      	cmp	r2, #4
 800ce66:	d1f0      	bne.n	800ce4a <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800ce68:	2f00      	cmp	r7, #0
 800ce6a:	f000 808c 	beq.w	800cf86 <HAL_SPI_TransmitReceive+0x172>
 800ce6e:	f1b8 0f00 	cmp.w	r8, #0
 800ce72:	f000 8088 	beq.w	800cf86 <HAL_SPI_TransmitReceive+0x172>
 800ce76:	2e00      	cmp	r6, #0
 800ce78:	f000 8085 	beq.w	800cf86 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800ce7c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800ce80:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800ce84:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800ce86:	bf1c      	itt	ne
 800ce88:	2205      	movne	r2, #5
 800ce8a:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce8e:	2200      	movs	r2, #0
 800ce90:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800ce92:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce96:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800ce98:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800ce9a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce9c:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800ce9e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cea0:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cea2:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cea4:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cea6:	d403      	bmi.n	800ceb0 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cea8:	6811      	ldr	r1, [r2, #0]
 800ceaa:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ceae:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ceb0:	68e1      	ldr	r1, [r4, #12]
 800ceb2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800ceb6:	f000 809e 	beq.w	800cff6 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ceba:	2b00      	cmp	r3, #0
 800cebc:	f000 8091 	beq.w	800cfe2 <HAL_SPI_TransmitReceive+0x1ce>
 800cec0:	2e01      	cmp	r6, #1
 800cec2:	f000 808e 	beq.w	800cfe2 <HAL_SPI_TransmitReceive+0x1ce>
 800cec6:	9b08      	ldr	r3, [sp, #32]
 800cec8:	3301      	adds	r3, #1
        txallowed = 1U;
 800ceca:	f04f 0601 	mov.w	r6, #1
 800cece:	d028      	beq.n	800cf22 <HAL_SPI_TransmitReceive+0x10e>
 800ced0:	e05b      	b.n	800cf8a <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ced2:	6821      	ldr	r1, [r4, #0]
 800ced4:	688b      	ldr	r3, [r1, #8]
 800ced6:	0798      	lsls	r0, r3, #30
 800ced8:	d50f      	bpl.n	800cefa <HAL_SPI_TransmitReceive+0xe6>
 800ceda:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cedc:	b29b      	uxth	r3, r3
 800cede:	b163      	cbz	r3, 800cefa <HAL_SPI_TransmitReceive+0xe6>
 800cee0:	b15e      	cbz	r6, 800cefa <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cee2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cee4:	781b      	ldrb	r3, [r3, #0]
 800cee6:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cee8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ceea:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ceec:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800ceee:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cef0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cef2:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cef4:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cef6:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cef8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cefa:	688a      	ldr	r2, [r1, #8]
 800cefc:	f012 0201 	ands.w	r2, r2, #1
 800cf00:	d00d      	beq.n	800cf1e <HAL_SPI_TransmitReceive+0x10a>
 800cf02:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf04:	b29b      	uxth	r3, r3
 800cf06:	b153      	cbz	r3, 800cf1e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cf08:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cf0a:	68c9      	ldr	r1, [r1, #12]
 800cf0c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cf0e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cf10:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf12:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cf14:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cf16:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cf18:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf1a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cf1c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cf1e:	f7fd f8cd 	bl	800a0bc <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cf22:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cf24:	b292      	uxth	r2, r2
 800cf26:	2a00      	cmp	r2, #0
 800cf28:	d1d3      	bne.n	800ced2 <HAL_SPI_TransmitReceive+0xbe>
 800cf2a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf2c:	b29b      	uxth	r3, r3
 800cf2e:	2b00      	cmp	r3, #0
 800cf30:	d1cf      	bne.n	800ced2 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cf32:	4b79      	ldr	r3, [pc, #484]	; (800d118 <HAL_SPI_TransmitReceive+0x304>)
 800cf34:	4a79      	ldr	r2, [pc, #484]	; (800d11c <HAL_SPI_TransmitReceive+0x308>)
 800cf36:	681b      	ldr	r3, [r3, #0]
 800cf38:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cf3c:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cf3e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cf42:	0d5b      	lsrs	r3, r3, #21
 800cf44:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cf48:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cf4c:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cf4e:	d107      	bne.n	800cf60 <HAL_SPI_TransmitReceive+0x14c>
 800cf50:	e0d2      	b.n	800d0f8 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cf52:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cf54:	6822      	ldr	r2, [r4, #0]
      count--;
 800cf56:	3b01      	subs	r3, #1
 800cf58:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cf5a:	6893      	ldr	r3, [r2, #8]
 800cf5c:	061b      	lsls	r3, r3, #24
 800cf5e:	d502      	bpl.n	800cf66 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cf60:	9b01      	ldr	r3, [sp, #4]
 800cf62:	2b00      	cmp	r3, #0
 800cf64:	d1f5      	bne.n	800cf52 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cf66:	68a0      	ldr	r0, [r4, #8]
 800cf68:	2800      	cmp	r0, #0
 800cf6a:	f040 8082 	bne.w	800d072 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cf6e:	6823      	ldr	r3, [r4, #0]
 800cf70:	9000      	str	r0, [sp, #0]
 800cf72:	68da      	ldr	r2, [r3, #12]
 800cf74:	9200      	str	r2, [sp, #0]
 800cf76:	689b      	ldr	r3, [r3, #8]
 800cf78:	9300      	str	r3, [sp, #0]
 800cf7a:	9b00      	ldr	r3, [sp, #0]
 800cf7c:	e766      	b.n	800ce4c <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800cf7e:	2002      	movs	r0, #2
}
 800cf80:	b002      	add	sp, #8
 800cf82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cf86:	2001      	movs	r0, #1
 800cf88:	e760      	b.n	800ce4c <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cf8a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf8c:	b29b      	uxth	r3, r3
 800cf8e:	b91b      	cbnz	r3, 800cf98 <HAL_SPI_TransmitReceive+0x184>
 800cf90:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf92:	b29b      	uxth	r3, r3
 800cf94:	2b00      	cmp	r3, #0
 800cf96:	d0cc      	beq.n	800cf32 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cf98:	6822      	ldr	r2, [r4, #0]
 800cf9a:	6893      	ldr	r3, [r2, #8]
 800cf9c:	0799      	lsls	r1, r3, #30
 800cf9e:	d50f      	bpl.n	800cfc0 <HAL_SPI_TransmitReceive+0x1ac>
 800cfa0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cfa2:	b29b      	uxth	r3, r3
 800cfa4:	b163      	cbz	r3, 800cfc0 <HAL_SPI_TransmitReceive+0x1ac>
 800cfa6:	b15e      	cbz	r6, 800cfc0 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cfa8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cfaa:	781b      	ldrb	r3, [r3, #0]
 800cfac:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cfae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cfb0:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cfb2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cfb4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cfb6:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cfb8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cfba:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cfbc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cfbe:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cfc0:	6893      	ldr	r3, [r2, #8]
 800cfc2:	f013 0301 	ands.w	r3, r3, #1
 800cfc6:	d004      	beq.n	800cfd2 <HAL_SPI_TransmitReceive+0x1be>
 800cfc8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cfca:	b289      	uxth	r1, r1
 800cfcc:	2900      	cmp	r1, #0
 800cfce:	f040 8087 	bne.w	800d0e0 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cfd2:	f7fd f873 	bl	800a0bc <HAL_GetTick>
 800cfd6:	9b08      	ldr	r3, [sp, #32]
 800cfd8:	1b40      	subs	r0, r0, r5
 800cfda:	4298      	cmp	r0, r3
 800cfdc:	d3d5      	bcc.n	800cf8a <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cfde:	2003      	movs	r0, #3
 800cfe0:	e734      	b.n	800ce4c <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cfe2:	783b      	ldrb	r3, [r7, #0]
 800cfe4:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cfe6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cfe8:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cfea:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cfec:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cfee:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cff0:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cff2:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cff4:	e767      	b.n	800cec6 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cff6:	2b00      	cmp	r3, #0
 800cff8:	d13d      	bne.n	800d076 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cffa:	f837 3b02 	ldrh.w	r3, [r7], #2
 800cffe:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800d000:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800d002:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d004:	3b01      	subs	r3, #1
 800d006:	b29b      	uxth	r3, r3
 800d008:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d00a:	9b08      	ldr	r3, [sp, #32]
 800d00c:	3301      	adds	r3, #1
{
 800d00e:	f04f 0601 	mov.w	r6, #1
 800d012:	d025      	beq.n	800d060 <HAL_SPI_TransmitReceive+0x24c>
 800d014:	e032      	b.n	800d07c <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d016:	6823      	ldr	r3, [r4, #0]
 800d018:	689a      	ldr	r2, [r3, #8]
 800d01a:	0792      	lsls	r2, r2, #30
 800d01c:	d50d      	bpl.n	800d03a <HAL_SPI_TransmitReceive+0x226>
 800d01e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d020:	b292      	uxth	r2, r2
 800d022:	b152      	cbz	r2, 800d03a <HAL_SPI_TransmitReceive+0x226>
 800d024:	b14e      	cbz	r6, 800d03a <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d026:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d028:	f831 2b02 	ldrh.w	r2, [r1], #2
 800d02c:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800d02e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d030:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d032:	3a01      	subs	r2, #1
 800d034:	b292      	uxth	r2, r2
        txallowed = 0U;
 800d036:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800d038:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d03a:	689a      	ldr	r2, [r3, #8]
 800d03c:	f012 0201 	ands.w	r2, r2, #1
 800d040:	d00c      	beq.n	800d05c <HAL_SPI_TransmitReceive+0x248>
 800d042:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d044:	b289      	uxth	r1, r1
 800d046:	b149      	cbz	r1, 800d05c <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d048:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d04a:	68db      	ldr	r3, [r3, #12]
 800d04c:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800d050:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d052:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d054:	3b01      	subs	r3, #1
 800d056:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800d058:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800d05a:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d05c:	f7fd f82e 	bl	800a0bc <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d060:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d062:	b29b      	uxth	r3, r3
 800d064:	2b00      	cmp	r3, #0
 800d066:	d1d6      	bne.n	800d016 <HAL_SPI_TransmitReceive+0x202>
 800d068:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d06a:	b29b      	uxth	r3, r3
 800d06c:	2b00      	cmp	r3, #0
 800d06e:	d1d2      	bne.n	800d016 <HAL_SPI_TransmitReceive+0x202>
 800d070:	e75f      	b.n	800cf32 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800d072:	2000      	movs	r0, #0
 800d074:	e6ea      	b.n	800ce4c <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d076:	2e01      	cmp	r6, #1
 800d078:	d1c7      	bne.n	800d00a <HAL_SPI_TransmitReceive+0x1f6>
 800d07a:	e7be      	b.n	800cffa <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d07c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d07e:	b29b      	uxth	r3, r3
 800d080:	b923      	cbnz	r3, 800d08c <HAL_SPI_TransmitReceive+0x278>
 800d082:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d084:	b29b      	uxth	r3, r3
 800d086:	2b00      	cmp	r3, #0
 800d088:	f43f af53 	beq.w	800cf32 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d08c:	6822      	ldr	r2, [r4, #0]
 800d08e:	6893      	ldr	r3, [r2, #8]
 800d090:	079f      	lsls	r7, r3, #30
 800d092:	d50d      	bpl.n	800d0b0 <HAL_SPI_TransmitReceive+0x29c>
 800d094:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d096:	b29b      	uxth	r3, r3
 800d098:	b153      	cbz	r3, 800d0b0 <HAL_SPI_TransmitReceive+0x29c>
 800d09a:	b14e      	cbz	r6, 800d0b0 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d09c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d09e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800d0a2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800d0a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d0a6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d0a8:	3b01      	subs	r3, #1
 800d0aa:	b29b      	uxth	r3, r3
 800d0ac:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800d0ae:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d0b0:	6893      	ldr	r3, [r2, #8]
 800d0b2:	f013 0301 	ands.w	r3, r3, #1
 800d0b6:	d00c      	beq.n	800d0d2 <HAL_SPI_TransmitReceive+0x2be>
 800d0b8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d0ba:	b289      	uxth	r1, r1
 800d0bc:	b149      	cbz	r1, 800d0d2 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d0be:	68d1      	ldr	r1, [r2, #12]
 800d0c0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d0c2:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800d0c6:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800d0c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d0ca:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d0cc:	3b01      	subs	r3, #1
 800d0ce:	b29b      	uxth	r3, r3
 800d0d0:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d0d2:	f7fc fff3 	bl	800a0bc <HAL_GetTick>
 800d0d6:	9b08      	ldr	r3, [sp, #32]
 800d0d8:	1b40      	subs	r0, r0, r5
 800d0da:	4298      	cmp	r0, r3
 800d0dc:	d3ce      	bcc.n	800d07c <HAL_SPI_TransmitReceive+0x268>
 800d0de:	e77e      	b.n	800cfde <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800d0e0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d0e2:	68d2      	ldr	r2, [r2, #12]
 800d0e4:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800d0e6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800d0e8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d0ea:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800d0ec:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800d0ee:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800d0f0:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d0f2:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800d0f4:	461e      	mov	r6, r3
 800d0f6:	e76c      	b.n	800cfd2 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d0f8:	9a08      	ldr	r2, [sp, #32]
 800d0fa:	462b      	mov	r3, r5
 800d0fc:	2180      	movs	r1, #128	; 0x80
 800d0fe:	4620      	mov	r0, r4
 800d100:	f7ff fc6a 	bl	800c9d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d104:	2800      	cmp	r0, #0
 800d106:	f43f af2e 	beq.w	800cf66 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d10a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d10c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d10e:	4313      	orrs	r3, r2
 800d110:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800d112:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d114:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800d116:	e699      	b.n	800ce4c <HAL_SPI_TransmitReceive+0x38>
 800d118:	20000078 	.word	0x20000078
 800d11c:	165e9f81 	.word	0x165e9f81

0800d120 <HAL_SPI_Receive>:
{
 800d120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d124:	6846      	ldr	r6, [r0, #4]
 800d126:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800d12a:	b082      	sub	sp, #8
 800d12c:	4604      	mov	r4, r0
 800d12e:	4690      	mov	r8, r2
 800d130:	461d      	mov	r5, r3
 800d132:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d134:	d06e      	beq.n	800d214 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800d136:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800d13a:	2b01      	cmp	r3, #1
 800d13c:	d076      	beq.n	800d22c <HAL_SPI_Receive+0x10c>
 800d13e:	2301      	movs	r3, #1
 800d140:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800d144:	f7fc ffba 	bl	800a0bc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800d148:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800d14c:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800d150:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800d152:	fa5f f08c 	uxtb.w	r0, ip
 800d156:	d009      	beq.n	800d16c <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800d158:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800d15a:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800d15c:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800d15e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d162:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d166:	b002      	add	sp, #8
 800d168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800d16c:	2f00      	cmp	r7, #0
 800d16e:	d0f4      	beq.n	800d15a <HAL_SPI_Receive+0x3a>
 800d170:	f1b8 0f00 	cmp.w	r8, #0
 800d174:	d0f1      	beq.n	800d15a <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d176:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800d178:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d17a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800d17e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800d180:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d184:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800d188:	f04f 0104 	mov.w	r1, #4
 800d18c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800d190:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d194:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800d196:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800d198:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800d19a:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800d19e:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800d1a0:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d1a2:	d107      	bne.n	800d1b4 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800d1a4:	6811      	ldr	r1, [r2, #0]
 800d1a6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800d1aa:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800d1ac:	6811      	ldr	r1, [r2, #0]
 800d1ae:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800d1b2:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d1b4:	6811      	ldr	r1, [r2, #0]
 800d1b6:	0648      	lsls	r0, r1, #25
 800d1b8:	d403      	bmi.n	800d1c2 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800d1ba:	6811      	ldr	r1, [r2, #0]
 800d1bc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800d1c0:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800d1c2:	68e1      	ldr	r1, [r4, #12]
 800d1c4:	2900      	cmp	r1, #0
 800d1c6:	d054      	beq.n	800d272 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800d1c8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d1ca:	b289      	uxth	r1, r1
 800d1cc:	b1a9      	cbz	r1, 800d1fa <HAL_SPI_Receive+0xda>
 800d1ce:	1c69      	adds	r1, r5, #1
 800d1d0:	d13e      	bne.n	800d250 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d1d2:	6893      	ldr	r3, [r2, #8]
 800d1d4:	07db      	lsls	r3, r3, #31
 800d1d6:	d544      	bpl.n	800d262 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d1d8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d1da:	68d1      	ldr	r1, [r2, #12]
 800d1dc:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800d1e0:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d1e4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d1e6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d1ea:	fa1f fc8c 	uxth.w	ip, ip
 800d1ee:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d1f2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d1f4:	b29b      	uxth	r3, r3
 800d1f6:	2b00      	cmp	r3, #0
 800d1f8:	d1eb      	bne.n	800d1d2 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d1fa:	4632      	mov	r2, r6
 800d1fc:	4629      	mov	r1, r5
 800d1fe:	4620      	mov	r0, r4
 800d200:	f7ff fc48 	bl	800ca94 <SPI_EndRxTransaction>
 800d204:	b108      	cbz	r0, 800d20a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d206:	2320      	movs	r3, #32
 800d208:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d20a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800d20c:	3800      	subs	r0, #0
 800d20e:	bf18      	it	ne
 800d210:	2001      	movne	r0, #1
error :
 800d212:	e7a2      	b.n	800d15a <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d214:	6883      	ldr	r3, [r0, #8]
 800d216:	2b00      	cmp	r3, #0
 800d218:	d18d      	bne.n	800d136 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d21a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d21c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d21e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d220:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d224:	460a      	mov	r2, r1
 800d226:	f7ff fdf5 	bl	800ce14 <HAL_SPI_TransmitReceive>
 800d22a:	e79c      	b.n	800d166 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800d22c:	2002      	movs	r0, #2
}
 800d22e:	b002      	add	sp, #8
 800d230:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d234:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d236:	68db      	ldr	r3, [r3, #12]
 800d238:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800d23c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d23e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d240:	3b01      	subs	r3, #1
 800d242:	b29b      	uxth	r3, r3
 800d244:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d246:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d248:	b29b      	uxth	r3, r3
 800d24a:	2b00      	cmp	r3, #0
 800d24c:	d0d5      	beq.n	800d1fa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d24e:	6823      	ldr	r3, [r4, #0]
 800d250:	689a      	ldr	r2, [r3, #8]
 800d252:	07d2      	lsls	r2, r2, #31
 800d254:	d4ee      	bmi.n	800d234 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d256:	f7fc ff31 	bl	800a0bc <HAL_GetTick>
 800d25a:	1b80      	subs	r0, r0, r6
 800d25c:	42a8      	cmp	r0, r5
 800d25e:	d243      	bcs.n	800d2e8 <HAL_SPI_Receive+0x1c8>
 800d260:	e7f1      	b.n	800d246 <HAL_SPI_Receive+0x126>
 800d262:	f7fc ff2b 	bl	800a0bc <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d266:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d268:	b29b      	uxth	r3, r3
 800d26a:	2b00      	cmp	r3, #0
 800d26c:	d0c5      	beq.n	800d1fa <HAL_SPI_Receive+0xda>
 800d26e:	6822      	ldr	r2, [r4, #0]
 800d270:	e7af      	b.n	800d1d2 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800d272:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d274:	b292      	uxth	r2, r2
 800d276:	2a00      	cmp	r2, #0
 800d278:	d0bf      	beq.n	800d1fa <HAL_SPI_Receive+0xda>
 800d27a:	1c6f      	adds	r7, r5, #1
 800d27c:	d013      	beq.n	800d2a6 <HAL_SPI_Receive+0x186>
 800d27e:	e02b      	b.n	800d2d8 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d280:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d282:	7b1b      	ldrb	r3, [r3, #12]
 800d284:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d286:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d28a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d28c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d290:	fa1f fc8c 	uxth.w	ip, ip
 800d294:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d298:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d29a:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800d29c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d29e:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800d2a0:	2b00      	cmp	r3, #0
 800d2a2:	d0aa      	beq.n	800d1fa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d2a4:	6823      	ldr	r3, [r4, #0]
 800d2a6:	689a      	ldr	r2, [r3, #8]
 800d2a8:	07d0      	lsls	r0, r2, #31
 800d2aa:	d4e9      	bmi.n	800d280 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d2ac:	f7fc ff06 	bl	800a0bc <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d2b0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d2b2:	b29b      	uxth	r3, r3
 800d2b4:	2b00      	cmp	r3, #0
 800d2b6:	d1f5      	bne.n	800d2a4 <HAL_SPI_Receive+0x184>
 800d2b8:	e79f      	b.n	800d1fa <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d2ba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d2bc:	7b1b      	ldrb	r3, [r3, #12]
 800d2be:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d2c0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d2c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d2c4:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d2c6:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800d2c8:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d2ca:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d2cc:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d2ce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d2d0:	b29b      	uxth	r3, r3
 800d2d2:	2b00      	cmp	r3, #0
 800d2d4:	d091      	beq.n	800d1fa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d2d6:	6823      	ldr	r3, [r4, #0]
 800d2d8:	689a      	ldr	r2, [r3, #8]
 800d2da:	07d1      	lsls	r1, r2, #31
 800d2dc:	d4ed      	bmi.n	800d2ba <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d2de:	f7fc feed 	bl	800a0bc <HAL_GetTick>
 800d2e2:	1b80      	subs	r0, r0, r6
 800d2e4:	42a8      	cmp	r0, r5
 800d2e6:	d3f2      	bcc.n	800d2ce <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800d2e8:	2003      	movs	r0, #3
 800d2ea:	e736      	b.n	800d15a <HAL_SPI_Receive+0x3a>

0800d2ec <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800d2ec:	2800      	cmp	r0, #0
 800d2ee:	f000 8087 	beq.w	800d400 <HAL_TIM_Base_Init+0x114>
{
 800d2f2:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800d2f4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d2f8:	4604      	mov	r4, r0
 800d2fa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d2fe:	2b00      	cmp	r3, #0
 800d300:	d079      	beq.n	800d3f6 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d302:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d304:	493f      	ldr	r1, [pc, #252]	; (800d404 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d306:	2302      	movs	r3, #2
 800d308:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d30c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d30e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d310:	d05d      	beq.n	800d3ce <HAL_TIM_Base_Init+0xe2>
 800d312:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d316:	d031      	beq.n	800d37c <HAL_TIM_Base_Init+0x90>
 800d318:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d31c:	428a      	cmp	r2, r1
 800d31e:	d02d      	beq.n	800d37c <HAL_TIM_Base_Init+0x90>
 800d320:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d324:	428a      	cmp	r2, r1
 800d326:	d029      	beq.n	800d37c <HAL_TIM_Base_Init+0x90>
 800d328:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d32c:	428a      	cmp	r2, r1
 800d32e:	d025      	beq.n	800d37c <HAL_TIM_Base_Init+0x90>
 800d330:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d334:	428a      	cmp	r2, r1
 800d336:	d04a      	beq.n	800d3ce <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d338:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d33c:	428a      	cmp	r2, r1
 800d33e:	d021      	beq.n	800d384 <HAL_TIM_Base_Init+0x98>
 800d340:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d344:	428a      	cmp	r2, r1
 800d346:	d01d      	beq.n	800d384 <HAL_TIM_Base_Init+0x98>
 800d348:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d34c:	428a      	cmp	r2, r1
 800d34e:	d019      	beq.n	800d384 <HAL_TIM_Base_Init+0x98>
 800d350:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d354:	428a      	cmp	r2, r1
 800d356:	d015      	beq.n	800d384 <HAL_TIM_Base_Init+0x98>
 800d358:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d35c:	428a      	cmp	r2, r1
 800d35e:	d011      	beq.n	800d384 <HAL_TIM_Base_Init+0x98>
 800d360:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d364:	428a      	cmp	r2, r1
 800d366:	d00d      	beq.n	800d384 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d368:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d36a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d36c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d370:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d372:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d374:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d376:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d378:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d37a:	e010      	b.n	800d39e <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d37c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d37e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d382:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d384:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d386:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d388:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d38c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d38e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d392:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d394:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d396:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d398:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d39a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d39c:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d39e:	2301      	movs	r3, #1
 800d3a0:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d3a2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d3a6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d3aa:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d3ae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d3b2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d3b6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d3ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d3be:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d3c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d3c6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d3ca:	2000      	movs	r0, #0
}
 800d3cc:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d3ce:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d3d0:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d3d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d3d6:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d3d8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d3dc:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d3de:	69a1      	ldr	r1, [r4, #24]
 800d3e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d3e4:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d3e6:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d3e8:	68e3      	ldr	r3, [r4, #12]
 800d3ea:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d3ec:	6863      	ldr	r3, [r4, #4]
 800d3ee:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d3f0:	6963      	ldr	r3, [r4, #20]
 800d3f2:	6313      	str	r3, [r2, #48]	; 0x30
 800d3f4:	e7d3      	b.n	800d39e <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d3f6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d3fa:	f7f4 fe39 	bl	8002070 <HAL_TIM_Base_MspInit>
 800d3fe:	e780      	b.n	800d302 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d400:	2001      	movs	r0, #1
}
 800d402:	4770      	bx	lr
 800d404:	40010000 	.word	0x40010000

0800d408 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d408:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d40c:	2b01      	cmp	r3, #1
 800d40e:	d12f      	bne.n	800d470 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d410:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d412:	4919      	ldr	r1, [pc, #100]	; (800d478 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d414:	2202      	movs	r2, #2
 800d416:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d41a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d41c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d41e:	f042 0201 	orr.w	r2, r2, #1
 800d422:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d424:	d019      	beq.n	800d45a <HAL_TIM_Base_Start_IT+0x52>
 800d426:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d42a:	d016      	beq.n	800d45a <HAL_TIM_Base_Start_IT+0x52>
 800d42c:	4a13      	ldr	r2, [pc, #76]	; (800d47c <HAL_TIM_Base_Start_IT+0x74>)
 800d42e:	4293      	cmp	r3, r2
 800d430:	d013      	beq.n	800d45a <HAL_TIM_Base_Start_IT+0x52>
 800d432:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d436:	4293      	cmp	r3, r2
 800d438:	d00f      	beq.n	800d45a <HAL_TIM_Base_Start_IT+0x52>
 800d43a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d43e:	4293      	cmp	r3, r2
 800d440:	d00b      	beq.n	800d45a <HAL_TIM_Base_Start_IT+0x52>
 800d442:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d446:	4293      	cmp	r3, r2
 800d448:	d007      	beq.n	800d45a <HAL_TIM_Base_Start_IT+0x52>
 800d44a:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d44e:	4293      	cmp	r3, r2
 800d450:	d003      	beq.n	800d45a <HAL_TIM_Base_Start_IT+0x52>
 800d452:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d456:	4293      	cmp	r3, r2
 800d458:	d104      	bne.n	800d464 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d45a:	689a      	ldr	r2, [r3, #8]
 800d45c:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d460:	2a06      	cmp	r2, #6
 800d462:	d007      	beq.n	800d474 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d464:	681a      	ldr	r2, [r3, #0]
 800d466:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d46a:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d46c:	601a      	str	r2, [r3, #0]
 800d46e:	4770      	bx	lr
    return HAL_ERROR;
 800d470:	2001      	movs	r0, #1
 800d472:	4770      	bx	lr
  return HAL_OK;
 800d474:	2000      	movs	r0, #0
}
 800d476:	4770      	bx	lr
 800d478:	40010000 	.word	0x40010000
 800d47c:	40000400 	.word	0x40000400

0800d480 <HAL_TIM_OC_DelayElapsedCallback>:
 800d480:	4770      	bx	lr
 800d482:	bf00      	nop

0800d484 <HAL_TIM_IC_CaptureCallback>:
 800d484:	4770      	bx	lr
 800d486:	bf00      	nop

0800d488 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d488:	4770      	bx	lr
 800d48a:	bf00      	nop

0800d48c <HAL_TIM_TriggerCallback>:
 800d48c:	4770      	bx	lr
 800d48e:	bf00      	nop

0800d490 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d490:	6803      	ldr	r3, [r0, #0]
 800d492:	691a      	ldr	r2, [r3, #16]
 800d494:	0791      	lsls	r1, r2, #30
{
 800d496:	b510      	push	{r4, lr}
 800d498:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d49a:	d502      	bpl.n	800d4a2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d49c:	68da      	ldr	r2, [r3, #12]
 800d49e:	0792      	lsls	r2, r2, #30
 800d4a0:	d45f      	bmi.n	800d562 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d4a2:	691a      	ldr	r2, [r3, #16]
 800d4a4:	0750      	lsls	r0, r2, #29
 800d4a6:	d502      	bpl.n	800d4ae <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d4a8:	68da      	ldr	r2, [r3, #12]
 800d4aa:	0751      	lsls	r1, r2, #29
 800d4ac:	d446      	bmi.n	800d53c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d4ae:	691a      	ldr	r2, [r3, #16]
 800d4b0:	0712      	lsls	r2, r2, #28
 800d4b2:	d502      	bpl.n	800d4ba <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d4b4:	68da      	ldr	r2, [r3, #12]
 800d4b6:	0710      	lsls	r0, r2, #28
 800d4b8:	d42e      	bmi.n	800d518 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d4ba:	691a      	ldr	r2, [r3, #16]
 800d4bc:	06d2      	lsls	r2, r2, #27
 800d4be:	d502      	bpl.n	800d4c6 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d4c0:	68da      	ldr	r2, [r3, #12]
 800d4c2:	06d0      	lsls	r0, r2, #27
 800d4c4:	d418      	bmi.n	800d4f8 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d4c6:	691a      	ldr	r2, [r3, #16]
 800d4c8:	07d1      	lsls	r1, r2, #31
 800d4ca:	d502      	bpl.n	800d4d2 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d4cc:	68da      	ldr	r2, [r3, #12]
 800d4ce:	07d2      	lsls	r2, r2, #31
 800d4d0:	d45d      	bmi.n	800d58e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d4d2:	691a      	ldr	r2, [r3, #16]
 800d4d4:	0610      	lsls	r0, r2, #24
 800d4d6:	d502      	bpl.n	800d4de <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d4d8:	68da      	ldr	r2, [r3, #12]
 800d4da:	0611      	lsls	r1, r2, #24
 800d4dc:	d45f      	bmi.n	800d59e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d4de:	691a      	ldr	r2, [r3, #16]
 800d4e0:	0652      	lsls	r2, r2, #25
 800d4e2:	d502      	bpl.n	800d4ea <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d4e4:	68da      	ldr	r2, [r3, #12]
 800d4e6:	0650      	lsls	r0, r2, #25
 800d4e8:	d461      	bmi.n	800d5ae <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d4ea:	691a      	ldr	r2, [r3, #16]
 800d4ec:	0691      	lsls	r1, r2, #26
 800d4ee:	d502      	bpl.n	800d4f6 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d4f0:	68da      	ldr	r2, [r3, #12]
 800d4f2:	0692      	lsls	r2, r2, #26
 800d4f4:	d443      	bmi.n	800d57e <HAL_TIM_IRQHandler+0xee>
}
 800d4f6:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d4f8:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d4fc:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d4fe:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d500:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d502:	69db      	ldr	r3, [r3, #28]
 800d504:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d508:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d50a:	d064      	beq.n	800d5d6 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d50c:	f7ff ffba 	bl	800d484 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d510:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d512:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d514:	7722      	strb	r2, [r4, #28]
 800d516:	e7d6      	b.n	800d4c6 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d518:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d51c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d51e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d520:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d522:	69db      	ldr	r3, [r3, #28]
 800d524:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d526:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d528:	d152      	bne.n	800d5d0 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d52a:	f7ff ffa9 	bl	800d480 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d52e:	4620      	mov	r0, r4
 800d530:	f7ff ffaa 	bl	800d488 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d534:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d536:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d538:	7722      	strb	r2, [r4, #28]
 800d53a:	e7be      	b.n	800d4ba <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d53c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d540:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d542:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d544:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d546:	699b      	ldr	r3, [r3, #24]
 800d548:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d54c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d54e:	d13c      	bne.n	800d5ca <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d550:	f7ff ff96 	bl	800d480 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d554:	4620      	mov	r0, r4
 800d556:	f7ff ff97 	bl	800d488 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d55a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d55c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d55e:	7722      	strb	r2, [r4, #28]
 800d560:	e7a5      	b.n	800d4ae <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d562:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d566:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d568:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d56a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d56c:	699b      	ldr	r3, [r3, #24]
 800d56e:	079b      	lsls	r3, r3, #30
 800d570:	d025      	beq.n	800d5be <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d572:	f7ff ff87 	bl	800d484 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d576:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d578:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d57a:	7722      	strb	r2, [r4, #28]
 800d57c:	e791      	b.n	800d4a2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d57e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d582:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d584:	611a      	str	r2, [r3, #16]
}
 800d586:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d58a:	f000 b82b 	b.w	800d5e4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d58e:	f06f 0201 	mvn.w	r2, #1
 800d592:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d594:	4620      	mov	r0, r4
 800d596:	f7f4 fa4d 	bl	8001a34 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d59a:	6823      	ldr	r3, [r4, #0]
 800d59c:	e799      	b.n	800d4d2 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d59e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d5a2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d5a4:	4620      	mov	r0, r4
 800d5a6:	f000 f81f 	bl	800d5e8 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d5aa:	6823      	ldr	r3, [r4, #0]
 800d5ac:	e797      	b.n	800d4de <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d5ae:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d5b2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d5b4:	4620      	mov	r0, r4
 800d5b6:	f7ff ff69 	bl	800d48c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d5ba:	6823      	ldr	r3, [r4, #0]
 800d5bc:	e795      	b.n	800d4ea <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d5be:	f7ff ff5f 	bl	800d480 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d5c2:	4620      	mov	r0, r4
 800d5c4:	f7ff ff60 	bl	800d488 <HAL_TIM_PWM_PulseFinishedCallback>
 800d5c8:	e7d5      	b.n	800d576 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d5ca:	f7ff ff5b 	bl	800d484 <HAL_TIM_IC_CaptureCallback>
 800d5ce:	e7c4      	b.n	800d55a <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d5d0:	f7ff ff58 	bl	800d484 <HAL_TIM_IC_CaptureCallback>
 800d5d4:	e7ae      	b.n	800d534 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d5d6:	f7ff ff53 	bl	800d480 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d5da:	4620      	mov	r0, r4
 800d5dc:	f7ff ff54 	bl	800d488 <HAL_TIM_PWM_PulseFinishedCallback>
 800d5e0:	e796      	b.n	800d510 <HAL_TIM_IRQHandler+0x80>
 800d5e2:	bf00      	nop

0800d5e4 <HAL_TIMEx_CommutCallback>:
 800d5e4:	4770      	bx	lr
 800d5e6:	bf00      	nop

0800d5e8 <HAL_TIMEx_BreakCallback>:
 800d5e8:	4770      	bx	lr
 800d5ea:	bf00      	nop

0800d5ec <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d5ec:	680b      	ldr	r3, [r1, #0]
{
 800d5ee:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d5f0:	b9d3      	cbnz	r3, 800d628 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d5f2:	6803      	ldr	r3, [r0, #0]
 800d5f4:	684c      	ldr	r4, [r1, #4]
 800d5f6:	688a      	ldr	r2, [r1, #8]
 800d5f8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d5fc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d600:	4323      	orrs	r3, r4
 800d602:	4313      	orrs	r3, r2
 800d604:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d608:	4323      	orrs	r3, r4
 800d60a:	4313      	orrs	r3, r2
 800d60c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d610:	4323      	orrs	r3, r4
 800d612:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d616:	4313      	orrs	r3, r2
 800d618:	432b      	orrs	r3, r5
 800d61a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d61c:	4323      	orrs	r3, r4
 800d61e:	4313      	orrs	r3, r2
 800d620:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d622:	bc30      	pop	{r4, r5}
 800d624:	2000      	movs	r0, #0
 800d626:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d628:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d62c:	6803      	ldr	r3, [r0, #0]
 800d62e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d632:	4323      	orrs	r3, r4
 800d634:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d636:	4313      	orrs	r3, r2
 800d638:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d63a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d63c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d63e:	6843      	ldr	r3, [r0, #4]
 800d640:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d644:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d648:	4313      	orrs	r3, r2
 800d64a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d64e:	4323      	orrs	r3, r4
 800d650:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d654:	4313      	orrs	r3, r2
 800d656:	432b      	orrs	r3, r5
 800d658:	698a      	ldr	r2, [r1, #24]
 800d65a:	4323      	orrs	r3, r4
 800d65c:	4313      	orrs	r3, r2
 800d65e:	6043      	str	r3, [r0, #4]
}
 800d660:	bc30      	pop	{r4, r5}
 800d662:	2000      	movs	r0, #0
 800d664:	4770      	bx	lr
 800d666:	bf00      	nop

0800d668 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d668:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d66a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d66c:	bb02      	cbnz	r2, 800d6b0 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d66e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d672:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d676:	3c01      	subs	r4, #1
 800d678:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d67c:	3a01      	subs	r2, #1
 800d67e:	4313      	orrs	r3, r2
 800d680:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d684:	3c01      	subs	r4, #1
 800d686:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d68a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d68e:	3a01      	subs	r2, #1
 800d690:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d694:	698a      	ldr	r2, [r1, #24]
 800d696:	1e69      	subs	r1, r5, #1
 800d698:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d69c:	1e61      	subs	r1, r4, #1
 800d69e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d6a2:	3a01      	subs	r2, #1
 800d6a4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d6a8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d6aa:	bc30      	pop	{r4, r5}
 800d6ac:	2000      	movs	r0, #0
 800d6ae:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d6b0:	68cc      	ldr	r4, [r1, #12]
 800d6b2:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d6b4:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d6b6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d6ba:	3c01      	subs	r4, #1
 800d6bc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d6c0:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d6c4:	3a01      	subs	r2, #1
 800d6c6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d6ca:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d6cc:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d6d0:	68c3      	ldr	r3, [r0, #12]
 800d6d2:	3c01      	subs	r4, #1
 800d6d4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d6d8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d6dc:	3a01      	subs	r2, #1
 800d6de:	690c      	ldr	r4, [r1, #16]
 800d6e0:	4313      	orrs	r3, r2
 800d6e2:	698a      	ldr	r2, [r1, #24]
 800d6e4:	1e69      	subs	r1, r5, #1
 800d6e6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d6ea:	1e61      	subs	r1, r4, #1
 800d6ec:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d6f0:	3a01      	subs	r2, #1
 800d6f2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d6f6:	60c3      	str	r3, [r0, #12]
}
 800d6f8:	bc30      	pop	{r4, r5}
 800d6fa:	2000      	movs	r0, #0
 800d6fc:	4770      	bx	lr
 800d6fe:	bf00      	nop

0800d700 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d700:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d702:	680b      	ldr	r3, [r1, #0]
{
 800d704:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d706:	684a      	ldr	r2, [r1, #4]
{
 800d708:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d70a:	4313      	orrs	r3, r2
 800d70c:	6900      	ldr	r0, [r0, #16]
 800d70e:	68ca      	ldr	r2, [r1, #12]
 800d710:	0d80      	lsrs	r0, r0, #22
 800d712:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d716:	688a      	ldr	r2, [r1, #8]
 800d718:	0580      	lsls	r0, r0, #22
 800d71a:	4303      	orrs	r3, r0
 800d71c:	3a01      	subs	r2, #1
 800d71e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d722:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d724:	f7fc fcca 	bl	800a0bc <HAL_GetTick>
 800d728:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d72a:	1c6b      	adds	r3, r5, #1
 800d72c:	d105      	bne.n	800d73a <FMC_SDRAM_SendCommand+0x3a>
 800d72e:	69a3      	ldr	r3, [r4, #24]
 800d730:	f013 0320 	ands.w	r3, r3, #32
 800d734:	d1fb      	bne.n	800d72e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d736:	4618      	mov	r0, r3
}
 800d738:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d73a:	69a3      	ldr	r3, [r4, #24]
 800d73c:	f013 0320 	ands.w	r3, r3, #32
 800d740:	d0f9      	beq.n	800d736 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d742:	b125      	cbz	r5, 800d74e <FMC_SDRAM_SendCommand+0x4e>
 800d744:	f7fc fcba 	bl	800a0bc <HAL_GetTick>
 800d748:	1b80      	subs	r0, r0, r6
 800d74a:	42a8      	cmp	r0, r5
 800d74c:	d9ed      	bls.n	800d72a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d74e:	2003      	movs	r0, #3
}
 800d750:	bd70      	pop	{r4, r5, r6, pc}
 800d752:	bf00      	nop

0800d754 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d754:	6943      	ldr	r3, [r0, #20]
 800d756:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d75a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d75c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d760:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d764:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d766:	6151      	str	r1, [r2, #20]
}
 800d768:	4770      	bx	lr
 800d76a:	bf00      	nop

0800d76c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d76c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d76e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d772:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d774:	f002 fafe 	bl	800fd74 <xTaskGetSchedulerState>
 800d778:	2801      	cmp	r0, #1
 800d77a:	d100      	bne.n	800d77e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d77c:	bd08      	pop	{r3, pc}
 800d77e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d782:	f000 bc3f 	b.w	800e004 <xPortSysTickHandler>
 800d786:	bf00      	nop

0800d788 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d788:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d78c:	b92b      	cbnz	r3, 800d79a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d78e:	4b06      	ldr	r3, [pc, #24]	; (800d7a8 <osKernelInitialize+0x20>)
 800d790:	6818      	ldr	r0, [r3, #0]
 800d792:	b928      	cbnz	r0, 800d7a0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d794:	2201      	movs	r2, #1
 800d796:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d798:	4770      	bx	lr
    stat = osErrorISR;
 800d79a:	f06f 0005 	mvn.w	r0, #5
 800d79e:	4770      	bx	lr
    } else {
      stat = osError;
 800d7a0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d7a4:	4770      	bx	lr
 800d7a6:	bf00      	nop
 800d7a8:	20002258 	.word	0x20002258

0800d7ac <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d7ac:	b510      	push	{r4, lr}
 800d7ae:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d7b2:	b974      	cbnz	r4, 800d7d2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d7b4:	4b08      	ldr	r3, [pc, #32]	; (800d7d8 <osKernelStart+0x2c>)
 800d7b6:	681a      	ldr	r2, [r3, #0]
 800d7b8:	2a01      	cmp	r2, #1
 800d7ba:	d107      	bne.n	800d7cc <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d7bc:	4907      	ldr	r1, [pc, #28]	; (800d7dc <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d7be:	2202      	movs	r2, #2
 800d7c0:	77cc      	strb	r4, [r1, #31]
 800d7c2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d7c4:	f002 f8b0 	bl	800f928 <vTaskStartScheduler>
      stat = osOK;
 800d7c8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d7ca:	bd10      	pop	{r4, pc}
      stat = osError;
 800d7cc:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d7d0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d7d2:	f06f 0005 	mvn.w	r0, #5
}
 800d7d6:	bd10      	pop	{r4, pc}
 800d7d8:	20002258 	.word	0x20002258
 800d7dc:	e000ed00 	.word	0xe000ed00

0800d7e0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d7e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7e2:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d7e4:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d7e6:	4615      	mov	r5, r2
  hTask = NULL;
 800d7e8:	9405      	str	r4, [sp, #20]
 800d7ea:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d7ee:	b9ea      	cbnz	r2, 800d82c <osThreadNew+0x4c>
 800d7f0:	b350      	cbz	r0, 800d848 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d7f2:	b1f5      	cbz	r5, 800d832 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d7f4:	69ab      	ldr	r3, [r5, #24]
 800d7f6:	bb5b      	cbnz	r3, 800d850 <osThreadNew+0x70>
 800d7f8:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d7fa:	686a      	ldr	r2, [r5, #4]
 800d7fc:	07d2      	lsls	r2, r2, #31
 800d7fe:	d423      	bmi.n	800d848 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d800:	696e      	ldr	r6, [r5, #20]
 800d802:	b34e      	cbz	r6, 800d858 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d804:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d808:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d80a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d80c:	b34c      	cbz	r4, 800d862 <osThreadNew+0x82>
 800d80e:	68ea      	ldr	r2, [r5, #12]
 800d810:	2aab      	cmp	r2, #171	; 0xab
 800d812:	d919      	bls.n	800d848 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d814:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d816:	b1bd      	cbz	r5, 800d848 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d818:	b1b6      	cbz	r6, 800d848 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d81a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d81e:	9300      	str	r3, [sp, #0]
 800d820:	4662      	mov	r2, ip
 800d822:	460b      	mov	r3, r1
 800d824:	4639      	mov	r1, r7
 800d826:	f001 ffbd 	bl	800f7a4 <xTaskCreateStatic>
 800d82a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d82c:	4620      	mov	r0, r4
 800d82e:	b007      	add	sp, #28
 800d830:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d832:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d834:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d836:	ac05      	add	r4, sp, #20
 800d838:	9300      	str	r3, [sp, #0]
 800d83a:	9401      	str	r4, [sp, #4]
 800d83c:	460b      	mov	r3, r1
 800d83e:	4629      	mov	r1, r5
 800d840:	f001 ffea 	bl	800f818 <xTaskCreate>
 800d844:	2801      	cmp	r0, #1
 800d846:	d00a      	beq.n	800d85e <osThreadNew+0x7e>
        return (NULL);
 800d848:	2400      	movs	r4, #0
}
 800d84a:	4620      	mov	r0, r4
 800d84c:	b007      	add	sp, #28
 800d84e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d850:	1e5c      	subs	r4, r3, #1
 800d852:	2c37      	cmp	r4, #55	; 0x37
 800d854:	d9d1      	bls.n	800d7fa <osThreadNew+0x1a>
 800d856:	e7f7      	b.n	800d848 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d858:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d85c:	e7d4      	b.n	800d808 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d85e:	9c05      	ldr	r4, [sp, #20]
 800d860:	e7e4      	b.n	800d82c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d862:	68ee      	ldr	r6, [r5, #12]
 800d864:	2e00      	cmp	r6, #0
 800d866:	d1e1      	bne.n	800d82c <osThreadNew+0x4c>
 800d868:	692d      	ldr	r5, [r5, #16]
 800d86a:	2d00      	cmp	r5, #0
 800d86c:	d1de      	bne.n	800d82c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d86e:	fa1f f28c 	uxth.w	r2, ip
 800d872:	463d      	mov	r5, r7
 800d874:	e7df      	b.n	800d836 <osThreadNew+0x56>
 800d876:	bf00      	nop

0800d878 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d878:	b510      	push	{r4, lr}
 800d87a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d87e:	b92c      	cbnz	r4, 800d88c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d880:	b900      	cbnz	r0, 800d884 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d882:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d884:	f001 fffa 	bl	800f87c <vTaskDelay>
    stat = osOK;
 800d888:	4620      	mov	r0, r4
}
 800d88a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d88c:	f06f 0005 	mvn.w	r0, #5
}
 800d890:	bd10      	pop	{r4, pc}
 800d892:	bf00      	nop

0800d894 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d894:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d896:	b083      	sub	sp, #12
 800d898:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d89c:	b9fe      	cbnz	r6, 800d8de <osSemaphoreNew+0x4a>
 800d89e:	b1f0      	cbz	r0, 800d8de <osSemaphoreNew+0x4a>
 800d8a0:	4288      	cmp	r0, r1
 800d8a2:	460f      	mov	r7, r1
 800d8a4:	d31b      	bcc.n	800d8de <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d8a6:	4615      	mov	r5, r2
 800d8a8:	b192      	cbz	r2, 800d8d0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d8aa:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d8ae:	b1d2      	cbz	r2, 800d8e6 <osSemaphoreNew+0x52>
 800d8b0:	2b4f      	cmp	r3, #79	; 0x4f
 800d8b2:	d914      	bls.n	800d8de <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d8b4:	2801      	cmp	r0, #1
 800d8b6:	d038      	beq.n	800d92a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d8b8:	f000 fd8a 	bl	800e3d0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d8bc:	4604      	mov	r4, r0
 800d8be:	b170      	cbz	r0, 800d8de <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d8c0:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d8c2:	4620      	mov	r0, r4
 800d8c4:	4629      	mov	r1, r5
 800d8c6:	f001 fc35 	bl	800f134 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d8ca:	4620      	mov	r0, r4
 800d8cc:	b003      	add	sp, #12
 800d8ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d8d0:	2801      	cmp	r0, #1
 800d8d2:	d012      	beq.n	800d8fa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d8d4:	f000 fddc 	bl	800e490 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d8d8:	4604      	mov	r4, r0
 800d8da:	2800      	cmp	r0, #0
 800d8dc:	d1f1      	bne.n	800d8c2 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d8de:	2400      	movs	r4, #0
}
 800d8e0:	4620      	mov	r0, r4
 800d8e2:	b003      	add	sp, #12
 800d8e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d8e6:	2b00      	cmp	r3, #0
 800d8e8:	d1f9      	bne.n	800d8de <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d8ea:	2801      	cmp	r0, #1
 800d8ec:	d005      	beq.n	800d8fa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d8ee:	f000 fdcf 	bl	800e490 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d8f2:	4604      	mov	r4, r0
 800d8f4:	2800      	cmp	r0, #0
 800d8f6:	d1e3      	bne.n	800d8c0 <osSemaphoreNew+0x2c>
 800d8f8:	e7f1      	b.n	800d8de <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d8fa:	2203      	movs	r2, #3
 800d8fc:	2100      	movs	r1, #0
 800d8fe:	2001      	movs	r0, #1
 800d900:	f000 fd24 	bl	800e34c <xQueueGenericCreate>
 800d904:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d906:	2c00      	cmp	r4, #0
 800d908:	d0e9      	beq.n	800d8de <osSemaphoreNew+0x4a>
 800d90a:	b917      	cbnz	r7, 800d912 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d90c:	2d00      	cmp	r5, #0
 800d90e:	d1d7      	bne.n	800d8c0 <osSemaphoreNew+0x2c>
 800d910:	e7d7      	b.n	800d8c2 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d912:	2300      	movs	r3, #0
 800d914:	461a      	mov	r2, r3
 800d916:	4619      	mov	r1, r3
 800d918:	4620      	mov	r0, r4
 800d91a:	f000 fdff 	bl	800e51c <xQueueGenericSend>
 800d91e:	2801      	cmp	r0, #1
 800d920:	d0f4      	beq.n	800d90c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d922:	4620      	mov	r0, r4
 800d924:	f001 fbc0 	bl	800f0a8 <vQueueDelete>
 800d928:	e7d9      	b.n	800d8de <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d92a:	4613      	mov	r3, r2
 800d92c:	2203      	movs	r2, #3
 800d92e:	9200      	str	r2, [sp, #0]
 800d930:	4631      	mov	r1, r6
 800d932:	4632      	mov	r2, r6
 800d934:	f000 fc9c 	bl	800e270 <xQueueGenericCreateStatic>
 800d938:	4604      	mov	r4, r0
 800d93a:	e7e4      	b.n	800d906 <osSemaphoreNew+0x72>

0800d93c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d93c:	b370      	cbz	r0, 800d99c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d93e:	b510      	push	{r4, lr}
 800d940:	460c      	mov	r4, r1
 800d942:	b082      	sub	sp, #8
 800d944:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d948:	b1c3      	cbz	r3, 800d97c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d94a:	bb21      	cbnz	r1, 800d996 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d94c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d94e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d950:	f001 fb28 	bl	800efa4 <xQueueReceiveFromISR>
 800d954:	2801      	cmp	r0, #1
 800d956:	d11a      	bne.n	800d98e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d958:	9b01      	ldr	r3, [sp, #4]
 800d95a:	b913      	cbnz	r3, 800d962 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d95c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d95e:	b002      	add	sp, #8
 800d960:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d962:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d966:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d96a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d96e:	f3bf 8f4f 	dsb	sy
 800d972:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d976:	4620      	mov	r0, r4
}
 800d978:	b002      	add	sp, #8
 800d97a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d97c:	f001 f988 	bl	800ec90 <xQueueSemaphoreTake>
 800d980:	2801      	cmp	r0, #1
 800d982:	d0eb      	beq.n	800d95c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d984:	b11c      	cbz	r4, 800d98e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d986:	f06f 0001 	mvn.w	r0, #1
}
 800d98a:	b002      	add	sp, #8
 800d98c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d98e:	f06f 0002 	mvn.w	r0, #2
}
 800d992:	b002      	add	sp, #8
 800d994:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d996:	f06f 0003 	mvn.w	r0, #3
 800d99a:	e7e0      	b.n	800d95e <osSemaphoreAcquire+0x22>
 800d99c:	f06f 0003 	mvn.w	r0, #3
}
 800d9a0:	4770      	bx	lr
 800d9a2:	bf00      	nop

0800d9a4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d9a4:	b330      	cbz	r0, 800d9f4 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d9a6:	b510      	push	{r4, lr}
 800d9a8:	b082      	sub	sp, #8
 800d9aa:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d9ae:	b1ab      	cbz	r3, 800d9dc <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d9b0:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d9b2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d9b4:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d9b6:	f000 ff95 	bl	800e8e4 <xQueueGiveFromISR>
 800d9ba:	2801      	cmp	r0, #1
 800d9bc:	d117      	bne.n	800d9ee <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d9be:	9b01      	ldr	r3, [sp, #4]
 800d9c0:	b193      	cbz	r3, 800d9e8 <osSemaphoreRelease+0x44>
 800d9c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d9c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d9ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d9ce:	f3bf 8f4f 	dsb	sy
 800d9d2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d9d6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d9d8:	b002      	add	sp, #8
 800d9da:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d9dc:	461a      	mov	r2, r3
 800d9de:	4619      	mov	r1, r3
 800d9e0:	f000 fd9c 	bl	800e51c <xQueueGenericSend>
 800d9e4:	2801      	cmp	r0, #1
 800d9e6:	d102      	bne.n	800d9ee <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d9e8:	2000      	movs	r0, #0
}
 800d9ea:	b002      	add	sp, #8
 800d9ec:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d9ee:	f06f 0002 	mvn.w	r0, #2
 800d9f2:	e7fa      	b.n	800d9ea <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d9f4:	f06f 0003 	mvn.w	r0, #3
}
 800d9f8:	4770      	bx	lr
 800d9fa:	bf00      	nop

0800d9fc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d9fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9fe:	b085      	sub	sp, #20
 800da00:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800da04:	b987      	cbnz	r7, 800da28 <osMessageQueueNew+0x2c>
 800da06:	4605      	mov	r5, r0
 800da08:	b170      	cbz	r0, 800da28 <osMessageQueueNew+0x2c>
 800da0a:	b169      	cbz	r1, 800da28 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800da0c:	4614      	mov	r4, r2
 800da0e:	b1ea      	cbz	r2, 800da4c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800da10:	6893      	ldr	r3, [r2, #8]
 800da12:	b163      	cbz	r3, 800da2e <osMessageQueueNew+0x32>
 800da14:	68d2      	ldr	r2, [r2, #12]
 800da16:	2a4f      	cmp	r2, #79	; 0x4f
 800da18:	d906      	bls.n	800da28 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800da1a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800da1c:	b122      	cbz	r2, 800da28 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800da1e:	6966      	ldr	r6, [r4, #20]
 800da20:	fb01 f505 	mul.w	r5, r1, r5
 800da24:	42ae      	cmp	r6, r5
 800da26:	d21c      	bcs.n	800da62 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800da28:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800da2a:	b005      	add	sp, #20
 800da2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800da2e:	68d3      	ldr	r3, [r2, #12]
 800da30:	2b00      	cmp	r3, #0
 800da32:	d1f9      	bne.n	800da28 <osMessageQueueNew+0x2c>
 800da34:	6913      	ldr	r3, [r2, #16]
 800da36:	2b00      	cmp	r3, #0
 800da38:	d1f6      	bne.n	800da28 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800da3a:	6952      	ldr	r2, [r2, #20]
 800da3c:	2a00      	cmp	r2, #0
 800da3e:	d1f3      	bne.n	800da28 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800da40:	f000 fc84 	bl	800e34c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800da44:	2800      	cmp	r0, #0
 800da46:	d0ef      	beq.n	800da28 <osMessageQueueNew+0x2c>
        name = attr->name;
 800da48:	6824      	ldr	r4, [r4, #0]
 800da4a:	e003      	b.n	800da54 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800da4c:	f000 fc7e 	bl	800e34c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800da50:	2800      	cmp	r0, #0
 800da52:	d0e9      	beq.n	800da28 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800da54:	4621      	mov	r1, r4
 800da56:	9003      	str	r0, [sp, #12]
 800da58:	f001 fb6c 	bl	800f134 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800da5c:	9803      	ldr	r0, [sp, #12]
}
 800da5e:	b005      	add	sp, #20
 800da60:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800da62:	9700      	str	r7, [sp, #0]
 800da64:	f000 fc04 	bl	800e270 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800da68:	2800      	cmp	r0, #0
 800da6a:	d1ed      	bne.n	800da48 <osMessageQueueNew+0x4c>
 800da6c:	e7dc      	b.n	800da28 <osMessageQueueNew+0x2c>
 800da6e:	bf00      	nop

0800da70 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800da70:	b570      	push	{r4, r5, r6, lr}
 800da72:	461c      	mov	r4, r3
 800da74:	b082      	sub	sp, #8
 800da76:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800da7a:	b1be      	cbz	r6, 800daac <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800da7c:	b350      	cbz	r0, 800dad4 <osMessageQueuePut+0x64>
 800da7e:	b349      	cbz	r1, 800dad4 <osMessageQueuePut+0x64>
 800da80:	bb43      	cbnz	r3, 800dad4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800da82:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800da84:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800da86:	f000 fec7 	bl	800e818 <xQueueGenericSendFromISR>
 800da8a:	2801      	cmp	r0, #1
 800da8c:	d11e      	bne.n	800dacc <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800da8e:	9b01      	ldr	r3, [sp, #4]
 800da90:	b1cb      	cbz	r3, 800dac6 <osMessageQueuePut+0x56>
 800da92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da9e:	f3bf 8f4f 	dsb	sy
 800daa2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800daa6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800daa8:	b002      	add	sp, #8
 800daaa:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800daac:	b190      	cbz	r0, 800dad4 <osMessageQueuePut+0x64>
 800daae:	b189      	cbz	r1, 800dad4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800dab0:	4633      	mov	r3, r6
 800dab2:	4622      	mov	r2, r4
 800dab4:	f000 fd32 	bl	800e51c <xQueueGenericSend>
 800dab8:	2801      	cmp	r0, #1
 800daba:	d004      	beq.n	800dac6 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800dabc:	b134      	cbz	r4, 800dacc <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800dabe:	f06f 0001 	mvn.w	r0, #1
}
 800dac2:	b002      	add	sp, #8
 800dac4:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800dac6:	2000      	movs	r0, #0
}
 800dac8:	b002      	add	sp, #8
 800daca:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800dacc:	f06f 0002 	mvn.w	r0, #2
}
 800dad0:	b002      	add	sp, #8
 800dad2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800dad4:	f06f 0003 	mvn.w	r0, #3
 800dad8:	e7e6      	b.n	800daa8 <osMessageQueuePut+0x38>
 800dada:	bf00      	nop

0800dadc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800dadc:	b530      	push	{r4, r5, lr}
 800dade:	461c      	mov	r4, r3
 800dae0:	b083      	sub	sp, #12
 800dae2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800dae6:	b1bb      	cbz	r3, 800db18 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800dae8:	b348      	cbz	r0, 800db3e <osMessageQueueGet+0x62>
 800daea:	b341      	cbz	r1, 800db3e <osMessageQueueGet+0x62>
 800daec:	bb3c      	cbnz	r4, 800db3e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800daee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800daf0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800daf2:	f001 fa57 	bl	800efa4 <xQueueReceiveFromISR>
 800daf6:	2801      	cmp	r0, #1
 800daf8:	d11d      	bne.n	800db36 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800dafa:	9b01      	ldr	r3, [sp, #4]
 800dafc:	b1c3      	cbz	r3, 800db30 <osMessageQueueGet+0x54>
 800dafe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db06:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db0a:	f3bf 8f4f 	dsb	sy
 800db0e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800db12:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800db14:	b003      	add	sp, #12
 800db16:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800db18:	b188      	cbz	r0, 800db3e <osMessageQueueGet+0x62>
 800db1a:	b181      	cbz	r1, 800db3e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800db1c:	4622      	mov	r2, r4
 800db1e:	f000 ff39 	bl	800e994 <xQueueReceive>
 800db22:	2801      	cmp	r0, #1
 800db24:	d004      	beq.n	800db30 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800db26:	b134      	cbz	r4, 800db36 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800db28:	f06f 0001 	mvn.w	r0, #1
}
 800db2c:	b003      	add	sp, #12
 800db2e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800db30:	2000      	movs	r0, #0
}
 800db32:	b003      	add	sp, #12
 800db34:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800db36:	f06f 0002 	mvn.w	r0, #2
}
 800db3a:	b003      	add	sp, #12
 800db3c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800db3e:	f06f 0003 	mvn.w	r0, #3
 800db42:	e7e7      	b.n	800db14 <osMessageQueueGet+0x38>

0800db44 <osMessageQueueGetCount>:
 800db44:	b130      	cbz	r0, 800db54 <osMessageQueueGetCount+0x10>
 800db46:	f3ef 8305 	mrs	r3, IPSR
 800db4a:	b10b      	cbz	r3, 800db50 <osMessageQueueGetCount+0xc>
 800db4c:	f001 ba9e 	b.w	800f08c <uxQueueMessagesWaitingFromISR>
 800db50:	f001 ba86 	b.w	800f060 <uxQueueMessagesWaiting>
 800db54:	4770      	bx	lr
 800db56:	bf00      	nop

0800db58 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800db58:	4b04      	ldr	r3, [pc, #16]	; (800db6c <vApplicationGetIdleTaskMemory+0x14>)
 800db5a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800db5c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800db5e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800db60:	4c03      	ldr	r4, [pc, #12]	; (800db70 <vApplicationGetIdleTaskMemory+0x18>)
 800db62:	600c      	str	r4, [r1, #0]
}
 800db64:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800db68:	6013      	str	r3, [r2, #0]
}
 800db6a:	4770      	bx	lr
 800db6c:	200021ac 	.word	0x200021ac
 800db70:	20001fac 	.word	0x20001fac

0800db74 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800db74:	4b05      	ldr	r3, [pc, #20]	; (800db8c <vApplicationGetTimerTaskMemory+0x18>)
 800db76:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800db78:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800db7a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800db7e:	4c04      	ldr	r4, [pc, #16]	; (800db90 <vApplicationGetTimerTaskMemory+0x1c>)
 800db80:	600c      	str	r4, [r1, #0]
}
 800db82:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800db86:	6013      	str	r3, [r2, #0]
}
 800db88:	4770      	bx	lr
 800db8a:	bf00      	nop
 800db8c:	2000265c 	.word	0x2000265c
 800db90:	2000225c 	.word	0x2000225c

0800db94 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800db94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db98:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800db9a:	f001 ff41 	bl	800fa20 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800db9e:	4a54      	ldr	r2, [pc, #336]	; (800dcf0 <pvPortMalloc+0x15c>)
 800dba0:	6816      	ldr	r6, [r2, #0]
 800dba2:	2e00      	cmp	r6, #0
 800dba4:	d06e      	beq.n	800dc84 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800dba6:	4b53      	ldr	r3, [pc, #332]	; (800dcf4 <pvPortMalloc+0x160>)
 800dba8:	681f      	ldr	r7, [r3, #0]
 800dbaa:	423d      	tst	r5, r7
 800dbac:	d12e      	bne.n	800dc0c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800dbae:	b36d      	cbz	r5, 800dc0c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800dbb0:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800dbb4:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800dbb6:	bf1c      	itt	ne
 800dbb8:	f024 0407 	bicne.w	r4, r4, #7
 800dbbc:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800dbbe:	b32c      	cbz	r4, 800dc0c <pvPortMalloc+0x78>
 800dbc0:	f8df c144 	ldr.w	ip, [pc, #324]	; 800dd08 <pvPortMalloc+0x174>
 800dbc4:	f8dc 5000 	ldr.w	r5, [ip]
 800dbc8:	42a5      	cmp	r5, r4
 800dbca:	d31f      	bcc.n	800dc0c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800dbcc:	484a      	ldr	r0, [pc, #296]	; (800dcf8 <pvPortMalloc+0x164>)
 800dbce:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800dbd0:	e003      	b.n	800dbda <pvPortMalloc+0x46>
 800dbd2:	681a      	ldr	r2, [r3, #0]
 800dbd4:	b122      	cbz	r2, 800dbe0 <pvPortMalloc+0x4c>
 800dbd6:	4618      	mov	r0, r3
 800dbd8:	4613      	mov	r3, r2
 800dbda:	6859      	ldr	r1, [r3, #4]
 800dbdc:	42a1      	cmp	r1, r4
 800dbde:	d3f8      	bcc.n	800dbd2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800dbe0:	42b3      	cmp	r3, r6
 800dbe2:	d013      	beq.n	800dc0c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800dbe4:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dbe6:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800dbe8:	f858 eb08 	ldr.w	lr, [r8], #8
 800dbec:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dbf0:	2a10      	cmp	r2, #16
 800dbf2:	d929      	bls.n	800dc48 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dbf4:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800dbf6:	0748      	lsls	r0, r1, #29
 800dbf8:	d00f      	beq.n	800dc1a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800dbfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbfe:	f383 8811 	msr	BASEPRI, r3
 800dc02:	f3bf 8f6f 	isb	sy
 800dc06:	f3bf 8f4f 	dsb	sy
 800dc0a:	e7fe      	b.n	800dc0a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dc0c:	f001 ff10 	bl	800fa30 <xTaskResumeAll>
 800dc10:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dc14:	4640      	mov	r0, r8
 800dc16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800dc1a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc1c:	4a36      	ldr	r2, [pc, #216]	; (800dcf8 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dc1e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc20:	4614      	mov	r4, r2
 800dc22:	6812      	ldr	r2, [r2, #0]
 800dc24:	4291      	cmp	r1, r2
 800dc26:	d8fb      	bhi.n	800dc20 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dc28:	6860      	ldr	r0, [r4, #4]
 800dc2a:	eb04 0e00 	add.w	lr, r4, r0
 800dc2e:	4571      	cmp	r1, lr
 800dc30:	d04b      	beq.n	800dcca <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc32:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc36:	eb01 000e 	add.w	r0, r1, lr
 800dc3a:	4282      	cmp	r2, r0
 800dc3c:	d051      	beq.n	800dce2 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dc3e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc40:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dc42:	bf18      	it	ne
 800dc44:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dc46:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dc48:	4a2c      	ldr	r2, [pc, #176]	; (800dcfc <pvPortMalloc+0x168>)
 800dc4a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dc4c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dc4e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800dc50:	bf38      	it	cc
 800dc52:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800dc54:	4a2a      	ldr	r2, [pc, #168]	; (800dd00 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dc56:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800dc5a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800dc5c:	2000      	movs	r0, #0
 800dc5e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800dc62:	6813      	ldr	r3, [r2, #0]
 800dc64:	3301      	adds	r3, #1
 800dc66:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800dc68:	f001 fee2 	bl	800fa30 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800dc6c:	f018 0f07 	tst.w	r8, #7
 800dc70:	d0d0      	beq.n	800dc14 <pvPortMalloc+0x80>
 800dc72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc76:	f383 8811 	msr	BASEPRI, r3
 800dc7a:	f3bf 8f6f 	isb	sy
 800dc7e:	f3bf 8f4f 	dsb	sy
 800dc82:	e7fe      	b.n	800dc82 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800dc84:	4b1f      	ldr	r3, [pc, #124]	; (800dd04 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800dc86:	075e      	lsls	r6, r3, #29
 800dc88:	d118      	bne.n	800dcbc <pvPortMalloc+0x128>
 800dc8a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800dc8e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800dc90:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dc92:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800dc96:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc98:	4a18      	ldr	r2, [pc, #96]	; (800dcfc <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dc9a:	4817      	ldr	r0, [pc, #92]	; (800dcf8 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dc9c:	4c15      	ldr	r4, [pc, #84]	; (800dcf4 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dc9e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800dca0:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dca2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dca4:	4a18      	ldr	r2, [pc, #96]	; (800dd08 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dca6:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dcaa:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800dcac:	2200      	movs	r2, #0
 800dcae:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dcb0:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800dcb2:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800dcb6:	e9c1 6300 	strd	r6, r3, [r1]
}
 800dcba:	e776      	b.n	800dbaa <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800dcbc:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800dcbe:	f021 0107 	bic.w	r1, r1, #7
 800dcc2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dcc6:	460b      	mov	r3, r1
 800dcc8:	e7e2      	b.n	800dc90 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dcca:	6849      	ldr	r1, [r1, #4]
 800dccc:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dcd0:	eb04 010e 	add.w	r1, r4, lr
 800dcd4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dcd6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dcda:	d001      	beq.n	800dce0 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dcdc:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800dcde:	e7b2      	b.n	800dc46 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dce0:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dce2:	42b2      	cmp	r2, r6
 800dce4:	d0ab      	beq.n	800dc3e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dce6:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dce8:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dcea:	4470      	add	r0, lr
 800dcec:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dcee:	e7a6      	b.n	800dc3e <pvPortMalloc+0xaa>
 800dcf0:	20002708 	.word	0x20002708
 800dcf4:	2001270c 	.word	0x2001270c
 800dcf8:	20012720 	.word	0x20012720
 800dcfc:	20012714 	.word	0x20012714
 800dd00:	20012718 	.word	0x20012718
 800dd04:	2000270c 	.word	0x2000270c
 800dd08:	20012710 	.word	0x20012710

0800dd0c <vPortFree>:
	if( pv != NULL )
 800dd0c:	b1d0      	cbz	r0, 800dd44 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dd0e:	4a2c      	ldr	r2, [pc, #176]	; (800ddc0 <vPortFree+0xb4>)
 800dd10:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dd14:	6812      	ldr	r2, [r2, #0]
 800dd16:	4213      	tst	r3, r2
 800dd18:	d00b      	beq.n	800dd32 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800dd1a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800dd1e:	b191      	cbz	r1, 800dd46 <vPortFree+0x3a>
 800dd20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd24:	f383 8811 	msr	BASEPRI, r3
 800dd28:	f3bf 8f6f 	isb	sy
 800dd2c:	f3bf 8f4f 	dsb	sy
 800dd30:	e7fe      	b.n	800dd30 <vPortFree+0x24>
 800dd32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd36:	f383 8811 	msr	BASEPRI, r3
 800dd3a:	f3bf 8f6f 	isb	sy
 800dd3e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dd42:	e7fe      	b.n	800dd42 <vPortFree+0x36>
 800dd44:	4770      	bx	lr
{
 800dd46:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dd48:	ea23 0302 	bic.w	r3, r3, r2
{
 800dd4c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dd4e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dd52:	4c1c      	ldr	r4, [pc, #112]	; (800ddc4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dd54:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800dd56:	f001 fe63 	bl	800fa20 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dd5a:	9801      	ldr	r0, [sp, #4]
 800dd5c:	6822      	ldr	r2, [r4, #0]
 800dd5e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dd62:	4b19      	ldr	r3, [pc, #100]	; (800ddc8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dd64:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800dd66:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dd68:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dd6a:	461a      	mov	r2, r3
 800dd6c:	681b      	ldr	r3, [r3, #0]
 800dd6e:	4298      	cmp	r0, r3
 800dd70:	d8fb      	bhi.n	800dd6a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dd72:	6854      	ldr	r4, [r2, #4]
 800dd74:	eb02 0e04 	add.w	lr, r2, r4
 800dd78:	4570      	cmp	r0, lr
 800dd7a:	d010      	beq.n	800dd9e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd7c:	eb00 0c01 	add.w	ip, r0, r1
 800dd80:	4563      	cmp	r3, ip
 800dd82:	d014      	beq.n	800ddae <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800dd84:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd86:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dd88:	bf18      	it	ne
 800dd8a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800dd8c:	4a0f      	ldr	r2, [pc, #60]	; (800ddcc <vPortFree+0xc0>)
 800dd8e:	6813      	ldr	r3, [r2, #0]
 800dd90:	3301      	adds	r3, #1
 800dd92:	6013      	str	r3, [r2, #0]
}
 800dd94:	b002      	add	sp, #8
 800dd96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800dd9a:	f001 be49 	b.w	800fa30 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd9e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dda0:	1850      	adds	r0, r2, r1
 800dda2:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dda4:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dda6:	d001      	beq.n	800ddac <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dda8:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800ddaa:	e7ef      	b.n	800dd8c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ddac:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ddae:	4c08      	ldr	r4, [pc, #32]	; (800ddd0 <vPortFree+0xc4>)
 800ddb0:	6824      	ldr	r4, [r4, #0]
 800ddb2:	42a3      	cmp	r3, r4
 800ddb4:	d0e6      	beq.n	800dd84 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ddb6:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ddba:	4421      	add	r1, r4
 800ddbc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ddbe:	e7e1      	b.n	800dd84 <vPortFree+0x78>
 800ddc0:	2001270c 	.word	0x2001270c
 800ddc4:	20012710 	.word	0x20012710
 800ddc8:	20012720 	.word	0x20012720
 800ddcc:	2001271c 	.word	0x2001271c
 800ddd0:	20002708 	.word	0x20002708

0800ddd4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ddd4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ddd8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dddc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ddde:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dde2:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dde6:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800dde8:	4770      	bx	lr
 800ddea:	bf00      	nop

0800ddec <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800ddec:	2300      	movs	r3, #0
 800ddee:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800ddf0:	4770      	bx	lr
 800ddf2:	bf00      	nop

0800ddf4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800ddf4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800ddf6:	689a      	ldr	r2, [r3, #8]
 800ddf8:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800ddfa:	6802      	ldr	r2, [r0, #0]
{
 800ddfc:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ddfe:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800de00:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800de02:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800de04:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800de06:	6099      	str	r1, [r3, #8]
}
 800de08:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800de0c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800de0e:	6002      	str	r2, [r0, #0]
}
 800de10:	4770      	bx	lr
 800de12:	bf00      	nop

0800de14 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800de14:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800de16:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800de18:	1c6b      	adds	r3, r5, #1
 800de1a:	d010      	beq.n	800de3e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800de1c:	f100 0308 	add.w	r3, r0, #8
 800de20:	461c      	mov	r4, r3
 800de22:	685b      	ldr	r3, [r3, #4]
 800de24:	681a      	ldr	r2, [r3, #0]
 800de26:	42aa      	cmp	r2, r5
 800de28:	d9fa      	bls.n	800de20 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800de2a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800de2c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800de2e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800de30:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800de32:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800de34:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800de36:	6108      	str	r0, [r1, #16]
}
 800de38:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800de3a:	6002      	str	r2, [r0, #0]
}
 800de3c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800de3e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800de40:	6863      	ldr	r3, [r4, #4]
 800de42:	e7f2      	b.n	800de2a <vListInsert+0x16>

0800de44 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800de44:	6903      	ldr	r3, [r0, #16]
{
 800de46:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800de48:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800de4c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800de4e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800de50:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800de52:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800de54:	bf08      	it	eq
 800de56:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800de58:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800de5a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800de5e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800de60:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800de62:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800de64:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800de66:	6818      	ldr	r0, [r3, #0]
}
 800de68:	4770      	bx	lr
 800de6a:	bf00      	nop

0800de6c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800de6c:	4808      	ldr	r0, [pc, #32]	; (800de90 <prvPortStartFirstTask+0x24>)
 800de6e:	6800      	ldr	r0, [r0, #0]
 800de70:	6800      	ldr	r0, [r0, #0]
 800de72:	f380 8808 	msr	MSP, r0
 800de76:	f04f 0000 	mov.w	r0, #0
 800de7a:	f380 8814 	msr	CONTROL, r0
 800de7e:	b662      	cpsie	i
 800de80:	b661      	cpsie	f
 800de82:	f3bf 8f4f 	dsb	sy
 800de86:	f3bf 8f6f 	isb	sy
 800de8a:	df00      	svc	0
 800de8c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800de8e:	0000      	.short	0x0000
 800de90:	e000ed08 	.word	0xe000ed08

0800de94 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800de94:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800dea4 <vPortEnableVFP+0x10>
 800de98:	6801      	ldr	r1, [r0, #0]
 800de9a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800de9e:	6001      	str	r1, [r0, #0]
 800dea0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800dea2:	0000      	.short	0x0000
 800dea4:	e000ed88 	.word	0xe000ed88

0800dea8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800dea8:	4b0e      	ldr	r3, [pc, #56]	; (800dee4 <prvTaskExitError+0x3c>)
 800deaa:	681b      	ldr	r3, [r3, #0]
{
 800deac:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800deae:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800deb0:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800deb2:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800deb4:	d008      	beq.n	800dec8 <prvTaskExitError+0x20>
 800deb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deba:	f383 8811 	msr	BASEPRI, r3
 800debe:	f3bf 8f6f 	isb	sy
 800dec2:	f3bf 8f4f 	dsb	sy
 800dec6:	e7fe      	b.n	800dec6 <prvTaskExitError+0x1e>
 800dec8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800decc:	f383 8811 	msr	BASEPRI, r3
 800ded0:	f3bf 8f6f 	isb	sy
 800ded4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ded8:	9b01      	ldr	r3, [sp, #4]
 800deda:	2b00      	cmp	r3, #0
 800dedc:	d0fc      	beq.n	800ded8 <prvTaskExitError+0x30>
}
 800dede:	b002      	add	sp, #8
 800dee0:	4770      	bx	lr
 800dee2:	bf00      	nop
 800dee4:	20000084 	.word	0x20000084

0800dee8 <pxPortInitialiseStack>:
{
 800dee8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800deea:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800deee:	4c07      	ldr	r4, [pc, #28]	; (800df0c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800def0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800def4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800def8:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800defc:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800df00:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800df04:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df08:	3844      	subs	r0, #68	; 0x44
 800df0a:	4770      	bx	lr
 800df0c:	0800dea9 	.word	0x0800dea9

0800df10 <SVC_Handler>:
	__asm volatile (
 800df10:	4b07      	ldr	r3, [pc, #28]	; (800df30 <pxCurrentTCBConst2>)
 800df12:	6819      	ldr	r1, [r3, #0]
 800df14:	6808      	ldr	r0, [r1, #0]
 800df16:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df1a:	f380 8809 	msr	PSP, r0
 800df1e:	f3bf 8f6f 	isb	sy
 800df22:	f04f 0000 	mov.w	r0, #0
 800df26:	f380 8811 	msr	BASEPRI, r0
 800df2a:	4770      	bx	lr
 800df2c:	f3af 8000 	nop.w

0800df30 <pxCurrentTCBConst2>:
 800df30:	20012770 	.word	0x20012770

0800df34 <vPortEnterCritical>:
 800df34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df38:	f383 8811 	msr	BASEPRI, r3
 800df3c:	f3bf 8f6f 	isb	sy
 800df40:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800df44:	4a0b      	ldr	r2, [pc, #44]	; (800df74 <vPortEnterCritical+0x40>)
 800df46:	6813      	ldr	r3, [r2, #0]
 800df48:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800df4a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800df4c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800df4e:	d000      	beq.n	800df52 <vPortEnterCritical+0x1e>
}
 800df50:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800df52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df56:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800df5a:	b2db      	uxtb	r3, r3
 800df5c:	2b00      	cmp	r3, #0
 800df5e:	d0f7      	beq.n	800df50 <vPortEnterCritical+0x1c>
 800df60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df64:	f383 8811 	msr	BASEPRI, r3
 800df68:	f3bf 8f6f 	isb	sy
 800df6c:	f3bf 8f4f 	dsb	sy
 800df70:	e7fe      	b.n	800df70 <vPortEnterCritical+0x3c>
 800df72:	bf00      	nop
 800df74:	20000084 	.word	0x20000084

0800df78 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800df78:	4a08      	ldr	r2, [pc, #32]	; (800df9c <vPortExitCritical+0x24>)
 800df7a:	6813      	ldr	r3, [r2, #0]
 800df7c:	b943      	cbnz	r3, 800df90 <vPortExitCritical+0x18>
 800df7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df82:	f383 8811 	msr	BASEPRI, r3
 800df86:	f3bf 8f6f 	isb	sy
 800df8a:	f3bf 8f4f 	dsb	sy
 800df8e:	e7fe      	b.n	800df8e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800df90:	3b01      	subs	r3, #1
 800df92:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800df94:	b90b      	cbnz	r3, 800df9a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800df96:	f383 8811 	msr	BASEPRI, r3
}
 800df9a:	4770      	bx	lr
 800df9c:	20000084 	.word	0x20000084

0800dfa0 <PendSV_Handler>:
	__asm volatile
 800dfa0:	f3ef 8009 	mrs	r0, PSP
 800dfa4:	f3bf 8f6f 	isb	sy
 800dfa8:	4b15      	ldr	r3, [pc, #84]	; (800e000 <pxCurrentTCBConst>)
 800dfaa:	681a      	ldr	r2, [r3, #0]
 800dfac:	f01e 0f10 	tst.w	lr, #16
 800dfb0:	bf08      	it	eq
 800dfb2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800dfb6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfba:	6010      	str	r0, [r2, #0]
 800dfbc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800dfc0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800dfc4:	f380 8811 	msr	BASEPRI, r0
 800dfc8:	f3bf 8f4f 	dsb	sy
 800dfcc:	f3bf 8f6f 	isb	sy
 800dfd0:	f001 fd54 	bl	800fa7c <vTaskSwitchContext>
 800dfd4:	f04f 0000 	mov.w	r0, #0
 800dfd8:	f380 8811 	msr	BASEPRI, r0
 800dfdc:	bc09      	pop	{r0, r3}
 800dfde:	6819      	ldr	r1, [r3, #0]
 800dfe0:	6808      	ldr	r0, [r1, #0]
 800dfe2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfe6:	f01e 0f10 	tst.w	lr, #16
 800dfea:	bf08      	it	eq
 800dfec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800dff0:	f380 8809 	msr	PSP, r0
 800dff4:	f3bf 8f6f 	isb	sy
 800dff8:	4770      	bx	lr
 800dffa:	bf00      	nop
 800dffc:	f3af 8000 	nop.w

0800e000 <pxCurrentTCBConst>:
 800e000:	20012770 	.word	0x20012770

0800e004 <xPortSysTickHandler>:
{
 800e004:	b508      	push	{r3, lr}
	__asm volatile
 800e006:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e00a:	f383 8811 	msr	BASEPRI, r3
 800e00e:	f3bf 8f6f 	isb	sy
 800e012:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e016:	f001 fd21 	bl	800fa5c <xTaskIncrementTick>
 800e01a:	b128      	cbz	r0, 800e028 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e01c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e020:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e024:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e028:	2300      	movs	r3, #0
 800e02a:	f383 8811 	msr	BASEPRI, r3
}
 800e02e:	bd08      	pop	{r3, pc}

0800e030 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e030:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e034:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e036:	4906      	ldr	r1, [pc, #24]	; (800e050 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e038:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e03a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e03c:	680b      	ldr	r3, [r1, #0]
 800e03e:	4905      	ldr	r1, [pc, #20]	; (800e054 <vPortSetupTimerInterrupt+0x24>)
 800e040:	fba1 1303 	umull	r1, r3, r1, r3
 800e044:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e046:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e048:	3b01      	subs	r3, #1
 800e04a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e04c:	6110      	str	r0, [r2, #16]
}
 800e04e:	4770      	bx	lr
 800e050:	20000078 	.word	0x20000078
 800e054:	10624dd3 	.word	0x10624dd3

0800e058 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e058:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e05c:	4a49      	ldr	r2, [pc, #292]	; (800e184 <xPortStartScheduler+0x12c>)
 800e05e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e062:	4291      	cmp	r1, r2
 800e064:	d043      	beq.n	800e0ee <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e066:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e06a:	4b47      	ldr	r3, [pc, #284]	; (800e188 <xPortStartScheduler+0x130>)
 800e06c:	429a      	cmp	r2, r3
 800e06e:	d035      	beq.n	800e0dc <xPortStartScheduler+0x84>
{
 800e070:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e072:	4b46      	ldr	r3, [pc, #280]	; (800e18c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e074:	4846      	ldr	r0, [pc, #280]	; (800e190 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e076:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e078:	4c46      	ldr	r4, [pc, #280]	; (800e194 <xPortStartScheduler+0x13c>)
{
 800e07a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e07c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e07e:	b2d2      	uxtb	r2, r2
 800e080:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e082:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e084:	781b      	ldrb	r3, [r3, #0]
 800e086:	b2db      	uxtb	r3, r3
 800e088:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e08c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e090:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e094:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e098:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e09a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e09c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e09e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e0a0:	bf48      	it	mi
 800e0a2:	2206      	movmi	r2, #6
 800e0a4:	d511      	bpl.n	800e0ca <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e0a6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e0aa:	005b      	lsls	r3, r3, #1
 800e0ac:	b2db      	uxtb	r3, r3
 800e0ae:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e0b2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e0b6:	0609      	lsls	r1, r1, #24
 800e0b8:	4610      	mov	r0, r2
 800e0ba:	f102 32ff 	add.w	r2, r2, #4294967295
 800e0be:	d4f2      	bmi.n	800e0a6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e0c0:	2803      	cmp	r0, #3
 800e0c2:	6020      	str	r0, [r4, #0]
 800e0c4:	f88d 3007 	strb.w	r3, [sp, #7]
 800e0c8:	d01a      	beq.n	800e100 <xPortStartScheduler+0xa8>
	__asm volatile
 800e0ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ce:	f383 8811 	msr	BASEPRI, r3
 800e0d2:	f3bf 8f6f 	isb	sy
 800e0d6:	f3bf 8f4f 	dsb	sy
 800e0da:	e7fe      	b.n	800e0da <xPortStartScheduler+0x82>
 800e0dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0e0:	f383 8811 	msr	BASEPRI, r3
 800e0e4:	f3bf 8f6f 	isb	sy
 800e0e8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e0ec:	e7fe      	b.n	800e0ec <xPortStartScheduler+0x94>
 800e0ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0f2:	f383 8811 	msr	BASEPRI, r3
 800e0f6:	f3bf 8f6f 	isb	sy
 800e0fa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e0fe:	e7fe      	b.n	800e0fe <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e100:	9b02      	ldr	r3, [sp, #8]
 800e102:	4a22      	ldr	r2, [pc, #136]	; (800e18c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e104:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e108:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e10c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e10e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e110:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e112:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e116:	4c20      	ldr	r4, [pc, #128]	; (800e198 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e118:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e11c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e120:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e124:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e128:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e12c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e12e:	f7ff ff7f 	bl	800e030 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e132:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e134:	f7ff feae 	bl	800de94 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e138:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e13c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e140:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e144:	f7ff fe92 	bl	800de6c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e148:	f001 fc98 	bl	800fa7c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e14c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e14e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e150:	3301      	adds	r3, #1
 800e152:	d008      	beq.n	800e166 <xPortStartScheduler+0x10e>
 800e154:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e158:	f383 8811 	msr	BASEPRI, r3
 800e15c:	f3bf 8f6f 	isb	sy
 800e160:	f3bf 8f4f 	dsb	sy
 800e164:	e7fe      	b.n	800e164 <xPortStartScheduler+0x10c>
 800e166:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e16a:	f383 8811 	msr	BASEPRI, r3
 800e16e:	f3bf 8f6f 	isb	sy
 800e172:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e176:	9b03      	ldr	r3, [sp, #12]
 800e178:	2b00      	cmp	r3, #0
 800e17a:	d0fc      	beq.n	800e176 <xPortStartScheduler+0x11e>
}
 800e17c:	2000      	movs	r0, #0
 800e17e:	b004      	add	sp, #16
 800e180:	bd70      	pop	{r4, r5, r6, pc}
 800e182:	bf00      	nop
 800e184:	410fc271 	.word	0x410fc271
 800e188:	410fc270 	.word	0x410fc270
 800e18c:	e000e400 	.word	0xe000e400
 800e190:	20012728 	.word	0x20012728
 800e194:	2001272c 	.word	0x2001272c
 800e198:	20000084 	.word	0x20000084

0800e19c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e19c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e1a0:	2b0f      	cmp	r3, #15
 800e1a2:	d90e      	bls.n	800e1c2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e1a4:	4911      	ldr	r1, [pc, #68]	; (800e1ec <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e1a6:	4a12      	ldr	r2, [pc, #72]	; (800e1f0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e1a8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e1aa:	7812      	ldrb	r2, [r2, #0]
 800e1ac:	429a      	cmp	r2, r3
 800e1ae:	d908      	bls.n	800e1c2 <vPortValidateInterruptPriority+0x26>
 800e1b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1b4:	f383 8811 	msr	BASEPRI, r3
 800e1b8:	f3bf 8f6f 	isb	sy
 800e1bc:	f3bf 8f4f 	dsb	sy
 800e1c0:	e7fe      	b.n	800e1c0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e1c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e1c6:	4a0b      	ldr	r2, [pc, #44]	; (800e1f4 <vPortValidateInterruptPriority+0x58>)
 800e1c8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e1cc:	6812      	ldr	r2, [r2, #0]
 800e1ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e1d2:	4293      	cmp	r3, r2
 800e1d4:	d908      	bls.n	800e1e8 <vPortValidateInterruptPriority+0x4c>
 800e1d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1da:	f383 8811 	msr	BASEPRI, r3
 800e1de:	f3bf 8f6f 	isb	sy
 800e1e2:	f3bf 8f4f 	dsb	sy
 800e1e6:	e7fe      	b.n	800e1e6 <vPortValidateInterruptPriority+0x4a>
	}
 800e1e8:	4770      	bx	lr
 800e1ea:	bf00      	nop
 800e1ec:	e000e3f0 	.word	0xe000e3f0
 800e1f0:	20012728 	.word	0x20012728
 800e1f4:	2001272c 	.word	0x2001272c

0800e1f8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e1f8:	b570      	push	{r4, r5, r6, lr}
 800e1fa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e1fc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e1fe:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e200:	b920      	cbnz	r0, 800e20c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e202:	6825      	ldr	r5, [r4, #0]
 800e204:	b34d      	cbz	r5, 800e25a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e206:	3601      	adds	r6, #1
 800e208:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e20a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e20c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e20e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e210:	b97d      	cbnz	r5, 800e232 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e212:	6860      	ldr	r0, [r4, #4]
 800e214:	f01d f865 	bl	802b2e2 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e218:	6863      	ldr	r3, [r4, #4]
 800e21a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e21c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e21e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e220:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e222:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e224:	bf24      	itt	cs
 800e226:	6823      	ldrcs	r3, [r4, #0]
 800e228:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e22a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e22c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e22e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e230:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e232:	68e0      	ldr	r0, [r4, #12]
 800e234:	f01d f855 	bl	802b2e2 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e238:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e23a:	68e3      	ldr	r3, [r4, #12]
 800e23c:	4251      	negs	r1, r2
 800e23e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e240:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e242:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e244:	4293      	cmp	r3, r2
 800e246:	d202      	bcs.n	800e24e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e248:	68a3      	ldr	r3, [r4, #8]
 800e24a:	440b      	add	r3, r1
 800e24c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e24e:	2d02      	cmp	r5, #2
 800e250:	d008      	beq.n	800e264 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e252:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e254:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e256:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e258:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e25a:	68a0      	ldr	r0, [r4, #8]
 800e25c:	f001 fde0 	bl	800fe20 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e260:	60a5      	str	r5, [r4, #8]
 800e262:	e7d0      	b.n	800e206 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e264:	2e01      	cmp	r6, #1
 800e266:	bf38      	it	cc
 800e268:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e26a:	2000      	movs	r0, #0
 800e26c:	e7cc      	b.n	800e208 <prvCopyDataToQueue+0x10>
 800e26e:	bf00      	nop

0800e270 <xQueueGenericCreateStatic>:
	{
 800e270:	b530      	push	{r4, r5, lr}
 800e272:	b083      	sub	sp, #12
 800e274:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e278:	b940      	cbnz	r0, 800e28c <xQueueGenericCreateStatic+0x1c>
 800e27a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e27e:	f383 8811 	msr	BASEPRI, r3
 800e282:	f3bf 8f6f 	isb	sy
 800e286:	f3bf 8f4f 	dsb	sy
 800e28a:	e7fe      	b.n	800e28a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e28c:	461d      	mov	r5, r3
 800e28e:	b17b      	cbz	r3, 800e2b0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e290:	b302      	cbz	r2, 800e2d4 <xQueueGenericCreateStatic+0x64>
 800e292:	b1b1      	cbz	r1, 800e2c2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e294:	2350      	movs	r3, #80	; 0x50
 800e296:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e298:	9b01      	ldr	r3, [sp, #4]
 800e29a:	2b50      	cmp	r3, #80	; 0x50
 800e29c:	d023      	beq.n	800e2e6 <xQueueGenericCreateStatic+0x76>
 800e29e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2a2:	f383 8811 	msr	BASEPRI, r3
 800e2a6:	f3bf 8f6f 	isb	sy
 800e2aa:	f3bf 8f4f 	dsb	sy
 800e2ae:	e7fe      	b.n	800e2ae <xQueueGenericCreateStatic+0x3e>
 800e2b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2b4:	f383 8811 	msr	BASEPRI, r3
 800e2b8:	f3bf 8f6f 	isb	sy
 800e2bc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e2c0:	e7fe      	b.n	800e2c0 <xQueueGenericCreateStatic+0x50>
 800e2c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2c6:	f383 8811 	msr	BASEPRI, r3
 800e2ca:	f3bf 8f6f 	isb	sy
 800e2ce:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e2d2:	e7fe      	b.n	800e2d2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e2d4:	bb89      	cbnz	r1, 800e33a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e2d6:	2250      	movs	r2, #80	; 0x50
 800e2d8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e2da:	9a01      	ldr	r2, [sp, #4]
 800e2dc:	2a50      	cmp	r2, #80	; 0x50
 800e2de:	d1de      	bne.n	800e29e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e2e0:	9a01      	ldr	r2, [sp, #4]
 800e2e2:	462a      	mov	r2, r5
 800e2e4:	e000      	b.n	800e2e8 <xQueueGenericCreateStatic+0x78>
 800e2e6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e2e8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e2ea:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e2ec:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e2f0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e2f4:	f7ff fe1e 	bl	800df34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2f8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e2fc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e2fe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e300:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e304:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e306:	4401      	add	r1, r0
 800e308:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e30a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e30c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e30e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e310:	21ff      	movs	r1, #255	; 0xff
 800e312:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e316:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e318:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e31c:	f105 0010 	add.w	r0, r5, #16
 800e320:	f7ff fd58 	bl	800ddd4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e324:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e328:	f7ff fd54 	bl	800ddd4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e32c:	f7ff fe24 	bl	800df78 <vPortExitCritical>
	}
 800e330:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e332:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e336:	b003      	add	sp, #12
 800e338:	bd30      	pop	{r4, r5, pc}
 800e33a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e33e:	f383 8811 	msr	BASEPRI, r3
 800e342:	f3bf 8f6f 	isb	sy
 800e346:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e34a:	e7fe      	b.n	800e34a <xQueueGenericCreateStatic+0xda>

0800e34c <xQueueGenericCreate>:
	{
 800e34c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e34e:	b940      	cbnz	r0, 800e362 <xQueueGenericCreate+0x16>
 800e350:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e354:	f383 8811 	msr	BASEPRI, r3
 800e358:	f3bf 8f6f 	isb	sy
 800e35c:	f3bf 8f4f 	dsb	sy
 800e360:	e7fe      	b.n	800e360 <xQueueGenericCreate+0x14>
 800e362:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e364:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e368:	3050      	adds	r0, #80	; 0x50
 800e36a:	460e      	mov	r6, r1
 800e36c:	4617      	mov	r7, r2
 800e36e:	f7ff fc11 	bl	800db94 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e372:	4604      	mov	r4, r0
 800e374:	b340      	cbz	r0, 800e3c8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e376:	2300      	movs	r3, #0
 800e378:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e37c:	b336      	cbz	r6, 800e3cc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e37e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e382:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e384:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e388:	f7ff fdd4 	bl	800df34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e38c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e390:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e392:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e394:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e398:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e39a:	440a      	add	r2, r1
 800e39c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e39e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3a0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e3a2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e3a4:	22ff      	movs	r2, #255	; 0xff
 800e3a6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3aa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e3ac:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e3b0:	f104 0010 	add.w	r0, r4, #16
 800e3b4:	f7ff fd0e 	bl	800ddd4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e3b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e3bc:	f7ff fd0a 	bl	800ddd4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e3c0:	f7ff fdda 	bl	800df78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e3c4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e3c8:	4620      	mov	r0, r4
 800e3ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3cc:	4603      	mov	r3, r0
 800e3ce:	e7d8      	b.n	800e382 <xQueueGenericCreate+0x36>

0800e3d0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e3d0:	b940      	cbnz	r0, 800e3e4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e3d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3d6:	f383 8811 	msr	BASEPRI, r3
 800e3da:	f3bf 8f6f 	isb	sy
 800e3de:	f3bf 8f4f 	dsb	sy
 800e3e2:	e7fe      	b.n	800e3e2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e3e4:	4288      	cmp	r0, r1
 800e3e6:	d208      	bcs.n	800e3fa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e3e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ec:	f383 8811 	msr	BASEPRI, r3
 800e3f0:	f3bf 8f6f 	isb	sy
 800e3f4:	f3bf 8f4f 	dsb	sy
 800e3f8:	e7fe      	b.n	800e3f8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e3fa:	b530      	push	{r4, r5, lr}
 800e3fc:	4615      	mov	r5, r2
 800e3fe:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e400:	2a00      	cmp	r2, #0
 800e402:	d03c      	beq.n	800e47e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e404:	2350      	movs	r3, #80	; 0x50
 800e406:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e408:	9b03      	ldr	r3, [sp, #12]
 800e40a:	2b50      	cmp	r3, #80	; 0x50
 800e40c:	d008      	beq.n	800e420 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e40e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e412:	f383 8811 	msr	BASEPRI, r3
 800e416:	f3bf 8f6f 	isb	sy
 800e41a:	f3bf 8f4f 	dsb	sy
 800e41e:	e7fe      	b.n	800e41e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e420:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e422:	2301      	movs	r3, #1
 800e424:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e428:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e42a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e42e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e430:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e432:	f7ff fd7f 	bl	800df34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e436:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e43a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e43c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e43e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e442:	1ac3      	subs	r3, r0, r3
 800e444:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e446:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e448:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e44c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e450:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e452:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e454:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e458:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e45a:	f105 0010 	add.w	r0, r5, #16
 800e45e:	f7ff fcb9 	bl	800ddd4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e462:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e466:	f7ff fcb5 	bl	800ddd4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e46a:	f7ff fd85 	bl	800df78 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e46e:	9901      	ldr	r1, [sp, #4]
 800e470:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e472:	2302      	movs	r3, #2
	}
 800e474:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e476:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e47a:	b005      	add	sp, #20
 800e47c:	bd30      	pop	{r4, r5, pc}
 800e47e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e482:	f383 8811 	msr	BASEPRI, r3
 800e486:	f3bf 8f6f 	isb	sy
 800e48a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e48e:	e7fe      	b.n	800e48e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e490 <xQueueCreateCountingSemaphore>:
	{
 800e490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e492:	b940      	cbnz	r0, 800e4a6 <xQueueCreateCountingSemaphore+0x16>
 800e494:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e498:	f383 8811 	msr	BASEPRI, r3
 800e49c:	f3bf 8f6f 	isb	sy
 800e4a0:	f3bf 8f4f 	dsb	sy
 800e4a4:	e7fe      	b.n	800e4a4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e4a6:	4288      	cmp	r0, r1
 800e4a8:	460e      	mov	r6, r1
 800e4aa:	4604      	mov	r4, r0
 800e4ac:	d208      	bcs.n	800e4c0 <xQueueCreateCountingSemaphore+0x30>
 800e4ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4b2:	f383 8811 	msr	BASEPRI, r3
 800e4b6:	f3bf 8f6f 	isb	sy
 800e4ba:	f3bf 8f4f 	dsb	sy
 800e4be:	e7fe      	b.n	800e4be <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e4c0:	2050      	movs	r0, #80	; 0x50
 800e4c2:	f7ff fb67 	bl	800db94 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e4c6:	4605      	mov	r5, r0
 800e4c8:	b330      	cbz	r0, 800e518 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e4ca:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e4cc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e4d0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e4d4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e4d6:	f7ff fd2d 	bl	800df34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4da:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e4de:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e4e0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4e2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4e6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4e8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4ea:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4ec:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e4ee:	22ff      	movs	r2, #255	; 0xff
 800e4f0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4f4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e4f6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e4f8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e4fc:	f105 0010 	add.w	r0, r5, #16
 800e500:	f7ff fc68 	bl	800ddd4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e504:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e508:	f7ff fc64 	bl	800ddd4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e50c:	f7ff fd34 	bl	800df78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e510:	2302      	movs	r3, #2
 800e512:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e516:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e518:	4628      	mov	r0, r5
 800e51a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e51c <xQueueGenericSend>:
{
 800e51c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e520:	b085      	sub	sp, #20
 800e522:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e524:	2800      	cmp	r0, #0
 800e526:	f000 80a4 	beq.w	800e672 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e52a:	4688      	mov	r8, r1
 800e52c:	461f      	mov	r7, r3
 800e52e:	4604      	mov	r4, r0
 800e530:	2900      	cmp	r1, #0
 800e532:	f000 8091 	beq.w	800e658 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e536:	2f02      	cmp	r7, #2
 800e538:	d10b      	bne.n	800e552 <xQueueGenericSend+0x36>
 800e53a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e53c:	2b01      	cmp	r3, #1
 800e53e:	d008      	beq.n	800e552 <xQueueGenericSend+0x36>
 800e540:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e544:	f383 8811 	msr	BASEPRI, r3
 800e548:	f3bf 8f6f 	isb	sy
 800e54c:	f3bf 8f4f 	dsb	sy
 800e550:	e7fe      	b.n	800e550 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e552:	f001 fc0f 	bl	800fd74 <xTaskGetSchedulerState>
 800e556:	4605      	mov	r5, r0
 800e558:	2800      	cmp	r0, #0
 800e55a:	f000 8093 	beq.w	800e684 <xQueueGenericSend+0x168>
 800e55e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e560:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e564:	f7ff fce6 	bl	800df34 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e568:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e56a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e56c:	429a      	cmp	r2, r3
 800e56e:	f0c0 80ef 	bcc.w	800e750 <xQueueGenericSend+0x234>
 800e572:	2f02      	cmp	r7, #2
 800e574:	f000 80ec 	beq.w	800e750 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e578:	9801      	ldr	r0, [sp, #4]
 800e57a:	2800      	cmp	r0, #0
 800e57c:	f000 8101 	beq.w	800e782 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e580:	2d00      	cmp	r5, #0
 800e582:	f000 80e1 	beq.w	800e748 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e586:	f7ff fcf7 	bl	800df78 <vPortExitCritical>
		vTaskSuspendAll();
 800e58a:	f001 fa49 	bl	800fa20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e58e:	f7ff fcd1 	bl	800df34 <vPortEnterCritical>
 800e592:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e596:	2bff      	cmp	r3, #255	; 0xff
 800e598:	bf04      	itt	eq
 800e59a:	2300      	moveq	r3, #0
 800e59c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e5a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e5a4:	2bff      	cmp	r3, #255	; 0xff
 800e5a6:	bf04      	itt	eq
 800e5a8:	2300      	moveq	r3, #0
 800e5aa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e5ae:	f7ff fce3 	bl	800df78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e5b2:	a901      	add	r1, sp, #4
 800e5b4:	a802      	add	r0, sp, #8
 800e5b6:	f001 fb8f 	bl	800fcd8 <xTaskCheckForTimeOut>
 800e5ba:	2800      	cmp	r0, #0
 800e5bc:	f040 80e6 	bne.w	800e78c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e5c0:	f7ff fcb8 	bl	800df34 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e5c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e5c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e5c8:	429a      	cmp	r2, r3
 800e5ca:	d068      	beq.n	800e69e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e5cc:	f7ff fcd4 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5d0:	f7ff fcb0 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e5d4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e5d8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5da:	2d00      	cmp	r5, #0
 800e5dc:	dc04      	bgt.n	800e5e8 <xQueueGenericSend+0xcc>
 800e5de:	e011      	b.n	800e604 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e5e0:	1e6a      	subs	r2, r5, #1
 800e5e2:	b2d3      	uxtb	r3, r2
 800e5e4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5e6:	b16b      	cbz	r3, 800e604 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e5e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e5ec:	b153      	cbz	r3, 800e604 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5ee:	f001 fb1f 	bl	800fc30 <xTaskRemoveFromEventList>
 800e5f2:	2800      	cmp	r0, #0
 800e5f4:	d0f4      	beq.n	800e5e0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e5f6:	f001 fbb7 	bl	800fd68 <vTaskMissedYield>
			--cTxLock;
 800e5fa:	1e6a      	subs	r2, r5, #1
 800e5fc:	b2d3      	uxtb	r3, r2
 800e5fe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e600:	2b00      	cmp	r3, #0
 800e602:	d1f1      	bne.n	800e5e8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e604:	23ff      	movs	r3, #255	; 0xff
 800e606:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e60a:	f7ff fcb5 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e60e:	f7ff fc91 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e612:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e616:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e618:	2d00      	cmp	r5, #0
 800e61a:	dd14      	ble.n	800e646 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e61c:	f104 0910 	add.w	r9, r4, #16
 800e620:	e003      	b.n	800e62a <xQueueGenericSend+0x10e>
				--cRxLock;
 800e622:	1e6a      	subs	r2, r5, #1
 800e624:	b2d3      	uxtb	r3, r2
 800e626:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e628:	b16b      	cbz	r3, 800e646 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e62a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e62c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e62e:	b153      	cbz	r3, 800e646 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e630:	f001 fafe 	bl	800fc30 <xTaskRemoveFromEventList>
 800e634:	2800      	cmp	r0, #0
 800e636:	d0f4      	beq.n	800e622 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e638:	f001 fb96 	bl	800fd68 <vTaskMissedYield>
				--cRxLock;
 800e63c:	1e6a      	subs	r2, r5, #1
 800e63e:	b2d3      	uxtb	r3, r2
 800e640:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e642:	2b00      	cmp	r3, #0
 800e644:	d1f1      	bne.n	800e62a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e646:	23ff      	movs	r3, #255	; 0xff
 800e648:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e64c:	f7ff fc94 	bl	800df78 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e650:	f001 f9ee 	bl	800fa30 <xTaskResumeAll>
 800e654:	2501      	movs	r5, #1
 800e656:	e785      	b.n	800e564 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e658:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e65a:	2b00      	cmp	r3, #0
 800e65c:	f43f af6b 	beq.w	800e536 <xQueueGenericSend+0x1a>
 800e660:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e664:	f383 8811 	msr	BASEPRI, r3
 800e668:	f3bf 8f6f 	isb	sy
 800e66c:	f3bf 8f4f 	dsb	sy
 800e670:	e7fe      	b.n	800e670 <xQueueGenericSend+0x154>
 800e672:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e676:	f383 8811 	msr	BASEPRI, r3
 800e67a:	f3bf 8f6f 	isb	sy
 800e67e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e682:	e7fe      	b.n	800e682 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e684:	9b01      	ldr	r3, [sp, #4]
 800e686:	2b00      	cmp	r3, #0
 800e688:	f43f af6a 	beq.w	800e560 <xQueueGenericSend+0x44>
 800e68c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e690:	f383 8811 	msr	BASEPRI, r3
 800e694:	f3bf 8f6f 	isb	sy
 800e698:	f3bf 8f4f 	dsb	sy
 800e69c:	e7fe      	b.n	800e69c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e69e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e6a2:	f7ff fc69 	bl	800df78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e6a6:	9901      	ldr	r1, [sp, #4]
 800e6a8:	4648      	mov	r0, r9
 800e6aa:	f001 fa33 	bl	800fb14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e6ae:	f7ff fc41 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e6b2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e6b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6b8:	2d00      	cmp	r5, #0
 800e6ba:	dc04      	bgt.n	800e6c6 <xQueueGenericSend+0x1aa>
 800e6bc:	e011      	b.n	800e6e2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e6be:	1e6b      	subs	r3, r5, #1
 800e6c0:	b2da      	uxtb	r2, r3
 800e6c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6c4:	b16a      	cbz	r2, 800e6e2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6c8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6ca:	b153      	cbz	r3, 800e6e2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6cc:	f001 fab0 	bl	800fc30 <xTaskRemoveFromEventList>
 800e6d0:	2800      	cmp	r0, #0
 800e6d2:	d0f4      	beq.n	800e6be <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e6d4:	f001 fb48 	bl	800fd68 <vTaskMissedYield>
			--cTxLock;
 800e6d8:	1e6b      	subs	r3, r5, #1
 800e6da:	b2da      	uxtb	r2, r3
 800e6dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6de:	2a00      	cmp	r2, #0
 800e6e0:	d1f1      	bne.n	800e6c6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e6e2:	23ff      	movs	r3, #255	; 0xff
 800e6e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e6e8:	f7ff fc46 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e6ec:	f7ff fc22 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e6f0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e6f4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6f6:	2d00      	cmp	r5, #0
 800e6f8:	dc04      	bgt.n	800e704 <xQueueGenericSend+0x1e8>
 800e6fa:	e011      	b.n	800e720 <xQueueGenericSend+0x204>
				--cRxLock;
 800e6fc:	1e6b      	subs	r3, r5, #1
 800e6fe:	b2da      	uxtb	r2, r3
 800e700:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e702:	b16a      	cbz	r2, 800e720 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e704:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e706:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e708:	b153      	cbz	r3, 800e720 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e70a:	f001 fa91 	bl	800fc30 <xTaskRemoveFromEventList>
 800e70e:	2800      	cmp	r0, #0
 800e710:	d0f4      	beq.n	800e6fc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e712:	f001 fb29 	bl	800fd68 <vTaskMissedYield>
				--cRxLock;
 800e716:	1e6b      	subs	r3, r5, #1
 800e718:	b2da      	uxtb	r2, r3
 800e71a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e71c:	2a00      	cmp	r2, #0
 800e71e:	d1f1      	bne.n	800e704 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e720:	23ff      	movs	r3, #255	; 0xff
 800e722:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e726:	f7ff fc27 	bl	800df78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e72a:	f001 f981 	bl	800fa30 <xTaskResumeAll>
 800e72e:	2800      	cmp	r0, #0
 800e730:	d190      	bne.n	800e654 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e732:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e736:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e73a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e73e:	f3bf 8f4f 	dsb	sy
 800e742:	f3bf 8f6f 	isb	sy
 800e746:	e785      	b.n	800e654 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e748:	a802      	add	r0, sp, #8
 800e74a:	f001 fab9 	bl	800fcc0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e74e:	e71a      	b.n	800e586 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e750:	463a      	mov	r2, r7
 800e752:	4641      	mov	r1, r8
 800e754:	4620      	mov	r0, r4
 800e756:	f7ff fd4f 	bl	800e1f8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e75a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e75c:	2b00      	cmp	r3, #0
 800e75e:	d153      	bne.n	800e808 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e760:	b148      	cbz	r0, 800e776 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e762:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e766:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e76a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e76e:	f3bf 8f4f 	dsb	sy
 800e772:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e776:	f7ff fbff 	bl	800df78 <vPortExitCritical>
				return pdPASS;
 800e77a:	2001      	movs	r0, #1
}
 800e77c:	b005      	add	sp, #20
 800e77e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e782:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e784:	f7ff fbf8 	bl	800df78 <vPortExitCritical>
					return errQUEUE_FULL;
 800e788:	9800      	ldr	r0, [sp, #0]
 800e78a:	e7f7      	b.n	800e77c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e78c:	f7ff fbd2 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e790:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e794:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e796:	2d00      	cmp	r5, #0
 800e798:	dd10      	ble.n	800e7bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e79a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e79e:	e003      	b.n	800e7a8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e7a0:	1e6b      	subs	r3, r5, #1
 800e7a2:	b2da      	uxtb	r2, r3
 800e7a4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7a6:	b14a      	cbz	r2, 800e7bc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7ac:	b133      	cbz	r3, 800e7bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7ae:	f001 fa3f 	bl	800fc30 <xTaskRemoveFromEventList>
 800e7b2:	2800      	cmp	r0, #0
 800e7b4:	d0f4      	beq.n	800e7a0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e7b6:	f001 fad7 	bl	800fd68 <vTaskMissedYield>
 800e7ba:	e7f1      	b.n	800e7a0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e7bc:	23ff      	movs	r3, #255	; 0xff
 800e7be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e7c2:	f7ff fbd9 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e7c6:	f7ff fbb5 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e7ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e7ce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7d0:	2d00      	cmp	r5, #0
 800e7d2:	dd10      	ble.n	800e7f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7d4:	f104 0610 	add.w	r6, r4, #16
 800e7d8:	e003      	b.n	800e7e2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e7da:	1e6b      	subs	r3, r5, #1
 800e7dc:	b2da      	uxtb	r2, r3
 800e7de:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7e0:	b14a      	cbz	r2, 800e7f6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e7e2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7e4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e7e6:	b133      	cbz	r3, 800e7f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7e8:	f001 fa22 	bl	800fc30 <xTaskRemoveFromEventList>
 800e7ec:	2800      	cmp	r0, #0
 800e7ee:	d0f4      	beq.n	800e7da <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e7f0:	f001 faba 	bl	800fd68 <vTaskMissedYield>
 800e7f4:	e7f1      	b.n	800e7da <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e7f6:	23ff      	movs	r3, #255	; 0xff
 800e7f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e7fc:	f7ff fbbc 	bl	800df78 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e800:	f001 f916 	bl	800fa30 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e804:	2000      	movs	r0, #0
 800e806:	e7b9      	b.n	800e77c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e808:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e80c:	f001 fa10 	bl	800fc30 <xTaskRemoveFromEventList>
 800e810:	2800      	cmp	r0, #0
 800e812:	d0b0      	beq.n	800e776 <xQueueGenericSend+0x25a>
 800e814:	e7a5      	b.n	800e762 <xQueueGenericSend+0x246>
 800e816:	bf00      	nop

0800e818 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e818:	2800      	cmp	r0, #0
 800e81a:	d04b      	beq.n	800e8b4 <xQueueGenericSendFromISR+0x9c>
{
 800e81c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e820:	460e      	mov	r6, r1
 800e822:	4617      	mov	r7, r2
 800e824:	461d      	mov	r5, r3
 800e826:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e828:	b321      	cbz	r1, 800e874 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e82a:	2d02      	cmp	r5, #2
 800e82c:	d10b      	bne.n	800e846 <xQueueGenericSendFromISR+0x2e>
 800e82e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e830:	2b01      	cmp	r3, #1
 800e832:	d008      	beq.n	800e846 <xQueueGenericSendFromISR+0x2e>
 800e834:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e838:	f383 8811 	msr	BASEPRI, r3
 800e83c:	f3bf 8f6f 	isb	sy
 800e840:	f3bf 8f4f 	dsb	sy
 800e844:	e7fe      	b.n	800e844 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e846:	f7ff fca9 	bl	800e19c <vPortValidateInterruptPriority>
	__asm volatile
 800e84a:	f3ef 8811 	mrs	r8, BASEPRI
 800e84e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e852:	f383 8811 	msr	BASEPRI, r3
 800e856:	f3bf 8f6f 	isb	sy
 800e85a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e85e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e860:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e862:	429a      	cmp	r2, r3
 800e864:	d312      	bcc.n	800e88c <xQueueGenericSendFromISR+0x74>
 800e866:	2d02      	cmp	r5, #2
 800e868:	d010      	beq.n	800e88c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e86a:	2000      	movs	r0, #0
	__asm volatile
 800e86c:	f388 8811 	msr	BASEPRI, r8
}
 800e870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e874:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e876:	2b00      	cmp	r3, #0
 800e878:	d0d7      	beq.n	800e82a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e87a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e87e:	f383 8811 	msr	BASEPRI, r3
 800e882:	f3bf 8f6f 	isb	sy
 800e886:	f3bf 8f4f 	dsb	sy
 800e88a:	e7fe      	b.n	800e88a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e88c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e88e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e892:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e894:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e896:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e898:	4620      	mov	r0, r4
 800e89a:	f7ff fcad 	bl	800e1f8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e89e:	1c6b      	adds	r3, r5, #1
 800e8a0:	d011      	beq.n	800e8c6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e8a2:	1c6b      	adds	r3, r5, #1
 800e8a4:	b25b      	sxtb	r3, r3
 800e8a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e8aa:	2001      	movs	r0, #1
	__asm volatile
 800e8ac:	f388 8811 	msr	BASEPRI, r8
}
 800e8b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e8b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8b8:	f383 8811 	msr	BASEPRI, r3
 800e8bc:	f3bf 8f6f 	isb	sy
 800e8c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e8c4:	e7fe      	b.n	800e8c4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e8c8:	2b00      	cmp	r3, #0
 800e8ca:	d0ee      	beq.n	800e8aa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8cc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e8d0:	f001 f9ae 	bl	800fc30 <xTaskRemoveFromEventList>
 800e8d4:	2800      	cmp	r0, #0
 800e8d6:	d0e8      	beq.n	800e8aa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e8d8:	2f00      	cmp	r7, #0
 800e8da:	d0e6      	beq.n	800e8aa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e8dc:	2001      	movs	r0, #1
 800e8de:	6038      	str	r0, [r7, #0]
 800e8e0:	e7c4      	b.n	800e86c <xQueueGenericSendFromISR+0x54>
 800e8e2:	bf00      	nop

0800e8e4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e8e4:	b370      	cbz	r0, 800e944 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e8e6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e8e8:	b570      	push	{r4, r5, r6, lr}
 800e8ea:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e8ec:	b143      	cbz	r3, 800e900 <xQueueGiveFromISR+0x1c>
 800e8ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8f2:	f383 8811 	msr	BASEPRI, r3
 800e8f6:	f3bf 8f6f 	isb	sy
 800e8fa:	f3bf 8f4f 	dsb	sy
 800e8fe:	e7fe      	b.n	800e8fe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e900:	6803      	ldr	r3, [r0, #0]
 800e902:	460c      	mov	r4, r1
 800e904:	b33b      	cbz	r3, 800e956 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e906:	f7ff fc49 	bl	800e19c <vPortValidateInterruptPriority>
	__asm volatile
 800e90a:	f3ef 8511 	mrs	r5, BASEPRI
 800e90e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e912:	f383 8811 	msr	BASEPRI, r3
 800e916:	f3bf 8f6f 	isb	sy
 800e91a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e91e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e920:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e922:	429a      	cmp	r2, r3
 800e924:	d923      	bls.n	800e96e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e926:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e92a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e92c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e92e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e930:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e932:	d020      	beq.n	800e976 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e934:	3301      	adds	r3, #1
 800e936:	b25b      	sxtb	r3, r3
 800e938:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e93c:	2001      	movs	r0, #1
	__asm volatile
 800e93e:	f385 8811 	msr	BASEPRI, r5
}
 800e942:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e944:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e948:	f383 8811 	msr	BASEPRI, r3
 800e94c:	f3bf 8f6f 	isb	sy
 800e950:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e954:	e7fe      	b.n	800e954 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e956:	6883      	ldr	r3, [r0, #8]
 800e958:	2b00      	cmp	r3, #0
 800e95a:	d0d4      	beq.n	800e906 <xQueueGiveFromISR+0x22>
 800e95c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e960:	f383 8811 	msr	BASEPRI, r3
 800e964:	f3bf 8f6f 	isb	sy
 800e968:	f3bf 8f4f 	dsb	sy
 800e96c:	e7fe      	b.n	800e96c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e96e:	2000      	movs	r0, #0
	__asm volatile
 800e970:	f385 8811 	msr	BASEPRI, r5
}
 800e974:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e976:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e978:	2b00      	cmp	r3, #0
 800e97a:	d0df      	beq.n	800e93c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e97c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e980:	f001 f956 	bl	800fc30 <xTaskRemoveFromEventList>
 800e984:	2800      	cmp	r0, #0
 800e986:	d0d9      	beq.n	800e93c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e988:	2c00      	cmp	r4, #0
 800e98a:	d0d7      	beq.n	800e93c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e98c:	2001      	movs	r0, #1
 800e98e:	6020      	str	r0, [r4, #0]
 800e990:	e7ee      	b.n	800e970 <xQueueGiveFromISR+0x8c>
 800e992:	bf00      	nop

0800e994 <xQueueReceive>:
{
 800e994:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e998:	b085      	sub	sp, #20
 800e99a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e99c:	2800      	cmp	r0, #0
 800e99e:	f000 815c 	beq.w	800ec5a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e9a2:	460f      	mov	r7, r1
 800e9a4:	4604      	mov	r4, r0
 800e9a6:	2900      	cmp	r1, #0
 800e9a8:	d079      	beq.n	800ea9e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e9aa:	f001 f9e3 	bl	800fd74 <xTaskGetSchedulerState>
 800e9ae:	2800      	cmp	r0, #0
 800e9b0:	f000 8081 	beq.w	800eab6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e9b4:	f7ff fabe 	bl	800df34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e9b8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e9ba:	2d00      	cmp	r5, #0
 800e9bc:	f040 8138 	bne.w	800ec30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e9c0:	9b01      	ldr	r3, [sp, #4]
 800e9c2:	2b00      	cmp	r3, #0
 800e9c4:	f000 80d5 	beq.w	800eb72 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e9c8:	a802      	add	r0, sp, #8
 800e9ca:	f001 f979 	bl	800fcc0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e9ce:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9d0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e9d4:	f7ff fad0 	bl	800df78 <vPortExitCritical>
		vTaskSuspendAll();
 800e9d8:	f001 f822 	bl	800fa20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e9dc:	f7ff faaa 	bl	800df34 <vPortEnterCritical>
 800e9e0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e9e4:	2bff      	cmp	r3, #255	; 0xff
 800e9e6:	bf08      	it	eq
 800e9e8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e9ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9f0:	2bff      	cmp	r3, #255	; 0xff
 800e9f2:	bf08      	it	eq
 800e9f4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e9f8:	f7ff fabe 	bl	800df78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e9fc:	a901      	add	r1, sp, #4
 800e9fe:	a802      	add	r0, sp, #8
 800ea00:	f001 f96a 	bl	800fcd8 <xTaskCheckForTimeOut>
 800ea04:	2800      	cmp	r0, #0
 800ea06:	d163      	bne.n	800ead0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800ea08:	f7ff fa94 	bl	800df34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ea0c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ea0e:	2b00      	cmp	r3, #0
 800ea10:	f000 80b5 	beq.w	800eb7e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800ea14:	f7ff fab0 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea18:	f7ff fa8c 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea1c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea20:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea22:	2d00      	cmp	r5, #0
 800ea24:	dc04      	bgt.n	800ea30 <xQueueReceive+0x9c>
 800ea26:	e011      	b.n	800ea4c <xQueueReceive+0xb8>
			--cTxLock;
 800ea28:	1e6b      	subs	r3, r5, #1
 800ea2a:	b2da      	uxtb	r2, r3
 800ea2c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea2e:	b16a      	cbz	r2, 800ea4c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea30:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea32:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea34:	b153      	cbz	r3, 800ea4c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea36:	f001 f8fb 	bl	800fc30 <xTaskRemoveFromEventList>
 800ea3a:	2800      	cmp	r0, #0
 800ea3c:	d0f4      	beq.n	800ea28 <xQueueReceive+0x94>
						vTaskMissedYield();
 800ea3e:	f001 f993 	bl	800fd68 <vTaskMissedYield>
			--cTxLock;
 800ea42:	1e6b      	subs	r3, r5, #1
 800ea44:	b2da      	uxtb	r2, r3
 800ea46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea48:	2a00      	cmp	r2, #0
 800ea4a:	d1f1      	bne.n	800ea30 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea4c:	23ff      	movs	r3, #255	; 0xff
 800ea4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea52:	f7ff fa91 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea56:	f7ff fa6d 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea5e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea60:	2d00      	cmp	r5, #0
 800ea62:	dd14      	ble.n	800ea8e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea64:	f104 0910 	add.w	r9, r4, #16
 800ea68:	e003      	b.n	800ea72 <xQueueReceive+0xde>
				--cRxLock;
 800ea6a:	1e6b      	subs	r3, r5, #1
 800ea6c:	b2da      	uxtb	r2, r3
 800ea6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea70:	b16a      	cbz	r2, 800ea8e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea72:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea74:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea76:	b153      	cbz	r3, 800ea8e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea78:	f001 f8da 	bl	800fc30 <xTaskRemoveFromEventList>
 800ea7c:	2800      	cmp	r0, #0
 800ea7e:	d0f4      	beq.n	800ea6a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800ea80:	f001 f972 	bl	800fd68 <vTaskMissedYield>
				--cRxLock;
 800ea84:	1e6b      	subs	r3, r5, #1
 800ea86:	b2da      	uxtb	r2, r3
 800ea88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea8a:	2a00      	cmp	r2, #0
 800ea8c:	d1f1      	bne.n	800ea72 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea8e:	23ff      	movs	r3, #255	; 0xff
 800ea90:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea94:	f7ff fa70 	bl	800df78 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ea98:	f000 ffca 	bl	800fa30 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800ea9c:	e060      	b.n	800eb60 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ea9e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800eaa0:	2b00      	cmp	r3, #0
 800eaa2:	d082      	beq.n	800e9aa <xQueueReceive+0x16>
	__asm volatile
 800eaa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eaa8:	f383 8811 	msr	BASEPRI, r3
 800eaac:	f3bf 8f6f 	isb	sy
 800eab0:	f3bf 8f4f 	dsb	sy
 800eab4:	e7fe      	b.n	800eab4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eab6:	9b01      	ldr	r3, [sp, #4]
 800eab8:	2b00      	cmp	r3, #0
 800eaba:	f43f af7b 	beq.w	800e9b4 <xQueueReceive+0x20>
 800eabe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eac2:	f383 8811 	msr	BASEPRI, r3
 800eac6:	f3bf 8f6f 	isb	sy
 800eaca:	f3bf 8f4f 	dsb	sy
 800eace:	e7fe      	b.n	800eace <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800ead0:	f7ff fa30 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ead4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ead8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eada:	2d00      	cmp	r5, #0
 800eadc:	dc04      	bgt.n	800eae8 <xQueueReceive+0x154>
 800eade:	e011      	b.n	800eb04 <xQueueReceive+0x170>
			--cTxLock;
 800eae0:	1e6b      	subs	r3, r5, #1
 800eae2:	b2da      	uxtb	r2, r3
 800eae4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eae6:	b16a      	cbz	r2, 800eb04 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eae8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eaea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eaec:	b153      	cbz	r3, 800eb04 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eaee:	f001 f89f 	bl	800fc30 <xTaskRemoveFromEventList>
 800eaf2:	2800      	cmp	r0, #0
 800eaf4:	d0f4      	beq.n	800eae0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800eaf6:	f001 f937 	bl	800fd68 <vTaskMissedYield>
			--cTxLock;
 800eafa:	1e6b      	subs	r3, r5, #1
 800eafc:	b2da      	uxtb	r2, r3
 800eafe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb00:	2a00      	cmp	r2, #0
 800eb02:	d1f1      	bne.n	800eae8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb04:	23ff      	movs	r3, #255	; 0xff
 800eb06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb0a:	f7ff fa35 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb0e:	f7ff fa11 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb12:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb16:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb18:	2d00      	cmp	r5, #0
 800eb1a:	dd14      	ble.n	800eb46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb1c:	f104 0910 	add.w	r9, r4, #16
 800eb20:	e003      	b.n	800eb2a <xQueueReceive+0x196>
				--cRxLock;
 800eb22:	1e6b      	subs	r3, r5, #1
 800eb24:	b2da      	uxtb	r2, r3
 800eb26:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb28:	b16a      	cbz	r2, 800eb46 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb2c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb2e:	b153      	cbz	r3, 800eb46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb30:	f001 f87e 	bl	800fc30 <xTaskRemoveFromEventList>
 800eb34:	2800      	cmp	r0, #0
 800eb36:	d0f4      	beq.n	800eb22 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800eb38:	f001 f916 	bl	800fd68 <vTaskMissedYield>
				--cRxLock;
 800eb3c:	1e6b      	subs	r3, r5, #1
 800eb3e:	b2da      	uxtb	r2, r3
 800eb40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb42:	2a00      	cmp	r2, #0
 800eb44:	d1f1      	bne.n	800eb2a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb46:	23ff      	movs	r3, #255	; 0xff
 800eb48:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb4c:	f7ff fa14 	bl	800df78 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800eb50:	f000 ff6e 	bl	800fa30 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800eb54:	f7ff f9ee 	bl	800df34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eb58:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eb5a:	b153      	cbz	r3, 800eb72 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800eb5c:	f7ff fa0c 	bl	800df78 <vPortExitCritical>
		taskENTER_CRITICAL();
 800eb60:	f7ff f9e8 	bl	800df34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eb64:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eb66:	2d00      	cmp	r5, #0
 800eb68:	d162      	bne.n	800ec30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800eb6a:	9b01      	ldr	r3, [sp, #4]
 800eb6c:	2b00      	cmp	r3, #0
 800eb6e:	f47f af31 	bne.w	800e9d4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800eb72:	f7ff fa01 	bl	800df78 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800eb76:	2000      	movs	r0, #0
}
 800eb78:	b005      	add	sp, #20
 800eb7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800eb7e:	f7ff f9fb 	bl	800df78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800eb82:	9901      	ldr	r1, [sp, #4]
 800eb84:	4630      	mov	r0, r6
 800eb86:	f000 ffc5 	bl	800fb14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800eb8a:	f7ff f9d3 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb8e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb94:	2d00      	cmp	r5, #0
 800eb96:	dc04      	bgt.n	800eba2 <xQueueReceive+0x20e>
 800eb98:	e011      	b.n	800ebbe <xQueueReceive+0x22a>
			--cTxLock;
 800eb9a:	1e6b      	subs	r3, r5, #1
 800eb9c:	b2da      	uxtb	r2, r3
 800eb9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eba0:	b16a      	cbz	r2, 800ebbe <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eba2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eba4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eba6:	b153      	cbz	r3, 800ebbe <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eba8:	f001 f842 	bl	800fc30 <xTaskRemoveFromEventList>
 800ebac:	2800      	cmp	r0, #0
 800ebae:	d0f4      	beq.n	800eb9a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ebb0:	f001 f8da 	bl	800fd68 <vTaskMissedYield>
			--cTxLock;
 800ebb4:	1e6b      	subs	r3, r5, #1
 800ebb6:	b2da      	uxtb	r2, r3
 800ebb8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ebba:	2a00      	cmp	r2, #0
 800ebbc:	d1f1      	bne.n	800eba2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ebbe:	23ff      	movs	r3, #255	; 0xff
 800ebc0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ebc4:	f7ff f9d8 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ebc8:	f7ff f9b4 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ebcc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ebd0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebd2:	2d00      	cmp	r5, #0
 800ebd4:	dd14      	ble.n	800ec00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebd6:	f104 0910 	add.w	r9, r4, #16
 800ebda:	e003      	b.n	800ebe4 <xQueueReceive+0x250>
				--cRxLock;
 800ebdc:	1e6b      	subs	r3, r5, #1
 800ebde:	b2da      	uxtb	r2, r3
 800ebe0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebe2:	b16a      	cbz	r2, 800ec00 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebe4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebe6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebe8:	b153      	cbz	r3, 800ec00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebea:	f001 f821 	bl	800fc30 <xTaskRemoveFromEventList>
 800ebee:	2800      	cmp	r0, #0
 800ebf0:	d0f4      	beq.n	800ebdc <xQueueReceive+0x248>
					vTaskMissedYield();
 800ebf2:	f001 f8b9 	bl	800fd68 <vTaskMissedYield>
				--cRxLock;
 800ebf6:	1e6b      	subs	r3, r5, #1
 800ebf8:	b2da      	uxtb	r2, r3
 800ebfa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebfc:	2a00      	cmp	r2, #0
 800ebfe:	d1f1      	bne.n	800ebe4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800ec00:	23ff      	movs	r3, #255	; 0xff
 800ec02:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ec06:	f7ff f9b7 	bl	800df78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ec0a:	f000 ff11 	bl	800fa30 <xTaskResumeAll>
 800ec0e:	2800      	cmp	r0, #0
 800ec10:	d1a6      	bne.n	800eb60 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800ec12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec1e:	f3bf 8f4f 	dsb	sy
 800ec22:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800ec26:	f7ff f985 	bl	800df34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ec2a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ec2c:	2d00      	cmp	r5, #0
 800ec2e:	d09c      	beq.n	800eb6a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ec30:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ec32:	b152      	cbz	r2, 800ec4a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ec34:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ec36:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ec38:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ec3a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ec3c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ec3e:	bf24      	itt	cs
 800ec40:	6821      	ldrcs	r1, [r4, #0]
 800ec42:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ec44:	4638      	mov	r0, r7
 800ec46:	f01c fb4c 	bl	802b2e2 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ec4a:	3d01      	subs	r5, #1
 800ec4c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec4e:	6923      	ldr	r3, [r4, #16]
 800ec50:	b963      	cbnz	r3, 800ec6c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800ec52:	f7ff f991 	bl	800df78 <vPortExitCritical>
				return pdPASS;
 800ec56:	2001      	movs	r0, #1
 800ec58:	e78e      	b.n	800eb78 <xQueueReceive+0x1e4>
 800ec5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec5e:	f383 8811 	msr	BASEPRI, r3
 800ec62:	f3bf 8f6f 	isb	sy
 800ec66:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ec6a:	e7fe      	b.n	800ec6a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec6c:	f104 0010 	add.w	r0, r4, #16
 800ec70:	f000 ffde 	bl	800fc30 <xTaskRemoveFromEventList>
 800ec74:	2800      	cmp	r0, #0
 800ec76:	d0ec      	beq.n	800ec52 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800ec78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec80:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec84:	f3bf 8f4f 	dsb	sy
 800ec88:	f3bf 8f6f 	isb	sy
 800ec8c:	e7e1      	b.n	800ec52 <xQueueReceive+0x2be>
 800ec8e:	bf00      	nop

0800ec90 <xQueueSemaphoreTake>:
{
 800ec90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec94:	b084      	sub	sp, #16
 800ec96:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ec98:	2800      	cmp	r0, #0
 800ec9a:	d05c      	beq.n	800ed56 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ec9c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800ec9e:	4604      	mov	r4, r0
 800eca0:	b147      	cbz	r7, 800ecb4 <xQueueSemaphoreTake+0x24>
 800eca2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eca6:	f383 8811 	msr	BASEPRI, r3
 800ecaa:	f3bf 8f6f 	isb	sy
 800ecae:	f3bf 8f4f 	dsb	sy
 800ecb2:	e7fe      	b.n	800ecb2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ecb4:	f001 f85e 	bl	800fd74 <xTaskGetSchedulerState>
 800ecb8:	4605      	mov	r5, r0
 800ecba:	2800      	cmp	r0, #0
 800ecbc:	d054      	beq.n	800ed68 <xQueueSemaphoreTake+0xd8>
 800ecbe:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecc0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ecc4:	f7ff f936 	bl	800df34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ecc8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ecca:	2b00      	cmp	r3, #0
 800eccc:	f040 8148 	bne.w	800ef60 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ecd0:	9b01      	ldr	r3, [sp, #4]
 800ecd2:	2b00      	cmp	r3, #0
 800ecd4:	f000 813a 	beq.w	800ef4c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800ecd8:	2d00      	cmp	r5, #0
 800ecda:	f000 809d 	beq.w	800ee18 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ecde:	f7ff f94b 	bl	800df78 <vPortExitCritical>
		vTaskSuspendAll();
 800ece2:	f000 fe9d 	bl	800fa20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ece6:	f7ff f925 	bl	800df34 <vPortEnterCritical>
 800ecea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ecee:	2bff      	cmp	r3, #255	; 0xff
 800ecf0:	bf04      	itt	eq
 800ecf2:	2300      	moveq	r3, #0
 800ecf4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ecf8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ecfc:	2bff      	cmp	r3, #255	; 0xff
 800ecfe:	bf04      	itt	eq
 800ed00:	2300      	moveq	r3, #0
 800ed02:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ed06:	f7ff f937 	bl	800df78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ed0a:	a901      	add	r1, sp, #4
 800ed0c:	a802      	add	r0, sp, #8
 800ed0e:	f000 ffe3 	bl	800fcd8 <xTaskCheckForTimeOut>
 800ed12:	2800      	cmp	r0, #0
 800ed14:	d135      	bne.n	800ed82 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ed16:	f7ff f90d 	bl	800df34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ed1a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ed1c:	2b00      	cmp	r3, #0
 800ed1e:	f000 80a4 	beq.w	800ee6a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ed22:	f7ff f929 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed26:	f7ff f905 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ed2a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed30:	2d00      	cmp	r5, #0
 800ed32:	dc05      	bgt.n	800ed40 <xQueueSemaphoreTake+0xb0>
 800ed34:	e074      	b.n	800ee20 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ed36:	1e6b      	subs	r3, r5, #1
 800ed38:	b2da      	uxtb	r2, r3
 800ed3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed3c:	2a00      	cmp	r2, #0
 800ed3e:	d06f      	beq.n	800ee20 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed40:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed42:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed44:	2b00      	cmp	r3, #0
 800ed46:	d06b      	beq.n	800ee20 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed48:	f000 ff72 	bl	800fc30 <xTaskRemoveFromEventList>
 800ed4c:	2800      	cmp	r0, #0
 800ed4e:	d0f2      	beq.n	800ed36 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ed50:	f001 f80a 	bl	800fd68 <vTaskMissedYield>
 800ed54:	e7ef      	b.n	800ed36 <xQueueSemaphoreTake+0xa6>
 800ed56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed5a:	f383 8811 	msr	BASEPRI, r3
 800ed5e:	f3bf 8f6f 	isb	sy
 800ed62:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ed66:	e7fe      	b.n	800ed66 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ed68:	9b01      	ldr	r3, [sp, #4]
 800ed6a:	2b00      	cmp	r3, #0
 800ed6c:	f000 80d4 	beq.w	800ef18 <xQueueSemaphoreTake+0x288>
 800ed70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed74:	f383 8811 	msr	BASEPRI, r3
 800ed78:	f3bf 8f6f 	isb	sy
 800ed7c:	f3bf 8f4f 	dsb	sy
 800ed80:	e7fe      	b.n	800ed80 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ed82:	f7ff f8d7 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ed86:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed8c:	2d00      	cmp	r5, #0
 800ed8e:	dc04      	bgt.n	800ed9a <xQueueSemaphoreTake+0x10a>
 800ed90:	e011      	b.n	800edb6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ed92:	1e6b      	subs	r3, r5, #1
 800ed94:	b2da      	uxtb	r2, r3
 800ed96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed98:	b16a      	cbz	r2, 800edb6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed9c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed9e:	b153      	cbz	r3, 800edb6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eda0:	f000 ff46 	bl	800fc30 <xTaskRemoveFromEventList>
 800eda4:	2800      	cmp	r0, #0
 800eda6:	d0f4      	beq.n	800ed92 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800eda8:	f000 ffde 	bl	800fd68 <vTaskMissedYield>
			--cTxLock;
 800edac:	1e6b      	subs	r3, r5, #1
 800edae:	b2da      	uxtb	r2, r3
 800edb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edb2:	2a00      	cmp	r2, #0
 800edb4:	d1f1      	bne.n	800ed9a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800edb6:	23ff      	movs	r3, #255	; 0xff
 800edb8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800edbc:	f7ff f8dc 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800edc0:	f7ff f8b8 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800edc4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800edc8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800edca:	2d00      	cmp	r5, #0
 800edcc:	dd14      	ble.n	800edf8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edce:	f104 0810 	add.w	r8, r4, #16
 800edd2:	e003      	b.n	800eddc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800edd4:	1e6b      	subs	r3, r5, #1
 800edd6:	b2da      	uxtb	r2, r3
 800edd8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800edda:	b16a      	cbz	r2, 800edf8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eddc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edde:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ede0:	b153      	cbz	r3, 800edf8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ede2:	f000 ff25 	bl	800fc30 <xTaskRemoveFromEventList>
 800ede6:	2800      	cmp	r0, #0
 800ede8:	d0f4      	beq.n	800edd4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800edea:	f000 ffbd 	bl	800fd68 <vTaskMissedYield>
				--cRxLock;
 800edee:	1e6b      	subs	r3, r5, #1
 800edf0:	b2da      	uxtb	r2, r3
 800edf2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800edf4:	2a00      	cmp	r2, #0
 800edf6:	d1f1      	bne.n	800eddc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800edf8:	23ff      	movs	r3, #255	; 0xff
 800edfa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800edfe:	f7ff f8bb 	bl	800df78 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ee02:	f000 fe15 	bl	800fa30 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ee06:	f7ff f895 	bl	800df34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ee0a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ee0c:	2b00      	cmp	r3, #0
 800ee0e:	d07c      	beq.n	800ef0a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ee10:	f7ff f8b2 	bl	800df78 <vPortExitCritical>
	return xReturn;
 800ee14:	2501      	movs	r5, #1
 800ee16:	e755      	b.n	800ecc4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ee18:	a802      	add	r0, sp, #8
 800ee1a:	f000 ff51 	bl	800fcc0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ee1e:	e75e      	b.n	800ecde <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ee20:	23ff      	movs	r3, #255	; 0xff
 800ee22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ee26:	f7ff f8a7 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ee2a:	f7ff f883 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ee2e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ee32:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee34:	2d00      	cmp	r5, #0
 800ee36:	dd10      	ble.n	800ee5a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee38:	f104 0810 	add.w	r8, r4, #16
 800ee3c:	e003      	b.n	800ee46 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800ee3e:	1e6b      	subs	r3, r5, #1
 800ee40:	b2da      	uxtb	r2, r3
 800ee42:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee44:	b14a      	cbz	r2, 800ee5a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee46:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee48:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee4a:	b133      	cbz	r3, 800ee5a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee4c:	f000 fef0 	bl	800fc30 <xTaskRemoveFromEventList>
 800ee50:	2800      	cmp	r0, #0
 800ee52:	d0f4      	beq.n	800ee3e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800ee54:	f000 ff88 	bl	800fd68 <vTaskMissedYield>
 800ee58:	e7f1      	b.n	800ee3e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee5a:	23ff      	movs	r3, #255	; 0xff
 800ee5c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee60:	f7ff f88a 	bl	800df78 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ee64:	f000 fde4 	bl	800fa30 <xTaskResumeAll>
 800ee68:	e7d4      	b.n	800ee14 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ee6a:	f7ff f885 	bl	800df78 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee6e:	6823      	ldr	r3, [r4, #0]
 800ee70:	2b00      	cmp	r3, #0
 800ee72:	d062      	beq.n	800ef3a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ee74:	9901      	ldr	r1, [sp, #4]
 800ee76:	4630      	mov	r0, r6
 800ee78:	f000 fe4c 	bl	800fb14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ee7c:	f7ff f85a 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee80:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ee84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee86:	2d00      	cmp	r5, #0
 800ee88:	dc04      	bgt.n	800ee94 <xQueueSemaphoreTake+0x204>
 800ee8a:	e00d      	b.n	800eea8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ee8c:	1e6b      	subs	r3, r5, #1
 800ee8e:	b2da      	uxtb	r2, r3
 800ee90:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee92:	b14a      	cbz	r2, 800eea8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee94:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee96:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee98:	b133      	cbz	r3, 800eea8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee9a:	f000 fec9 	bl	800fc30 <xTaskRemoveFromEventList>
 800ee9e:	2800      	cmp	r0, #0
 800eea0:	d0f4      	beq.n	800ee8c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800eea2:	f000 ff61 	bl	800fd68 <vTaskMissedYield>
 800eea6:	e7f1      	b.n	800ee8c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800eea8:	23ff      	movs	r3, #255	; 0xff
 800eeaa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eeae:	f7ff f863 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eeb2:	f7ff f83f 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eeb6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eeba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eebc:	2d00      	cmp	r5, #0
 800eebe:	dd10      	ble.n	800eee2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eec0:	f104 0810 	add.w	r8, r4, #16
 800eec4:	e003      	b.n	800eece <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800eec6:	1e6b      	subs	r3, r5, #1
 800eec8:	b2da      	uxtb	r2, r3
 800eeca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eecc:	b14a      	cbz	r2, 800eee2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eece:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eed0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eed2:	b133      	cbz	r3, 800eee2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eed4:	f000 feac 	bl	800fc30 <xTaskRemoveFromEventList>
 800eed8:	2800      	cmp	r0, #0
 800eeda:	d0f4      	beq.n	800eec6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800eedc:	f000 ff44 	bl	800fd68 <vTaskMissedYield>
 800eee0:	e7f1      	b.n	800eec6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800eee2:	23ff      	movs	r3, #255	; 0xff
 800eee4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eee8:	f7ff f846 	bl	800df78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eeec:	f000 fda0 	bl	800fa30 <xTaskResumeAll>
 800eef0:	2800      	cmp	r0, #0
 800eef2:	d18f      	bne.n	800ee14 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800eef4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eef8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eefc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef00:	f3bf 8f4f 	dsb	sy
 800ef04:	f3bf 8f6f 	isb	sy
 800ef08:	e784      	b.n	800ee14 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ef0a:	f7ff f835 	bl	800df78 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800ef0e:	b92f      	cbnz	r7, 800ef1c <xQueueSemaphoreTake+0x28c>
}
 800ef10:	4638      	mov	r0, r7
 800ef12:	b004      	add	sp, #16
 800ef14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef18:	4607      	mov	r7, r0
 800ef1a:	e6d1      	b.n	800ecc0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800ef1c:	f7ff f80a 	bl	800df34 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ef20:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ef22:	b119      	cbz	r1, 800ef2c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ef24:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ef26:	6819      	ldr	r1, [r3, #0]
 800ef28:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ef2c:	68a0      	ldr	r0, [r4, #8]
 800ef2e:	f000 ffbd 	bl	800feac <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800ef32:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800ef34:	f7ff f820 	bl	800df78 <vPortExitCritical>
 800ef38:	e7ea      	b.n	800ef10 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800ef3a:	f7fe fffb 	bl	800df34 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ef3e:	68a0      	ldr	r0, [r4, #8]
 800ef40:	f000 ff28 	bl	800fd94 <xTaskPriorityInherit>
 800ef44:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800ef46:	f7ff f817 	bl	800df78 <vPortExitCritical>
 800ef4a:	e793      	b.n	800ee74 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800ef4c:	b197      	cbz	r7, 800ef74 <xQueueSemaphoreTake+0x2e4>
 800ef4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef52:	f383 8811 	msr	BASEPRI, r3
 800ef56:	f3bf 8f6f 	isb	sy
 800ef5a:	f3bf 8f4f 	dsb	sy
 800ef5e:	e7fe      	b.n	800ef5e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ef60:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ef62:	3b01      	subs	r3, #1
 800ef64:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ef66:	b1ca      	cbz	r2, 800ef9c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef68:	6923      	ldr	r3, [r4, #16]
 800ef6a:	b933      	cbnz	r3, 800ef7a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ef6c:	f7ff f804 	bl	800df78 <vPortExitCritical>
				return pdPASS;
 800ef70:	2701      	movs	r7, #1
 800ef72:	e7cd      	b.n	800ef10 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ef74:	f7ff f800 	bl	800df78 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ef78:	e7ca      	b.n	800ef10 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef7a:	f104 0010 	add.w	r0, r4, #16
 800ef7e:	f000 fe57 	bl	800fc30 <xTaskRemoveFromEventList>
 800ef82:	2800      	cmp	r0, #0
 800ef84:	d0f2      	beq.n	800ef6c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ef86:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef8a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef92:	f3bf 8f4f 	dsb	sy
 800ef96:	f3bf 8f6f 	isb	sy
 800ef9a:	e7e7      	b.n	800ef6c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ef9c:	f000 ffda 	bl	800ff54 <pvTaskIncrementMutexHeldCount>
 800efa0:	60a0      	str	r0, [r4, #8]
 800efa2:	e7e1      	b.n	800ef68 <xQueueSemaphoreTake+0x2d8>

0800efa4 <xQueueReceiveFromISR>:
{
 800efa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800efa8:	b310      	cbz	r0, 800eff0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800efaa:	460e      	mov	r6, r1
 800efac:	4617      	mov	r7, r2
 800efae:	4604      	mov	r4, r0
 800efb0:	b191      	cbz	r1, 800efd8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800efb2:	f7ff f8f3 	bl	800e19c <vPortValidateInterruptPriority>
	__asm volatile
 800efb6:	f3ef 8911 	mrs	r9, BASEPRI
 800efba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efbe:	f383 8811 	msr	BASEPRI, r3
 800efc2:	f3bf 8f6f 	isb	sy
 800efc6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800efca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800efcc:	b9cd      	cbnz	r5, 800f002 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800efce:	4628      	mov	r0, r5
	__asm volatile
 800efd0:	f389 8811 	msr	BASEPRI, r9
}
 800efd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800efd8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800efda:	2b00      	cmp	r3, #0
 800efdc:	d0e9      	beq.n	800efb2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800efde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efe2:	f383 8811 	msr	BASEPRI, r3
 800efe6:	f3bf 8f6f 	isb	sy
 800efea:	f3bf 8f4f 	dsb	sy
 800efee:	e7fe      	b.n	800efee <xQueueReceiveFromISR+0x4a>
 800eff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eff4:	f383 8811 	msr	BASEPRI, r3
 800eff8:	f3bf 8f6f 	isb	sy
 800effc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f000:	e7fe      	b.n	800f000 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f002:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f006:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800f008:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f00c:	b152      	cbz	r2, 800f024 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f00e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f010:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f012:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f014:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f016:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f018:	bf24      	itt	cs
 800f01a:	6821      	ldrcs	r1, [r4, #0]
 800f01c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f01e:	4630      	mov	r0, r6
 800f020:	f01c f95f 	bl	802b2e2 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f024:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f026:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f02a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f02c:	d009      	beq.n	800f042 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f02e:	f108 0301 	add.w	r3, r8, #1
 800f032:	b25b      	sxtb	r3, r3
 800f034:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800f038:	2001      	movs	r0, #1
	__asm volatile
 800f03a:	f389 8811 	msr	BASEPRI, r9
}
 800f03e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f042:	6923      	ldr	r3, [r4, #16]
 800f044:	2b00      	cmp	r3, #0
 800f046:	d0f7      	beq.n	800f038 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f048:	f104 0010 	add.w	r0, r4, #16
 800f04c:	f000 fdf0 	bl	800fc30 <xTaskRemoveFromEventList>
 800f050:	2800      	cmp	r0, #0
 800f052:	d0f1      	beq.n	800f038 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f054:	2f00      	cmp	r7, #0
 800f056:	d0ef      	beq.n	800f038 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f058:	2001      	movs	r0, #1
 800f05a:	6038      	str	r0, [r7, #0]
 800f05c:	e7b8      	b.n	800efd0 <xQueueReceiveFromISR+0x2c>
 800f05e:	bf00      	nop

0800f060 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f060:	b158      	cbz	r0, 800f07a <uxQueueMessagesWaiting+0x1a>
{
 800f062:	b510      	push	{r4, lr}
 800f064:	4604      	mov	r4, r0
 800f066:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f068:	f7fe ff64 	bl	800df34 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f06c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f06e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f070:	f7fe ff82 	bl	800df78 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f074:	9801      	ldr	r0, [sp, #4]
 800f076:	b002      	add	sp, #8
 800f078:	bd10      	pop	{r4, pc}
	__asm volatile
 800f07a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f07e:	f383 8811 	msr	BASEPRI, r3
 800f082:	f3bf 8f6f 	isb	sy
 800f086:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f08a:	e7fe      	b.n	800f08a <uxQueueMessagesWaiting+0x2a>

0800f08c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f08c:	b108      	cbz	r0, 800f092 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f08e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f090:	4770      	bx	lr
 800f092:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f096:	f383 8811 	msr	BASEPRI, r3
 800f09a:	f3bf 8f6f 	isb	sy
 800f09e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f0a2:	e7fe      	b.n	800f0a2 <uxQueueMessagesWaitingFromISR+0x16>
 800f0a4:	0000      	movs	r0, r0
	...

0800f0a8 <vQueueDelete>:
	configASSERT( pxQueue );
 800f0a8:	b1f0      	cbz	r0, 800f0e8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f0aa:	4b21      	ldr	r3, [pc, #132]	; (800f130 <vQueueDelete+0x88>)
 800f0ac:	685a      	ldr	r2, [r3, #4]
 800f0ae:	4290      	cmp	r0, r2
 800f0b0:	d025      	beq.n	800f0fe <vQueueDelete+0x56>
 800f0b2:	68da      	ldr	r2, [r3, #12]
 800f0b4:	4290      	cmp	r0, r2
 800f0b6:	d02c      	beq.n	800f112 <vQueueDelete+0x6a>
 800f0b8:	695a      	ldr	r2, [r3, #20]
 800f0ba:	4290      	cmp	r0, r2
 800f0bc:	d02b      	beq.n	800f116 <vQueueDelete+0x6e>
 800f0be:	69da      	ldr	r2, [r3, #28]
 800f0c0:	4290      	cmp	r0, r2
 800f0c2:	d02a      	beq.n	800f11a <vQueueDelete+0x72>
 800f0c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f0c6:	4290      	cmp	r0, r2
 800f0c8:	d029      	beq.n	800f11e <vQueueDelete+0x76>
 800f0ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f0cc:	4290      	cmp	r0, r2
 800f0ce:	d01e      	beq.n	800f10e <vQueueDelete+0x66>
 800f0d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f0d2:	4290      	cmp	r0, r2
 800f0d4:	d025      	beq.n	800f122 <vQueueDelete+0x7a>
 800f0d6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f0d8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f0da:	bf08      	it	eq
 800f0dc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f0de:	d00f      	beq.n	800f100 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f0e0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f0e4:	b14b      	cbz	r3, 800f0fa <vQueueDelete+0x52>
}
 800f0e6:	4770      	bx	lr
 800f0e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ec:	f383 8811 	msr	BASEPRI, r3
 800f0f0:	f3bf 8f6f 	isb	sy
 800f0f4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f0f8:	e7fe      	b.n	800f0f8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f0fa:	f7fe be07 	b.w	800dd0c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f0fe:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f100:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f128 <vQueueDelete+0x80>
 800f104:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f108:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f10c:	e7e8      	b.n	800f0e0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f10e:	2205      	movs	r2, #5
 800f110:	e7f6      	b.n	800f100 <vQueueDelete+0x58>
 800f112:	2201      	movs	r2, #1
 800f114:	e7f4      	b.n	800f100 <vQueueDelete+0x58>
 800f116:	2202      	movs	r2, #2
 800f118:	e7f2      	b.n	800f100 <vQueueDelete+0x58>
 800f11a:	2203      	movs	r2, #3
 800f11c:	e7f0      	b.n	800f100 <vQueueDelete+0x58>
 800f11e:	2204      	movs	r2, #4
 800f120:	e7ee      	b.n	800f100 <vQueueDelete+0x58>
 800f122:	2206      	movs	r2, #6
 800f124:	e7ec      	b.n	800f100 <vQueueDelete+0x58>
 800f126:	bf00      	nop
	...
 800f130:	20012730 	.word	0x20012730

0800f134 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f134:	4b12      	ldr	r3, [pc, #72]	; (800f180 <vQueueAddToRegistry+0x4c>)
 800f136:	681a      	ldr	r2, [r3, #0]
 800f138:	b17a      	cbz	r2, 800f15a <vQueueAddToRegistry+0x26>
 800f13a:	689a      	ldr	r2, [r3, #8]
 800f13c:	b162      	cbz	r2, 800f158 <vQueueAddToRegistry+0x24>
 800f13e:	691a      	ldr	r2, [r3, #16]
 800f140:	b192      	cbz	r2, 800f168 <vQueueAddToRegistry+0x34>
 800f142:	699a      	ldr	r2, [r3, #24]
 800f144:	b192      	cbz	r2, 800f16c <vQueueAddToRegistry+0x38>
 800f146:	6a1a      	ldr	r2, [r3, #32]
 800f148:	b192      	cbz	r2, 800f170 <vQueueAddToRegistry+0x3c>
 800f14a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f14c:	b192      	cbz	r2, 800f174 <vQueueAddToRegistry+0x40>
 800f14e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f150:	b192      	cbz	r2, 800f178 <vQueueAddToRegistry+0x44>
 800f152:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f154:	b192      	cbz	r2, 800f17c <vQueueAddToRegistry+0x48>
	}
 800f156:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f158:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f15a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f15e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f162:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f166:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f168:	2202      	movs	r2, #2
 800f16a:	e7f6      	b.n	800f15a <vQueueAddToRegistry+0x26>
 800f16c:	2203      	movs	r2, #3
 800f16e:	e7f4      	b.n	800f15a <vQueueAddToRegistry+0x26>
 800f170:	2204      	movs	r2, #4
 800f172:	e7f2      	b.n	800f15a <vQueueAddToRegistry+0x26>
 800f174:	2205      	movs	r2, #5
 800f176:	e7f0      	b.n	800f15a <vQueueAddToRegistry+0x26>
 800f178:	2206      	movs	r2, #6
 800f17a:	e7ee      	b.n	800f15a <vQueueAddToRegistry+0x26>
 800f17c:	2207      	movs	r2, #7
 800f17e:	e7ec      	b.n	800f15a <vQueueAddToRegistry+0x26>
 800f180:	20012730 	.word	0x20012730

0800f184 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f184:	b570      	push	{r4, r5, r6, lr}
 800f186:	4605      	mov	r5, r0
 800f188:	460e      	mov	r6, r1
 800f18a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f18c:	f7fe fed2 	bl	800df34 <vPortEnterCritical>
 800f190:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f194:	2bff      	cmp	r3, #255	; 0xff
 800f196:	bf04      	itt	eq
 800f198:	2300      	moveq	r3, #0
 800f19a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f19e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f1a2:	2bff      	cmp	r3, #255	; 0xff
 800f1a4:	bf04      	itt	eq
 800f1a6:	2300      	moveq	r3, #0
 800f1a8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f1ac:	f7fe fee4 	bl	800df78 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f1b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f1b2:	2b00      	cmp	r3, #0
 800f1b4:	d043      	beq.n	800f23e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f1b6:	f7fe febd 	bl	800df34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f1ba:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f1be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f1c0:	2c00      	cmp	r4, #0
 800f1c2:	dd14      	ble.n	800f1ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f1c4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f1c8:	e003      	b.n	800f1d2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f1ca:	1e63      	subs	r3, r4, #1
 800f1cc:	b2da      	uxtb	r2, r3
 800f1ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f1d0:	b16a      	cbz	r2, 800f1ee <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f1d2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f1d4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f1d6:	b153      	cbz	r3, 800f1ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f1d8:	f000 fd2a 	bl	800fc30 <xTaskRemoveFromEventList>
 800f1dc:	2800      	cmp	r0, #0
 800f1de:	d0f4      	beq.n	800f1ca <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f1e0:	f000 fdc2 	bl	800fd68 <vTaskMissedYield>
			--cTxLock;
 800f1e4:	1e63      	subs	r3, r4, #1
 800f1e6:	b2da      	uxtb	r2, r3
 800f1e8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f1ea:	2a00      	cmp	r2, #0
 800f1ec:	d1f1      	bne.n	800f1d2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f1ee:	23ff      	movs	r3, #255	; 0xff
 800f1f0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f1f4:	f7fe fec0 	bl	800df78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f1f8:	f7fe fe9c 	bl	800df34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f1fc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f200:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f202:	2c00      	cmp	r4, #0
 800f204:	dd14      	ble.n	800f230 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f206:	f105 0610 	add.w	r6, r5, #16
 800f20a:	e003      	b.n	800f214 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f20c:	1e63      	subs	r3, r4, #1
 800f20e:	b2da      	uxtb	r2, r3
 800f210:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f212:	b16a      	cbz	r2, 800f230 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f214:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f216:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f218:	b153      	cbz	r3, 800f230 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f21a:	f000 fd09 	bl	800fc30 <xTaskRemoveFromEventList>
 800f21e:	2800      	cmp	r0, #0
 800f220:	d0f4      	beq.n	800f20c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f222:	f000 fda1 	bl	800fd68 <vTaskMissedYield>
				--cRxLock;
 800f226:	1e63      	subs	r3, r4, #1
 800f228:	b2da      	uxtb	r2, r3
 800f22a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f22c:	2a00      	cmp	r2, #0
 800f22e:	d1f1      	bne.n	800f214 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f230:	23ff      	movs	r3, #255	; 0xff
 800f232:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f236:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f23a:	f7fe be9d 	b.w	800df78 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f23e:	4622      	mov	r2, r4
 800f240:	4631      	mov	r1, r6
 800f242:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f246:	f000 fca9 	bl	800fb9c <vTaskPlaceOnEventListRestricted>
 800f24a:	e7b4      	b.n	800f1b6 <vQueueWaitForMessageRestricted+0x32>

0800f24c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f24c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f250:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f252:	f7fe fe6f 	bl	800df34 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f256:	4a34      	ldr	r2, [pc, #208]	; (800f328 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f258:	4e34      	ldr	r6, [pc, #208]	; (800f32c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f25a:	6813      	ldr	r3, [r2, #0]
 800f25c:	3301      	adds	r3, #1
 800f25e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f260:	6833      	ldr	r3, [r6, #0]
 800f262:	2b00      	cmp	r3, #0
 800f264:	d032      	beq.n	800f2cc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f266:	4c32      	ldr	r4, [pc, #200]	; (800f330 <prvAddNewTaskToReadyList+0xe4>)
 800f268:	6823      	ldr	r3, [r4, #0]
 800f26a:	b33b      	cbz	r3, 800f2bc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f26c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f26e:	4f31      	ldr	r7, [pc, #196]	; (800f334 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f270:	4a31      	ldr	r2, [pc, #196]	; (800f338 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f272:	4932      	ldr	r1, [pc, #200]	; (800f33c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f274:	6813      	ldr	r3, [r2, #0]
 800f276:	3301      	adds	r3, #1
 800f278:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f27a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f27c:	680b      	ldr	r3, [r1, #0]
 800f27e:	4283      	cmp	r3, r0
 800f280:	bf38      	it	cc
 800f282:	6008      	strcc	r0, [r1, #0]
 800f284:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f288:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f28c:	1d29      	adds	r1, r5, #4
 800f28e:	f7fe fdb1 	bl	800ddf4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f292:	f7fe fe71 	bl	800df78 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f296:	6823      	ldr	r3, [r4, #0]
 800f298:	b173      	cbz	r3, 800f2b8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f29a:	6832      	ldr	r2, [r6, #0]
 800f29c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f29e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f2a0:	429a      	cmp	r2, r3
 800f2a2:	d209      	bcs.n	800f2b8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f2a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f2a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f2ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f2b0:	f3bf 8f4f 	dsb	sy
 800f2b4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f2b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f2bc:	6833      	ldr	r3, [r6, #0]
 800f2be:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f2c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2c2:	4f1c      	ldr	r7, [pc, #112]	; (800f334 <prvAddNewTaskToReadyList+0xe8>)
 800f2c4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f2c6:	bf98      	it	ls
 800f2c8:	6035      	strls	r5, [r6, #0]
 800f2ca:	e7d1      	b.n	800f270 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f2cc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f2ce:	6813      	ldr	r3, [r2, #0]
 800f2d0:	2b01      	cmp	r3, #1
 800f2d2:	d003      	beq.n	800f2dc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f2d4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f2d6:	4f17      	ldr	r7, [pc, #92]	; (800f334 <prvAddNewTaskToReadyList+0xe8>)
 800f2d8:	4c15      	ldr	r4, [pc, #84]	; (800f330 <prvAddNewTaskToReadyList+0xe4>)
 800f2da:	e7c9      	b.n	800f270 <prvAddNewTaskToReadyList+0x24>
 800f2dc:	4f15      	ldr	r7, [pc, #84]	; (800f334 <prvAddNewTaskToReadyList+0xe8>)
 800f2de:	463c      	mov	r4, r7
 800f2e0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f2e4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f2e6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f2e8:	f7fe fd74 	bl	800ddd4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f2ec:	45a0      	cmp	r8, r4
 800f2ee:	d1f9      	bne.n	800f2e4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f2f0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f354 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f2f4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f358 <prvAddNewTaskToReadyList+0x10c>
 800f2f8:	4c0d      	ldr	r4, [pc, #52]	; (800f330 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f2fa:	4648      	mov	r0, r9
 800f2fc:	f7fe fd6a 	bl	800ddd4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f300:	4640      	mov	r0, r8
 800f302:	f7fe fd67 	bl	800ddd4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f306:	480e      	ldr	r0, [pc, #56]	; (800f340 <prvAddNewTaskToReadyList+0xf4>)
 800f308:	f7fe fd64 	bl	800ddd4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f30c:	480d      	ldr	r0, [pc, #52]	; (800f344 <prvAddNewTaskToReadyList+0xf8>)
 800f30e:	f7fe fd61 	bl	800ddd4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f312:	480d      	ldr	r0, [pc, #52]	; (800f348 <prvAddNewTaskToReadyList+0xfc>)
 800f314:	f7fe fd5e 	bl	800ddd4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f318:	4b0c      	ldr	r3, [pc, #48]	; (800f34c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f31a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f31c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f320:	4b0b      	ldr	r3, [pc, #44]	; (800f350 <prvAddNewTaskToReadyList+0x104>)
 800f322:	f8c3 8000 	str.w	r8, [r3]
}
 800f326:	e7a3      	b.n	800f270 <prvAddNewTaskToReadyList+0x24>
 800f328:	20012bdc 	.word	0x20012bdc
 800f32c:	20012770 	.word	0x20012770
 800f330:	20012c38 	.word	0x20012c38
 800f334:	2001277c 	.word	0x2001277c
 800f338:	20012be8 	.word	0x20012be8
 800f33c:	20012bec 	.word	0x20012bec
 800f340:	20012c24 	.word	0x20012c24
 800f344:	20012c50 	.word	0x20012c50
 800f348:	20012c3c 	.word	0x20012c3c
 800f34c:	20012774 	.word	0x20012774
 800f350:	20012778 	.word	0x20012778
 800f354:	20012bf0 	.word	0x20012bf0
 800f358:	20012c04 	.word	0x20012c04

0800f35c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f35c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f360:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f362:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f366:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f36a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f36c:	4606      	mov	r6, r0
 800f36e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f370:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f372:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f374:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f376:	f01b fe8e 	bl	802b096 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f37a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f37c:	f1a9 0904 	sub.w	r9, r9, #4
 800f380:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f382:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f386:	2d00      	cmp	r5, #0
 800f388:	d079      	beq.n	800f47e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f38a:	782b      	ldrb	r3, [r5, #0]
 800f38c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f390:	2b00      	cmp	r3, #0
 800f392:	d03b      	beq.n	800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f394:	786b      	ldrb	r3, [r5, #1]
 800f396:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f39a:	2b00      	cmp	r3, #0
 800f39c:	d036      	beq.n	800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f39e:	78ab      	ldrb	r3, [r5, #2]
 800f3a0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f3a4:	b393      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3a6:	78eb      	ldrb	r3, [r5, #3]
 800f3a8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f3ac:	b373      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3ae:	792b      	ldrb	r3, [r5, #4]
 800f3b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f3b4:	b353      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3b6:	796b      	ldrb	r3, [r5, #5]
 800f3b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f3bc:	b333      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3be:	79ab      	ldrb	r3, [r5, #6]
 800f3c0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f3c4:	b313      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3c6:	79eb      	ldrb	r3, [r5, #7]
 800f3c8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f3cc:	b1f3      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3ce:	7a2b      	ldrb	r3, [r5, #8]
 800f3d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f3d4:	b1d3      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3d6:	7a6b      	ldrb	r3, [r5, #9]
 800f3d8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f3dc:	b1b3      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3de:	7aab      	ldrb	r3, [r5, #10]
 800f3e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f3e4:	b193      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3e6:	7aeb      	ldrb	r3, [r5, #11]
 800f3e8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f3ec:	b173      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3ee:	7b2b      	ldrb	r3, [r5, #12]
 800f3f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f3f4:	b153      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3f6:	7b6b      	ldrb	r3, [r5, #13]
 800f3f8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f3fc:	b133      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3fe:	7bab      	ldrb	r3, [r5, #14]
 800f400:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f404:	b113      	cbz	r3, 800f40c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f406:	7beb      	ldrb	r3, [r5, #15]
 800f408:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f40c:	2300      	movs	r3, #0
 800f40e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f412:	9d08      	ldr	r5, [sp, #32]
 800f414:	2d37      	cmp	r5, #55	; 0x37
 800f416:	bf28      	it	cs
 800f418:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f41a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f41e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f420:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f422:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f424:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f428:	f7fe fce0 	bl	800ddec <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f42c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f430:	f104 0018 	add.w	r0, r4, #24
 800f434:	f7fe fcda 	bl	800ddec <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f438:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f43a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f43e:	4651      	mov	r1, sl
 800f440:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f442:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f444:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f446:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f44a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f44e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f452:	f01b fe20 	bl	802b096 <memset>
 800f456:	4b0b      	ldr	r3, [pc, #44]	; (800f484 <prvInitialiseNewTask.constprop.0+0x128>)
 800f458:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f45a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f45e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f460:	463a      	mov	r2, r7
 800f462:	4631      	mov	r1, r6
 800f464:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f466:	6625      	str	r5, [r4, #96]	; 0x60
 800f468:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f46a:	f7fe fd3d 	bl	800dee8 <pxPortInitialiseStack>
 800f46e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f470:	f1b8 0f00 	cmp.w	r8, #0
 800f474:	d001      	beq.n	800f47a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f476:	f8c8 4000 	str.w	r4, [r8]
}
 800f47a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f47e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f482:	e7c6      	b.n	800f412 <prvInitialiseNewTask.constprop.0+0xb6>
 800f484:	20013700 	.word	0x20013700

0800f488 <prvIdleTask>:
{
 800f488:	b580      	push	{r7, lr}
 800f48a:	4d23      	ldr	r5, [pc, #140]	; (800f518 <prvIdleTask+0x90>)
 800f48c:	4f23      	ldr	r7, [pc, #140]	; (800f51c <prvIdleTask+0x94>)
 800f48e:	4e24      	ldr	r6, [pc, #144]	; (800f520 <prvIdleTask+0x98>)
 800f490:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f524 <prvIdleTask+0x9c>
				taskYIELD();
 800f494:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f498:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f49c:	682b      	ldr	r3, [r5, #0]
 800f49e:	b35b      	cbz	r3, 800f4f8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f4a0:	f7fe fd48 	bl	800df34 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4a4:	68fb      	ldr	r3, [r7, #12]
 800f4a6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f4a8:	1d20      	adds	r0, r4, #4
 800f4aa:	f7fe fccb 	bl	800de44 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f4ae:	6833      	ldr	r3, [r6, #0]
 800f4b0:	3b01      	subs	r3, #1
 800f4b2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f4b4:	682b      	ldr	r3, [r5, #0]
 800f4b6:	3b01      	subs	r3, #1
 800f4b8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f4ba:	f7fe fd5d 	bl	800df78 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f4be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f4c2:	f01b fe31 	bl	802b128 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f4c6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f4ca:	b163      	cbz	r3, 800f4e6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f4cc:	2b01      	cmp	r3, #1
 800f4ce:	d01e      	beq.n	800f50e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f4d0:	2b02      	cmp	r3, #2
 800f4d2:	d0e3      	beq.n	800f49c <prvIdleTask+0x14>
 800f4d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4d8:	f383 8811 	msr	BASEPRI, r3
 800f4dc:	f3bf 8f6f 	isb	sy
 800f4e0:	f3bf 8f4f 	dsb	sy
 800f4e4:	e7fe      	b.n	800f4e4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f4e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f4e8:	f7fe fc10 	bl	800dd0c <vPortFree>
				vPortFree( pxTCB );
 800f4ec:	4620      	mov	r0, r4
 800f4ee:	f7fe fc0d 	bl	800dd0c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f4f2:	682b      	ldr	r3, [r5, #0]
 800f4f4:	2b00      	cmp	r3, #0
 800f4f6:	d1d3      	bne.n	800f4a0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f4f8:	f8d8 3000 	ldr.w	r3, [r8]
 800f4fc:	2b01      	cmp	r3, #1
 800f4fe:	d9cd      	bls.n	800f49c <prvIdleTask+0x14>
				taskYIELD();
 800f500:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f504:	f3bf 8f4f 	dsb	sy
 800f508:	f3bf 8f6f 	isb	sy
 800f50c:	e7c6      	b.n	800f49c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f50e:	4620      	mov	r0, r4
 800f510:	f7fe fbfc 	bl	800dd0c <vPortFree>
 800f514:	e7c2      	b.n	800f49c <prvIdleTask+0x14>
 800f516:	bf00      	nop
 800f518:	20012be0 	.word	0x20012be0
 800f51c:	20012c50 	.word	0x20012c50
 800f520:	20012bdc 	.word	0x20012bdc
 800f524:	2001277c 	.word	0x2001277c

0800f528 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f52c:	4b47      	ldr	r3, [pc, #284]	; (800f64c <xTaskIncrementTick.part.0+0x124>)
 800f52e:	681e      	ldr	r6, [r3, #0]
 800f530:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f532:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f534:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f536:	2e00      	cmp	r6, #0
 800f538:	d040      	beq.n	800f5bc <xTaskIncrementTick.part.0+0x94>
 800f53a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f660 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f53e:	f8db 3000 	ldr.w	r3, [fp]
 800f542:	429e      	cmp	r6, r3
 800f544:	d347      	bcc.n	800f5d6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f546:	4f42      	ldr	r7, [pc, #264]	; (800f650 <xTaskIncrementTick.part.0+0x128>)
 800f548:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f664 <xTaskIncrementTick.part.0+0x13c>
 800f54c:	683b      	ldr	r3, [r7, #0]
 800f54e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f668 <xTaskIncrementTick.part.0+0x140>
 800f552:	681d      	ldr	r5, [r3, #0]
 800f554:	2d00      	cmp	r5, #0
 800f556:	d073      	beq.n	800f640 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f558:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f66c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f55c:	2500      	movs	r5, #0
 800f55e:	e022      	b.n	800f5a6 <xTaskIncrementTick.part.0+0x7e>
 800f560:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f562:	f7fe fc6f 	bl	800de44 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f566:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f568:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f56a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f56e:	b113      	cbz	r3, 800f576 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f570:	f7fe fc68 	bl	800de44 <uxListRemove>
 800f574:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f576:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f578:	f8d8 2000 	ldr.w	r2, [r8]
 800f57c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f580:	4293      	cmp	r3, r2
 800f582:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f586:	bf88      	it	hi
 800f588:	f8c8 3000 	strhi.w	r3, [r8]
 800f58c:	f7fe fc32 	bl	800ddf4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f590:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f594:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f596:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f598:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f59a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f59c:	4291      	cmp	r1, r2
 800f59e:	bf28      	it	cs
 800f5a0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f5a2:	2b00      	cmp	r3, #0
 800f5a4:	d04c      	beq.n	800f640 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5a6:	683b      	ldr	r3, [r7, #0]
 800f5a8:	68db      	ldr	r3, [r3, #12]
 800f5aa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f5ac:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f5ae:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f5b0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f5b2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f5b4:	d2d4      	bcs.n	800f560 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f5b6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f5ba:	e011      	b.n	800f5e0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f5bc:	4b24      	ldr	r3, [pc, #144]	; (800f650 <xTaskIncrementTick.part.0+0x128>)
 800f5be:	681a      	ldr	r2, [r3, #0]
 800f5c0:	6812      	ldr	r2, [r2, #0]
 800f5c2:	b30a      	cbz	r2, 800f608 <xTaskIncrementTick.part.0+0xe0>
 800f5c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5c8:	f383 8811 	msr	BASEPRI, r3
 800f5cc:	f3bf 8f6f 	isb	sy
 800f5d0:	f3bf 8f4f 	dsb	sy
 800f5d4:	e7fe      	b.n	800f5d4 <xTaskIncrementTick.part.0+0xac>
 800f5d6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f664 <xTaskIncrementTick.part.0+0x13c>
 800f5da:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f668 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f5de:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f5e0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f5e4:	491b      	ldr	r1, [pc, #108]	; (800f654 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f5e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f5e8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f5ec:	009b      	lsls	r3, r3, #2
 800f5ee:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f5f2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f5f4:	2a02      	cmp	r2, #2
 800f5f6:	bf28      	it	cs
 800f5f8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f5fa:	2b00      	cmp	r3, #0
}
 800f5fc:	bf0c      	ite	eq
 800f5fe:	4628      	moveq	r0, r5
 800f600:	2001      	movne	r0, #1
 800f602:	b003      	add	sp, #12
 800f604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f608:	4a13      	ldr	r2, [pc, #76]	; (800f658 <xTaskIncrementTick.part.0+0x130>)
 800f60a:	6818      	ldr	r0, [r3, #0]
 800f60c:	6811      	ldr	r1, [r2, #0]
 800f60e:	6019      	str	r1, [r3, #0]
 800f610:	4912      	ldr	r1, [pc, #72]	; (800f65c <xTaskIncrementTick.part.0+0x134>)
 800f612:	6010      	str	r0, [r2, #0]
 800f614:	680a      	ldr	r2, [r1, #0]
 800f616:	3201      	adds	r2, #1
 800f618:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f61a:	681a      	ldr	r2, [r3, #0]
 800f61c:	6812      	ldr	r2, [r2, #0]
 800f61e:	b932      	cbnz	r2, 800f62e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f620:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f660 <xTaskIncrementTick.part.0+0x138>
 800f624:	f04f 33ff 	mov.w	r3, #4294967295
 800f628:	f8cb 3000 	str.w	r3, [fp]
 800f62c:	e787      	b.n	800f53e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f62e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f630:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f660 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f634:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f636:	68db      	ldr	r3, [r3, #12]
 800f638:	685b      	ldr	r3, [r3, #4]
 800f63a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f63e:	e77e      	b.n	800f53e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f640:	f04f 33ff 	mov.w	r3, #4294967295
 800f644:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f648:	e7ca      	b.n	800f5e0 <xTaskIncrementTick.part.0+0xb8>
 800f64a:	bf00      	nop
 800f64c:	20012c64 	.word	0x20012c64
 800f650:	20012774 	.word	0x20012774
 800f654:	20012c68 	.word	0x20012c68
 800f658:	20012778 	.word	0x20012778
 800f65c:	20012c1c 	.word	0x20012c1c
 800f660:	20012c18 	.word	0x20012c18
 800f664:	2001277c 	.word	0x2001277c
 800f668:	20012770 	.word	0x20012770
 800f66c:	20012bec 	.word	0x20012bec

0800f670 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f674:	4d41      	ldr	r5, [pc, #260]	; (800f77c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f676:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f678:	f7fe fc5c 	bl	800df34 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f67c:	682b      	ldr	r3, [r5, #0]
 800f67e:	3b01      	subs	r3, #1
 800f680:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f682:	682b      	ldr	r3, [r5, #0]
 800f684:	2b00      	cmp	r3, #0
 800f686:	d161      	bne.n	800f74c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f688:	4b3d      	ldr	r3, [pc, #244]	; (800f780 <xTaskResumeAll.part.0+0x110>)
 800f68a:	681b      	ldr	r3, [r3, #0]
 800f68c:	2b00      	cmp	r3, #0
 800f68e:	d05d      	beq.n	800f74c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f690:	4e3c      	ldr	r6, [pc, #240]	; (800f784 <xTaskResumeAll.part.0+0x114>)
 800f692:	6833      	ldr	r3, [r6, #0]
 800f694:	2b00      	cmp	r3, #0
 800f696:	d06e      	beq.n	800f776 <xTaskResumeAll.part.0+0x106>
 800f698:	4f3b      	ldr	r7, [pc, #236]	; (800f788 <xTaskResumeAll.part.0+0x118>)
 800f69a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f798 <xTaskResumeAll.part.0+0x128>
 800f69e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f79c <xTaskResumeAll.part.0+0x12c>
 800f6a2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f7a0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6a6:	68f3      	ldr	r3, [r6, #12]
 800f6a8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f6aa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f6ae:	f104 0018 	add.w	r0, r4, #24
 800f6b2:	f7fe fbc7 	bl	800de44 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f6b6:	4658      	mov	r0, fp
 800f6b8:	f7fe fbc4 	bl	800de44 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f6bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f6be:	683a      	ldr	r2, [r7, #0]
 800f6c0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f6c4:	4293      	cmp	r3, r2
 800f6c6:	4659      	mov	r1, fp
 800f6c8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f6cc:	bf88      	it	hi
 800f6ce:	603b      	strhi	r3, [r7, #0]
 800f6d0:	f7fe fb90 	bl	800ddf4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f6d4:	f8d8 3000 	ldr.w	r3, [r8]
 800f6d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f6da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f6dc:	429a      	cmp	r2, r3
 800f6de:	d33d      	bcc.n	800f75c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f6e0:	2301      	movs	r3, #1
 800f6e2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f6e6:	6833      	ldr	r3, [r6, #0]
 800f6e8:	2b00      	cmp	r3, #0
 800f6ea:	d1dc      	bne.n	800f6a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f6ec:	4b27      	ldr	r3, [pc, #156]	; (800f78c <xTaskResumeAll.part.0+0x11c>)
 800f6ee:	681a      	ldr	r2, [r3, #0]
 800f6f0:	6812      	ldr	r2, [r2, #0]
 800f6f2:	2a00      	cmp	r2, #0
 800f6f4:	d03a      	beq.n	800f76c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6f6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f6f8:	4b25      	ldr	r3, [pc, #148]	; (800f790 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6fa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f6fc:	68d2      	ldr	r2, [r2, #12]
 800f6fe:	6852      	ldr	r2, [r2, #4]
 800f700:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f702:	4e24      	ldr	r6, [pc, #144]	; (800f794 <xTaskResumeAll.part.0+0x124>)
 800f704:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f706:	b194      	cbz	r4, 800f72e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f708:	2701      	movs	r7, #1
 800f70a:	e006      	b.n	800f71a <xTaskResumeAll.part.0+0xaa>
 800f70c:	f7ff ff0c 	bl	800f528 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f710:	b108      	cbz	r0, 800f716 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f712:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f716:	3c01      	subs	r4, #1
 800f718:	d008      	beq.n	800f72c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f71a:	682b      	ldr	r3, [r5, #0]
 800f71c:	2b00      	cmp	r3, #0
 800f71e:	d0f5      	beq.n	800f70c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f720:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f722:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f724:	f103 0301 	add.w	r3, r3, #1
 800f728:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f72a:	d1f6      	bne.n	800f71a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f72c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f72e:	f8da 3000 	ldr.w	r3, [sl]
 800f732:	b15b      	cbz	r3, 800f74c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f734:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f738:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f73c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f740:	f3bf 8f4f 	dsb	sy
 800f744:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f748:	2001      	movs	r0, #1
 800f74a:	e000      	b.n	800f74e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f74c:	2000      	movs	r0, #0
 800f74e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f750:	f7fe fc12 	bl	800df78 <vPortExitCritical>
}
 800f754:	9801      	ldr	r0, [sp, #4]
 800f756:	b003      	add	sp, #12
 800f758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f75c:	6833      	ldr	r3, [r6, #0]
 800f75e:	2b00      	cmp	r3, #0
 800f760:	d1a1      	bne.n	800f6a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f762:	4b0a      	ldr	r3, [pc, #40]	; (800f78c <xTaskResumeAll.part.0+0x11c>)
 800f764:	681a      	ldr	r2, [r3, #0]
 800f766:	6812      	ldr	r2, [r2, #0]
 800f768:	2a00      	cmp	r2, #0
 800f76a:	d1c4      	bne.n	800f6f6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f76c:	4b08      	ldr	r3, [pc, #32]	; (800f790 <xTaskResumeAll.part.0+0x120>)
 800f76e:	f04f 32ff 	mov.w	r2, #4294967295
 800f772:	601a      	str	r2, [r3, #0]
 800f774:	e7c5      	b.n	800f702 <xTaskResumeAll.part.0+0x92>
 800f776:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f7a0 <xTaskResumeAll.part.0+0x130>
 800f77a:	e7c2      	b.n	800f702 <xTaskResumeAll.part.0+0x92>
 800f77c:	20012be4 	.word	0x20012be4
 800f780:	20012bdc 	.word	0x20012bdc
 800f784:	20012c24 	.word	0x20012c24
 800f788:	20012bec 	.word	0x20012bec
 800f78c:	20012774 	.word	0x20012774
 800f790:	20012c18 	.word	0x20012c18
 800f794:	20012c20 	.word	0x20012c20
 800f798:	2001277c 	.word	0x2001277c
 800f79c:	20012770 	.word	0x20012770
 800f7a0:	20012c68 	.word	0x20012c68

0800f7a4 <xTaskCreateStatic>:
	{
 800f7a4:	b530      	push	{r4, r5, lr}
 800f7a6:	b087      	sub	sp, #28
 800f7a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f7aa:	b1c4      	cbz	r4, 800f7de <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f7ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f7ae:	b16d      	cbz	r5, 800f7cc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f7b0:	25ac      	movs	r5, #172	; 0xac
 800f7b2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f7b4:	9d05      	ldr	r5, [sp, #20]
 800f7b6:	2dac      	cmp	r5, #172	; 0xac
 800f7b8:	d01a      	beq.n	800f7f0 <xTaskCreateStatic+0x4c>
 800f7ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7be:	f383 8811 	msr	BASEPRI, r3
 800f7c2:	f3bf 8f6f 	isb	sy
 800f7c6:	f3bf 8f4f 	dsb	sy
 800f7ca:	e7fe      	b.n	800f7ca <xTaskCreateStatic+0x26>
 800f7cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7d0:	f383 8811 	msr	BASEPRI, r3
 800f7d4:	f3bf 8f6f 	isb	sy
 800f7d8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f7dc:	e7fe      	b.n	800f7dc <xTaskCreateStatic+0x38>
 800f7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7e2:	f383 8811 	msr	BASEPRI, r3
 800f7e6:	f3bf 8f6f 	isb	sy
 800f7ea:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f7ee:	e7fe      	b.n	800f7ee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f7f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f7f2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f7f4:	2402      	movs	r4, #2
 800f7f6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f7fa:	ac04      	add	r4, sp, #16
 800f7fc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f800:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f802:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f804:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f806:	f7ff fda9 	bl	800f35c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f80a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f80c:	f7ff fd1e 	bl	800f24c <prvAddNewTaskToReadyList>
	}
 800f810:	9804      	ldr	r0, [sp, #16]
 800f812:	b007      	add	sp, #28
 800f814:	bd30      	pop	{r4, r5, pc}
 800f816:	bf00      	nop

0800f818 <xTaskCreate>:
	{
 800f818:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f81c:	4607      	mov	r7, r0
 800f81e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f820:	0090      	lsls	r0, r2, #2
	{
 800f822:	4615      	mov	r5, r2
 800f824:	4688      	mov	r8, r1
 800f826:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f828:	f7fe f9b4 	bl	800db94 <pvPortMalloc>
			if( pxStack != NULL )
 800f82c:	b1d8      	cbz	r0, 800f866 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f82e:	4604      	mov	r4, r0
 800f830:	20ac      	movs	r0, #172	; 0xac
 800f832:	f7fe f9af 	bl	800db94 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f836:	4606      	mov	r6, r0
 800f838:	b1d0      	cbz	r0, 800f870 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f83a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f83c:	2400      	movs	r4, #0
 800f83e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f842:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f844:	9401      	str	r4, [sp, #4]
 800f846:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f848:	9602      	str	r6, [sp, #8]
 800f84a:	464b      	mov	r3, r9
 800f84c:	462a      	mov	r2, r5
 800f84e:	4641      	mov	r1, r8
 800f850:	4638      	mov	r0, r7
 800f852:	9400      	str	r4, [sp, #0]
 800f854:	f7ff fd82 	bl	800f35c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f858:	4630      	mov	r0, r6
 800f85a:	f7ff fcf7 	bl	800f24c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f85e:	2001      	movs	r0, #1
	}
 800f860:	b005      	add	sp, #20
 800f862:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f866:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f86a:	b005      	add	sp, #20
 800f86c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f870:	4620      	mov	r0, r4
 800f872:	f7fe fa4b 	bl	800dd0c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f876:	f04f 30ff 	mov.w	r0, #4294967295
 800f87a:	e7f1      	b.n	800f860 <xTaskCreate+0x48>

0800f87c <vTaskDelay>:
	{
 800f87c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f87e:	b950      	cbnz	r0, 800f896 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f880:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f884:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f888:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f88c:	f3bf 8f4f 	dsb	sy
 800f890:	f3bf 8f6f 	isb	sy
	}
 800f894:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f896:	4d1e      	ldr	r5, [pc, #120]	; (800f910 <vTaskDelay+0x94>)
 800f898:	682b      	ldr	r3, [r5, #0]
 800f89a:	b143      	cbz	r3, 800f8ae <vTaskDelay+0x32>
 800f89c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8a0:	f383 8811 	msr	BASEPRI, r3
 800f8a4:	f3bf 8f6f 	isb	sy
 800f8a8:	f3bf 8f4f 	dsb	sy
 800f8ac:	e7fe      	b.n	800f8ac <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f8ae:	682b      	ldr	r3, [r5, #0]
 800f8b0:	3301      	adds	r3, #1
 800f8b2:	4604      	mov	r4, r0
 800f8b4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f8b6:	4b17      	ldr	r3, [pc, #92]	; (800f914 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f8b8:	4e17      	ldr	r6, [pc, #92]	; (800f918 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f8ba:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f8bc:	6830      	ldr	r0, [r6, #0]
 800f8be:	3004      	adds	r0, #4
 800f8c0:	f7fe fac0 	bl	800de44 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f8c4:	6833      	ldr	r3, [r6, #0]
 800f8c6:	19e4      	adds	r4, r4, r7
 800f8c8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f8ca:	d310      	bcc.n	800f8ee <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f8cc:	4b13      	ldr	r3, [pc, #76]	; (800f91c <vTaskDelay+0xa0>)
 800f8ce:	6818      	ldr	r0, [r3, #0]
 800f8d0:	6831      	ldr	r1, [r6, #0]
 800f8d2:	3104      	adds	r1, #4
 800f8d4:	f7fe fa9e 	bl	800de14 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f8d8:	682b      	ldr	r3, [r5, #0]
 800f8da:	b9a3      	cbnz	r3, 800f906 <vTaskDelay+0x8a>
 800f8dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8e0:	f383 8811 	msr	BASEPRI, r3
 800f8e4:	f3bf 8f6f 	isb	sy
 800f8e8:	f3bf 8f4f 	dsb	sy
 800f8ec:	e7fe      	b.n	800f8ec <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f8ee:	4b0c      	ldr	r3, [pc, #48]	; (800f920 <vTaskDelay+0xa4>)
 800f8f0:	6818      	ldr	r0, [r3, #0]
 800f8f2:	6831      	ldr	r1, [r6, #0]
 800f8f4:	3104      	adds	r1, #4
 800f8f6:	f7fe fa8d 	bl	800de14 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f8fa:	4b0a      	ldr	r3, [pc, #40]	; (800f924 <vTaskDelay+0xa8>)
 800f8fc:	681a      	ldr	r2, [r3, #0]
 800f8fe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f900:	bf38      	it	cc
 800f902:	601c      	strcc	r4, [r3, #0]
 800f904:	e7e8      	b.n	800f8d8 <vTaskDelay+0x5c>
 800f906:	f7ff feb3 	bl	800f670 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f90a:	2800      	cmp	r0, #0
 800f90c:	d0b8      	beq.n	800f880 <vTaskDelay+0x4>
	}
 800f90e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f910:	20012be4 	.word	0x20012be4
 800f914:	20012c64 	.word	0x20012c64
 800f918:	20012770 	.word	0x20012770
 800f91c:	20012778 	.word	0x20012778
 800f920:	20012774 	.word	0x20012774
 800f924:	20012c18 	.word	0x20012c18

0800f928 <vTaskStartScheduler>:
{
 800f928:	b530      	push	{r4, r5, lr}
 800f92a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f92c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f92e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f930:	a906      	add	r1, sp, #24
 800f932:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f934:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f938:	f7fe f90e 	bl	800db58 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f93c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f940:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f942:	b1bb      	cbz	r3, 800f974 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f944:	b16d      	cbz	r5, 800f962 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f946:	21ac      	movs	r1, #172	; 0xac
 800f948:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f94a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f94c:	29ac      	cmp	r1, #172	; 0xac
 800f94e:	d01a      	beq.n	800f986 <vTaskStartScheduler+0x5e>
 800f950:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f954:	f383 8811 	msr	BASEPRI, r3
 800f958:	f3bf 8f6f 	isb	sy
 800f95c:	f3bf 8f4f 	dsb	sy
 800f960:	e7fe      	b.n	800f960 <vTaskStartScheduler+0x38>
 800f962:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f966:	f383 8811 	msr	BASEPRI, r3
 800f96a:	f3bf 8f6f 	isb	sy
 800f96e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f972:	e7fe      	b.n	800f972 <vTaskStartScheduler+0x4a>
 800f974:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f978:	f383 8811 	msr	BASEPRI, r3
 800f97c:	f3bf 8f6f 	isb	sy
 800f980:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f984:	e7fe      	b.n	800f984 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f986:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f988:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f98a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f98c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f990:	4623      	mov	r3, r4
 800f992:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f996:	491b      	ldr	r1, [pc, #108]	; (800fa04 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f998:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f99a:	9400      	str	r4, [sp, #0]
 800f99c:	481a      	ldr	r0, [pc, #104]	; (800fa08 <vTaskStartScheduler+0xe0>)
 800f99e:	f7ff fcdd 	bl	800f35c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f9a2:	4628      	mov	r0, r5
 800f9a4:	f7ff fc52 	bl	800f24c <prvAddNewTaskToReadyList>
		return xReturn;
 800f9a8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f9aa:	b1eb      	cbz	r3, 800f9e8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f9ac:	f000 fc6e 	bl	801028c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f9b0:	2801      	cmp	r0, #1
 800f9b2:	d11b      	bne.n	800f9ec <vTaskStartScheduler+0xc4>
 800f9b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9b8:	f383 8811 	msr	BASEPRI, r3
 800f9bc:	f3bf 8f6f 	isb	sy
 800f9c0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f9c4:	4b11      	ldr	r3, [pc, #68]	; (800fa0c <vTaskStartScheduler+0xe4>)
 800f9c6:	4a12      	ldr	r2, [pc, #72]	; (800fa10 <vTaskStartScheduler+0xe8>)
 800f9c8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f9ca:	4912      	ldr	r1, [pc, #72]	; (800fa14 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f9cc:	3358      	adds	r3, #88	; 0x58
 800f9ce:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f9d0:	4a11      	ldr	r2, [pc, #68]	; (800fa18 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f9d2:	4b12      	ldr	r3, [pc, #72]	; (800fa1c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f9d4:	f04f 35ff 	mov.w	r5, #4294967295
 800f9d8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f9da:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f9dc:	601c      	str	r4, [r3, #0]
}
 800f9de:	b00b      	add	sp, #44	; 0x2c
 800f9e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f9e4:	f7fe bb38 	b.w	800e058 <xPortStartScheduler>
}
 800f9e8:	b00b      	add	sp, #44	; 0x2c
 800f9ea:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f9ec:	3001      	adds	r0, #1
 800f9ee:	d1fb      	bne.n	800f9e8 <vTaskStartScheduler+0xc0>
 800f9f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9f4:	f383 8811 	msr	BASEPRI, r3
 800f9f8:	f3bf 8f6f 	isb	sy
 800f9fc:	f3bf 8f4f 	dsb	sy
 800fa00:	e7fe      	b.n	800fa00 <vTaskStartScheduler+0xd8>
 800fa02:	bf00      	nop
 800fa04:	0802ed2c 	.word	0x0802ed2c
 800fa08:	0800f489 	.word	0x0800f489
 800fa0c:	20012770 	.word	0x20012770
 800fa10:	20000160 	.word	0x20000160
 800fa14:	20012c18 	.word	0x20012c18
 800fa18:	20012c38 	.word	0x20012c38
 800fa1c:	20012c64 	.word	0x20012c64

0800fa20 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fa20:	4a02      	ldr	r2, [pc, #8]	; (800fa2c <vTaskSuspendAll+0xc>)
 800fa22:	6813      	ldr	r3, [r2, #0]
 800fa24:	3301      	adds	r3, #1
 800fa26:	6013      	str	r3, [r2, #0]
}
 800fa28:	4770      	bx	lr
 800fa2a:	bf00      	nop
 800fa2c:	20012be4 	.word	0x20012be4

0800fa30 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800fa30:	4b06      	ldr	r3, [pc, #24]	; (800fa4c <xTaskResumeAll+0x1c>)
 800fa32:	681b      	ldr	r3, [r3, #0]
 800fa34:	b943      	cbnz	r3, 800fa48 <xTaskResumeAll+0x18>
 800fa36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa3a:	f383 8811 	msr	BASEPRI, r3
 800fa3e:	f3bf 8f6f 	isb	sy
 800fa42:	f3bf 8f4f 	dsb	sy
 800fa46:	e7fe      	b.n	800fa46 <xTaskResumeAll+0x16>
 800fa48:	f7ff be12 	b.w	800f670 <xTaskResumeAll.part.0>
 800fa4c:	20012be4 	.word	0x20012be4

0800fa50 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fa50:	4b01      	ldr	r3, [pc, #4]	; (800fa58 <xTaskGetTickCount+0x8>)
 800fa52:	6818      	ldr	r0, [r3, #0]
}
 800fa54:	4770      	bx	lr
 800fa56:	bf00      	nop
 800fa58:	20012c64 	.word	0x20012c64

0800fa5c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa5c:	4b05      	ldr	r3, [pc, #20]	; (800fa74 <xTaskIncrementTick+0x18>)
 800fa5e:	681b      	ldr	r3, [r3, #0]
 800fa60:	b90b      	cbnz	r3, 800fa66 <xTaskIncrementTick+0xa>
 800fa62:	f7ff bd61 	b.w	800f528 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800fa66:	4a04      	ldr	r2, [pc, #16]	; (800fa78 <xTaskIncrementTick+0x1c>)
 800fa68:	6813      	ldr	r3, [r2, #0]
 800fa6a:	3301      	adds	r3, #1
}
 800fa6c:	2000      	movs	r0, #0
		++xPendedTicks;
 800fa6e:	6013      	str	r3, [r2, #0]
}
 800fa70:	4770      	bx	lr
 800fa72:	bf00      	nop
 800fa74:	20012be4 	.word	0x20012be4
 800fa78:	20012c20 	.word	0x20012c20

0800fa7c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fa7c:	4b1f      	ldr	r3, [pc, #124]	; (800fafc <vTaskSwitchContext+0x80>)
 800fa7e:	681b      	ldr	r3, [r3, #0]
 800fa80:	b11b      	cbz	r3, 800fa8a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800fa82:	4b1f      	ldr	r3, [pc, #124]	; (800fb00 <vTaskSwitchContext+0x84>)
 800fa84:	2201      	movs	r2, #1
 800fa86:	601a      	str	r2, [r3, #0]
 800fa88:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800fa8a:	4a1d      	ldr	r2, [pc, #116]	; (800fb00 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa8c:	491d      	ldr	r1, [pc, #116]	; (800fb04 <vTaskSwitchContext+0x88>)
{
 800fa8e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa90:	4c1d      	ldr	r4, [pc, #116]	; (800fb08 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fa92:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa94:	6823      	ldr	r3, [r4, #0]
 800fa96:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fa9a:	0092      	lsls	r2, r2, #2
 800fa9c:	0098      	lsls	r0, r3, #2
 800fa9e:	588a      	ldr	r2, [r1, r2]
 800faa0:	b942      	cbnz	r2, 800fab4 <vTaskSwitchContext+0x38>
 800faa2:	b313      	cbz	r3, 800faea <vTaskSwitchContext+0x6e>
 800faa4:	3b01      	subs	r3, #1
 800faa6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800faaa:	0098      	lsls	r0, r3, #2
 800faac:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fab0:	2a00      	cmp	r2, #0
 800fab2:	d0f6      	beq.n	800faa2 <vTaskSwitchContext+0x26>
 800fab4:	4418      	add	r0, r3
 800fab6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800faba:	4662      	mov	r2, ip
 800fabc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fac0:	6849      	ldr	r1, [r1, #4]
 800fac2:	f8cc 1004 	str.w	r1, [ip, #4]
 800fac6:	3208      	adds	r2, #8
 800fac8:	4291      	cmp	r1, r2
 800faca:	bf08      	it	eq
 800facc:	6849      	ldreq	r1, [r1, #4]
 800face:	4a0f      	ldr	r2, [pc, #60]	; (800fb0c <vTaskSwitchContext+0x90>)
 800fad0:	bf08      	it	eq
 800fad2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fad6:	68c9      	ldr	r1, [r1, #12]
 800fad8:	6011      	str	r1, [r2, #0]
 800fada:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fadc:	6813      	ldr	r3, [r2, #0]
 800fade:	4a0c      	ldr	r2, [pc, #48]	; (800fb10 <vTaskSwitchContext+0x94>)
}
 800fae0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fae4:	3358      	adds	r3, #88	; 0x58
 800fae6:	6013      	str	r3, [r2, #0]
}
 800fae8:	4770      	bx	lr
 800faea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800faee:	f383 8811 	msr	BASEPRI, r3
 800faf2:	f3bf 8f6f 	isb	sy
 800faf6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fafa:	e7fe      	b.n	800fafa <vTaskSwitchContext+0x7e>
 800fafc:	20012be4 	.word	0x20012be4
 800fb00:	20012c68 	.word	0x20012c68
 800fb04:	2001277c 	.word	0x2001277c
 800fb08:	20012bec 	.word	0x20012bec
 800fb0c:	20012770 	.word	0x20012770
 800fb10:	20000160 	.word	0x20000160

0800fb14 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fb14:	b1d0      	cbz	r0, 800fb4c <vTaskPlaceOnEventList+0x38>
{
 800fb16:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fb18:	4d1a      	ldr	r5, [pc, #104]	; (800fb84 <vTaskPlaceOnEventList+0x70>)
 800fb1a:	460c      	mov	r4, r1
 800fb1c:	6829      	ldr	r1, [r5, #0]
 800fb1e:	3118      	adds	r1, #24
 800fb20:	f7fe f978 	bl	800de14 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fb24:	4b18      	ldr	r3, [pc, #96]	; (800fb88 <vTaskPlaceOnEventList+0x74>)
 800fb26:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb28:	6828      	ldr	r0, [r5, #0]
 800fb2a:	3004      	adds	r0, #4
 800fb2c:	f7fe f98a 	bl	800de44 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fb30:	1c63      	adds	r3, r4, #1
 800fb32:	d014      	beq.n	800fb5e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fb34:	682b      	ldr	r3, [r5, #0]
 800fb36:	19a4      	adds	r4, r4, r6
 800fb38:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fb3a:	d317      	bcc.n	800fb6c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb3c:	4b13      	ldr	r3, [pc, #76]	; (800fb8c <vTaskPlaceOnEventList+0x78>)
 800fb3e:	6818      	ldr	r0, [r3, #0]
 800fb40:	6829      	ldr	r1, [r5, #0]
}
 800fb42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb46:	3104      	adds	r1, #4
 800fb48:	f7fe b964 	b.w	800de14 <vListInsert>
 800fb4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb50:	f383 8811 	msr	BASEPRI, r3
 800fb54:	f3bf 8f6f 	isb	sy
 800fb58:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800fb5c:	e7fe      	b.n	800fb5c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb5e:	6829      	ldr	r1, [r5, #0]
 800fb60:	480b      	ldr	r0, [pc, #44]	; (800fb90 <vTaskPlaceOnEventList+0x7c>)
}
 800fb62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb66:	3104      	adds	r1, #4
 800fb68:	f7fe b944 	b.w	800ddf4 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb6c:	4b09      	ldr	r3, [pc, #36]	; (800fb94 <vTaskPlaceOnEventList+0x80>)
 800fb6e:	6818      	ldr	r0, [r3, #0]
 800fb70:	6829      	ldr	r1, [r5, #0]
 800fb72:	3104      	adds	r1, #4
 800fb74:	f7fe f94e 	bl	800de14 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fb78:	4b07      	ldr	r3, [pc, #28]	; (800fb98 <vTaskPlaceOnEventList+0x84>)
 800fb7a:	681a      	ldr	r2, [r3, #0]
 800fb7c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fb7e:	bf38      	it	cc
 800fb80:	601c      	strcc	r4, [r3, #0]
}
 800fb82:	bd70      	pop	{r4, r5, r6, pc}
 800fb84:	20012770 	.word	0x20012770
 800fb88:	20012c64 	.word	0x20012c64
 800fb8c:	20012778 	.word	0x20012778
 800fb90:	20012c3c 	.word	0x20012c3c
 800fb94:	20012774 	.word	0x20012774
 800fb98:	20012c18 	.word	0x20012c18

0800fb9c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fb9c:	b330      	cbz	r0, 800fbec <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fb9e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fba0:	4e1d      	ldr	r6, [pc, #116]	; (800fc18 <vTaskPlaceOnEventListRestricted+0x7c>)
 800fba2:	460c      	mov	r4, r1
 800fba4:	6831      	ldr	r1, [r6, #0]
 800fba6:	4615      	mov	r5, r2
 800fba8:	3118      	adds	r1, #24
 800fbaa:	f7fe f923 	bl	800ddf4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800fbae:	4b1b      	ldr	r3, [pc, #108]	; (800fc1c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fbb0:	b985      	cbnz	r5, 800fbd4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fbb2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fbb4:	6830      	ldr	r0, [r6, #0]
 800fbb6:	3004      	adds	r0, #4
 800fbb8:	f7fe f944 	bl	800de44 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fbbc:	6833      	ldr	r3, [r6, #0]
 800fbbe:	1964      	adds	r4, r4, r5
 800fbc0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fbc2:	d31c      	bcc.n	800fbfe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbc4:	4b16      	ldr	r3, [pc, #88]	; (800fc20 <vTaskPlaceOnEventListRestricted+0x84>)
 800fbc6:	6818      	ldr	r0, [r3, #0]
 800fbc8:	6831      	ldr	r1, [r6, #0]
	}
 800fbca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbce:	3104      	adds	r1, #4
 800fbd0:	f7fe b920 	b.w	800de14 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fbd4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fbd6:	6830      	ldr	r0, [r6, #0]
 800fbd8:	3004      	adds	r0, #4
 800fbda:	f7fe f933 	bl	800de44 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbde:	6831      	ldr	r1, [r6, #0]
 800fbe0:	4810      	ldr	r0, [pc, #64]	; (800fc24 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fbe2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbe6:	3104      	adds	r1, #4
 800fbe8:	f7fe b904 	b.w	800ddf4 <vListInsertEnd>
 800fbec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbf0:	f383 8811 	msr	BASEPRI, r3
 800fbf4:	f3bf 8f6f 	isb	sy
 800fbf8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800fbfc:	e7fe      	b.n	800fbfc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbfe:	4b0a      	ldr	r3, [pc, #40]	; (800fc28 <vTaskPlaceOnEventListRestricted+0x8c>)
 800fc00:	6818      	ldr	r0, [r3, #0]
 800fc02:	6831      	ldr	r1, [r6, #0]
 800fc04:	3104      	adds	r1, #4
 800fc06:	f7fe f905 	bl	800de14 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fc0a:	4b08      	ldr	r3, [pc, #32]	; (800fc2c <vTaskPlaceOnEventListRestricted+0x90>)
 800fc0c:	681a      	ldr	r2, [r3, #0]
 800fc0e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fc10:	bf38      	it	cc
 800fc12:	601c      	strcc	r4, [r3, #0]
	}
 800fc14:	bd70      	pop	{r4, r5, r6, pc}
 800fc16:	bf00      	nop
 800fc18:	20012770 	.word	0x20012770
 800fc1c:	20012c64 	.word	0x20012c64
 800fc20:	20012778 	.word	0x20012778
 800fc24:	20012c3c 	.word	0x20012c3c
 800fc28:	20012774 	.word	0x20012774
 800fc2c:	20012c18 	.word	0x20012c18

0800fc30 <xTaskRemoveFromEventList>:
{
 800fc30:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fc32:	68c3      	ldr	r3, [r0, #12]
 800fc34:	68dc      	ldr	r4, [r3, #12]
{
 800fc36:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fc38:	2c00      	cmp	r4, #0
 800fc3a:	d02b      	beq.n	800fc94 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fc3c:	f104 0518 	add.w	r5, r4, #24
 800fc40:	4628      	mov	r0, r5
 800fc42:	f7fe f8ff 	bl	800de44 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fc46:	4b18      	ldr	r3, [pc, #96]	; (800fca8 <xTaskRemoveFromEventList+0x78>)
 800fc48:	681b      	ldr	r3, [r3, #0]
 800fc4a:	b17b      	cbz	r3, 800fc6c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fc4c:	4817      	ldr	r0, [pc, #92]	; (800fcac <xTaskRemoveFromEventList+0x7c>)
 800fc4e:	4629      	mov	r1, r5
 800fc50:	f7fe f8d0 	bl	800ddf4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fc54:	4b16      	ldr	r3, [pc, #88]	; (800fcb0 <xTaskRemoveFromEventList+0x80>)
 800fc56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fc58:	681b      	ldr	r3, [r3, #0]
 800fc5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc5c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fc5e:	bf85      	ittet	hi
 800fc60:	4b14      	ldrhi	r3, [pc, #80]	; (800fcb4 <xTaskRemoveFromEventList+0x84>)
 800fc62:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fc64:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fc66:	6018      	strhi	r0, [r3, #0]
}
 800fc68:	b003      	add	sp, #12
 800fc6a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fc6c:	1d21      	adds	r1, r4, #4
 800fc6e:	4608      	mov	r0, r1
 800fc70:	9101      	str	r1, [sp, #4]
 800fc72:	f7fe f8e7 	bl	800de44 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fc76:	4a10      	ldr	r2, [pc, #64]	; (800fcb8 <xTaskRemoveFromEventList+0x88>)
 800fc78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fc7a:	6810      	ldr	r0, [r2, #0]
 800fc7c:	9901      	ldr	r1, [sp, #4]
 800fc7e:	4283      	cmp	r3, r0
 800fc80:	480e      	ldr	r0, [pc, #56]	; (800fcbc <xTaskRemoveFromEventList+0x8c>)
 800fc82:	bf88      	it	hi
 800fc84:	6013      	strhi	r3, [r2, #0]
 800fc86:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fc8a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fc8e:	f7fe f8b1 	bl	800ddf4 <vListInsertEnd>
 800fc92:	e7df      	b.n	800fc54 <xTaskRemoveFromEventList+0x24>
 800fc94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc98:	f383 8811 	msr	BASEPRI, r3
 800fc9c:	f3bf 8f6f 	isb	sy
 800fca0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fca4:	e7fe      	b.n	800fca4 <xTaskRemoveFromEventList+0x74>
 800fca6:	bf00      	nop
 800fca8:	20012be4 	.word	0x20012be4
 800fcac:	20012c24 	.word	0x20012c24
 800fcb0:	20012770 	.word	0x20012770
 800fcb4:	20012c68 	.word	0x20012c68
 800fcb8:	20012bec 	.word	0x20012bec
 800fcbc:	2001277c 	.word	0x2001277c

0800fcc0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fcc0:	4a03      	ldr	r2, [pc, #12]	; (800fcd0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fcc2:	4b04      	ldr	r3, [pc, #16]	; (800fcd4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fcc4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fcc6:	681b      	ldr	r3, [r3, #0]
 800fcc8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fccc:	4770      	bx	lr
 800fcce:	bf00      	nop
 800fcd0:	20012c1c 	.word	0x20012c1c
 800fcd4:	20012c64 	.word	0x20012c64

0800fcd8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fcd8:	b328      	cbz	r0, 800fd26 <xTaskCheckForTimeOut+0x4e>
{
 800fcda:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fcdc:	460d      	mov	r5, r1
 800fcde:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fce0:	b1c1      	cbz	r1, 800fd14 <xTaskCheckForTimeOut+0x3c>
 800fce2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fce4:	f7fe f926 	bl	800df34 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fce8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fcea:	4a1d      	ldr	r2, [pc, #116]	; (800fd60 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fcec:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fcee:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fcf0:	d030      	beq.n	800fd54 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fcf2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fd64 <xTaskCheckForTimeOut+0x8c>
 800fcf6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fcfa:	f8dc 7000 	ldr.w	r7, [ip]
 800fcfe:	42be      	cmp	r6, r7
 800fd00:	d01a      	beq.n	800fd38 <xTaskCheckForTimeOut+0x60>
 800fd02:	4288      	cmp	r0, r1
 800fd04:	d818      	bhi.n	800fd38 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fd06:	2001      	movs	r0, #1
 800fd08:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fd0a:	f7fe f935 	bl	800df78 <vPortExitCritical>
}
 800fd0e:	9801      	ldr	r0, [sp, #4]
 800fd10:	b003      	add	sp, #12
 800fd12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fd14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd18:	f383 8811 	msr	BASEPRI, r3
 800fd1c:	f3bf 8f6f 	isb	sy
 800fd20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fd24:	e7fe      	b.n	800fd24 <xTaskCheckForTimeOut+0x4c>
 800fd26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd2a:	f383 8811 	msr	BASEPRI, r3
 800fd2e:	f3bf 8f6f 	isb	sy
 800fd32:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fd36:	e7fe      	b.n	800fd36 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fd38:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fd3c:	4573      	cmp	r3, lr
 800fd3e:	d90b      	bls.n	800fd58 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fd40:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fd42:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fd46:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fd48:	4403      	add	r3, r0
 800fd4a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fd4c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fd4e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fd52:	e7d9      	b.n	800fd08 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fd54:	2000      	movs	r0, #0
 800fd56:	e7d7      	b.n	800fd08 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fd58:	2300      	movs	r3, #0
 800fd5a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fd5c:	2001      	movs	r0, #1
 800fd5e:	e7d3      	b.n	800fd08 <xTaskCheckForTimeOut+0x30>
 800fd60:	20012c64 	.word	0x20012c64
 800fd64:	20012c1c 	.word	0x20012c1c

0800fd68 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fd68:	4b01      	ldr	r3, [pc, #4]	; (800fd70 <vTaskMissedYield+0x8>)
 800fd6a:	2201      	movs	r2, #1
 800fd6c:	601a      	str	r2, [r3, #0]
}
 800fd6e:	4770      	bx	lr
 800fd70:	20012c68 	.word	0x20012c68

0800fd74 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fd74:	4b05      	ldr	r3, [pc, #20]	; (800fd8c <xTaskGetSchedulerState+0x18>)
 800fd76:	681b      	ldr	r3, [r3, #0]
 800fd78:	b133      	cbz	r3, 800fd88 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fd7a:	4b05      	ldr	r3, [pc, #20]	; (800fd90 <xTaskGetSchedulerState+0x1c>)
 800fd7c:	6818      	ldr	r0, [r3, #0]
 800fd7e:	fab0 f080 	clz	r0, r0
 800fd82:	0940      	lsrs	r0, r0, #5
 800fd84:	0040      	lsls	r0, r0, #1
 800fd86:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fd88:	2001      	movs	r0, #1
	}
 800fd8a:	4770      	bx	lr
 800fd8c:	20012c38 	.word	0x20012c38
 800fd90:	20012be4 	.word	0x20012be4

0800fd94 <xTaskPriorityInherit>:
	{
 800fd94:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fd96:	4604      	mov	r4, r0
	{
 800fd98:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fd9a:	b1c8      	cbz	r0, 800fdd0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fd9c:	4d1d      	ldr	r5, [pc, #116]	; (800fe14 <xTaskPriorityInherit+0x80>)
 800fd9e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fda0:	682a      	ldr	r2, [r5, #0]
 800fda2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fda4:	4293      	cmp	r3, r2
 800fda6:	d215      	bcs.n	800fdd4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fda8:	6982      	ldr	r2, [r0, #24]
 800fdaa:	2a00      	cmp	r2, #0
 800fdac:	db04      	blt.n	800fdb8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fdae:	682a      	ldr	r2, [r5, #0]
 800fdb0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fdb2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fdb6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fdb8:	4e17      	ldr	r6, [pc, #92]	; (800fe18 <xTaskPriorityInherit+0x84>)
 800fdba:	6962      	ldr	r2, [r4, #20]
 800fdbc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fdc0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fdc4:	429a      	cmp	r2, r3
 800fdc6:	d00e      	beq.n	800fde6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fdc8:	682b      	ldr	r3, [r5, #0]
 800fdca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fdcc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fdce:	2001      	movs	r0, #1
	}
 800fdd0:	b002      	add	sp, #8
 800fdd2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fdd4:	682b      	ldr	r3, [r5, #0]
 800fdd6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fdd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fdda:	4298      	cmp	r0, r3
 800fddc:	bf2c      	ite	cs
 800fdde:	2000      	movcs	r0, #0
 800fde0:	2001      	movcc	r0, #1
	}
 800fde2:	b002      	add	sp, #8
 800fde4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fde6:	1d21      	adds	r1, r4, #4
 800fde8:	4608      	mov	r0, r1
 800fdea:	9101      	str	r1, [sp, #4]
 800fdec:	f7fe f82a 	bl	800de44 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fdf0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fdf2:	4b0a      	ldr	r3, [pc, #40]	; (800fe1c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fdf4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fdf6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fdf8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fdfa:	4290      	cmp	r0, r2
 800fdfc:	bf88      	it	hi
 800fdfe:	6018      	strhi	r0, [r3, #0]
 800fe00:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fe04:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fe08:	9901      	ldr	r1, [sp, #4]
 800fe0a:	f7fd fff3 	bl	800ddf4 <vListInsertEnd>
				xReturn = pdTRUE;
 800fe0e:	2001      	movs	r0, #1
 800fe10:	e7de      	b.n	800fdd0 <xTaskPriorityInherit+0x3c>
 800fe12:	bf00      	nop
 800fe14:	20012770 	.word	0x20012770
 800fe18:	2001277c 	.word	0x2001277c
 800fe1c:	20012bec 	.word	0x20012bec

0800fe20 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800fe20:	b318      	cbz	r0, 800fe6a <xTaskPriorityDisinherit+0x4a>
	{
 800fe22:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800fe24:	4b1e      	ldr	r3, [pc, #120]	; (800fea0 <xTaskPriorityDisinherit+0x80>)
 800fe26:	681c      	ldr	r4, [r3, #0]
 800fe28:	4284      	cmp	r4, r0
	{
 800fe2a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fe2c:	d008      	beq.n	800fe40 <xTaskPriorityDisinherit+0x20>
 800fe2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe32:	f383 8811 	msr	BASEPRI, r3
 800fe36:	f3bf 8f6f 	isb	sy
 800fe3a:	f3bf 8f4f 	dsb	sy
 800fe3e:	e7fe      	b.n	800fe3e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fe40:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fe42:	b14b      	cbz	r3, 800fe58 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fe44:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fe46:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fe48:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fe4a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fe4c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fe4e:	d000      	beq.n	800fe52 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fe50:	b16b      	cbz	r3, 800fe6e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fe52:	2000      	movs	r0, #0
	}
 800fe54:	b002      	add	sp, #8
 800fe56:	bd10      	pop	{r4, pc}
 800fe58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe5c:	f383 8811 	msr	BASEPRI, r3
 800fe60:	f3bf 8f6f 	isb	sy
 800fe64:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fe68:	e7fe      	b.n	800fe68 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fe6a:	2000      	movs	r0, #0
	}
 800fe6c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fe6e:	1d21      	adds	r1, r4, #4
 800fe70:	4608      	mov	r0, r1
 800fe72:	9101      	str	r1, [sp, #4]
 800fe74:	f7fd ffe6 	bl	800de44 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fe78:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fe7a:	4a0a      	ldr	r2, [pc, #40]	; (800fea4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fe7c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fe7e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fe82:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fe84:	6810      	ldr	r0, [r2, #0]
 800fe86:	9901      	ldr	r1, [sp, #4]
 800fe88:	4283      	cmp	r3, r0
 800fe8a:	4807      	ldr	r0, [pc, #28]	; (800fea8 <xTaskPriorityDisinherit+0x88>)
 800fe8c:	bf88      	it	hi
 800fe8e:	6013      	strhi	r3, [r2, #0]
 800fe90:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fe94:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fe98:	f7fd ffac 	bl	800ddf4 <vListInsertEnd>
					xReturn = pdTRUE;
 800fe9c:	2001      	movs	r0, #1
		return xReturn;
 800fe9e:	e7d9      	b.n	800fe54 <xTaskPriorityDisinherit+0x34>
 800fea0:	20012770 	.word	0x20012770
 800fea4:	20012bec 	.word	0x20012bec
 800fea8:	2001277c 	.word	0x2001277c

0800feac <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800feac:	2800      	cmp	r0, #0
 800feae:	d041      	beq.n	800ff34 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800feb0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800feb2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800feb4:	b083      	sub	sp, #12
 800feb6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800feb8:	b153      	cbz	r3, 800fed0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800feba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800febc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800febe:	4281      	cmp	r1, r0
 800fec0:	bf38      	it	cc
 800fec2:	4601      	movcc	r1, r0
 800fec4:	428a      	cmp	r2, r1
 800fec6:	d001      	beq.n	800fecc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fec8:	2b01      	cmp	r3, #1
 800feca:	d00a      	beq.n	800fee2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fecc:	b003      	add	sp, #12
 800fece:	bd30      	pop	{r4, r5, pc}
 800fed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fed4:	f383 8811 	msr	BASEPRI, r3
 800fed8:	f3bf 8f6f 	isb	sy
 800fedc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fee0:	e7fe      	b.n	800fee0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fee2:	4b19      	ldr	r3, [pc, #100]	; (800ff48 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fee4:	681b      	ldr	r3, [r3, #0]
 800fee6:	42a3      	cmp	r3, r4
 800fee8:	d025      	beq.n	800ff36 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800feea:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800feec:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800feee:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fef0:	bfa8      	it	ge
 800fef2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fef6:	4d15      	ldr	r5, [pc, #84]	; (800ff4c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fef8:	bfa8      	it	ge
 800fefa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fefc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ff00:	6961      	ldr	r1, [r4, #20]
 800ff02:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800ff06:	4299      	cmp	r1, r3
 800ff08:	d1e0      	bne.n	800fecc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff0a:	1d21      	adds	r1, r4, #4
 800ff0c:	4608      	mov	r0, r1
 800ff0e:	9101      	str	r1, [sp, #4]
 800ff10:	f7fd ff98 	bl	800de44 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ff14:	4b0e      	ldr	r3, [pc, #56]	; (800ff50 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800ff16:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ff18:	681a      	ldr	r2, [r3, #0]
 800ff1a:	9901      	ldr	r1, [sp, #4]
 800ff1c:	4290      	cmp	r0, r2
 800ff1e:	bf88      	it	hi
 800ff20:	6018      	strhi	r0, [r3, #0]
 800ff22:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ff26:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800ff2a:	b003      	add	sp, #12
 800ff2c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800ff30:	f7fd bf60 	b.w	800ddf4 <vListInsertEnd>
 800ff34:	4770      	bx	lr
 800ff36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff3a:	f383 8811 	msr	BASEPRI, r3
 800ff3e:	f3bf 8f6f 	isb	sy
 800ff42:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800ff46:	e7fe      	b.n	800ff46 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800ff48:	20012770 	.word	0x20012770
 800ff4c:	2001277c 	.word	0x2001277c
 800ff50:	20012bec 	.word	0x20012bec

0800ff54 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ff54:	4b04      	ldr	r3, [pc, #16]	; (800ff68 <pvTaskIncrementMutexHeldCount+0x14>)
 800ff56:	681a      	ldr	r2, [r3, #0]
 800ff58:	b11a      	cbz	r2, 800ff62 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ff5a:	6819      	ldr	r1, [r3, #0]
 800ff5c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ff5e:	3201      	adds	r2, #1
 800ff60:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ff62:	6818      	ldr	r0, [r3, #0]
	}
 800ff64:	4770      	bx	lr
 800ff66:	bf00      	nop
 800ff68:	20012770 	.word	0x20012770

0800ff6c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800ff6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff70:	4e22      	ldr	r6, [pc, #136]	; (800fffc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800ff72:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8010004 <prvSwitchTimerLists+0x98>
{
 800ff76:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800ff78:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ff7c:	e00d      	b.n	800ff9a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff7e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ff80:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff82:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ff84:	1d25      	adds	r5, r4, #4
 800ff86:	4628      	mov	r0, r5
 800ff88:	f7fd ff5c 	bl	800de44 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ff8c:	6a23      	ldr	r3, [r4, #32]
 800ff8e:	4620      	mov	r0, r4
 800ff90:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ff92:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ff96:	075b      	lsls	r3, r3, #29
 800ff98:	d40a      	bmi.n	800ffb0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ff9a:	6833      	ldr	r3, [r6, #0]
 800ff9c:	681a      	ldr	r2, [r3, #0]
 800ff9e:	2a00      	cmp	r2, #0
 800ffa0:	d1ed      	bne.n	800ff7e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800ffa2:	4a17      	ldr	r2, [pc, #92]	; (8010000 <prvSwitchTimerLists+0x94>)
 800ffa4:	6811      	ldr	r1, [r2, #0]
 800ffa6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800ffa8:	6013      	str	r3, [r2, #0]
}
 800ffaa:	b005      	add	sp, #20
 800ffac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ffb0:	69a3      	ldr	r3, [r4, #24]
 800ffb2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800ffb4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ffb6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800ffb8:	d205      	bcs.n	800ffc6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ffba:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ffbc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ffbe:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ffc0:	f7fd ff28 	bl	800de14 <vListInsert>
 800ffc4:	e7e9      	b.n	800ff9a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800ffc6:	f8d9 3000 	ldr.w	r3, [r9]
 800ffca:	b16b      	cbz	r3, 800ffe8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ffcc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ffd0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ffd2:	f7ff fecf 	bl	800fd74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ffd6:	2300      	movs	r3, #0
 800ffd8:	f8d9 0000 	ldr.w	r0, [r9]
 800ffdc:	461a      	mov	r2, r3
 800ffde:	4669      	mov	r1, sp
 800ffe0:	f7fe fa9c 	bl	800e51c <xQueueGenericSend>
				configASSERT( xResult );
 800ffe4:	2800      	cmp	r0, #0
 800ffe6:	d1d8      	bne.n	800ff9a <prvSwitchTimerLists+0x2e>
 800ffe8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffec:	f383 8811 	msr	BASEPRI, r3
 800fff0:	f3bf 8f6f 	isb	sy
 800fff4:	f3bf 8f4f 	dsb	sy
 800fff8:	e7fe      	b.n	800fff8 <prvSwitchTimerLists+0x8c>
 800fffa:	bf00      	nop
 800fffc:	20012c6c 	.word	0x20012c6c
 8010000:	20012c70 	.word	0x20012c70
 8010004:	20012d90 	.word	0x20012d90

08010008 <prvTimerTask>:
{
 8010008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801000c:	4e9b      	ldr	r6, [pc, #620]	; (801027c <prvTimerTask+0x274>)
 801000e:	4d9c      	ldr	r5, [pc, #624]	; (8010280 <prvTimerTask+0x278>)
 8010010:	4c9c      	ldr	r4, [pc, #624]	; (8010284 <prvTimerTask+0x27c>)
 8010012:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8010014:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8010018:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801001c:	6833      	ldr	r3, [r6, #0]
 801001e:	681f      	ldr	r7, [r3, #0]
 8010020:	2f00      	cmp	r7, #0
 8010022:	f000 80a8 	beq.w	8010176 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010026:	68db      	ldr	r3, [r3, #12]
 8010028:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 801002a:	f7ff fcf9 	bl	800fa20 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801002e:	f7ff fd0f 	bl	800fa50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010032:	682a      	ldr	r2, [r5, #0]
 8010034:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 8010036:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010038:	f0c0 80ae 	bcc.w	8010198 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801003c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 801003e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8010040:	f240 80b4 	bls.w	80101ac <prvTimerTask+0x1a4>
 8010044:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8010046:	6820      	ldr	r0, [r4, #0]
 8010048:	eba7 010a 	sub.w	r1, r7, sl
 801004c:	f7ff f89a 	bl	800f184 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8010050:	f7ff fcee 	bl	800fa30 <xTaskResumeAll>
 8010054:	b928      	cbnz	r0, 8010062 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8010056:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801005a:	f3bf 8f4f 	dsb	sy
 801005e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010062:	6820      	ldr	r0, [r4, #0]
 8010064:	2200      	movs	r2, #0
 8010066:	a902      	add	r1, sp, #8
 8010068:	f7fe fc94 	bl	800e994 <xQueueReceive>
 801006c:	2800      	cmp	r0, #0
 801006e:	d0d5      	beq.n	801001c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010070:	9b02      	ldr	r3, [sp, #8]
 8010072:	2b00      	cmp	r3, #0
 8010074:	db76      	blt.n	8010164 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8010076:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010078:	697b      	ldr	r3, [r7, #20]
 801007a:	b113      	cbz	r3, 8010082 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801007c:	1d38      	adds	r0, r7, #4
 801007e:	f7fd fee1 	bl	800de44 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8010082:	f7ff fce5 	bl	800fa50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010086:	682b      	ldr	r3, [r5, #0]
 8010088:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801008a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801008c:	f0c0 808b 	bcc.w	80101a6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8010090:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8010092:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8010096:	2b09      	cmp	r3, #9
 8010098:	d8e3      	bhi.n	8010062 <prvTimerTask+0x5a>
 801009a:	e8df f003 	tbb	[pc, r3]
 801009e:	0505      	.short	0x0505
 80100a0:	5a3d5305 	.word	0x5a3d5305
 80100a4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80100a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80100ac:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80100ae:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80100b0:	f043 0301 	orr.w	r3, r3, #1
 80100b4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80100b8:	9b03      	ldr	r3, [sp, #12]
 80100ba:	1899      	adds	r1, r3, r2
 80100bc:	bf2c      	ite	cs
 80100be:	2001      	movcs	r0, #1
 80100c0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 80100c2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80100c4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 80100c6:	f200 808c 	bhi.w	80101e2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80100ca:	ebaa 0303 	sub.w	r3, sl, r3
 80100ce:	429a      	cmp	r2, r3
 80100d0:	d832      	bhi.n	8010138 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80100d2:	6a3b      	ldr	r3, [r7, #32]
 80100d4:	4638      	mov	r0, r7
 80100d6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80100d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80100dc:	075b      	lsls	r3, r3, #29
 80100de:	d5c0      	bpl.n	8010062 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 80100e0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80100e2:	9903      	ldr	r1, [sp, #12]
 80100e4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 80100e6:	b172      	cbz	r2, 8010106 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80100e8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80100ea:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 80100ee:	2300      	movs	r3, #0
 80100f0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80100f2:	f7ff fe3f 	bl	800fd74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80100f6:	2300      	movs	r3, #0
 80100f8:	6820      	ldr	r0, [r4, #0]
 80100fa:	461a      	mov	r2, r3
 80100fc:	a906      	add	r1, sp, #24
 80100fe:	f7fe fa0d 	bl	800e51c <xQueueGenericSend>
							configASSERT( xResult );
 8010102:	2800      	cmp	r0, #0
 8010104:	d1ad      	bne.n	8010062 <prvTimerTask+0x5a>
 8010106:	f04f 0350 	mov.w	r3, #80	; 0x50
 801010a:	f383 8811 	msr	BASEPRI, r3
 801010e:	f3bf 8f6f 	isb	sy
 8010112:	f3bf 8f4f 	dsb	sy
 8010116:	e7fe      	b.n	8010116 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010118:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801011c:	f043 0301 	orr.w	r3, r3, #1
 8010120:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8010124:	9b03      	ldr	r3, [sp, #12]
 8010126:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010128:	2b00      	cmp	r3, #0
 801012a:	f000 809d 	beq.w	8010268 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801012e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8010130:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010132:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010134:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8010136:	d85e      	bhi.n	80101f6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8010138:	4b53      	ldr	r3, [pc, #332]	; (8010288 <prvTimerTask+0x280>)
 801013a:	1d39      	adds	r1, r7, #4
 801013c:	6818      	ldr	r0, [r3, #0]
 801013e:	f7fd fe69 	bl	800de14 <vListInsert>
	return xProcessTimerNow;
 8010142:	e78e      	b.n	8010062 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010144:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010148:	f023 0301 	bic.w	r3, r3, #1
 801014c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010150:	e787      	b.n	8010062 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010152:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010156:	079a      	lsls	r2, r3, #30
 8010158:	d552      	bpl.n	8010200 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801015a:	f023 0301 	bic.w	r3, r3, #1
 801015e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010162:	e77e      	b.n	8010062 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010164:	9b03      	ldr	r3, [sp, #12]
 8010166:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801016a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801016c:	9b02      	ldr	r3, [sp, #8]
 801016e:	2b00      	cmp	r3, #0
 8010170:	f6ff af77 	blt.w	8010062 <prvTimerTask+0x5a>
 8010174:	e77f      	b.n	8010076 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010176:	f7ff fc53 	bl	800fa20 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801017a:	f7ff fc69 	bl	800fa50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801017e:	682a      	ldr	r2, [r5, #0]
 8010180:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010182:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010184:	d808      	bhi.n	8010198 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010186:	4b40      	ldr	r3, [pc, #256]	; (8010288 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010188:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801018c:	681a      	ldr	r2, [r3, #0]
 801018e:	6812      	ldr	r2, [r2, #0]
 8010190:	fab2 f282 	clz	r2, r2
 8010194:	0952      	lsrs	r2, r2, #5
 8010196:	e756      	b.n	8010046 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010198:	f7ff fee8 	bl	800ff6c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801019c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 80101a0:	f7ff fc46 	bl	800fa30 <xTaskResumeAll>
 80101a4:	e75d      	b.n	8010062 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 80101a6:	f7ff fee1 	bl	800ff6c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 80101aa:	e771      	b.n	8010090 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 80101ac:	f7ff fc40 	bl	800fa30 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80101b0:	6832      	ldr	r2, [r6, #0]
 80101b2:	68d2      	ldr	r2, [r2, #12]
 80101b4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80101b8:	f10b 0104 	add.w	r1, fp, #4
 80101bc:	4608      	mov	r0, r1
 80101be:	9101      	str	r1, [sp, #4]
 80101c0:	f7fd fe40 	bl	800de44 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80101c4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 80101c8:	9901      	ldr	r1, [sp, #4]
 80101ca:	f010 0f04 	tst.w	r0, #4
 80101ce:	d11b      	bne.n	8010208 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80101d0:	f020 0001 	bic.w	r0, r0, #1
 80101d4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80101d8:	f8db 3020 	ldr.w	r3, [fp, #32]
 80101dc:	4658      	mov	r0, fp
 80101de:	4798      	blx	r3
}
 80101e0:	e73f      	b.n	8010062 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80101e2:	4553      	cmp	r3, sl
 80101e4:	d902      	bls.n	80101ec <prvTimerTask+0x1e4>
 80101e6:	2800      	cmp	r0, #0
 80101e8:	f43f af73 	beq.w	80100d2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80101ec:	6830      	ldr	r0, [r6, #0]
 80101ee:	1d39      	adds	r1, r7, #4
 80101f0:	f7fd fe10 	bl	800de14 <vListInsert>
	return xProcessTimerNow;
 80101f4:	e735      	b.n	8010062 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80101f6:	6830      	ldr	r0, [r6, #0]
 80101f8:	1d39      	adds	r1, r7, #4
 80101fa:	f7fd fe0b 	bl	800de14 <vListInsert>
 80101fe:	e730      	b.n	8010062 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8010200:	4638      	mov	r0, r7
 8010202:	f7fd fd83 	bl	800dd0c <vPortFree>
 8010206:	e72c      	b.n	8010062 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010208:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801020c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010210:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8010212:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010214:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010218:	d903      	bls.n	8010222 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801021a:	6830      	ldr	r0, [r6, #0]
 801021c:	f7fd fdfa 	bl	800de14 <vListInsert>
	return xProcessTimerNow;
 8010220:	e7da      	b.n	80101d8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010222:	ebaa 0307 	sub.w	r3, sl, r7
 8010226:	429a      	cmp	r2, r3
 8010228:	d819      	bhi.n	801025e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801022a:	6823      	ldr	r3, [r4, #0]
 801022c:	b173      	cbz	r3, 801024c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801022e:	2300      	movs	r3, #0
 8010230:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8010232:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010234:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010238:	f7ff fd9c 	bl	800fd74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801023c:	2300      	movs	r3, #0
 801023e:	6820      	ldr	r0, [r4, #0]
 8010240:	461a      	mov	r2, r3
 8010242:	a906      	add	r1, sp, #24
 8010244:	f7fe f96a 	bl	800e51c <xQueueGenericSend>
			configASSERT( xResult );
 8010248:	2800      	cmp	r0, #0
 801024a:	d1c5      	bne.n	80101d8 <prvTimerTask+0x1d0>
 801024c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010250:	f383 8811 	msr	BASEPRI, r3
 8010254:	f3bf 8f6f 	isb	sy
 8010258:	f3bf 8f4f 	dsb	sy
 801025c:	e7fe      	b.n	801025c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801025e:	4b0a      	ldr	r3, [pc, #40]	; (8010288 <prvTimerTask+0x280>)
 8010260:	6818      	ldr	r0, [r3, #0]
 8010262:	f7fd fdd7 	bl	800de14 <vListInsert>
	return xProcessTimerNow;
 8010266:	e7b7      	b.n	80101d8 <prvTimerTask+0x1d0>
 8010268:	f04f 0350 	mov.w	r3, #80	; 0x50
 801026c:	f383 8811 	msr	BASEPRI, r3
 8010270:	f3bf 8f6f 	isb	sy
 8010274:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010278:	e7fe      	b.n	8010278 <prvTimerTask+0x270>
 801027a:	bf00      	nop
 801027c:	20012c6c 	.word	0x20012c6c
 8010280:	20012d3c 	.word	0x20012d3c
 8010284:	20012d90 	.word	0x20012d90
 8010288:	20012c70 	.word	0x20012c70

0801028c <xTimerCreateTimerTask>:
{
 801028c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801028e:	4c23      	ldr	r4, [pc, #140]	; (801031c <xTimerCreateTimerTask+0x90>)
{
 8010290:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010292:	f7fd fe4f 	bl	800df34 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010296:	6825      	ldr	r5, [r4, #0]
 8010298:	b335      	cbz	r5, 80102e8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801029a:	f7fd fe6d 	bl	800df78 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801029e:	6823      	ldr	r3, [r4, #0]
 80102a0:	b1cb      	cbz	r3, 80102d6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80102a2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80102a4:	aa07      	add	r2, sp, #28
 80102a6:	a906      	add	r1, sp, #24
 80102a8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80102aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80102ae:	f7fd fc61 	bl	800db74 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80102b2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 80102b6:	2302      	movs	r3, #2
 80102b8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80102bc:	9300      	str	r3, [sp, #0]
 80102be:	9a07      	ldr	r2, [sp, #28]
 80102c0:	4917      	ldr	r1, [pc, #92]	; (8010320 <xTimerCreateTimerTask+0x94>)
 80102c2:	4818      	ldr	r0, [pc, #96]	; (8010324 <xTimerCreateTimerTask+0x98>)
 80102c4:	4623      	mov	r3, r4
 80102c6:	f7ff fa6d 	bl	800f7a4 <xTaskCreateStatic>
 80102ca:	4b17      	ldr	r3, [pc, #92]	; (8010328 <xTimerCreateTimerTask+0x9c>)
 80102cc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80102ce:	b110      	cbz	r0, 80102d6 <xTimerCreateTimerTask+0x4a>
}
 80102d0:	2001      	movs	r0, #1
 80102d2:	b009      	add	sp, #36	; 0x24
 80102d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80102d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102da:	f383 8811 	msr	BASEPRI, r3
 80102de:	f3bf 8f6f 	isb	sy
 80102e2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80102e6:	e7fe      	b.n	80102e6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 80102e8:	4f10      	ldr	r7, [pc, #64]	; (801032c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 80102ea:	4e11      	ldr	r6, [pc, #68]	; (8010330 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 80102ec:	4638      	mov	r0, r7
 80102ee:	f7fd fd71 	bl	800ddd4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80102f2:	4630      	mov	r0, r6
 80102f4:	f7fd fd6e 	bl	800ddd4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80102f8:	4a0e      	ldr	r2, [pc, #56]	; (8010334 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80102fa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80102fc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80102fe:	4a0e      	ldr	r2, [pc, #56]	; (8010338 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010300:	4b0e      	ldr	r3, [pc, #56]	; (801033c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8010302:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010304:	2110      	movs	r1, #16
 8010306:	4a0e      	ldr	r2, [pc, #56]	; (8010340 <xTimerCreateTimerTask+0xb4>)
 8010308:	200a      	movs	r0, #10
 801030a:	f7fd ffb1 	bl	800e270 <xQueueGenericCreateStatic>
 801030e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8010310:	2800      	cmp	r0, #0
 8010312:	d0c2      	beq.n	801029a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8010314:	490b      	ldr	r1, [pc, #44]	; (8010344 <xTimerCreateTimerTask+0xb8>)
 8010316:	f7fe ff0d 	bl	800f134 <vQueueAddToRegistry>
 801031a:	e7be      	b.n	801029a <xTimerCreateTimerTask+0xe>
 801031c:	20012d90 	.word	0x20012d90
 8010320:	0802ed3c 	.word	0x0802ed3c
 8010324:	08010009 	.word	0x08010009
 8010328:	20012d94 	.word	0x20012d94
 801032c:	20012d14 	.word	0x20012d14
 8010330:	20012d28 	.word	0x20012d28
 8010334:	20012c6c 	.word	0x20012c6c
 8010338:	20012c70 	.word	0x20012c70
 801033c:	20012d40 	.word	0x20012d40
 8010340:	20012c74 	.word	0x20012c74
 8010344:	0802ed34 	.word	0x0802ed34

08010348 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010348:	8880      	ldrh	r0, [r0, #4]
 801034a:	4770      	bx	lr

0801034c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801034c:	b570      	push	{r4, r5, r6, lr}
 801034e:	6803      	ldr	r3, [r0, #0]
 8010350:	4605      	mov	r5, r0
 8010352:	460c      	mov	r4, r1
 8010354:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010356:	2100      	movs	r1, #0
 8010358:	4798      	blx	r3
 801035a:	682b      	ldr	r3, [r5, #0]
 801035c:	4606      	mov	r6, r0
 801035e:	6a1b      	ldr	r3, [r3, #32]
 8010360:	4628      	mov	r0, r5
 8010362:	4798      	blx	r3
 8010364:	1ba4      	subs	r4, r4, r6
 8010366:	b2a4      	uxth	r4, r4
 8010368:	fbb4 f0f0 	udiv	r0, r4, r0
 801036c:	bd70      	pop	{r4, r5, r6, pc}

0801036e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801036e:	2300      	movs	r3, #0
 8010370:	8083      	strh	r3, [r0, #4]
 8010372:	4770      	bx	lr

08010374 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010374:	b510      	push	{r4, lr}
 8010376:	6803      	ldr	r3, [r0, #0]
 8010378:	8881      	ldrh	r1, [r0, #4]
 801037a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801037c:	4604      	mov	r4, r0
 801037e:	4798      	blx	r3
 8010380:	88a3      	ldrh	r3, [r4, #4]
 8010382:	3301      	adds	r3, #1
 8010384:	80a3      	strh	r3, [r4, #4]
 8010386:	bd10      	pop	{r4, pc}

08010388 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010388:	6803      	ldr	r3, [r0, #0]
 801038a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801038c:	4718      	bx	r3

0801038e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801038e:	4770      	bx	lr

08010390 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010390:	4a02      	ldr	r2, [pc, #8]	; (801039c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010392:	6002      	str	r2, [r0, #0]
 8010394:	2200      	movs	r2, #0
 8010396:	8082      	strh	r2, [r0, #4]
 8010398:	4770      	bx	lr
 801039a:	bf00      	nop
 801039c:	0802ed4c 	.word	0x0802ed4c

080103a0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80103a0:	b510      	push	{r4, lr}
 80103a2:	6803      	ldr	r3, [r0, #0]
 80103a4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80103a8:	4604      	mov	r4, r0
 80103aa:	4798      	blx	r3
 80103ac:	b110      	cbz	r0, 80103b4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80103ae:	4620      	mov	r0, r4
 80103b0:	f7f2 fca6 	bl	8002d00 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80103b4:	bd10      	pop	{r4, pc}

080103b6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80103b6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80103ba:	4770      	bx	lr

080103bc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80103bc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 80103c0:	4770      	bx	lr

080103c2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80103c2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 80103c6:	4770      	bx	lr

080103c8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80103c8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 80103cc:	4770      	bx	lr

080103ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 80103ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80103d0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80103d4:	461e      	mov	r6, r3
 80103d6:	6803      	ldr	r3, [r0, #0]
 80103d8:	460f      	mov	r7, r1
 80103da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80103de:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80103e2:	4604      	mov	r4, r0
 80103e4:	4615      	mov	r5, r2
 80103e6:	4798      	blx	r3
 80103e8:	b93e      	cbnz	r6, 80103fa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80103ea:	1bed      	subs	r5, r5, r7
 80103ec:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80103f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80103f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80103f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80103fa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80103fe:	e7f7      	b.n	80103f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08010400 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8010400:	b510      	push	{r4, lr}
 8010402:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010406:	600c      	str	r4, [r1, #0]
 8010408:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801040c:	6011      	str	r1, [r2, #0]
 801040e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010412:	801a      	strh	r2, [r3, #0]
 8010414:	9b02      	ldr	r3, [sp, #8]
 8010416:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801041a:	801a      	strh	r2, [r3, #0]
 801041c:	bd10      	pop	{r4, pc}

0801041e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801041e:	b510      	push	{r4, lr}
 8010420:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010424:	600c      	str	r4, [r1, #0]
 8010426:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801042a:	6011      	str	r1, [r2, #0]
 801042c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010430:	801a      	strh	r2, [r3, #0]
 8010432:	bd10      	pop	{r4, pc}

08010434 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010434:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010438:	600b      	str	r3, [r1, #0]
 801043a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801043e:	6013      	str	r3, [r2, #0]
 8010440:	4770      	bx	lr

08010442 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010442:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010446:	4770      	bx	lr

08010448 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010448:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801044c:	4770      	bx	lr

0801044e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801044e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010452:	4770      	bx	lr

08010454 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010454:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010458:	4770      	bx	lr

0801045a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801045a:	4770      	bx	lr

0801045c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801045c:	b510      	push	{r4, lr}
 801045e:	21b4      	movs	r1, #180	; 0xb4
 8010460:	4604      	mov	r4, r0
 8010462:	f019 fd2c 	bl	8029ebe <_ZdlPvj>
 8010466:	4620      	mov	r0, r4
 8010468:	bd10      	pop	{r4, pc}

0801046a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801046a:	b570      	push	{r4, r5, r6, lr}
 801046c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010470:	428d      	cmp	r5, r1
 8010472:	bfb8      	it	lt
 8010474:	460d      	movlt	r5, r1
 8010476:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801047a:	428d      	cmp	r5, r1
 801047c:	4604      	mov	r4, r0
 801047e:	bfa8      	it	ge
 8010480:	460d      	movge	r5, r1
 8010482:	4616      	mov	r6, r2
 8010484:	b99a      	cbnz	r2, 80104ae <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010486:	6803      	ldr	r3, [r0, #0]
 8010488:	4629      	mov	r1, r5
 801048a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801048e:	4798      	blx	r3
 8010490:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010494:	b368      	cbz	r0, 80104f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010496:	6803      	ldr	r3, [r0, #0]
 8010498:	68db      	ldr	r3, [r3, #12]
 801049a:	4798      	blx	r3
 801049c:	b348      	cbz	r0, 80104f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801049e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80104a2:	6803      	ldr	r3, [r0, #0]
 80104a4:	4621      	mov	r1, r4
 80104a6:	689b      	ldr	r3, [r3, #8]
 80104a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104ac:	4718      	bx	r3
 80104ae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80104b2:	2b00      	cmp	r3, #0
 80104b4:	dd08      	ble.n	80104c8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 80104b6:	f005 fbe3 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 80104ba:	4621      	mov	r1, r4
 80104bc:	3004      	adds	r0, #4
 80104be:	f005 fc2c 	bl	8015d1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80104c2:	2300      	movs	r3, #0
 80104c4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80104c8:	6823      	ldr	r3, [r4, #0]
 80104ca:	4620      	mov	r0, r4
 80104cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80104d0:	4798      	blx	r3
 80104d2:	2300      	movs	r3, #0
 80104d4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80104d8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80104dc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80104e0:	f005 fbce 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 80104e4:	4621      	mov	r1, r4
 80104e6:	3004      	adds	r0, #4
 80104e8:	f005 fcc0 	bl	8015e6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80104ec:	2301      	movs	r3, #1
 80104ee:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80104f2:	bd70      	pop	{r4, r5, r6, pc}

080104f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80104f4:	b510      	push	{r4, lr}
 80104f6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80104fa:	4299      	cmp	r1, r3
 80104fc:	bfb8      	it	lt
 80104fe:	4619      	movlt	r1, r3
 8010500:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010504:	4299      	cmp	r1, r3
 8010506:	bfa8      	it	ge
 8010508:	4619      	movge	r1, r3
 801050a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801050e:	428b      	cmp	r3, r1
 8010510:	4604      	mov	r4, r0
 8010512:	d010      	beq.n	8010536 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010514:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8010518:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801051c:	b158      	cbz	r0, 8010536 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801051e:	6803      	ldr	r3, [r0, #0]
 8010520:	68db      	ldr	r3, [r3, #12]
 8010522:	4798      	blx	r3
 8010524:	b138      	cbz	r0, 8010536 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010526:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801052a:	6803      	ldr	r3, [r0, #0]
 801052c:	4621      	mov	r1, r4
 801052e:	689b      	ldr	r3, [r3, #8]
 8010530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010534:	4718      	bx	r3
 8010536:	bd10      	pop	{r4, pc}

08010538 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010538:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801053a:	4604      	mov	r4, r0
 801053c:	460d      	mov	r5, r1
 801053e:	b1a9      	cbz	r1, 801056c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010540:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010544:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010548:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801054c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010550:	ab01      	add	r3, sp, #4
 8010552:	1a12      	subs	r2, r2, r0
 8010554:	1b89      	subs	r1, r1, r6
 8010556:	1a38      	subs	r0, r7, r0
 8010558:	f006 fe48 	bl	80171ec <_ZN8touchgfx6muldivElllRl>
 801055c:	4629      	mov	r1, r5
 801055e:	ab01      	add	r3, sp, #4
 8010560:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010564:	4430      	add	r0, r6
 8010566:	f006 fe41 	bl	80171ec <_ZN8touchgfx6muldivElllRl>
 801056a:	b285      	uxth	r5, r0
 801056c:	4628      	mov	r0, r5
 801056e:	b003      	add	sp, #12
 8010570:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010572 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010572:	b570      	push	{r4, r5, r6, lr}
 8010574:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010578:	4604      	mov	r4, r0
 801057a:	2b00      	cmp	r3, #0
 801057c:	d035      	beq.n	80105ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801057e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010582:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010586:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801058a:	3001      	adds	r0, #1
 801058c:	1ad2      	subs	r2, r2, r3
 801058e:	b212      	sxth	r2, r2
 8010590:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010594:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010598:	2100      	movs	r1, #0
 801059a:	b280      	uxth	r0, r0
 801059c:	47a8      	blx	r5
 801059e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 80105a2:	6823      	ldr	r3, [r4, #0]
 80105a4:	4401      	add	r1, r0
 80105a6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80105aa:	4620      	mov	r0, r4
 80105ac:	4798      	blx	r3
 80105ae:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80105b2:	429a      	cmp	r2, r3
 80105b4:	db19      	blt.n	80105ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80105b6:	2500      	movs	r5, #0
 80105b8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80105bc:	f005 fb60 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 80105c0:	4621      	mov	r1, r4
 80105c2:	3004      	adds	r0, #4
 80105c4:	f005 fba9 	bl	8015d1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80105c8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80105cc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80105d0:	b158      	cbz	r0, 80105ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80105d2:	6803      	ldr	r3, [r0, #0]
 80105d4:	68db      	ldr	r3, [r3, #12]
 80105d6:	4798      	blx	r3
 80105d8:	b138      	cbz	r0, 80105ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80105da:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80105de:	6803      	ldr	r3, [r0, #0]
 80105e0:	4621      	mov	r1, r4
 80105e2:	689b      	ldr	r3, [r3, #8]
 80105e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105e8:	4718      	bx	r3
 80105ea:	bd70      	pop	{r4, r5, r6, pc}

080105ec <_ZN8touchgfx8DrawableC1Ev>:
 80105ec:	4a0a      	ldr	r2, [pc, #40]	; (8010618 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80105ee:	6002      	str	r2, [r0, #0]
 80105f0:	2200      	movs	r2, #0
 80105f2:	8082      	strh	r2, [r0, #4]
 80105f4:	80c2      	strh	r2, [r0, #6]
 80105f6:	8102      	strh	r2, [r0, #8]
 80105f8:	8142      	strh	r2, [r0, #10]
 80105fa:	8182      	strh	r2, [r0, #12]
 80105fc:	81c2      	strh	r2, [r0, #14]
 80105fe:	8202      	strh	r2, [r0, #16]
 8010600:	8242      	strh	r2, [r0, #18]
 8010602:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010606:	61c2      	str	r2, [r0, #28]
 8010608:	8402      	strh	r2, [r0, #32]
 801060a:	8442      	strh	r2, [r0, #34]	; 0x22
 801060c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010610:	2201      	movs	r2, #1
 8010612:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010616:	4770      	bx	lr
 8010618:	0802f4ec 	.word	0x0802f4ec

0801061c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801061c:	b570      	push	{r4, r5, r6, lr}
 801061e:	6803      	ldr	r3, [r0, #0]
 8010620:	4604      	mov	r4, r0
 8010622:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010624:	4615      	mov	r5, r2
 8010626:	4798      	blx	r3
 8010628:	6823      	ldr	r3, [r4, #0]
 801062a:	4629      	mov	r1, r5
 801062c:	4620      	mov	r0, r4
 801062e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010630:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010634:	4718      	bx	r3

08010636 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010636:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801063a:	4604      	mov	r4, r0
 801063c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010640:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010644:	460e      	mov	r6, r1
 8010646:	4615      	mov	r5, r2
 8010648:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801064c:	4619      	mov	r1, r3
 801064e:	463a      	mov	r2, r7
 8010650:	3058      	adds	r0, #88	; 0x58
 8010652:	4698      	mov	r8, r3
 8010654:	f7ff ffe2 	bl	801061c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010658:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801065c:	4446      	add	r6, r8
 801065e:	42b3      	cmp	r3, r6
 8010660:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010664:	bfb8      	it	lt
 8010666:	8126      	strhlt	r6, [r4, #8]
 8010668:	443d      	add	r5, r7
 801066a:	42ab      	cmp	r3, r5
 801066c:	bfb8      	it	lt
 801066e:	8165      	strhlt	r5, [r4, #10]
 8010670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010674 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010674:	b510      	push	{r4, lr}
 8010676:	4604      	mov	r4, r0
 8010678:	302c      	adds	r0, #44	; 0x2c
 801067a:	f002 fdf8 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801067e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010682:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010686:	4620      	mov	r0, r4
 8010688:	f7ff ffc8 	bl	801061c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801068c:	bd10      	pop	{r4, pc}
	...

08010690 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010690:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010692:	4604      	mov	r4, r0
 8010694:	4626      	mov	r6, r4
 8010696:	2500      	movs	r5, #0
 8010698:	f7ff ffa8 	bl	80105ec <_ZN8touchgfx8DrawableC1Ev>
 801069c:	4b23      	ldr	r3, [pc, #140]	; (801072c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801069e:	62a5      	str	r5, [r4, #40]	; 0x28
 80106a0:	f846 3b2c 	str.w	r3, [r6], #44
 80106a4:	2226      	movs	r2, #38	; 0x26
 80106a6:	4629      	mov	r1, r5
 80106a8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80106ac:	4630      	mov	r0, r6
 80106ae:	f8ad 7004 	strh.w	r7, [sp, #4]
 80106b2:	f01a fcf0 	bl	802b096 <memset>
 80106b6:	4630      	mov	r0, r6
 80106b8:	f7ff ff98 	bl	80105ec <_ZN8touchgfx8DrawableC1Ev>
 80106bc:	a902      	add	r1, sp, #8
 80106be:	4b1c      	ldr	r3, [pc, #112]	; (8010730 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 80106c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80106c2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 80106c6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 80106ca:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 80106ce:	4630      	mov	r0, r6
 80106d0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80106d4:	f002 fdcb 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80106d8:	4638      	mov	r0, r7
 80106da:	f7ff ff87 	bl	80105ec <_ZN8touchgfx8DrawableC1Ev>
 80106de:	4b15      	ldr	r3, [pc, #84]	; (8010734 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 80106e0:	65a3      	str	r3, [r4, #88]	; 0x58
 80106e2:	2364      	movs	r3, #100	; 0x64
 80106e4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 80106e8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80106ec:	4b12      	ldr	r3, [pc, #72]	; (8010738 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 80106ee:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80106f2:	4629      	mov	r1, r5
 80106f4:	4630      	mov	r0, r6
 80106f6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80106fa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80106fe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010702:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010706:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801070a:	f7f2 fa55 	bl	8002bb8 <_ZN8touchgfx8Drawable4setXEs>
 801070e:	4629      	mov	r1, r5
 8010710:	4630      	mov	r0, r6
 8010712:	f7f2 fa53 	bl	8002bbc <_ZN8touchgfx8Drawable4setYEs>
 8010716:	4631      	mov	r1, r6
 8010718:	4620      	mov	r0, r4
 801071a:	f000 f819 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801071e:	4620      	mov	r0, r4
 8010720:	4639      	mov	r1, r7
 8010722:	f000 f815 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010726:	4620      	mov	r0, r4
 8010728:	b003      	add	sp, #12
 801072a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801072c:	0802ed80 	.word	0x0802ed80
 8010730:	0802f3a8 	.word	0x0802f3a8
 8010734:	0802ee54 	.word	0x0802ee54
 8010738:	0801794b 	.word	0x0801794b

0801073c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801073c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801073e:	2000      	movs	r0, #0
 8010740:	b12b      	cbz	r3, 801074e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010742:	b920      	cbnz	r0, 801074e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010744:	1a5a      	subs	r2, r3, r1
 8010746:	4250      	negs	r0, r2
 8010748:	4150      	adcs	r0, r2
 801074a:	699b      	ldr	r3, [r3, #24]
 801074c:	e7f8      	b.n	8010740 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801074e:	4770      	bx	lr

08010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010750:	2300      	movs	r3, #0
 8010752:	6148      	str	r0, [r1, #20]
 8010754:	618b      	str	r3, [r1, #24]
 8010756:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010758:	b913      	cbnz	r3, 8010760 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801075a:	6281      	str	r1, [r0, #40]	; 0x28
 801075c:	4770      	bx	lr
 801075e:	4613      	mov	r3, r2
 8010760:	699a      	ldr	r2, [r3, #24]
 8010762:	2a00      	cmp	r2, #0
 8010764:	d1fb      	bne.n	801075e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010766:	6199      	str	r1, [r3, #24]
 8010768:	4770      	bx	lr

0801076a <_ZN8touchgfx9Container9removeAllEv>:
 801076a:	2200      	movs	r2, #0
 801076c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801076e:	b123      	cbz	r3, 801077a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010770:	6999      	ldr	r1, [r3, #24]
 8010772:	6281      	str	r1, [r0, #40]	; 0x28
 8010774:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010778:	e7f8      	b.n	801076c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801077a:	4770      	bx	lr

0801077c <_ZN8touchgfx9Container6unlinkEv>:
 801077c:	2300      	movs	r3, #0
 801077e:	6283      	str	r3, [r0, #40]	; 0x28
 8010780:	4770      	bx	lr

08010782 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010782:	2200      	movs	r2, #0
 8010784:	8002      	strh	r2, [r0, #0]
 8010786:	8042      	strh	r2, [r0, #2]
 8010788:	8082      	strh	r2, [r0, #4]
 801078a:	80c2      	strh	r2, [r0, #6]
 801078c:	4770      	bx	lr

0801078e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801078e:	b570      	push	{r4, r5, r6, lr}
 8010790:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010792:	460d      	mov	r5, r1
 8010794:	4616      	mov	r6, r2
 8010796:	b13c      	cbz	r4, 80107a8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010798:	6823      	ldr	r3, [r4, #0]
 801079a:	4620      	mov	r0, r4
 801079c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801079e:	4632      	mov	r2, r6
 80107a0:	4629      	mov	r1, r5
 80107a2:	4798      	blx	r3
 80107a4:	69a4      	ldr	r4, [r4, #24]
 80107a6:	e7f6      	b.n	8010796 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80107a8:	bd70      	pop	{r4, r5, r6, pc}

080107aa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80107aa:	b538      	push	{r3, r4, r5, lr}
 80107ac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80107ae:	460d      	mov	r5, r1
 80107b0:	b134      	cbz	r4, 80107c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80107b2:	682b      	ldr	r3, [r5, #0]
 80107b4:	4621      	mov	r1, r4
 80107b6:	689b      	ldr	r3, [r3, #8]
 80107b8:	4628      	mov	r0, r5
 80107ba:	4798      	blx	r3
 80107bc:	69a4      	ldr	r4, [r4, #24]
 80107be:	e7f7      	b.n	80107b0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80107c0:	bd38      	pop	{r3, r4, r5, pc}

080107c2 <_ZN8touchgfx9ContainerD1Ev>:
 80107c2:	4770      	bx	lr

080107c4 <_ZN8touchgfx9ContainerD0Ev>:
 80107c4:	b510      	push	{r4, lr}
 80107c6:	212c      	movs	r1, #44	; 0x2c
 80107c8:	4604      	mov	r4, r0
 80107ca:	f019 fb78 	bl	8029ebe <_ZdlPvj>
 80107ce:	4620      	mov	r0, r4
 80107d0:	bd10      	pop	{r4, pc}

080107d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80107d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80107d4:	b19b      	cbz	r3, 80107fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80107d6:	428b      	cmp	r3, r1
 80107d8:	d109      	bne.n	80107ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80107da:	699a      	ldr	r2, [r3, #24]
 80107dc:	2100      	movs	r1, #0
 80107de:	6159      	str	r1, [r3, #20]
 80107e0:	6282      	str	r2, [r0, #40]	; 0x28
 80107e2:	b902      	cbnz	r2, 80107e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80107e4:	4770      	bx	lr
 80107e6:	6199      	str	r1, [r3, #24]
 80107e8:	4770      	bx	lr
 80107ea:	4613      	mov	r3, r2
 80107ec:	b13a      	cbz	r2, 80107fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80107ee:	699a      	ldr	r2, [r3, #24]
 80107f0:	428a      	cmp	r2, r1
 80107f2:	d1fa      	bne.n	80107ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80107f4:	698a      	ldr	r2, [r1, #24]
 80107f6:	619a      	str	r2, [r3, #24]
 80107f8:	2300      	movs	r3, #0
 80107fa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80107fe:	4770      	bx	lr

08010800 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010800:	b410      	push	{r4}
 8010802:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010804:	4604      	mov	r4, r0
 8010806:	b92b      	cbnz	r3, 8010814 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010808:	6803      	ldr	r3, [r0, #0]
 801080a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801080e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010810:	4611      	mov	r1, r2
 8010812:	4718      	bx	r3
 8010814:	b941      	cbnz	r1, 8010828 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010816:	6193      	str	r3, [r2, #24]
 8010818:	6282      	str	r2, [r0, #40]	; 0x28
 801081a:	6154      	str	r4, [r2, #20]
 801081c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010820:	4770      	bx	lr
 8010822:	4603      	mov	r3, r0
 8010824:	2800      	cmp	r0, #0
 8010826:	d0f9      	beq.n	801081c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010828:	4299      	cmp	r1, r3
 801082a:	6998      	ldr	r0, [r3, #24]
 801082c:	d1f9      	bne.n	8010822 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801082e:	6190      	str	r0, [r2, #24]
 8010830:	618a      	str	r2, [r1, #24]
 8010832:	e7f2      	b.n	801081a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010834 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010838:	461f      	mov	r7, r3
 801083a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801083e:	460d      	mov	r5, r1
 8010840:	4616      	mov	r6, r2
 8010842:	b103      	cbz	r3, 8010846 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010844:	6038      	str	r0, [r7, #0]
 8010846:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010848:	b314      	cbz	r4, 8010890 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801084a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801084e:	b1eb      	cbz	r3, 801088c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010850:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010854:	428d      	cmp	r5, r1
 8010856:	db19      	blt.n	801088c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010858:	8923      	ldrh	r3, [r4, #8]
 801085a:	b289      	uxth	r1, r1
 801085c:	440b      	add	r3, r1
 801085e:	b21b      	sxth	r3, r3
 8010860:	429d      	cmp	r5, r3
 8010862:	da13      	bge.n	801088c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010864:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010868:	4296      	cmp	r6, r2
 801086a:	db0f      	blt.n	801088c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801086c:	8963      	ldrh	r3, [r4, #10]
 801086e:	b292      	uxth	r2, r2
 8010870:	4413      	add	r3, r2
 8010872:	b21b      	sxth	r3, r3
 8010874:	429e      	cmp	r6, r3
 8010876:	da09      	bge.n	801088c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010878:	6823      	ldr	r3, [r4, #0]
 801087a:	1ab2      	subs	r2, r6, r2
 801087c:	1a69      	subs	r1, r5, r1
 801087e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010882:	b212      	sxth	r2, r2
 8010884:	463b      	mov	r3, r7
 8010886:	b209      	sxth	r1, r1
 8010888:	4620      	mov	r0, r4
 801088a:	47c0      	blx	r8
 801088c:	69a4      	ldr	r4, [r4, #24]
 801088e:	e7db      	b.n	8010848 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010894 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010898:	4c6e      	ldr	r4, [pc, #440]	; (8010a54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801089a:	b0a1      	sub	sp, #132	; 0x84
 801089c:	6824      	ldr	r4, [r4, #0]
 801089e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80108a0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80108a4:	9303      	str	r3, [sp, #12]
 80108a6:	2400      	movs	r4, #0
 80108a8:	802c      	strh	r4, [r5, #0]
 80108aa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80108ac:	802c      	strh	r4, [r5, #0]
 80108ae:	601c      	str	r4, [r3, #0]
 80108b0:	4606      	mov	r6, r0
 80108b2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80108b6:	f7ff ffbd 	bl	8010834 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80108ba:	f1b9 0f03 	cmp.w	r9, #3
 80108be:	f340 80c2 	ble.w	8010a46 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80108c2:	4631      	mov	r1, r6
 80108c4:	a80c      	add	r0, sp, #48	; 0x30
 80108c6:	f006 fb5f 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80108ca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80108ce:	9306      	str	r3, [sp, #24]
 80108d0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80108d4:	9307      	str	r3, [sp, #28]
 80108d6:	9b03      	ldr	r3, [sp, #12]
 80108d8:	f8d3 a000 	ldr.w	sl, [r3]
 80108dc:	f1ba 0f00 	cmp.w	sl, #0
 80108e0:	f000 80b4 	beq.w	8010a4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80108e4:	4651      	mov	r1, sl
 80108e6:	a810      	add	r0, sp, #64	; 0x40
 80108e8:	f006 fb4e 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80108ec:	9b01      	ldr	r3, [sp, #4]
 80108ee:	9a06      	ldr	r2, [sp, #24]
 80108f0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80108f4:	189d      	adds	r5, r3, r2
 80108f6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80108fa:	9a07      	ldr	r2, [sp, #28]
 80108fc:	2002      	movs	r0, #2
 80108fe:	fb91 f1f0 	sdiv	r1, r1, r0
 8010902:	4419      	add	r1, r3
 8010904:	1a6d      	subs	r5, r5, r1
 8010906:	9b02      	ldr	r3, [sp, #8]
 8010908:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801090c:	4413      	add	r3, r2
 801090e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010912:	fb92 f2f0 	sdiv	r2, r2, r0
 8010916:	440a      	add	r2, r1
 8010918:	1a9b      	subs	r3, r3, r2
 801091a:	435b      	muls	r3, r3
 801091c:	fb05 3505 	mla	r5, r5, r5, r3
 8010920:	4f4d      	ldr	r7, [pc, #308]	; (8010a58 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010922:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010924:	ac10      	add	r4, sp, #64	; 0x40
 8010926:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010928:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801092a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801092c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801092e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010930:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010934:	f1b9 0f0c 	cmp.w	r9, #12
 8010938:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801093c:	f04f 0303 	mov.w	r3, #3
 8010940:	bfc8      	it	gt
 8010942:	4698      	movgt	r8, r3
 8010944:	f8cd 9000 	str.w	r9, [sp]
 8010948:	f04f 0400 	mov.w	r4, #0
 801094c:	bfdc      	itt	le
 801094e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010952:	fb92 f8f3 	sdivle	r8, r2, r3
 8010956:	1c63      	adds	r3, r4, #1
 8010958:	aa10      	add	r2, sp, #64	; 0x40
 801095a:	f004 0401 	and.w	r4, r4, #1
 801095e:	9308      	str	r3, [sp, #32]
 8010960:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010964:	9b00      	ldr	r3, [sp, #0]
 8010966:	fb93 f3f8 	sdiv	r3, r3, r8
 801096a:	b29b      	uxth	r3, r3
 801096c:	3404      	adds	r4, #4
 801096e:	f04f 0b00 	mov.w	fp, #0
 8010972:	9304      	str	r3, [sp, #16]
 8010974:	9a04      	ldr	r2, [sp, #16]
 8010976:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801097a:	fb13 f302 	smulbb	r3, r3, r2
 801097e:	9a01      	ldr	r2, [sp, #4]
 8010980:	b29b      	uxth	r3, r3
 8010982:	1899      	adds	r1, r3, r2
 8010984:	9305      	str	r3, [sp, #20]
 8010986:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801098a:	b209      	sxth	r1, r1
 801098c:	4299      	cmp	r1, r3
 801098e:	db4d      	blt.n	8010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010990:	8932      	ldrh	r2, [r6, #8]
 8010992:	4413      	add	r3, r2
 8010994:	b21b      	sxth	r3, r3
 8010996:	4299      	cmp	r1, r3
 8010998:	da48      	bge.n	8010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801099a:	9b04      	ldr	r3, [sp, #16]
 801099c:	6827      	ldr	r7, [r4, #0]
 801099e:	fb17 f703 	smulbb	r7, r7, r3
 80109a2:	9b02      	ldr	r3, [sp, #8]
 80109a4:	b2bf      	uxth	r7, r7
 80109a6:	18fa      	adds	r2, r7, r3
 80109a8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80109ac:	b212      	sxth	r2, r2
 80109ae:	429a      	cmp	r2, r3
 80109b0:	db3c      	blt.n	8010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80109b2:	8970      	ldrh	r0, [r6, #10]
 80109b4:	4403      	add	r3, r0
 80109b6:	b21b      	sxth	r3, r3
 80109b8:	429a      	cmp	r2, r3
 80109ba:	da37      	bge.n	8010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80109bc:	2300      	movs	r3, #0
 80109be:	930b      	str	r3, [sp, #44]	; 0x2c
 80109c0:	4630      	mov	r0, r6
 80109c2:	ab0b      	add	r3, sp, #44	; 0x2c
 80109c4:	f7ff ff36 	bl	8010834 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80109c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80109ca:	b37a      	cbz	r2, 8010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80109cc:	4552      	cmp	r2, sl
 80109ce:	d02d      	beq.n	8010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80109d0:	4611      	mov	r1, r2
 80109d2:	a80e      	add	r0, sp, #56	; 0x38
 80109d4:	9209      	str	r2, [sp, #36]	; 0x24
 80109d6:	f006 fad7 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80109da:	9a06      	ldr	r2, [sp, #24]
 80109dc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80109e0:	9b01      	ldr	r3, [sp, #4]
 80109e2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80109e6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80109ea:	4413      	add	r3, r2
 80109ec:	f04f 0e02 	mov.w	lr, #2
 80109f0:	fb91 f1fe 	sdiv	r1, r1, lr
 80109f4:	4401      	add	r1, r0
 80109f6:	1a58      	subs	r0, r3, r1
 80109f8:	9a07      	ldr	r2, [sp, #28]
 80109fa:	9b02      	ldr	r3, [sp, #8]
 80109fc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010a00:	fb9c fcfe 	sdiv	ip, ip, lr
 8010a04:	4413      	add	r3, r2
 8010a06:	448c      	add	ip, r1
 8010a08:	eba3 030c 	sub.w	r3, r3, ip
 8010a0c:	435b      	muls	r3, r3
 8010a0e:	fb00 3300 	mla	r3, r0, r0, r3
 8010a12:	42ab      	cmp	r3, r5
 8010a14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010a16:	d208      	bcs.n	8010a2a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010a18:	9803      	ldr	r0, [sp, #12]
 8010a1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010a1c:	6001      	str	r1, [r0, #0]
 8010a1e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010a20:	9805      	ldr	r0, [sp, #20]
 8010a22:	8008      	strh	r0, [r1, #0]
 8010a24:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010a26:	461d      	mov	r5, r3
 8010a28:	800f      	strh	r7, [r1, #0]
 8010a2a:	4692      	mov	sl, r2
 8010a2c:	f10b 0b01 	add.w	fp, fp, #1
 8010a30:	f1bb 0f04 	cmp.w	fp, #4
 8010a34:	f104 0408 	add.w	r4, r4, #8
 8010a38:	d19c      	bne.n	8010974 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010a3a:	9b00      	ldr	r3, [sp, #0]
 8010a3c:	9c08      	ldr	r4, [sp, #32]
 8010a3e:	444b      	add	r3, r9
 8010a40:	4544      	cmp	r4, r8
 8010a42:	9300      	str	r3, [sp, #0]
 8010a44:	d187      	bne.n	8010956 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010a46:	b021      	add	sp, #132	; 0x84
 8010a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a4c:	f04f 35ff 	mov.w	r5, #4294967295
 8010a50:	e766      	b.n	8010920 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010a52:	bf00      	nop
 8010a54:	20012da4 	.word	0x20012da4
 8010a58:	0802bdc8 	.word	0x0802bdc8

08010a5c <_ZN8touchgfx4RectaNERKS0_>:
 8010a5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a60:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010a64:	888c      	ldrh	r4, [r1, #4]
 8010a66:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010a6a:	443c      	add	r4, r7
 8010a6c:	b2a4      	uxth	r4, r4
 8010a6e:	fa0f f884 	sxth.w	r8, r4
 8010a72:	45c1      	cmp	r9, r8
 8010a74:	da2f      	bge.n	8010ad6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a76:	8882      	ldrh	r2, [r0, #4]
 8010a78:	444a      	add	r2, r9
 8010a7a:	b292      	uxth	r2, r2
 8010a7c:	fa0f fe82 	sxth.w	lr, r2
 8010a80:	4577      	cmp	r7, lr
 8010a82:	da28      	bge.n	8010ad6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a84:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010a88:	88cb      	ldrh	r3, [r1, #6]
 8010a8a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010a8e:	442b      	add	r3, r5
 8010a90:	b21b      	sxth	r3, r3
 8010a92:	429e      	cmp	r6, r3
 8010a94:	da1f      	bge.n	8010ad6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a96:	88c3      	ldrh	r3, [r0, #6]
 8010a98:	4433      	add	r3, r6
 8010a9a:	b29b      	uxth	r3, r3
 8010a9c:	fa0f fc83 	sxth.w	ip, r3
 8010aa0:	4565      	cmp	r5, ip
 8010aa2:	da18      	bge.n	8010ad6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010aa4:	454f      	cmp	r7, r9
 8010aa6:	bfb8      	it	lt
 8010aa8:	464f      	movlt	r7, r9
 8010aaa:	42b5      	cmp	r5, r6
 8010aac:	bfb8      	it	lt
 8010aae:	4635      	movlt	r5, r6
 8010ab0:	45f0      	cmp	r8, lr
 8010ab2:	bfd8      	it	le
 8010ab4:	4622      	movle	r2, r4
 8010ab6:	1bd2      	subs	r2, r2, r7
 8010ab8:	8082      	strh	r2, [r0, #4]
 8010aba:	884a      	ldrh	r2, [r1, #2]
 8010abc:	88c9      	ldrh	r1, [r1, #6]
 8010abe:	8007      	strh	r7, [r0, #0]
 8010ac0:	440a      	add	r2, r1
 8010ac2:	b292      	uxth	r2, r2
 8010ac4:	b211      	sxth	r1, r2
 8010ac6:	458c      	cmp	ip, r1
 8010ac8:	bfa8      	it	ge
 8010aca:	4613      	movge	r3, r2
 8010acc:	1b5b      	subs	r3, r3, r5
 8010ace:	80c3      	strh	r3, [r0, #6]
 8010ad0:	8045      	strh	r5, [r0, #2]
 8010ad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010ad6:	2300      	movs	r3, #0
 8010ad8:	8003      	strh	r3, [r0, #0]
 8010ada:	8043      	strh	r3, [r0, #2]
 8010adc:	8083      	strh	r3, [r0, #4]
 8010ade:	80c3      	strh	r3, [r0, #6]
 8010ae0:	e7f7      	b.n	8010ad2 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010ae2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010ae6:	2b00      	cmp	r3, #0
 8010ae8:	dd06      	ble.n	8010af8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010aea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010aee:	2800      	cmp	r0, #0
 8010af0:	bfcc      	ite	gt
 8010af2:	2000      	movgt	r0, #0
 8010af4:	2001      	movle	r0, #1
 8010af6:	4770      	bx	lr
 8010af8:	2001      	movs	r0, #1
 8010afa:	4770      	bx	lr

08010afc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010afc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b00:	2300      	movs	r3, #0
 8010b02:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010b04:	8003      	strh	r3, [r0, #0]
 8010b06:	4604      	mov	r4, r0
 8010b08:	8043      	strh	r3, [r0, #2]
 8010b0a:	8083      	strh	r3, [r0, #4]
 8010b0c:	80c3      	strh	r3, [r0, #6]
 8010b0e:	2d00      	cmp	r5, #0
 8010b10:	d040      	beq.n	8010b94 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010b12:	1d28      	adds	r0, r5, #4
 8010b14:	f7ff ffe5 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b18:	b988      	cbnz	r0, 8010b3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010b1a:	4620      	mov	r0, r4
 8010b1c:	f7ff ffe1 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b20:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010b24:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010b28:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010b2c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010b30:	b138      	cbz	r0, 8010b42 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010b32:	8022      	strh	r2, [r4, #0]
 8010b34:	8063      	strh	r3, [r4, #2]
 8010b36:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010b3a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010b3e:	69ad      	ldr	r5, [r5, #24]
 8010b40:	e7e5      	b.n	8010b0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010b42:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010b46:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010b4a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010b4e:	4290      	cmp	r0, r2
 8010b50:	4607      	mov	r7, r0
 8010b52:	bfa8      	it	ge
 8010b54:	4617      	movge	r7, r2
 8010b56:	4472      	add	r2, lr
 8010b58:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010b5c:	8027      	strh	r7, [r4, #0]
 8010b5e:	4299      	cmp	r1, r3
 8010b60:	460e      	mov	r6, r1
 8010b62:	4440      	add	r0, r8
 8010b64:	bfa8      	it	ge
 8010b66:	461e      	movge	r6, r3
 8010b68:	4471      	add	r1, lr
 8010b6a:	4463      	add	r3, ip
 8010b6c:	b200      	sxth	r0, r0
 8010b6e:	b212      	sxth	r2, r2
 8010b70:	b209      	sxth	r1, r1
 8010b72:	b21b      	sxth	r3, r3
 8010b74:	4290      	cmp	r0, r2
 8010b76:	bfac      	ite	ge
 8010b78:	ebc7 0200 	rsbge	r2, r7, r0
 8010b7c:	ebc7 0202 	rsblt	r2, r7, r2
 8010b80:	4299      	cmp	r1, r3
 8010b82:	bfac      	ite	ge
 8010b84:	ebc6 0301 	rsbge	r3, r6, r1
 8010b88:	ebc6 0303 	rsblt	r3, r6, r3
 8010b8c:	8066      	strh	r6, [r4, #2]
 8010b8e:	80a2      	strh	r2, [r4, #4]
 8010b90:	80e3      	strh	r3, [r4, #6]
 8010b92:	e7d4      	b.n	8010b3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010b94:	4620      	mov	r0, r4
 8010b96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010b9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010b9a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010b9e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010ba2:	b383      	cbz	r3, 8010c06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010ba4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010ba6:	b374      	cbz	r4, 8010c06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010ba8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010bac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010bb0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010bb4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010bb8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010bbc:	b303      	cbz	r3, 8010c00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010bbe:	4668      	mov	r0, sp
 8010bc0:	1d21      	adds	r1, r4, #4
 8010bc2:	f8ad 5000 	strh.w	r5, [sp]
 8010bc6:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010bca:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010bce:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010bd2:	f7ff ff43 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8010bd6:	4668      	mov	r0, sp
 8010bd8:	f7ff ff83 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010bdc:	b980      	cbnz	r0, 8010c00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010bde:	f8bd 3000 	ldrh.w	r3, [sp]
 8010be2:	88a2      	ldrh	r2, [r4, #4]
 8010be4:	1a9b      	subs	r3, r3, r2
 8010be6:	f8ad 3000 	strh.w	r3, [sp]
 8010bea:	88e2      	ldrh	r2, [r4, #6]
 8010bec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010bf0:	1a9b      	subs	r3, r3, r2
 8010bf2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010bf6:	6823      	ldr	r3, [r4, #0]
 8010bf8:	4669      	mov	r1, sp
 8010bfa:	689b      	ldr	r3, [r3, #8]
 8010bfc:	4620      	mov	r0, r4
 8010bfe:	4798      	blx	r3
 8010c00:	69a4      	ldr	r4, [r4, #24]
 8010c02:	2c00      	cmp	r4, #0
 8010c04:	d1d8      	bne.n	8010bb8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010c06:	b002      	add	sp, #8
 8010c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010c0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010c0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010c0e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010c12:	460d      	mov	r5, r1
 8010c14:	4616      	mov	r6, r2
 8010c16:	b323      	cbz	r3, 8010c62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010c18:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010c1a:	b314      	cbz	r4, 8010c62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010c1c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010c20:	b1eb      	cbz	r3, 8010c5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010c22:	6828      	ldr	r0, [r5, #0]
 8010c24:	6869      	ldr	r1, [r5, #4]
 8010c26:	466b      	mov	r3, sp
 8010c28:	c303      	stmia	r3!, {r0, r1}
 8010c2a:	4668      	mov	r0, sp
 8010c2c:	1d21      	adds	r1, r4, #4
 8010c2e:	f7ff ff15 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8010c32:	4668      	mov	r0, sp
 8010c34:	f7ff ff55 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c38:	b988      	cbnz	r0, 8010c5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010c3a:	f8bd 3000 	ldrh.w	r3, [sp]
 8010c3e:	88a2      	ldrh	r2, [r4, #4]
 8010c40:	1a9b      	subs	r3, r3, r2
 8010c42:	f8ad 3000 	strh.w	r3, [sp]
 8010c46:	88e2      	ldrh	r2, [r4, #6]
 8010c48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010c4c:	1a9b      	subs	r3, r3, r2
 8010c4e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010c52:	6823      	ldr	r3, [r4, #0]
 8010c54:	4632      	mov	r2, r6
 8010c56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010c58:	4669      	mov	r1, sp
 8010c5a:	4620      	mov	r0, r4
 8010c5c:	4798      	blx	r3
 8010c5e:	69a4      	ldr	r4, [r4, #24]
 8010c60:	e7db      	b.n	8010c1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010c62:	b002      	add	sp, #8
 8010c64:	bd70      	pop	{r4, r5, r6, pc}

08010c66 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010c66:	b513      	push	{r0, r1, r4, lr}
 8010c68:	6803      	ldr	r3, [r0, #0]
 8010c6a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010c6e:	2300      	movs	r3, #0
 8010c70:	e9cd 3300 	strd	r3, r3, [sp]
 8010c74:	466b      	mov	r3, sp
 8010c76:	47a0      	blx	r4
 8010c78:	b002      	add	sp, #8
 8010c7a:	bd10      	pop	{r4, pc}

08010c7c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010c7c:	2301      	movs	r3, #1
 8010c7e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010c82:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010c86:	4770      	bx	lr

08010c88 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010c88:	2301      	movs	r3, #1
 8010c8a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010c8e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010c92:	4770      	bx	lr

08010c94 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010c94:	6843      	ldr	r3, [r0, #4]
 8010c96:	2201      	movs	r2, #1
 8010c98:	725a      	strb	r2, [r3, #9]
 8010c9a:	6840      	ldr	r0, [r0, #4]
 8010c9c:	6803      	ldr	r3, [r0, #0]
 8010c9e:	691b      	ldr	r3, [r3, #16]
 8010ca0:	4718      	bx	r3

08010ca2 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010ca2:	6840      	ldr	r0, [r0, #4]
 8010ca4:	6803      	ldr	r3, [r0, #0]
 8010ca6:	689b      	ldr	r3, [r3, #8]
 8010ca8:	4718      	bx	r3

08010caa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010caa:	b530      	push	{r4, r5, lr}
 8010cac:	b08b      	sub	sp, #44	; 0x2c
 8010cae:	6804      	ldr	r4, [r0, #0]
 8010cb0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010cb4:	9509      	str	r5, [sp, #36]	; 0x24
 8010cb6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010cba:	9508      	str	r5, [sp, #32]
 8010cbc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010cc0:	9507      	str	r5, [sp, #28]
 8010cc2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010cc6:	9506      	str	r5, [sp, #24]
 8010cc8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010ccc:	9505      	str	r5, [sp, #20]
 8010cce:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010cd2:	9504      	str	r5, [sp, #16]
 8010cd4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010cd8:	9503      	str	r5, [sp, #12]
 8010cda:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010cde:	9502      	str	r5, [sp, #8]
 8010ce0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010ce4:	e9cd 3500 	strd	r3, r5, [sp]
 8010ce8:	4613      	mov	r3, r2
 8010cea:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010cec:	2200      	movs	r2, #0
 8010cee:	47a0      	blx	r4
 8010cf0:	b00b      	add	sp, #44	; 0x2c
 8010cf2:	bd30      	pop	{r4, r5, pc}

08010cf4 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010cf4:	4b04      	ldr	r3, [pc, #16]	; (8010d08 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010cf6:	781b      	ldrb	r3, [r3, #0]
 8010cf8:	b123      	cbz	r3, 8010d04 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010cfa:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010cfe:	f080 0001 	eor.w	r0, r0, #1
 8010d02:	4770      	bx	lr
 8010d04:	2001      	movs	r0, #1
 8010d06:	4770      	bx	lr
 8010d08:	20012da2 	.word	0x20012da2

08010d0c <_ZN8touchgfx3HAL8endFrameEv>:
 8010d0c:	b510      	push	{r4, lr}
 8010d0e:	4604      	mov	r4, r0
 8010d10:	6840      	ldr	r0, [r0, #4]
 8010d12:	6803      	ldr	r3, [r0, #0]
 8010d14:	689b      	ldr	r3, [r3, #8]
 8010d16:	4798      	blx	r3
 8010d18:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010d1c:	b113      	cbz	r3, 8010d24 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010d1e:	2301      	movs	r3, #1
 8010d20:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010d24:	bd10      	pop	{r4, pc}

08010d26 <_ZN8touchgfx3HAL10initializeEv>:
 8010d26:	b510      	push	{r4, lr}
 8010d28:	4604      	mov	r4, r0
 8010d2a:	f7f1 fd31 	bl	8002790 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010d2e:	f7f1 fc3d 	bl	80025ac <_ZN8touchgfx4GPIO4initEv>
 8010d32:	6860      	ldr	r0, [r4, #4]
 8010d34:	6803      	ldr	r3, [r0, #0]
 8010d36:	68db      	ldr	r3, [r3, #12]
 8010d38:	4798      	blx	r3
 8010d3a:	68e0      	ldr	r0, [r4, #12]
 8010d3c:	6803      	ldr	r3, [r0, #0]
 8010d3e:	689b      	ldr	r3, [r3, #8]
 8010d40:	4798      	blx	r3
 8010d42:	6823      	ldr	r3, [r4, #0]
 8010d44:	4620      	mov	r0, r4
 8010d46:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010d48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d4c:	4718      	bx	r3
	...

08010d50 <_ZN8touchgfx3HAL4tickEv>:
 8010d50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010d52:	6803      	ldr	r3, [r0, #0]
 8010d54:	4d5b      	ldr	r5, [pc, #364]	; (8010ec4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010d56:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010d5a:	4604      	mov	r4, r0
 8010d5c:	4798      	blx	r3
 8010d5e:	2800      	cmp	r0, #0
 8010d60:	f000 8095 	beq.w	8010e8e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010d64:	2001      	movs	r0, #1
 8010d66:	f7f1 fbd3 	bl	8002510 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010d6a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010d6e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010d72:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010d76:	2600      	movs	r6, #0
 8010d78:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010d7c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010d80:	b133      	cbz	r3, 8010d90 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010d82:	6823      	ldr	r3, [r4, #0]
 8010d84:	4620      	mov	r0, r4
 8010d86:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010d8a:	4798      	blx	r3
 8010d8c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010d90:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010d94:	6862      	ldr	r2, [r4, #4]
 8010d96:	f083 0301 	eor.w	r3, r3, #1
 8010d9a:	7253      	strb	r3, [r2, #9]
 8010d9c:	2601      	movs	r6, #1
 8010d9e:	702e      	strb	r6, [r5, #0]
 8010da0:	f004 ff6e 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 8010da4:	6803      	ldr	r3, [r0, #0]
 8010da6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010da8:	4798      	blx	r3
 8010daa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010dae:	b90b      	cbnz	r3, 8010db4 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010db0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010db4:	f004 ff64 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 8010db8:	6803      	ldr	r3, [r0, #0]
 8010dba:	695b      	ldr	r3, [r3, #20]
 8010dbc:	4798      	blx	r3
 8010dbe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010dc0:	6803      	ldr	r3, [r0, #0]
 8010dc2:	691b      	ldr	r3, [r3, #16]
 8010dc4:	4798      	blx	r3
 8010dc6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010dca:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010dce:	3b01      	subs	r3, #1
 8010dd0:	b2db      	uxtb	r3, r3
 8010dd2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010dd6:	b10a      	cbz	r2, 8010ddc <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010dd8:	2b00      	cmp	r3, #0
 8010dda:	d1eb      	bne.n	8010db4 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010ddc:	4a3a      	ldr	r2, [pc, #232]	; (8010ec8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010dde:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010de2:	7813      	ldrb	r3, [r2, #0]
 8010de4:	3301      	adds	r3, #1
 8010de6:	b25b      	sxtb	r3, r3
 8010de8:	4299      	cmp	r1, r3
 8010dea:	7013      	strb	r3, [r2, #0]
 8010dec:	dc10      	bgt.n	8010e10 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010dee:	68e0      	ldr	r0, [r4, #12]
 8010df0:	2300      	movs	r3, #0
 8010df2:	7013      	strb	r3, [r2, #0]
 8010df4:	6803      	ldr	r3, [r0, #0]
 8010df6:	aa03      	add	r2, sp, #12
 8010df8:	68db      	ldr	r3, [r3, #12]
 8010dfa:	a902      	add	r1, sp, #8
 8010dfc:	4798      	blx	r3
 8010dfe:	6823      	ldr	r3, [r4, #0]
 8010e00:	2800      	cmp	r0, #0
 8010e02:	d050      	beq.n	8010ea6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010e04:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010e08:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010e0c:	4620      	mov	r0, r4
 8010e0e:	4798      	blx	r3
 8010e10:	6960      	ldr	r0, [r4, #20]
 8010e12:	2300      	movs	r3, #0
 8010e14:	f88d 3007 	strb.w	r3, [sp, #7]
 8010e18:	b158      	cbz	r0, 8010e32 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010e1a:	6803      	ldr	r3, [r0, #0]
 8010e1c:	f10d 0107 	add.w	r1, sp, #7
 8010e20:	68db      	ldr	r3, [r3, #12]
 8010e22:	4798      	blx	r3
 8010e24:	b128      	cbz	r0, 8010e32 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010e26:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010e28:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010e2c:	6803      	ldr	r3, [r0, #0]
 8010e2e:	68db      	ldr	r3, [r3, #12]
 8010e30:	4798      	blx	r3
 8010e32:	f104 001c 	add.w	r0, r4, #28
 8010e36:	f015 feb9 	bl	8026bac <_ZN8touchgfx8Gestures4tickEv>
 8010e3a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010e3e:	b30b      	cbz	r3, 8010e84 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010e40:	6920      	ldr	r0, [r4, #16]
 8010e42:	6803      	ldr	r3, [r0, #0]
 8010e44:	691b      	ldr	r3, [r3, #16]
 8010e46:	4798      	blx	r3
 8010e48:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010e4a:	4606      	mov	r6, r0
 8010e4c:	b903      	cbnz	r3, 8010e50 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010e4e:	6760      	str	r0, [r4, #116]	; 0x74
 8010e50:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010e52:	4a1e      	ldr	r2, [pc, #120]	; (8010ecc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010e54:	1af3      	subs	r3, r6, r3
 8010e56:	4293      	cmp	r3, r2
 8010e58:	d914      	bls.n	8010e84 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010e5a:	6920      	ldr	r0, [r4, #16]
 8010e5c:	6803      	ldr	r3, [r0, #0]
 8010e5e:	699b      	ldr	r3, [r3, #24]
 8010e60:	4798      	blx	r3
 8010e62:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010e64:	2264      	movs	r2, #100	; 0x64
 8010e66:	1af3      	subs	r3, r6, r3
 8010e68:	fbb3 f3f2 	udiv	r3, r3, r2
 8010e6c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010e70:	2800      	cmp	r0, #0
 8010e72:	dc1d      	bgt.n	8010eb0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010e74:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010e78:	6920      	ldr	r0, [r4, #16]
 8010e7a:	6803      	ldr	r3, [r0, #0]
 8010e7c:	2100      	movs	r1, #0
 8010e7e:	69db      	ldr	r3, [r3, #28]
 8010e80:	4798      	blx	r3
 8010e82:	6766      	str	r6, [r4, #116]	; 0x74
 8010e84:	f004 fefc 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 8010e88:	6803      	ldr	r3, [r0, #0]
 8010e8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e8c:	4798      	blx	r3
 8010e8e:	6823      	ldr	r3, [r4, #0]
 8010e90:	4620      	mov	r0, r4
 8010e92:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010e96:	4798      	blx	r3
 8010e98:	2001      	movs	r0, #1
 8010e9a:	f7f1 fb51 	bl	8002540 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010e9e:	2300      	movs	r3, #0
 8010ea0:	702b      	strb	r3, [r5, #0]
 8010ea2:	b004      	add	sp, #16
 8010ea4:	bd70      	pop	{r4, r5, r6, pc}
 8010ea6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010eaa:	4620      	mov	r0, r4
 8010eac:	4798      	blx	r3
 8010eae:	e7af      	b.n	8010e10 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010eb0:	2863      	cmp	r0, #99	; 0x63
 8010eb2:	bfcb      	itete	gt
 8010eb4:	2300      	movgt	r3, #0
 8010eb6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010eba:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010ebe:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010ec2:	e7d9      	b.n	8010e78 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010ec4:	20012da8 	.word	0x20012da8
 8010ec8:	20012da9 	.word	0x20012da9
 8010ecc:	05f5e100 	.word	0x05f5e100

08010ed0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010ed0:	b510      	push	{r4, lr}
 8010ed2:	4604      	mov	r4, r0
 8010ed4:	f7f1 fc8c 	bl	80027f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010ed8:	6863      	ldr	r3, [r4, #4]
 8010eda:	2200      	movs	r2, #0
 8010edc:	729a      	strb	r2, [r3, #10]
 8010ede:	bd10      	pop	{r4, pc}

08010ee0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010ee0:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010ee2:	301c      	adds	r0, #28
 8010ee4:	f015 be60 	b.w	8026ba8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010ee8 <_ZN8touchgfx3HAL5touchEll>:
 8010ee8:	b530      	push	{r4, r5, lr}
 8010eea:	b087      	sub	sp, #28
 8010eec:	4604      	mov	r4, r0
 8010eee:	a804      	add	r0, sp, #16
 8010ef0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010ef4:	f004 fc90 	bl	8015818 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010ef8:	9b04      	ldr	r3, [sp, #16]
 8010efa:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010efe:	a906      	add	r1, sp, #24
 8010f00:	9b05      	ldr	r3, [sp, #20]
 8010f02:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010f06:	a803      	add	r0, sp, #12
 8010f08:	f004 fcd8 	bl	80158bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010f0c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010f10:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010f14:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010f18:	f104 001c 	add.w	r0, r4, #28
 8010f1c:	b189      	cbz	r1, 8010f42 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010f1e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010f22:	9300      	str	r3, [sp, #0]
 8010f24:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010f28:	4613      	mov	r3, r2
 8010f2a:	462a      	mov	r2, r5
 8010f2c:	f015 fe4c 	bl	8026bc8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010f30:	b128      	cbz	r0, 8010f3e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010f32:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010f36:	6623      	str	r3, [r4, #96]	; 0x60
 8010f38:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010f3c:	6663      	str	r3, [r4, #100]	; 0x64
 8010f3e:	b007      	add	sp, #28
 8010f40:	bd30      	pop	{r4, r5, pc}
 8010f42:	f015 fe81 	bl	8026c48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010f46:	2301      	movs	r3, #1
 8010f48:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010f4c:	e7f1      	b.n	8010f32 <_ZN8touchgfx3HAL5touchEll+0x4a>

08010f4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010f4e:	b510      	push	{r4, lr}
 8010f50:	2b00      	cmp	r3, #0
 8010f52:	d046      	beq.n	8010fe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010f54:	ea81 0002 	eor.w	r0, r1, r2
 8010f58:	07c4      	lsls	r4, r0, #31
 8010f5a:	d508      	bpl.n	8010f6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010f5c:	440b      	add	r3, r1
 8010f5e:	3a01      	subs	r2, #1
 8010f60:	428b      	cmp	r3, r1
 8010f62:	d93e      	bls.n	8010fe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010f64:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010f68:	f801 0b01 	strb.w	r0, [r1], #1
 8010f6c:	e7f8      	b.n	8010f60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010f6e:	07d0      	lsls	r0, r2, #31
 8010f70:	bf42      	ittt	mi
 8010f72:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010f76:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010f7a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010f7e:	2b01      	cmp	r3, #1
 8010f80:	d911      	bls.n	8010fa6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010f82:	ea81 0402 	eor.w	r4, r1, r2
 8010f86:	07a4      	lsls	r4, r4, #30
 8010f88:	4610      	mov	r0, r2
 8010f8a:	d022      	beq.n	8010fd2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010f8c:	f023 0401 	bic.w	r4, r3, #1
 8010f90:	440c      	add	r4, r1
 8010f92:	428c      	cmp	r4, r1
 8010f94:	4602      	mov	r2, r0
 8010f96:	d904      	bls.n	8010fa2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010f98:	8812      	ldrh	r2, [r2, #0]
 8010f9a:	f821 2b02 	strh.w	r2, [r1], #2
 8010f9e:	3002      	adds	r0, #2
 8010fa0:	e7f7      	b.n	8010f92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010fa2:	f003 0301 	and.w	r3, r3, #1
 8010fa6:	f023 0003 	bic.w	r0, r3, #3
 8010faa:	4408      	add	r0, r1
 8010fac:	4288      	cmp	r0, r1
 8010fae:	4614      	mov	r4, r2
 8010fb0:	d904      	bls.n	8010fbc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010fb2:	6824      	ldr	r4, [r4, #0]
 8010fb4:	f841 4b04 	str.w	r4, [r1], #4
 8010fb8:	3204      	adds	r2, #4
 8010fba:	e7f7      	b.n	8010fac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010fbc:	f003 0303 	and.w	r3, r3, #3
 8010fc0:	440b      	add	r3, r1
 8010fc2:	3a01      	subs	r2, #1
 8010fc4:	428b      	cmp	r3, r1
 8010fc6:	d90c      	bls.n	8010fe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010fc8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010fcc:	f801 0b01 	strb.w	r0, [r1], #1
 8010fd0:	e7f8      	b.n	8010fc4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010fd2:	0790      	lsls	r0, r2, #30
 8010fd4:	d0e7      	beq.n	8010fa6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010fd6:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010fda:	f821 0b02 	strh.w	r0, [r1], #2
 8010fde:	3b02      	subs	r3, #2
 8010fe0:	e7e1      	b.n	8010fa6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010fe2:	2001      	movs	r0, #1
 8010fe4:	bd10      	pop	{r4, pc}

08010fe6 <_ZN8touchgfx3HAL7noTouchEv>:
 8010fe6:	b510      	push	{r4, lr}
 8010fe8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8010fec:	4604      	mov	r4, r0
 8010fee:	b153      	cbz	r3, 8011006 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010ff0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010ff4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010ff8:	2101      	movs	r1, #1
 8010ffa:	301c      	adds	r0, #28
 8010ffc:	f015 fe24 	bl	8026c48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011000:	2300      	movs	r3, #0
 8011002:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011006:	bd10      	pop	{r4, pc}

08011008 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011008:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801100c:	b085      	sub	sp, #20
 801100e:	ad04      	add	r5, sp, #16
 8011010:	4604      	mov	r4, r0
 8011012:	2000      	movs	r0, #0
 8011014:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011018:	69a0      	ldr	r0, [r4, #24]
 801101a:	6806      	ldr	r6, [r0, #0]
 801101c:	9501      	str	r5, [sp, #4]
 801101e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011022:	9500      	str	r5, [sp, #0]
 8011024:	6835      	ldr	r5, [r6, #0]
 8011026:	4699      	mov	r9, r3
 8011028:	460f      	mov	r7, r1
 801102a:	4690      	mov	r8, r2
 801102c:	47a8      	blx	r5
 801102e:	4d10      	ldr	r5, [pc, #64]	; (8011070 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011030:	4606      	mov	r6, r0
 8011032:	f8a5 9000 	strh.w	r9, [r5]
 8011036:	f7f3 fbe1 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 801103a:	6803      	ldr	r3, [r0, #0]
 801103c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801103e:	4798      	blx	r3
 8011040:	b128      	cbz	r0, 801104e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011042:	2801      	cmp	r0, #1
 8011044:	d00b      	beq.n	801105e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011046:	4630      	mov	r0, r6
 8011048:	b005      	add	sp, #20
 801104a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801104e:	882b      	ldrh	r3, [r5, #0]
 8011050:	fb08 7203 	mla	r2, r8, r3, r7
 8011054:	9b03      	ldr	r3, [sp, #12]
 8011056:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801105a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801105c:	e7f3      	b.n	8011046 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801105e:	882a      	ldrh	r2, [r5, #0]
 8011060:	9b03      	ldr	r3, [sp, #12]
 8011062:	fb08 7202 	mla	r2, r8, r2, r7
 8011066:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801106a:	1a9a      	subs	r2, r3, r2
 801106c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801106e:	e7ea      	b.n	8011046 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011070:	20012d9e 	.word	0x20012d9e

08011074 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011074:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011076:	b08b      	sub	sp, #44	; 0x2c
 8011078:	4617      	mov	r7, r2
 801107a:	4604      	mov	r4, r0
 801107c:	460e      	mov	r6, r1
 801107e:	461d      	mov	r5, r3
 8011080:	f7f3 fbbc 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 8011084:	6803      	ldr	r3, [r0, #0]
 8011086:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011088:	4798      	blx	r3
 801108a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801108e:	9007      	str	r0, [sp, #28]
 8011090:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011094:	4b0d      	ldr	r3, [pc, #52]	; (80110cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011096:	6822      	ldr	r2, [r4, #0]
 8011098:	881b      	ldrh	r3, [r3, #0]
 801109a:	9306      	str	r3, [sp, #24]
 801109c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80110a0:	9305      	str	r3, [sp, #20]
 80110a2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80110a6:	9304      	str	r3, [sp, #16]
 80110a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80110ac:	9303      	str	r3, [sp, #12]
 80110ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80110b2:	9302      	str	r3, [sp, #8]
 80110b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80110b8:	e9cd 5300 	strd	r5, r3, [sp]
 80110bc:	4631      	mov	r1, r6
 80110be:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80110c0:	463b      	mov	r3, r7
 80110c2:	2200      	movs	r2, #0
 80110c4:	4620      	mov	r0, r4
 80110c6:	47a8      	blx	r5
 80110c8:	b00b      	add	sp, #44	; 0x2c
 80110ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80110cc:	20012d9e 	.word	0x20012d9e

080110d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80110d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80110d4:	4698      	mov	r8, r3
 80110d6:	6803      	ldr	r3, [r0, #0]
 80110d8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80110da:	4b15      	ldr	r3, [pc, #84]	; (8011130 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80110dc:	b08b      	sub	sp, #44	; 0x2c
 80110de:	4617      	mov	r7, r2
 80110e0:	f8b3 9000 	ldrh.w	r9, [r3]
 80110e4:	460e      	mov	r6, r1
 80110e6:	4604      	mov	r4, r0
 80110e8:	f7f3 fb88 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 80110ec:	6803      	ldr	r3, [r0, #0]
 80110ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110f0:	4798      	blx	r3
 80110f2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80110f6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80110fa:	2302      	movs	r3, #2
 80110fc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011100:	2301      	movs	r3, #1
 8011102:	9305      	str	r3, [sp, #20]
 8011104:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011108:	9304      	str	r3, [sp, #16]
 801110a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801110e:	9303      	str	r3, [sp, #12]
 8011110:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011114:	9302      	str	r3, [sp, #8]
 8011116:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801111a:	2200      	movs	r2, #0
 801111c:	e9cd 8300 	strd	r8, r3, [sp]
 8011120:	4631      	mov	r1, r6
 8011122:	463b      	mov	r3, r7
 8011124:	4620      	mov	r0, r4
 8011126:	47a8      	blx	r5
 8011128:	b00b      	add	sp, #44	; 0x2c
 801112a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801112e:	bf00      	nop
 8011130:	20012d9e 	.word	0x20012d9e

08011134 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011134:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011138:	4698      	mov	r8, r3
 801113a:	6803      	ldr	r3, [r0, #0]
 801113c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801113e:	4b11      	ldr	r3, [pc, #68]	; (8011184 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011140:	b087      	sub	sp, #28
 8011142:	f8b3 9000 	ldrh.w	r9, [r3]
 8011146:	460e      	mov	r6, r1
 8011148:	4617      	mov	r7, r2
 801114a:	4604      	mov	r4, r0
 801114c:	f7f3 fb56 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 8011150:	6803      	ldr	r3, [r0, #0]
 8011152:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011154:	4798      	blx	r3
 8011156:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801115a:	f8cd 900c 	str.w	r9, [sp, #12]
 801115e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011162:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011166:	9302      	str	r3, [sp, #8]
 8011168:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801116c:	9301      	str	r3, [sp, #4]
 801116e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011172:	9300      	str	r3, [sp, #0]
 8011174:	463a      	mov	r2, r7
 8011176:	4643      	mov	r3, r8
 8011178:	4631      	mov	r1, r6
 801117a:	4620      	mov	r0, r4
 801117c:	47a8      	blx	r5
 801117e:	b007      	add	sp, #28
 8011180:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011184:	20012d9e 	.word	0x20012d9e

08011188 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801118c:	4604      	mov	r4, r0
 801118e:	b08f      	sub	sp, #60	; 0x3c
 8011190:	4610      	mov	r0, r2
 8011192:	460d      	mov	r5, r1
 8011194:	4691      	mov	r9, r2
 8011196:	461e      	mov	r6, r3
 8011198:	f008 f8f0 	bl	801937c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801119c:	2800      	cmp	r0, #0
 801119e:	f000 809d 	beq.w	80112dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80111a2:	6823      	ldr	r3, [r4, #0]
 80111a4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011340 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80111a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80111aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011344 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80111ae:	4f61      	ldr	r7, [pc, #388]	; (8011334 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80111b0:	4620      	mov	r0, r4
 80111b2:	4798      	blx	r3
 80111b4:	6823      	ldr	r3, [r4, #0]
 80111b6:	4620      	mov	r0, r4
 80111b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111ba:	4798      	blx	r3
 80111bc:	f8bb 3000 	ldrh.w	r3, [fp]
 80111c0:	9301      	str	r3, [sp, #4]
 80111c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80111c6:	f8ba 3000 	ldrh.w	r3, [sl]
 80111ca:	9302      	str	r3, [sp, #8]
 80111cc:	883b      	ldrh	r3, [r7, #0]
 80111ce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80111d2:	9303      	str	r3, [sp, #12]
 80111d4:	4b58      	ldr	r3, [pc, #352]	; (8011338 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80111d6:	9305      	str	r3, [sp, #20]
 80111d8:	881a      	ldrh	r2, [r3, #0]
 80111da:	9204      	str	r2, [sp, #16]
 80111dc:	4640      	mov	r0, r8
 80111de:	f008 f961 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80111e2:	8038      	strh	r0, [r7, #0]
 80111e4:	4640      	mov	r0, r8
 80111e6:	f008 f991 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80111ea:	9b05      	ldr	r3, [sp, #20]
 80111ec:	b280      	uxth	r0, r0
 80111ee:	8018      	strh	r0, [r3, #0]
 80111f0:	4b52      	ldr	r3, [pc, #328]	; (801133c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80111f2:	781b      	ldrb	r3, [r3, #0]
 80111f4:	2b00      	cmp	r3, #0
 80111f6:	d174      	bne.n	80112e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80111f8:	883b      	ldrh	r3, [r7, #0]
 80111fa:	f8ab 3000 	strh.w	r3, [fp]
 80111fe:	f8aa 0000 	strh.w	r0, [sl]
 8011202:	4648      	mov	r0, r9
 8011204:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011208:	f008 f8b8 	bl	801937c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801120c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011210:	2200      	movs	r2, #0
 8011212:	4611      	mov	r1, r2
 8011214:	4628      	mov	r0, r5
 8011216:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801121a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801121e:	f7f1 ff62 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8011222:	2301      	movs	r3, #1
 8011224:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011228:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801122c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011230:	2b00      	cmp	r3, #0
 8011232:	dd5c      	ble.n	80112ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011234:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011238:	2b00      	cmp	r3, #0
 801123a:	dd58      	ble.n	80112ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801123c:	462a      	mov	r2, r5
 801123e:	ab0a      	add	r3, sp, #40	; 0x28
 8011240:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011244:	6851      	ldr	r1, [r2, #4]
 8011246:	c303      	stmia	r3!, {r0, r1}
 8011248:	4631      	mov	r1, r6
 801124a:	a80a      	add	r0, sp, #40	; 0x28
 801124c:	f7ff fc06 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8011250:	4b38      	ldr	r3, [pc, #224]	; (8011334 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011252:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011256:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801125a:	2100      	movs	r1, #0
 801125c:	aa0a      	add	r2, sp, #40	; 0x28
 801125e:	4b36      	ldr	r3, [pc, #216]	; (8011338 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011260:	910c      	str	r1, [sp, #48]	; 0x30
 8011262:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011266:	f9b3 3000 	ldrsh.w	r3, [r3]
 801126a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801126e:	ab08      	add	r3, sp, #32
 8011270:	e883 0003 	stmia.w	r3, {r0, r1}
 8011274:	4618      	mov	r0, r3
 8011276:	a90c      	add	r1, sp, #48	; 0x30
 8011278:	f7ff fbf0 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 801127c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801127e:	2b00      	cmp	r3, #0
 8011280:	d13c      	bne.n	80112fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011282:	2000      	movs	r0, #0
 8011284:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011288:	2600      	movs	r6, #0
 801128a:	682a      	ldr	r2, [r5, #0]
 801128c:	696b      	ldr	r3, [r5, #20]
 801128e:	616e      	str	r6, [r5, #20]
 8011290:	9305      	str	r3, [sp, #20]
 8011292:	6892      	ldr	r2, [r2, #8]
 8011294:	a908      	add	r1, sp, #32
 8011296:	4628      	mov	r0, r5
 8011298:	4790      	blx	r2
 801129a:	9b05      	ldr	r3, [sp, #20]
 801129c:	616b      	str	r3, [r5, #20]
 801129e:	4652      	mov	r2, sl
 80112a0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80112a4:	4649      	mov	r1, r9
 80112a6:	4628      	mov	r0, r5
 80112a8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80112ac:	f7f1 ff1b 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 80112b0:	4b23      	ldr	r3, [pc, #140]	; (8011340 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80112b2:	9a01      	ldr	r2, [sp, #4]
 80112b4:	801a      	strh	r2, [r3, #0]
 80112b6:	4b23      	ldr	r3, [pc, #140]	; (8011344 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80112b8:	9a02      	ldr	r2, [sp, #8]
 80112ba:	801a      	strh	r2, [r3, #0]
 80112bc:	4b1d      	ldr	r3, [pc, #116]	; (8011334 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80112be:	9a03      	ldr	r2, [sp, #12]
 80112c0:	801a      	strh	r2, [r3, #0]
 80112c2:	4b1d      	ldr	r3, [pc, #116]	; (8011338 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80112c4:	9a04      	ldr	r2, [sp, #16]
 80112c6:	801a      	strh	r2, [r3, #0]
 80112c8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80112cc:	6823      	ldr	r3, [r4, #0]
 80112ce:	4620      	mov	r0, r4
 80112d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80112d2:	4798      	blx	r3
 80112d4:	6823      	ldr	r3, [r4, #0]
 80112d6:	4620      	mov	r0, r4
 80112d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112da:	4798      	blx	r3
 80112dc:	b00f      	add	sp, #60	; 0x3c
 80112de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112e2:	883b      	ldrh	r3, [r7, #0]
 80112e4:	f8ab 0000 	strh.w	r0, [fp]
 80112e8:	f8aa 3000 	strh.w	r3, [sl]
 80112ec:	e789      	b.n	8011202 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80112ee:	462a      	mov	r2, r5
 80112f0:	ab0a      	add	r3, sp, #40	; 0x28
 80112f2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80112f6:	6851      	ldr	r1, [r2, #4]
 80112f8:	c303      	stmia	r3!, {r0, r1}
 80112fa:	e7a9      	b.n	8011250 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80112fc:	a807      	add	r0, sp, #28
 80112fe:	f008 fa41 	bl	8019784 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011302:	4606      	mov	r6, r0
 8011304:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011306:	6803      	ldr	r3, [r0, #0]
 8011308:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801130a:	4798      	blx	r3
 801130c:	4286      	cmp	r6, r0
 801130e:	d1b8      	bne.n	8011282 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011310:	f7f3 fa74 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 8011314:	6803      	ldr	r3, [r0, #0]
 8011316:	4606      	mov	r6, r0
 8011318:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801131a:	9305      	str	r3, [sp, #20]
 801131c:	a807      	add	r0, sp, #28
 801131e:	f008 fa31 	bl	8019784 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011322:	9b05      	ldr	r3, [sp, #20]
 8011324:	4601      	mov	r1, r0
 8011326:	4630      	mov	r0, r6
 8011328:	4798      	blx	r3
 801132a:	f080 0001 	eor.w	r0, r0, #1
 801132e:	b2c0      	uxtb	r0, r0
 8011330:	e7a8      	b.n	8011284 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011332:	bf00      	nop
 8011334:	20012d98 	.word	0x20012d98
 8011338:	20012d9a 	.word	0x20012d9a
 801133c:	20012d9c 	.word	0x20012d9c
 8011340:	20012d9e 	.word	0x20012d9e
 8011344:	20012da0 	.word	0x20012da0

08011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011348:	b510      	push	{r4, lr}
 801134a:	4b07      	ldr	r3, [pc, #28]	; (8011368 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801134c:	781b      	ldrb	r3, [r3, #0]
 801134e:	4604      	mov	r4, r0
 8011350:	b13b      	cbz	r3, 8011362 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011352:	6803      	ldr	r3, [r0, #0]
 8011354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011356:	4798      	blx	r3
 8011358:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801135a:	4283      	cmp	r3, r0
 801135c:	d101      	bne.n	8011362 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801135e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011360:	bd10      	pop	{r4, pc}
 8011362:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011364:	e7fc      	b.n	8011360 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011366:	bf00      	nop
 8011368:	20012da2 	.word	0x20012da2

0801136c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801136c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011370:	b08a      	sub	sp, #40	; 0x28
 8011372:	461d      	mov	r5, r3
 8011374:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011378:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801137c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011380:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011384:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011388:	f8ad 301a 	strh.w	r3, [sp, #26]
 801138c:	2400      	movs	r4, #0
 801138e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011392:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011396:	f8ad 301c 	strh.w	r3, [sp, #28]
 801139a:	4690      	mov	r8, r2
 801139c:	4607      	mov	r7, r0
 801139e:	9404      	str	r4, [sp, #16]
 80113a0:	f88d 4020 	strb.w	r4, [sp, #32]
 80113a4:	f7ff ffd0 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80113a8:	fb06 8505 	mla	r5, r6, r5, r8
 80113ac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80113b0:	6878      	ldr	r0, [r7, #4]
 80113b2:	9505      	str	r5, [sp, #20]
 80113b4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80113b8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80113bc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80113c0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80113c4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80113c8:	6803      	ldr	r3, [r0, #0]
 80113ca:	a901      	add	r1, sp, #4
 80113cc:	685b      	ldr	r3, [r3, #4]
 80113ce:	4798      	blx	r3
 80113d0:	b00a      	add	sp, #40	; 0x28
 80113d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080113d6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80113d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80113da:	b08b      	sub	sp, #44	; 0x2c
 80113dc:	2400      	movs	r4, #0
 80113de:	461d      	mov	r5, r3
 80113e0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80113e4:	4688      	mov	r8, r1
 80113e6:	4691      	mov	r9, r2
 80113e8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80113ec:	9404      	str	r4, [sp, #16]
 80113ee:	4607      	mov	r7, r0
 80113f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80113f4:	f7ff ffa8 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80113f8:	fb06 9505 	mla	r5, r6, r5, r9
 80113fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011400:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011404:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011408:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801140c:	6878      	ldr	r0, [r7, #4]
 801140e:	9505      	str	r5, [sp, #20]
 8011410:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011414:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011418:	f8ad 601e 	strh.w	r6, [sp, #30]
 801141c:	f8cd 8010 	str.w	r8, [sp, #16]
 8011420:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011424:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011428:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801142c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011430:	6803      	ldr	r3, [r0, #0]
 8011432:	a901      	add	r1, sp, #4
 8011434:	685b      	ldr	r3, [r3, #4]
 8011436:	4798      	blx	r3
 8011438:	b00b      	add	sp, #44	; 0x2c
 801143a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011440 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011440:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011444:	b08a      	sub	sp, #40	; 0x28
 8011446:	4698      	mov	r8, r3
 8011448:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801144c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011450:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8011454:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011458:	2300      	movs	r3, #0
 801145a:	2d0b      	cmp	r5, #11
 801145c:	4606      	mov	r6, r0
 801145e:	9304      	str	r3, [sp, #16]
 8011460:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011464:	d138      	bne.n	80114d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011466:	2380      	movs	r3, #128	; 0x80
 8011468:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801146c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011470:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011474:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011478:	f8ad 301a 	strh.w	r3, [sp, #26]
 801147c:	f88d 0020 	strb.w	r0, [sp, #32]
 8011480:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011484:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011488:	4630      	mov	r0, r6
 801148a:	9203      	str	r2, [sp, #12]
 801148c:	f7ff ff5c 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011490:	2c0b      	cmp	r4, #11
 8011492:	bf98      	it	ls
 8011494:	4b1b      	ldrls	r3, [pc, #108]	; (8011504 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011496:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801149a:	bf98      	it	ls
 801149c:	5d19      	ldrbls	r1, [r3, r4]
 801149e:	f8ad 701e 	strh.w	r7, [sp, #30]
 80114a2:	bf88      	it	hi
 80114a4:	2100      	movhi	r1, #0
 80114a6:	fb02 8307 	mla	r3, r2, r7, r8
 80114aa:	10c9      	asrs	r1, r1, #3
 80114ac:	fb01 0003 	mla	r0, r1, r3, r0
 80114b0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80114b4:	9005      	str	r0, [sp, #20]
 80114b6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80114ba:	6870      	ldr	r0, [r6, #4]
 80114bc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80114c0:	2300      	movs	r3, #0
 80114c2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80114c6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80114ca:	6803      	ldr	r3, [r0, #0]
 80114cc:	a901      	add	r1, sp, #4
 80114ce:	685b      	ldr	r3, [r3, #4]
 80114d0:	4798      	blx	r3
 80114d2:	b00a      	add	sp, #40	; 0x28
 80114d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114d8:	2d02      	cmp	r5, #2
 80114da:	d109      	bne.n	80114f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80114dc:	28ff      	cmp	r0, #255	; 0xff
 80114de:	d105      	bne.n	80114ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80114e0:	f1bc 0f00 	cmp.w	ip, #0
 80114e4:	bf14      	ite	ne
 80114e6:	2340      	movne	r3, #64	; 0x40
 80114e8:	2320      	moveq	r3, #32
 80114ea:	e7bd      	b.n	8011468 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80114ec:	2340      	movs	r3, #64	; 0x40
 80114ee:	e7bb      	b.n	8011468 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80114f0:	28ff      	cmp	r0, #255	; 0xff
 80114f2:	d105      	bne.n	8011500 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80114f4:	f1bc 0f00 	cmp.w	ip, #0
 80114f8:	bf14      	ite	ne
 80114fa:	2304      	movne	r3, #4
 80114fc:	2301      	moveq	r3, #1
 80114fe:	e7b3      	b.n	8011468 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011500:	2304      	movs	r3, #4
 8011502:	e7b1      	b.n	8011468 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011504:	0802eedc 	.word	0x0802eedc

08011508 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801150c:	b08b      	sub	sp, #44	; 0x2c
 801150e:	461d      	mov	r5, r3
 8011510:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011514:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011518:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801151c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011520:	bf14      	ite	ne
 8011522:	2308      	movne	r3, #8
 8011524:	2302      	moveq	r3, #2
 8011526:	2400      	movs	r4, #0
 8011528:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801152c:	4688      	mov	r8, r1
 801152e:	4693      	mov	fp, r2
 8011530:	9404      	str	r4, [sp, #16]
 8011532:	4607      	mov	r7, r0
 8011534:	f7ff ff08 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011538:	2e0b      	cmp	r6, #11
 801153a:	bf98      	it	ls
 801153c:	4b15      	ldrls	r3, [pc, #84]	; (8011594 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801153e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011542:	bf98      	it	ls
 8011544:	5d9c      	ldrbls	r4, [r3, r6]
 8011546:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801154a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801154e:	fb05 b50a 	mla	r5, r5, sl, fp
 8011552:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011556:	f8ad 301a 	strh.w	r3, [sp, #26]
 801155a:	10e4      	asrs	r4, r4, #3
 801155c:	fb04 0405 	mla	r4, r4, r5, r0
 8011560:	2300      	movs	r3, #0
 8011562:	6878      	ldr	r0, [r7, #4]
 8011564:	9405      	str	r4, [sp, #20]
 8011566:	f8ad 301c 	strh.w	r3, [sp, #28]
 801156a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801156e:	f8cd 8010 	str.w	r8, [sp, #16]
 8011572:	f88d 9020 	strb.w	r9, [sp, #32]
 8011576:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801157a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801157e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8011582:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8011586:	6803      	ldr	r3, [r0, #0]
 8011588:	a901      	add	r1, sp, #4
 801158a:	685b      	ldr	r3, [r3, #4]
 801158c:	4798      	blx	r3
 801158e:	b00b      	add	sp, #44	; 0x2c
 8011590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011594:	0802eedc 	.word	0x0802eedc

08011598 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801159c:	461e      	mov	r6, r3
 801159e:	4b0a      	ldr	r3, [pc, #40]	; (80115c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80115a0:	460f      	mov	r7, r1
 80115a2:	881d      	ldrh	r5, [r3, #0]
 80115a4:	4690      	mov	r8, r2
 80115a6:	f7f3 f929 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 80115aa:	6803      	ldr	r3, [r0, #0]
 80115ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115ae:	4798      	blx	r3
 80115b0:	280b      	cmp	r0, #11
 80115b2:	bf9a      	itte	ls
 80115b4:	4b05      	ldrls	r3, [pc, #20]	; (80115cc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80115b6:	5c1c      	ldrbls	r4, [r3, r0]
 80115b8:	2400      	movhi	r4, #0
 80115ba:	fb08 7005 	mla	r0, r8, r5, r7
 80115be:	10e4      	asrs	r4, r4, #3
 80115c0:	fb04 6000 	mla	r0, r4, r0, r6
 80115c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115c8:	20012d9e 	.word	0x20012d9e
 80115cc:	0802eedc 	.word	0x0802eedc

080115d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80115d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80115d2:	b08b      	sub	sp, #44	; 0x2c
 80115d4:	461f      	mov	r7, r3
 80115d6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80115da:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80115de:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80115e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80115e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80115ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 80115ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80115f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115f6:	2500      	movs	r5, #0
 80115f8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80115fc:	f88d 3020 	strb.w	r3, [sp, #32]
 8011600:	4604      	mov	r4, r0
 8011602:	4616      	mov	r6, r2
 8011604:	9504      	str	r5, [sp, #16]
 8011606:	f7ff fe9f 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801160a:	463a      	mov	r2, r7
 801160c:	4631      	mov	r1, r6
 801160e:	4603      	mov	r3, r0
 8011610:	4620      	mov	r0, r4
 8011612:	f7ff ffc1 	bl	8011598 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011616:	4b0e      	ldr	r3, [pc, #56]	; (8011650 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011618:	9005      	str	r0, [sp, #20]
 801161a:	881b      	ldrh	r3, [r3, #0]
 801161c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011620:	f7f3 f8ec 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 8011624:	6803      	ldr	r3, [r0, #0]
 8011626:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011628:	4798      	blx	r3
 801162a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801162c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011630:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011634:	9304      	str	r3, [sp, #16]
 8011636:	6860      	ldr	r0, [r4, #4]
 8011638:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801163c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011640:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011644:	6803      	ldr	r3, [r0, #0]
 8011646:	a901      	add	r1, sp, #4
 8011648:	685b      	ldr	r3, [r3, #4]
 801164a:	4798      	blx	r3
 801164c:	b00b      	add	sp, #44	; 0x2c
 801164e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011650:	20012d9e 	.word	0x20012d9e

08011654 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011654:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011656:	b08d      	sub	sp, #52	; 0x34
 8011658:	466b      	mov	r3, sp
 801165a:	e883 0006 	stmia.w	r3, {r1, r2}
 801165e:	2300      	movs	r3, #0
 8011660:	9306      	str	r3, [sp, #24]
 8011662:	6803      	ldr	r3, [r0, #0]
 8011664:	f8bd 6000 	ldrh.w	r6, [sp]
 8011668:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801166a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801166e:	2501      	movs	r5, #1
 8011670:	9503      	str	r5, [sp, #12]
 8011672:	4604      	mov	r4, r0
 8011674:	4798      	blx	r3
 8011676:	463a      	mov	r2, r7
 8011678:	4631      	mov	r1, r6
 801167a:	4603      	mov	r3, r0
 801167c:	4620      	mov	r0, r4
 801167e:	f7ff ff8b 	bl	8011598 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011682:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011684:	9307      	str	r3, [sp, #28]
 8011686:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801168a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801168e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011692:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011696:	4b0f      	ldr	r3, [pc, #60]	; (80116d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011698:	9004      	str	r0, [sp, #16]
 801169a:	881b      	ldrh	r3, [r3, #0]
 801169c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80116a0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80116a4:	f7f3 f8aa 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 80116a8:	6803      	ldr	r3, [r0, #0]
 80116aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116ac:	4798      	blx	r3
 80116ae:	23ff      	movs	r3, #255	; 0xff
 80116b0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80116b4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80116b8:	6860      	ldr	r0, [r4, #4]
 80116ba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80116be:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80116c2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80116c6:	6803      	ldr	r3, [r0, #0]
 80116c8:	a903      	add	r1, sp, #12
 80116ca:	685b      	ldr	r3, [r3, #4]
 80116cc:	4798      	blx	r3
 80116ce:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80116d0:	b00d      	add	sp, #52	; 0x34
 80116d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80116d4:	20012d9e 	.word	0x20012d9e

080116d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80116d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116dc:	b08c      	sub	sp, #48	; 0x30
 80116de:	461e      	mov	r6, r3
 80116e0:	466d      	mov	r5, sp
 80116e2:	2300      	movs	r3, #0
 80116e4:	e885 0006 	stmia.w	r5, {r1, r2}
 80116e8:	9306      	str	r3, [sp, #24]
 80116ea:	6803      	ldr	r3, [r0, #0]
 80116ec:	f8bd 7000 	ldrh.w	r7, [sp]
 80116f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116f2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80116f6:	2501      	movs	r5, #1
 80116f8:	9503      	str	r5, [sp, #12]
 80116fa:	4604      	mov	r4, r0
 80116fc:	4798      	blx	r3
 80116fe:	4642      	mov	r2, r8
 8011700:	4639      	mov	r1, r7
 8011702:	4603      	mov	r3, r0
 8011704:	4620      	mov	r0, r4
 8011706:	f7ff ff47 	bl	8011598 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801170a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801170e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011712:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011716:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801171a:	4b11      	ldr	r3, [pc, #68]	; (8011760 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801171c:	9004      	str	r0, [sp, #16]
 801171e:	881b      	ldrh	r3, [r3, #0]
 8011720:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011724:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011726:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801172a:	9607      	str	r6, [sp, #28]
 801172c:	f7f3 f866 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 8011730:	6803      	ldr	r3, [r0, #0]
 8011732:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011734:	4798      	blx	r3
 8011736:	23ff      	movs	r3, #255	; 0xff
 8011738:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801173c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011740:	6860      	ldr	r0, [r4, #4]
 8011742:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011746:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801174a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801174e:	6803      	ldr	r3, [r0, #0]
 8011750:	a903      	add	r1, sp, #12
 8011752:	685b      	ldr	r3, [r3, #4]
 8011754:	4798      	blx	r3
 8011756:	4630      	mov	r0, r6
 8011758:	b00c      	add	sp, #48	; 0x30
 801175a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801175e:	bf00      	nop
 8011760:	20012d9e 	.word	0x20012d9e

08011764 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011764:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011766:	b085      	sub	sp, #20
 8011768:	ac02      	add	r4, sp, #8
 801176a:	e884 0006 	stmia.w	r4, {r1, r2}
 801176e:	4605      	mov	r5, r0
 8011770:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011774:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011778:	f7ff fde6 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801177c:	463a      	mov	r2, r7
 801177e:	4603      	mov	r3, r0
 8011780:	4631      	mov	r1, r6
 8011782:	4628      	mov	r0, r5
 8011784:	f7ff ff08 	bl	8011598 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011788:	4a05      	ldr	r2, [pc, #20]	; (80117a0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801178a:	682b      	ldr	r3, [r5, #0]
 801178c:	8812      	ldrh	r2, [r2, #0]
 801178e:	9200      	str	r2, [sp, #0]
 8011790:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011792:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011796:	4603      	mov	r3, r0
 8011798:	4628      	mov	r0, r5
 801179a:	47b0      	blx	r6
 801179c:	b005      	add	sp, #20
 801179e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117a0:	20012d9e 	.word	0x20012d9e

080117a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80117a4:	b570      	push	{r4, r5, r6, lr}
 80117a6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80117aa:	4604      	mov	r4, r0
 80117ac:	b19b      	cbz	r3, 80117d6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80117ae:	2002      	movs	r0, #2
 80117b0:	f7f0 fede 	bl	8002570 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80117b4:	2300      	movs	r3, #0
 80117b6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80117ba:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80117be:	6823      	ldr	r3, [r4, #0]
 80117c0:	4620      	mov	r0, r4
 80117c2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80117c6:	f7ff fdbf 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80117ca:	462b      	mov	r3, r5
 80117cc:	4601      	mov	r1, r0
 80117ce:	4620      	mov	r0, r4
 80117d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117d4:	4718      	bx	r3
 80117d6:	bd70      	pop	{r4, r5, r6, pc}

080117d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80117d8:	b538      	push	{r3, r4, r5, lr}
 80117da:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80117de:	428b      	cmp	r3, r1
 80117e0:	4604      	mov	r4, r0
 80117e2:	460d      	mov	r5, r1
 80117e4:	d006      	beq.n	80117f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80117e6:	6803      	ldr	r3, [r0, #0]
 80117e8:	b929      	cbnz	r1, 80117f6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80117ea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80117ee:	4798      	blx	r3
 80117f0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80117f4:	bd38      	pop	{r3, r4, r5, pc}
 80117f6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80117fa:	e7f8      	b.n	80117ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080117fc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80117fc:	b510      	push	{r4, lr}
 80117fe:	4b0d      	ldr	r3, [pc, #52]	; (8011834 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011800:	781b      	ldrb	r3, [r3, #0]
 8011802:	4604      	mov	r4, r0
 8011804:	b95b      	cbnz	r3, 801181e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011806:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801180a:	2b02      	cmp	r3, #2
 801180c:	d007      	beq.n	801181e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801180e:	6840      	ldr	r0, [r0, #4]
 8011810:	f000 f92c 	bl	8011a6c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011814:	b118      	cbz	r0, 801181e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011816:	6862      	ldr	r2, [r4, #4]
 8011818:	7a53      	ldrb	r3, [r2, #9]
 801181a:	2b00      	cmp	r3, #0
 801181c:	d0fc      	beq.n	8011818 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801181e:	f7f0 ffdf 	bl	80027e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011822:	4620      	mov	r0, r4
 8011824:	2100      	movs	r1, #0
 8011826:	f7ff ffd7 	bl	80117d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801182a:	4620      	mov	r0, r4
 801182c:	f7ff fd8c 	bl	8011348 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011830:	bd10      	pop	{r4, pc}
 8011832:	bf00      	nop
 8011834:	20012da2 	.word	0x20012da2

08011838 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011838:	b570      	push	{r4, r5, r6, lr}
 801183a:	4604      	mov	r4, r0
 801183c:	6803      	ldr	r3, [r0, #0]
 801183e:	b919      	cbnz	r1, 8011848 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011840:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011842:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011846:	4718      	bx	r3
 8011848:	2200      	movs	r2, #0
 801184a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801184e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8011852:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011854:	4798      	blx	r3
 8011856:	6863      	ldr	r3, [r4, #4]
 8011858:	2101      	movs	r1, #1
 801185a:	4605      	mov	r5, r0
 801185c:	7299      	strb	r1, [r3, #10]
 801185e:	4620      	mov	r0, r4
 8011860:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011864:	f7ff ffb8 	bl	80117d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011868:	4628      	mov	r0, r5
 801186a:	bd70      	pop	{r4, r5, r6, pc}

0801186c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801186c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011870:	1a13      	subs	r3, r2, r0
 8011872:	4258      	negs	r0, r3
 8011874:	4158      	adcs	r0, r3
 8011876:	4770      	bx	lr

08011878 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011878:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801187c:	1a9b      	subs	r3, r3, r2
 801187e:	2b00      	cmp	r3, #0
 8011880:	bfdc      	itt	le
 8011882:	6882      	ldrle	r2, [r0, #8]
 8011884:	189b      	addle	r3, r3, r2
 8011886:	2b01      	cmp	r3, #1
 8011888:	bfcc      	ite	gt
 801188a:	2000      	movgt	r0, #0
 801188c:	2001      	movle	r0, #1
 801188e:	4770      	bx	lr

08011890 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011890:	6902      	ldr	r2, [r0, #16]
 8011892:	6843      	ldr	r3, [r0, #4]
 8011894:	2024      	movs	r0, #36	; 0x24
 8011896:	fb00 3002 	mla	r0, r0, r2, r3
 801189a:	4770      	bx	lr

0801189c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801189c:	6803      	ldr	r3, [r0, #0]
 801189e:	691b      	ldr	r3, [r3, #16]
 80118a0:	4718      	bx	r3

080118a2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80118a2:	b570      	push	{r4, r5, r6, lr}
 80118a4:	2301      	movs	r3, #1
 80118a6:	7203      	strb	r3, [r0, #8]
 80118a8:	4604      	mov	r4, r0
 80118aa:	6840      	ldr	r0, [r0, #4]
 80118ac:	6803      	ldr	r3, [r0, #0]
 80118ae:	699b      	ldr	r3, [r3, #24]
 80118b0:	4798      	blx	r3
 80118b2:	6803      	ldr	r3, [r0, #0]
 80118b4:	2b40      	cmp	r3, #64	; 0x40
 80118b6:	4605      	mov	r5, r0
 80118b8:	d00c      	beq.n	80118d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80118ba:	d810      	bhi.n	80118de <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80118bc:	2b04      	cmp	r3, #4
 80118be:	d01d      	beq.n	80118fc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80118c0:	d804      	bhi.n	80118cc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80118c2:	2b01      	cmp	r3, #1
 80118c4:	d006      	beq.n	80118d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80118c6:	2b02      	cmp	r3, #2
 80118c8:	d02c      	beq.n	8011924 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80118ca:	bd70      	pop	{r4, r5, r6, pc}
 80118cc:	2b08      	cmp	r3, #8
 80118ce:	d01d      	beq.n	801190c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80118d0:	2b20      	cmp	r3, #32
 80118d2:	d1fa      	bne.n	80118ca <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80118d4:	6823      	ldr	r3, [r4, #0]
 80118d6:	4620      	mov	r0, r4
 80118d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80118da:	4798      	blx	r3
 80118dc:	e013      	b.n	8011906 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80118de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80118e2:	d0f7      	beq.n	80118d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80118e4:	d804      	bhi.n	80118f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80118e6:	2b80      	cmp	r3, #128	; 0x80
 80118e8:	d0f4      	beq.n	80118d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80118ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80118ee:	e7f0      	b.n	80118d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80118f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80118f4:	d0ee      	beq.n	80118d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80118f6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80118fa:	e7e5      	b.n	80118c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80118fc:	6823      	ldr	r3, [r4, #0]
 80118fe:	7f01      	ldrb	r1, [r0, #28]
 8011900:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011902:	4620      	mov	r0, r4
 8011904:	4798      	blx	r3
 8011906:	6823      	ldr	r3, [r4, #0]
 8011908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801190a:	e006      	b.n	801191a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801190c:	6823      	ldr	r3, [r4, #0]
 801190e:	7f01      	ldrb	r1, [r0, #28]
 8011910:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011912:	4620      	mov	r0, r4
 8011914:	4798      	blx	r3
 8011916:	6823      	ldr	r3, [r4, #0]
 8011918:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801191a:	4629      	mov	r1, r5
 801191c:	4620      	mov	r0, r4
 801191e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011922:	4718      	bx	r3
 8011924:	6823      	ldr	r3, [r4, #0]
 8011926:	4620      	mov	r0, r4
 8011928:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801192a:	4798      	blx	r3
 801192c:	e7f3      	b.n	8011916 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801192e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801192e:	4770      	bx	lr

08011930 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011930:	4770      	bx	lr

08011932 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011932:	4770      	bx	lr

08011934 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011934:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011938:	1ad2      	subs	r2, r2, r3
 801193a:	2a00      	cmp	r2, #0
 801193c:	b510      	push	{r4, lr}
 801193e:	bfdc      	itt	le
 8011940:	6884      	ldrle	r4, [r0, #8]
 8011942:	1912      	addle	r2, r2, r4
 8011944:	2a01      	cmp	r2, #1
 8011946:	dd16      	ble.n	8011976 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011948:	6842      	ldr	r2, [r0, #4]
 801194a:	2424      	movs	r4, #36	; 0x24
 801194c:	fb04 2303 	mla	r3, r4, r3, r2
 8011950:	f101 0220 	add.w	r2, r1, #32
 8011954:	f851 4b04 	ldr.w	r4, [r1], #4
 8011958:	f843 4b04 	str.w	r4, [r3], #4
 801195c:	4291      	cmp	r1, r2
 801195e:	d1f9      	bne.n	8011954 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011960:	780a      	ldrb	r2, [r1, #0]
 8011962:	701a      	strb	r2, [r3, #0]
 8011964:	68c3      	ldr	r3, [r0, #12]
 8011966:	6882      	ldr	r2, [r0, #8]
 8011968:	f3bf 8f5b 	dmb	ish
 801196c:	3301      	adds	r3, #1
 801196e:	429a      	cmp	r2, r3
 8011970:	bfd8      	it	le
 8011972:	1a9b      	suble	r3, r3, r2
 8011974:	60c3      	str	r3, [r0, #12]
 8011976:	bd10      	pop	{r4, pc}

08011978 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011978:	6903      	ldr	r3, [r0, #16]
 801197a:	6882      	ldr	r2, [r0, #8]
 801197c:	f3bf 8f5b 	dmb	ish
 8011980:	3301      	adds	r3, #1
 8011982:	429a      	cmp	r2, r3
 8011984:	bfd8      	it	le
 8011986:	1a9b      	suble	r3, r3, r2
 8011988:	6103      	str	r3, [r0, #16]
 801198a:	4770      	bx	lr

0801198c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801198c:	b570      	push	{r4, r5, r6, lr}
 801198e:	4604      	mov	r4, r0
 8011990:	460e      	mov	r6, r1
 8011992:	6860      	ldr	r0, [r4, #4]
 8011994:	6803      	ldr	r3, [r0, #0]
 8011996:	685b      	ldr	r3, [r3, #4]
 8011998:	4798      	blx	r3
 801199a:	2800      	cmp	r0, #0
 801199c:	d1f9      	bne.n	8011992 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801199e:	4d0d      	ldr	r5, [pc, #52]	; (80119d4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80119a0:	6828      	ldr	r0, [r5, #0]
 80119a2:	6803      	ldr	r3, [r0, #0]
 80119a4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80119a6:	4798      	blx	r3
 80119a8:	f7f0 ff28 	bl	80027fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80119ac:	6828      	ldr	r0, [r5, #0]
 80119ae:	2101      	movs	r1, #1
 80119b0:	f7ff ff12 	bl	80117d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80119b4:	6860      	ldr	r0, [r4, #4]
 80119b6:	6803      	ldr	r3, [r0, #0]
 80119b8:	4631      	mov	r1, r6
 80119ba:	689b      	ldr	r3, [r3, #8]
 80119bc:	4798      	blx	r3
 80119be:	6823      	ldr	r3, [r4, #0]
 80119c0:	4620      	mov	r0, r4
 80119c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80119c4:	4798      	blx	r3
 80119c6:	6828      	ldr	r0, [r5, #0]
 80119c8:	6803      	ldr	r3, [r0, #0]
 80119ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119ce:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80119d0:	4718      	bx	r3
 80119d2:	bf00      	nop
 80119d4:	20012da4 	.word	0x20012da4

080119d8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80119d8:	b508      	push	{r3, lr}
 80119da:	f7f0 ff01 	bl	80027e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80119de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80119e2:	f7f0 bf05 	b.w	80027f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080119e6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80119e6:	b510      	push	{r4, lr}
 80119e8:	2114      	movs	r1, #20
 80119ea:	4604      	mov	r4, r0
 80119ec:	f018 fa67 	bl	8029ebe <_ZdlPvj>
 80119f0:	4620      	mov	r0, r4
 80119f2:	bd10      	pop	{r4, pc}

080119f4 <_ZN8touchgfx13DMA_Interface5startEv>:
 80119f4:	b510      	push	{r4, lr}
 80119f6:	4604      	mov	r4, r0
 80119f8:	6840      	ldr	r0, [r0, #4]
 80119fa:	6803      	ldr	r3, [r0, #0]
 80119fc:	681b      	ldr	r3, [r3, #0]
 80119fe:	4798      	blx	r3
 8011a00:	b948      	cbnz	r0, 8011a16 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a02:	7a63      	ldrb	r3, [r4, #9]
 8011a04:	b13b      	cbz	r3, 8011a16 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a06:	7a23      	ldrb	r3, [r4, #8]
 8011a08:	b92b      	cbnz	r3, 8011a16 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a0a:	6823      	ldr	r3, [r4, #0]
 8011a0c:	4620      	mov	r0, r4
 8011a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a14:	4718      	bx	r3
 8011a16:	bd10      	pop	{r4, pc}

08011a18 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011a18:	b570      	push	{r4, r5, r6, lr}
 8011a1a:	4604      	mov	r4, r0
 8011a1c:	6840      	ldr	r0, [r0, #4]
 8011a1e:	6803      	ldr	r3, [r0, #0]
 8011a20:	681b      	ldr	r3, [r3, #0]
 8011a22:	4798      	blx	r3
 8011a24:	4605      	mov	r5, r0
 8011a26:	b930      	cbnz	r0, 8011a36 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011a28:	7a23      	ldrb	r3, [r4, #8]
 8011a2a:	b123      	cbz	r3, 8011a36 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011a2c:	6860      	ldr	r0, [r4, #4]
 8011a2e:	6803      	ldr	r3, [r0, #0]
 8011a30:	695b      	ldr	r3, [r3, #20]
 8011a32:	4798      	blx	r3
 8011a34:	7225      	strb	r5, [r4, #8]
 8011a36:	6860      	ldr	r0, [r4, #4]
 8011a38:	6803      	ldr	r3, [r0, #0]
 8011a3a:	681b      	ldr	r3, [r3, #0]
 8011a3c:	4798      	blx	r3
 8011a3e:	b928      	cbnz	r0, 8011a4c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011a40:	6823      	ldr	r3, [r4, #0]
 8011a42:	4620      	mov	r0, r4
 8011a44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a4a:	4718      	bx	r3
 8011a4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a50:	f7f0 bedc 	b.w	800280c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011a54 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011a54:	b510      	push	{r4, lr}
 8011a56:	4c04      	ldr	r4, [pc, #16]	; (8011a68 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011a58:	6082      	str	r2, [r0, #8]
 8011a5a:	2200      	movs	r2, #0
 8011a5c:	e9c0 4100 	strd	r4, r1, [r0]
 8011a60:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011a64:	bd10      	pop	{r4, pc}
 8011a66:	bf00      	nop
 8011a68:	0802eef0 	.word	0x0802eef0

08011a6c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011a6c:	6840      	ldr	r0, [r0, #4]
 8011a6e:	6803      	ldr	r3, [r0, #0]
 8011a70:	681b      	ldr	r3, [r3, #0]
 8011a72:	4718      	bx	r3

08011a74 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011a74:	4b06      	ldr	r3, [pc, #24]	; (8011a90 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011a76:	60c1      	str	r1, [r0, #12]
 8011a78:	094a      	lsrs	r2, r1, #5
 8011a7a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011a7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011a82:	4313      	orrs	r3, r2
 8011a84:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011a88:	4319      	orrs	r1, r3
 8011a8a:	8201      	strh	r1, [r0, #16]
 8011a8c:	4770      	bx	lr
 8011a8e:	bf00      	nop
 8011a90:	fffff800 	.word	0xfffff800

08011a94 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011a94:	f1a0 0008 	sub.w	r0, r0, #8
 8011a98:	e7ec      	b.n	8011a74 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011a9a:	bf00      	nop

08011a9c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011a9c:	b508      	push	{r3, lr}
 8011a9e:	4b05      	ldr	r3, [pc, #20]	; (8011ab4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011aa0:	6818      	ldr	r0, [r3, #0]
 8011aa2:	6803      	ldr	r3, [r0, #0]
 8011aa4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011aa8:	4798      	blx	r3
 8011aaa:	1e43      	subs	r3, r0, #1
 8011aac:	4258      	negs	r0, r3
 8011aae:	4158      	adcs	r0, r3
 8011ab0:	bd08      	pop	{r3, pc}
 8011ab2:	bf00      	nop
 8011ab4:	20012da4 	.word	0x20012da4

08011ab8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011ab8:	4770      	bx	lr

08011aba <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011aba:	3808      	subs	r0, #8
 8011abc:	4770      	bx	lr

08011abe <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011abe:	b430      	push	{r4, r5}
 8011ac0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011ac4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011ac8:	8a02      	ldrh	r2, [r0, #16]
 8011aca:	9202      	str	r2, [sp, #8]
 8011acc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011ad0:	68c2      	ldr	r2, [r0, #12]
 8011ad2:	4629      	mov	r1, r5
 8011ad4:	4620      	mov	r0, r4
 8011ad6:	bc30      	pop	{r4, r5}
 8011ad8:	f7f1 b95a 	b.w	8002d90 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011adc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011adc:	f7f1 b956 	b.w	8002d8c <_ZN8touchgfx5paint8tearDownEv>

08011ae0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011ae0:	b510      	push	{r4, lr}
 8011ae2:	2114      	movs	r1, #20
 8011ae4:	4604      	mov	r4, r0
 8011ae6:	f018 f9ea 	bl	8029ebe <_ZdlPvj>
 8011aea:	4620      	mov	r0, r4
 8011aec:	bd10      	pop	{r4, pc}

08011aee <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011aee:	f1a0 0008 	sub.w	r0, r0, #8
 8011af2:	e7f5      	b.n	8011ae0 <_ZN8touchgfx13PainterRGB565D0Ev>

08011af4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011af4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011af6:	6803      	ldr	r3, [r0, #0]
 8011af8:	460d      	mov	r5, r1
 8011afa:	4604      	mov	r4, r0
 8011afc:	4601      	mov	r1, r0
 8011afe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011b00:	a802      	add	r0, sp, #8
 8011b02:	4798      	blx	r3
 8011b04:	6828      	ldr	r0, [r5, #0]
 8011b06:	6869      	ldr	r1, [r5, #4]
 8011b08:	466b      	mov	r3, sp
 8011b0a:	c303      	stmia	r3!, {r0, r1}
 8011b0c:	4668      	mov	r0, sp
 8011b0e:	4619      	mov	r1, r3
 8011b10:	f7fe ffa4 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8011b14:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011b16:	b188      	cbz	r0, 8011b3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011b18:	6803      	ldr	r3, [r0, #0]
 8011b1a:	1d21      	adds	r1, r4, #4
 8011b1c:	68db      	ldr	r3, [r3, #12]
 8011b1e:	4798      	blx	r3
 8011b20:	b160      	cbz	r0, 8011b3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011b22:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011b26:	2b00      	cmp	r3, #0
 8011b28:	dd08      	ble.n	8011b3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011b2a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011b2e:	2d00      	cmp	r5, #0
 8011b30:	dd04      	ble.n	8011b3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011b32:	4a2b      	ldr	r2, [pc, #172]	; (8011be0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011b34:	7812      	ldrb	r2, [r2, #0]
 8011b36:	b11a      	cbz	r2, 8011b40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011b38:	2a01      	cmp	r2, #1
 8011b3a:	d029      	beq.n	8011b90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011b3c:	b004      	add	sp, #16
 8011b3e:	bd70      	pop	{r4, r5, r6, pc}
 8011b40:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011b44:	441d      	add	r5, r3
 8011b46:	b2ad      	uxth	r5, r5
 8011b48:	b22e      	sxth	r6, r5
 8011b4a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011b4e:	42b3      	cmp	r3, r6
 8011b50:	daf4      	bge.n	8011b3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011b52:	6823      	ldr	r3, [r4, #0]
 8011b54:	4669      	mov	r1, sp
 8011b56:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011b58:	4620      	mov	r0, r4
 8011b5a:	4798      	blx	r3
 8011b5c:	b940      	cbnz	r0, 8011b70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011b5e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011b62:	2b01      	cmp	r3, #1
 8011b64:	d004      	beq.n	8011b70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011b66:	3301      	adds	r3, #1
 8011b68:	105b      	asrs	r3, r3, #1
 8011b6a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011b6e:	e7f0      	b.n	8011b52 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011b70:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011b74:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011b78:	4413      	add	r3, r2
 8011b7a:	b29b      	uxth	r3, r3
 8011b7c:	441a      	add	r2, r3
 8011b7e:	b212      	sxth	r2, r2
 8011b80:	4296      	cmp	r6, r2
 8011b82:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011b86:	dae0      	bge.n	8011b4a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011b88:	1aeb      	subs	r3, r5, r3
 8011b8a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011b8e:	e7dc      	b.n	8011b4a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011b90:	f8bd 5000 	ldrh.w	r5, [sp]
 8011b94:	441d      	add	r5, r3
 8011b96:	b2ad      	uxth	r5, r5
 8011b98:	b22e      	sxth	r6, r5
 8011b9a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011b9e:	42b3      	cmp	r3, r6
 8011ba0:	dacc      	bge.n	8011b3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011ba2:	6823      	ldr	r3, [r4, #0]
 8011ba4:	4669      	mov	r1, sp
 8011ba6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011ba8:	4620      	mov	r0, r4
 8011baa:	4798      	blx	r3
 8011bac:	b940      	cbnz	r0, 8011bc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011bae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011bb2:	2b01      	cmp	r3, #1
 8011bb4:	d004      	beq.n	8011bc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011bb6:	3301      	adds	r3, #1
 8011bb8:	105b      	asrs	r3, r3, #1
 8011bba:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011bbe:	e7f0      	b.n	8011ba2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011bc0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011bc4:	f8bd 3000 	ldrh.w	r3, [sp]
 8011bc8:	4413      	add	r3, r2
 8011bca:	b29b      	uxth	r3, r3
 8011bcc:	441a      	add	r2, r3
 8011bce:	b212      	sxth	r2, r2
 8011bd0:	4296      	cmp	r6, r2
 8011bd2:	f8ad 3000 	strh.w	r3, [sp]
 8011bd6:	dae0      	bge.n	8011b9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011bd8:	1aeb      	subs	r3, r5, r3
 8011bda:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011bde:	e7dc      	b.n	8011b9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011be0:	20012d9c 	.word	0x20012d9c

08011be4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011be4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011be6:	6803      	ldr	r3, [r0, #0]
 8011be8:	4604      	mov	r4, r0
 8011bea:	4601      	mov	r1, r0
 8011bec:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011bee:	4668      	mov	r0, sp
 8011bf0:	4798      	blx	r3
 8011bf2:	2100      	movs	r1, #0
 8011bf4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011bf8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011bfc:	9102      	str	r1, [sp, #8]
 8011bfe:	4668      	mov	r0, sp
 8011c00:	a902      	add	r1, sp, #8
 8011c02:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011c06:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011c0a:	f7fe ff27 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8011c0e:	6823      	ldr	r3, [r4, #0]
 8011c10:	4669      	mov	r1, sp
 8011c12:	691b      	ldr	r3, [r3, #16]
 8011c14:	4620      	mov	r0, r4
 8011c16:	4798      	blx	r3
 8011c18:	b004      	add	sp, #16
 8011c1a:	bd10      	pop	{r4, pc}

08011c1c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011c1c:	2101      	movs	r1, #1
 8011c1e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011c22:	490b      	ldr	r1, [pc, #44]	; (8011c50 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011c24:	6001      	str	r1, [r0, #0]
 8011c26:	2200      	movs	r2, #0
 8011c28:	21ff      	movs	r1, #255	; 0xff
 8011c2a:	8082      	strh	r2, [r0, #4]
 8011c2c:	80c2      	strh	r2, [r0, #6]
 8011c2e:	8102      	strh	r2, [r0, #8]
 8011c30:	8142      	strh	r2, [r0, #10]
 8011c32:	8182      	strh	r2, [r0, #12]
 8011c34:	81c2      	strh	r2, [r0, #14]
 8011c36:	8202      	strh	r2, [r0, #16]
 8011c38:	8242      	strh	r2, [r0, #18]
 8011c3a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011c3e:	61c2      	str	r2, [r0, #28]
 8011c40:	8402      	strh	r2, [r0, #32]
 8011c42:	8442      	strh	r2, [r0, #34]	; 0x22
 8011c44:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011c48:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011c4c:	6282      	str	r2, [r0, #40]	; 0x28
 8011c4e:	4770      	bx	lr
 8011c50:	0802ef4c 	.word	0x0802ef4c

08011c54 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011c54:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011c58:	4602      	mov	r2, r0
 8011c5a:	cb03      	ldmia	r3!, {r0, r1}
 8011c5c:	6010      	str	r0, [r2, #0]
 8011c5e:	6051      	str	r1, [r2, #4]
 8011c60:	4610      	mov	r0, r2
 8011c62:	4770      	bx	lr

08011c64 <_ZN8touchgfx4LineD1Ev>:
 8011c64:	4770      	bx	lr

08011c66 <_ZN8touchgfx4LineD0Ev>:
 8011c66:	b510      	push	{r4, lr}
 8011c68:	2170      	movs	r1, #112	; 0x70
 8011c6a:	4604      	mov	r4, r0
 8011c6c:	f018 f927 	bl	8029ebe <_ZdlPvj>
 8011c70:	4620      	mov	r0, r4
 8011c72:	bd10      	pop	{r4, pc}

08011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011c74:	b507      	push	{r0, r1, r2, lr}
 8011c76:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011c7a:	ab01      	add	r3, sp, #4
 8011c7c:	6809      	ldr	r1, [r1, #0]
 8011c7e:	6800      	ldr	r0, [r0, #0]
 8011c80:	f005 fab4 	bl	80171ec <_ZN8touchgfx6muldivElllRl>
 8011c84:	b003      	add	sp, #12
 8011c86:	f85d fb04 	ldr.w	pc, [sp], #4

08011c8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011c8a:	6800      	ldr	r0, [r0, #0]
 8011c8c:	2800      	cmp	r0, #0
 8011c8e:	bfb9      	ittee	lt
 8011c90:	2320      	movlt	r3, #32
 8011c92:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011c96:	301f      	addge	r0, #31
 8011c98:	1140      	asrge	r0, r0, #5
 8011c9a:	4770      	bx	lr

08011c9c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ca0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011ca4:	b089      	sub	sp, #36	; 0x24
 8011ca6:	4604      	mov	r4, r0
 8011ca8:	b353      	cbz	r3, 8011d00 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011caa:	6803      	ldr	r3, [r0, #0]
 8011cac:	4601      	mov	r1, r0
 8011cae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011cb0:	a802      	add	r0, sp, #8
 8011cb2:	4798      	blx	r3
 8011cb4:	2220      	movs	r2, #32
 8011cb6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011cba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011cbc:	fb9a f0f2 	sdiv	r0, sl, r2
 8011cc0:	fb91 f5f2 	sdiv	r5, r1, r2
 8011cc4:	1b40      	subs	r0, r0, r5
 8011cc6:	2800      	cmp	r0, #0
 8011cc8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011cca:	fb93 f6f2 	sdiv	r6, r3, r2
 8011cce:	bfb8      	it	lt
 8011cd0:	4240      	neglt	r0, r0
 8011cd2:	0076      	lsls	r6, r6, #1
 8011cd4:	4286      	cmp	r6, r0
 8011cd6:	f8d4 b000 	ldr.w	fp, [r4]
 8011cda:	dc0c      	bgt.n	8011cf6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011cdc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011cde:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011ce2:	fb95 f0f2 	sdiv	r0, r5, r2
 8011ce6:	fb98 f7f2 	sdiv	r7, r8, r2
 8011cea:	1bc0      	subs	r0, r0, r7
 8011cec:	2800      	cmp	r0, #0
 8011cee:	bfb8      	it	lt
 8011cf0:	4240      	neglt	r0, r0
 8011cf2:	4286      	cmp	r6, r0
 8011cf4:	dd07      	ble.n	8011d06 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011cf6:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011cfa:	a902      	add	r1, sp, #8
 8011cfc:	4620      	mov	r0, r4
 8011cfe:	4798      	blx	r3
 8011d00:	b009      	add	sp, #36	; 0x24
 8011d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d06:	3301      	adds	r3, #1
 8011d08:	2002      	movs	r0, #2
 8011d0a:	f10d 0920 	add.w	r9, sp, #32
 8011d0e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011d12:	4103      	asrs	r3, r0
 8011d14:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011d18:	eb01 060a 	add.w	r6, r1, sl
 8011d1c:	eb08 0705 	add.w	r7, r8, r5
 8011d20:	fb96 f6f0 	sdiv	r6, r6, r0
 8011d24:	fb97 f7f0 	sdiv	r7, r7, r0
 8011d28:	4648      	mov	r0, r9
 8011d2a:	9101      	str	r1, [sp, #4]
 8011d2c:	b236      	sxth	r6, r6
 8011d2e:	b23f      	sxth	r7, r7
 8011d30:	fb96 f6f2 	sdiv	r6, r6, r2
 8011d34:	fb97 f7f2 	sdiv	r7, r7, r2
 8011d38:	f7ff ffa7 	bl	8011c8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011d3c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011d40:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011d44:	9901      	ldr	r1, [sp, #4]
 8011d46:	4293      	cmp	r3, r2
 8011d48:	fa1f fe87 	uxth.w	lr, r7
 8011d4c:	fa1f fc86 	uxth.w	ip, r6
 8011d50:	eba1 0a0a 	sub.w	sl, r1, sl
 8011d54:	b280      	uxth	r0, r0
 8011d56:	da54      	bge.n	8011e02 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011d58:	ebac 0100 	sub.w	r1, ip, r0
 8011d5c:	b289      	uxth	r1, r1
 8011d5e:	4460      	add	r0, ip
 8011d60:	f1ba 0f00 	cmp.w	sl, #0
 8011d64:	b20e      	sxth	r6, r1
 8011d66:	b280      	uxth	r0, r0
 8011d68:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011d6c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011d70:	da29      	bge.n	8011dc6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011d72:	eba8 0505 	sub.w	r5, r8, r5
 8011d76:	2d00      	cmp	r5, #0
 8011d78:	da2a      	bge.n	8011dd0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011d7a:	fa1f f88a 	uxth.w	r8, sl
 8011d7e:	eba0 0008 	sub.w	r0, r0, r8
 8011d82:	fa1f f58c 	uxth.w	r5, ip
 8011d86:	4443      	add	r3, r8
 8011d88:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011d8c:	1a59      	subs	r1, r3, r1
 8011d8e:	ebae 0005 	sub.w	r0, lr, r5
 8011d92:	f8ad a010 	strh.w	sl, [sp, #16]
 8011d96:	f8ad c012 	strh.w	ip, [sp, #18]
 8011d9a:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011d9e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011da2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011da6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011daa:	442a      	add	r2, r5
 8011dac:	eba2 0e0e 	sub.w	lr, r2, lr
 8011db0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011db4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011db8:	a904      	add	r1, sp, #16
 8011dba:	4620      	mov	r0, r4
 8011dbc:	4798      	blx	r3
 8011dbe:	6823      	ldr	r3, [r4, #0]
 8011dc0:	4649      	mov	r1, r9
 8011dc2:	691b      	ldr	r3, [r3, #16]
 8011dc4:	e79a      	b.n	8011cfc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011dc6:	d003      	beq.n	8011dd0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011dc8:	eba8 0505 	sub.w	r5, r8, r5
 8011dcc:	2d00      	cmp	r5, #0
 8011dce:	dcd4      	bgt.n	8011d7a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011dd0:	fa1f f88a 	uxth.w	r8, sl
 8011dd4:	4443      	add	r3, r8
 8011dd6:	fa1f f58c 	uxth.w	r5, ip
 8011dda:	1a59      	subs	r1, r3, r1
 8011ddc:	eba0 0008 	sub.w	r0, r0, r8
 8011de0:	ebae 0305 	sub.w	r3, lr, r5
 8011de4:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011de8:	f8ad c012 	strh.w	ip, [sp, #18]
 8011dec:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011df0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011df4:	f8ad a018 	strh.w	sl, [sp, #24]
 8011df8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011dfc:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011e00:	e7d3      	b.n	8011daa <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011e02:	ebae 0100 	sub.w	r1, lr, r0
 8011e06:	b289      	uxth	r1, r1
 8011e08:	4470      	add	r0, lr
 8011e0a:	f1ba 0f00 	cmp.w	sl, #0
 8011e0e:	b20f      	sxth	r7, r1
 8011e10:	b280      	uxth	r0, r0
 8011e12:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011e16:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011e1a:	da20      	bge.n	8011e5e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011e1c:	eba8 0505 	sub.w	r5, r8, r5
 8011e20:	2d00      	cmp	r5, #0
 8011e22:	da21      	bge.n	8011e68 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011e24:	fa1f f88e 	uxth.w	r8, lr
 8011e28:	fa1f f58a 	uxth.w	r5, sl
 8011e2c:	4443      	add	r3, r8
 8011e2e:	442a      	add	r2, r5
 8011e30:	f8ad e010 	strh.w	lr, [sp, #16]
 8011e34:	1b40      	subs	r0, r0, r5
 8011e36:	ebac 0e08 	sub.w	lr, ip, r8
 8011e3a:	1a51      	subs	r1, r2, r1
 8011e3c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011e40:	f8ad a012 	strh.w	sl, [sp, #18]
 8011e44:	f8ad e014 	strh.w	lr, [sp, #20]
 8011e48:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011e4c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011e50:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011e54:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011e58:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011e5c:	e7aa      	b.n	8011db4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011e5e:	d003      	beq.n	8011e68 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011e60:	eba8 0505 	sub.w	r5, r8, r5
 8011e64:	2d00      	cmp	r5, #0
 8011e66:	dcdd      	bgt.n	8011e24 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011e68:	fa1f f58e 	uxth.w	r5, lr
 8011e6c:	fa1f f88a 	uxth.w	r8, sl
 8011e70:	4442      	add	r2, r8
 8011e72:	442b      	add	r3, r5
 8011e74:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011e78:	1a51      	subs	r1, r2, r1
 8011e7a:	ebac 0705 	sub.w	r7, ip, r5
 8011e7e:	eba0 0008 	sub.w	r0, r0, r8
 8011e82:	eba3 0c0c 	sub.w	ip, r3, ip
 8011e86:	f8ad e010 	strh.w	lr, [sp, #16]
 8011e8a:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011e8e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011e92:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011e96:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011e9a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011e9e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011ea2:	e787      	b.n	8011db4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011ea4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011ea4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011ea8:	fb90 f2f3 	sdiv	r2, r0, r3
 8011eac:	fb02 0013 	mls	r0, r2, r3, r0
 8011eb0:	2800      	cmp	r0, #0
 8011eb2:	bfb8      	it	lt
 8011eb4:	18c0      	addlt	r0, r0, r3
 8011eb6:	285a      	cmp	r0, #90	; 0x5a
 8011eb8:	4b09      	ldr	r3, [pc, #36]	; (8011ee0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011eba:	dc02      	bgt.n	8011ec2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011ebc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011ec0:	4770      	bx	lr
 8011ec2:	28b4      	cmp	r0, #180	; 0xb4
 8011ec4:	dc02      	bgt.n	8011ecc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011ec6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011eca:	e7f7      	b.n	8011ebc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011ecc:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011ed0:	bfd4      	ite	le
 8011ed2:	38b4      	suble	r0, #180	; 0xb4
 8011ed4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011ed8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011edc:	4240      	negs	r0, r0
 8011ede:	4770      	bx	lr
 8011ee0:	0802f018 	.word	0x0802f018

08011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011ee4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011ee8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011eea:	fb90 f2f3 	sdiv	r2, r0, r3
 8011eee:	fb02 0013 	mls	r0, r2, r3, r0
 8011ef2:	2800      	cmp	r0, #0
 8011ef4:	bfb8      	it	lt
 8011ef6:	18c0      	addlt	r0, r0, r3
 8011ef8:	1144      	asrs	r4, r0, #5
 8011efa:	f000 061f 	and.w	r6, r0, #31
 8011efe:	4620      	mov	r0, r4
 8011f00:	f7ff ffd0 	bl	8011ea4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011f04:	4605      	mov	r5, r0
 8011f06:	b90e      	cbnz	r6, 8011f0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011f08:	b002      	add	sp, #8
 8011f0a:	bd70      	pop	{r4, r5, r6, pc}
 8011f0c:	1c60      	adds	r0, r4, #1
 8011f0e:	f7ff ffc9 	bl	8011ea4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011f12:	ab01      	add	r3, sp, #4
 8011f14:	2220      	movs	r2, #32
 8011f16:	4631      	mov	r1, r6
 8011f18:	1b40      	subs	r0, r0, r5
 8011f1a:	f005 f967 	bl	80171ec <_ZN8touchgfx6muldivElllRl>
 8011f1e:	4428      	add	r0, r5
 8011f20:	e7f2      	b.n	8011f08 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011f22 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011f22:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011f26:	bf2c      	ite	cs
 8011f28:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011f2c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011f30:	2300      	movs	r3, #0
 8011f32:	1899      	adds	r1, r3, r2
 8011f34:	4288      	cmp	r0, r1
 8011f36:	bf24      	itt	cs
 8011f38:	1853      	addcs	r3, r2, r1
 8011f3a:	1a40      	subcs	r0, r0, r1
 8011f3c:	0892      	lsrs	r2, r2, #2
 8011f3e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011f42:	d1f6      	bne.n	8011f32 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011f44:	4618      	mov	r0, r3
 8011f46:	4770      	bx	lr

08011f48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011f48:	b510      	push	{r4, lr}
 8011f4a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011f4e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011f52:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011f56:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011f5a:	13a4      	asrs	r4, r4, #14
 8011f5c:	139b      	asrs	r3, r3, #14
 8011f5e:	429c      	cmp	r4, r3
 8011f60:	bfb8      	it	lt
 8011f62:	461c      	movlt	r4, r3
 8011f64:	2c01      	cmp	r4, #1
 8011f66:	dd07      	ble.n	8011f78 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011f68:	fb91 f1f4 	sdiv	r1, r1, r4
 8011f6c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011f70:	f7ff ffea 	bl	8011f48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011f74:	4360      	muls	r0, r4
 8011f76:	bd10      	pop	{r4, pc}
 8011f78:	4340      	muls	r0, r0
 8011f7a:	fb01 0001 	mla	r0, r1, r1, r0
 8011f7e:	f7ff ffd0 	bl	8011f22 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011f82:	e7f8      	b.n	8011f76 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011f84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011f84:	2800      	cmp	r0, #0
 8011f86:	b508      	push	{r3, lr}
 8011f88:	da05      	bge.n	8011f96 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8011f8a:	4240      	negs	r0, r0
 8011f8c:	f7ff fffa 	bl	8011f84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011f90:	4240      	negs	r0, r0
 8011f92:	b240      	sxtb	r0, r0
 8011f94:	bd08      	pop	{r3, pc}
 8011f96:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8011f9a:	dc11      	bgt.n	8011fc0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8011f9c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011fa0:	dd09      	ble.n	8011fb6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011fa2:	4340      	muls	r0, r0
 8011fa4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011fa8:	f7ff ffbb 	bl	8011f22 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011fac:	f7ff ffea 	bl	8011f84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011fb0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011fb4:	e7ed      	b.n	8011f92 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011fb6:	3003      	adds	r0, #3
 8011fb8:	10c0      	asrs	r0, r0, #3
 8011fba:	4b02      	ldr	r3, [pc, #8]	; (8011fc4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8011fbc:	5618      	ldrsb	r0, [r3, r0]
 8011fbe:	e7e9      	b.n	8011f94 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011fc0:	2000      	movs	r0, #0
 8011fc2:	e7e7      	b.n	8011f94 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011fc4:	0802efbc 	.word	0x0802efbc

08011fc8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011fc8:	4281      	cmp	r1, r0
 8011fca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011fcc:	460c      	mov	r4, r1
 8011fce:	4615      	mov	r5, r2
 8011fd0:	dd07      	ble.n	8011fe2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011fd2:	4601      	mov	r1, r0
 8011fd4:	4620      	mov	r0, r4
 8011fd6:	f7ff fff7 	bl	8011fc8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011fda:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011fde:	b003      	add	sp, #12
 8011fe0:	bd30      	pop	{r4, r5, pc}
 8011fe2:	f7ff ffb1 	bl	8011f48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011fe6:	6028      	str	r0, [r5, #0]
 8011fe8:	2800      	cmp	r0, #0
 8011fea:	d0f8      	beq.n	8011fde <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8011fec:	4602      	mov	r2, r0
 8011fee:	ab01      	add	r3, sp, #4
 8011ff0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011ff4:	4620      	mov	r0, r4
 8011ff6:	f005 f8f9 	bl	80171ec <_ZN8touchgfx6muldivElllRl>
 8011ffa:	f7ff ffc3 	bl	8011f84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011ffe:	e7ee      	b.n	8011fde <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012000 <_ZN8touchgfx4LineC1Ev>:
 8012000:	b510      	push	{r4, lr}
 8012002:	4604      	mov	r4, r0
 8012004:	f7ff fe0a 	bl	8011c1c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012008:	4b0c      	ldr	r3, [pc, #48]	; (801203c <_ZN8touchgfx4LineC1Ev+0x3c>)
 801200a:	6023      	str	r3, [r4, #0]
 801200c:	2220      	movs	r2, #32
 801200e:	2300      	movs	r3, #0
 8012010:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012012:	2212      	movs	r2, #18
 8012014:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012018:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801201c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012020:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8012024:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012028:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801202c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012030:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8012034:	66e2      	str	r2, [r4, #108]	; 0x6c
 8012036:	60a3      	str	r3, [r4, #8]
 8012038:	4620      	mov	r0, r4
 801203a:	bd10      	pop	{r4, pc}
 801203c:	0802f0d8 	.word	0x0802f0d8

08012040 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012040:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012044:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8012046:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012048:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801204a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801204c:	1aff      	subs	r7, r7, r3
 801204e:	4604      	mov	r4, r0
 8012050:	eba5 0502 	sub.w	r5, r5, r2
 8012054:	d142      	bne.n	80120dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012056:	b955      	cbnz	r5, 801206e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012058:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801205c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012060:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8012064:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012068:	b002      	add	sp, #8
 801206a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801206e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012072:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012076:	4629      	mov	r1, r5
 8012078:	4642      	mov	r2, r8
 801207a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801207c:	f005 f8d5 	bl	801722a <_ZN8touchgfx6muldivElll>
 8012080:	2502      	movs	r5, #2
 8012082:	4642      	mov	r2, r8
 8012084:	fb90 f6f5 	sdiv	r6, r0, r5
 8012088:	4639      	mov	r1, r7
 801208a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801208c:	f005 f8cd 	bl	801722a <_ZN8touchgfx6muldivElll>
 8012090:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012094:	fb90 f5f5 	sdiv	r5, r0, r5
 8012098:	f1b9 0f00 	cmp.w	r9, #0
 801209c:	d067      	beq.n	801216e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801209e:	f1b9 0f02 	cmp.w	r9, #2
 80120a2:	d878      	bhi.n	8012196 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80120a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80120a6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80120a8:	1b93      	subs	r3, r2, r6
 80120aa:	1b5b      	subs	r3, r3, r5
 80120ac:	6463      	str	r3, [r4, #68]	; 0x44
 80120ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80120b0:	18e9      	adds	r1, r5, r3
 80120b2:	1b89      	subs	r1, r1, r6
 80120b4:	6561      	str	r1, [r4, #84]	; 0x54
 80120b6:	1b81      	subs	r1, r0, r6
 80120b8:	4429      	add	r1, r5
 80120ba:	64a1      	str	r1, [r4, #72]	; 0x48
 80120bc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80120be:	4430      	add	r0, r6
 80120c0:	186f      	adds	r7, r5, r1
 80120c2:	4432      	add	r2, r6
 80120c4:	1b49      	subs	r1, r1, r5
 80120c6:	4437      	add	r7, r6
 80120c8:	4428      	add	r0, r5
 80120ca:	4431      	add	r1, r6
 80120cc:	1b52      	subs	r2, r2, r5
 80120ce:	1b5b      	subs	r3, r3, r5
 80120d0:	65a7      	str	r7, [r4, #88]	; 0x58
 80120d2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80120d4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80120d6:	6522      	str	r2, [r4, #80]	; 0x50
 80120d8:	1b9b      	subs	r3, r3, r6
 80120da:	e05b      	b.n	8012194 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80120dc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80120e0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80120e4:	2d00      	cmp	r5, #0
 80120e6:	d0c6      	beq.n	8012076 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80120e8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80120ec:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80120f0:	fb93 f2f8 	sdiv	r2, r3, r8
 80120f4:	fb08 3312 	mls	r3, r8, r2, r3
 80120f8:	b353      	cbz	r3, 8012150 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80120fa:	fb98 f2f3 	sdiv	r2, r8, r3
 80120fe:	fb03 8812 	mls	r8, r3, r2, r8
 8012102:	f1b8 0f00 	cmp.w	r8, #0
 8012106:	d1f3      	bne.n	80120f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012108:	2b01      	cmp	r3, #1
 801210a:	bf1c      	itt	ne
 801210c:	fb95 f5f3 	sdivne	r5, r5, r3
 8012110:	fb97 f7f3 	sdivne	r7, r7, r3
 8012114:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012118:	f24b 5104 	movw	r1, #46340	; 0xb504
 801211c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012120:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012124:	428b      	cmp	r3, r1
 8012126:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801212a:	4608      	mov	r0, r1
 801212c:	dd01      	ble.n	8012132 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801212e:	428a      	cmp	r2, r1
 8012130:	dc10      	bgt.n	8012154 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012132:	fb90 f3f3 	sdiv	r3, r0, r3
 8012136:	fb90 f2f2 	sdiv	r2, r0, r2
 801213a:	4293      	cmp	r3, r2
 801213c:	bfa8      	it	ge
 801213e:	4613      	movge	r3, r2
 8012140:	435f      	muls	r7, r3
 8012142:	435d      	muls	r5, r3
 8012144:	4629      	mov	r1, r5
 8012146:	4638      	mov	r0, r7
 8012148:	f7ff fefe 	bl	8011f48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801214c:	4680      	mov	r8, r0
 801214e:	e792      	b.n	8012076 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012150:	4643      	mov	r3, r8
 8012152:	e7d9      	b.n	8012108 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012154:	fb93 f3f1 	sdiv	r3, r3, r1
 8012158:	fb92 f2f1 	sdiv	r2, r2, r1
 801215c:	4293      	cmp	r3, r2
 801215e:	bfcc      	ite	gt
 8012160:	3301      	addgt	r3, #1
 8012162:	1c53      	addle	r3, r2, #1
 8012164:	fb97 f7f3 	sdiv	r7, r7, r3
 8012168:	fb95 f5f3 	sdiv	r5, r5, r3
 801216c:	e7ea      	b.n	8012144 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801216e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012170:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012172:	1b93      	subs	r3, r2, r6
 8012174:	6463      	str	r3, [r4, #68]	; 0x44
 8012176:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012178:	18e9      	adds	r1, r5, r3
 801217a:	6561      	str	r1, [r4, #84]	; 0x54
 801217c:	1b81      	subs	r1, r0, r6
 801217e:	64a1      	str	r1, [r4, #72]	; 0x48
 8012180:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012182:	4430      	add	r0, r6
 8012184:	186f      	adds	r7, r5, r1
 8012186:	4432      	add	r2, r6
 8012188:	1b49      	subs	r1, r1, r5
 801218a:	65a7      	str	r7, [r4, #88]	; 0x58
 801218c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801218e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012190:	6522      	str	r2, [r4, #80]	; 0x50
 8012192:	1b5b      	subs	r3, r3, r5
 8012194:	6623      	str	r3, [r4, #96]	; 0x60
 8012196:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012198:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801219a:	9200      	str	r2, [sp, #0]
 801219c:	9301      	str	r3, [sp, #4]
 801219e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80121a2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80121a6:	680f      	ldr	r7, [r1, #0]
 80121a8:	9800      	ldr	r0, [sp, #0]
 80121aa:	42ba      	cmp	r2, r7
 80121ac:	bfa8      	it	ge
 80121ae:	463a      	movge	r2, r7
 80121b0:	4287      	cmp	r7, r0
 80121b2:	bfc8      	it	gt
 80121b4:	9700      	strgt	r7, [sp, #0]
 80121b6:	690f      	ldr	r7, [r1, #16]
 80121b8:	9801      	ldr	r0, [sp, #4]
 80121ba:	42bb      	cmp	r3, r7
 80121bc:	bfa8      	it	ge
 80121be:	463b      	movge	r3, r7
 80121c0:	3104      	adds	r1, #4
 80121c2:	4287      	cmp	r7, r0
 80121c4:	bfc8      	it	gt
 80121c6:	9701      	strgt	r7, [sp, #4]
 80121c8:	458c      	cmp	ip, r1
 80121ca:	d1ec      	bne.n	80121a6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80121cc:	4668      	mov	r0, sp
 80121ce:	2720      	movs	r7, #32
 80121d0:	fb92 f8f7 	sdiv	r8, r2, r7
 80121d4:	fb93 f7f7 	sdiv	r7, r3, r7
 80121d8:	f7ff fd57 	bl	8011c8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80121dc:	4682      	mov	sl, r0
 80121de:	a801      	add	r0, sp, #4
 80121e0:	f7ff fd53 	bl	8011c8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80121e4:	ebaa 0208 	sub.w	r2, sl, r8
 80121e8:	1bc0      	subs	r0, r0, r7
 80121ea:	f1b9 0f01 	cmp.w	r9, #1
 80121ee:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80121f2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80121f6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80121fa:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80121fe:	f47f af33 	bne.w	8012068 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012202:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012204:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012206:	1b83      	subs	r3, r0, r6
 8012208:	6463      	str	r3, [r4, #68]	; 0x44
 801220a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801220c:	18ea      	adds	r2, r5, r3
 801220e:	6562      	str	r2, [r4, #84]	; 0x54
 8012210:	1b8a      	subs	r2, r1, r6
 8012212:	64a2      	str	r2, [r4, #72]	; 0x48
 8012214:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012216:	4431      	add	r1, r6
 8012218:	18af      	adds	r7, r5, r2
 801221a:	4406      	add	r6, r0
 801221c:	1b52      	subs	r2, r2, r5
 801221e:	1b5d      	subs	r5, r3, r5
 8012220:	65a7      	str	r7, [r4, #88]	; 0x58
 8012222:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012224:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012226:	6526      	str	r6, [r4, #80]	; 0x50
 8012228:	6625      	str	r5, [r4, #96]	; 0x60
 801222a:	e71d      	b.n	8012068 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801222c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801222c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801222e:	428b      	cmp	r3, r1
 8012230:	d102      	bne.n	8012238 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012232:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012234:	4293      	cmp	r3, r2
 8012236:	d003      	beq.n	8012240 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012238:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801223c:	f7ff bf00 	b.w	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012240:	4770      	bx	lr

08012242 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012242:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012244:	428b      	cmp	r3, r1
 8012246:	d102      	bne.n	801224e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012248:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801224a:	4293      	cmp	r3, r2
 801224c:	d003      	beq.n	8012256 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801224e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012252:	f7ff bef5 	b.w	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012256:	4770      	bx	lr

08012258 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012258:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801225c:	f7ff bef0 	b.w	8012040 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012260 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012264:	b0a0      	sub	sp, #128	; 0x80
 8012266:	4604      	mov	r4, r0
 8012268:	460a      	mov	r2, r1
 801226a:	4601      	mov	r1, r0
 801226c:	a804      	add	r0, sp, #16
 801226e:	f014 fe3b 	bl	8026ee8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012272:	2300      	movs	r3, #0
 8012274:	9301      	str	r3, [sp, #4]
 8012276:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801227a:	2b01      	cmp	r3, #1
 801227c:	d17c      	bne.n	8012378 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801227e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012280:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012282:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012284:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012286:	1ac0      	subs	r0, r0, r3
 8012288:	eba1 0102 	sub.w	r1, r1, r2
 801228c:	d437      	bmi.n	80122fe <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801228e:	2900      	cmp	r1, #0
 8012290:	aa01      	add	r2, sp, #4
 8012292:	db2e      	blt.n	80122f2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012294:	f7ff fe98 	bl	8011fc8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012298:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801229c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801229e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80122a0:	a804      	add	r0, sp, #16
 80122a2:	f014 ffa1 	bl	80271e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80122a6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80122a8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80122aa:	a804      	add	r0, sp, #16
 80122ac:	f014 ffe9 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80122b0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80122b2:	2db3      	cmp	r5, #179	; 0xb3
 80122b4:	dc33      	bgt.n	801231e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80122b6:	eba6 0805 	sub.w	r8, r6, r5
 80122ba:	4640      	mov	r0, r8
 80122bc:	f7ff fdf2 	bl	8011ea4 <_ZN8touchgfx7CWRUtil4sineEi>
 80122c0:	a902      	add	r1, sp, #8
 80122c2:	9002      	str	r0, [sp, #8]
 80122c4:	a801      	add	r0, sp, #4
 80122c6:	f7ff fcd5 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80122ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80122cc:	1847      	adds	r7, r0, r1
 80122ce:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80122d2:	f7ff fde7 	bl	8011ea4 <_ZN8touchgfx7CWRUtil4sineEi>
 80122d6:	a903      	add	r1, sp, #12
 80122d8:	9003      	str	r0, [sp, #12]
 80122da:	a801      	add	r0, sp, #4
 80122dc:	f7ff fcca 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80122e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80122e2:	4639      	mov	r1, r7
 80122e4:	1a12      	subs	r2, r2, r0
 80122e6:	a804      	add	r0, sp, #16
 80122e8:	f014 ffcb 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80122ec:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80122ee:	441d      	add	r5, r3
 80122f0:	e7df      	b.n	80122b2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80122f2:	4249      	negs	r1, r1
 80122f4:	f7ff fe68 	bl	8011fc8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80122f8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80122fc:	e7ce      	b.n	801229c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80122fe:	2900      	cmp	r1, #0
 8012300:	f1c0 0000 	rsb	r0, r0, #0
 8012304:	aa01      	add	r2, sp, #4
 8012306:	db04      	blt.n	8012312 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012308:	f7ff fe5e 	bl	8011fc8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801230c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012310:	e7c4      	b.n	801229c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012312:	4249      	negs	r1, r1
 8012314:	f7ff fe58 	bl	8011fc8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012318:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801231c:	e7be      	b.n	801229c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801231e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012320:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012322:	a804      	add	r0, sp, #16
 8012324:	f014 ffad 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012328:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801232a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801232c:	a804      	add	r0, sp, #16
 801232e:	f014 ffa8 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012332:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012334:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012338:	2d00      	cmp	r5, #0
 801233a:	dd31      	ble.n	80123a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801233c:	eb05 0806 	add.w	r8, r5, r6
 8012340:	4640      	mov	r0, r8
 8012342:	f7ff fdaf 	bl	8011ea4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012346:	a902      	add	r1, sp, #8
 8012348:	9002      	str	r0, [sp, #8]
 801234a:	a801      	add	r0, sp, #4
 801234c:	f7ff fc92 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012350:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012352:	1847      	adds	r7, r0, r1
 8012354:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012358:	f7ff fda4 	bl	8011ea4 <_ZN8touchgfx7CWRUtil4sineEi>
 801235c:	a903      	add	r1, sp, #12
 801235e:	9003      	str	r0, [sp, #12]
 8012360:	a801      	add	r0, sp, #4
 8012362:	f7ff fc87 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012366:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012368:	4639      	mov	r1, r7
 801236a:	1a12      	subs	r2, r2, r0
 801236c:	a804      	add	r0, sp, #16
 801236e:	f014 ff88 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012372:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012374:	1aed      	subs	r5, r5, r3
 8012376:	e7df      	b.n	8012338 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012378:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801237a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801237c:	a804      	add	r0, sp, #16
 801237e:	f014 ff33 	bl	80271e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012382:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012384:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012386:	a804      	add	r0, sp, #16
 8012388:	f014 ff7b 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801238c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801238e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012390:	a804      	add	r0, sp, #16
 8012392:	f014 ff76 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012396:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012398:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801239a:	a804      	add	r0, sp, #16
 801239c:	f014 ff71 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80123a0:	21ff      	movs	r1, #255	; 0xff
 80123a2:	a804      	add	r0, sp, #16
 80123a4:	f014 fe5c 	bl	8027060 <_ZN8touchgfx6Canvas6renderEh>
 80123a8:	4b04      	ldr	r3, [pc, #16]	; (80123bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80123aa:	9304      	str	r3, [sp, #16]
 80123ac:	4604      	mov	r4, r0
 80123ae:	a80c      	add	r0, sp, #48	; 0x30
 80123b0:	f001 f8cc 	bl	801354c <_ZN8touchgfx7OutlineD1Ev>
 80123b4:	4620      	mov	r0, r4
 80123b6:	b020      	add	sp, #128	; 0x80
 80123b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123bc:	0802f900 	.word	0x0802f900

080123c0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80123c0:	2000      	movs	r0, #0
 80123c2:	4770      	bx	lr

080123c4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80123c4:	4b07      	ldr	r3, [pc, #28]	; (80123e4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80123c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80123c8:	881b      	ldrh	r3, [r3, #0]
 80123ca:	4293      	cmp	r3, r2
 80123cc:	bf81      	itttt	hi
 80123ce:	4b06      	ldrhi	r3, [pc, #24]	; (80123e8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80123d0:	681b      	ldrhi	r3, [r3, #0]
 80123d2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80123d6:	7858      	ldrbhi	r0, [r3, #1]
 80123d8:	bf8c      	ite	hi
 80123da:	f000 0003 	andhi.w	r0, r0, #3
 80123de:	2000      	movls	r0, #0
 80123e0:	4770      	bx	lr
 80123e2:	bf00      	nop
 80123e4:	20012e00 	.word	0x20012e00
 80123e8:	20012dfc 	.word	0x20012dfc

080123ec <_ZN8touchgfx8TextAreaD1Ev>:
 80123ec:	4770      	bx	lr
	...

080123f0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80123f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123f4:	4b10      	ldr	r3, [pc, #64]	; (8012438 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80123f6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80123f8:	881b      	ldrh	r3, [r3, #0]
 80123fa:	428b      	cmp	r3, r1
 80123fc:	4604      	mov	r4, r0
 80123fe:	d918      	bls.n	8012432 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012400:	6803      	ldr	r3, [r0, #0]
 8012402:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012404:	4b0d      	ldr	r3, [pc, #52]	; (801243c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012406:	6818      	ldr	r0, [r3, #0]
 8012408:	f7f6 fe50 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 801240c:	6823      	ldr	r3, [r4, #0]
 801240e:	4606      	mov	r6, r0
 8012410:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012412:	4620      	mov	r0, r4
 8012414:	4798      	blx	r3
 8012416:	6823      	ldr	r3, [r4, #0]
 8012418:	4607      	mov	r7, r0
 801241a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801241e:	4620      	mov	r0, r4
 8012420:	4798      	blx	r3
 8012422:	463a      	mov	r2, r7
 8012424:	4603      	mov	r3, r0
 8012426:	4631      	mov	r1, r6
 8012428:	4620      	mov	r0, r4
 801242a:	46ac      	mov	ip, r5
 801242c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012430:	4760      	bx	ip
 8012432:	2000      	movs	r0, #0
 8012434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012438:	20012e00 	.word	0x20012e00
 801243c:	20012e08 	.word	0x20012e08

08012440 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012440:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012444:	4b17      	ldr	r3, [pc, #92]	; (80124a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012446:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012448:	881b      	ldrh	r3, [r3, #0]
 801244a:	428b      	cmp	r3, r1
 801244c:	4604      	mov	r4, r0
 801244e:	d926      	bls.n	801249e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012450:	4b15      	ldr	r3, [pc, #84]	; (80124a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012452:	681b      	ldr	r3, [r3, #0]
 8012454:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012458:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801245c:	4b13      	ldr	r3, [pc, #76]	; (80124ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801245e:	7855      	ldrb	r5, [r2, #1]
 8012460:	681b      	ldr	r3, [r3, #0]
 8012462:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012466:	6833      	ldr	r3, [r6, #0]
 8012468:	69df      	ldr	r7, [r3, #28]
 801246a:	4b11      	ldr	r3, [pc, #68]	; (80124b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801246c:	6818      	ldr	r0, [r3, #0]
 801246e:	f7f6 fe1d 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8012472:	6823      	ldr	r3, [r4, #0]
 8012474:	4680      	mov	r8, r0
 8012476:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012478:	4620      	mov	r0, r4
 801247a:	4798      	blx	r3
 801247c:	6823      	ldr	r3, [r4, #0]
 801247e:	4681      	mov	r9, r0
 8012480:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012484:	4620      	mov	r0, r4
 8012486:	4798      	blx	r3
 8012488:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801248c:	9000      	str	r0, [sp, #0]
 801248e:	464b      	mov	r3, r9
 8012490:	4642      	mov	r2, r8
 8012492:	4629      	mov	r1, r5
 8012494:	4630      	mov	r0, r6
 8012496:	47b8      	blx	r7
 8012498:	b003      	add	sp, #12
 801249a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801249e:	2000      	movs	r0, #0
 80124a0:	e7fa      	b.n	8012498 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80124a2:	bf00      	nop
 80124a4:	20012e00 	.word	0x20012e00
 80124a8:	20012dfc 	.word	0x20012dfc
 80124ac:	20012e04 	.word	0x20012e04
 80124b0:	20012e08 	.word	0x20012e08

080124b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80124b4:	b40e      	push	{r1, r2, r3}
 80124b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80124ba:	4b2f      	ldr	r3, [pc, #188]	; (8012578 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80124bc:	881a      	ldrh	r2, [r3, #0]
 80124be:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80124c0:	429a      	cmp	r2, r3
 80124c2:	b09d      	sub	sp, #116	; 0x74
 80124c4:	4604      	mov	r4, r0
 80124c6:	d954      	bls.n	8012572 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80124c8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801257c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80124cc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012580 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80124d0:	aa26      	add	r2, sp, #152	; 0x98
 80124d2:	9202      	str	r2, [sp, #8]
 80124d4:	f8d9 2000 	ldr.w	r2, [r9]
 80124d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80124dc:	f8d8 3000 	ldr.w	r3, [r8]
 80124e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80124e4:	682b      	ldr	r3, [r5, #0]
 80124e6:	4628      	mov	r0, r5
 80124e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124ea:	4798      	blx	r3
 80124ec:	b207      	sxth	r7, r0
 80124ee:	4606      	mov	r6, r0
 80124f0:	a803      	add	r0, sp, #12
 80124f2:	f005 fa57 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 80124f6:	682b      	ldr	r3, [r5, #0]
 80124f8:	4628      	mov	r0, r5
 80124fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80124fc:	4798      	blx	r3
 80124fe:	682b      	ldr	r3, [r5, #0]
 8012500:	4682      	mov	sl, r0
 8012502:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012504:	4628      	mov	r0, r5
 8012506:	4798      	blx	r3
 8012508:	4653      	mov	r3, sl
 801250a:	9000      	str	r0, [sp, #0]
 801250c:	9a02      	ldr	r2, [sp, #8]
 801250e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012510:	a803      	add	r0, sp, #12
 8012512:	f005 faa2 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012516:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012518:	f8d9 3000 	ldr.w	r3, [r9]
 801251c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012520:	8925      	ldrh	r5, [r4, #8]
 8012522:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012526:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801252a:	eba5 050c 	sub.w	r5, r5, ip
 801252e:	784a      	ldrb	r2, [r1, #1]
 8012530:	f8d8 3000 	ldr.w	r3, [r8]
 8012534:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012538:	b22d      	sxth	r5, r5
 801253a:	9500      	str	r5, [sp, #0]
 801253c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012540:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012544:	a803      	add	r0, sp, #12
 8012546:	f002 feed 	bl	8015324 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801254a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801254e:	18b9      	adds	r1, r7, r2
 8012550:	2900      	cmp	r1, #0
 8012552:	b203      	sxth	r3, r0
 8012554:	dd0b      	ble.n	801256e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012556:	3b01      	subs	r3, #1
 8012558:	fb13 f302 	smulbb	r3, r3, r2
 801255c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012560:	b21f      	sxth	r7, r3
 8012562:	4638      	mov	r0, r7
 8012564:	b01d      	add	sp, #116	; 0x74
 8012566:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801256a:	b003      	add	sp, #12
 801256c:	4770      	bx	lr
 801256e:	2b00      	cmp	r3, #0
 8012570:	dcf7      	bgt.n	8012562 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012572:	2700      	movs	r7, #0
 8012574:	e7f5      	b.n	8012562 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012576:	bf00      	nop
 8012578:	20012e00 	.word	0x20012e00
 801257c:	20012dfc 	.word	0x20012dfc
 8012580:	20012e04 	.word	0x20012e04

08012584 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012588:	4bbc      	ldr	r3, [pc, #752]	; (801287c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801258a:	460c      	mov	r4, r1
 801258c:	881b      	ldrh	r3, [r3, #0]
 801258e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012590:	428b      	cmp	r3, r1
 8012592:	b0a9      	sub	sp, #164	; 0xa4
 8012594:	4680      	mov	r8, r0
 8012596:	d809      	bhi.n	80125ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012598:	2300      	movs	r3, #0
 801259a:	f04f 32ff 	mov.w	r2, #4294967295
 801259e:	e9c0 3200 	strd	r3, r2, [r0]
 80125a2:	6083      	str	r3, [r0, #8]
 80125a4:	4640      	mov	r0, r8
 80125a6:	b029      	add	sp, #164	; 0xa4
 80125a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125ac:	4eb4      	ldr	r6, [pc, #720]	; (8012880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80125ae:	6833      	ldr	r3, [r6, #0]
 80125b0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80125b4:	4bb3      	ldr	r3, [pc, #716]	; (8012884 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80125b6:	681b      	ldr	r3, [r3, #0]
 80125b8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80125bc:	4bb2      	ldr	r3, [pc, #712]	; (8012888 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80125be:	6818      	ldr	r0, [r3, #0]
 80125c0:	f7f6 fd74 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 80125c4:	682b      	ldr	r3, [r5, #0]
 80125c6:	4681      	mov	r9, r0
 80125c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125ca:	4628      	mov	r0, r5
 80125cc:	4798      	blx	r3
 80125ce:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80125d0:	b203      	sxth	r3, r0
 80125d2:	4407      	add	r7, r0
 80125d4:	9304      	str	r3, [sp, #16]
 80125d6:	b2bb      	uxth	r3, r7
 80125d8:	9303      	str	r3, [sp, #12]
 80125da:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80125de:	4682      	mov	sl, r0
 80125e0:	a80f      	add	r0, sp, #60	; 0x3c
 80125e2:	2b00      	cmp	r3, #0
 80125e4:	f040 80a6 	bne.w	8012734 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80125e8:	f005 f9dc 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 80125ec:	682b      	ldr	r3, [r5, #0]
 80125ee:	4628      	mov	r0, r5
 80125f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80125f2:	4798      	blx	r3
 80125f4:	682b      	ldr	r3, [r5, #0]
 80125f6:	4606      	mov	r6, r0
 80125f8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80125fa:	4628      	mov	r0, r5
 80125fc:	4798      	blx	r3
 80125fe:	6823      	ldr	r3, [r4, #0]
 8012600:	4607      	mov	r7, r0
 8012602:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012604:	4620      	mov	r0, r4
 8012606:	4798      	blx	r3
 8012608:	6823      	ldr	r3, [r4, #0]
 801260a:	4683      	mov	fp, r0
 801260c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012610:	4620      	mov	r0, r4
 8012612:	4798      	blx	r3
 8012614:	463b      	mov	r3, r7
 8012616:	e9cd b000 	strd	fp, r0, [sp]
 801261a:	4649      	mov	r1, r9
 801261c:	4632      	mov	r2, r6
 801261e:	a80f      	add	r0, sp, #60	; 0x3c
 8012620:	f005 fa30 	bl	8017a84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012624:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012628:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801262c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012630:	f04f 0600 	mov.w	r6, #0
 8012634:	bf0c      	ite	eq
 8012636:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801263a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801263e:	4637      	mov	r7, r6
 8012640:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012642:	f8db 3000 	ldr.w	r3, [fp]
 8012646:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801264a:	4629      	mov	r1, r5
 801264c:	785b      	ldrb	r3, [r3, #1]
 801264e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012652:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012656:	a80f      	add	r0, sp, #60	; 0x3c
 8012658:	f002 fb7f 	bl	8014d5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801265c:	9b03      	ldr	r3, [sp, #12]
 801265e:	4286      	cmp	r6, r0
 8012660:	bfb8      	it	lt
 8012662:	4606      	movlt	r6, r0
 8012664:	3701      	adds	r7, #1
 8012666:	eba9 0903 	sub.w	r9, r9, r3
 801266a:	a80f      	add	r0, sp, #60	; 0x3c
 801266c:	b236      	sxth	r6, r6
 801266e:	b2bf      	uxth	r7, r7
 8012670:	fa0f f989 	sxth.w	r9, r9
 8012674:	f005 f9bd 	bl	80179f2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012678:	b918      	cbnz	r0, 8012682 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801267a:	7a2b      	ldrb	r3, [r5, #8]
 801267c:	444b      	add	r3, r9
 801267e:	2b00      	cmp	r3, #0
 8012680:	dcde      	bgt.n	8012640 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012682:	9b03      	ldr	r3, [sp, #12]
 8012684:	9a04      	ldr	r2, [sp, #16]
 8012686:	f895 9009 	ldrb.w	r9, [r5, #9]
 801268a:	fb13 f707 	smulbb	r7, r3, r7
 801268e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012690:	1aff      	subs	r7, r7, r3
 8012692:	b2bf      	uxth	r7, r7
 8012694:	b23b      	sxth	r3, r7
 8012696:	429a      	cmp	r2, r3
 8012698:	bfa8      	it	ge
 801269a:	4657      	movge	r7, sl
 801269c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80126a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80126a4:	6823      	ldr	r3, [r4, #0]
 80126a6:	bf08      	it	eq
 80126a8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80126ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80126ae:	bf18      	it	ne
 80126b0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80126b4:	4620      	mov	r0, r4
 80126b6:	4798      	blx	r3
 80126b8:	444f      	add	r7, r9
 80126ba:	fa1f f987 	uxth.w	r9, r7
 80126be:	2801      	cmp	r0, #1
 80126c0:	fa0f f789 	sxth.w	r7, r9
 80126c4:	b2b3      	uxth	r3, r6
 80126c6:	f000 80e1 	beq.w	801288c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80126ca:	2802      	cmp	r0, #2
 80126cc:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80126d0:	f000 80e2 	beq.w	8012898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80126d4:	7aea      	ldrb	r2, [r5, #11]
 80126d6:	7b2d      	ldrb	r5, [r5, #12]
 80126d8:	b236      	sxth	r6, r6
 80126da:	1ab6      	subs	r6, r6, r2
 80126dc:	442a      	add	r2, r5
 80126de:	4413      	add	r3, r2
 80126e0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80126e4:	fa1f fa86 	uxth.w	sl, r6
 80126e8:	b29b      	uxth	r3, r3
 80126ea:	2a02      	cmp	r2, #2
 80126ec:	fa0f fb8a 	sxth.w	fp, sl
 80126f0:	b21e      	sxth	r6, r3
 80126f2:	f000 80d5 	beq.w	80128a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80126f6:	2a03      	cmp	r2, #3
 80126f8:	f000 80dd 	beq.w	80128b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80126fc:	2a01      	cmp	r2, #1
 80126fe:	f040 80e5 	bne.w	80128cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012702:	8925      	ldrh	r5, [r4, #8]
 8012704:	4633      	mov	r3, r6
 8012706:	eba5 0909 	sub.w	r9, r5, r9
 801270a:	463e      	mov	r6, r7
 801270c:	465d      	mov	r5, fp
 801270e:	461f      	mov	r7, r3
 8012710:	fa0f fb89 	sxth.w	fp, r9
 8012714:	4b5c      	ldr	r3, [pc, #368]	; (8012888 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012716:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012718:	6818      	ldr	r0, [r3, #0]
 801271a:	f7f6 fcc7 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 801271e:	f8a8 b000 	strh.w	fp, [r8]
 8012722:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012726:	f8a8 6004 	strh.w	r6, [r8, #4]
 801272a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801272e:	f8c8 0008 	str.w	r0, [r8, #8]
 8012732:	e737      	b.n	80125a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012734:	f005 f936 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 8012738:	682b      	ldr	r3, [r5, #0]
 801273a:	4628      	mov	r0, r5
 801273c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801273e:	4798      	blx	r3
 8012740:	682b      	ldr	r3, [r5, #0]
 8012742:	4607      	mov	r7, r0
 8012744:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012746:	4628      	mov	r0, r5
 8012748:	4798      	blx	r3
 801274a:	6823      	ldr	r3, [r4, #0]
 801274c:	4683      	mov	fp, r0
 801274e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012750:	4620      	mov	r0, r4
 8012752:	4798      	blx	r3
 8012754:	6822      	ldr	r2, [r4, #0]
 8012756:	9005      	str	r0, [sp, #20]
 8012758:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801275c:	4620      	mov	r0, r4
 801275e:	4790      	blx	r2
 8012760:	9b05      	ldr	r3, [sp, #20]
 8012762:	9001      	str	r0, [sp, #4]
 8012764:	463a      	mov	r2, r7
 8012766:	4649      	mov	r1, r9
 8012768:	9300      	str	r3, [sp, #0]
 801276a:	a80f      	add	r0, sp, #60	; 0x3c
 801276c:	465b      	mov	r3, fp
 801276e:	f005 f989 	bl	8017a84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012772:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012776:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801277a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801277c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012780:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012784:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012788:	bf0a      	itet	eq
 801278a:	464a      	moveq	r2, r9
 801278c:	461a      	movne	r2, r3
 801278e:	4699      	moveq	r9, r3
 8012790:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012794:	1ad2      	subs	r2, r2, r3
 8012796:	6833      	ldr	r3, [r6, #0]
 8012798:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801279c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80127a0:	af0f      	add	r7, sp, #60	; 0x3c
 80127a2:	7859      	ldrb	r1, [r3, #1]
 80127a4:	9707      	str	r7, [sp, #28]
 80127a6:	2300      	movs	r3, #0
 80127a8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80127ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 80127b0:	f88d 1020 	strb.w	r1, [sp, #32]
 80127b4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80127b8:	9509      	str	r5, [sp, #36]	; 0x24
 80127ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80127be:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80127c2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80127c6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80127ca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80127ce:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80127d2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80127d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80127da:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80127de:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80127e2:	b350      	cbz	r0, 801283a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80127e4:	682b      	ldr	r3, [r5, #0]
 80127e6:	4628      	mov	r0, r5
 80127e8:	695b      	ldr	r3, [r3, #20]
 80127ea:	4798      	blx	r3
 80127ec:	4607      	mov	r7, r0
 80127ee:	b320      	cbz	r0, 801283a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80127f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80127f2:	6803      	ldr	r3, [r0, #0]
 80127f4:	4639      	mov	r1, r7
 80127f6:	68db      	ldr	r3, [r3, #12]
 80127f8:	4798      	blx	r3
 80127fa:	4606      	mov	r6, r0
 80127fc:	b1e8      	cbz	r0, 801283a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80127fe:	7b43      	ldrb	r3, [r0, #13]
 8012800:	7a82      	ldrb	r2, [r0, #10]
 8012802:	005b      	lsls	r3, r3, #1
 8012804:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012808:	4313      	orrs	r3, r2
 801280a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801280e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012812:	2b06      	cmp	r3, #6
 8012814:	d111      	bne.n	801283a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012816:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012818:	6803      	ldr	r3, [r0, #0]
 801281a:	4632      	mov	r2, r6
 801281c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801281e:	4639      	mov	r1, r7
 8012820:	4798      	blx	r3
 8012822:	7b73      	ldrb	r3, [r6, #13]
 8012824:	005b      	lsls	r3, r3, #1
 8012826:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801282a:	7ab3      	ldrb	r3, [r6, #10]
 801282c:	4313      	orrs	r3, r2
 801282e:	4418      	add	r0, r3
 8012830:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012834:	4418      	add	r0, r3
 8012836:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801283a:	2600      	movs	r6, #0
 801283c:	4637      	mov	r7, r6
 801283e:	a806      	add	r0, sp, #24
 8012840:	f002 fc6c 	bl	801511c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012844:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012848:	9b03      	ldr	r3, [sp, #12]
 801284a:	4286      	cmp	r6, r0
 801284c:	eba9 0903 	sub.w	r9, r9, r3
 8012850:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012854:	bfb8      	it	lt
 8012856:	4606      	movlt	r6, r0
 8012858:	3701      	adds	r7, #1
 801285a:	b236      	sxth	r6, r6
 801285c:	b2bf      	uxth	r7, r7
 801285e:	fa0f f989 	sxth.w	r9, r9
 8012862:	2b00      	cmp	r3, #0
 8012864:	f43f af0d 	beq.w	8012682 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012868:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801286c:	2b00      	cmp	r3, #0
 801286e:	f47f af08 	bne.w	8012682 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012872:	7a2b      	ldrb	r3, [r5, #8]
 8012874:	444b      	add	r3, r9
 8012876:	2b00      	cmp	r3, #0
 8012878:	dce1      	bgt.n	801283e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801287a:	e702      	b.n	8012682 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801287c:	20012e00 	.word	0x20012e00
 8012880:	20012dfc 	.word	0x20012dfc
 8012884:	20012e04 	.word	0x20012e04
 8012888:	20012e08 	.word	0x20012e08
 801288c:	ebaa 0606 	sub.w	r6, sl, r6
 8012890:	2002      	movs	r0, #2
 8012892:	fb96 f6f0 	sdiv	r6, r6, r0
 8012896:	e71d      	b.n	80126d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012898:	441e      	add	r6, r3
 801289a:	ebaa 0606 	sub.w	r6, sl, r6
 801289e:	e719      	b.n	80126d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80128a0:	8925      	ldrh	r5, [r4, #8]
 80128a2:	1aed      	subs	r5, r5, r3
 80128a4:	eba5 050a 	sub.w	r5, r5, sl
 80128a8:	fa0f fb85 	sxth.w	fp, r5
 80128ac:	8965      	ldrh	r5, [r4, #10]
 80128ae:	eba5 0509 	sub.w	r5, r5, r9
 80128b2:	b22d      	sxth	r5, r5
 80128b4:	e72e      	b.n	8012714 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80128b6:	8965      	ldrh	r5, [r4, #10]
 80128b8:	1aed      	subs	r5, r5, r3
 80128ba:	eba5 050a 	sub.w	r5, r5, sl
 80128be:	4633      	mov	r3, r6
 80128c0:	b22d      	sxth	r5, r5
 80128c2:	463e      	mov	r6, r7
 80128c4:	f04f 0b00 	mov.w	fp, #0
 80128c8:	461f      	mov	r7, r3
 80128ca:	e723      	b.n	8012714 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80128cc:	2500      	movs	r5, #0
 80128ce:	e721      	b.n	8012714 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080128d0 <_ZN8touchgfx8TextAreaD0Ev>:
 80128d0:	b510      	push	{r4, lr}
 80128d2:	2148      	movs	r1, #72	; 0x48
 80128d4:	4604      	mov	r4, r0
 80128d6:	f017 faf2 	bl	8029ebe <_ZdlPvj>
 80128da:	4620      	mov	r0, r4
 80128dc:	bd10      	pop	{r4, pc}
	...

080128e0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80128e0:	b513      	push	{r0, r1, r4, lr}
 80128e2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80128e6:	4604      	mov	r4, r0
 80128e8:	b1fb      	cbz	r3, 801292a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80128ea:	4b16      	ldr	r3, [pc, #88]	; (8012944 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80128ec:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80128ee:	881b      	ldrh	r3, [r3, #0]
 80128f0:	428b      	cmp	r3, r1
 80128f2:	d91a      	bls.n	801292a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80128f4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80128f8:	2b00      	cmp	r3, #0
 80128fa:	dd16      	ble.n	801292a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80128fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012900:	2b00      	cmp	r3, #0
 8012902:	dd12      	ble.n	801292a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012904:	4b10      	ldr	r3, [pc, #64]	; (8012948 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012906:	6818      	ldr	r0, [r3, #0]
 8012908:	f7f6 fbd0 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 801290c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012910:	6822      	ldr	r2, [r4, #0]
 8012912:	2b00      	cmp	r3, #0
 8012914:	db06      	blt.n	8012924 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012916:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801291a:	2b00      	cmp	r3, #0
 801291c:	db02      	blt.n	8012924 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801291e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012920:	4298      	cmp	r0, r3
 8012922:	d004      	beq.n	801292e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012924:	6953      	ldr	r3, [r2, #20]
 8012926:	4620      	mov	r0, r4
 8012928:	4798      	blx	r3
 801292a:	b002      	add	sp, #8
 801292c:	bd10      	pop	{r4, pc}
 801292e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012932:	c903      	ldmia	r1, {r0, r1}
 8012934:	466b      	mov	r3, sp
 8012936:	e883 0003 	stmia.w	r3, {r0, r1}
 801293a:	6912      	ldr	r2, [r2, #16]
 801293c:	4619      	mov	r1, r3
 801293e:	4620      	mov	r0, r4
 8012940:	4790      	blx	r2
 8012942:	e7f2      	b.n	801292a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012944:	20012e00 	.word	0x20012e00
 8012948:	20012e08 	.word	0x20012e08

0801294c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801294c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012950:	4b44      	ldr	r3, [pc, #272]	; (8012a64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012952:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012954:	881b      	ldrh	r3, [r3, #0]
 8012956:	4293      	cmp	r3, r2
 8012958:	b08e      	sub	sp, #56	; 0x38
 801295a:	4604      	mov	r4, r0
 801295c:	d97e      	bls.n	8012a5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801295e:	6808      	ldr	r0, [r1, #0]
 8012960:	4d41      	ldr	r5, [pc, #260]	; (8012a68 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012962:	6849      	ldr	r1, [r1, #4]
 8012964:	ab05      	add	r3, sp, #20
 8012966:	c303      	stmia	r3!, {r0, r1}
 8012968:	4611      	mov	r1, r2
 801296a:	6828      	ldr	r0, [r5, #0]
 801296c:	f7f6 fb9e 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8012970:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012974:	2b00      	cmp	r3, #0
 8012976:	db11      	blt.n	801299c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012978:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801297c:	2b00      	cmp	r3, #0
 801297e:	db0d      	blt.n	801299c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012980:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012982:	4298      	cmp	r0, r3
 8012984:	d10a      	bne.n	801299c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012986:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801298a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801298e:	ab09      	add	r3, sp, #36	; 0x24
 8012990:	e883 0003 	stmia.w	r3, {r0, r1}
 8012994:	4619      	mov	r1, r3
 8012996:	a805      	add	r0, sp, #20
 8012998:	f7fe f860 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 801299c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80129a0:	2b00      	cmp	r3, #0
 80129a2:	dd5b      	ble.n	8012a5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80129a4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80129a8:	2b00      	cmp	r3, #0
 80129aa:	dd57      	ble.n	8012a5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80129ac:	4f2f      	ldr	r7, [pc, #188]	; (8012a6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80129ae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80129b0:	683b      	ldr	r3, [r7, #0]
 80129b2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80129b6:	4b2e      	ldr	r3, [pc, #184]	; (8012a70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80129b8:	681b      	ldr	r3, [r3, #0]
 80129ba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80129be:	2e00      	cmp	r6, #0
 80129c0:	d04c      	beq.n	8012a5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80129c2:	6823      	ldr	r3, [r4, #0]
 80129c4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80129c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80129ca:	4620      	mov	r0, r4
 80129cc:	4798      	blx	r3
 80129ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80129d0:	683b      	ldr	r3, [r7, #0]
 80129d2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80129d6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80129da:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80129de:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80129e0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80129e4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80129e8:	785b      	ldrb	r3, [r3, #1]
 80129ea:	9609      	str	r6, [sp, #36]	; 0x24
 80129ec:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80129f0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80129f4:	4b1f      	ldr	r3, [pc, #124]	; (8012a74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80129f6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80129fa:	681b      	ldr	r3, [r3, #0]
 80129fc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012a00:	910b      	str	r1, [sp, #44]	; 0x2c
 8012a02:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012a06:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012a0a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012a0e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012a12:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012a16:	b10a      	cbz	r2, 8012a1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012a18:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012a1a:	b906      	cbnz	r6, 8012a1e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012a1c:	689e      	ldr	r6, [r3, #8]
 8012a1e:	af07      	add	r7, sp, #28
 8012a20:	4621      	mov	r1, r4
 8012a22:	4638      	mov	r0, r7
 8012a24:	f004 fab0 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a28:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012a2a:	6828      	ldr	r0, [r5, #0]
 8012a2c:	f7f6 fb3e 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8012a30:	6823      	ldr	r3, [r4, #0]
 8012a32:	4605      	mov	r5, r0
 8012a34:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012a36:	4620      	mov	r0, r4
 8012a38:	4798      	blx	r3
 8012a3a:	6823      	ldr	r3, [r4, #0]
 8012a3c:	4680      	mov	r8, r0
 8012a3e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012a42:	4620      	mov	r0, r4
 8012a44:	4798      	blx	r3
 8012a46:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012a4a:	ab09      	add	r3, sp, #36	; 0x24
 8012a4c:	9300      	str	r3, [sp, #0]
 8012a4e:	9501      	str	r5, [sp, #4]
 8012a50:	ab05      	add	r3, sp, #20
 8012a52:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012a56:	4630      	mov	r0, r6
 8012a58:	f7f6 fada 	bl	8009010 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012a5c:	b00e      	add	sp, #56	; 0x38
 8012a5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012a62:	bf00      	nop
 8012a64:	20012e00 	.word	0x20012e00
 8012a68:	20012e08 	.word	0x20012e08
 8012a6c:	20012dfc 	.word	0x20012dfc
 8012a70:	20012e04 	.word	0x20012e04
 8012a74:	20012da4 	.word	0x20012da4

08012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012a78:	b538      	push	{r3, r4, r5, lr}
 8012a7a:	4b0e      	ldr	r3, [pc, #56]	; (8012ab4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012a7c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012a7e:	881b      	ldrh	r3, [r3, #0]
 8012a80:	429a      	cmp	r2, r3
 8012a82:	4604      	mov	r4, r0
 8012a84:	d214      	bcs.n	8012ab0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012a86:	6803      	ldr	r3, [r0, #0]
 8012a88:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012a8a:	4798      	blx	r3
 8012a8c:	6823      	ldr	r3, [r4, #0]
 8012a8e:	4605      	mov	r5, r0
 8012a90:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012a92:	4620      	mov	r0, r4
 8012a94:	4798      	blx	r3
 8012a96:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012a9a:	b22d      	sxth	r5, r5
 8012a9c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012aa0:	4601      	mov	r1, r0
 8012aa2:	bf06      	itte	eq
 8012aa4:	4602      	moveq	r2, r0
 8012aa6:	4629      	moveq	r1, r5
 8012aa8:	462a      	movne	r2, r5
 8012aaa:	4620      	mov	r0, r4
 8012aac:	f7fd fdb6 	bl	801061c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012ab0:	bd38      	pop	{r3, r4, r5, pc}
 8012ab2:	bf00      	nop
 8012ab4:	20012e00 	.word	0x20012e00

08012ab8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012ab8:	b530      	push	{r4, r5, lr}
 8012aba:	888b      	ldrh	r3, [r1, #4]
 8012abc:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012abe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012ac2:	b085      	sub	sp, #20
 8012ac4:	4604      	mov	r4, r0
 8012ac6:	b923      	cbnz	r3, 8012ad2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012ac8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012acc:	b90b      	cbnz	r3, 8012ad2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012ace:	f7ff ffd3 	bl	8012a78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012ad2:	6823      	ldr	r3, [r4, #0]
 8012ad4:	466d      	mov	r5, sp
 8012ad6:	4621      	mov	r1, r4
 8012ad8:	4628      	mov	r0, r5
 8012ada:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012ade:	4798      	blx	r3
 8012ae0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012ae4:	343c      	adds	r4, #60	; 0x3c
 8012ae6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012aea:	b005      	add	sp, #20
 8012aec:	bd30      	pop	{r4, r5, pc}

08012aee <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012aee:	2300      	movs	r3, #0
 8012af0:	8083      	strh	r3, [r0, #4]
 8012af2:	80c3      	strh	r3, [r0, #6]
 8012af4:	8003      	strh	r3, [r0, #0]
 8012af6:	8043      	strh	r3, [r0, #2]
 8012af8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012afc:	2bff      	cmp	r3, #255	; 0xff
 8012afe:	bf01      	itttt	eq
 8012b00:	890b      	ldrheq	r3, [r1, #8]
 8012b02:	8083      	strheq	r3, [r0, #4]
 8012b04:	894b      	ldrheq	r3, [r1, #10]
 8012b06:	80c3      	strheq	r3, [r0, #6]
 8012b08:	4770      	bx	lr
	...

08012b0c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012b0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012b0e:	4604      	mov	r4, r0
 8012b10:	6808      	ldr	r0, [r1, #0]
 8012b12:	6849      	ldr	r1, [r1, #4]
 8012b14:	466b      	mov	r3, sp
 8012b16:	c303      	stmia	r3!, {r0, r1}
 8012b18:	6823      	ldr	r3, [r4, #0]
 8012b1a:	4669      	mov	r1, sp
 8012b1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b1e:	4620      	mov	r0, r4
 8012b20:	4798      	blx	r3
 8012b22:	4b08      	ldr	r3, [pc, #32]	; (8012b44 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012b24:	681b      	ldr	r3, [r3, #0]
 8012b26:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012b2a:	b10a      	cbz	r2, 8012b30 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012b2c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012b2e:	b900      	cbnz	r0, 8012b32 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012b30:	6898      	ldr	r0, [r3, #8]
 8012b32:	6803      	ldr	r3, [r0, #0]
 8012b34:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012b36:	6a1d      	ldr	r5, [r3, #32]
 8012b38:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012b3c:	4669      	mov	r1, sp
 8012b3e:	47a8      	blx	r5
 8012b40:	b003      	add	sp, #12
 8012b42:	bd30      	pop	{r4, r5, pc}
 8012b44:	20012da4 	.word	0x20012da4

08012b48 <_ZN8touchgfx3BoxD1Ev>:
 8012b48:	4770      	bx	lr

08012b4a <_ZN8touchgfx3BoxD0Ev>:
 8012b4a:	b510      	push	{r4, lr}
 8012b4c:	212c      	movs	r1, #44	; 0x2c
 8012b4e:	4604      	mov	r4, r0
 8012b50:	f017 f9b5 	bl	8029ebe <_ZdlPvj>
 8012b54:	4620      	mov	r0, r4
 8012b56:	bd10      	pop	{r4, pc}

08012b58 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012b58:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012b5c:	b12a      	cbz	r2, 8012b6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012b5e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012b62:	b112      	cbz	r2, 8012b6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012b64:	6803      	ldr	r3, [r0, #0]
 8012b66:	695b      	ldr	r3, [r3, #20]
 8012b68:	4718      	bx	r3
 8012b6a:	4770      	bx	lr

08012b6c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012b6c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012b70:	600b      	str	r3, [r1, #0]
 8012b72:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012b76:	6013      	str	r3, [r2, #0]
 8012b78:	4770      	bx	lr

08012b7a <_ZN8touchgfx5Gauge8setWidthEs>:
 8012b7a:	8101      	strh	r1, [r0, #8]
 8012b7c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012b80:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012b84:	4770      	bx	lr

08012b86 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012b86:	8141      	strh	r1, [r0, #10]
 8012b88:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012b8c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012b90:	4770      	bx	lr

08012b92 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012b92:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012b96:	4770      	bx	lr

08012b98 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012b98:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012b9c:	4770      	bx	lr

08012b9e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012b9e:	4770      	bx	lr

08012ba0 <_ZN8touchgfx5GaugeD1Ev>:
 8012ba0:	4770      	bx	lr

08012ba2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012ba2:	b538      	push	{r3, r4, r5, lr}
 8012ba4:	4604      	mov	r4, r0
 8012ba6:	460d      	mov	r5, r1
 8012ba8:	f7fd fc51 	bl	801044e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012bac:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012bb0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012bb4:	bd38      	pop	{r3, r4, r5, pc}

08012bb6 <_ZN8touchgfx5GaugeD0Ev>:
 8012bb6:	b510      	push	{r4, lr}
 8012bb8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012bbc:	4604      	mov	r4, r0
 8012bbe:	f017 f97e 	bl	8029ebe <_ZdlPvj>
 8012bc2:	4620      	mov	r0, r4
 8012bc4:	bd10      	pop	{r4, pc}

08012bc6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012bc6:	b510      	push	{r4, lr}
 8012bc8:	6803      	ldr	r3, [r0, #0]
 8012bca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012bce:	4604      	mov	r4, r0
 8012bd0:	4798      	blx	r3
 8012bd2:	b170      	cbz	r0, 8012bf2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012bd4:	6823      	ldr	r3, [r4, #0]
 8012bd6:	4620      	mov	r0, r4
 8012bd8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012bdc:	4798      	blx	r3
 8012bde:	b140      	cbz	r0, 8012bf2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012be0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012be4:	b12b      	cbz	r3, 8012bf2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012be6:	6823      	ldr	r3, [r4, #0]
 8012be8:	4620      	mov	r0, r4
 8012bea:	695b      	ldr	r3, [r3, #20]
 8012bec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012bf0:	4718      	bx	r3
 8012bf2:	bd10      	pop	{r4, pc}

08012bf4 <_ZN8touchgfx5GaugeC1Ev>:
 8012bf4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012bf6:	4604      	mov	r4, r0
 8012bf8:	4626      	mov	r6, r4
 8012bfa:	f7fd fd49 	bl	8010690 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012bfe:	4b18      	ldr	r3, [pc, #96]	; (8012c60 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012c00:	f846 3bb4 	str.w	r3, [r6], #180
 8012c04:	a902      	add	r1, sp, #8
 8012c06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012c0a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012c0e:	4630      	mov	r0, r6
 8012c10:	f015 f970 	bl	8027ef4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012c14:	2500      	movs	r5, #0
 8012c16:	2301      	movs	r3, #1
 8012c18:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012c1c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012c20:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012c24:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012c28:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012c2c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012c30:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012c34:	4638      	mov	r0, r7
 8012c36:	f014 fba1 	bl	802737c <_ZN8touchgfx6CircleC1Ev>
 8012c3a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012c3e:	4620      	mov	r0, r4
 8012c40:	f7fd fdc7 	bl	80107d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012c44:	4639      	mov	r1, r7
 8012c46:	4620      	mov	r0, r4
 8012c48:	f7fd fd82 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c4c:	4620      	mov	r0, r4
 8012c4e:	4631      	mov	r1, r6
 8012c50:	f7fd fd7e 	bl	8010750 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c54:	4620      	mov	r0, r4
 8012c56:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012c5a:	b003      	add	sp, #12
 8012c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c5e:	bf00      	nop
 8012c60:	0802f248 	.word	0x0802f248

08012c64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012c64:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012c68:	4770      	bx	lr

08012c6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012c6a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012c6e:	4770      	bx	lr

08012c70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012c70:	b538      	push	{r3, r4, r5, lr}
 8012c72:	8902      	ldrh	r2, [r0, #8]
 8012c74:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012c78:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012c7c:	4604      	mov	r4, r0
 8012c7e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012c82:	2200      	movs	r2, #0
 8012c84:	4611      	mov	r1, r2
 8012c86:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012c8a:	4628      	mov	r0, r5
 8012c8c:	f7f0 fa2b 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8012c90:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012c94:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012c98:	1a9b      	subs	r3, r3, r2
 8012c9a:	ee07 3a90 	vmov	s15, r3
 8012c9e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012ca2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012ca6:	1a9b      	subs	r3, r3, r2
 8012ca8:	ee07 3a10 	vmov	s14, r3
 8012cac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012cb0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cb4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012cb8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012cbc:	4628      	mov	r0, r5
 8012cbe:	f015 f965 	bl	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012cc2:	4b16      	ldr	r3, [pc, #88]	; (8012d1c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012cc4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012cc8:	4628      	mov	r0, r5
 8012cca:	f015 f95f 	bl	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012cce:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012cd2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012cd6:	ee07 3a90 	vmov	s15, r3
 8012cda:	ee07 2a10 	vmov	s14, r2
 8012cde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ce2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ce6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012cea:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012cee:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012cf2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012cf6:	4628      	mov	r0, r5
 8012cf8:	f015 f948 	bl	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012cfc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012d00:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012d04:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012d08:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012d0c:	4628      	mov	r0, r5
 8012d0e:	f015 f93d 	bl	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d12:	2301      	movs	r3, #1
 8012d14:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012d18:	bd38      	pop	{r3, r4, r5, pc}
 8012d1a:	bf00      	nop
 8012d1c:	43960000 	.word	0x43960000

08012d20 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012d20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012d22:	4604      	mov	r4, r0
 8012d24:	a802      	add	r0, sp, #8
 8012d26:	4616      	mov	r6, r2
 8012d28:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012d2c:	461d      	mov	r5, r3
 8012d2e:	4601      	mov	r1, r0
 8012d30:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012d34:	f015 fa80 	bl	8028238 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012d38:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012d3c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012d40:	4620      	mov	r0, r4
 8012d42:	f7ff ff95 	bl	8012c70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012d46:	b002      	add	sp, #8
 8012d48:	bd70      	pop	{r4, r5, r6, pc}

08012d4a <_ZN8touchgfx5Gauge9setCenterEii>:
 8012d4a:	b570      	push	{r4, r5, r6, lr}
 8012d4c:	4606      	mov	r6, r0
 8012d4e:	460d      	mov	r5, r1
 8012d50:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012d54:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012d58:	4614      	mov	r4, r2
 8012d5a:	f7ff ff89 	bl	8012c70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012d5e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012d62:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012d66:	1aa4      	subs	r4, r4, r2
 8012d68:	1a6d      	subs	r5, r5, r1
 8012d6a:	0164      	lsls	r4, r4, #5
 8012d6c:	016d      	lsls	r5, r5, #5
 8012d6e:	3410      	adds	r4, #16
 8012d70:	3510      	adds	r5, #16
 8012d72:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012d76:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012d7a:	bd70      	pop	{r4, r5, r6, pc}

08012d7c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012d7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012d7e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012d80:	0149      	lsls	r1, r1, #5
 8012d82:	4299      	cmp	r1, r3
 8012d84:	4604      	mov	r4, r0
 8012d86:	9101      	str	r1, [sp, #4]
 8012d88:	d00b      	beq.n	8012da2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012d8a:	4601      	mov	r1, r0
 8012d8c:	aa01      	add	r2, sp, #4
 8012d8e:	a802      	add	r0, sp, #8
 8012d90:	f014 fcf2 	bl	8027778 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012d94:	9b01      	ldr	r3, [sp, #4]
 8012d96:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012d98:	6823      	ldr	r3, [r4, #0]
 8012d9a:	a902      	add	r1, sp, #8
 8012d9c:	691b      	ldr	r3, [r3, #16]
 8012d9e:	4620      	mov	r0, r4
 8012da0:	4798      	blx	r3
 8012da2:	b004      	add	sp, #16
 8012da4:	bd10      	pop	{r4, pc}
	...

08012da8 <_ZN8touchgfx5Gauge8setValueEi>:
 8012da8:	b570      	push	{r4, r5, r6, lr}
 8012daa:	4604      	mov	r4, r0
 8012dac:	f7fd fba2 	bl	80104f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012db0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012db4:	429a      	cmp	r2, r3
 8012db6:	bfac      	ite	ge
 8012db8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012dbc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012dc0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012dc4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012dc8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012dcc:	1ac9      	subs	r1, r1, r3
 8012dce:	2900      	cmp	r1, #0
 8012dd0:	bfb8      	it	lt
 8012dd2:	4249      	neglt	r1, r1
 8012dd4:	b289      	uxth	r1, r1
 8012dd6:	4620      	mov	r0, r4
 8012dd8:	f7fd fbae 	bl	8010538 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012ddc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012de0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012de4:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012e4c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012de8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012e50 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012dec:	429a      	cmp	r2, r3
 8012dee:	4605      	mov	r5, r0
 8012df0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012df4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012df8:	da15      	bge.n	8012e26 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012dfa:	1b5b      	subs	r3, r3, r5
 8012dfc:	ee07 3a90 	vmov	s15, r3
 8012e00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e04:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012e08:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012e0c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012e10:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012e14:	f015 f829 	bl	8027e6a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012e18:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012e1c:	1b49      	subs	r1, r1, r5
 8012e1e:	4630      	mov	r0, r6
 8012e20:	f7ff ffac 	bl	8012d7c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012e24:	bd70      	pop	{r4, r5, r6, pc}
 8012e26:	442b      	add	r3, r5
 8012e28:	ee07 3a90 	vmov	s15, r3
 8012e2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e30:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012e34:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012e38:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012e3c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012e40:	f015 f813 	bl	8027e6a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012e44:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012e48:	4429      	add	r1, r5
 8012e4a:	e7e8      	b.n	8012e1e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012e4c:	43340000 	.word	0x43340000
 8012e50:	40490fdb 	.word	0x40490fdb

08012e54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012e54:	b510      	push	{r4, lr}
 8012e56:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012e5a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012e5e:	0149      	lsls	r1, r1, #5
 8012e60:	0152      	lsls	r2, r2, #5
 8012e62:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012e66:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012e6a:	4604      	mov	r4, r0
 8012e6c:	f7fd faec 	bl	8010448 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012e70:	4601      	mov	r1, r0
 8012e72:	4620      	mov	r0, r4
 8012e74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012e78:	f7ff bf96 	b.w	8012da8 <_ZN8touchgfx5Gauge8setValueEi>

08012e7c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012e7c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012e80:	4770      	bx	lr

08012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012e82:	b570      	push	{r4, r5, r6, lr}
 8012e84:	880b      	ldrh	r3, [r1, #0]
 8012e86:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012e88:	4605      	mov	r5, r0
 8012e8a:	8813      	ldrh	r3, [r2, #0]
 8012e8c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012e90:	4604      	mov	r4, r0
 8012e92:	4628      	mov	r0, r5
 8012e94:	f006 fb06 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012e98:	4606      	mov	r6, r0
 8012e9a:	4628      	mov	r0, r5
 8012e9c:	f006 fb36 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012ea0:	6823      	ldr	r3, [r4, #0]
 8012ea2:	4605      	mov	r5, r0
 8012ea4:	4631      	mov	r1, r6
 8012ea6:	4620      	mov	r0, r4
 8012ea8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012eaa:	4798      	blx	r3
 8012eac:	6823      	ldr	r3, [r4, #0]
 8012eae:	4629      	mov	r1, r5
 8012eb0:	4620      	mov	r0, r4
 8012eb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012eb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012eb8:	4718      	bx	r3

08012eba <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012eba:	b510      	push	{r4, lr}
 8012ebc:	4604      	mov	r4, r0
 8012ebe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012ec0:	b150      	cbz	r0, 8012ed8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012ec2:	6803      	ldr	r3, [r0, #0]
 8012ec4:	68db      	ldr	r3, [r3, #12]
 8012ec6:	4798      	blx	r3
 8012ec8:	b130      	cbz	r0, 8012ed8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012eca:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012ecc:	6803      	ldr	r3, [r0, #0]
 8012ece:	4621      	mov	r1, r4
 8012ed0:	689b      	ldr	r3, [r3, #8]
 8012ed2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012ed6:	4718      	bx	r3
 8012ed8:	bd10      	pop	{r4, pc}

08012eda <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012eda:	b510      	push	{r4, lr}
 8012edc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012ee0:	2bff      	cmp	r3, #255	; 0xff
 8012ee2:	4604      	mov	r4, r0
 8012ee4:	d006      	beq.n	8012ef4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012ee6:	2300      	movs	r3, #0
 8012ee8:	8003      	strh	r3, [r0, #0]
 8012eea:	8043      	strh	r3, [r0, #2]
 8012eec:	8083      	strh	r3, [r0, #4]
 8012eee:	80c3      	strh	r3, [r0, #6]
 8012ef0:	4620      	mov	r0, r4
 8012ef2:	bd10      	pop	{r4, pc}
 8012ef4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012ef8:	b11b      	cbz	r3, 8012f02 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012efa:	3130      	adds	r1, #48	; 0x30
 8012efc:	f006 fb3a 	bl	8019574 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012f00:	e7f6      	b.n	8012ef0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012f02:	312e      	adds	r1, #46	; 0x2e
 8012f04:	e7fa      	b.n	8012efc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012f08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f0c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012f10:	b08a      	sub	sp, #40	; 0x28
 8012f12:	4604      	mov	r4, r0
 8012f14:	4688      	mov	r8, r1
 8012f16:	2b00      	cmp	r3, #0
 8012f18:	d066      	beq.n	8012fe8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012f1a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012f1c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012f20:	a805      	add	r0, sp, #20
 8012f22:	f006 fabf 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012f26:	4607      	mov	r7, r0
 8012f28:	a805      	add	r0, sp, #20
 8012f2a:	f006 faef 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012f2e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012f32:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012f36:	4432      	add	r2, r6
 8012f38:	b292      	uxth	r2, r2
 8012f3a:	2300      	movs	r3, #0
 8012f3c:	fa0f fc82 	sxth.w	ip, r2
 8012f40:	459c      	cmp	ip, r3
 8012f42:	9306      	str	r3, [sp, #24]
 8012f44:	dd52      	ble.n	8012fec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f46:	42b7      	cmp	r7, r6
 8012f48:	dd50      	ble.n	8012fec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f4a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012f4e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012f52:	442b      	add	r3, r5
 8012f54:	b29b      	uxth	r3, r3
 8012f56:	b219      	sxth	r1, r3
 8012f58:	2900      	cmp	r1, #0
 8012f5a:	dd47      	ble.n	8012fec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f5c:	42a8      	cmp	r0, r5
 8012f5e:	dd45      	ble.n	8012fec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f60:	4567      	cmp	r7, ip
 8012f62:	bfb8      	it	lt
 8012f64:	b2ba      	uxthlt	r2, r7
 8012f66:	4288      	cmp	r0, r1
 8012f68:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012f6c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012f70:	bfb8      	it	lt
 8012f72:	b283      	uxthlt	r3, r0
 8012f74:	1b92      	subs	r2, r2, r6
 8012f76:	1b5b      	subs	r3, r3, r5
 8012f78:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012f7c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012f80:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012f84:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012f88:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012f8c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012f90:	429a      	cmp	r2, r3
 8012f92:	d026      	beq.n	8012fe2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012f94:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012f98:	2b00      	cmp	r3, #0
 8012f9a:	dd22      	ble.n	8012fe2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012f9c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012fa0:	2b00      	cmp	r3, #0
 8012fa2:	dd1e      	ble.n	8012fe2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012fa4:	2300      	movs	r3, #0
 8012fa6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012faa:	6823      	ldr	r3, [r4, #0]
 8012fac:	a908      	add	r1, sp, #32
 8012fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012fb0:	4620      	mov	r0, r4
 8012fb2:	4798      	blx	r3
 8012fb4:	4b0f      	ldr	r3, [pc, #60]	; (8012ff4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012fb6:	681b      	ldr	r3, [r3, #0]
 8012fb8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012fbc:	b10a      	cbz	r2, 8012fc2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012fbe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012fc0:	b900      	cbnz	r0, 8012fc4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012fc2:	6898      	ldr	r0, [r3, #8]
 8012fc4:	6801      	ldr	r1, [r0, #0]
 8012fc6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012fca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012fce:	2501      	movs	r5, #1
 8012fd0:	9502      	str	r5, [sp, #8]
 8012fd2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012fd6:	9401      	str	r4, [sp, #4]
 8012fd8:	ac06      	add	r4, sp, #24
 8012fda:	9400      	str	r4, [sp, #0]
 8012fdc:	688c      	ldr	r4, [r1, #8]
 8012fde:	a905      	add	r1, sp, #20
 8012fe0:	47a0      	blx	r4
 8012fe2:	b00a      	add	sp, #40	; 0x28
 8012fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012fe8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012fea:	e797      	b.n	8012f1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012fec:	2300      	movs	r3, #0
 8012fee:	9307      	str	r3, [sp, #28]
 8012ff0:	e7ca      	b.n	8012f88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012ff2:	bf00      	nop
 8012ff4:	20012da4 	.word	0x20012da4

08012ff8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012ff8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8012ffc:	b12a      	cbz	r2, 801300a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012ffe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013002:	b112      	cbz	r2, 801300a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013004:	6803      	ldr	r3, [r0, #0]
 8013006:	695b      	ldr	r3, [r3, #20]
 8013008:	4718      	bx	r3
 801300a:	4770      	bx	lr

0801300c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801300c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013010:	4b2f      	ldr	r3, [pc, #188]	; (80130d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013012:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013014:	881b      	ldrh	r3, [r3, #0]
 8013016:	4293      	cmp	r3, r2
 8013018:	b08d      	sub	sp, #52	; 0x34
 801301a:	4604      	mov	r4, r0
 801301c:	460f      	mov	r7, r1
 801301e:	d954      	bls.n	80130ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013020:	4b2c      	ldr	r3, [pc, #176]	; (80130d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013022:	6819      	ldr	r1, [r3, #0]
 8013024:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013028:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801302c:	4a2a      	ldr	r2, [pc, #168]	; (80130d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801302e:	6812      	ldr	r2, [r2, #0]
 8013030:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013034:	2900      	cmp	r1, #0
 8013036:	d048      	beq.n	80130ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013038:	785a      	ldrb	r2, [r3, #1]
 801303a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801303e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013042:	4b26      	ldr	r3, [pc, #152]	; (80130dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013044:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8013048:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801304c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013050:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013052:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8013056:	9107      	str	r1, [sp, #28]
 8013058:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801305c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013060:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013064:	681a      	ldr	r2, [r3, #0]
 8013066:	f88d 8020 	strb.w	r8, [sp, #32]
 801306a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801306e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013072:	9609      	str	r6, [sp, #36]	; 0x24
 8013074:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013078:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801307c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013080:	b10b      	cbz	r3, 8013086 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013082:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013084:	b905      	cbnz	r5, 8013088 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013086:	6895      	ldr	r5, [r2, #8]
 8013088:	ae05      	add	r6, sp, #20
 801308a:	4621      	mov	r1, r4
 801308c:	4630      	mov	r0, r6
 801308e:	f003 ff7b 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013092:	4b13      	ldr	r3, [pc, #76]	; (80130e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013094:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013096:	6818      	ldr	r0, [r3, #0]
 8013098:	f7f6 f808 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 801309c:	6823      	ldr	r3, [r4, #0]
 801309e:	4680      	mov	r8, r0
 80130a0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80130a2:	4620      	mov	r0, r4
 80130a4:	4798      	blx	r3
 80130a6:	6823      	ldr	r3, [r4, #0]
 80130a8:	4681      	mov	r9, r0
 80130aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80130ae:	4620      	mov	r0, r4
 80130b0:	4798      	blx	r3
 80130b2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80130b6:	ab07      	add	r3, sp, #28
 80130b8:	9300      	str	r3, [sp, #0]
 80130ba:	f8cd 8004 	str.w	r8, [sp, #4]
 80130be:	463b      	mov	r3, r7
 80130c0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80130c4:	4628      	mov	r0, r5
 80130c6:	f7f5 ffa3 	bl	8009010 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80130ca:	b00d      	add	sp, #52	; 0x34
 80130cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80130d0:	20012e00 	.word	0x20012e00
 80130d4:	20012dfc 	.word	0x20012dfc
 80130d8:	20012e04 	.word	0x20012e04
 80130dc:	20012da4 	.word	0x20012da4
 80130e0:	20012e08 	.word	0x20012e08

080130e4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80130e4:	4770      	bx	lr

080130e6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80130e6:	4770      	bx	lr

080130e8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80130e8:	b510      	push	{r4, lr}
 80130ea:	213c      	movs	r1, #60	; 0x3c
 80130ec:	4604      	mov	r4, r0
 80130ee:	f016 fee6 	bl	8029ebe <_ZdlPvj>
 80130f2:	4620      	mov	r0, r4
 80130f4:	bd10      	pop	{r4, pc}

080130f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80130f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130fa:	461c      	mov	r4, r3
 80130fc:	4606      	mov	r6, r0
 80130fe:	9f06      	ldr	r7, [sp, #24]
 8013100:	f7ff febf 	bl	8012e82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013104:	8823      	ldrh	r3, [r4, #0]
 8013106:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013108:	883b      	ldrh	r3, [r7, #0]
 801310a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801310c:	4638      	mov	r0, r7
 801310e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013112:	f006 f9c7 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013116:	f04f 0802 	mov.w	r8, #2
 801311a:	fb95 f5f8 	sdiv	r5, r5, r8
 801311e:	b2ad      	uxth	r5, r5
 8013120:	fb90 f0f8 	sdiv	r0, r0, r8
 8013124:	1a2d      	subs	r5, r5, r0
 8013126:	8735      	strh	r5, [r6, #56]	; 0x38
 8013128:	4638      	mov	r0, r7
 801312a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801312e:	fb94 f4f8 	sdiv	r4, r4, r8
 8013132:	f006 f9eb 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013136:	b2a4      	uxth	r4, r4
 8013138:	fb90 f0f8 	sdiv	r0, r0, r8
 801313c:	1a24      	subs	r4, r4, r0
 801313e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013144 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013148:	4604      	mov	r4, r0
 801314a:	b08c      	sub	sp, #48	; 0x30
 801314c:	460d      	mov	r5, r1
 801314e:	f7ff fedb 	bl	8012f08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013152:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013156:	2b00      	cmp	r3, #0
 8013158:	d05d      	beq.n	8013216 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801315a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801315c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013160:	a805      	add	r0, sp, #20
 8013162:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013166:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801316a:	f006 f99b 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801316e:	4606      	mov	r6, r0
 8013170:	a805      	add	r0, sp, #20
 8013172:	f006 f9cb 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013176:	6869      	ldr	r1, [r5, #4]
 8013178:	f8ad 001e 	strh.w	r0, [sp, #30]
 801317c:	6828      	ldr	r0, [r5, #0]
 801317e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013182:	ab08      	add	r3, sp, #32
 8013184:	ad08      	add	r5, sp, #32
 8013186:	c303      	stmia	r3!, {r0, r1}
 8013188:	a906      	add	r1, sp, #24
 801318a:	4628      	mov	r0, r5
 801318c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013190:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013194:	f7fd fc62 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8013198:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801319c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80131a0:	429a      	cmp	r2, r3
 80131a2:	d035      	beq.n	8013210 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80131a4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80131a8:	2b00      	cmp	r3, #0
 80131aa:	dd31      	ble.n	8013210 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80131ac:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80131b0:	2b00      	cmp	r3, #0
 80131b2:	dd2d      	ble.n	8013210 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80131b4:	2300      	movs	r3, #0
 80131b6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80131ba:	6823      	ldr	r3, [r4, #0]
 80131bc:	a90a      	add	r1, sp, #40	; 0x28
 80131be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131c0:	4620      	mov	r0, r4
 80131c2:	4798      	blx	r3
 80131c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80131c8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80131ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80131ce:	1a9b      	subs	r3, r3, r2
 80131d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80131d4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80131d6:	1ac9      	subs	r1, r1, r3
 80131d8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80131dc:	490f      	ldr	r1, [pc, #60]	; (801321c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80131de:	6809      	ldr	r1, [r1, #0]
 80131e0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80131e4:	b108      	cbz	r0, 80131ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80131e6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80131e8:	b900      	cbnz	r0, 80131ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80131ea:	6888      	ldr	r0, [r1, #8]
 80131ec:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80131f0:	440b      	add	r3, r1
 80131f2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80131f6:	2601      	movs	r6, #1
 80131f8:	440a      	add	r2, r1
 80131fa:	6801      	ldr	r1, [r0, #0]
 80131fc:	9602      	str	r6, [sp, #8]
 80131fe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013202:	e9cd 5400 	strd	r5, r4, [sp]
 8013206:	b21b      	sxth	r3, r3
 8013208:	688c      	ldr	r4, [r1, #8]
 801320a:	b212      	sxth	r2, r2
 801320c:	a905      	add	r1, sp, #20
 801320e:	47a0      	blx	r4
 8013210:	b00c      	add	sp, #48	; 0x30
 8013212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013216:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013218:	e7a0      	b.n	801315c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801321a:	bf00      	nop
 801321c:	20012da4 	.word	0x20012da4

08013220 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013220:	b510      	push	{r4, lr}
 8013222:	2101      	movs	r1, #1
 8013224:	2200      	movs	r2, #0
 8013226:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801322a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801322e:	4c0e      	ldr	r4, [pc, #56]	; (8013268 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013230:	8082      	strh	r2, [r0, #4]
 8013232:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013236:	80c2      	strh	r2, [r0, #6]
 8013238:	8102      	strh	r2, [r0, #8]
 801323a:	8142      	strh	r2, [r0, #10]
 801323c:	8182      	strh	r2, [r0, #12]
 801323e:	81c2      	strh	r2, [r0, #14]
 8013240:	8202      	strh	r2, [r0, #16]
 8013242:	8242      	strh	r2, [r0, #18]
 8013244:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013248:	61c2      	str	r2, [r0, #28]
 801324a:	8402      	strh	r2, [r0, #32]
 801324c:	8442      	strh	r2, [r0, #34]	; 0x22
 801324e:	6282      	str	r2, [r0, #40]	; 0x28
 8013250:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013254:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013256:	8601      	strh	r1, [r0, #48]	; 0x30
 8013258:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801325c:	6004      	str	r4, [r0, #0]
 801325e:	8681      	strh	r1, [r0, #52]	; 0x34
 8013260:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013262:	8702      	strh	r2, [r0, #56]	; 0x38
 8013264:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013266:	bd10      	pop	{r4, pc}
 8013268:	0802f330 	.word	0x0802f330

0801326c <_ZN8touchgfx5ImageD1Ev>:
 801326c:	4770      	bx	lr

0801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801326e:	b570      	push	{r4, r5, r6, lr}
 8013270:	880b      	ldrh	r3, [r1, #0]
 8013272:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013274:	4604      	mov	r4, r0
 8013276:	4608      	mov	r0, r1
 8013278:	460d      	mov	r5, r1
 801327a:	f006 f913 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801327e:	4606      	mov	r6, r0
 8013280:	4628      	mov	r0, r5
 8013282:	f006 f943 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013286:	6823      	ldr	r3, [r4, #0]
 8013288:	4605      	mov	r5, r0
 801328a:	4631      	mov	r1, r6
 801328c:	4620      	mov	r0, r4
 801328e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013290:	4798      	blx	r3
 8013292:	6823      	ldr	r3, [r4, #0]
 8013294:	4629      	mov	r1, r5
 8013296:	4620      	mov	r0, r4
 8013298:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801329a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801329e:	4718      	bx	r3

080132a0 <_ZN8touchgfx5ImageD0Ev>:
 80132a0:	b510      	push	{r4, lr}
 80132a2:	212c      	movs	r1, #44	; 0x2c
 80132a4:	4604      	mov	r4, r0
 80132a6:	f016 fe0a 	bl	8029ebe <_ZdlPvj>
 80132aa:	4620      	mov	r0, r4
 80132ac:	bd10      	pop	{r4, pc}

080132ae <_ZNK8touchgfx5Image12getSolidRectEv>:
 80132ae:	b510      	push	{r4, lr}
 80132b0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80132b4:	2bff      	cmp	r3, #255	; 0xff
 80132b6:	4604      	mov	r4, r0
 80132b8:	d006      	beq.n	80132c8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80132ba:	2300      	movs	r3, #0
 80132bc:	8003      	strh	r3, [r0, #0]
 80132be:	8043      	strh	r3, [r0, #2]
 80132c0:	8083      	strh	r3, [r0, #4]
 80132c2:	80c3      	strh	r3, [r0, #6]
 80132c4:	4620      	mov	r0, r4
 80132c6:	bd10      	pop	{r4, pc}
 80132c8:	3126      	adds	r1, #38	; 0x26
 80132ca:	f006 f953 	bl	8019574 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80132ce:	e7f9      	b.n	80132c4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080132d0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80132d0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80132d4:	b12a      	cbz	r2, 80132e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80132d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80132da:	b112      	cbz	r2, 80132e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80132dc:	6803      	ldr	r3, [r0, #0]
 80132de:	695b      	ldr	r3, [r3, #20]
 80132e0:	4718      	bx	r3
 80132e2:	4770      	bx	lr

080132e4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80132e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80132e8:	4604      	mov	r4, r0
 80132ea:	b088      	sub	sp, #32
 80132ec:	f854 3b26 	ldr.w	r3, [r4], #38
 80132f0:	2500      	movs	r5, #0
 80132f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132f4:	460f      	mov	r7, r1
 80132f6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80132fa:	a904      	add	r1, sp, #16
 80132fc:	4606      	mov	r6, r0
 80132fe:	4798      	blx	r3
 8013300:	4620      	mov	r0, r4
 8013302:	f006 f8cf 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013306:	4680      	mov	r8, r0
 8013308:	4620      	mov	r0, r4
 801330a:	f006 f8ff 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801330e:	9506      	str	r5, [sp, #24]
 8013310:	ad06      	add	r5, sp, #24
 8013312:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013316:	4639      	mov	r1, r7
 8013318:	4628      	mov	r0, r5
 801331a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801331e:	f7fd fb9d 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8013322:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013326:	2b00      	cmp	r3, #0
 8013328:	dd19      	ble.n	801335e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801332a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801332e:	2b00      	cmp	r3, #0
 8013330:	dd15      	ble.n	801335e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013332:	4b0c      	ldr	r3, [pc, #48]	; (8013364 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013334:	681b      	ldr	r3, [r3, #0]
 8013336:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801333a:	b10a      	cbz	r2, 8013340 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801333c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801333e:	b900      	cbnz	r0, 8013342 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013340:	6898      	ldr	r0, [r3, #8]
 8013342:	6801      	ldr	r1, [r0, #0]
 8013344:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013348:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801334c:	2701      	movs	r7, #1
 801334e:	9702      	str	r7, [sp, #8]
 8013350:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013354:	e9cd 5600 	strd	r5, r6, [sp]
 8013358:	688d      	ldr	r5, [r1, #8]
 801335a:	4621      	mov	r1, r4
 801335c:	47a8      	blx	r5
 801335e:	b008      	add	sp, #32
 8013360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013364:	20012da4 	.word	0x20012da4

08013368 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013368:	4770      	bx	lr

0801336a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801336a:	b510      	push	{r4, lr}
 801336c:	2148      	movs	r1, #72	; 0x48
 801336e:	4604      	mov	r4, r0
 8013370:	f016 fda5 	bl	8029ebe <_ZdlPvj>
 8013374:	4620      	mov	r0, r4
 8013376:	bd10      	pop	{r4, pc}

08013378 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013378:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801337c:	b08d      	sub	sp, #52	; 0x34
 801337e:	4604      	mov	r4, r0
 8013380:	460f      	mov	r7, r1
 8013382:	f7ff fdc1 	bl	8012f08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013386:	4a55      	ldr	r2, [pc, #340]	; (80134dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013388:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801338a:	8812      	ldrh	r2, [r2, #0]
 801338c:	429a      	cmp	r2, r3
 801338e:	f240 8082 	bls.w	8013496 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013392:	4d53      	ldr	r5, [pc, #332]	; (80134e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013394:	682a      	ldr	r2, [r5, #0]
 8013396:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801339a:	4b52      	ldr	r3, [pc, #328]	; (80134e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801339c:	681b      	ldr	r3, [r3, #0]
 801339e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80133a2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80133a6:	2200      	movs	r2, #0
 80133a8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80133ac:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80133b0:	2a03      	cmp	r2, #3
 80133b2:	d811      	bhi.n	80133d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80133b4:	e8df f002 	tbb	[pc, r2]
 80133b8:	89727902 	.word	0x89727902
 80133bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80133c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80133c4:	1ad2      	subs	r2, r2, r3
 80133c6:	2002      	movs	r0, #2
 80133c8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80133cc:	fb92 f2f0 	sdiv	r2, r2, r0
 80133d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80133d4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80133d8:	f10d 080c 	add.w	r8, sp, #12
 80133dc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80133e0:	f10d 0914 	add.w	r9, sp, #20
 80133e4:	e889 0003 	stmia.w	r9, {r0, r1}
 80133e8:	4639      	mov	r1, r7
 80133ea:	4648      	mov	r0, r9
 80133ec:	f7fd fb36 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 80133f0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80133f4:	2b00      	cmp	r3, #0
 80133f6:	dd4e      	ble.n	8013496 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80133f8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80133fc:	2b00      	cmp	r3, #0
 80133fe:	dd4a      	ble.n	8013496 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013400:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013404:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013408:	1a9b      	subs	r3, r3, r2
 801340a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801340e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013412:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013416:	1a9b      	subs	r3, r3, r2
 8013418:	f8ad 3016 	strh.w	r3, [sp, #22]
 801341c:	6823      	ldr	r3, [r4, #0]
 801341e:	4641      	mov	r1, r8
 8013420:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013422:	4620      	mov	r0, r4
 8013424:	4798      	blx	r3
 8013426:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801342a:	2b00      	cmp	r3, #0
 801342c:	d053      	beq.n	80134d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801342e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013430:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013432:	682b      	ldr	r3, [r5, #0]
 8013434:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013438:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801343c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013440:	785b      	ldrb	r3, [r3, #1]
 8013442:	9209      	str	r2, [sp, #36]	; 0x24
 8013444:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013448:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801344c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013450:	2300      	movs	r3, #0
 8013452:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013456:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801345a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801345e:	4b22      	ldr	r3, [pc, #136]	; (80134e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013460:	9607      	str	r6, [sp, #28]
 8013462:	681b      	ldr	r3, [r3, #0]
 8013464:	f88d 5020 	strb.w	r5, [sp, #32]
 8013468:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801346c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013470:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013474:	b10a      	cbz	r2, 801347a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013476:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013478:	b904      	cbnz	r4, 801347c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801347a:	689c      	ldr	r4, [r3, #8]
 801347c:	4b1b      	ldr	r3, [pc, #108]	; (80134ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801347e:	6818      	ldr	r0, [r3, #0]
 8013480:	f7f5 fe14 	bl	80090ac <_ZNK8touchgfx5Texts7getTextEt>
 8013484:	ab07      	add	r3, sp, #28
 8013486:	9001      	str	r0, [sp, #4]
 8013488:	9300      	str	r3, [sp, #0]
 801348a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801348e:	464b      	mov	r3, r9
 8013490:	4620      	mov	r0, r4
 8013492:	f7f5 fdbd 	bl	8009010 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013496:	b00d      	add	sp, #52	; 0x34
 8013498:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801349c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80134a0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80134a4:	1ad2      	subs	r2, r2, r3
 80134a6:	3201      	adds	r2, #1
 80134a8:	e78d      	b.n	80133c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80134aa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80134ae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80134b2:	1ad2      	subs	r2, r2, r3
 80134b4:	3201      	adds	r2, #1
 80134b6:	2002      	movs	r0, #2
 80134b8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80134bc:	fb92 f2f0 	sdiv	r2, r2, r0
 80134c0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80134c4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80134c8:	e786      	b.n	80133d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80134ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80134ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80134d2:	1ad2      	subs	r2, r2, r3
 80134d4:	e7ef      	b.n	80134b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80134d6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80134d8:	e7aa      	b.n	8013430 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80134da:	bf00      	nop
 80134dc:	20012e00 	.word	0x20012e00
 80134e0:	20012dfc 	.word	0x20012dfc
 80134e4:	20012e04 	.word	0x20012e04
 80134e8:	20012da4 	.word	0x20012da4
 80134ec:	20012e08 	.word	0x20012e08

080134f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80134f0:	b510      	push	{r4, lr}
 80134f2:	2101      	movs	r1, #1
 80134f4:	4c13      	ldr	r4, [pc, #76]	; (8013544 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80134f6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80134fa:	2200      	movs	r2, #0
 80134fc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013500:	6004      	str	r4, [r0, #0]
 8013502:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013506:	4c10      	ldr	r4, [pc, #64]	; (8013548 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013508:	8082      	strh	r2, [r0, #4]
 801350a:	80c2      	strh	r2, [r0, #6]
 801350c:	8102      	strh	r2, [r0, #8]
 801350e:	8142      	strh	r2, [r0, #10]
 8013510:	8182      	strh	r2, [r0, #12]
 8013512:	81c2      	strh	r2, [r0, #14]
 8013514:	8202      	strh	r2, [r0, #16]
 8013516:	8242      	strh	r2, [r0, #18]
 8013518:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801351c:	61c2      	str	r2, [r0, #28]
 801351e:	8402      	strh	r2, [r0, #32]
 8013520:	8442      	strh	r2, [r0, #34]	; 0x22
 8013522:	6282      	str	r2, [r0, #40]	; 0x28
 8013524:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013528:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801352a:	8601      	strh	r1, [r0, #48]	; 0x30
 801352c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013530:	6344      	str	r4, [r0, #52]	; 0x34
 8013532:	8701      	strh	r1, [r0, #56]	; 0x38
 8013534:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013538:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801353c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013540:	bd10      	pop	{r4, pc}
 8013542:	bf00      	nop
 8013544:	0802f414 	.word	0x0802f414
 8013548:	0802c880 	.word	0x0802c880

0801354c <_ZN8touchgfx7OutlineD1Ev>:
 801354c:	4770      	bx	lr

0801354e <_ZN8touchgfx7OutlineD0Ev>:
 801354e:	b510      	push	{r4, lr}
 8013550:	2130      	movs	r1, #48	; 0x30
 8013552:	4604      	mov	r4, r0
 8013554:	f016 fcb3 	bl	8029ebe <_ZdlPvj>
 8013558:	4620      	mov	r0, r4
 801355a:	bd10      	pop	{r4, pc}

0801355c <_ZN8touchgfx7Outline5resetEv>:
 801355c:	b510      	push	{r4, lr}
 801355e:	4604      	mov	r4, r0
 8013560:	f000 fe96 	bl	8014290 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013564:	60e0      	str	r0, [r4, #12]
 8013566:	f000 fe99 	bl	801429c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801356a:	68e3      	ldr	r3, [r4, #12]
 801356c:	6123      	str	r3, [r4, #16]
 801356e:	08c0      	lsrs	r0, r0, #3
 8013570:	2200      	movs	r2, #0
 8013572:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013576:	3801      	subs	r0, #1
 8013578:	6060      	str	r0, [r4, #4]
 801357a:	60a2      	str	r2, [r4, #8]
 801357c:	8019      	strh	r1, [r3, #0]
 801357e:	8059      	strh	r1, [r3, #2]
 8013580:	809a      	strh	r2, [r3, #4]
 8013582:	80da      	strh	r2, [r3, #6]
 8013584:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013586:	f023 0301 	bic.w	r3, r3, #1
 801358a:	f043 0302 	orr.w	r3, r3, #2
 801358e:	6263      	str	r3, [r4, #36]	; 0x24
 8013590:	bd10      	pop	{r4, pc}
	...

08013594 <_ZN8touchgfx7OutlineC1Ev>:
 8013594:	b510      	push	{r4, lr}
 8013596:	4b0a      	ldr	r3, [pc, #40]	; (80135c0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013598:	6003      	str	r3, [r0, #0]
 801359a:	2300      	movs	r3, #0
 801359c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80135a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80135a4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80135a8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80135ac:	6243      	str	r3, [r0, #36]	; 0x24
 80135ae:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80135b2:	4604      	mov	r4, r0
 80135b4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80135b8:	f7ff ffd0 	bl	801355c <_ZN8touchgfx7Outline5resetEv>
 80135bc:	4620      	mov	r0, r4
 80135be:	bd10      	pop	{r4, pc}
 80135c0:	0802f488 	.word	0x0802f488

080135c4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80135c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135c8:	b093      	sub	sp, #76	; 0x4c
 80135ca:	1156      	asrs	r6, r2, #5
 80135cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80135ce:	9305      	str	r3, [sp, #20]
 80135d0:	f004 051f 	and.w	r5, r4, #31
 80135d4:	1153      	asrs	r3, r2, #5
 80135d6:	9504      	str	r5, [sp, #16]
 80135d8:	1165      	asrs	r5, r4, #5
 80135da:	9303      	str	r3, [sp, #12]
 80135dc:	42ae      	cmp	r6, r5
 80135de:	ea4f 1364 	mov.w	r3, r4, asr #5
 80135e2:	9306      	str	r3, [sp, #24]
 80135e4:	f002 031f 	and.w	r3, r2, #31
 80135e8:	f040 80f8 	bne.w	80137dc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80135ec:	9c04      	ldr	r4, [sp, #16]
 80135ee:	9a05      	ldr	r2, [sp, #20]
 80135f0:	42a3      	cmp	r3, r4
 80135f2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80135f6:	6902      	ldr	r2, [r0, #16]
 80135f8:	d125      	bne.n	8013646 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80135fa:	f9b2 3000 	ldrsh.w	r3, [r2]
 80135fe:	459e      	cmp	lr, r3
 8013600:	d103      	bne.n	801360a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013602:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013606:	429e      	cmp	r6, r3
 8013608:	d035      	beq.n	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801360a:	88d1      	ldrh	r1, [r2, #6]
 801360c:	8893      	ldrh	r3, [r2, #4]
 801360e:	430b      	orrs	r3, r1
 8013610:	d010      	beq.n	8013634 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013612:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013616:	2b00      	cmp	r3, #0
 8013618:	db0c      	blt.n	8013634 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801361a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801361c:	428b      	cmp	r3, r1
 801361e:	da09      	bge.n	8013634 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013620:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013624:	428b      	cmp	r3, r1
 8013626:	bf38      	it	cc
 8013628:	3208      	addcc	r2, #8
 801362a:	f103 0301 	add.w	r3, r3, #1
 801362e:	bf38      	it	cc
 8013630:	6102      	strcc	r2, [r0, #16]
 8013632:	6083      	str	r3, [r0, #8]
 8013634:	6903      	ldr	r3, [r0, #16]
 8013636:	9a03      	ldr	r2, [sp, #12]
 8013638:	f8a3 e000 	strh.w	lr, [r3]
 801363c:	805a      	strh	r2, [r3, #2]
 801363e:	2200      	movs	r2, #0
 8013640:	809a      	strh	r2, [r3, #4]
 8013642:	80da      	strh	r2, [r3, #6]
 8013644:	e017      	b.n	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013646:	9c05      	ldr	r4, [sp, #20]
 8013648:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801364c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013650:	f004 041f 	and.w	r4, r4, #31
 8013654:	114e      	asrs	r6, r1, #5
 8013656:	9402      	str	r4, [sp, #8]
 8013658:	9c04      	ldr	r4, [sp, #16]
 801365a:	4576      	cmp	r6, lr
 801365c:	f001 0c1f 	and.w	ip, r1, #31
 8013660:	eba4 0403 	sub.w	r4, r4, r3
 8013664:	d10a      	bne.n	801367c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013666:	9b02      	ldr	r3, [sp, #8]
 8013668:	449c      	add	ip, r3
 801366a:	44a0      	add	r8, r4
 801366c:	fb04 a40c 	mla	r4, r4, ip, sl
 8013670:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013674:	80d4      	strh	r4, [r2, #6]
 8013676:	b013      	add	sp, #76	; 0x4c
 8013678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801367c:	9d05      	ldr	r5, [sp, #20]
 801367e:	1a69      	subs	r1, r5, r1
 8013680:	bf5b      	ittet	pl
 8013682:	f1cc 0520 	rsbpl	r5, ip, #32
 8013686:	436c      	mulpl	r4, r5
 8013688:	2500      	movmi	r5, #0
 801368a:	2520      	movpl	r5, #32
 801368c:	bf44      	itt	mi
 801368e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013692:	4249      	negmi	r1, r1
 8013694:	9501      	str	r5, [sp, #4]
 8013696:	9f01      	ldr	r7, [sp, #4]
 8013698:	fb94 f5f1 	sdiv	r5, r4, r1
 801369c:	fb01 4415 	mls	r4, r1, r5, r4
 80136a0:	bf54      	ite	pl
 80136a2:	f04f 0901 	movpl.w	r9, #1
 80136a6:	f04f 39ff 	movmi.w	r9, #4294967295
 80136aa:	2c00      	cmp	r4, #0
 80136ac:	bfb8      	it	lt
 80136ae:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80136b2:	44bc      	add	ip, r7
 80136b4:	44a8      	add	r8, r5
 80136b6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80136ba:	f8a2 8004 	strh.w	r8, [r2, #4]
 80136be:	f8a2 c006 	strh.w	ip, [r2, #6]
 80136c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80136c6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80136ca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80136ce:	bfb8      	it	lt
 80136d0:	1864      	addlt	r4, r4, r1
 80136d2:	ea58 0202 	orrs.w	r2, r8, r2
 80136d6:	444e      	add	r6, r9
 80136d8:	d011      	beq.n	80136fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80136da:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80136de:	f1b8 0f00 	cmp.w	r8, #0
 80136e2:	db0c      	blt.n	80136fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80136e4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80136e6:	4590      	cmp	r8, r2
 80136e8:	da09      	bge.n	80136fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80136ea:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80136ee:	4590      	cmp	r8, r2
 80136f0:	bf3c      	itt	cc
 80136f2:	f10c 0208 	addcc.w	r2, ip, #8
 80136f6:	6102      	strcc	r2, [r0, #16]
 80136f8:	f108 0201 	add.w	r2, r8, #1
 80136fc:	6082      	str	r2, [r0, #8]
 80136fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013702:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013706:	f8ac 6000 	strh.w	r6, [ip]
 801370a:	2700      	movs	r7, #0
 801370c:	45b6      	cmp	lr, r6
 801370e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013712:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013716:	f8ac 7006 	strh.w	r7, [ip, #6]
 801371a:	442b      	add	r3, r5
 801371c:	d04d      	beq.n	80137ba <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801371e:	9f04      	ldr	r7, [sp, #16]
 8013720:	1aff      	subs	r7, r7, r3
 8013722:	443d      	add	r5, r7
 8013724:	016d      	lsls	r5, r5, #5
 8013726:	fb95 f8f1 	sdiv	r8, r5, r1
 801372a:	fb01 5518 	mls	r5, r1, r8, r5
 801372e:	2d00      	cmp	r5, #0
 8013730:	bfb8      	it	lt
 8013732:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013736:	f108 0701 	add.w	r7, r8, #1
 801373a:	bfb8      	it	lt
 801373c:	186d      	addlt	r5, r5, r1
 801373e:	1a64      	subs	r4, r4, r1
 8013740:	9703      	str	r7, [sp, #12]
 8013742:	f04f 0a00 	mov.w	sl, #0
 8013746:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801374a:	1964      	adds	r4, r4, r5
 801374c:	bf58      	it	pl
 801374e:	9f03      	ldrpl	r7, [sp, #12]
 8013750:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013754:	bf48      	it	mi
 8013756:	4647      	movmi	r7, r8
 8013758:	44bb      	add	fp, r7
 801375a:	f8ac b004 	strh.w	fp, [ip, #4]
 801375e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013762:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013766:	f8ac b006 	strh.w	fp, [ip, #6]
 801376a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801376e:	443b      	add	r3, r7
 8013770:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013774:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013778:	bf58      	it	pl
 801377a:	1a64      	subpl	r4, r4, r1
 801377c:	ea5b 0707 	orrs.w	r7, fp, r7
 8013780:	444e      	add	r6, r9
 8013782:	d011      	beq.n	80137a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013784:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013788:	f1bb 0f00 	cmp.w	fp, #0
 801378c:	db0c      	blt.n	80137a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801378e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013790:	45bb      	cmp	fp, r7
 8013792:	da09      	bge.n	80137a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013794:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013798:	45bb      	cmp	fp, r7
 801379a:	bf3c      	itt	cc
 801379c:	f10c 0708 	addcc.w	r7, ip, #8
 80137a0:	6107      	strcc	r7, [r0, #16]
 80137a2:	f10b 0701 	add.w	r7, fp, #1
 80137a6:	6087      	str	r7, [r0, #8]
 80137a8:	6907      	ldr	r7, [r0, #16]
 80137aa:	45b6      	cmp	lr, r6
 80137ac:	803e      	strh	r6, [r7, #0]
 80137ae:	807a      	strh	r2, [r7, #2]
 80137b0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80137b4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80137b8:	d1c5      	bne.n	8013746 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80137ba:	9a04      	ldr	r2, [sp, #16]
 80137bc:	1ad3      	subs	r3, r2, r3
 80137be:	6902      	ldr	r2, [r0, #16]
 80137c0:	8891      	ldrh	r1, [r2, #4]
 80137c2:	88d6      	ldrh	r6, [r2, #6]
 80137c4:	4419      	add	r1, r3
 80137c6:	8091      	strh	r1, [r2, #4]
 80137c8:	9902      	ldr	r1, [sp, #8]
 80137ca:	f101 0c20 	add.w	ip, r1, #32
 80137ce:	9901      	ldr	r1, [sp, #4]
 80137d0:	ebac 0c01 	sub.w	ip, ip, r1
 80137d4:	fb03 630c 	mla	r3, r3, ip, r6
 80137d8:	80d3      	strh	r3, [r2, #6]
 80137da:	e74c      	b.n	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80137dc:	9d05      	ldr	r5, [sp, #20]
 80137de:	1aa2      	subs	r2, r4, r2
 80137e0:	eba5 0501 	sub.w	r5, r5, r1
 80137e4:	9508      	str	r5, [sp, #32]
 80137e6:	9202      	str	r2, [sp, #8]
 80137e8:	f140 8128 	bpl.w	8013a3c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80137ec:	9a03      	ldr	r2, [sp, #12]
 80137ee:	2a00      	cmp	r2, #0
 80137f0:	f6ff af41 	blt.w	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80137f4:	9a02      	ldr	r2, [sp, #8]
 80137f6:	4252      	negs	r2, r2
 80137f8:	9202      	str	r2, [sp, #8]
 80137fa:	9a06      	ldr	r2, [sp, #24]
 80137fc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013800:	f04f 34ff 	mov.w	r4, #4294967295
 8013804:	9206      	str	r2, [sp, #24]
 8013806:	462a      	mov	r2, r5
 8013808:	940b      	str	r4, [sp, #44]	; 0x2c
 801380a:	435a      	muls	r2, r3
 801380c:	2400      	movs	r4, #0
 801380e:	9d02      	ldr	r5, [sp, #8]
 8013810:	9401      	str	r4, [sp, #4]
 8013812:	9c02      	ldr	r4, [sp, #8]
 8013814:	fb92 f4f4 	sdiv	r4, r2, r4
 8013818:	fb05 2214 	mls	r2, r5, r4, r2
 801381c:	2a00      	cmp	r2, #0
 801381e:	9207      	str	r2, [sp, #28]
 8013820:	bfbc      	itt	lt
 8013822:	1952      	addlt	r2, r2, r5
 8013824:	9207      	strlt	r2, [sp, #28]
 8013826:	9a01      	ldr	r2, [sp, #4]
 8013828:	6905      	ldr	r5, [r0, #16]
 801382a:	bfb8      	it	lt
 801382c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013830:	eb04 0901 	add.w	r9, r4, r1
 8013834:	429a      	cmp	r2, r3
 8013836:	ea4f 1669 	mov.w	r6, r9, asr #5
 801383a:	f040 8112 	bne.w	8013a62 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801383e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8013842:	429e      	cmp	r6, r3
 8013844:	d104      	bne.n	8013850 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8013846:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801384a:	9a03      	ldr	r2, [sp, #12]
 801384c:	429a      	cmp	r2, r3
 801384e:	d01b      	beq.n	8013888 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013850:	88ea      	ldrh	r2, [r5, #6]
 8013852:	88ab      	ldrh	r3, [r5, #4]
 8013854:	4313      	orrs	r3, r2
 8013856:	d010      	beq.n	801387a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013858:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801385c:	2a00      	cmp	r2, #0
 801385e:	db0c      	blt.n	801387a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013860:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013862:	429a      	cmp	r2, r3
 8013864:	da09      	bge.n	801387a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013866:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801386a:	429a      	cmp	r2, r3
 801386c:	bf38      	it	cc
 801386e:	3508      	addcc	r5, #8
 8013870:	f102 0201 	add.w	r2, r2, #1
 8013874:	bf38      	it	cc
 8013876:	6105      	strcc	r5, [r0, #16]
 8013878:	6082      	str	r2, [r0, #8]
 801387a:	6903      	ldr	r3, [r0, #16]
 801387c:	9a03      	ldr	r2, [sp, #12]
 801387e:	805a      	strh	r2, [r3, #2]
 8013880:	2200      	movs	r2, #0
 8013882:	801e      	strh	r6, [r3, #0]
 8013884:	809a      	strh	r2, [r3, #4]
 8013886:	80da      	strh	r2, [r3, #6]
 8013888:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801388a:	9a03      	ldr	r2, [sp, #12]
 801388c:	6901      	ldr	r1, [r0, #16]
 801388e:	441a      	add	r2, r3
 8013890:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013894:	42b3      	cmp	r3, r6
 8013896:	d103      	bne.n	80138a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013898:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801389c:	429a      	cmp	r2, r3
 801389e:	d01a      	beq.n	80138d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80138a0:	88cc      	ldrh	r4, [r1, #6]
 80138a2:	888b      	ldrh	r3, [r1, #4]
 80138a4:	4323      	orrs	r3, r4
 80138a6:	d010      	beq.n	80138ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80138a8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80138ac:	2c00      	cmp	r4, #0
 80138ae:	db0c      	blt.n	80138ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80138b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80138b2:	429c      	cmp	r4, r3
 80138b4:	da09      	bge.n	80138ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80138b6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80138ba:	429c      	cmp	r4, r3
 80138bc:	bf38      	it	cc
 80138be:	3108      	addcc	r1, #8
 80138c0:	f104 0401 	add.w	r4, r4, #1
 80138c4:	bf38      	it	cc
 80138c6:	6101      	strcc	r1, [r0, #16]
 80138c8:	6084      	str	r4, [r0, #8]
 80138ca:	6903      	ldr	r3, [r0, #16]
 80138cc:	2100      	movs	r1, #0
 80138ce:	801e      	strh	r6, [r3, #0]
 80138d0:	805a      	strh	r2, [r3, #2]
 80138d2:	8099      	strh	r1, [r3, #4]
 80138d4:	80d9      	strh	r1, [r3, #6]
 80138d6:	9b06      	ldr	r3, [sp, #24]
 80138d8:	4293      	cmp	r3, r2
 80138da:	f000 8082 	beq.w	80139e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80138de:	9b08      	ldr	r3, [sp, #32]
 80138e0:	9c02      	ldr	r4, [sp, #8]
 80138e2:	9902      	ldr	r1, [sp, #8]
 80138e4:	015b      	lsls	r3, r3, #5
 80138e6:	fb93 f1f1 	sdiv	r1, r3, r1
 80138ea:	fb04 3311 	mls	r3, r4, r1, r3
 80138ee:	2b00      	cmp	r3, #0
 80138f0:	9103      	str	r1, [sp, #12]
 80138f2:	9308      	str	r3, [sp, #32]
 80138f4:	da04      	bge.n	8013900 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80138f6:	1e4b      	subs	r3, r1, #1
 80138f8:	9303      	str	r3, [sp, #12]
 80138fa:	9b08      	ldr	r3, [sp, #32]
 80138fc:	4423      	add	r3, r4
 80138fe:	9308      	str	r3, [sp, #32]
 8013900:	9b07      	ldr	r3, [sp, #28]
 8013902:	9902      	ldr	r1, [sp, #8]
 8013904:	1a5b      	subs	r3, r3, r1
 8013906:	9307      	str	r3, [sp, #28]
 8013908:	9b01      	ldr	r3, [sp, #4]
 801390a:	f1c3 0320 	rsb	r3, r3, #32
 801390e:	930e      	str	r3, [sp, #56]	; 0x38
 8013910:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013912:	9b01      	ldr	r3, [sp, #4]
 8013914:	1a5b      	subs	r3, r3, r1
 8013916:	464f      	mov	r7, r9
 8013918:	930a      	str	r3, [sp, #40]	; 0x28
 801391a:	2600      	movs	r6, #0
 801391c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013920:	185b      	adds	r3, r3, r1
 8013922:	bf58      	it	pl
 8013924:	9902      	ldrpl	r1, [sp, #8]
 8013926:	9307      	str	r3, [sp, #28]
 8013928:	bf5d      	ittte	pl
 801392a:	1a5b      	subpl	r3, r3, r1
 801392c:	9307      	strpl	r3, [sp, #28]
 801392e:	9b03      	ldrpl	r3, [sp, #12]
 8013930:	9903      	ldrmi	r1, [sp, #12]
 8013932:	bf58      	it	pl
 8013934:	1c59      	addpl	r1, r3, #1
 8013936:	4489      	add	r9, r1
 8013938:	2a00      	cmp	r2, #0
 801393a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801393e:	db2e      	blt.n	801399e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013940:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013942:	4293      	cmp	r3, r2
 8013944:	dd2b      	ble.n	801399e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013946:	9c01      	ldr	r4, [sp, #4]
 8013948:	6905      	ldr	r5, [r0, #16]
 801394a:	46a0      	mov	r8, r4
 801394c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801394e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013952:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013956:	45a0      	cmp	r8, r4
 8013958:	f040 814f 	bne.w	8013bfa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801395c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013960:	4551      	cmp	r1, sl
 8013962:	d103      	bne.n	801396c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013964:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013968:	4291      	cmp	r1, r2
 801396a:	d018      	beq.n	801399e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801396c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013970:	d00f      	beq.n	8013992 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013972:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013976:	2900      	cmp	r1, #0
 8013978:	db0b      	blt.n	8013992 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801397a:	428b      	cmp	r3, r1
 801397c:	dd09      	ble.n	8013992 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801397e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013982:	4299      	cmp	r1, r3
 8013984:	bf38      	it	cc
 8013986:	3508      	addcc	r5, #8
 8013988:	f101 0101 	add.w	r1, r1, #1
 801398c:	bf38      	it	cc
 801398e:	6105      	strcc	r5, [r0, #16]
 8013990:	6081      	str	r1, [r0, #8]
 8013992:	6903      	ldr	r3, [r0, #16]
 8013994:	f8a3 a000 	strh.w	sl, [r3]
 8013998:	805a      	strh	r2, [r3, #2]
 801399a:	809e      	strh	r6, [r3, #4]
 801399c:	80de      	strh	r6, [r3, #6]
 801399e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139a0:	6901      	ldr	r1, [r0, #16]
 80139a2:	441a      	add	r2, r3
 80139a4:	88cc      	ldrh	r4, [r1, #6]
 80139a6:	888b      	ldrh	r3, [r1, #4]
 80139a8:	4323      	orrs	r3, r4
 80139aa:	d010      	beq.n	80139ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80139ac:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80139b0:	2c00      	cmp	r4, #0
 80139b2:	db0c      	blt.n	80139ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80139b4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80139b6:	429c      	cmp	r4, r3
 80139b8:	da09      	bge.n	80139ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80139ba:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80139be:	429c      	cmp	r4, r3
 80139c0:	bf38      	it	cc
 80139c2:	3108      	addcc	r1, #8
 80139c4:	f104 0401 	add.w	r4, r4, #1
 80139c8:	bf38      	it	cc
 80139ca:	6101      	strcc	r1, [r0, #16]
 80139cc:	6084      	str	r4, [r0, #8]
 80139ce:	6903      	ldr	r3, [r0, #16]
 80139d0:	f8a3 a000 	strh.w	sl, [r3]
 80139d4:	805a      	strh	r2, [r3, #2]
 80139d6:	809e      	strh	r6, [r3, #4]
 80139d8:	80de      	strh	r6, [r3, #6]
 80139da:	9b06      	ldr	r3, [sp, #24]
 80139dc:	4293      	cmp	r3, r2
 80139de:	464f      	mov	r7, r9
 80139e0:	d19c      	bne.n	801391c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80139e2:	9b01      	ldr	r3, [sp, #4]
 80139e4:	6907      	ldr	r7, [r0, #16]
 80139e6:	f1c3 0620 	rsb	r6, r3, #32
 80139ea:	9b05      	ldr	r3, [sp, #20]
 80139ec:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80139f0:	9b04      	ldr	r3, [sp, #16]
 80139f2:	429e      	cmp	r6, r3
 80139f4:	f040 81cc 	bne.w	8013d90 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80139f8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80139fc:	459e      	cmp	lr, r3
 80139fe:	d104      	bne.n	8013a0a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013a00:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013a04:	429a      	cmp	r2, r3
 8013a06:	f43f ae36 	beq.w	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013a0a:	88f9      	ldrh	r1, [r7, #6]
 8013a0c:	88bb      	ldrh	r3, [r7, #4]
 8013a0e:	430b      	orrs	r3, r1
 8013a10:	d010      	beq.n	8013a34 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013a12:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013a16:	2b00      	cmp	r3, #0
 8013a18:	db0c      	blt.n	8013a34 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013a1a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013a1c:	428b      	cmp	r3, r1
 8013a1e:	da09      	bge.n	8013a34 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013a20:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013a24:	428b      	cmp	r3, r1
 8013a26:	bf38      	it	cc
 8013a28:	3708      	addcc	r7, #8
 8013a2a:	f103 0301 	add.w	r3, r3, #1
 8013a2e:	bf38      	it	cc
 8013a30:	6107      	strcc	r7, [r0, #16]
 8013a32:	6083      	str	r3, [r0, #8]
 8013a34:	6903      	ldr	r3, [r0, #16]
 8013a36:	f8a3 e000 	strh.w	lr, [r3]
 8013a3a:	e5ff      	b.n	801363c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013a3c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013a3e:	9c03      	ldr	r4, [sp, #12]
 8013a40:	42a2      	cmp	r2, r4
 8013a42:	f6ff ae18 	blt.w	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013a46:	9c06      	ldr	r4, [sp, #24]
 8013a48:	42a2      	cmp	r2, r4
 8013a4a:	bfb8      	it	lt
 8013a4c:	3201      	addlt	r2, #1
 8013a4e:	9c08      	ldr	r4, [sp, #32]
 8013a50:	bfb8      	it	lt
 8013a52:	9206      	strlt	r2, [sp, #24]
 8013a54:	f1c3 0220 	rsb	r2, r3, #32
 8013a58:	4362      	muls	r2, r4
 8013a5a:	2401      	movs	r4, #1
 8013a5c:	940b      	str	r4, [sp, #44]	; 0x2c
 8013a5e:	2420      	movs	r4, #32
 8013a60:	e6d5      	b.n	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013a62:	f009 021f 	and.w	r2, r9, #31
 8013a66:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013a6a:	920c      	str	r2, [sp, #48]	; 0x30
 8013a6c:	9a01      	ldr	r2, [sp, #4]
 8013a6e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013a72:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013a76:	45b0      	cmp	r8, r6
 8013a78:	f001 011f 	and.w	r1, r1, #31
 8013a7c:	eba2 0203 	sub.w	r2, r2, r3
 8013a80:	d108      	bne.n	8013a94 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013a82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a84:	4419      	add	r1, r3
 8013a86:	4496      	add	lr, r2
 8013a88:	fb02 a101 	mla	r1, r2, r1, sl
 8013a8c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013a90:	80e9      	strh	r1, [r5, #6]
 8013a92:	e6f9      	b.n	8013888 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013a94:	2c00      	cmp	r4, #0
 8013a96:	f2c0 80a9 	blt.w	8013bec <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013a9a:	2701      	movs	r7, #1
 8013a9c:	f1c1 0c20 	rsb	ip, r1, #32
 8013aa0:	970a      	str	r7, [sp, #40]	; 0x28
 8013aa2:	fb02 f20c 	mul.w	r2, r2, ip
 8013aa6:	2720      	movs	r7, #32
 8013aa8:	9709      	str	r7, [sp, #36]	; 0x24
 8013aaa:	fb92 fcf4 	sdiv	ip, r2, r4
 8013aae:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013ab0:	fb04 221c 	mls	r2, r4, ip, r2
 8013ab4:	2a00      	cmp	r2, #0
 8013ab6:	bfb8      	it	lt
 8013ab8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013abc:	4439      	add	r1, r7
 8013abe:	fb0c a101 	mla	r1, ip, r1, sl
 8013ac2:	80e9      	strh	r1, [r5, #6]
 8013ac4:	44e6      	add	lr, ip
 8013ac6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013ac8:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013acc:	eb08 0501 	add.w	r5, r8, r1
 8013ad0:	6901      	ldr	r1, [r0, #16]
 8013ad2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013ad6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013ada:	bfb8      	it	lt
 8013adc:	1912      	addlt	r2, r2, r4
 8013ade:	ea58 070e 	orrs.w	r7, r8, lr
 8013ae2:	d010      	beq.n	8013b06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013ae4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013ae8:	f1be 0f00 	cmp.w	lr, #0
 8013aec:	db0b      	blt.n	8013b06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013aee:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013af0:	45be      	cmp	lr, r7
 8013af2:	da08      	bge.n	8013b06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013af4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013af8:	45be      	cmp	lr, r7
 8013afa:	bf3c      	itt	cc
 8013afc:	3108      	addcc	r1, #8
 8013afe:	6101      	strcc	r1, [r0, #16]
 8013b00:	f10e 0101 	add.w	r1, lr, #1
 8013b04:	6081      	str	r1, [r0, #8]
 8013b06:	6901      	ldr	r1, [r0, #16]
 8013b08:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013b0c:	800d      	strh	r5, [r1, #0]
 8013b0e:	f04f 0e00 	mov.w	lr, #0
 8013b12:	42ae      	cmp	r6, r5
 8013b14:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013b18:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013b1c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013b20:	4463      	add	r3, ip
 8013b22:	d054      	beq.n	8013bce <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013b24:	9901      	ldr	r1, [sp, #4]
 8013b26:	1ac9      	subs	r1, r1, r3
 8013b28:	4461      	add	r1, ip
 8013b2a:	0149      	lsls	r1, r1, #5
 8013b2c:	fb91 fef4 	sdiv	lr, r1, r4
 8013b30:	fb04 111e 	mls	r1, r4, lr, r1
 8013b34:	2900      	cmp	r1, #0
 8013b36:	bfb8      	it	lt
 8013b38:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013b3c:	f10e 0701 	add.w	r7, lr, #1
 8013b40:	bfb8      	it	lt
 8013b42:	1909      	addlt	r1, r1, r4
 8013b44:	1b12      	subs	r2, r2, r4
 8013b46:	970d      	str	r7, [sp, #52]	; 0x34
 8013b48:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013b4c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013b4e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013b52:	1852      	adds	r2, r2, r1
 8013b54:	bf54      	ite	pl
 8013b56:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013b5a:	46f4      	movmi	ip, lr
 8013b5c:	44e3      	add	fp, ip
 8013b5e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013b62:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013b66:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013b6a:	f8aa b006 	strh.w	fp, [sl, #6]
 8013b6e:	4463      	add	r3, ip
 8013b70:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013b74:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013b78:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013b7c:	bf58      	it	pl
 8013b7e:	1b12      	subpl	r2, r2, r4
 8013b80:	443d      	add	r5, r7
 8013b82:	ea5b 070a 	orrs.w	r7, fp, sl
 8013b86:	d014      	beq.n	8013bb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013b88:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013b8c:	f1ba 0f00 	cmp.w	sl, #0
 8013b90:	db0f      	blt.n	8013bb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013b92:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013b94:	45ba      	cmp	sl, r7
 8013b96:	da0c      	bge.n	8013bb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013b98:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013b9c:	45ba      	cmp	sl, r7
 8013b9e:	bf38      	it	cc
 8013ba0:	f10c 0c08 	addcc.w	ip, ip, #8
 8013ba4:	f10a 0a01 	add.w	sl, sl, #1
 8013ba8:	bf38      	it	cc
 8013baa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013bae:	f8c0 a008 	str.w	sl, [r0, #8]
 8013bb2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013bb6:	f04f 0700 	mov.w	r7, #0
 8013bba:	42ae      	cmp	r6, r5
 8013bbc:	f8ac 5000 	strh.w	r5, [ip]
 8013bc0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013bc4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013bc8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013bcc:	d1bc      	bne.n	8013b48 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013bce:	6904      	ldr	r4, [r0, #16]
 8013bd0:	9a01      	ldr	r2, [sp, #4]
 8013bd2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013bd4:	1ad3      	subs	r3, r2, r3
 8013bd6:	88a2      	ldrh	r2, [r4, #4]
 8013bd8:	441a      	add	r2, r3
 8013bda:	80a2      	strh	r2, [r4, #4]
 8013bdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013bde:	3120      	adds	r1, #32
 8013be0:	1a89      	subs	r1, r1, r2
 8013be2:	88e2      	ldrh	r2, [r4, #6]
 8013be4:	fb03 2301 	mla	r3, r3, r1, r2
 8013be8:	80e3      	strh	r3, [r4, #6]
 8013bea:	e64d      	b.n	8013888 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013bec:	f04f 37ff 	mov.w	r7, #4294967295
 8013bf0:	970a      	str	r7, [sp, #40]	; 0x28
 8013bf2:	434a      	muls	r2, r1
 8013bf4:	4264      	negs	r4, r4
 8013bf6:	2700      	movs	r7, #0
 8013bf8:	e756      	b.n	8013aa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013bfa:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013bfe:	f009 031f 	and.w	r3, r9, #31
 8013c02:	45d0      	cmp	r8, sl
 8013c04:	f007 071f 	and.w	r7, r7, #31
 8013c08:	930f      	str	r3, [sp, #60]	; 0x3c
 8013c0a:	fa1f fc8c 	uxth.w	ip, ip
 8013c0e:	fa1f fe8e 	uxth.w	lr, lr
 8013c12:	d10a      	bne.n	8013c2a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013c14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013c16:	449c      	add	ip, r3
 8013c18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013c1a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013c1e:	441f      	add	r7, r3
 8013c20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013c22:	fb03 e707 	mla	r7, r3, r7, lr
 8013c26:	80ef      	strh	r7, [r5, #6]
 8013c28:	e6b9      	b.n	801399e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013c2a:	2900      	cmp	r1, #0
 8013c2c:	f2c0 80a8 	blt.w	8013d80 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013c30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013c32:	f1c7 0320 	rsb	r3, r7, #32
 8013c36:	4363      	muls	r3, r4
 8013c38:	2401      	movs	r4, #1
 8013c3a:	940d      	str	r4, [sp, #52]	; 0x34
 8013c3c:	2420      	movs	r4, #32
 8013c3e:	940c      	str	r4, [sp, #48]	; 0x30
 8013c40:	fb93 f4f1 	sdiv	r4, r3, r1
 8013c44:	fb01 3b14 	mls	fp, r1, r4, r3
 8013c48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c4a:	f1bb 0f00 	cmp.w	fp, #0
 8013c4e:	bfb8      	it	lt
 8013c50:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013c54:	441f      	add	r7, r3
 8013c56:	fb04 e707 	mla	r7, r4, r7, lr
 8013c5a:	44a4      	add	ip, r4
 8013c5c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013c60:	80ef      	strh	r7, [r5, #6]
 8013c62:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c68:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013c6c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013c70:	bfb8      	it	lt
 8013c72:	448b      	addlt	fp, r1
 8013c74:	eb08 0503 	add.w	r5, r8, r3
 8013c78:	ea5e 0307 	orrs.w	r3, lr, r7
 8013c7c:	d011      	beq.n	8013ca2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013c7e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013c82:	f1be 0f00 	cmp.w	lr, #0
 8013c86:	db0c      	blt.n	8013ca2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013c88:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013c8a:	45be      	cmp	lr, r7
 8013c8c:	da09      	bge.n	8013ca2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013c8e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013c92:	45be      	cmp	lr, r7
 8013c94:	bf3c      	itt	cc
 8013c96:	f10c 0708 	addcc.w	r7, ip, #8
 8013c9a:	6107      	strcc	r7, [r0, #16]
 8013c9c:	f10e 0701 	add.w	r7, lr, #1
 8013ca0:	6087      	str	r7, [r0, #8]
 8013ca2:	6907      	ldr	r7, [r0, #16]
 8013ca4:	b213      	sxth	r3, r2
 8013ca6:	9310      	str	r3, [sp, #64]	; 0x40
 8013ca8:	807b      	strh	r3, [r7, #2]
 8013caa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013cac:	803d      	strh	r5, [r7, #0]
 8013cae:	4555      	cmp	r5, sl
 8013cb0:	80be      	strh	r6, [r7, #4]
 8013cb2:	80fe      	strh	r6, [r7, #6]
 8013cb4:	eb04 0c03 	add.w	ip, r4, r3
 8013cb8:	d051      	beq.n	8013d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013cba:	9b01      	ldr	r3, [sp, #4]
 8013cbc:	eba3 070c 	sub.w	r7, r3, ip
 8013cc0:	443c      	add	r4, r7
 8013cc2:	0164      	lsls	r4, r4, #5
 8013cc4:	fb94 f8f1 	sdiv	r8, r4, r1
 8013cc8:	fb01 4418 	mls	r4, r1, r8, r4
 8013ccc:	2c00      	cmp	r4, #0
 8013cce:	bfb8      	it	lt
 8013cd0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013cd4:	ebab 0301 	sub.w	r3, fp, r1
 8013cd8:	f108 0701 	add.w	r7, r8, #1
 8013cdc:	bfb8      	it	lt
 8013cde:	1864      	addlt	r4, r4, r1
 8013ce0:	9309      	str	r3, [sp, #36]	; 0x24
 8013ce2:	9711      	str	r7, [sp, #68]	; 0x44
 8013ce4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ce6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013cea:	191b      	adds	r3, r3, r4
 8013cec:	bf58      	it	pl
 8013cee:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013cf0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013cf4:	9309      	str	r3, [sp, #36]	; 0x24
 8013cf6:	bf48      	it	mi
 8013cf8:	4647      	movmi	r7, r8
 8013cfa:	44bb      	add	fp, r7
 8013cfc:	f8ae b004 	strh.w	fp, [lr, #4]
 8013d00:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013d04:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013d08:	f8ae b006 	strh.w	fp, [lr, #6]
 8013d0c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013d10:	44bc      	add	ip, r7
 8013d12:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013d14:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013d18:	443d      	add	r5, r7
 8013d1a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013d1e:	bf5c      	itt	pl
 8013d20:	1a5b      	subpl	r3, r3, r1
 8013d22:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013d24:	ea5b 0307 	orrs.w	r3, fp, r7
 8013d28:	d011      	beq.n	8013d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013d2a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013d2e:	f1bb 0f00 	cmp.w	fp, #0
 8013d32:	db0c      	blt.n	8013d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013d34:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013d36:	45bb      	cmp	fp, r7
 8013d38:	da09      	bge.n	8013d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013d3a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013d3e:	45bb      	cmp	fp, r7
 8013d40:	bf3c      	itt	cc
 8013d42:	f10e 0708 	addcc.w	r7, lr, #8
 8013d46:	6107      	strcc	r7, [r0, #16]
 8013d48:	f10b 0701 	add.w	r7, fp, #1
 8013d4c:	6087      	str	r7, [r0, #8]
 8013d4e:	6907      	ldr	r7, [r0, #16]
 8013d50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d52:	803d      	strh	r5, [r7, #0]
 8013d54:	4555      	cmp	r5, sl
 8013d56:	807b      	strh	r3, [r7, #2]
 8013d58:	80be      	strh	r6, [r7, #4]
 8013d5a:	80fe      	strh	r6, [r7, #6]
 8013d5c:	d1c2      	bne.n	8013ce4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013d5e:	9b01      	ldr	r3, [sp, #4]
 8013d60:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013d62:	eba3 0c0c 	sub.w	ip, r3, ip
 8013d66:	6903      	ldr	r3, [r0, #16]
 8013d68:	8899      	ldrh	r1, [r3, #4]
 8013d6a:	4461      	add	r1, ip
 8013d6c:	8099      	strh	r1, [r3, #4]
 8013d6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013d70:	3720      	adds	r7, #32
 8013d72:	1a7f      	subs	r7, r7, r1
 8013d74:	88d9      	ldrh	r1, [r3, #6]
 8013d76:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013d7a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013d7e:	e60e      	b.n	801399e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013d80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013d82:	f04f 34ff 	mov.w	r4, #4294967295
 8013d86:	940d      	str	r4, [sp, #52]	; 0x34
 8013d88:	437b      	muls	r3, r7
 8013d8a:	4249      	negs	r1, r1
 8013d8c:	2400      	movs	r4, #0
 8013d8e:	e756      	b.n	8013c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013d90:	9905      	ldr	r1, [sp, #20]
 8013d92:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013d96:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013d9a:	f001 011f 	and.w	r1, r1, #31
 8013d9e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013da2:	9102      	str	r1, [sp, #8]
 8013da4:	9904      	ldr	r1, [sp, #16]
 8013da6:	45f3      	cmp	fp, lr
 8013da8:	f009 0c1f 	and.w	ip, r9, #31
 8013dac:	eba1 0406 	sub.w	r4, r1, r6
 8013db0:	d108      	bne.n	8013dc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013db2:	9b02      	ldr	r3, [sp, #8]
 8013db4:	449c      	add	ip, r3
 8013db6:	44a0      	add	r8, r4
 8013db8:	fb04 a40c 	mla	r4, r4, ip, sl
 8013dbc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013dc0:	80fc      	strh	r4, [r7, #6]
 8013dc2:	e458      	b.n	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013dc4:	9905      	ldr	r1, [sp, #20]
 8013dc6:	ebb1 0109 	subs.w	r1, r1, r9
 8013dca:	bf5b      	ittet	pl
 8013dcc:	f1cc 0520 	rsbpl	r5, ip, #32
 8013dd0:	436c      	mulpl	r4, r5
 8013dd2:	2500      	movmi	r5, #0
 8013dd4:	2520      	movpl	r5, #32
 8013dd6:	bf44      	itt	mi
 8013dd8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013ddc:	4249      	negmi	r1, r1
 8013dde:	9501      	str	r5, [sp, #4]
 8013de0:	9b01      	ldr	r3, [sp, #4]
 8013de2:	fb94 f5f1 	sdiv	r5, r4, r1
 8013de6:	fb01 4415 	mls	r4, r1, r5, r4
 8013dea:	bf54      	ite	pl
 8013dec:	f04f 0901 	movpl.w	r9, #1
 8013df0:	f04f 39ff 	movmi.w	r9, #4294967295
 8013df4:	2c00      	cmp	r4, #0
 8013df6:	bfb8      	it	lt
 8013df8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013dfc:	449c      	add	ip, r3
 8013dfe:	44a8      	add	r8, r5
 8013e00:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013e04:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013e08:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013e0c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013e10:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013e14:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013e18:	bfb8      	it	lt
 8013e1a:	1864      	addlt	r4, r4, r1
 8013e1c:	ea58 0707 	orrs.w	r7, r8, r7
 8013e20:	eb0b 0309 	add.w	r3, fp, r9
 8013e24:	d011      	beq.n	8013e4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013e26:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013e2a:	f1b8 0f00 	cmp.w	r8, #0
 8013e2e:	db0c      	blt.n	8013e4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013e30:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013e32:	45b8      	cmp	r8, r7
 8013e34:	da09      	bge.n	8013e4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013e36:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013e3a:	45b8      	cmp	r8, r7
 8013e3c:	bf3c      	itt	cc
 8013e3e:	f10c 0708 	addcc.w	r7, ip, #8
 8013e42:	6107      	strcc	r7, [r0, #16]
 8013e44:	f108 0701 	add.w	r7, r8, #1
 8013e48:	6087      	str	r7, [r0, #8]
 8013e4a:	6907      	ldr	r7, [r0, #16]
 8013e4c:	f04f 0c00 	mov.w	ip, #0
 8013e50:	b212      	sxth	r2, r2
 8013e52:	459e      	cmp	lr, r3
 8013e54:	803b      	strh	r3, [r7, #0]
 8013e56:	807a      	strh	r2, [r7, #2]
 8013e58:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013e5c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013e60:	442e      	add	r6, r5
 8013e62:	d04d      	beq.n	8013f00 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013e64:	9f04      	ldr	r7, [sp, #16]
 8013e66:	1bbf      	subs	r7, r7, r6
 8013e68:	443d      	add	r5, r7
 8013e6a:	016d      	lsls	r5, r5, #5
 8013e6c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013e70:	fb01 5518 	mls	r5, r1, r8, r5
 8013e74:	4565      	cmp	r5, ip
 8013e76:	bfb8      	it	lt
 8013e78:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013e7c:	f108 0701 	add.w	r7, r8, #1
 8013e80:	bfb8      	it	lt
 8013e82:	186d      	addlt	r5, r5, r1
 8013e84:	1a64      	subs	r4, r4, r1
 8013e86:	9703      	str	r7, [sp, #12]
 8013e88:	f04f 0a00 	mov.w	sl, #0
 8013e8c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013e90:	1964      	adds	r4, r4, r5
 8013e92:	bf58      	it	pl
 8013e94:	9f03      	ldrpl	r7, [sp, #12]
 8013e96:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013e9a:	bf48      	it	mi
 8013e9c:	4647      	movmi	r7, r8
 8013e9e:	44bb      	add	fp, r7
 8013ea0:	f8ac b004 	strh.w	fp, [ip, #4]
 8013ea4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013ea8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013eac:	f8ac b006 	strh.w	fp, [ip, #6]
 8013eb0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013eb4:	443e      	add	r6, r7
 8013eb6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013eba:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013ebe:	bf58      	it	pl
 8013ec0:	1a64      	subpl	r4, r4, r1
 8013ec2:	ea5b 0707 	orrs.w	r7, fp, r7
 8013ec6:	444b      	add	r3, r9
 8013ec8:	d011      	beq.n	8013eee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013eca:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013ece:	f1bb 0f00 	cmp.w	fp, #0
 8013ed2:	db0c      	blt.n	8013eee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013ed4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ed6:	45bb      	cmp	fp, r7
 8013ed8:	da09      	bge.n	8013eee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013eda:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013ede:	45bb      	cmp	fp, r7
 8013ee0:	bf3c      	itt	cc
 8013ee2:	f10c 0708 	addcc.w	r7, ip, #8
 8013ee6:	6107      	strcc	r7, [r0, #16]
 8013ee8:	f10b 0701 	add.w	r7, fp, #1
 8013eec:	6087      	str	r7, [r0, #8]
 8013eee:	6907      	ldr	r7, [r0, #16]
 8013ef0:	459e      	cmp	lr, r3
 8013ef2:	803b      	strh	r3, [r7, #0]
 8013ef4:	807a      	strh	r2, [r7, #2]
 8013ef6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013efa:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013efe:	d1c5      	bne.n	8013e8c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013f00:	9b04      	ldr	r3, [sp, #16]
 8013f02:	1b9e      	subs	r6, r3, r6
 8013f04:	6903      	ldr	r3, [r0, #16]
 8013f06:	889a      	ldrh	r2, [r3, #4]
 8013f08:	4432      	add	r2, r6
 8013f0a:	809a      	strh	r2, [r3, #4]
 8013f0c:	9a02      	ldr	r2, [sp, #8]
 8013f0e:	f102 0c20 	add.w	ip, r2, #32
 8013f12:	9a01      	ldr	r2, [sp, #4]
 8013f14:	ebac 0c02 	sub.w	ip, ip, r2
 8013f18:	88da      	ldrh	r2, [r3, #6]
 8013f1a:	fb06 260c 	mla	r6, r6, ip, r2
 8013f1e:	80de      	strh	r6, [r3, #6]
 8013f20:	f7ff bba9 	b.w	8013676 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013f24 <_ZN8touchgfx7Outline6lineToEii>:
 8013f24:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013f26:	079b      	lsls	r3, r3, #30
 8013f28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013f2a:	460e      	mov	r6, r1
 8013f2c:	4615      	mov	r5, r2
 8013f2e:	d511      	bpl.n	8013f54 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013f30:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013f34:	ea86 0701 	eor.w	r7, r6, r1
 8013f38:	ea85 0302 	eor.w	r3, r5, r2
 8013f3c:	433b      	orrs	r3, r7
 8013f3e:	d009      	beq.n	8013f54 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013f40:	4633      	mov	r3, r6
 8013f42:	9500      	str	r5, [sp, #0]
 8013f44:	f7ff fb3e 	bl	80135c4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013f48:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013f4a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013f4e:	f043 0301 	orr.w	r3, r3, #1
 8013f52:	6243      	str	r3, [r0, #36]	; 0x24
 8013f54:	b003      	add	sp, #12
 8013f56:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013f58 <_ZN8touchgfx7Outline6moveToEii>:
 8013f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013f5a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013f5c:	4615      	mov	r5, r2
 8013f5e:	079a      	lsls	r2, r3, #30
 8013f60:	4604      	mov	r4, r0
 8013f62:	460e      	mov	r6, r1
 8013f64:	d401      	bmi.n	8013f6a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013f66:	f7ff faf9 	bl	801355c <_ZN8touchgfx7Outline5resetEv>
 8013f6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013f6c:	07db      	lsls	r3, r3, #31
 8013f6e:	d504      	bpl.n	8013f7a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013f70:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013f74:	4620      	mov	r0, r4
 8013f76:	f7ff ffd5 	bl	8013f24 <_ZN8touchgfx7Outline6lineToEii>
 8013f7a:	6923      	ldr	r3, [r4, #16]
 8013f7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f80:	1170      	asrs	r0, r6, #5
 8013f82:	4290      	cmp	r0, r2
 8013f84:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013f88:	d103      	bne.n	8013f92 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8013f8a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013f8e:	4291      	cmp	r1, r2
 8013f90:	d01a      	beq.n	8013fc8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013f92:	88df      	ldrh	r7, [r3, #6]
 8013f94:	889a      	ldrh	r2, [r3, #4]
 8013f96:	433a      	orrs	r2, r7
 8013f98:	d010      	beq.n	8013fbc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013f9a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013f9e:	2a00      	cmp	r2, #0
 8013fa0:	db0c      	blt.n	8013fbc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013fa2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013fa4:	42ba      	cmp	r2, r7
 8013fa6:	da09      	bge.n	8013fbc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013fa8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8013fac:	42ba      	cmp	r2, r7
 8013fae:	bf38      	it	cc
 8013fb0:	3308      	addcc	r3, #8
 8013fb2:	f102 0201 	add.w	r2, r2, #1
 8013fb6:	bf38      	it	cc
 8013fb8:	6123      	strcc	r3, [r4, #16]
 8013fba:	60a2      	str	r2, [r4, #8]
 8013fbc:	6923      	ldr	r3, [r4, #16]
 8013fbe:	2200      	movs	r2, #0
 8013fc0:	8018      	strh	r0, [r3, #0]
 8013fc2:	8059      	strh	r1, [r3, #2]
 8013fc4:	809a      	strh	r2, [r3, #4]
 8013fc6:	80da      	strh	r2, [r3, #6]
 8013fc8:	6166      	str	r6, [r4, #20]
 8013fca:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8013fce:	6225      	str	r5, [r4, #32]
 8013fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013fd2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013fd2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013fd6:	b0d0      	sub	sp, #320	; 0x140
 8013fd8:	466c      	mov	r4, sp
 8013fda:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8013fde:	4627      	mov	r7, r4
 8013fe0:	1a0d      	subs	r5, r1, r0
 8013fe2:	2d48      	cmp	r5, #72	; 0x48
 8013fe4:	f100 0308 	add.w	r3, r0, #8
 8013fe8:	f340 80d5 	ble.w	8014196 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013fec:	112d      	asrs	r5, r5, #4
 8013fee:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8013ff2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013ff6:	6816      	ldr	r6, [r2, #0]
 8013ff8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8013ffc:	6006      	str	r6, [r0, #0]
 8013ffe:	6856      	ldr	r6, [r2, #4]
 8014000:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014004:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014008:	6046      	str	r6, [r0, #4]
 801400a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801400e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014012:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014016:	f8a2 c006 	strh.w	ip, [r2, #6]
 801401a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801401e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014022:	4565      	cmp	r5, ip
 8014024:	f1a1 0208 	sub.w	r2, r1, #8
 8014028:	db06      	blt.n	8014038 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801402a:	d119      	bne.n	8014060 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801402c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014030:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014034:	42ae      	cmp	r6, r5
 8014036:	dd13      	ble.n	8014060 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014038:	460e      	mov	r6, r1
 801403a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801403e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014042:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014046:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801404a:	601d      	str	r5, [r3, #0]
 801404c:	6875      	ldr	r5, [r6, #4]
 801404e:	605d      	str	r5, [r3, #4]
 8014050:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014054:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014058:	f821 8c04 	strh.w	r8, [r1, #-4]
 801405c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014060:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014064:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014068:	42ae      	cmp	r6, r5
 801406a:	db06      	blt.n	801407a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801406c:	d116      	bne.n	801409c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801406e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014072:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014076:	45ac      	cmp	ip, r5
 8014078:	da10      	bge.n	801409c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801407a:	681d      	ldr	r5, [r3, #0]
 801407c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014080:	6005      	str	r5, [r0, #0]
 8014082:	685d      	ldr	r5, [r3, #4]
 8014084:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014088:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801408c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014090:	6045      	str	r5, [r0, #4]
 8014092:	8146      	strh	r6, [r0, #10]
 8014094:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014098:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801409c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80140a0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80140a4:	4565      	cmp	r5, ip
 80140a6:	db06      	blt.n	80140b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80140a8:	d119      	bne.n	80140de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140aa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80140ae:	f9b0 5000 	ldrsh.w	r5, [r0]
 80140b2:	42ae      	cmp	r6, r5
 80140b4:	da13      	bge.n	80140de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140b6:	460e      	mov	r6, r1
 80140b8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80140bc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80140c0:	6005      	str	r5, [r0, #0]
 80140c2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80140c6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80140ca:	6875      	ldr	r5, [r6, #4]
 80140cc:	6045      	str	r5, [r0, #4]
 80140ce:	f821 9c08 	strh.w	r9, [r1, #-8]
 80140d2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80140d6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80140da:	f821 ec02 	strh.w	lr, [r1, #-2]
 80140de:	3308      	adds	r3, #8
 80140e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80140e4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80140e8:	45e6      	cmp	lr, ip
 80140ea:	dbf8      	blt.n	80140de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140ec:	d105      	bne.n	80140fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80140ee:	f9b3 6000 	ldrsh.w	r6, [r3]
 80140f2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80140f6:	42ae      	cmp	r6, r5
 80140f8:	dbf1      	blt.n	80140de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140fa:	4615      	mov	r5, r2
 80140fc:	3a08      	subs	r2, #8
 80140fe:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014102:	45b4      	cmp	ip, r6
 8014104:	dbf9      	blt.n	80140fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014106:	d105      	bne.n	8014114 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014108:	f9b0 8000 	ldrsh.w	r8, [r0]
 801410c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014110:	45b0      	cmp	r8, r6
 8014112:	dbf2      	blt.n	80140fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014114:	4293      	cmp	r3, r2
 8014116:	f1a5 0608 	sub.w	r6, r5, #8
 801411a:	d816      	bhi.n	801414a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801411c:	f8d6 c000 	ldr.w	ip, [r6]
 8014120:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014124:	f8c3 c000 	str.w	ip, [r3]
 8014128:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801412c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014130:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014134:	f8c3 c004 	str.w	ip, [r3, #4]
 8014138:	f825 ac08 	strh.w	sl, [r5, #-8]
 801413c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014140:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014144:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014148:	e7c9      	b.n	80140de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801414a:	f8d6 e000 	ldr.w	lr, [r6]
 801414e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014152:	f8c0 e000 	str.w	lr, [r0]
 8014156:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801415a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801415e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014162:	f8c0 e004 	str.w	lr, [r0, #4]
 8014166:	f825 ac08 	strh.w	sl, [r5, #-8]
 801416a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801416e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014172:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014176:	1acd      	subs	r5, r1, r3
 8014178:	1a16      	subs	r6, r2, r0
 801417a:	10ed      	asrs	r5, r5, #3
 801417c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014180:	bfb5      	itete	lt
 8014182:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014186:	e9c4 3100 	strdge	r3, r1, [r4]
 801418a:	460a      	movlt	r2, r1
 801418c:	4603      	movge	r3, r0
 801418e:	3408      	adds	r4, #8
 8014190:	4618      	mov	r0, r3
 8014192:	4611      	mov	r1, r2
 8014194:	e724      	b.n	8013fe0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014196:	4299      	cmp	r1, r3
 8014198:	d928      	bls.n	80141ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801419a:	f1a3 0210 	sub.w	r2, r3, #16
 801419e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80141a2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80141a6:	45ac      	cmp	ip, r5
 80141a8:	db06      	blt.n	80141b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80141aa:	d11d      	bne.n	80141e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80141ac:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80141b0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80141b4:	42ae      	cmp	r6, r5
 80141b6:	da17      	bge.n	80141e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80141b8:	4615      	mov	r5, r2
 80141ba:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80141be:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80141c2:	6116      	str	r6, [r2, #16]
 80141c4:	686e      	ldr	r6, [r5, #4]
 80141c6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80141ca:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80141ce:	f8a2 9008 	strh.w	r9, [r2, #8]
 80141d2:	42a8      	cmp	r0, r5
 80141d4:	6156      	str	r6, [r2, #20]
 80141d6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80141da:	f8a2 800c 	strh.w	r8, [r2, #12]
 80141de:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80141e2:	f1a2 0208 	sub.w	r2, r2, #8
 80141e6:	d1da      	bne.n	801419e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80141e8:	3308      	adds	r3, #8
 80141ea:	e7d4      	b.n	8014196 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80141ec:	42bc      	cmp	r4, r7
 80141ee:	d903      	bls.n	80141f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80141f0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80141f4:	3c08      	subs	r4, #8
 80141f6:	e6f3      	b.n	8013fe0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80141f8:	b050      	add	sp, #320	; 0x140
 80141fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080141fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80141fe:	b510      	push	{r4, lr}
 8014200:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014202:	07da      	lsls	r2, r3, #31
 8014204:	4604      	mov	r4, r0
 8014206:	d507      	bpl.n	8014218 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014208:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801420c:	f7ff fe8a 	bl	8013f24 <_ZN8touchgfx7Outline6lineToEii>
 8014210:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014212:	f023 0301 	bic.w	r3, r3, #1
 8014216:	6243      	str	r3, [r0, #36]	; 0x24
 8014218:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801421a:	079b      	lsls	r3, r3, #30
 801421c:	d521      	bpl.n	8014262 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801421e:	6923      	ldr	r3, [r4, #16]
 8014220:	88d9      	ldrh	r1, [r3, #6]
 8014222:	889a      	ldrh	r2, [r3, #4]
 8014224:	430a      	orrs	r2, r1
 8014226:	d010      	beq.n	801424a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014228:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801422c:	2a00      	cmp	r2, #0
 801422e:	db0c      	blt.n	801424a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014230:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014232:	428a      	cmp	r2, r1
 8014234:	da09      	bge.n	801424a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014236:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801423a:	4291      	cmp	r1, r2
 801423c:	bf88      	it	hi
 801423e:	3308      	addhi	r3, #8
 8014240:	f102 0201 	add.w	r2, r2, #1
 8014244:	bf88      	it	hi
 8014246:	6123      	strhi	r3, [r4, #16]
 8014248:	60a2      	str	r2, [r4, #8]
 801424a:	68a1      	ldr	r1, [r4, #8]
 801424c:	b129      	cbz	r1, 801425a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801424e:	6863      	ldr	r3, [r4, #4]
 8014250:	4299      	cmp	r1, r3
 8014252:	d802      	bhi.n	801425a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014254:	68e0      	ldr	r0, [r4, #12]
 8014256:	f7ff febc 	bl	8013fd2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801425a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801425c:	f023 0302 	bic.w	r3, r3, #2
 8014260:	6263      	str	r3, [r4, #36]	; 0x24
 8014262:	68e0      	ldr	r0, [r4, #12]
 8014264:	bd10      	pop	{r4, pc}
	...

08014268 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014268:	4b02      	ldr	r3, [pc, #8]	; (8014274 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801426a:	6018      	str	r0, [r3, #0]
 801426c:	4b02      	ldr	r3, [pc, #8]	; (8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801426e:	6019      	str	r1, [r3, #0]
 8014270:	4770      	bx	lr
 8014272:	bf00      	nop
 8014274:	20012dac 	.word	0x20012dac
 8014278:	20012db0 	.word	0x20012db0

0801427c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801427c:	4a02      	ldr	r2, [pc, #8]	; (8014288 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801427e:	2300      	movs	r3, #0
 8014280:	6013      	str	r3, [r2, #0]
 8014282:	4a02      	ldr	r2, [pc, #8]	; (801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014284:	6013      	str	r3, [r2, #0]
 8014286:	4770      	bx	lr
 8014288:	20012dac 	.word	0x20012dac
 801428c:	20012db0 	.word	0x20012db0

08014290 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014290:	4b01      	ldr	r3, [pc, #4]	; (8014298 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014292:	6818      	ldr	r0, [r3, #0]
 8014294:	4770      	bx	lr
 8014296:	bf00      	nop
 8014298:	20012dac 	.word	0x20012dac

0801429c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801429c:	4b01      	ldr	r3, [pc, #4]	; (80142a4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801429e:	6818      	ldr	r0, [r3, #0]
 80142a0:	4770      	bx	lr
 80142a2:	bf00      	nop
 80142a4:	20012db0 	.word	0x20012db0

080142a8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80142a8:	b510      	push	{r4, lr}
 80142aa:	6803      	ldr	r3, [r0, #0]
 80142ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142ae:	460c      	mov	r4, r1
 80142b0:	4798      	blx	r3
 80142b2:	1b03      	subs	r3, r0, r4
 80142b4:	4258      	negs	r0, r3
 80142b6:	4158      	adcs	r0, r3
 80142b8:	bd10      	pop	{r4, pc}
	...

080142bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80142bc:	4b01      	ldr	r3, [pc, #4]	; (80142c4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80142be:	6019      	str	r1, [r3, #0]
 80142c0:	4770      	bx	lr
 80142c2:	bf00      	nop
 80142c4:	20012db4 	.word	0x20012db4

080142c8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80142c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142cc:	4696      	mov	lr, r2
 80142ce:	4605      	mov	r5, r0
 80142d0:	4614      	mov	r4, r2
 80142d2:	460e      	mov	r6, r1
 80142d4:	461f      	mov	r7, r3
 80142d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80142da:	b097      	sub	sp, #92	; 0x5c
 80142dc:	f10d 0c1c 	add.w	ip, sp, #28
 80142e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80142e4:	f8de 3000 	ldr.w	r3, [lr]
 80142e8:	f8cc 3000 	str.w	r3, [ip]
 80142ec:	f104 0e14 	add.w	lr, r4, #20
 80142f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80142f4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80142f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80142fc:	f8de 3000 	ldr.w	r3, [lr]
 8014300:	f8cc 3000 	str.w	r3, [ip]
 8014304:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014308:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801430c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014310:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014314:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014318:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801431c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014320:	f8de 3000 	ldr.w	r3, [lr]
 8014324:	f8cc 3000 	str.w	r3, [ip]
 8014328:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801432a:	682b      	ldr	r3, [r5, #0]
 801432c:	9201      	str	r2, [sp, #4]
 801432e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014332:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014334:	9200      	str	r2, [sp, #0]
 8014336:	f8cd 8008 	str.w	r8, [sp, #8]
 801433a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801433e:	aa07      	add	r2, sp, #28
 8014340:	463b      	mov	r3, r7
 8014342:	4631      	mov	r1, r6
 8014344:	4628      	mov	r0, r5
 8014346:	47d8      	blx	fp
 8014348:	46a6      	mov	lr, r4
 801434a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801434e:	f10d 0c1c 	add.w	ip, sp, #28
 8014352:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014356:	f8de 3000 	ldr.w	r3, [lr]
 801435a:	f8cc 3000 	str.w	r3, [ip]
 801435e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014362:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014366:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801436a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801436e:	343c      	adds	r4, #60	; 0x3c
 8014370:	f8de 3000 	ldr.w	r3, [lr]
 8014374:	f8cc 3000 	str.w	r3, [ip]
 8014378:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801437a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801437e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014382:	6823      	ldr	r3, [r4, #0]
 8014384:	f8cc 3000 	str.w	r3, [ip]
 8014388:	682b      	ldr	r3, [r5, #0]
 801438a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801438e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014390:	9201      	str	r2, [sp, #4]
 8014392:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014394:	9200      	str	r2, [sp, #0]
 8014396:	f8cd 8008 	str.w	r8, [sp, #8]
 801439a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801439c:	aa07      	add	r2, sp, #28
 801439e:	463b      	mov	r3, r7
 80143a0:	4631      	mov	r1, r6
 80143a2:	4628      	mov	r0, r5
 80143a4:	47a0      	blx	r4
 80143a6:	b017      	add	sp, #92	; 0x5c
 80143a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080143ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80143ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143b0:	b08d      	sub	sp, #52	; 0x34
 80143b2:	4688      	mov	r8, r1
 80143b4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80143b6:	f8d3 c000 	ldr.w	ip, [r3]
 80143ba:	680f      	ldr	r7, [r1, #0]
 80143bc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80143c0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80143c4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80143c8:	edd3 6a07 	vldr	s13, [r3, #28]
 80143cc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80143ce:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80143d2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80143d6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80143da:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80143de:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80143e2:	eba7 070c 	sub.w	r7, r7, ip
 80143e6:	42bc      	cmp	r4, r7
 80143e8:	bfa8      	it	ge
 80143ea:	463c      	movge	r4, r7
 80143ec:	ee07 4a90 	vmov	s15, r4
 80143f0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80143f4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80143f8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80143fc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014400:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014404:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014408:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801440c:	eb09 0e0c 	add.w	lr, r9, ip
 8014410:	4571      	cmp	r1, lr
 8014412:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014416:	ee32 1a05 	vadd.f32	s2, s4, s10
 801441a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801441e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014422:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014426:	f340 808d 	ble.w	8014544 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801442a:	eba1 060e 	sub.w	r6, r1, lr
 801442e:	fb96 f5f4 	sdiv	r5, r6, r4
 8014432:	ee07 5a10 	vmov	s14, r5
 8014436:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801443a:	2d00      	cmp	r5, #0
 801443c:	fb04 6615 	mls	r6, r4, r5, r6
 8014440:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014444:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014448:	eea7 1a05 	vfma.f32	s2, s14, s10
 801444c:	dd13      	ble.n	8014476 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801444e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014452:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014456:	eef5 6a40 	vcmp.f32	s13, #0.0
 801445a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801445e:	bf18      	it	ne
 8014460:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014464:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014468:	bf08      	it	eq
 801446a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801446e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014472:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014476:	fb05 f204 	mul.w	r2, r5, r4
 801447a:	1abf      	subs	r7, r7, r2
 801447c:	4494      	add	ip, r2
 801447e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014482:	4411      	add	r1, r2
 8014484:	eb09 020c 	add.w	r2, r9, ip
 8014488:	443a      	add	r2, r7
 801448a:	b209      	sxth	r1, r1
 801448c:	428a      	cmp	r2, r1
 801448e:	bfc4      	itt	gt
 8014490:	eba1 0209 	subgt.w	r2, r1, r9
 8014494:	eba2 070c 	subgt.w	r7, r2, ip
 8014498:	2f00      	cmp	r7, #0
 801449a:	dd50      	ble.n	801453e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801449c:	fb97 f1f4 	sdiv	r1, r7, r4
 80144a0:	fb04 7211 	mls	r2, r4, r1, r7
 80144a4:	b90a      	cbnz	r2, 80144aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80144a6:	3901      	subs	r1, #1
 80144a8:	4622      	mov	r2, r4
 80144aa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80144ae:	6840      	ldr	r0, [r0, #4]
 80144b0:	900b      	str	r0, [sp, #44]	; 0x2c
 80144b2:	f8d0 a000 	ldr.w	sl, [r0]
 80144b6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80144b8:	9008      	str	r0, [sp, #32]
 80144ba:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80144be:	9818      	ldr	r0, [sp, #96]	; 0x60
 80144c0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80144c4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80144c8:	695b      	ldr	r3, [r3, #20]
 80144ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80144cc:	445b      	add	r3, fp
 80144ce:	eef0 6a42 	vmov.f32	s13, s4
 80144d2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80144d6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80144da:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80144de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80144e2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80144e6:	9307      	str	r3, [sp, #28]
 80144e8:	ee17 7a90 	vmov	r7, s15
 80144ec:	ee73 7a42 	vsub.f32	s15, s6, s4
 80144f0:	eeb0 7a61 	vmov.f32	s14, s3
 80144f4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80144f8:	ee16 3a90 	vmov	r3, s13
 80144fc:	fb97 f7f4 	sdiv	r7, r7, r4
 8014500:	ee17 ca90 	vmov	ip, s15
 8014504:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014508:	fb9c fcf4 	sdiv	ip, ip, r4
 801450c:	fb0c 3306 	mla	r3, ip, r6, r3
 8014510:	9302      	str	r3, [sp, #8]
 8014512:	ee17 3a10 	vmov	r3, s14
 8014516:	44b6      	add	lr, r6
 8014518:	fb04 e505 	mla	r5, r4, r5, lr
 801451c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014520:	fb07 3706 	mla	r7, r7, r6, r3
 8014524:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014528:	e9cd 4700 	strd	r4, r7, [sp]
 801452c:	2900      	cmp	r1, #0
 801452e:	bfcc      	ite	gt
 8014530:	46a1      	movgt	r9, r4
 8014532:	4691      	movle	r9, r2
 8014534:	eba9 0306 	sub.w	r3, r9, r6
 8014538:	f8da 4008 	ldr.w	r4, [sl, #8]
 801453c:	47a0      	blx	r4
 801453e:	b00d      	add	sp, #52	; 0x34
 8014540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014544:	2500      	movs	r5, #0
 8014546:	462e      	mov	r6, r5
 8014548:	e799      	b.n	801447e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801454c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801454c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014550:	b0db      	sub	sp, #364	; 0x16c
 8014552:	461d      	mov	r5, r3
 8014554:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014558:	930a      	str	r3, [sp, #40]	; 0x28
 801455a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801455e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014560:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014564:	9310      	str	r3, [sp, #64]	; 0x40
 8014566:	6803      	ldr	r3, [r0, #0]
 8014568:	910f      	str	r1, [sp, #60]	; 0x3c
 801456a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801456c:	9009      	str	r0, [sp, #36]	; 0x24
 801456e:	4614      	mov	r4, r2
 8014570:	4629      	mov	r1, r5
 8014572:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014576:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801457a:	47b8      	blx	r7
 801457c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801457e:	6058      	str	r0, [r3, #4]
 8014580:	2800      	cmp	r0, #0
 8014582:	f000 83a1 	beq.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014586:	682b      	ldr	r3, [r5, #0]
 8014588:	9314      	str	r3, [sp, #80]	; 0x50
 801458a:	686b      	ldr	r3, [r5, #4]
 801458c:	9315      	str	r3, [sp, #84]	; 0x54
 801458e:	4bc4      	ldr	r3, [pc, #784]	; (80148a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014590:	ed94 7a02 	vldr	s14, [r4, #8]
 8014594:	7819      	ldrb	r1, [r3, #0]
 8014596:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801459a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801459e:	2900      	cmp	r1, #0
 80145a0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80145a4:	bf16      	itet	ne
 80145a6:	4619      	movne	r1, r3
 80145a8:	4611      	moveq	r1, r2
 80145aa:	4613      	movne	r3, r2
 80145ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145b0:	9116      	str	r1, [sp, #88]	; 0x58
 80145b2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80145b6:	f240 8387 	bls.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145ba:	ed94 7a07 	vldr	s14, [r4, #28]
 80145be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80145c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145c6:	f240 837f 	bls.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145ca:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80145ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80145d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145d6:	f240 8377 	bls.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145da:	6822      	ldr	r2, [r4, #0]
 80145dc:	4bb1      	ldr	r3, [pc, #708]	; (80148a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80145de:	429a      	cmp	r2, r3
 80145e0:	f2c0 8372 	blt.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145e4:	49b0      	ldr	r1, [pc, #704]	; (80148a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80145e6:	6963      	ldr	r3, [r4, #20]
 80145e8:	428a      	cmp	r2, r1
 80145ea:	f300 836d 	bgt.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145ee:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80145f2:	48ae      	ldr	r0, [pc, #696]	; (80148ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80145f4:	33ff      	adds	r3, #255	; 0xff
 80145f6:	4283      	cmp	r3, r0
 80145f8:	f200 8366 	bhi.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145fc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80145fe:	4dac      	ldr	r5, [pc, #688]	; (80148b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014600:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014604:	33ff      	adds	r3, #255	; 0xff
 8014606:	42ab      	cmp	r3, r5
 8014608:	f200 835e 	bhi.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801460c:	6862      	ldr	r2, [r4, #4]
 801460e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014612:	33ff      	adds	r3, #255	; 0xff
 8014614:	4283      	cmp	r3, r0
 8014616:	f200 8357 	bhi.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801461a:	69a1      	ldr	r1, [r4, #24]
 801461c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014620:	33ff      	adds	r3, #255	; 0xff
 8014622:	4283      	cmp	r3, r0
 8014624:	f200 8350 	bhi.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014628:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801462a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801462e:	30ff      	adds	r0, #255	; 0xff
 8014630:	42a8      	cmp	r0, r5
 8014632:	f200 8349 	bhi.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014636:	428a      	cmp	r2, r1
 8014638:	f280 8110 	bge.w	801485c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801463c:	429a      	cmp	r2, r3
 801463e:	f300 8119 	bgt.w	8014874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014642:	4299      	cmp	r1, r3
 8014644:	f280 811d 	bge.w	8014882 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014648:	2502      	movs	r5, #2
 801464a:	2701      	movs	r7, #1
 801464c:	46a9      	mov	r9, r5
 801464e:	46b8      	mov	r8, r7
 8014650:	f04f 0a00 	mov.w	sl, #0
 8014654:	4621      	mov	r1, r4
 8014656:	a849      	add	r0, sp, #292	; 0x124
 8014658:	f003 feec 	bl	8018434 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801465c:	4622      	mov	r2, r4
 801465e:	4653      	mov	r3, sl
 8014660:	a949      	add	r1, sp, #292	; 0x124
 8014662:	f8cd 9000 	str.w	r9, [sp]
 8014666:	a819      	add	r0, sp, #100	; 0x64
 8014668:	f004 f814 	bl	8018694 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801466c:	4622      	mov	r2, r4
 801466e:	4653      	mov	r3, sl
 8014670:	a949      	add	r1, sp, #292	; 0x124
 8014672:	f8cd 8000 	str.w	r8, [sp]
 8014676:	a829      	add	r0, sp, #164	; 0xa4
 8014678:	f004 f80c 	bl	8018694 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801467c:	4643      	mov	r3, r8
 801467e:	4622      	mov	r2, r4
 8014680:	a949      	add	r1, sp, #292	; 0x124
 8014682:	f8cd 9000 	str.w	r9, [sp]
 8014686:	a839      	add	r0, sp, #228	; 0xe4
 8014688:	f004 f804 	bl	8018694 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801468c:	42af      	cmp	r7, r5
 801468e:	bfb5      	itete	lt
 8014690:	2300      	movlt	r3, #0
 8014692:	2301      	movge	r3, #1
 8014694:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014696:	930e      	strge	r3, [sp, #56]	; 0x38
 8014698:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801469a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801469e:	af12      	add	r7, sp, #72	; 0x48
 80146a0:	bfb9      	ittee	lt
 80146a2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80146a4:	ac19      	addlt	r4, sp, #100	; 0x64
 80146a6:	ad19      	addge	r5, sp, #100	; 0x64
 80146a8:	ac29      	addge	r4, sp, #164	; 0xa4
 80146aa:	e887 0003 	stmia.w	r7, {r0, r1}
 80146ae:	b928      	cbnz	r0, 80146bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80146b0:	4b80      	ldr	r3, [pc, #512]	; (80148b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80146b2:	6818      	ldr	r0, [r3, #0]
 80146b4:	6803      	ldr	r3, [r0, #0]
 80146b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80146b8:	4798      	blx	r3
 80146ba:	6038      	str	r0, [r7, #0]
 80146bc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80146be:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80146c2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80146c6:	930c      	str	r3, [sp, #48]	; 0x30
 80146c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80146ca:	6963      	ldr	r3, [r4, #20]
 80146cc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80146ce:	440b      	add	r3, r1
 80146d0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80146d4:	4408      	add	r0, r1
 80146d6:	b200      	sxth	r0, r0
 80146d8:	4283      	cmp	r3, r0
 80146da:	900d      	str	r0, [sp, #52]	; 0x34
 80146dc:	f280 80dd 	bge.w	801489a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80146e0:	428b      	cmp	r3, r1
 80146e2:	da08      	bge.n	80146f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80146e4:	2a00      	cmp	r2, #0
 80146e6:	dd06      	ble.n	80146f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80146e8:	1acb      	subs	r3, r1, r3
 80146ea:	429a      	cmp	r2, r3
 80146ec:	f2c0 80e4 	blt.w	80148b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80146f0:	2b00      	cmp	r3, #0
 80146f2:	f300 80e2 	bgt.w	80148ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80146f6:	6967      	ldr	r7, [r4, #20]
 80146f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80146fa:	443b      	add	r3, r7
 80146fc:	461f      	mov	r7, r3
 80146fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014700:	1bdf      	subs	r7, r3, r7
 8014702:	4297      	cmp	r7, r2
 8014704:	bfa8      	it	ge
 8014706:	4617      	movge	r7, r2
 8014708:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801470c:	2f00      	cmp	r7, #0
 801470e:	f340 8166 	ble.w	80149de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014712:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014714:	6829      	ldr	r1, [r5, #0]
 8014716:	f9b3 2000 	ldrsh.w	r2, [r3]
 801471a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801471e:	6820      	ldr	r0, [r4, #0]
 8014720:	4411      	add	r1, r2
 8014722:	4299      	cmp	r1, r3
 8014724:	dd1a      	ble.n	801475c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014726:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801472a:	440b      	add	r3, r1
 801472c:	4402      	add	r2, r0
 801472e:	b21b      	sxth	r3, r3
 8014730:	429a      	cmp	r2, r3
 8014732:	dc13      	bgt.n	801475c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014736:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014738:	681b      	ldr	r3, [r3, #0]
 801473a:	9206      	str	r2, [sp, #24]
 801473c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801473e:	9205      	str	r2, [sp, #20]
 8014740:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014742:	9500      	str	r5, [sp, #0]
 8014744:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014748:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801474a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801474c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014750:	a912      	add	r1, sp, #72	; 0x48
 8014752:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014756:	aa49      	add	r2, sp, #292	; 0x124
 8014758:	4623      	mov	r3, r4
 801475a:	47c8      	blx	r9
 801475c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014760:	441a      	add	r2, r3
 8014762:	6963      	ldr	r3, [r4, #20]
 8014764:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014768:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801476c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014770:	68a1      	ldr	r1, [r4, #8]
 8014772:	ed94 6a08 	vldr	s12, [r4, #32]
 8014776:	6022      	str	r2, [r4, #0]
 8014778:	3301      	adds	r3, #1
 801477a:	6163      	str	r3, [r4, #20]
 801477c:	69a3      	ldr	r3, [r4, #24]
 801477e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014782:	3b01      	subs	r3, #1
 8014784:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014788:	61a3      	str	r3, [r4, #24]
 801478a:	6923      	ldr	r3, [r4, #16]
 801478c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014790:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014794:	edd4 6a07 	vldr	s13, [r4, #28]
 8014798:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801479c:	440b      	add	r3, r1
 801479e:	68e1      	ldr	r1, [r4, #12]
 80147a0:	6123      	str	r3, [r4, #16]
 80147a2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80147a6:	428b      	cmp	r3, r1
 80147a8:	edc4 6a07 	vstr	s13, [r4, #28]
 80147ac:	db15      	blt.n	80147da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80147ae:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80147b2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80147b6:	3201      	adds	r2, #1
 80147b8:	edc4 6a07 	vstr	s13, [r4, #28]
 80147bc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80147c0:	6022      	str	r2, [r4, #0]
 80147c2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80147c6:	1a5b      	subs	r3, r3, r1
 80147c8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80147cc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80147d0:	6123      	str	r3, [r4, #16]
 80147d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80147d6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80147da:	e9d5 2300 	ldrd	r2, r3, [r5]
 80147de:	441a      	add	r2, r3
 80147e0:	696b      	ldr	r3, [r5, #20]
 80147e2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80147e6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80147ea:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80147ee:	68a9      	ldr	r1, [r5, #8]
 80147f0:	ed95 6a08 	vldr	s12, [r5, #32]
 80147f4:	602a      	str	r2, [r5, #0]
 80147f6:	3301      	adds	r3, #1
 80147f8:	616b      	str	r3, [r5, #20]
 80147fa:	69ab      	ldr	r3, [r5, #24]
 80147fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014800:	3b01      	subs	r3, #1
 8014802:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014806:	61ab      	str	r3, [r5, #24]
 8014808:	692b      	ldr	r3, [r5, #16]
 801480a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801480e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014812:	edd5 6a07 	vldr	s13, [r5, #28]
 8014816:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801481a:	440b      	add	r3, r1
 801481c:	68e9      	ldr	r1, [r5, #12]
 801481e:	612b      	str	r3, [r5, #16]
 8014820:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014824:	428b      	cmp	r3, r1
 8014826:	edc5 6a07 	vstr	s13, [r5, #28]
 801482a:	db15      	blt.n	8014858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801482c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014830:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014834:	3201      	adds	r2, #1
 8014836:	edc5 6a07 	vstr	s13, [r5, #28]
 801483a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801483e:	602a      	str	r2, [r5, #0]
 8014840:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014844:	1a5b      	subs	r3, r3, r1
 8014846:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801484a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801484e:	612b      	str	r3, [r5, #16]
 8014850:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014854:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014858:	3f01      	subs	r7, #1
 801485a:	e757      	b.n	801470c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801485c:	4299      	cmp	r1, r3
 801485e:	dc13      	bgt.n	8014888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014860:	429a      	cmp	r2, r3
 8014862:	da14      	bge.n	801488e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014864:	2502      	movs	r5, #2
 8014866:	2703      	movs	r7, #3
 8014868:	46a9      	mov	r9, r5
 801486a:	f04f 0800 	mov.w	r8, #0
 801486e:	f04f 0a01 	mov.w	sl, #1
 8014872:	e6ef      	b.n	8014654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014874:	2501      	movs	r5, #1
 8014876:	2700      	movs	r7, #0
 8014878:	46a9      	mov	r9, r5
 801487a:	46b8      	mov	r8, r7
 801487c:	f04f 0a02 	mov.w	sl, #2
 8014880:	e6e8      	b.n	8014654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014882:	2501      	movs	r5, #1
 8014884:	2702      	movs	r7, #2
 8014886:	e6e1      	b.n	801464c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014888:	2500      	movs	r5, #0
 801488a:	2701      	movs	r7, #1
 801488c:	e7f4      	b.n	8014878 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801488e:	2702      	movs	r7, #2
 8014890:	2503      	movs	r5, #3
 8014892:	f04f 0900 	mov.w	r9, #0
 8014896:	46b8      	mov	r8, r7
 8014898:	e7e9      	b.n	801486e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801489a:	4613      	mov	r3, r2
 801489c:	e728      	b.n	80146f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801489e:	bf00      	nop
 80148a0:	20012d9c 	.word	0x20012d9c
 80148a4:	fffd8f01 	.word	0xfffd8f01
 80148a8:	00027100 	.word	0x00027100
 80148ac:	0004e1ff 	.word	0x0004e1ff
 80148b0:	0004e1fe 	.word	0x0004e1fe
 80148b4:	20012da4 	.word	0x20012da4
 80148b8:	4613      	mov	r3, r2
 80148ba:	992b      	ldr	r1, [sp, #172]	; 0xac
 80148bc:	9111      	str	r1, [sp, #68]	; 0x44
 80148be:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80148c2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80148c6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80148c8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80148cc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80148d0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80148d4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80148d8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80148dc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80148e0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80148e4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80148e8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80148ec:	469e      	mov	lr, r3
 80148ee:	469c      	mov	ip, r3
 80148f0:	f04f 0900 	mov.w	r9, #0
 80148f4:	f1bc 0f00 	cmp.w	ip, #0
 80148f8:	d147      	bne.n	801498a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80148fa:	eb03 0c07 	add.w	ip, r3, r7
 80148fe:	1ad7      	subs	r7, r2, r3
 8014900:	f1b9 0f00 	cmp.w	r9, #0
 8014904:	d009      	beq.n	801491a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014906:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801490a:	9029      	str	r0, [sp, #164]	; 0xa4
 801490c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014910:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014914:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014918:	912d      	str	r1, [sp, #180]	; 0xb4
 801491a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801491c:	9111      	str	r1, [sp, #68]	; 0x44
 801491e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014922:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014926:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801492a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801492e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014932:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014936:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801493a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801493e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014942:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014946:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801494a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801494e:	f04f 0800 	mov.w	r8, #0
 8014952:	f1be 0f00 	cmp.w	lr, #0
 8014956:	d031      	beq.n	80149bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014958:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801495a:	4431      	add	r1, r6
 801495c:	4549      	cmp	r1, r9
 801495e:	4450      	add	r0, sl
 8014960:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014964:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014968:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801496c:	db08      	blt.n	8014980 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801496e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014972:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014976:	ee37 7a06 	vadd.f32	s14, s14, s12
 801497a:	3001      	adds	r0, #1
 801497c:	eba1 0109 	sub.w	r1, r1, r9
 8014980:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014984:	f04f 0801 	mov.w	r8, #1
 8014988:	e7e3      	b.n	8014952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801498a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801498c:	4431      	add	r1, r6
 801498e:	4541      	cmp	r1, r8
 8014990:	4450      	add	r0, sl
 8014992:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014996:	ee77 7a84 	vadd.f32	s15, s15, s8
 801499a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801499e:	db08      	blt.n	80149b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80149a0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80149a4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80149a8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80149ac:	3001      	adds	r0, #1
 80149ae:	eba1 0108 	sub.w	r1, r1, r8
 80149b2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80149b6:	f04f 0901 	mov.w	r9, #1
 80149ba:	e79b      	b.n	80148f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80149bc:	449c      	add	ip, r3
 80149be:	1aff      	subs	r7, r7, r3
 80149c0:	f1b8 0f00 	cmp.w	r8, #0
 80149c4:	d009      	beq.n	80149da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80149c6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80149ca:	9019      	str	r0, [sp, #100]	; 0x64
 80149cc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80149d0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80149d4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80149d8:	911d      	str	r1, [sp, #116]	; 0x74
 80149da:	1ad2      	subs	r2, r2, r3
 80149dc:	e68b      	b.n	80146f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80149de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149e0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80149e2:	2b00      	cmp	r3, #0
 80149e4:	f000 80d1 	beq.w	8014b8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80149e8:	ad19      	add	r5, sp, #100	; 0x64
 80149ea:	ac39      	add	r4, sp, #228	; 0xe4
 80149ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80149ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80149f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80149f6:	930c      	str	r3, [sp, #48]	; 0x30
 80149f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80149fa:	6963      	ldr	r3, [r4, #20]
 80149fc:	440b      	add	r3, r1
 80149fe:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014a02:	4408      	add	r0, r1
 8014a04:	b200      	sxth	r0, r0
 8014a06:	4283      	cmp	r3, r0
 8014a08:	900d      	str	r0, [sp, #52]	; 0x34
 8014a0a:	f280 80c1 	bge.w	8014b90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014a0e:	428b      	cmp	r3, r1
 8014a10:	da08      	bge.n	8014a24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014a12:	2a00      	cmp	r2, #0
 8014a14:	dd06      	ble.n	8014a24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014a16:	1acb      	subs	r3, r1, r3
 8014a18:	429a      	cmp	r2, r3
 8014a1a:	f2c0 80bb 	blt.w	8014b94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014a1e:	2b00      	cmp	r3, #0
 8014a20:	f300 80b9 	bgt.w	8014b96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014a24:	6967      	ldr	r7, [r4, #20]
 8014a26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a28:	443b      	add	r3, r7
 8014a2a:	461f      	mov	r7, r3
 8014a2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a2e:	1bdf      	subs	r7, r3, r7
 8014a30:	4297      	cmp	r7, r2
 8014a32:	bfa8      	it	ge
 8014a34:	4617      	movge	r7, r2
 8014a36:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014a3a:	2f00      	cmp	r7, #0
 8014a3c:	f340 813c 	ble.w	8014cb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014a40:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014a42:	6829      	ldr	r1, [r5, #0]
 8014a44:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014a48:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014a4c:	6820      	ldr	r0, [r4, #0]
 8014a4e:	4411      	add	r1, r2
 8014a50:	4299      	cmp	r1, r3
 8014a52:	dd1a      	ble.n	8014a8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014a54:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014a58:	440b      	add	r3, r1
 8014a5a:	4402      	add	r2, r0
 8014a5c:	b21b      	sxth	r3, r3
 8014a5e:	429a      	cmp	r2, r3
 8014a60:	dc13      	bgt.n	8014a8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014a62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a64:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a66:	681b      	ldr	r3, [r3, #0]
 8014a68:	9206      	str	r2, [sp, #24]
 8014a6a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014a6c:	9205      	str	r2, [sp, #20]
 8014a6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014a70:	9500      	str	r5, [sp, #0]
 8014a72:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014a76:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014a78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014a7a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014a7e:	a912      	add	r1, sp, #72	; 0x48
 8014a80:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014a84:	aa49      	add	r2, sp, #292	; 0x124
 8014a86:	4623      	mov	r3, r4
 8014a88:	47c8      	blx	r9
 8014a8a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014a8e:	441a      	add	r2, r3
 8014a90:	6963      	ldr	r3, [r4, #20]
 8014a92:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014a96:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014a9a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014a9e:	68a1      	ldr	r1, [r4, #8]
 8014aa0:	ed94 6a08 	vldr	s12, [r4, #32]
 8014aa4:	6022      	str	r2, [r4, #0]
 8014aa6:	3301      	adds	r3, #1
 8014aa8:	6163      	str	r3, [r4, #20]
 8014aaa:	69a3      	ldr	r3, [r4, #24]
 8014aac:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014ab0:	3b01      	subs	r3, #1
 8014ab2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014ab6:	61a3      	str	r3, [r4, #24]
 8014ab8:	6923      	ldr	r3, [r4, #16]
 8014aba:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014abe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014ac2:	edd4 6a07 	vldr	s13, [r4, #28]
 8014ac6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014aca:	440b      	add	r3, r1
 8014acc:	68e1      	ldr	r1, [r4, #12]
 8014ace:	6123      	str	r3, [r4, #16]
 8014ad0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014ad4:	428b      	cmp	r3, r1
 8014ad6:	edc4 6a07 	vstr	s13, [r4, #28]
 8014ada:	db15      	blt.n	8014b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014adc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014ae0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014ae4:	3201      	adds	r2, #1
 8014ae6:	edc4 6a07 	vstr	s13, [r4, #28]
 8014aea:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014aee:	6022      	str	r2, [r4, #0]
 8014af0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014af4:	1a5b      	subs	r3, r3, r1
 8014af6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014afa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014afe:	6123      	str	r3, [r4, #16]
 8014b00:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014b04:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014b08:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014b0c:	441a      	add	r2, r3
 8014b0e:	696b      	ldr	r3, [r5, #20]
 8014b10:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014b14:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014b18:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014b1c:	68a9      	ldr	r1, [r5, #8]
 8014b1e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014b22:	602a      	str	r2, [r5, #0]
 8014b24:	3301      	adds	r3, #1
 8014b26:	616b      	str	r3, [r5, #20]
 8014b28:	69ab      	ldr	r3, [r5, #24]
 8014b2a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014b2e:	3b01      	subs	r3, #1
 8014b30:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014b34:	61ab      	str	r3, [r5, #24]
 8014b36:	692b      	ldr	r3, [r5, #16]
 8014b38:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014b3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014b40:	edd5 6a07 	vldr	s13, [r5, #28]
 8014b44:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014b48:	440b      	add	r3, r1
 8014b4a:	68e9      	ldr	r1, [r5, #12]
 8014b4c:	612b      	str	r3, [r5, #16]
 8014b4e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014b52:	428b      	cmp	r3, r1
 8014b54:	edc5 6a07 	vstr	s13, [r5, #28]
 8014b58:	db15      	blt.n	8014b86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014b5a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014b5e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014b62:	3201      	adds	r2, #1
 8014b64:	edc5 6a07 	vstr	s13, [r5, #28]
 8014b68:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014b6c:	602a      	str	r2, [r5, #0]
 8014b6e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014b72:	1a5b      	subs	r3, r3, r1
 8014b74:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014b78:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014b7c:	612b      	str	r3, [r5, #16]
 8014b7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014b82:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014b86:	3f01      	subs	r7, #1
 8014b88:	e757      	b.n	8014a3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014b8a:	ad39      	add	r5, sp, #228	; 0xe4
 8014b8c:	ac19      	add	r4, sp, #100	; 0x64
 8014b8e:	e72d      	b.n	80149ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014b90:	4613      	mov	r3, r2
 8014b92:	e744      	b.n	8014a1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014b94:	4613      	mov	r3, r2
 8014b96:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014b9a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014b9c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014ba0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014ba4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014ba8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014bac:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014bb0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014bb4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014bb8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014bba:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014bbe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014bc2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014bc6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014bca:	960e      	str	r6, [sp, #56]	; 0x38
 8014bcc:	469e      	mov	lr, r3
 8014bce:	461f      	mov	r7, r3
 8014bd0:	f04f 0900 	mov.w	r9, #0
 8014bd4:	2f00      	cmp	r7, #0
 8014bd6:	d146      	bne.n	8014c66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014bd8:	449c      	add	ip, r3
 8014bda:	1ad7      	subs	r7, r2, r3
 8014bdc:	f1b9 0f00 	cmp.w	r9, #0
 8014be0:	d009      	beq.n	8014bf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014be2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014be6:	9039      	str	r0, [sp, #228]	; 0xe4
 8014be8:	913d      	str	r1, [sp, #244]	; 0xf4
 8014bea:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014bee:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014bf2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014bf6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014bf8:	910e      	str	r1, [sp, #56]	; 0x38
 8014bfa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014bfe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014c02:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014c06:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014c0a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014c0e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014c12:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014c16:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014c1a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014c1e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014c22:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014c26:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014c2a:	f04f 0800 	mov.w	r8, #0
 8014c2e:	f1be 0f00 	cmp.w	lr, #0
 8014c32:	d030      	beq.n	8014c96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014c34:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014c36:	4431      	add	r1, r6
 8014c38:	4549      	cmp	r1, r9
 8014c3a:	4450      	add	r0, sl
 8014c3c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014c40:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014c44:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014c48:	db08      	blt.n	8014c5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014c4a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014c4e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014c52:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014c56:	3001      	adds	r0, #1
 8014c58:	eba1 0109 	sub.w	r1, r1, r9
 8014c5c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014c60:	f04f 0801 	mov.w	r8, #1
 8014c64:	e7e3      	b.n	8014c2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014c66:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014c68:	4431      	add	r1, r6
 8014c6a:	4541      	cmp	r1, r8
 8014c6c:	4450      	add	r0, sl
 8014c6e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014c72:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014c76:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014c7a:	db08      	blt.n	8014c8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014c7c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014c80:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014c84:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014c88:	3001      	adds	r0, #1
 8014c8a:	eba1 0108 	sub.w	r1, r1, r8
 8014c8e:	3f01      	subs	r7, #1
 8014c90:	f04f 0901 	mov.w	r9, #1
 8014c94:	e79e      	b.n	8014bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014c96:	449c      	add	ip, r3
 8014c98:	1aff      	subs	r7, r7, r3
 8014c9a:	f1b8 0f00 	cmp.w	r8, #0
 8014c9e:	d009      	beq.n	8014cb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014ca0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014ca4:	9019      	str	r0, [sp, #100]	; 0x64
 8014ca6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014caa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014cae:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014cb2:	911d      	str	r1, [sp, #116]	; 0x74
 8014cb4:	1ad2      	subs	r2, r2, r3
 8014cb6:	e6b5      	b.n	8014a24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014cb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014cba:	681b      	ldr	r3, [r3, #0]
 8014cbc:	b923      	cbnz	r3, 8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014cbe:	4b04      	ldr	r3, [pc, #16]	; (8014cd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014cc0:	6818      	ldr	r0, [r3, #0]
 8014cc2:	6803      	ldr	r3, [r0, #0]
 8014cc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014cc6:	4798      	blx	r3
 8014cc8:	b05b      	add	sp, #364	; 0x16c
 8014cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cce:	bf00      	nop
 8014cd0:	20012da4 	.word	0x20012da4

08014cd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014cd4:	b570      	push	{r4, r5, r6, lr}
 8014cd6:	4604      	mov	r4, r0
 8014cd8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014cdc:	9805      	ldr	r0, [sp, #20]
 8014cde:	6061      	str	r1, [r4, #4]
 8014ce0:	2500      	movs	r5, #0
 8014ce2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014ce6:	8263      	strh	r3, [r4, #18]
 8014ce8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014cec:	8025      	strh	r5, [r4, #0]
 8014cee:	7221      	strb	r1, [r4, #8]
 8014cf0:	7266      	strb	r6, [r4, #9]
 8014cf2:	60e0      	str	r0, [r4, #12]
 8014cf4:	8222      	strh	r2, [r4, #16]
 8014cf6:	82a3      	strh	r3, [r4, #20]
 8014cf8:	82e5      	strh	r5, [r4, #22]
 8014cfa:	8325      	strh	r5, [r4, #24]
 8014cfc:	8365      	strh	r5, [r4, #26]
 8014cfe:	83a5      	strh	r5, [r4, #28]
 8014d00:	83e5      	strh	r5, [r4, #30]
 8014d02:	8425      	strh	r5, [r4, #32]
 8014d04:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014d08:	b32e      	cbz	r6, 8014d56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d0a:	6803      	ldr	r3, [r0, #0]
 8014d0c:	695b      	ldr	r3, [r3, #20]
 8014d0e:	4798      	blx	r3
 8014d10:	4606      	mov	r6, r0
 8014d12:	b300      	cbz	r0, 8014d56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d14:	68e0      	ldr	r0, [r4, #12]
 8014d16:	6803      	ldr	r3, [r0, #0]
 8014d18:	4631      	mov	r1, r6
 8014d1a:	68db      	ldr	r3, [r3, #12]
 8014d1c:	4798      	blx	r3
 8014d1e:	4605      	mov	r5, r0
 8014d20:	b1c8      	cbz	r0, 8014d56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d22:	7b43      	ldrb	r3, [r0, #13]
 8014d24:	7a82      	ldrb	r2, [r0, #10]
 8014d26:	005b      	lsls	r3, r3, #1
 8014d28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014d2c:	4313      	orrs	r3, r2
 8014d2e:	8423      	strh	r3, [r4, #32]
 8014d30:	7a63      	ldrb	r3, [r4, #9]
 8014d32:	2b06      	cmp	r3, #6
 8014d34:	d10f      	bne.n	8014d56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d36:	68e0      	ldr	r0, [r4, #12]
 8014d38:	6803      	ldr	r3, [r0, #0]
 8014d3a:	462a      	mov	r2, r5
 8014d3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014d3e:	4631      	mov	r1, r6
 8014d40:	4798      	blx	r3
 8014d42:	7b6b      	ldrb	r3, [r5, #13]
 8014d44:	005b      	lsls	r3, r3, #1
 8014d46:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014d4a:	7aab      	ldrb	r3, [r5, #10]
 8014d4c:	4313      	orrs	r3, r2
 8014d4e:	4418      	add	r0, r3
 8014d50:	8c23      	ldrh	r3, [r4, #32]
 8014d52:	4418      	add	r0, r3
 8014d54:	8420      	strh	r0, [r4, #32]
 8014d56:	4620      	mov	r0, r4
 8014d58:	bd70      	pop	{r4, r5, r6, pc}

08014d5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014d5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d5e:	2400      	movs	r4, #0
 8014d60:	b085      	sub	sp, #20
 8014d62:	4681      	mov	r9, r0
 8014d64:	4688      	mov	r8, r1
 8014d66:	4692      	mov	sl, r2
 8014d68:	469b      	mov	fp, r3
 8014d6a:	4627      	mov	r7, r4
 8014d6c:	4625      	mov	r5, r4
 8014d6e:	4626      	mov	r6, r4
 8014d70:	4554      	cmp	r4, sl
 8014d72:	da2a      	bge.n	8014dca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014d74:	2300      	movs	r3, #0
 8014d76:	9303      	str	r3, [sp, #12]
 8014d78:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014d7c:	429d      	cmp	r5, r3
 8014d7e:	d004      	beq.n	8014d8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014d80:	f242 030b 	movw	r3, #8203	; 0x200b
 8014d84:	429d      	cmp	r5, r3
 8014d86:	bf18      	it	ne
 8014d88:	462f      	movne	r7, r5
 8014d8a:	ab03      	add	r3, sp, #12
 8014d8c:	4642      	mov	r2, r8
 8014d8e:	4659      	mov	r1, fp
 8014d90:	4648      	mov	r0, r9
 8014d92:	f003 f965 	bl	8018060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014d96:	4605      	mov	r5, r0
 8014d98:	b1b8      	cbz	r0, 8014dca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014d9a:	280a      	cmp	r0, #10
 8014d9c:	d015      	beq.n	8014dca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014d9e:	9a03      	ldr	r2, [sp, #12]
 8014da0:	b18a      	cbz	r2, 8014dc6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014da2:	7b50      	ldrb	r0, [r2, #13]
 8014da4:	7a93      	ldrb	r3, [r2, #10]
 8014da6:	8895      	ldrh	r5, [r2, #4]
 8014da8:	0040      	lsls	r0, r0, #1
 8014daa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014dae:	4303      	orrs	r3, r0
 8014db0:	9301      	str	r3, [sp, #4]
 8014db2:	f8d8 3000 	ldr.w	r3, [r8]
 8014db6:	4639      	mov	r1, r7
 8014db8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014dba:	4640      	mov	r0, r8
 8014dbc:	4798      	blx	r3
 8014dbe:	9b01      	ldr	r3, [sp, #4]
 8014dc0:	4418      	add	r0, r3
 8014dc2:	4406      	add	r6, r0
 8014dc4:	b2b6      	uxth	r6, r6
 8014dc6:	3401      	adds	r4, #1
 8014dc8:	e7d2      	b.n	8014d70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014dca:	4630      	mov	r0, r6
 8014dcc:	b005      	add	sp, #20
 8014dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014dd2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014dd2:	2a02      	cmp	r2, #2
 8014dd4:	b530      	push	{r4, r5, lr}
 8014dd6:	d011      	beq.n	8014dfc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014dd8:	2a03      	cmp	r2, #3
 8014dda:	d01c      	beq.n	8014e16 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014ddc:	2a01      	cmp	r2, #1
 8014dde:	d10c      	bne.n	8014dfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014de0:	888b      	ldrh	r3, [r1, #4]
 8014de2:	8801      	ldrh	r1, [r0, #0]
 8014de4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014de8:	8844      	ldrh	r4, [r0, #2]
 8014dea:	8004      	strh	r4, [r0, #0]
 8014dec:	1a5b      	subs	r3, r3, r1
 8014dee:	1a9b      	subs	r3, r3, r2
 8014df0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014df4:	8043      	strh	r3, [r0, #2]
 8014df6:	8081      	strh	r1, [r0, #4]
 8014df8:	80c2      	strh	r2, [r0, #6]
 8014dfa:	bd30      	pop	{r4, r5, pc}
 8014dfc:	88cb      	ldrh	r3, [r1, #6]
 8014dfe:	8842      	ldrh	r2, [r0, #2]
 8014e00:	1a9b      	subs	r3, r3, r2
 8014e02:	88c2      	ldrh	r2, [r0, #6]
 8014e04:	1a9b      	subs	r3, r3, r2
 8014e06:	888a      	ldrh	r2, [r1, #4]
 8014e08:	8801      	ldrh	r1, [r0, #0]
 8014e0a:	8043      	strh	r3, [r0, #2]
 8014e0c:	1a52      	subs	r2, r2, r1
 8014e0e:	8881      	ldrh	r1, [r0, #4]
 8014e10:	1a52      	subs	r2, r2, r1
 8014e12:	8002      	strh	r2, [r0, #0]
 8014e14:	e7f1      	b.n	8014dfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014e16:	88cb      	ldrh	r3, [r1, #6]
 8014e18:	8841      	ldrh	r1, [r0, #2]
 8014e1a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014e1e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014e22:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014e26:	8045      	strh	r5, [r0, #2]
 8014e28:	1a5b      	subs	r3, r3, r1
 8014e2a:	1a9b      	subs	r3, r3, r2
 8014e2c:	8003      	strh	r3, [r0, #0]
 8014e2e:	8082      	strh	r2, [r0, #4]
 8014e30:	80c4      	strh	r4, [r0, #6]
 8014e32:	e7e2      	b.n	8014dfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014e34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e38:	b09f      	sub	sp, #124	; 0x7c
 8014e3a:	9116      	str	r1, [sp, #88]	; 0x58
 8014e3c:	9317      	str	r3, [sp, #92]	; 0x5c
 8014e3e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014e40:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014e42:	8809      	ldrh	r1, [r1, #0]
 8014e44:	889b      	ldrh	r3, [r3, #4]
 8014e46:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014e4a:	9212      	str	r2, [sp, #72]	; 0x48
 8014e4c:	440b      	add	r3, r1
 8014e4e:	b21b      	sxth	r3, r3
 8014e50:	9310      	str	r3, [sp, #64]	; 0x40
 8014e52:	f8d8 3000 	ldr.w	r3, [r8]
 8014e56:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014e5a:	7b19      	ldrb	r1, [r3, #12]
 8014e5c:	7adb      	ldrb	r3, [r3, #11]
 8014e5e:	9011      	str	r0, [sp, #68]	; 0x44
 8014e60:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014e64:	9114      	str	r1, [sp, #80]	; 0x50
 8014e66:	9315      	str	r3, [sp, #84]	; 0x54
 8014e68:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014e6c:	2a00      	cmp	r2, #0
 8014e6e:	d06a      	beq.n	8014f46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014e70:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014e74:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014e76:	2b06      	cmp	r3, #6
 8014e78:	bf14      	ite	ne
 8014e7a:	2301      	movne	r3, #1
 8014e7c:	2302      	moveq	r3, #2
 8014e7e:	4413      	add	r3, r2
 8014e80:	f04f 0900 	mov.w	r9, #0
 8014e84:	930f      	str	r3, [sp, #60]	; 0x3c
 8014e86:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014e8a:	464c      	mov	r4, r9
 8014e8c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014e90:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014e94:	4293      	cmp	r3, r2
 8014e96:	f280 808f 	bge.w	8014fb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014e9a:	2300      	movs	r3, #0
 8014e9c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014ea0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014ea4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014ea8:	429c      	cmp	r4, r3
 8014eaa:	d006      	beq.n	8014eba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014eac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014eae:	f242 020b 	movw	r2, #8203	; 0x200b
 8014eb2:	4294      	cmp	r4, r2
 8014eb4:	bf18      	it	ne
 8014eb6:	4623      	movne	r3, r4
 8014eb8:	930d      	str	r3, [sp, #52]	; 0x34
 8014eba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ebc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014ebe:	f8d8 2000 	ldr.w	r2, [r8]
 8014ec2:	428b      	cmp	r3, r1
 8014ec4:	db41      	blt.n	8014f4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014ec6:	6813      	ldr	r3, [r2, #0]
 8014ec8:	4610      	mov	r0, r2
 8014eca:	695b      	ldr	r3, [r3, #20]
 8014ecc:	4798      	blx	r3
 8014ece:	4604      	mov	r4, r0
 8014ed0:	f8d8 0000 	ldr.w	r0, [r8]
 8014ed4:	6803      	ldr	r3, [r0, #0]
 8014ed6:	aa1d      	add	r2, sp, #116	; 0x74
 8014ed8:	689d      	ldr	r5, [r3, #8]
 8014eda:	4621      	mov	r1, r4
 8014edc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014ee0:	47a8      	blx	r5
 8014ee2:	901c      	str	r0, [sp, #112]	; 0x70
 8014ee4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014ee8:	429c      	cmp	r4, r3
 8014eea:	f000 80eb 	beq.w	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014eee:	f242 030b 	movw	r3, #8203	; 0x200b
 8014ef2:	429c      	cmp	r4, r3
 8014ef4:	f000 80e6 	beq.w	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014ef8:	2c00      	cmp	r4, #0
 8014efa:	f000 80f8 	beq.w	80150ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014efe:	2c0a      	cmp	r4, #10
 8014f00:	d060      	beq.n	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014f02:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014f04:	b36a      	cbz	r2, 8014f62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014f06:	8894      	ldrh	r4, [r2, #4]
 8014f08:	f1bb 0f00 	cmp.w	fp, #0
 8014f0c:	d03b      	beq.n	8014f86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014f0e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014f12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014f16:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014f1a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014f1e:	f1bb 0f01 	cmp.w	fp, #1
 8014f22:	ea49 0903 	orr.w	r9, r9, r3
 8014f26:	d134      	bne.n	8014f92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014f28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f2a:	eba6 0609 	sub.w	r6, r6, r9
 8014f2e:	2b00      	cmp	r3, #0
 8014f30:	d14f      	bne.n	8014fd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014f32:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014f34:	eb09 0306 	add.w	r3, r9, r6
 8014f38:	4413      	add	r3, r2
 8014f3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014f3c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014f40:	4293      	cmp	r3, r2
 8014f42:	da51      	bge.n	8014fe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014f44:	e038      	b.n	8014fb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014f46:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014f48:	e79a      	b.n	8014e80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014f4a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014f4e:	9301      	str	r3, [sp, #4]
 8014f50:	ab1d      	add	r3, sp, #116	; 0x74
 8014f52:	9300      	str	r3, [sp, #0]
 8014f54:	4659      	mov	r1, fp
 8014f56:	ab1c      	add	r3, sp, #112	; 0x70
 8014f58:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014f5a:	f003 f8ca 	bl	80180f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014f5e:	4604      	mov	r4, r0
 8014f60:	e7c0      	b.n	8014ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014f62:	f8d8 0000 	ldr.w	r0, [r8]
 8014f66:	6803      	ldr	r3, [r0, #0]
 8014f68:	691b      	ldr	r3, [r3, #16]
 8014f6a:	4798      	blx	r3
 8014f6c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014f70:	4298      	cmp	r0, r3
 8014f72:	f000 80a7 	beq.w	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f76:	f242 030b 	movw	r3, #8203	; 0x200b
 8014f7a:	4298      	cmp	r0, r3
 8014f7c:	f000 80a2 	beq.w	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f80:	f1bb 0f00 	cmp.w	fp, #0
 8014f84:	d100      	bne.n	8014f88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014f86:	444e      	add	r6, r9
 8014f88:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014f8a:	2a00      	cmp	r2, #0
 8014f8c:	d1bf      	bne.n	8014f0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8014f8e:	4691      	mov	r9, r2
 8014f90:	e098      	b.n	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f94:	2b00      	cmp	r3, #0
 8014f96:	f000 80ac 	beq.w	80150f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8014f9a:	f1bb 0f00 	cmp.w	fp, #0
 8014f9e:	d118      	bne.n	8014fd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014fa0:	f8d8 0000 	ldr.w	r0, [r8]
 8014fa4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014fa6:	6803      	ldr	r3, [r0, #0]
 8014fa8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014faa:	4798      	blx	r3
 8014fac:	4406      	add	r6, r0
 8014fae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014fb0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014fb2:	1af3      	subs	r3, r6, r3
 8014fb4:	4293      	cmp	r3, r2
 8014fb6:	dd17      	ble.n	8014fe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014fb8:	2c00      	cmp	r4, #0
 8014fba:	f000 8098 	beq.w	80150ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014fbe:	2c0a      	cmp	r4, #10
 8014fc0:	f040 8086 	bne.w	80150d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014fc4:	240a      	movs	r4, #10
 8014fc6:	fab4 f084 	clz	r0, r4
 8014fca:	0940      	lsrs	r0, r0, #5
 8014fcc:	b01f      	add	sp, #124	; 0x7c
 8014fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fd2:	f8d8 0000 	ldr.w	r0, [r8]
 8014fd6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014fd8:	6803      	ldr	r3, [r0, #0]
 8014fda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014fdc:	4798      	blx	r3
 8014fde:	f1bb 0f01 	cmp.w	fp, #1
 8014fe2:	eba6 0600 	sub.w	r6, r6, r0
 8014fe6:	d0a4      	beq.n	8014f32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014fe8:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014fea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014fec:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014ff0:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014ff4:	7b43      	ldrb	r3, [r0, #13]
 8014ff6:	015b      	lsls	r3, r3, #5
 8014ff8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014ffc:	7983      	ldrb	r3, [r0, #6]
 8014ffe:	4431      	add	r1, r6
 8015000:	4313      	orrs	r3, r2
 8015002:	440b      	add	r3, r1
 8015004:	42bb      	cmp	r3, r7
 8015006:	db5d      	blt.n	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015008:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801500a:	4299      	cmp	r1, r3
 801500c:	da5a      	bge.n	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801500e:	f8d8 0000 	ldr.w	r0, [r8]
 8015012:	6803      	ldr	r3, [r0, #0]
 8015014:	42b7      	cmp	r7, r6
 8015016:	bfc8      	it	gt
 8015018:	1bbf      	subgt	r7, r7, r6
 801501a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801501c:	bfcc      	ite	gt
 801501e:	b2bf      	uxthgt	r7, r7
 8015020:	2700      	movle	r7, #0
 8015022:	4798      	blx	r3
 8015024:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015026:	7b5a      	ldrb	r2, [r3, #13]
 8015028:	00d1      	lsls	r1, r2, #3
 801502a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801502e:	7a19      	ldrb	r1, [r3, #8]
 8015030:	4329      	orrs	r1, r5
 8015032:	0655      	lsls	r5, r2, #25
 8015034:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015036:	bf44      	itt	mi
 8015038:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801503c:	b209      	sxthmi	r1, r1
 801503e:	1945      	adds	r5, r0, r5
 8015040:	1a6d      	subs	r5, r5, r1
 8015042:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015044:	b2ad      	uxth	r5, r5
 8015046:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801504a:	fa0f fa85 	sxth.w	sl, r5
 801504e:	4551      	cmp	r1, sl
 8015050:	dd3c      	ble.n	80150cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015052:	0112      	lsls	r2, r2, #4
 8015054:	79d8      	ldrb	r0, [r3, #7]
 8015056:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801505a:	4302      	orrs	r2, r0
 801505c:	4492      	add	sl, r2
 801505e:	4551      	cmp	r1, sl
 8015060:	dc30      	bgt.n	80150c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015062:	1b4d      	subs	r5, r1, r5
 8015064:	b22d      	sxth	r5, r5
 8015066:	468a      	mov	sl, r1
 8015068:	9319      	str	r3, [sp, #100]	; 0x64
 801506a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801506c:	f8d8 0000 	ldr.w	r0, [r8]
 8015070:	681a      	ldr	r2, [r3, #0]
 8015072:	6801      	ldr	r1, [r0, #0]
 8015074:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015076:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015078:	9313      	str	r3, [sp, #76]	; 0x4c
 801507a:	9218      	str	r2, [sp, #96]	; 0x60
 801507c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801507e:	4788      	blx	r1
 8015080:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015084:	910b      	str	r1, [sp, #44]	; 0x2c
 8015086:	f898 100e 	ldrb.w	r1, [r8, #14]
 801508a:	910a      	str	r1, [sp, #40]	; 0x28
 801508c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015090:	9109      	str	r1, [sp, #36]	; 0x24
 8015092:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015096:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015098:	9305      	str	r3, [sp, #20]
 801509a:	b2ad      	uxth	r5, r5
 801509c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80150a0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80150a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80150a6:	9304      	str	r3, [sp, #16]
 80150a8:	4437      	add	r7, r6
 80150aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80150ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80150ae:	9206      	str	r2, [sp, #24]
 80150b0:	b23f      	sxth	r7, r7
 80150b2:	f8cd a004 	str.w	sl, [sp, #4]
 80150b6:	9700      	str	r7, [sp, #0]
 80150b8:	681a      	ldr	r2, [r3, #0]
 80150ba:	9916      	ldr	r1, [sp, #88]	; 0x58
 80150bc:	685b      	ldr	r3, [r3, #4]
 80150be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80150c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80150c2:	47a8      	blx	r5
 80150c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80150c6:	3301      	adds	r3, #1
 80150c8:	930e      	str	r3, [sp, #56]	; 0x38
 80150ca:	e6e1      	b.n	8014e90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80150cc:	2500      	movs	r5, #0
 80150ce:	e7cb      	b.n	8015068 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80150d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80150d2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80150d4:	3501      	adds	r5, #1
 80150d6:	429d      	cmp	r5, r3
 80150d8:	f6bf af75 	bge.w	8014fc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80150dc:	4659      	mov	r1, fp
 80150de:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80150e0:	f7f3 ff52 	bl	8008f88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80150e4:	4604      	mov	r4, r0
 80150e6:	b110      	cbz	r0, 80150ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80150e8:	280a      	cmp	r0, #10
 80150ea:	d1f2      	bne.n	80150d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80150ec:	e76a      	b.n	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80150ee:	2400      	movs	r4, #0
 80150f0:	e769      	b.n	8014fc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80150f2:	f1bb 0f00 	cmp.w	fp, #0
 80150f6:	f43f af5a 	beq.w	8014fae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80150fa:	e775      	b.n	8014fe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080150fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80150fc:	b530      	push	{r4, r5, lr}
 80150fe:	8ac4      	ldrh	r4, [r0, #22]
 8015100:	8b45      	ldrh	r5, [r0, #26]
 8015102:	8343      	strh	r3, [r0, #26]
 8015104:	442c      	add	r4, r5
 8015106:	1ae4      	subs	r4, r4, r3
 8015108:	82c4      	strh	r4, [r0, #22]
 801510a:	8b83      	ldrh	r3, [r0, #28]
 801510c:	8b04      	ldrh	r4, [r0, #24]
 801510e:	4422      	add	r2, r4
 8015110:	440c      	add	r4, r1
 8015112:	1a59      	subs	r1, r3, r1
 8015114:	83c2      	strh	r2, [r0, #30]
 8015116:	8304      	strh	r4, [r0, #24]
 8015118:	8381      	strh	r1, [r0, #28]
 801511a:	bd30      	pop	{r4, r5, pc}

0801511c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801511c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015120:	4604      	mov	r4, r0
 8015122:	8a47      	ldrh	r7, [r0, #18]
 8015124:	68c0      	ldr	r0, [r0, #12]
 8015126:	6803      	ldr	r3, [r0, #0]
 8015128:	b085      	sub	sp, #20
 801512a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801512c:	4798      	blx	r3
 801512e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015132:	7a63      	ldrb	r3, [r4, #9]
 8015134:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015138:	42b7      	cmp	r7, r6
 801513a:	f103 33ff 	add.w	r3, r3, #4294967295
 801513e:	bfac      	ite	ge
 8015140:	f04f 0900 	movge.w	r9, #0
 8015144:	f04f 0901 	movlt.w	r9, #1
 8015148:	2b05      	cmp	r3, #5
 801514a:	d804      	bhi.n	8015156 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801514c:	e8df f003 	tbb	[pc, r3]
 8015150:	470e0854 	.word	0x470e0854
 8015154:	4c4c      	.short	0x4c4c
 8015156:	2500      	movs	r5, #0
 8015158:	46a9      	mov	r9, r5
 801515a:	462e      	mov	r6, r5
 801515c:	462f      	mov	r7, r5
 801515e:	e00d      	b.n	801517c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015160:	42b7      	cmp	r7, r6
 8015162:	bfb4      	ite	lt
 8015164:	2600      	movlt	r6, #0
 8015166:	2601      	movge	r6, #1
 8015168:	2500      	movs	r5, #0
 801516a:	e7f7      	b.n	801515c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801516c:	42b7      	cmp	r7, r6
 801516e:	464d      	mov	r5, r9
 8015170:	f04f 0900 	mov.w	r9, #0
 8015174:	bfb4      	ite	lt
 8015176:	2600      	movlt	r6, #0
 8015178:	2601      	movge	r6, #1
 801517a:	464f      	mov	r7, r9
 801517c:	f04f 0800 	mov.w	r8, #0
 8015180:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015184:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015188:	f8cd 8004 	str.w	r8, [sp, #4]
 801518c:	2300      	movs	r3, #0
 801518e:	9303      	str	r3, [sp, #12]
 8015190:	8823      	ldrh	r3, [r4, #0]
 8015192:	2b20      	cmp	r3, #32
 8015194:	d034      	beq.n	8015200 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015196:	f242 010b 	movw	r1, #8203	; 0x200b
 801519a:	1a5a      	subs	r2, r3, r1
 801519c:	f1d2 0a00 	rsbs	sl, r2, #0
 80151a0:	eb4a 0a02 	adc.w	sl, sl, r2
 80151a4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80151a8:	4293      	cmp	r3, r2
 80151aa:	d009      	beq.n	80151c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80151ac:	428b      	cmp	r3, r1
 80151ae:	9a01      	ldr	r2, [sp, #4]
 80151b0:	bf18      	it	ne
 80151b2:	461a      	movne	r2, r3
 80151b4:	9201      	str	r2, [sp, #4]
 80151b6:	bf0c      	ite	eq
 80151b8:	f04f 0a01 	moveq.w	sl, #1
 80151bc:	f04f 0a00 	movne.w	sl, #0
 80151c0:	ab03      	add	r3, sp, #12
 80151c2:	68e2      	ldr	r2, [r4, #12]
 80151c4:	7a21      	ldrb	r1, [r4, #8]
 80151c6:	6860      	ldr	r0, [r4, #4]
 80151c8:	f002 ff4a 	bl	8018060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80151cc:	8020      	strh	r0, [r4, #0]
 80151ce:	b9d8      	cbnz	r0, 8015208 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80151d0:	8ba2      	ldrh	r2, [r4, #28]
 80151d2:	2300      	movs	r3, #0
 80151d4:	4611      	mov	r1, r2
 80151d6:	4620      	mov	r0, r4
 80151d8:	f7ff ff90 	bl	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80151dc:	e06e      	b.n	80152bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80151de:	2500      	movs	r5, #0
 80151e0:	46a9      	mov	r9, r5
 80151e2:	462e      	mov	r6, r5
 80151e4:	2701      	movs	r7, #1
 80151e6:	e7c9      	b.n	801517c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80151e8:	42b7      	cmp	r7, r6
 80151ea:	f04f 0500 	mov.w	r5, #0
 80151ee:	bfb4      	ite	lt
 80151f0:	2700      	movlt	r7, #0
 80151f2:	2701      	movge	r7, #1
 80151f4:	462e      	mov	r6, r5
 80151f6:	e7c1      	b.n	801517c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80151f8:	2500      	movs	r5, #0
 80151fa:	46a9      	mov	r9, r5
 80151fc:	2601      	movs	r6, #1
 80151fe:	e7ad      	b.n	801515c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015200:	9301      	str	r3, [sp, #4]
 8015202:	f04f 0a01 	mov.w	sl, #1
 8015206:	e7db      	b.n	80151c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015208:	8b63      	ldrh	r3, [r4, #26]
 801520a:	280a      	cmp	r0, #10
 801520c:	f103 0301 	add.w	r3, r3, #1
 8015210:	8363      	strh	r3, [r4, #26]
 8015212:	d0dd      	beq.n	80151d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015214:	9a03      	ldr	r2, [sp, #12]
 8015216:	bb62      	cbnz	r2, 8015272 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015218:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801521c:	4298      	cmp	r0, r3
 801521e:	d003      	beq.n	8015228 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015220:	f242 030b 	movw	r3, #8203	; 0x200b
 8015224:	4298      	cmp	r0, r3
 8015226:	d1b1      	bne.n	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015228:	8823      	ldrh	r3, [r4, #0]
 801522a:	8ba1      	ldrh	r1, [r4, #28]
 801522c:	2b20      	cmp	r3, #32
 801522e:	d003      	beq.n	8015238 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015230:	f242 000b 	movw	r0, #8203	; 0x200b
 8015234:	4283      	cmp	r3, r0
 8015236:	d131      	bne.n	801529c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015238:	f1ba 0f00 	cmp.w	sl, #0
 801523c:	bf0a      	itet	eq
 801523e:	4688      	moveq	r8, r1
 8015240:	4650      	movne	r0, sl
 8015242:	2001      	moveq	r0, #1
 8015244:	440a      	add	r2, r1
 8015246:	8b23      	ldrh	r3, [r4, #24]
 8015248:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801524c:	b292      	uxth	r2, r2
 801524e:	83a2      	strh	r2, [r4, #28]
 8015250:	4413      	add	r3, r2
 8015252:	f1b9 0f00 	cmp.w	r9, #0
 8015256:	d102      	bne.n	801525e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015258:	2d00      	cmp	r5, #0
 801525a:	d042      	beq.n	80152e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801525c:	b300      	cbz	r0, 80152a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801525e:	8c21      	ldrh	r1, [r4, #32]
 8015260:	4419      	add	r1, r3
 8015262:	458c      	cmp	ip, r1
 8015264:	da37      	bge.n	80152d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015266:	8ae1      	ldrh	r1, [r4, #22]
 8015268:	2900      	cmp	r1, #0
 801526a:	d034      	beq.n	80152d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801526c:	4563      	cmp	r3, ip
 801526e:	dd8d      	ble.n	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015270:	e01d      	b.n	80152ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015272:	8893      	ldrh	r3, [r2, #4]
 8015274:	8023      	strh	r3, [r4, #0]
 8015276:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801527a:	9901      	ldr	r1, [sp, #4]
 801527c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015280:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015284:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015288:	ea4b 0b00 	orr.w	fp, fp, r0
 801528c:	68e0      	ldr	r0, [r4, #12]
 801528e:	6803      	ldr	r3, [r0, #0]
 8015290:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015292:	4798      	blx	r3
 8015294:	eb0b 0200 	add.w	r2, fp, r0
 8015298:	b292      	uxth	r2, r2
 801529a:	e7c5      	b.n	8015228 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801529c:	2000      	movs	r0, #0
 801529e:	e7d1      	b.n	8015244 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80152a0:	4563      	cmp	r3, ip
 80152a2:	f77f af73 	ble.w	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152a6:	8ae3      	ldrh	r3, [r4, #22]
 80152a8:	2b00      	cmp	r3, #0
 80152aa:	f43f af6f 	beq.w	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152ae:	2301      	movs	r3, #1
 80152b0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80152b4:	8c22      	ldrh	r2, [r4, #32]
 80152b6:	8be3      	ldrh	r3, [r4, #30]
 80152b8:	4413      	add	r3, r2
 80152ba:	83e3      	strh	r3, [r4, #30]
 80152bc:	68e0      	ldr	r0, [r4, #12]
 80152be:	6803      	ldr	r3, [r0, #0]
 80152c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80152c2:	4798      	blx	r3
 80152c4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80152c8:	4418      	add	r0, r3
 80152ca:	8a63      	ldrh	r3, [r4, #18]
 80152cc:	1a18      	subs	r0, r3, r0
 80152ce:	8260      	strh	r0, [r4, #18]
 80152d0:	b005      	add	sp, #20
 80152d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152d6:	2300      	movs	r3, #0
 80152d8:	4611      	mov	r1, r2
 80152da:	4620      	mov	r0, r4
 80152dc:	f7ff ff0e 	bl	80150fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80152e0:	e754      	b.n	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152e2:	4563      	cmp	r3, ip
 80152e4:	dd14      	ble.n	8015310 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80152e6:	b117      	cbz	r7, 80152ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80152e8:	2301      	movs	r3, #1
 80152ea:	460a      	mov	r2, r1
 80152ec:	e772      	b.n	80151d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80152ee:	2e00      	cmp	r6, #0
 80152f0:	f43f af4c 	beq.w	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152f4:	2800      	cmp	r0, #0
 80152f6:	f47f af49 	bne.w	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152fa:	f1ba 0f00 	cmp.w	sl, #0
 80152fe:	d002      	beq.n	8015306 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015300:	2301      	movs	r3, #1
 8015302:	4642      	mov	r2, r8
 8015304:	e767      	b.n	80151d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015306:	8ae3      	ldrh	r3, [r4, #22]
 8015308:	2b00      	cmp	r3, #0
 801530a:	f43f af3f 	beq.w	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801530e:	e7d5      	b.n	80152bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015310:	2800      	cmp	r0, #0
 8015312:	f47f af3b 	bne.w	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015316:	f1ba 0f00 	cmp.w	sl, #0
 801531a:	f43f af37 	beq.w	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801531e:	2301      	movs	r3, #1
 8015320:	4642      	mov	r2, r8
 8015322:	e7da      	b.n	80152da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015324 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015326:	4605      	mov	r5, r0
 8015328:	b08f      	sub	sp, #60	; 0x3c
 801532a:	4617      	mov	r7, r2
 801532c:	461c      	mov	r4, r3
 801532e:	460e      	mov	r6, r1
 8015330:	b1d1      	cbz	r1, 8015368 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015332:	681b      	ldr	r3, [r3, #0]
 8015334:	4620      	mov	r0, r4
 8015336:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015338:	4798      	blx	r3
 801533a:	4240      	negs	r0, r0
 801533c:	b200      	sxth	r0, r0
 801533e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015342:	9603      	str	r6, [sp, #12]
 8015344:	9700      	str	r7, [sp, #0]
 8015346:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801534a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801534e:	4629      	mov	r1, r5
 8015350:	a805      	add	r0, sp, #20
 8015352:	f7ff fcbf 	bl	8014cd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015356:	2401      	movs	r4, #1
 8015358:	a805      	add	r0, sp, #20
 801535a:	f7ff fedf 	bl	801511c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801535e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015362:	b163      	cbz	r3, 801537e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015364:	3401      	adds	r4, #1
 8015366:	e7f7      	b.n	8015358 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015368:	f002 ff48 	bl	80181fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801536c:	2401      	movs	r4, #1
 801536e:	280a      	cmp	r0, #10
 8015370:	4628      	mov	r0, r5
 8015372:	bf08      	it	eq
 8015374:	3401      	addeq	r4, #1
 8015376:	f002 ff41 	bl	80181fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801537a:	2800      	cmp	r0, #0
 801537c:	d1f7      	bne.n	801536e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801537e:	b2a0      	uxth	r0, r4
 8015380:	b00f      	add	sp, #60	; 0x3c
 8015382:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015384 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015388:	b0e3      	sub	sp, #396	; 0x18c
 801538a:	461c      	mov	r4, r3
 801538c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801538e:	4683      	mov	fp, r0
 8015390:	4688      	mov	r8, r1
 8015392:	2b00      	cmp	r3, #0
 8015394:	f000 8112 	beq.w	80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015398:	6823      	ldr	r3, [r4, #0]
 801539a:	2b00      	cmp	r3, #0
 801539c:	f000 810e 	beq.w	80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153a0:	7ba3      	ldrb	r3, [r4, #14]
 80153a2:	2b00      	cmp	r3, #0
 80153a4:	f000 810a 	beq.w	80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153a8:	6810      	ldr	r0, [r2, #0]
 80153aa:	6851      	ldr	r1, [r2, #4]
 80153ac:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80153b0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80153b4:	ad0a      	add	r5, sp, #40	; 0x28
 80153b6:	462b      	mov	r3, r5
 80153b8:	c303      	stmia	r3!, {r0, r1}
 80153ba:	2100      	movs	r1, #0
 80153bc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80153c0:	910c      	str	r1, [sp, #48]	; 0x30
 80153c2:	79a2      	ldrb	r2, [r4, #6]
 80153c4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80153c8:	a90c      	add	r1, sp, #48	; 0x30
 80153ca:	4628      	mov	r0, r5
 80153cc:	f7ff fd01 	bl	8014dd2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80153d0:	a90c      	add	r1, sp, #48	; 0x30
 80153d2:	4608      	mov	r0, r1
 80153d4:	79a2      	ldrb	r2, [r4, #6]
 80153d6:	f7ff fcfc 	bl	8014dd2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80153da:	a817      	add	r0, sp, #92	; 0x5c
 80153dc:	f002 fae2 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 80153e0:	6820      	ldr	r0, [r4, #0]
 80153e2:	6803      	ldr	r3, [r0, #0]
 80153e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80153e6:	4798      	blx	r3
 80153e8:	4606      	mov	r6, r0
 80153ea:	6820      	ldr	r0, [r4, #0]
 80153ec:	6803      	ldr	r3, [r0, #0]
 80153ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80153f0:	4798      	blx	r3
 80153f2:	4633      	mov	r3, r6
 80153f4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80153f6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80153f8:	9000      	str	r0, [sp, #0]
 80153fa:	a817      	add	r0, sp, #92	; 0x5c
 80153fc:	f002 fb2d 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015400:	6820      	ldr	r0, [r4, #0]
 8015402:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015406:	6803      	ldr	r3, [r0, #0]
 8015408:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801540a:	4798      	blx	r3
 801540c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015410:	6823      	ldr	r3, [r4, #0]
 8015412:	4607      	mov	r7, r0
 8015414:	4406      	add	r6, r0
 8015416:	a830      	add	r0, sp, #192	; 0xc0
 8015418:	f893 9009 	ldrb.w	r9, [r3, #9]
 801541c:	f002 fac2 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 8015420:	7c23      	ldrb	r3, [r4, #16]
 8015422:	b17b      	cbz	r3, 8015444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015424:	6820      	ldr	r0, [r4, #0]
 8015426:	6803      	ldr	r3, [r0, #0]
 8015428:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801542a:	4798      	blx	r3
 801542c:	9009      	str	r0, [sp, #36]	; 0x24
 801542e:	6820      	ldr	r0, [r4, #0]
 8015430:	6802      	ldr	r2, [r0, #0]
 8015432:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015434:	4790      	blx	r2
 8015436:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015438:	9000      	str	r0, [sp, #0]
 801543a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801543c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801543e:	a830      	add	r0, sp, #192	; 0xc0
 8015440:	f002 fb0b 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015444:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015448:	7be2      	ldrb	r2, [r4, #15]
 801544a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801544e:	1a8a      	subs	r2, r1, r2
 8015450:	7c21      	ldrb	r1, [r4, #16]
 8015452:	9103      	str	r1, [sp, #12]
 8015454:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015458:	9102      	str	r1, [sp, #8]
 801545a:	6821      	ldr	r1, [r4, #0]
 801545c:	9101      	str	r1, [sp, #4]
 801545e:	7961      	ldrb	r1, [r4, #5]
 8015460:	9100      	str	r1, [sp, #0]
 8015462:	b292      	uxth	r2, r2
 8015464:	a930      	add	r1, sp, #192	; 0xc0
 8015466:	a80e      	add	r0, sp, #56	; 0x38
 8015468:	f7ff fc34 	bl	8014cd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801546c:	2e00      	cmp	r6, #0
 801546e:	dc5b      	bgt.n	8015528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015470:	af17      	add	r7, sp, #92	; 0x5c
 8015472:	f04f 0900 	mov.w	r9, #0
 8015476:	7c23      	ldrb	r3, [r4, #16]
 8015478:	2b00      	cmp	r3, #0
 801547a:	f000 80b1 	beq.w	80155e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801547e:	a80e      	add	r0, sp, #56	; 0x38
 8015480:	f7ff fe4c 	bl	801511c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015484:	f1ba 0f00 	cmp.w	sl, #0
 8015488:	f000 80a5 	beq.w	80155d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801548c:	7c23      	ldrb	r3, [r4, #16]
 801548e:	9309      	str	r3, [sp, #36]	; 0x24
 8015490:	2264      	movs	r2, #100	; 0x64
 8015492:	4639      	mov	r1, r7
 8015494:	a849      	add	r0, sp, #292	; 0x124
 8015496:	f015 ff24 	bl	802b2e2 <memcpy>
 801549a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801549c:	2b00      	cmp	r3, #0
 801549e:	f000 80a7 	beq.w	80155f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80154a2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80154a6:	7922      	ldrb	r2, [r4, #4]
 80154a8:	2a01      	cmp	r2, #1
 80154aa:	f040 808a 	bne.w	80155c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80154ae:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80154b2:	1ac0      	subs	r0, r0, r3
 80154b4:	2302      	movs	r3, #2
 80154b6:	fb90 f0f3 	sdiv	r0, r0, r3
 80154ba:	b200      	sxth	r0, r0
 80154bc:	7c23      	ldrb	r3, [r4, #16]
 80154be:	2b00      	cmp	r3, #0
 80154c0:	f000 808b 	beq.w	80155da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80154c4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80154c8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80154cc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80154d0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80154d4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80154d8:	4410      	add	r0, r2
 80154da:	b200      	sxth	r0, r0
 80154dc:	9000      	str	r0, [sp, #0]
 80154de:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80154e2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80154e6:	4642      	mov	r2, r8
 80154e8:	2100      	movs	r1, #0
 80154ea:	4658      	mov	r0, fp
 80154ec:	f7ff fca2 	bl	8014e34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80154f0:	2800      	cmp	r0, #0
 80154f2:	d163      	bne.n	80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80154f4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80154f8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80154fc:	b2b2      	uxth	r2, r6
 80154fe:	4413      	add	r3, r2
 8015500:	1a8a      	subs	r2, r1, r2
 8015502:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015506:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801550a:	b21b      	sxth	r3, r3
 801550c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015510:	2a00      	cmp	r2, #0
 8015512:	d153      	bne.n	80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015514:	6822      	ldr	r2, [r4, #0]
 8015516:	8869      	ldrh	r1, [r5, #2]
 8015518:	7a12      	ldrb	r2, [r2, #8]
 801551a:	1a9b      	subs	r3, r3, r2
 801551c:	88ea      	ldrh	r2, [r5, #6]
 801551e:	440a      	add	r2, r1
 8015520:	b212      	sxth	r2, r2
 8015522:	4293      	cmp	r3, r2
 8015524:	dda7      	ble.n	8015476 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015526:	e049      	b.n	80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015528:	7c23      	ldrb	r3, [r4, #16]
 801552a:	444f      	add	r7, r9
 801552c:	b1c3      	cbz	r3, 8015560 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801552e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015532:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015536:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801553a:	443b      	add	r3, r7
 801553c:	4293      	cmp	r3, r2
 801553e:	da97      	bge.n	8015470 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015540:	a80e      	add	r0, sp, #56	; 0x38
 8015542:	f7ff fdeb 	bl	801511c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015546:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801554a:	3b01      	subs	r3, #1
 801554c:	b29b      	uxth	r3, r3
 801554e:	454b      	cmp	r3, r9
 8015550:	9309      	str	r3, [sp, #36]	; 0x24
 8015552:	d021      	beq.n	8015598 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015554:	7961      	ldrb	r1, [r4, #5]
 8015556:	a817      	add	r0, sp, #92	; 0x5c
 8015558:	f7f3 fd16 	bl	8008f88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801555c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801555e:	e7f4      	b.n	801554a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015560:	fa1f f986 	uxth.w	r9, r6
 8015564:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015568:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801556c:	443b      	add	r3, r7
 801556e:	4293      	cmp	r3, r2
 8015570:	f6bf af7e 	bge.w	8015470 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015574:	a817      	add	r0, sp, #92	; 0x5c
 8015576:	f002 fe41 	bl	80181fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801557a:	b1f8      	cbz	r0, 80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801557c:	280a      	cmp	r0, #10
 801557e:	d1f1      	bne.n	8015564 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015580:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015584:	444b      	add	r3, r9
 8015586:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801558a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801558e:	eba3 0309 	sub.w	r3, r3, r9
 8015592:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015596:	e7e5      	b.n	8015564 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015598:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801559c:	b2b3      	uxth	r3, r6
 801559e:	441a      	add	r2, r3
 80155a0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80155a4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80155a8:	1ad3      	subs	r3, r2, r3
 80155aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80155ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80155b2:	b11b      	cbz	r3, 80155bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80155b4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80155b8:	2b00      	cmp	r3, #0
 80155ba:	d0ba      	beq.n	8015532 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80155bc:	b063      	add	sp, #396	; 0x18c
 80155be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155c2:	2a02      	cmp	r2, #2
 80155c4:	d105      	bne.n	80155d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80155c6:	7be2      	ldrb	r2, [r4, #15]
 80155c8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80155cc:	1a80      	subs	r0, r0, r2
 80155ce:	1ac0      	subs	r0, r0, r3
 80155d0:	e773      	b.n	80154ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80155d2:	2000      	movs	r0, #0
 80155d4:	e772      	b.n	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80155d6:	7be0      	ldrb	r0, [r4, #15]
 80155d8:	e770      	b.n	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80155da:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80155de:	e773      	b.n	80154c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80155e0:	f1ba 0f00 	cmp.w	sl, #0
 80155e4:	d0f7      	beq.n	80155d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80155e6:	2264      	movs	r2, #100	; 0x64
 80155e8:	4639      	mov	r1, r7
 80155ea:	a849      	add	r0, sp, #292	; 0x124
 80155ec:	f015 fe79 	bl	802b2e2 <memcpy>
 80155f0:	2300      	movs	r3, #0
 80155f2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80155f6:	6821      	ldr	r1, [r4, #0]
 80155f8:	a849      	add	r0, sp, #292	; 0x124
 80155fa:	f7ff fbae 	bl	8014d5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80155fe:	b203      	sxth	r3, r0
 8015600:	e751      	b.n	80154a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015602 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015602:	2b03      	cmp	r3, #3
 8015604:	d818      	bhi.n	8015638 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015606:	e8df f003 	tbb	[pc, r3]
 801560a:	0602      	.short	0x0602
 801560c:	130d      	.short	0x130d
 801560e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015612:	1850      	adds	r0, r2, r1
 8015614:	4770      	bx	lr
 8015616:	8803      	ldrh	r3, [r0, #0]
 8015618:	8880      	ldrh	r0, [r0, #4]
 801561a:	4418      	add	r0, r3
 801561c:	b200      	sxth	r0, r0
 801561e:	1a80      	subs	r0, r0, r2
 8015620:	3801      	subs	r0, #1
 8015622:	4770      	bx	lr
 8015624:	8803      	ldrh	r3, [r0, #0]
 8015626:	8880      	ldrh	r0, [r0, #4]
 8015628:	4418      	add	r0, r3
 801562a:	b200      	sxth	r0, r0
 801562c:	1a40      	subs	r0, r0, r1
 801562e:	e7f7      	b.n	8015620 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015630:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015634:	4410      	add	r0, r2
 8015636:	4770      	bx	lr
 8015638:	2000      	movs	r0, #0
 801563a:	4770      	bx	lr

0801563c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801563c:	2b03      	cmp	r3, #3
 801563e:	d817      	bhi.n	8015670 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015640:	e8df f003 	tbb	[pc, r3]
 8015644:	10090602 	.word	0x10090602
 8015648:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801564c:	1850      	adds	r0, r2, r1
 801564e:	4770      	bx	lr
 8015650:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015654:	e7fa      	b.n	801564c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015656:	8843      	ldrh	r3, [r0, #2]
 8015658:	88c0      	ldrh	r0, [r0, #6]
 801565a:	4418      	add	r0, r3
 801565c:	b200      	sxth	r0, r0
 801565e:	1a80      	subs	r0, r0, r2
 8015660:	3801      	subs	r0, #1
 8015662:	4770      	bx	lr
 8015664:	8843      	ldrh	r3, [r0, #2]
 8015666:	88c0      	ldrh	r0, [r0, #6]
 8015668:	4418      	add	r0, r3
 801566a:	b200      	sxth	r0, r0
 801566c:	1a40      	subs	r0, r0, r1
 801566e:	e7f7      	b.n	8015660 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015670:	2000      	movs	r0, #0
 8015672:	4770      	bx	lr

08015674 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015674:	4b01      	ldr	r3, [pc, #4]	; (801567c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015676:	2200      	movs	r2, #0
 8015678:	601a      	str	r2, [r3, #0]
 801567a:	4770      	bx	lr
 801567c:	20012db4 	.word	0x20012db4

08015680 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015680:	4603      	mov	r3, r0
 8015682:	b1c8      	cbz	r0, 80156b8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015684:	0c02      	lsrs	r2, r0, #16
 8015686:	0412      	lsls	r2, r2, #16
 8015688:	b9a2      	cbnz	r2, 80156b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801568a:	0403      	lsls	r3, r0, #16
 801568c:	2010      	movs	r0, #16
 801568e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015692:	bf04      	itt	eq
 8015694:	021b      	lsleq	r3, r3, #8
 8015696:	3008      	addeq	r0, #8
 8015698:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801569c:	bf04      	itt	eq
 801569e:	011b      	lsleq	r3, r3, #4
 80156a0:	3004      	addeq	r0, #4
 80156a2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80156a6:	bf04      	itt	eq
 80156a8:	009b      	lsleq	r3, r3, #2
 80156aa:	3002      	addeq	r0, #2
 80156ac:	2b00      	cmp	r3, #0
 80156ae:	db04      	blt.n	80156ba <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80156b0:	3001      	adds	r0, #1
 80156b2:	4770      	bx	lr
 80156b4:	2000      	movs	r0, #0
 80156b6:	e7ea      	b.n	801568e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80156b8:	2020      	movs	r0, #32
 80156ba:	4770      	bx	lr

080156bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80156bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156c0:	b087      	sub	sp, #28
 80156c2:	460d      	mov	r5, r1
 80156c4:	4616      	mov	r6, r2
 80156c6:	4698      	mov	r8, r3
 80156c8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80156cc:	4601      	mov	r1, r0
 80156ce:	b120      	cbz	r0, 80156da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80156d0:	b11a      	cbz	r2, 80156da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80156d2:	2d1f      	cmp	r5, #31
 80156d4:	d801      	bhi.n	80156da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80156d6:	2b1f      	cmp	r3, #31
 80156d8:	d904      	bls.n	80156e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80156da:	2000      	movs	r0, #0
 80156dc:	6038      	str	r0, [r7, #0]
 80156de:	b007      	add	sp, #28
 80156e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156e4:	b97d      	cbnz	r5, 8015706 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80156e6:	b143      	cbz	r3, 80156fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80156e8:	4602      	mov	r2, r0
 80156ea:	e9cd 4700 	strd	r4, r7, [sp]
 80156ee:	462b      	mov	r3, r5
 80156f0:	4641      	mov	r1, r8
 80156f2:	4630      	mov	r0, r6
 80156f4:	f7ff ffe2 	bl	80156bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80156f8:	e7f1      	b.n	80156de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80156fa:	f04f 33ff 	mov.w	r3, #4294967295
 80156fe:	603b      	str	r3, [r7, #0]
 8015700:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015704:	e7eb      	b.n	80156de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015706:	fa32 fa05 	lsrs.w	sl, r2, r5
 801570a:	d106      	bne.n	801571a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801570c:	4346      	muls	r6, r0
 801570e:	fbb6 f0f4 	udiv	r0, r6, r4
 8015712:	fb04 6610 	mls	r6, r4, r0, r6
 8015716:	603e      	str	r6, [r7, #0]
 8015718:	e7e1      	b.n	80156de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801571a:	2201      	movs	r2, #1
 801571c:	40aa      	lsls	r2, r5
 801571e:	3a01      	subs	r2, #1
 8015720:	4016      	ands	r6, r2
 8015722:	fa00 fb05 	lsl.w	fp, r0, r5
 8015726:	4630      	mov	r0, r6
 8015728:	fbbb f9f4 	udiv	r9, fp, r4
 801572c:	fb0a f309 	mul.w	r3, sl, r9
 8015730:	9303      	str	r3, [sp, #12]
 8015732:	f7ff ffa5 	bl	8015680 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015736:	462b      	mov	r3, r5
 8015738:	460a      	mov	r2, r1
 801573a:	e9cd 4700 	strd	r4, r7, [sp]
 801573e:	4601      	mov	r1, r0
 8015740:	4630      	mov	r0, r6
 8015742:	f7ff ffbb 	bl	80156bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015746:	fb04 b919 	mls	r9, r4, r9, fp
 801574a:	4606      	mov	r6, r0
 801574c:	4648      	mov	r0, r9
 801574e:	eb05 0108 	add.w	r1, r5, r8
 8015752:	f7ff ff95 	bl	8015680 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015756:	ab05      	add	r3, sp, #20
 8015758:	e9cd 4300 	strd	r4, r3, [sp]
 801575c:	464a      	mov	r2, r9
 801575e:	4603      	mov	r3, r0
 8015760:	4650      	mov	r0, sl
 8015762:	f7ff ffab 	bl	80156bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015766:	6839      	ldr	r1, [r7, #0]
 8015768:	9a05      	ldr	r2, [sp, #20]
 801576a:	9b03      	ldr	r3, [sp, #12]
 801576c:	4411      	add	r1, r2
 801576e:	fbb1 f2f4 	udiv	r2, r1, r4
 8015772:	18d3      	adds	r3, r2, r3
 8015774:	441e      	add	r6, r3
 8015776:	fb04 1412 	mls	r4, r4, r2, r1
 801577a:	4430      	add	r0, r6
 801577c:	603c      	str	r4, [r7, #0]
 801577e:	e7ae      	b.n	80156de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015780 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015780:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015784:	b085      	sub	sp, #20
 8015786:	f1b0 0900 	subs.w	r9, r0, #0
 801578a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801578c:	461d      	mov	r5, r3
 801578e:	bfbf      	itttt	lt
 8015790:	6823      	ldrlt	r3, [r4, #0]
 8015792:	425b      	neglt	r3, r3
 8015794:	f1c9 0900 	rsblt	r9, r9, #0
 8015798:	6023      	strlt	r3, [r4, #0]
 801579a:	bfb4      	ite	lt
 801579c:	f04f 36ff 	movlt.w	r6, #4294967295
 80157a0:	2601      	movge	r6, #1
 80157a2:	2a00      	cmp	r2, #0
 80157a4:	4617      	mov	r7, r2
 80157a6:	da04      	bge.n	80157b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80157a8:	6823      	ldr	r3, [r4, #0]
 80157aa:	425b      	negs	r3, r3
 80157ac:	4257      	negs	r7, r2
 80157ae:	4276      	negs	r6, r6
 80157b0:	6023      	str	r3, [r4, #0]
 80157b2:	2d00      	cmp	r5, #0
 80157b4:	4638      	mov	r0, r7
 80157b6:	bfba      	itte	lt
 80157b8:	426d      	neglt	r5, r5
 80157ba:	f04f 38ff 	movlt.w	r8, #4294967295
 80157be:	f04f 0801 	movge.w	r8, #1
 80157c2:	f7ff ff5d 	bl	8015680 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80157c6:	ab03      	add	r3, sp, #12
 80157c8:	e9cd 5300 	strd	r5, r3, [sp]
 80157cc:	463a      	mov	r2, r7
 80157ce:	4603      	mov	r3, r0
 80157d0:	4648      	mov	r0, r9
 80157d2:	f7ff ff73 	bl	80156bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80157d6:	6823      	ldr	r3, [r4, #0]
 80157d8:	9a03      	ldr	r2, [sp, #12]
 80157da:	4546      	cmp	r6, r8
 80157dc:	441a      	add	r2, r3
 80157de:	fb92 f3f5 	sdiv	r3, r2, r5
 80157e2:	4418      	add	r0, r3
 80157e4:	bf18      	it	ne
 80157e6:	4240      	negne	r0, r0
 80157e8:	fb05 2313 	mls	r3, r5, r3, r2
 80157ec:	1c72      	adds	r2, r6, #1
 80157ee:	6023      	str	r3, [r4, #0]
 80157f0:	d105      	bne.n	80157fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80157f2:	2b00      	cmp	r3, #0
 80157f4:	f1c3 0200 	rsb	r2, r3, #0
 80157f8:	db0b      	blt.n	8015812 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80157fa:	6022      	str	r2, [r4, #0]
 80157fc:	e006      	b.n	801580c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80157fe:	2e01      	cmp	r6, #1
 8015800:	d104      	bne.n	801580c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015802:	2b00      	cmp	r3, #0
 8015804:	da02      	bge.n	801580c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015806:	442b      	add	r3, r5
 8015808:	3801      	subs	r0, #1
 801580a:	6023      	str	r3, [r4, #0]
 801580c:	b005      	add	sp, #20
 801580e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015812:	3801      	subs	r0, #1
 8015814:	1b52      	subs	r2, r2, r5
 8015816:	e7f0      	b.n	80157fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015818 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015818:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801581c:	4c1c      	ldr	r4, [pc, #112]	; (8015890 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801581e:	6807      	ldr	r7, [r0, #0]
 8015820:	69a3      	ldr	r3, [r4, #24]
 8015822:	4605      	mov	r5, r0
 8015824:	b92b      	cbnz	r3, 8015832 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015826:	6840      	ldr	r0, [r0, #4]
 8015828:	e9c5 7000 	strd	r7, r0, [r5]
 801582c:	b004      	add	sp, #16
 801582e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015832:	68a2      	ldr	r2, [r4, #8]
 8015834:	6820      	ldr	r0, [r4, #0]
 8015836:	ae04      	add	r6, sp, #16
 8015838:	f04f 0802 	mov.w	r8, #2
 801583c:	fb93 f1f8 	sdiv	r1, r3, r8
 8015840:	440a      	add	r2, r1
 8015842:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015846:	69e1      	ldr	r1, [r4, #28]
 8015848:	9600      	str	r6, [sp, #0]
 801584a:	463a      	mov	r2, r7
 801584c:	f7ff ff98 	bl	8015780 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015850:	69a3      	ldr	r3, [r4, #24]
 8015852:	686a      	ldr	r2, [r5, #4]
 8015854:	6a21      	ldr	r1, [r4, #32]
 8015856:	9600      	str	r6, [sp, #0]
 8015858:	4607      	mov	r7, r0
 801585a:	6860      	ldr	r0, [r4, #4]
 801585c:	f7ff ff90 	bl	8015780 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015860:	6962      	ldr	r2, [r4, #20]
 8015862:	69a3      	ldr	r3, [r4, #24]
 8015864:	fb93 f8f8 	sdiv	r8, r3, r8
 8015868:	4442      	add	r2, r8
 801586a:	9203      	str	r2, [sp, #12]
 801586c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801586e:	682a      	ldr	r2, [r5, #0]
 8015870:	9600      	str	r6, [sp, #0]
 8015872:	4407      	add	r7, r0
 8015874:	68e0      	ldr	r0, [r4, #12]
 8015876:	f7ff ff83 	bl	8015780 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801587a:	9600      	str	r6, [sp, #0]
 801587c:	4680      	mov	r8, r0
 801587e:	69a3      	ldr	r3, [r4, #24]
 8015880:	686a      	ldr	r2, [r5, #4]
 8015882:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015884:	6920      	ldr	r0, [r4, #16]
 8015886:	f7ff ff7b 	bl	8015780 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801588a:	4440      	add	r0, r8
 801588c:	e7cc      	b.n	8015828 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801588e:	bf00      	nop
 8015890:	20012db8 	.word	0x20012db8

08015894 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015894:	4b07      	ldr	r3, [pc, #28]	; (80158b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015896:	781b      	ldrb	r3, [r3, #0]
 8015898:	2b01      	cmp	r3, #1
 801589a:	d109      	bne.n	80158b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801589c:	f9b1 3000 	ldrsh.w	r3, [r1]
 80158a0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80158a4:	8003      	strh	r3, [r0, #0]
 80158a6:	4b04      	ldr	r3, [pc, #16]	; (80158b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80158a8:	881b      	ldrh	r3, [r3, #0]
 80158aa:	3b01      	subs	r3, #1
 80158ac:	1a9b      	subs	r3, r3, r2
 80158ae:	800b      	strh	r3, [r1, #0]
 80158b0:	4770      	bx	lr
 80158b2:	bf00      	nop
 80158b4:	20012d9c 	.word	0x20012d9c
 80158b8:	20012d98 	.word	0x20012d98

080158bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80158bc:	b510      	push	{r4, lr}
 80158be:	4b07      	ldr	r3, [pc, #28]	; (80158dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80158c0:	781b      	ldrb	r3, [r3, #0]
 80158c2:	2b01      	cmp	r3, #1
 80158c4:	d108      	bne.n	80158d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80158c6:	4b06      	ldr	r3, [pc, #24]	; (80158e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80158c8:	880c      	ldrh	r4, [r1, #0]
 80158ca:	881b      	ldrh	r3, [r3, #0]
 80158cc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80158d0:	3b01      	subs	r3, #1
 80158d2:	1b1b      	subs	r3, r3, r4
 80158d4:	8003      	strh	r3, [r0, #0]
 80158d6:	800a      	strh	r2, [r1, #0]
 80158d8:	bd10      	pop	{r4, pc}
 80158da:	bf00      	nop
 80158dc:	20012d9c 	.word	0x20012d9c
 80158e0:	20012d98 	.word	0x20012d98

080158e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80158e4:	b510      	push	{r4, lr}
 80158e6:	4b0a      	ldr	r3, [pc, #40]	; (8015910 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80158e8:	781b      	ldrb	r3, [r3, #0]
 80158ea:	2b01      	cmp	r3, #1
 80158ec:	d10e      	bne.n	801590c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80158ee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80158f2:	8843      	ldrh	r3, [r0, #2]
 80158f4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80158f8:	8044      	strh	r4, [r0, #2]
 80158fa:	18ca      	adds	r2, r1, r3
 80158fc:	4b05      	ldr	r3, [pc, #20]	; (8015914 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80158fe:	881b      	ldrh	r3, [r3, #0]
 8015900:	1a9b      	subs	r3, r3, r2
 8015902:	8003      	strh	r3, [r0, #0]
 8015904:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015908:	80c3      	strh	r3, [r0, #6]
 801590a:	8081      	strh	r1, [r0, #4]
 801590c:	bd10      	pop	{r4, pc}
 801590e:	bf00      	nop
 8015910:	20012d9c 	.word	0x20012d9c
 8015914:	20012d98 	.word	0x20012d98

08015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015918:	4b08      	ldr	r3, [pc, #32]	; (801593c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801591a:	781b      	ldrb	r3, [r3, #0]
 801591c:	2b01      	cmp	r3, #1
 801591e:	d10c      	bne.n	801593a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015920:	8803      	ldrh	r3, [r0, #0]
 8015922:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015926:	8842      	ldrh	r2, [r0, #2]
 8015928:	8002      	strh	r2, [r0, #0]
 801592a:	185a      	adds	r2, r3, r1
 801592c:	4b04      	ldr	r3, [pc, #16]	; (8015940 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801592e:	881b      	ldrh	r3, [r3, #0]
 8015930:	1a9b      	subs	r3, r3, r2
 8015932:	8043      	strh	r3, [r0, #2]
 8015934:	88c3      	ldrh	r3, [r0, #6]
 8015936:	8083      	strh	r3, [r0, #4]
 8015938:	80c1      	strh	r1, [r0, #6]
 801593a:	4770      	bx	lr
 801593c:	20012d9c 	.word	0x20012d9c
 8015940:	20012d98 	.word	0x20012d98

08015944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015944:	b510      	push	{r4, lr}
 8015946:	4b07      	ldr	r3, [pc, #28]	; (8015964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015948:	781b      	ldrb	r3, [r3, #0]
 801594a:	2b01      	cmp	r3, #1
 801594c:	d108      	bne.n	8015960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801594e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015952:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015956:	8003      	strh	r3, [r0, #0]
 8015958:	8893      	ldrh	r3, [r2, #4]
 801595a:	3b01      	subs	r3, #1
 801595c:	1b1b      	subs	r3, r3, r4
 801595e:	800b      	strh	r3, [r1, #0]
 8015960:	bd10      	pop	{r4, pc}
 8015962:	bf00      	nop
 8015964:	20012d9c 	.word	0x20012d9c

08015968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015968:	4b0b      	ldr	r3, [pc, #44]	; (8015998 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801596a:	781b      	ldrb	r3, [r3, #0]
 801596c:	2b01      	cmp	r3, #1
 801596e:	d111      	bne.n	8015994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015970:	680b      	ldr	r3, [r1, #0]
 8015972:	ed90 7a00 	vldr	s14, [r0]
 8015976:	6003      	str	r3, [r0, #0]
 8015978:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801597c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801599c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015980:	ee07 3a90 	vmov	s15, r3
 8015984:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015988:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801598c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015990:	edc1 7a00 	vstr	s15, [r1]
 8015994:	4770      	bx	lr
 8015996:	bf00      	nop
 8015998:	20012d9c 	.word	0x20012d9c
 801599c:	38d1b717 	.word	0x38d1b717

080159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80159a0:	b510      	push	{r4, lr}
 80159a2:	4b0a      	ldr	r3, [pc, #40]	; (80159cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80159a4:	781b      	ldrb	r3, [r3, #0]
 80159a6:	2b01      	cmp	r3, #1
 80159a8:	460a      	mov	r2, r1
 80159aa:	d10d      	bne.n	80159c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80159ac:	8881      	ldrh	r1, [r0, #4]
 80159ae:	8803      	ldrh	r3, [r0, #0]
 80159b0:	440b      	add	r3, r1
 80159b2:	4601      	mov	r1, r0
 80159b4:	3b01      	subs	r3, #1
 80159b6:	f821 3b02 	strh.w	r3, [r1], #2
 80159ba:	f7ff ffc3 	bl	8015944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80159be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80159c2:	88c2      	ldrh	r2, [r0, #6]
 80159c4:	8082      	strh	r2, [r0, #4]
 80159c6:	80c3      	strh	r3, [r0, #6]
 80159c8:	bd10      	pop	{r4, pc}
 80159ca:	bf00      	nop
 80159cc:	20012d9c 	.word	0x20012d9c

080159d0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80159d0:	4b06      	ldr	r3, [pc, #24]	; (80159ec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80159d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80159d6:	4b06      	ldr	r3, [pc, #24]	; (80159f0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80159d8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80159dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80159e0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80159e4:	2100      	movs	r1, #0
 80159e6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80159ea:	4770      	bx	lr
 80159ec:	20012d98 	.word	0x20012d98
 80159f0:	20012d9a 	.word	0x20012d9a

080159f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80159f4:	4b03      	ldr	r3, [pc, #12]	; (8015a04 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80159f6:	6818      	ldr	r0, [r3, #0]
 80159f8:	b110      	cbz	r0, 8015a00 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80159fa:	6803      	ldr	r3, [r0, #0]
 80159fc:	699b      	ldr	r3, [r3, #24]
 80159fe:	4718      	bx	r3
 8015a00:	4770      	bx	lr
 8015a02:	bf00      	nop
 8015a04:	20012de8 	.word	0x20012de8

08015a08 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015a08:	4770      	bx	lr
	...

08015a0c <_ZN8touchgfx11Application4drawEv>:
 8015a0c:	b507      	push	{r0, r1, r2, lr}
 8015a0e:	4b09      	ldr	r3, [pc, #36]	; (8015a34 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015a10:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a14:	4b08      	ldr	r3, [pc, #32]	; (8015a38 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015a16:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015a1a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a1e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015a22:	6803      	ldr	r3, [r0, #0]
 8015a24:	2100      	movs	r1, #0
 8015a26:	9100      	str	r1, [sp, #0]
 8015a28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015a2a:	4669      	mov	r1, sp
 8015a2c:	4798      	blx	r3
 8015a2e:	b003      	add	sp, #12
 8015a30:	f85d fb04 	ldr.w	pc, [sp], #4
 8015a34:	20012d98 	.word	0x20012d98
 8015a38:	20012d9a 	.word	0x20012d9a

08015a3c <_ZN8touchgfx11Application10invalidateEv>:
 8015a3c:	4b09      	ldr	r3, [pc, #36]	; (8015a64 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015a3e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a42:	4b09      	ldr	r3, [pc, #36]	; (8015a68 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015a44:	b082      	sub	sp, #8
 8015a46:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a4a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015a4e:	2100      	movs	r1, #0
 8015a50:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015a54:	9100      	str	r1, [sp, #0]
 8015a56:	6803      	ldr	r3, [r0, #0]
 8015a58:	aa02      	add	r2, sp, #8
 8015a5a:	e912 0006 	ldmdb	r2, {r1, r2}
 8015a5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015a60:	b002      	add	sp, #8
 8015a62:	4718      	bx	r3
 8015a64:	20012d98 	.word	0x20012d98
 8015a68:	20012d9a 	.word	0x20012d9a

08015a6c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015a6c:	4b03      	ldr	r3, [pc, #12]	; (8015a7c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015a6e:	6818      	ldr	r0, [r3, #0]
 8015a70:	b110      	cbz	r0, 8015a78 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015a72:	6803      	ldr	r3, [r0, #0]
 8015a74:	69db      	ldr	r3, [r3, #28]
 8015a76:	4718      	bx	r3
 8015a78:	4770      	bx	lr
 8015a7a:	bf00      	nop
 8015a7c:	20012de8 	.word	0x20012de8

08015a80 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015a80:	4b03      	ldr	r3, [pc, #12]	; (8015a90 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015a82:	6818      	ldr	r0, [r3, #0]
 8015a84:	b110      	cbz	r0, 8015a8c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015a86:	6803      	ldr	r3, [r0, #0]
 8015a88:	6a1b      	ldr	r3, [r3, #32]
 8015a8a:	4718      	bx	r3
 8015a8c:	4770      	bx	lr
 8015a8e:	bf00      	nop
 8015a90:	20012de8 	.word	0x20012de8

08015a94 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015a94:	2300      	movs	r3, #0
 8015a96:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015a9a:	4770      	bx	lr

08015a9c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015a9c:	4b03      	ldr	r3, [pc, #12]	; (8015aac <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015a9e:	6818      	ldr	r0, [r3, #0]
 8015aa0:	b110      	cbz	r0, 8015aa8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015aa2:	6803      	ldr	r3, [r0, #0]
 8015aa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015aa6:	4718      	bx	r3
 8015aa8:	4770      	bx	lr
 8015aaa:	bf00      	nop
 8015aac:	20012de8 	.word	0x20012de8

08015ab0 <_ZN8touchgfx11ApplicationD1Ev>:
 8015ab0:	4770      	bx	lr

08015ab2 <_ZN8touchgfx11ApplicationD0Ev>:
 8015ab2:	b510      	push	{r4, lr}
 8015ab4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015ab8:	4604      	mov	r4, r0
 8015aba:	f014 fa00 	bl	8029ebe <_ZdlPvj>
 8015abe:	4620      	mov	r0, r4
 8015ac0:	bd10      	pop	{r4, pc}

08015ac2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015ac2:	b510      	push	{r4, lr}
 8015ac4:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015ac8:	888a      	ldrh	r2, [r1, #4]
 8015aca:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015ace:	4422      	add	r2, r4
 8015ad0:	b212      	sxth	r2, r2
 8015ad2:	4293      	cmp	r3, r2
 8015ad4:	da15      	bge.n	8015b02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015ad6:	8882      	ldrh	r2, [r0, #4]
 8015ad8:	4413      	add	r3, r2
 8015ada:	b21b      	sxth	r3, r3
 8015adc:	429c      	cmp	r4, r3
 8015ade:	da10      	bge.n	8015b02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015ae0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015ae4:	88c9      	ldrh	r1, [r1, #6]
 8015ae6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015aea:	4419      	add	r1, r3
 8015aec:	b209      	sxth	r1, r1
 8015aee:	428a      	cmp	r2, r1
 8015af0:	da07      	bge.n	8015b02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015af2:	88c0      	ldrh	r0, [r0, #6]
 8015af4:	4410      	add	r0, r2
 8015af6:	b200      	sxth	r0, r0
 8015af8:	4283      	cmp	r3, r0
 8015afa:	bfac      	ite	ge
 8015afc:	2000      	movge	r0, #0
 8015afe:	2001      	movlt	r0, #1
 8015b00:	bd10      	pop	{r4, pc}
 8015b02:	2000      	movs	r0, #0
 8015b04:	e7fc      	b.n	8015b00 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015b06 <_ZN8touchgfx4Rect10restrictToEss>:
 8015b06:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015b0a:	2b00      	cmp	r3, #0
 8015b0c:	b510      	push	{r4, lr}
 8015b0e:	da04      	bge.n	8015b1a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015b10:	8884      	ldrh	r4, [r0, #4]
 8015b12:	4423      	add	r3, r4
 8015b14:	8083      	strh	r3, [r0, #4]
 8015b16:	2300      	movs	r3, #0
 8015b18:	8003      	strh	r3, [r0, #0]
 8015b1a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015b1e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015b22:	1b09      	subs	r1, r1, r4
 8015b24:	428b      	cmp	r3, r1
 8015b26:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015b2a:	bfc8      	it	gt
 8015b2c:	8081      	strhgt	r1, [r0, #4]
 8015b2e:	2b00      	cmp	r3, #0
 8015b30:	da04      	bge.n	8015b3c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015b32:	88c1      	ldrh	r1, [r0, #6]
 8015b34:	440b      	add	r3, r1
 8015b36:	80c3      	strh	r3, [r0, #6]
 8015b38:	2300      	movs	r3, #0
 8015b3a:	8043      	strh	r3, [r0, #2]
 8015b3c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015b40:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015b44:	1a52      	subs	r2, r2, r1
 8015b46:	4293      	cmp	r3, r2
 8015b48:	bfc8      	it	gt
 8015b4a:	80c2      	strhgt	r2, [r0, #6]
 8015b4c:	bd10      	pop	{r4, pc}
	...

08015b50 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015b50:	b510      	push	{r4, lr}
 8015b52:	4b10      	ldr	r3, [pc, #64]	; (8015b94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015b54:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015b58:	4b0f      	ldr	r3, [pc, #60]	; (8015b98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015b5a:	460c      	mov	r4, r1
 8015b5c:	4620      	mov	r0, r4
 8015b5e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015b62:	f7ff ffd0 	bl	8015b06 <_ZN8touchgfx4Rect10restrictToEss>
 8015b66:	4b0d      	ldr	r3, [pc, #52]	; (8015b9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015b68:	6818      	ldr	r0, [r3, #0]
 8015b6a:	b190      	cbz	r0, 8015b92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015b6c:	6803      	ldr	r3, [r0, #0]
 8015b6e:	4621      	mov	r1, r4
 8015b70:	689b      	ldr	r3, [r3, #8]
 8015b72:	4798      	blx	r3
 8015b74:	4b0a      	ldr	r3, [pc, #40]	; (8015ba0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015b76:	6818      	ldr	r0, [r3, #0]
 8015b78:	b118      	cbz	r0, 8015b82 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015b7a:	6803      	ldr	r3, [r0, #0]
 8015b7c:	4621      	mov	r1, r4
 8015b7e:	689b      	ldr	r3, [r3, #8]
 8015b80:	4798      	blx	r3
 8015b82:	4b08      	ldr	r3, [pc, #32]	; (8015ba4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015b84:	6818      	ldr	r0, [r3, #0]
 8015b86:	6803      	ldr	r3, [r0, #0]
 8015b88:	4621      	mov	r1, r4
 8015b8a:	69db      	ldr	r3, [r3, #28]
 8015b8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b90:	4718      	bx	r3
 8015b92:	bd10      	pop	{r4, pc}
 8015b94:	20012d9a 	.word	0x20012d9a
 8015b98:	20012d98 	.word	0x20012d98
 8015b9c:	20012de8 	.word	0x20012de8
 8015ba0:	20012de4 	.word	0x20012de4
 8015ba4:	20012da4 	.word	0x20012da4

08015ba8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015ba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015baa:	4606      	mov	r6, r0
 8015bac:	4608      	mov	r0, r1
 8015bae:	460f      	mov	r7, r1
 8015bb0:	f7fa ff97 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015bb4:	b9e8      	cbnz	r0, 8015bf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bb6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015bba:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015bbe:	42a5      	cmp	r5, r4
 8015bc0:	db17      	blt.n	8015bf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bc2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015bc6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015bca:	429a      	cmp	r2, r3
 8015bcc:	db11      	blt.n	8015bf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bce:	88b9      	ldrh	r1, [r7, #4]
 8015bd0:	440d      	add	r5, r1
 8015bd2:	88b1      	ldrh	r1, [r6, #4]
 8015bd4:	440c      	add	r4, r1
 8015bd6:	b22d      	sxth	r5, r5
 8015bd8:	b224      	sxth	r4, r4
 8015bda:	42a5      	cmp	r5, r4
 8015bdc:	dc09      	bgt.n	8015bf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bde:	88f8      	ldrh	r0, [r7, #6]
 8015be0:	4410      	add	r0, r2
 8015be2:	88f2      	ldrh	r2, [r6, #6]
 8015be4:	4413      	add	r3, r2
 8015be6:	b200      	sxth	r0, r0
 8015be8:	b21b      	sxth	r3, r3
 8015bea:	4298      	cmp	r0, r3
 8015bec:	bfcc      	ite	gt
 8015bee:	2000      	movgt	r0, #0
 8015bf0:	2001      	movle	r0, #1
 8015bf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015bf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015bf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015bf6:	4604      	mov	r4, r0
 8015bf8:	4608      	mov	r0, r1
 8015bfa:	460d      	mov	r5, r1
 8015bfc:	f7fa ff71 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c00:	b978      	cbnz	r0, 8015c22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015c02:	4620      	mov	r0, r4
 8015c04:	f7fa ff6d 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c08:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015c0c:	b150      	cbz	r0, 8015c24 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015c0e:	8026      	strh	r6, [r4, #0]
 8015c10:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015c14:	8063      	strh	r3, [r4, #2]
 8015c16:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015c1a:	80a3      	strh	r3, [r4, #4]
 8015c1c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015c20:	80e3      	strh	r3, [r4, #6]
 8015c22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015c24:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015c28:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015c2c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015c30:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015c34:	88ed      	ldrh	r5, [r5, #6]
 8015c36:	42b1      	cmp	r1, r6
 8015c38:	460f      	mov	r7, r1
 8015c3a:	bfa8      	it	ge
 8015c3c:	4637      	movge	r7, r6
 8015c3e:	4293      	cmp	r3, r2
 8015c40:	4618      	mov	r0, r3
 8015c42:	4466      	add	r6, ip
 8015c44:	bfa8      	it	ge
 8015c46:	4610      	movge	r0, r2
 8015c48:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015c4c:	8027      	strh	r7, [r4, #0]
 8015c4e:	442a      	add	r2, r5
 8015c50:	88e5      	ldrh	r5, [r4, #6]
 8015c52:	8060      	strh	r0, [r4, #2]
 8015c54:	4461      	add	r1, ip
 8015c56:	442b      	add	r3, r5
 8015c58:	b236      	sxth	r6, r6
 8015c5a:	b209      	sxth	r1, r1
 8015c5c:	b212      	sxth	r2, r2
 8015c5e:	b21b      	sxth	r3, r3
 8015c60:	428e      	cmp	r6, r1
 8015c62:	bfac      	ite	ge
 8015c64:	ebc7 0106 	rsbge	r1, r7, r6
 8015c68:	ebc7 0101 	rsblt	r1, r7, r1
 8015c6c:	429a      	cmp	r2, r3
 8015c6e:	bfac      	ite	ge
 8015c70:	ebc0 0202 	rsbge	r2, r0, r2
 8015c74:	ebc0 0203 	rsblt	r2, r0, r3
 8015c78:	80a1      	strh	r1, [r4, #4]
 8015c7a:	80e2      	strh	r2, [r4, #6]
 8015c7c:	e7d1      	b.n	8015c22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015c80 <_ZN8touchgfx11Application11getInstanceEv>:
 8015c80:	4b01      	ldr	r3, [pc, #4]	; (8015c88 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015c82:	6818      	ldr	r0, [r3, #0]
 8015c84:	4770      	bx	lr
 8015c86:	bf00      	nop
 8015c88:	20012df8 	.word	0x20012df8

08015c8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c8e:	4b10      	ldr	r3, [pc, #64]	; (8015cd0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015c90:	781b      	ldrb	r3, [r3, #0]
 8015c92:	4605      	mov	r5, r0
 8015c94:	b1d3      	cbz	r3, 8015ccc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015c96:	4b0f      	ldr	r3, [pc, #60]	; (8015cd4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015c98:	4f0f      	ldr	r7, [pc, #60]	; (8015cd8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015c9a:	881c      	ldrh	r4, [r3, #0]
 8015c9c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015ca0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015ca4:	42a3      	cmp	r3, r4
 8015ca6:	d90e      	bls.n	8015cc6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015ca8:	683b      	ldr	r3, [r7, #0]
 8015caa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015cae:	b10a      	cbz	r2, 8015cb4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015cb0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015cb2:	b900      	cbnz	r0, 8015cb6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015cb4:	6898      	ldr	r0, [r3, #8]
 8015cb6:	6803      	ldr	r3, [r0, #0]
 8015cb8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015cbc:	69db      	ldr	r3, [r3, #28]
 8015cbe:	3401      	adds	r4, #1
 8015cc0:	4798      	blx	r3
 8015cc2:	b2a4      	uxth	r4, r4
 8015cc4:	e7ec      	b.n	8015ca0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015cc6:	2300      	movs	r3, #0
 8015cc8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015ccc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015cce:	bf00      	nop
 8015cd0:	20012da2 	.word	0x20012da2
 8015cd4:	20000088 	.word	0x20000088
 8015cd8:	20012da4 	.word	0x20012da4

08015cdc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015cdc:	b510      	push	{r4, lr}
 8015cde:	2300      	movs	r3, #0
 8015ce0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015ce4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015ce8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015cec:	4604      	mov	r4, r0
 8015cee:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015cf2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015cf6:	429a      	cmp	r2, r3
 8015cf8:	d90e      	bls.n	8015d18 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015cfa:	18e2      	adds	r2, r4, r3
 8015cfc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015d00:	b122      	cbz	r2, 8015d0c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015d02:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015d06:	6803      	ldr	r3, [r0, #0]
 8015d08:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d0a:	4798      	blx	r3
 8015d0c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015d10:	3301      	adds	r3, #1
 8015d12:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015d16:	e7ea      	b.n	8015cee <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015d18:	bd10      	pop	{r4, pc}

08015d1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015d1a:	b530      	push	{r4, r5, lr}
 8015d1c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015d20:	2200      	movs	r2, #0
 8015d22:	b293      	uxth	r3, r2
 8015d24:	429d      	cmp	r5, r3
 8015d26:	d90e      	bls.n	8015d46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015d28:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015d2c:	428b      	cmp	r3, r1
 8015d2e:	d10b      	bne.n	8015d48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015d30:	1884      	adds	r4, r0, r2
 8015d32:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015d36:	b13b      	cbz	r3, 8015d48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015d38:	3b01      	subs	r3, #1
 8015d3a:	b2db      	uxtb	r3, r3
 8015d3c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015d40:	b90b      	cbnz	r3, 8015d46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015d42:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015d46:	bd30      	pop	{r4, r5, pc}
 8015d48:	3201      	adds	r2, #1
 8015d4a:	e7ea      	b.n	8015d22 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015d4c:	2300      	movs	r3, #0
 8015d4e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015d52:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015d56:	30a4      	adds	r0, #164	; 0xa4
 8015d58:	f802 3b01 	strb.w	r3, [r2], #1
 8015d5c:	4282      	cmp	r2, r0
 8015d5e:	d1fb      	bne.n	8015d58 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015d60:	4770      	bx	lr
	...

08015d64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015d64:	b570      	push	{r4, r5, r6, lr}
 8015d66:	4c0b      	ldr	r4, [pc, #44]	; (8015d94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015d68:	4605      	mov	r5, r0
 8015d6a:	6820      	ldr	r0, [r4, #0]
 8015d6c:	460e      	mov	r6, r1
 8015d6e:	b110      	cbz	r0, 8015d76 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015d70:	6803      	ldr	r3, [r0, #0]
 8015d72:	695b      	ldr	r3, [r3, #20]
 8015d74:	4798      	blx	r3
 8015d76:	1d28      	adds	r0, r5, #4
 8015d78:	f7ff ffe8 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015d7c:	6026      	str	r6, [r4, #0]
 8015d7e:	6833      	ldr	r3, [r6, #0]
 8015d80:	4630      	mov	r0, r6
 8015d82:	68db      	ldr	r3, [r3, #12]
 8015d84:	4798      	blx	r3
 8015d86:	682b      	ldr	r3, [r5, #0]
 8015d88:	4628      	mov	r0, r5
 8015d8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d90:	4718      	bx	r3
 8015d92:	bf00      	nop
 8015d94:	20012de8 	.word	0x20012de8

08015d98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015d98:	2300      	movs	r3, #0
 8015d9a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015d9e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015da2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015da4:	461a      	mov	r2, r3
 8015da6:	461c      	mov	r4, r3
 8015da8:	461d      	mov	r5, r3
 8015daa:	459c      	cmp	ip, r3
 8015dac:	dd1a      	ble.n	8015de4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015dae:	18c6      	adds	r6, r0, r3
 8015db0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015db4:	b16e      	cbz	r6, 8015dd2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015db6:	429a      	cmp	r2, r3
 8015db8:	d008      	beq.n	8015dcc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015dba:	fa1f fe82 	uxth.w	lr, r2
 8015dbe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015dc2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015dc6:	1887      	adds	r7, r0, r2
 8015dc8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015dcc:	3201      	adds	r2, #1
 8015dce:	3301      	adds	r3, #1
 8015dd0:	e7eb      	b.n	8015daa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015dd2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015dd6:	4299      	cmp	r1, r3
 8015dd8:	bfa8      	it	ge
 8015dda:	3501      	addge	r5, #1
 8015ddc:	429e      	cmp	r6, r3
 8015dde:	bfc8      	it	gt
 8015de0:	3401      	addgt	r4, #1
 8015de2:	e7f4      	b.n	8015dce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015de4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015de8:	1b49      	subs	r1, r1, r5
 8015dea:	1b1b      	subs	r3, r3, r4
 8015dec:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015df0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015df4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015df8:	4293      	cmp	r3, r2
 8015dfa:	dd03      	ble.n	8015e04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015dfc:	3b01      	subs	r3, #1
 8015dfe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015e02:	e7f7      	b.n	8015df4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015e04:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015e08 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015e08:	b570      	push	{r4, r5, r6, lr}
 8015e0a:	4d16      	ldr	r5, [pc, #88]	; (8015e64 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015e0c:	4604      	mov	r4, r0
 8015e0e:	6828      	ldr	r0, [r5, #0]
 8015e10:	b140      	cbz	r0, 8015e24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015e12:	7a03      	ldrb	r3, [r0, #8]
 8015e14:	b933      	cbnz	r3, 8015e24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015e16:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015e1a:	6803      	ldr	r3, [r0, #0]
 8015e1c:	689b      	ldr	r3, [r3, #8]
 8015e1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e22:	4718      	bx	r3
 8015e24:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015e28:	4e0f      	ldr	r6, [pc, #60]	; (8015e68 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015e2a:	b973      	cbnz	r3, 8015e4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015e2c:	b168      	cbz	r0, 8015e4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015e2e:	7a03      	ldrb	r3, [r0, #8]
 8015e30:	b15b      	cbz	r3, 8015e4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015e32:	6830      	ldr	r0, [r6, #0]
 8015e34:	b110      	cbz	r0, 8015e3c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015e36:	6803      	ldr	r3, [r0, #0]
 8015e38:	691b      	ldr	r3, [r3, #16]
 8015e3a:	4798      	blx	r3
 8015e3c:	6828      	ldr	r0, [r5, #0]
 8015e3e:	6803      	ldr	r3, [r0, #0]
 8015e40:	68db      	ldr	r3, [r3, #12]
 8015e42:	4798      	blx	r3
 8015e44:	2301      	movs	r3, #1
 8015e46:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015e4a:	3404      	adds	r4, #4
 8015e4c:	4620      	mov	r0, r4
 8015e4e:	f7ff ff45 	bl	8015cdc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015e52:	4620      	mov	r0, r4
 8015e54:	f7ff ffa0 	bl	8015d98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015e58:	6830      	ldr	r0, [r6, #0]
 8015e5a:	b110      	cbz	r0, 8015e62 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015e5c:	6803      	ldr	r3, [r0, #0]
 8015e5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015e60:	e7dd      	b.n	8015e1e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015e62:	bd70      	pop	{r4, r5, r6, pc}
 8015e64:	20012dec 	.word	0x20012dec
 8015e68:	20012de8 	.word	0x20012de8

08015e6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e6e:	2300      	movs	r3, #0
 8015e70:	4604      	mov	r4, r0
 8015e72:	460d      	mov	r5, r1
 8015e74:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015e78:	4618      	mov	r0, r3
 8015e7a:	b29a      	uxth	r2, r3
 8015e7c:	4291      	cmp	r1, r2
 8015e7e:	d911      	bls.n	8015ea4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015e80:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015e84:	18e6      	adds	r6, r4, r3
 8015e86:	42af      	cmp	r7, r5
 8015e88:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015e8c:	d105      	bne.n	8015e9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015e8e:	2aff      	cmp	r2, #255	; 0xff
 8015e90:	d002      	beq.n	8015e98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015e92:	3201      	adds	r2, #1
 8015e94:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015e98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015e9a:	2a00      	cmp	r2, #0
 8015e9c:	bf08      	it	eq
 8015e9e:	2001      	moveq	r0, #1
 8015ea0:	3301      	adds	r3, #1
 8015ea2:	e7ea      	b.n	8015e7a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015ea4:	b120      	cbz	r0, 8015eb0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015ea6:	2920      	cmp	r1, #32
 8015ea8:	d102      	bne.n	8015eb0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015eaa:	4620      	mov	r0, r4
 8015eac:	f7ff ff74 	bl	8015d98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015eb0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015eb4:	2b1f      	cmp	r3, #31
 8015eb6:	d8ef      	bhi.n	8015e98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015eb8:	18e2      	adds	r2, r4, r3
 8015eba:	2101      	movs	r1, #1
 8015ebc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015ec0:	185a      	adds	r2, r3, r1
 8015ec2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015ec6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015eca:	e7e5      	b.n	8015e98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015ecc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015ecc:	4603      	mov	r3, r0
 8015ece:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015ed2:	2200      	movs	r2, #0
 8015ed4:	801a      	strh	r2, [r3, #0]
 8015ed6:	805a      	strh	r2, [r3, #2]
 8015ed8:	809a      	strh	r2, [r3, #4]
 8015eda:	80da      	strh	r2, [r3, #6]
 8015edc:	3308      	adds	r3, #8
 8015ede:	428b      	cmp	r3, r1
 8015ee0:	d1f8      	bne.n	8015ed4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015ee2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015ee6:	4770      	bx	lr

08015ee8 <_ZN8touchgfx11ApplicationC1Ev>:
 8015ee8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015eea:	4606      	mov	r6, r0
 8015eec:	4b1c      	ldr	r3, [pc, #112]	; (8015f60 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015eee:	f846 3b04 	str.w	r3, [r6], #4
 8015ef2:	4604      	mov	r4, r0
 8015ef4:	2500      	movs	r5, #0
 8015ef6:	22a8      	movs	r2, #168	; 0xa8
 8015ef8:	2100      	movs	r1, #0
 8015efa:	4630      	mov	r0, r6
 8015efc:	f015 f8cb 	bl	802b096 <memset>
 8015f00:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015f04:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015f08:	f7ff ffe0 	bl	8015ecc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015f0c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015f10:	f7ff ffdc 	bl	8015ecc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015f14:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015f18:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015f1c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015f20:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015f24:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015f28:	490e      	ldr	r1, [pc, #56]	; (8015f64 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015f2a:	480f      	ldr	r0, [pc, #60]	; (8015f68 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015f2c:	4f0f      	ldr	r7, [pc, #60]	; (8015f6c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015f2e:	f010 fde9 	bl	8026b04 <CRC_Lock>
 8015f32:	4b0f      	ldr	r3, [pc, #60]	; (8015f70 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015f34:	b158      	cbz	r0, 8015f4e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015f36:	801d      	strh	r5, [r3, #0]
 8015f38:	4a0e      	ldr	r2, [pc, #56]	; (8015f74 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015f3a:	2300      	movs	r3, #0
 8015f3c:	6013      	str	r3, [r2, #0]
 8015f3e:	4a0e      	ldr	r2, [pc, #56]	; (8015f78 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015f40:	603b      	str	r3, [r7, #0]
 8015f42:	4630      	mov	r0, r6
 8015f44:	6013      	str	r3, [r2, #0]
 8015f46:	f7ff ff01 	bl	8015d4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015f4a:	4620      	mov	r0, r4
 8015f4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015f4e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015f52:	2002      	movs	r0, #2
 8015f54:	801a      	strh	r2, [r3, #0]
 8015f56:	6038      	str	r0, [r7, #0]
 8015f58:	f001 fb4a 	bl	80175f0 <_ZN8touchgfx6Screen4drawEv>
 8015f5c:	e7ec      	b.n	8015f38 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015f5e:	bf00      	nop
 8015f60:	0802f498 	.word	0x0802f498
 8015f64:	b5e8b5cd 	.word	0xb5e8b5cd
 8015f68:	f407a5c2 	.word	0xf407a5c2
 8015f6c:	20012de8 	.word	0x20012de8
 8015f70:	20000088 	.word	0x20000088
 8015f74:	20012df8 	.word	0x20012df8
 8015f78:	20012dec 	.word	0x20012dec

08015f7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015f7c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015f80:	3b01      	subs	r3, #1
 8015f82:	b29b      	uxth	r3, r3
 8015f84:	428b      	cmp	r3, r1
 8015f86:	b510      	push	{r4, lr}
 8015f88:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8015f8c:	d908      	bls.n	8015fa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8015f8e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015f92:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015f96:	681a      	ldr	r2, [r3, #0]
 8015f98:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8015f9c:	685a      	ldr	r2, [r3, #4]
 8015f9e:	6062      	str	r2, [r4, #4]
 8015fa0:	bd10      	pop	{r4, pc}
	...

08015fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fa8:	4b8f      	ldr	r3, [pc, #572]	; (80161e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8015faa:	b08f      	sub	sp, #60	; 0x3c
 8015fac:	ac0a      	add	r4, sp, #40	; 0x28
 8015fae:	e884 0006 	stmia.w	r4, {r1, r2}
 8015fb2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015fb6:	4b8d      	ldr	r3, [pc, #564]	; (80161ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015fb8:	4683      	mov	fp, r0
 8015fba:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015fbe:	4620      	mov	r0, r4
 8015fc0:	f7ff fda1 	bl	8015b06 <_ZN8touchgfx4Rect10restrictToEss>
 8015fc4:	4620      	mov	r0, r4
 8015fc6:	f7fa fd8c 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015fca:	2800      	cmp	r0, #0
 8015fcc:	d16a      	bne.n	80160a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015fce:	9403      	str	r4, [sp, #12]
 8015fd0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015fd4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015fd8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015fdc:	35a4      	adds	r5, #164	; 0xa4
 8015fde:	9301      	str	r3, [sp, #4]
 8015fe0:	b15c      	cbz	r4, 8015ffa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015fe2:	4629      	mov	r1, r5
 8015fe4:	9803      	ldr	r0, [sp, #12]
 8015fe6:	f7ff fddf 	bl	8015ba8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015fea:	3c01      	subs	r4, #1
 8015fec:	b118      	cbz	r0, 8015ff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015fee:	b2a1      	uxth	r1, r4
 8015ff0:	9801      	ldr	r0, [sp, #4]
 8015ff2:	f7ff ffc3 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015ff6:	3d08      	subs	r5, #8
 8015ff8:	e7f2      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8015ffa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8015ffe:	f8cd a010 	str.w	sl, [sp, #16]
 8016002:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016006:	9302      	str	r3, [sp, #8]
 8016008:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801600c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016010:	9306      	str	r3, [sp, #24]
 8016012:	445c      	add	r4, fp
 8016014:	2500      	movs	r5, #0
 8016016:	4626      	mov	r6, r4
 8016018:	f8cd a014 	str.w	sl, [sp, #20]
 801601c:	462f      	mov	r7, r5
 801601e:	9b05      	ldr	r3, [sp, #20]
 8016020:	2b00      	cmp	r3, #0
 8016022:	d073      	beq.n	801610c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016024:	9903      	ldr	r1, [sp, #12]
 8016026:	4630      	mov	r0, r6
 8016028:	f7ff fd4b 	bl	8015ac2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801602c:	b350      	cbz	r0, 8016084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801602e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016032:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016036:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801603a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801603e:	45e6      	cmp	lr, ip
 8016040:	db33      	blt.n	80160aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016042:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016046:	88b3      	ldrh	r3, [r6, #4]
 8016048:	4472      	add	r2, lr
 801604a:	4463      	add	r3, ip
 801604c:	b212      	sxth	r2, r2
 801604e:	b21b      	sxth	r3, r3
 8016050:	429a      	cmp	r2, r3
 8016052:	dc2a      	bgt.n	80160aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016054:	88f3      	ldrh	r3, [r6, #6]
 8016056:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801605a:	fa1f f289 	uxth.w	r2, r9
 801605e:	4413      	add	r3, r2
 8016060:	b29b      	uxth	r3, r3
 8016062:	45c8      	cmp	r8, r9
 8016064:	fa1f fc88 	uxth.w	ip, r8
 8016068:	fa0f fe83 	sxth.w	lr, r3
 801606c:	db0f      	blt.n	801608e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801606e:	eba3 030c 	sub.w	r3, r3, ip
 8016072:	1ac9      	subs	r1, r1, r3
 8016074:	b209      	sxth	r1, r1
 8016076:	2900      	cmp	r1, #0
 8016078:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801607c:	dd12      	ble.n	80160a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801607e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016082:	4605      	mov	r5, r0
 8016084:	9b05      	ldr	r3, [sp, #20]
 8016086:	3b01      	subs	r3, #1
 8016088:	9305      	str	r3, [sp, #20]
 801608a:	3e08      	subs	r6, #8
 801608c:	e7c7      	b.n	801601e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801608e:	4461      	add	r1, ip
 8016090:	b209      	sxth	r1, r1
 8016092:	4571      	cmp	r1, lr
 8016094:	dc38      	bgt.n	8016108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016096:	eba2 020c 	sub.w	r2, r2, ip
 801609a:	b212      	sxth	r2, r2
 801609c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80160a0:	2a00      	cmp	r2, #0
 80160a2:	dcee      	bgt.n	8016082 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80160a4:	b00f      	add	sp, #60	; 0x3c
 80160a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80160aa:	45c8      	cmp	r8, r9
 80160ac:	db2c      	blt.n	8016108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80160ae:	88f3      	ldrh	r3, [r6, #6]
 80160b0:	4499      	add	r9, r3
 80160b2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80160b6:	4498      	add	r8, r3
 80160b8:	fa0f f989 	sxth.w	r9, r9
 80160bc:	fa0f f888 	sxth.w	r8, r8
 80160c0:	45c1      	cmp	r9, r8
 80160c2:	db21      	blt.n	8016108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80160c4:	88b3      	ldrh	r3, [r6, #4]
 80160c6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80160ca:	fa1f f28c 	uxth.w	r2, ip
 80160ce:	4413      	add	r3, r2
 80160d0:	b29b      	uxth	r3, r3
 80160d2:	45e6      	cmp	lr, ip
 80160d4:	fa1f f88e 	uxth.w	r8, lr
 80160d8:	fa0f f983 	sxth.w	r9, r3
 80160dc:	db0a      	blt.n	80160f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80160de:	eba3 0308 	sub.w	r3, r3, r8
 80160e2:	1ac9      	subs	r1, r1, r3
 80160e4:	b209      	sxth	r1, r1
 80160e6:	2900      	cmp	r1, #0
 80160e8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80160ec:	ddda      	ble.n	80160a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80160ee:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80160f2:	e7c6      	b.n	8016082 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80160f4:	4441      	add	r1, r8
 80160f6:	b209      	sxth	r1, r1
 80160f8:	4549      	cmp	r1, r9
 80160fa:	dc05      	bgt.n	8016108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80160fc:	eba2 0208 	sub.w	r2, r2, r8
 8016100:	b212      	sxth	r2, r2
 8016102:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016106:	e7cb      	b.n	80160a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016108:	4607      	mov	r7, r0
 801610a:	e7bb      	b.n	8016084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801610c:	2d00      	cmp	r5, #0
 801610e:	d181      	bne.n	8016014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016110:	2f00      	cmp	r7, #0
 8016112:	f000 81dd 	beq.w	80164d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016116:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801611a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801611e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016122:	b2b3      	uxth	r3, r6
 8016124:	9305      	str	r3, [sp, #20]
 8016126:	9a05      	ldr	r2, [sp, #20]
 8016128:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801612c:	4413      	add	r3, r2
 801612e:	b2ba      	uxth	r2, r7
 8016130:	4492      	add	sl, r2
 8016132:	b29b      	uxth	r3, r3
 8016134:	fa1f fa8a 	uxth.w	sl, sl
 8016138:	fa0f f883 	sxth.w	r8, r3
 801613c:	fa0f f98a 	sxth.w	r9, sl
 8016140:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016144:	9b04      	ldr	r3, [sp, #16]
 8016146:	2b00      	cmp	r3, #0
 8016148:	d052      	beq.n	80161f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801614a:	9903      	ldr	r1, [sp, #12]
 801614c:	4620      	mov	r0, r4
 801614e:	f7ff fcb8 	bl	8015ac2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016152:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016156:	b1c0      	cbz	r0, 801618a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016158:	f9b4 e000 	ldrsh.w	lr, [r4]
 801615c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016160:	4576      	cmp	r6, lr
 8016162:	dc22      	bgt.n	80161aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016164:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016168:	44f4      	add	ip, lr
 801616a:	fa0f fc8c 	sxth.w	ip, ip
 801616e:	45e0      	cmp	r8, ip
 8016170:	db1b      	blt.n	80161aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016172:	428f      	cmp	r7, r1
 8016174:	fa1f fc81 	uxth.w	ip, r1
 8016178:	88e1      	ldrh	r1, [r4, #6]
 801617a:	dc0d      	bgt.n	8016198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801617c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016180:	eba1 010c 	sub.w	r1, r1, ip
 8016184:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016188:	80e1      	strh	r1, [r4, #6]
 801618a:	4628      	mov	r0, r5
 801618c:	9904      	ldr	r1, [sp, #16]
 801618e:	3901      	subs	r1, #1
 8016190:	9104      	str	r1, [sp, #16]
 8016192:	3c08      	subs	r4, #8
 8016194:	4605      	mov	r5, r0
 8016196:	e7d3      	b.n	8016140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016198:	4461      	add	r1, ip
 801619a:	b209      	sxth	r1, r1
 801619c:	4549      	cmp	r1, r9
 801619e:	dcf5      	bgt.n	801618c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161a0:	eba2 0c0c 	sub.w	ip, r2, ip
 80161a4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80161a8:	e7ef      	b.n	801618a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80161aa:	428f      	cmp	r7, r1
 80161ac:	dcee      	bgt.n	801618c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161ae:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80161b2:	4461      	add	r1, ip
 80161b4:	b209      	sxth	r1, r1
 80161b6:	4589      	cmp	r9, r1
 80161b8:	dbe8      	blt.n	801618c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161ba:	4576      	cmp	r6, lr
 80161bc:	fa1f fc8e 	uxth.w	ip, lr
 80161c0:	88a1      	ldrh	r1, [r4, #4]
 80161c2:	dc07      	bgt.n	80161d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80161c4:	eba3 0c0c 	sub.w	ip, r3, ip
 80161c8:	eba1 010c 	sub.w	r1, r1, ip
 80161cc:	f8a4 8000 	strh.w	r8, [r4]
 80161d0:	80a1      	strh	r1, [r4, #4]
 80161d2:	e7da      	b.n	801618a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80161d4:	4461      	add	r1, ip
 80161d6:	b209      	sxth	r1, r1
 80161d8:	4588      	cmp	r8, r1
 80161da:	dbd7      	blt.n	801618c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161dc:	9905      	ldr	r1, [sp, #20]
 80161de:	eba1 0c0c 	sub.w	ip, r1, ip
 80161e2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80161e6:	e7d0      	b.n	801618a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80161e8:	20012d9a 	.word	0x20012d9a
 80161ec:	20012d98 	.word	0x20012d98
 80161f0:	2d00      	cmp	r5, #0
 80161f2:	f000 816d 	beq.w	80164d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80161f6:	9b06      	ldr	r3, [sp, #24]
 80161f8:	445b      	add	r3, fp
 80161fa:	461c      	mov	r4, r3
 80161fc:	9b02      	ldr	r3, [sp, #8]
 80161fe:	3301      	adds	r3, #1
 8016200:	f000 8166 	beq.w	80164d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016204:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016208:	4629      	mov	r1, r5
 801620a:	9803      	ldr	r0, [sp, #12]
 801620c:	f7ff fccc 	bl	8015ba8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016210:	b120      	cbz	r0, 801621c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016212:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016216:	9801      	ldr	r0, [sp, #4]
 8016218:	f7ff feb0 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801621c:	9903      	ldr	r1, [sp, #12]
 801621e:	4628      	mov	r0, r5
 8016220:	f7ff fc4f 	bl	8015ac2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016224:	2800      	cmp	r0, #0
 8016226:	f000 809c 	beq.w	8016362 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801622a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801622e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016232:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016236:	9309      	str	r3, [sp, #36]	; 0x24
 8016238:	fa1f f189 	uxth.w	r1, r9
 801623c:	eb01 0c03 	add.w	ip, r1, r3
 8016240:	fa1f fa8c 	uxth.w	sl, ip
 8016244:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016248:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801624c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016250:	b283      	uxth	r3, r0
 8016252:	eb03 050c 	add.w	r5, r3, ip
 8016256:	b2ad      	uxth	r5, r5
 8016258:	9505      	str	r5, [sp, #20]
 801625a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801625e:	9504      	str	r5, [sp, #16]
 8016260:	4548      	cmp	r0, r9
 8016262:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016266:	f340 8099 	ble.w	801639c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801626a:	1a5b      	subs	r3, r3, r1
 801626c:	b29b      	uxth	r3, r3
 801626e:	4596      	cmp	lr, r2
 8016270:	fa0f f08a 	sxth.w	r0, sl
 8016274:	b21e      	sxth	r6, r3
 8016276:	dd2e      	ble.n	80162d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016278:	9f02      	ldr	r7, [sp, #8]
 801627a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801627e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016282:	9f04      	ldr	r7, [sp, #16]
 8016284:	1a3f      	subs	r7, r7, r0
 8016286:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801628a:	fa1f fe8e 	uxth.w	lr, lr
 801628e:	b292      	uxth	r2, r2
 8016290:	ebae 0102 	sub.w	r1, lr, r2
 8016294:	44a6      	add	lr, r4
 8016296:	4402      	add	r2, r0
 8016298:	b289      	uxth	r1, r1
 801629a:	fa0f fe8e 	sxth.w	lr, lr
 801629e:	b212      	sxth	r2, r2
 80162a0:	b20d      	sxth	r5, r1
 80162a2:	ebae 0202 	sub.w	r2, lr, r2
 80162a6:	436f      	muls	r7, r5
 80162a8:	4372      	muls	r2, r6
 80162aa:	4297      	cmp	r7, r2
 80162ac:	db09      	blt.n	80162c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80162ae:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80162b2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80162b6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80162ba:	449c      	add	ip, r3
 80162bc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80162c0:	e686      	b.n	8015fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80162c2:	4421      	add	r1, r4
 80162c4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80162c8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80162cc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80162d0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80162d4:	e67c      	b.n	8015fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80162d6:	9f04      	ldr	r7, [sp, #16]
 80162d8:	42b8      	cmp	r0, r7
 80162da:	da27      	bge.n	801632c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80162dc:	9902      	ldr	r1, [sp, #8]
 80162de:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80162e2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80162e6:	eb05 010e 	add.w	r1, r5, lr
 80162ea:	fa1f f881 	uxth.w	r8, r1
 80162ee:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80162f2:	4411      	add	r1, r2
 80162f4:	eba1 0108 	sub.w	r1, r1, r8
 80162f8:	b289      	uxth	r1, r1
 80162fa:	fa0f f988 	sxth.w	r9, r8
 80162fe:	eba2 020e 	sub.w	r2, r2, lr
 8016302:	fa0f f881 	sxth.w	r8, r1
 8016306:	1a3f      	subs	r7, r7, r0
 8016308:	4372      	muls	r2, r6
 801630a:	fb08 f707 	mul.w	r7, r8, r7
 801630e:	42ba      	cmp	r2, r7
 8016310:	dc06      	bgt.n	8016320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016312:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016316:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801631a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801631e:	e7ca      	b.n	80162b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016320:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016324:	4429      	add	r1, r5
 8016326:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801632a:	e651      	b.n	8015fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801632c:	9805      	ldr	r0, [sp, #20]
 801632e:	ebaa 0000 	sub.w	r0, sl, r0
 8016332:	b280      	uxth	r0, r0
 8016334:	2d06      	cmp	r5, #6
 8016336:	fa0f fe80 	sxth.w	lr, r0
 801633a:	d817      	bhi.n	801636c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801633c:	9b04      	ldr	r3, [sp, #16]
 801633e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016342:	1c6b      	adds	r3, r5, #1
 8016344:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016348:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801634c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016350:	9b01      	ldr	r3, [sp, #4]
 8016352:	9801      	ldr	r0, [sp, #4]
 8016354:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016358:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801635c:	805a      	strh	r2, [r3, #2]
 801635e:	809e      	strh	r6, [r3, #4]
 8016360:	80d9      	strh	r1, [r3, #6]
 8016362:	9b02      	ldr	r3, [sp, #8]
 8016364:	3b01      	subs	r3, #1
 8016366:	9302      	str	r3, [sp, #8]
 8016368:	3c08      	subs	r4, #8
 801636a:	e747      	b.n	80161fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801636c:	9a02      	ldr	r2, [sp, #8]
 801636e:	45b6      	cmp	lr, r6
 8016370:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016374:	db0d      	blt.n	8016392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016376:	449c      	add	ip, r3
 8016378:	fa1f fc8c 	uxth.w	ip, ip
 801637c:	445a      	add	r2, fp
 801637e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016382:	448c      	add	ip, r1
 8016384:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016388:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801638c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016390:	e61e      	b.n	8015fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016392:	445a      	add	r2, fp
 8016394:	4484      	add	ip, r0
 8016396:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801639a:	e78f      	b.n	80162bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801639c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80163a0:	fa1f f18e 	uxth.w	r1, lr
 80163a4:	eb01 0806 	add.w	r8, r1, r6
 80163a8:	b293      	uxth	r3, r2
 80163aa:	fa1f f888 	uxth.w	r8, r8
 80163ae:	9306      	str	r3, [sp, #24]
 80163b0:	fa0f f388 	sxth.w	r3, r8
 80163b4:	9307      	str	r3, [sp, #28]
 80163b6:	9f06      	ldr	r7, [sp, #24]
 80163b8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80163bc:	443b      	add	r3, r7
 80163be:	b29b      	uxth	r3, r3
 80163c0:	4596      	cmp	lr, r2
 80163c2:	9308      	str	r3, [sp, #32]
 80163c4:	da24      	bge.n	8016410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80163c6:	9905      	ldr	r1, [sp, #20]
 80163c8:	eba3 0308 	sub.w	r3, r3, r8
 80163cc:	ebaa 0401 	sub.w	r4, sl, r1
 80163d0:	b2a4      	uxth	r4, r4
 80163d2:	b29b      	uxth	r3, r3
 80163d4:	b225      	sxth	r5, r4
 80163d6:	b219      	sxth	r1, r3
 80163d8:	eba2 020e 	sub.w	r2, r2, lr
 80163dc:	eba9 0000 	sub.w	r0, r9, r0
 80163e0:	436a      	muls	r2, r5
 80163e2:	4348      	muls	r0, r1
 80163e4:	4282      	cmp	r2, r0
 80163e6:	9a02      	ldr	r2, [sp, #8]
 80163e8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80163ec:	445a      	add	r2, fp
 80163ee:	dc06      	bgt.n	80163fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80163f0:	9b07      	ldr	r3, [sp, #28]
 80163f2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80163f6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80163fa:	44a4      	add	ip, r4
 80163fc:	e75e      	b.n	80162bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80163fe:	9904      	ldr	r1, [sp, #16]
 8016400:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016404:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016408:	4433      	add	r3, r6
 801640a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801640e:	e5df      	b.n	8015fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016410:	9f06      	ldr	r7, [sp, #24]
 8016412:	9b04      	ldr	r3, [sp, #16]
 8016414:	1bc9      	subs	r1, r1, r7
 8016416:	fa0f f78a 	sxth.w	r7, sl
 801641a:	b289      	uxth	r1, r1
 801641c:	429f      	cmp	r7, r3
 801641e:	fa0f fe81 	sxth.w	lr, r1
 8016422:	dd23      	ble.n	801646c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016424:	9a05      	ldr	r2, [sp, #20]
 8016426:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801642a:	9d07      	ldr	r5, [sp, #28]
 801642c:	ebaa 0202 	sub.w	r2, sl, r2
 8016430:	b292      	uxth	r2, r2
 8016432:	eba5 0a03 	sub.w	sl, r5, r3
 8016436:	b214      	sxth	r4, r2
 8016438:	eba9 0000 	sub.w	r0, r9, r0
 801643c:	9b02      	ldr	r3, [sp, #8]
 801643e:	fb0e f000 	mul.w	r0, lr, r0
 8016442:	fb04 fa0a 	mul.w	sl, r4, sl
 8016446:	00db      	lsls	r3, r3, #3
 8016448:	4550      	cmp	r0, sl
 801644a:	445b      	add	r3, fp
 801644c:	db03      	blt.n	8016456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801644e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016452:	4494      	add	ip, r2
 8016454:	e732      	b.n	80162bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016456:	9a04      	ldr	r2, [sp, #16]
 8016458:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801645c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016460:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016464:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016468:	4431      	add	r1, r6
 801646a:	e75c      	b.n	8016326 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801646c:	9b08      	ldr	r3, [sp, #32]
 801646e:	eba3 0308 	sub.w	r3, r3, r8
 8016472:	b29b      	uxth	r3, r3
 8016474:	2d06      	cmp	r5, #6
 8016476:	b218      	sxth	r0, r3
 8016478:	d813      	bhi.n	80164a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801647a:	9b07      	ldr	r3, [sp, #28]
 801647c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016480:	1c6b      	adds	r3, r5, #1
 8016482:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016486:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801648a:	9b01      	ldr	r3, [sp, #4]
 801648c:	9901      	ldr	r1, [sp, #4]
 801648e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016492:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016496:	805a      	strh	r2, [r3, #2]
 8016498:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801649a:	809a      	strh	r2, [r3, #4]
 801649c:	f8a3 e006 	strh.w	lr, [r3, #6]
 80164a0:	e75f      	b.n	8016362 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80164a2:	9c02      	ldr	r4, [sp, #8]
 80164a4:	4570      	cmp	r0, lr
 80164a6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80164aa:	db0d      	blt.n	80164c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80164ac:	4431      	add	r1, r6
 80164ae:	9b06      	ldr	r3, [sp, #24]
 80164b0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80164b4:	b289      	uxth	r1, r1
 80164b6:	445c      	add	r4, fp
 80164b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80164bc:	4419      	add	r1, r3
 80164be:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80164c2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80164c6:	e583      	b.n	8015fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80164c8:	445c      	add	r4, fp
 80164ca:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80164ce:	e79b      	b.n	8016408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80164d0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80164d4:	1e65      	subs	r5, r4, #1
 80164d6:	b2ad      	uxth	r5, r5
 80164d8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80164dc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80164e0:	42b5      	cmp	r5, r6
 80164e2:	d044      	beq.n	801656e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80164e4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80164e8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80164ec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80164f0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80164f4:	4282      	cmp	r2, r0
 80164f6:	d11f      	bne.n	8016538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80164f8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80164fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016500:	459c      	cmp	ip, r3
 8016502:	d119      	bne.n	8016538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016504:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016508:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801650c:	19d8      	adds	r0, r3, r7
 801650e:	b200      	sxth	r0, r0
 8016510:	4288      	cmp	r0, r1
 8016512:	d109      	bne.n	8016528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016514:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016518:	4413      	add	r3, r2
 801651a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801651e:	4629      	mov	r1, r5
 8016520:	9801      	ldr	r0, [sp, #4]
 8016522:	f7ff fd2b 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016526:	e003      	b.n	8016530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016528:	4411      	add	r1, r2
 801652a:	b209      	sxth	r1, r1
 801652c:	42b9      	cmp	r1, r7
 801652e:	d0f3      	beq.n	8016518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016530:	3d01      	subs	r5, #1
 8016532:	b2ad      	uxth	r5, r5
 8016534:	3c08      	subs	r4, #8
 8016536:	e7d3      	b.n	80164e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016538:	42b9      	cmp	r1, r7
 801653a:	d1f9      	bne.n	8016530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801653c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016540:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016544:	4299      	cmp	r1, r3
 8016546:	d1f3      	bne.n	8016530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016548:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801654c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016550:	181f      	adds	r7, r3, r0
 8016552:	b23f      	sxth	r7, r7
 8016554:	42ba      	cmp	r2, r7
 8016556:	d105      	bne.n	8016564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016558:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801655c:	440b      	add	r3, r1
 801655e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016562:	e7dc      	b.n	801651e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016564:	440a      	add	r2, r1
 8016566:	b212      	sxth	r2, r2
 8016568:	4290      	cmp	r0, r2
 801656a:	d1e1      	bne.n	8016530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801656c:	e7f6      	b.n	801655c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801656e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016572:	2e07      	cmp	r6, #7
 8016574:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016578:	d812      	bhi.n	80165a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801657a:	1c75      	adds	r5, r6, #1
 801657c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016580:	9d01      	ldr	r5, [sp, #4]
 8016582:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016586:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801658a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801658e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016592:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016596:	442c      	add	r4, r5
 8016598:	8061      	strh	r1, [r4, #2]
 801659a:	80a2      	strh	r2, [r4, #4]
 801659c:	80e3      	strh	r3, [r4, #6]
 801659e:	e581      	b.n	80160a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80165a0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80165a4:	3e01      	subs	r6, #1
 80165a6:	445c      	add	r4, fp
 80165a8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80165ac:	f04f 37ff 	mov.w	r7, #4294967295
 80165b0:	2500      	movs	r5, #0
 80165b2:	9305      	str	r3, [sp, #20]
 80165b4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80165b8:	9302      	str	r3, [sp, #8]
 80165ba:	1e72      	subs	r2, r6, #1
 80165bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80165c0:	9304      	str	r3, [sp, #16]
 80165c2:	4691      	mov	r9, r2
 80165c4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80165c8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80165cc:	bf14      	ite	ne
 80165ce:	9905      	ldrne	r1, [sp, #20]
 80165d0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80165d4:	6818      	ldr	r0, [r3, #0]
 80165d6:	9207      	str	r2, [sp, #28]
 80165d8:	bf18      	it	ne
 80165da:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80165de:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80165e2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80165e6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80165ea:	9306      	str	r3, [sp, #24]
 80165ec:	fb18 f801 	smulbb	r8, r8, r1
 80165f0:	6859      	ldr	r1, [r3, #4]
 80165f2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80165f6:	4671      	mov	r1, lr
 80165f8:	a80c      	add	r0, sp, #48	; 0x30
 80165fa:	f7ff fafb 	bl	8015bf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80165fe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016602:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016606:	9b04      	ldr	r3, [sp, #16]
 8016608:	9a02      	ldr	r2, [sp, #8]
 801660a:	fb10 f001 	smulbb	r0, r0, r1
 801660e:	fb02 8803 	mla	r8, r2, r3, r8
 8016612:	eba0 0108 	sub.w	r1, r0, r8
 8016616:	f04f 0c08 	mov.w	ip, #8
 801661a:	fb90 f0fc 	sdiv	r0, r0, ip
 801661e:	4288      	cmp	r0, r1
 8016620:	dc20      	bgt.n	8016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016622:	4551      	cmp	r1, sl
 8016624:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016628:	da03      	bge.n	8016632 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801662a:	b1d9      	cbz	r1, 8016664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801662c:	468a      	mov	sl, r1
 801662e:	464f      	mov	r7, r9
 8016630:	4635      	mov	r5, r6
 8016632:	f109 39ff 	add.w	r9, r9, #4294967295
 8016636:	f119 0f02 	cmn.w	r9, #2
 801663a:	d1c5      	bne.n	80165c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801663c:	4616      	mov	r6, r2
 801663e:	3201      	adds	r2, #1
 8016640:	f1a4 0408 	sub.w	r4, r4, #8
 8016644:	d1b6      	bne.n	80165b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016646:	9b01      	ldr	r3, [sp, #4]
 8016648:	b2ac      	uxth	r4, r5
 801664a:	00ed      	lsls	r5, r5, #3
 801664c:	1958      	adds	r0, r3, r5
 801664e:	1c7b      	adds	r3, r7, #1
 8016650:	d10b      	bne.n	801666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016652:	4601      	mov	r1, r0
 8016654:	9803      	ldr	r0, [sp, #12]
 8016656:	f7ff facd 	bl	8015bf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801665a:	4621      	mov	r1, r4
 801665c:	9801      	ldr	r0, [sp, #4]
 801665e:	f7ff fc8d 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016662:	e4b5      	b.n	8015fd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016664:	464f      	mov	r7, r9
 8016666:	4635      	mov	r5, r6
 8016668:	e7ed      	b.n	8016646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801666a:	9b01      	ldr	r3, [sp, #4]
 801666c:	00ff      	lsls	r7, r7, #3
 801666e:	19d9      	adds	r1, r3, r7
 8016670:	f7ff fac0 	bl	8015bf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016674:	9b03      	ldr	r3, [sp, #12]
 8016676:	cb03      	ldmia	r3!, {r0, r1}
 8016678:	445f      	add	r7, fp
 801667a:	445d      	add	r5, fp
 801667c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016680:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016684:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016688:	9b03      	ldr	r3, [sp, #12]
 801668a:	6869      	ldr	r1, [r5, #4]
 801668c:	c303      	stmia	r3!, {r0, r1}
 801668e:	e7e4      	b.n	801665a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016690 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016694:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016698:	b09b      	sub	sp, #108	; 0x6c
 801669a:	4604      	mov	r4, r0
 801669c:	4630      	mov	r0, r6
 801669e:	f7fa fa20 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80166a2:	4605      	mov	r5, r0
 80166a4:	b948      	cbnz	r0, 80166ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80166a6:	6823      	ldr	r3, [r4, #0]
 80166a8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80166ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80166ae:	4620      	mov	r0, r4
 80166b0:	4798      	blx	r3
 80166b2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80166b6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80166ba:	4bc6      	ldr	r3, [pc, #792]	; (80169d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80166bc:	681b      	ldr	r3, [r3, #0]
 80166be:	2b00      	cmp	r3, #0
 80166c0:	d03f      	beq.n	8016742 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80166c2:	4dc5      	ldr	r5, [pc, #788]	; (80169d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80166c4:	4628      	mov	r0, r5
 80166c6:	f7fa fa0c 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80166ca:	4606      	mov	r6, r0
 80166cc:	2800      	cmp	r0, #0
 80166ce:	d138      	bne.n	8016742 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80166d0:	4628      	mov	r0, r5
 80166d2:	f7ff f907 	bl	80158e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80166d6:	6823      	ldr	r3, [r4, #0]
 80166d8:	6829      	ldr	r1, [r5, #0]
 80166da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80166dc:	686a      	ldr	r2, [r5, #4]
 80166de:	4620      	mov	r0, r4
 80166e0:	4798      	blx	r3
 80166e2:	802e      	strh	r6, [r5, #0]
 80166e4:	806e      	strh	r6, [r5, #2]
 80166e6:	80ae      	strh	r6, [r5, #4]
 80166e8:	80ee      	strh	r6, [r5, #6]
 80166ea:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80166ee:	4dbb      	ldr	r5, [pc, #748]	; (80169dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80166f0:	4640      	mov	r0, r8
 80166f2:	f7ff fbeb 	bl	8015ecc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80166f6:	882e      	ldrh	r6, [r5, #0]
 80166f8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80166fc:	4633      	mov	r3, r6
 80166fe:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016702:	42bb      	cmp	r3, r7
 8016704:	d224      	bcs.n	8016750 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016706:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801670a:	2907      	cmp	r1, #7
 801670c:	d816      	bhi.n	801673c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801670e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016712:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016716:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801671a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801671e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016722:	1c4a      	adds	r2, r1, #1
 8016724:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016728:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801672c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016730:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016734:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016738:	f8a2 c006 	strh.w	ip, [r2, #6]
 801673c:	3301      	adds	r3, #1
 801673e:	b29b      	uxth	r3, r3
 8016740:	e7df      	b.n	8016702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016742:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016746:	2b00      	cmp	r3, #0
 8016748:	d1cf      	bne.n	80166ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801674a:	b01b      	add	sp, #108	; 0x6c
 801674c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016750:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016754:	42b3      	cmp	r3, r6
 8016756:	d90c      	bls.n	8016772 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016758:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801675c:	6822      	ldr	r2, [r4, #0]
 801675e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016762:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016764:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016768:	4620      	mov	r0, r4
 801676a:	3601      	adds	r6, #1
 801676c:	47b8      	blx	r7
 801676e:	b2b6      	uxth	r6, r6
 8016770:	e7ee      	b.n	8016750 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016772:	4a9b      	ldr	r2, [pc, #620]	; (80169e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016774:	6813      	ldr	r3, [r2, #0]
 8016776:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801677a:	2b01      	cmp	r3, #1
 801677c:	4691      	mov	r9, r2
 801677e:	f040 80e2 	bne.w	8016946 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016782:	8829      	ldrh	r1, [r5, #0]
 8016784:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016788:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801678c:	33ae      	adds	r3, #174	; 0xae
 801678e:	2600      	movs	r6, #0
 8016790:	428f      	cmp	r7, r1
 8016792:	f103 0308 	add.w	r3, r3, #8
 8016796:	dd0a      	ble.n	80167ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016798:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801679c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80167a0:	4402      	add	r2, r0
 80167a2:	b212      	sxth	r2, r2
 80167a4:	4296      	cmp	r6, r2
 80167a6:	bfb8      	it	lt
 80167a8:	4616      	movlt	r6, r2
 80167aa:	3101      	adds	r1, #1
 80167ac:	e7f0      	b.n	8016790 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80167ae:	4b8d      	ldr	r3, [pc, #564]	; (80169e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80167b0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80169e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80167b4:	881b      	ldrh	r3, [r3, #0]
 80167b6:	2b0f      	cmp	r3, #15
 80167b8:	bf88      	it	hi
 80167ba:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80167be:	f04f 0300 	mov.w	r3, #0
 80167c2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80167c6:	bf98      	it	ls
 80167c8:	f04f 0b01 	movls.w	fp, #1
 80167cc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80167d0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80167d4:	4b82      	ldr	r3, [pc, #520]	; (80169e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80167d6:	4438      	add	r0, r7
 80167d8:	b207      	sxth	r7, r0
 80167da:	6818      	ldr	r0, [r3, #0]
 80167dc:	42b7      	cmp	r7, r6
 80167de:	6803      	ldr	r3, [r0, #0]
 80167e0:	f280 8083 	bge.w	80168ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80167e4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80167e8:	4798      	blx	r3
 80167ea:	eb07 030b 	add.w	r3, r7, fp
 80167ee:	4298      	cmp	r0, r3
 80167f0:	da07      	bge.n	8016802 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80167f2:	42b0      	cmp	r0, r6
 80167f4:	da05      	bge.n	8016802 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80167f6:	4287      	cmp	r7, r0
 80167f8:	dd6c      	ble.n	80168d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80167fa:	2f00      	cmp	r7, #0
 80167fc:	dd6a      	ble.n	80168d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80167fe:	4630      	mov	r0, r6
 8016800:	e004      	b.n	801680c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016802:	4287      	cmp	r7, r0
 8016804:	dcfb      	bgt.n	80167fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016806:	42b0      	cmp	r0, r6
 8016808:	bfa8      	it	ge
 801680a:	4630      	movge	r0, r6
 801680c:	4b76      	ldr	r3, [pc, #472]	; (80169e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801680e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016812:	1bc0      	subs	r0, r0, r7
 8016814:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016818:	882f      	ldrh	r7, [r5, #0]
 801681a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801681e:	2200      	movs	r2, #0
 8016820:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016824:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016828:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801682c:	42bb      	cmp	r3, r7
 801682e:	d9cd      	bls.n	80167cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016830:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016834:	ab07      	add	r3, sp, #28
 8016836:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801683a:	6851      	ldr	r1, [r2, #4]
 801683c:	c303      	stmia	r3!, {r0, r1}
 801683e:	a905      	add	r1, sp, #20
 8016840:	a807      	add	r0, sp, #28
 8016842:	f7ff f93e 	bl	8015ac2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016846:	2800      	cmp	r0, #0
 8016848:	d04c      	beq.n	80168e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801684a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801684e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016852:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016856:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801685a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801685e:	9302      	str	r3, [sp, #8]
 8016860:	4686      	mov	lr, r0
 8016862:	4290      	cmp	r0, r2
 8016864:	4450      	add	r0, sl
 8016866:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801686a:	bfb8      	it	lt
 801686c:	4696      	movlt	lr, r2
 801686e:	4452      	add	r2, sl
 8016870:	4299      	cmp	r1, r3
 8016872:	b280      	uxth	r0, r0
 8016874:	b292      	uxth	r2, r2
 8016876:	468c      	mov	ip, r1
 8016878:	fa0f fa82 	sxth.w	sl, r2
 801687c:	bfb8      	it	lt
 801687e:	469c      	movlt	ip, r3
 8016880:	b203      	sxth	r3, r0
 8016882:	4553      	cmp	r3, sl
 8016884:	bfb8      	it	lt
 8016886:	4602      	movlt	r2, r0
 8016888:	eba2 020e 	sub.w	r2, r2, lr
 801688c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016890:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016894:	9b02      	ldr	r3, [sp, #8]
 8016896:	f8ad e01c 	strh.w	lr, [sp, #28]
 801689a:	4411      	add	r1, r2
 801689c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80168a0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80168a4:	4413      	add	r3, r2
 80168a6:	b289      	uxth	r1, r1
 80168a8:	b29b      	uxth	r3, r3
 80168aa:	b208      	sxth	r0, r1
 80168ac:	b21a      	sxth	r2, r3
 80168ae:	4290      	cmp	r0, r2
 80168b0:	bfb8      	it	lt
 80168b2:	460b      	movlt	r3, r1
 80168b4:	eba3 030c 	sub.w	r3, r3, ip
 80168b8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80168bc:	a807      	add	r0, sp, #28
 80168be:	f7fa f910 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80168c2:	b920      	cbnz	r0, 80168ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80168c4:	6823      	ldr	r3, [r4, #0]
 80168c6:	a907      	add	r1, sp, #28
 80168c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80168ca:	4620      	mov	r0, r4
 80168cc:	4798      	blx	r3
 80168ce:	3701      	adds	r7, #1
 80168d0:	b2bf      	uxth	r7, r7
 80168d2:	e7a9      	b.n	8016828 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80168d4:	f8d9 0000 	ldr.w	r0, [r9]
 80168d8:	6803      	ldr	r3, [r0, #0]
 80168da:	2101      	movs	r1, #1
 80168dc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80168e0:	4798      	blx	r3
 80168e2:	e773      	b.n	80167cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80168e4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80168e8:	e7e8      	b.n	80168bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80168ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80168ec:	4798      	blx	r3
 80168ee:	4b3f      	ldr	r3, [pc, #252]	; (80169ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80168f0:	781b      	ldrb	r3, [r3, #0]
 80168f2:	2b00      	cmp	r3, #0
 80168f4:	f43f af29 	beq.w	801674a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80168f8:	2300      	movs	r3, #0
 80168fa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80168fe:	882b      	ldrh	r3, [r5, #0]
 8016900:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016904:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016908:	42ab      	cmp	r3, r5
 801690a:	f4bf af1e 	bcs.w	801674a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801690e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016912:	2907      	cmp	r1, #7
 8016914:	d814      	bhi.n	8016940 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016916:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801691a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801691e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016922:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016926:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801692a:	1c4a      	adds	r2, r1, #1
 801692c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016930:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016934:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016938:	f8a2 c002 	strh.w	ip, [r2, #2]
 801693c:	8097      	strh	r7, [r2, #4]
 801693e:	80d6      	strh	r6, [r2, #6]
 8016940:	3301      	adds	r3, #1
 8016942:	b29b      	uxth	r3, r3
 8016944:	e7e0      	b.n	8016908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016946:	2b02      	cmp	r3, #2
 8016948:	f040 8133 	bne.w	8016bb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801694c:	4b28      	ldr	r3, [pc, #160]	; (80169f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801694e:	781b      	ldrb	r3, [r3, #0]
 8016950:	2b01      	cmp	r3, #1
 8016952:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016956:	f000 8098 	beq.w	8016a8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801695a:	882a      	ldrh	r2, [r5, #0]
 801695c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016960:	3201      	adds	r2, #1
 8016962:	b292      	uxth	r2, r2
 8016964:	2900      	cmp	r1, #0
 8016966:	d0c2      	beq.n	80168ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016968:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801696c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016970:	441e      	add	r6, r3
 8016972:	b236      	sxth	r6, r6
 8016974:	4694      	mov	ip, r2
 8016976:	f04f 0900 	mov.w	r9, #0
 801697a:	fa1f f38c 	uxth.w	r3, ip
 801697e:	4299      	cmp	r1, r3
 8016980:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016984:	f240 80bf 	bls.w	8016b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016988:	4427      	add	r7, r4
 801698a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801698e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016992:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016996:	4283      	cmp	r3, r0
 8016998:	f340 80a1 	ble.w	8016ade <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801699c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80169a0:	4406      	add	r6, r0
 80169a2:	b236      	sxth	r6, r6
 80169a4:	429e      	cmp	r6, r3
 80169a6:	bfa8      	it	ge
 80169a8:	461e      	movge	r6, r3
 80169aa:	46e1      	mov	r9, ip
 80169ac:	f10c 0c01 	add.w	ip, ip, #1
 80169b0:	e7e3      	b.n	801697a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80169b2:	d10a      	bne.n	80169ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80169b4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80169b8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80169bc:	4562      	cmp	r2, ip
 80169be:	bfb8      	it	lt
 80169c0:	4662      	movlt	r2, ip
 80169c2:	4288      	cmp	r0, r1
 80169c4:	bfb8      	it	lt
 80169c6:	461f      	movlt	r7, r3
 80169c8:	e087      	b.n	8016ada <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80169ca:	428a      	cmp	r2, r1
 80169cc:	bfb8      	it	lt
 80169ce:	460a      	movlt	r2, r1
 80169d0:	e083      	b.n	8016ada <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80169d2:	bf00      	nop
 80169d4:	20012de4 	.word	0x20012de4
 80169d8:	20012df0 	.word	0x20012df0
 80169dc:	20000088 	.word	0x20000088
 80169e0:	20012da4 	.word	0x20012da4
 80169e4:	20012d9a 	.word	0x20012d9a
 80169e8:	20012d98 	.word	0x20012d98
 80169ec:	20012da2 	.word	0x20012da2
 80169f0:	20012d9c 	.word	0x20012d9c
 80169f4:	19a1      	adds	r1, r4, r6
 80169f6:	ab07      	add	r3, sp, #28
 80169f8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80169fc:	6849      	ldr	r1, [r1, #4]
 80169fe:	c303      	stmia	r3!, {r0, r1}
 8016a00:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016a04:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016a08:	2b13      	cmp	r3, #19
 8016a0a:	bfd8      	it	le
 8016a0c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016a10:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016a14:	440b      	add	r3, r1
 8016a16:	1a9b      	subs	r3, r3, r2
 8016a18:	a807      	add	r0, sp, #28
 8016a1a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016a1e:	f7fe ff7b 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a22:	a807      	add	r0, sp, #28
 8016a24:	f7fa f85d 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a28:	bb78      	cbnz	r0, 8016a8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016a2a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016a2e:	f8d9 0000 	ldr.w	r0, [r9]
 8016a32:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016a36:	f8d0 e000 	ldr.w	lr, [r0]
 8016a3a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016a3e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016a42:	f1bc 0f14 	cmp.w	ip, #20
 8016a46:	bfa8      	it	ge
 8016a48:	f04f 0c14 	movge.w	ip, #20
 8016a4c:	fa1f fc8c 	uxth.w	ip, ip
 8016a50:	f8cd c000 	str.w	ip, [sp]
 8016a54:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016a58:	47d8      	blx	fp
 8016a5a:	4683      	mov	fp, r0
 8016a5c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016a60:	a807      	add	r0, sp, #28
 8016a62:	f7fe ff3f 	bl	80158e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016a66:	6823      	ldr	r3, [r4, #0]
 8016a68:	4426      	add	r6, r4
 8016a6a:	4620      	mov	r0, r4
 8016a6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a6e:	a907      	add	r1, sp, #28
 8016a70:	4798      	blx	r3
 8016a72:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016a76:	eba0 000b 	sub.w	r0, r0, fp
 8016a7a:	b200      	sxth	r0, r0
 8016a7c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016a80:	b918      	cbnz	r0, 8016a8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016a82:	b2b9      	uxth	r1, r7
 8016a84:	4650      	mov	r0, sl
 8016a86:	f7ff fa79 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016a8a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8016a8e:	f1bb 0f00 	cmp.w	fp, #0
 8016a92:	f43f af2c 	beq.w	80168ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016a96:	882b      	ldrh	r3, [r5, #0]
 8016a98:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016a9c:	3301      	adds	r3, #1
 8016a9e:	b29b      	uxth	r3, r3
 8016aa0:	2700      	movs	r7, #0
 8016aa2:	b299      	uxth	r1, r3
 8016aa4:	458b      	cmp	fp, r1
 8016aa6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016aaa:	d9a3      	bls.n	80169f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016aac:	4426      	add	r6, r4
 8016aae:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016ab2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016ab6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016aba:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016abe:	4408      	add	r0, r1
 8016ac0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016ac4:	4461      	add	r1, ip
 8016ac6:	b200      	sxth	r0, r0
 8016ac8:	b209      	sxth	r1, r1
 8016aca:	4288      	cmp	r0, r1
 8016acc:	f6bf af71 	bge.w	80169b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016ad0:	4584      	cmp	ip, r0
 8016ad2:	4662      	mov	r2, ip
 8016ad4:	461f      	mov	r7, r3
 8016ad6:	bfb8      	it	lt
 8016ad8:	4602      	movlt	r2, r0
 8016ada:	3301      	adds	r3, #1
 8016adc:	e7e1      	b.n	8016aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016ade:	d10e      	bne.n	8016afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016ae0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016ae4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016ae8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016aec:	4473      	add	r3, lr
 8016aee:	b21b      	sxth	r3, r3
 8016af0:	429e      	cmp	r6, r3
 8016af2:	bfa8      	it	ge
 8016af4:	461e      	movge	r6, r3
 8016af6:	4287      	cmp	r7, r0
 8016af8:	bfb8      	it	lt
 8016afa:	46e1      	movlt	r9, ip
 8016afc:	e756      	b.n	80169ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016afe:	4286      	cmp	r6, r0
 8016b00:	bfa8      	it	ge
 8016b02:	4606      	movge	r6, r0
 8016b04:	e752      	b.n	80169ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016b06:	eb0a 0007 	add.w	r0, sl, r7
 8016b0a:	4427      	add	r7, r4
 8016b0c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016b10:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016b14:	f1bb 0f13 	cmp.w	fp, #19
 8016b18:	bfde      	ittt	le
 8016b1a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016b1e:	445e      	addle	r6, fp
 8016b20:	b236      	sxthle	r6, r6
 8016b22:	f7f9 ffde 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b26:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016b2a:	2800      	cmp	r0, #0
 8016b2c:	f47f af1a 	bne.w	8016964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016b30:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016b34:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016b38:	482a      	ldr	r0, [pc, #168]	; (8016be4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016b3a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016b3e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016b42:	6800      	ldr	r0, [r0, #0]
 8016b44:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016b48:	1ab6      	subs	r6, r6, r2
 8016b4a:	2e14      	cmp	r6, #20
 8016b4c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016b50:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016b54:	bfa8      	it	ge
 8016b56:	2614      	movge	r6, #20
 8016b58:	f8d0 c000 	ldr.w	ip, [r0]
 8016b5c:	b2b6      	uxth	r6, r6
 8016b5e:	fa1f fb8b 	uxth.w	fp, fp
 8016b62:	455e      	cmp	r6, fp
 8016b64:	bf94      	ite	ls
 8016b66:	9600      	strls	r6, [sp, #0]
 8016b68:	f8cd b000 	strhi.w	fp, [sp]
 8016b6c:	b292      	uxth	r2, r2
 8016b6e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016b72:	b29b      	uxth	r3, r3
 8016b74:	b289      	uxth	r1, r1
 8016b76:	47b0      	blx	r6
 8016b78:	6823      	ldr	r3, [r4, #0]
 8016b7a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016b7e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016b80:	a907      	add	r1, sp, #28
 8016b82:	4620      	mov	r0, r4
 8016b84:	4798      	blx	r3
 8016b86:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016b8a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016b8e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016b92:	1a5b      	subs	r3, r3, r1
 8016b94:	440a      	add	r2, r1
 8016b96:	b21b      	sxth	r3, r3
 8016b98:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016b9c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016ba0:	2b00      	cmp	r3, #0
 8016ba2:	f47f aeda 	bne.w	801695a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016ba6:	fa1f f189 	uxth.w	r1, r9
 8016baa:	4650      	mov	r0, sl
 8016bac:	f7ff f9e6 	bl	8015f7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016bb0:	e6d3      	b.n	801695a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016bb2:	882e      	ldrh	r6, [r5, #0]
 8016bb4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016bb8:	42b3      	cmp	r3, r6
 8016bba:	f67f ae98 	bls.w	80168ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016bbe:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016bc2:	ab07      	add	r3, sp, #28
 8016bc4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016bc8:	6851      	ldr	r1, [r2, #4]
 8016bca:	c303      	stmia	r3!, {r0, r1}
 8016bcc:	a807      	add	r0, sp, #28
 8016bce:	f7f9 ff88 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bd2:	b920      	cbnz	r0, 8016bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016bd4:	6823      	ldr	r3, [r4, #0]
 8016bd6:	a907      	add	r1, sp, #28
 8016bd8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016bda:	4620      	mov	r0, r4
 8016bdc:	4798      	blx	r3
 8016bde:	3601      	adds	r6, #1
 8016be0:	b2b6      	uxth	r6, r6
 8016be2:	e7e7      	b.n	8016bb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016be4:	20012da4 	.word	0x20012da4

08016be8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016be8:	4b03      	ldr	r3, [pc, #12]	; (8016bf8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016bea:	2200      	movs	r2, #0
 8016bec:	801a      	strh	r2, [r3, #0]
 8016bee:	805a      	strh	r2, [r3, #2]
 8016bf0:	809a      	strh	r2, [r3, #4]
 8016bf2:	80da      	strh	r2, [r3, #6]
 8016bf4:	4770      	bx	lr
 8016bf6:	bf00      	nop
 8016bf8:	20012df0 	.word	0x20012df0

08016bfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c00:	4606      	mov	r6, r0
 8016c02:	b09d      	sub	sp, #116	; 0x74
 8016c04:	a803      	add	r0, sp, #12
 8016c06:	4614      	mov	r4, r2
 8016c08:	468a      	mov	sl, r1
 8016c0a:	461d      	mov	r5, r3
 8016c0c:	f000 feca 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016c10:	6833      	ldr	r3, [r6, #0]
 8016c12:	4630      	mov	r0, r6
 8016c14:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c16:	4798      	blx	r3
 8016c18:	6833      	ldr	r3, [r6, #0]
 8016c1a:	4607      	mov	r7, r0
 8016c1c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016c1e:	4630      	mov	r0, r6
 8016c20:	4798      	blx	r3
 8016c22:	462a      	mov	r2, r5
 8016c24:	9000      	str	r0, [sp, #0]
 8016c26:	4621      	mov	r1, r4
 8016c28:	463b      	mov	r3, r7
 8016c2a:	a803      	add	r0, sp, #12
 8016c2c:	f000 ff15 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c30:	2500      	movs	r5, #0
 8016c32:	462c      	mov	r4, r5
 8016c34:	46a9      	mov	r9, r5
 8016c36:	46a8      	mov	r8, r5
 8016c38:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016c3c:	2300      	movs	r3, #0
 8016c3e:	9302      	str	r3, [sp, #8]
 8016c40:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016c44:	429c      	cmp	r4, r3
 8016c46:	d002      	beq.n	8016c4e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016c48:	455c      	cmp	r4, fp
 8016c4a:	bf18      	it	ne
 8016c4c:	4625      	movne	r5, r4
 8016c4e:	ab02      	add	r3, sp, #8
 8016c50:	4632      	mov	r2, r6
 8016c52:	4651      	mov	r1, sl
 8016c54:	a803      	add	r0, sp, #12
 8016c56:	f001 fa03 	bl	8018060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016c5a:	4604      	mov	r4, r0
 8016c5c:	b108      	cbz	r0, 8016c62 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016c5e:	280a      	cmp	r0, #10
 8016c60:	d10a      	bne.n	8016c78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016c62:	45c1      	cmp	r9, r8
 8016c64:	bf38      	it	cc
 8016c66:	46c1      	movcc	r9, r8
 8016c68:	f04f 0800 	mov.w	r8, #0
 8016c6c:	2c00      	cmp	r4, #0
 8016c6e:	d1e5      	bne.n	8016c3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016c70:	4648      	mov	r0, r9
 8016c72:	b01d      	add	sp, #116	; 0x74
 8016c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c78:	9a02      	ldr	r2, [sp, #8]
 8016c7a:	2a00      	cmp	r2, #0
 8016c7c:	d0de      	beq.n	8016c3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016c7e:	7b57      	ldrb	r7, [r2, #13]
 8016c80:	6833      	ldr	r3, [r6, #0]
 8016c82:	8894      	ldrh	r4, [r2, #4]
 8016c84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016c86:	007f      	lsls	r7, r7, #1
 8016c88:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016c8c:	7a97      	ldrb	r7, [r2, #10]
 8016c8e:	4629      	mov	r1, r5
 8016c90:	4307      	orrs	r7, r0
 8016c92:	4630      	mov	r0, r6
 8016c94:	4798      	blx	r3
 8016c96:	4438      	add	r0, r7
 8016c98:	4480      	add	r8, r0
 8016c9a:	fa1f f888 	uxth.w	r8, r8
 8016c9e:	e7e5      	b.n	8016c6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016ca0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016ca0:	b508      	push	{r3, lr}
 8016ca2:	6803      	ldr	r3, [r0, #0]
 8016ca4:	68db      	ldr	r3, [r3, #12]
 8016ca6:	4798      	blx	r3
 8016ca8:	b128      	cbz	r0, 8016cb6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016caa:	7b43      	ldrb	r3, [r0, #13]
 8016cac:	7a80      	ldrb	r0, [r0, #10]
 8016cae:	005b      	lsls	r3, r3, #1
 8016cb0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016cb4:	4318      	orrs	r0, r3
 8016cb6:	bd08      	pop	{r3, pc}

08016cb8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016cb8:	b40e      	push	{r1, r2, r3}
 8016cba:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cbc:	b09e      	sub	sp, #120	; 0x78
 8016cbe:	ab23      	add	r3, sp, #140	; 0x8c
 8016cc0:	4605      	mov	r5, r0
 8016cc2:	f853 4b04 	ldr.w	r4, [r3], #4
 8016cc6:	9303      	str	r3, [sp, #12]
 8016cc8:	a805      	add	r0, sp, #20
 8016cca:	f000 fe6b 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016cce:	682b      	ldr	r3, [r5, #0]
 8016cd0:	4628      	mov	r0, r5
 8016cd2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016cd4:	4798      	blx	r3
 8016cd6:	682b      	ldr	r3, [r5, #0]
 8016cd8:	4606      	mov	r6, r0
 8016cda:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016cdc:	4628      	mov	r0, r5
 8016cde:	4798      	blx	r3
 8016ce0:	4633      	mov	r3, r6
 8016ce2:	ae1e      	add	r6, sp, #120	; 0x78
 8016ce4:	4621      	mov	r1, r4
 8016ce6:	9000      	str	r0, [sp, #0]
 8016ce8:	9a03      	ldr	r2, [sp, #12]
 8016cea:	2400      	movs	r4, #0
 8016cec:	a805      	add	r0, sp, #20
 8016cee:	f000 feb4 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016cf2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016cf6:	462a      	mov	r2, r5
 8016cf8:	4633      	mov	r3, r6
 8016cfa:	4621      	mov	r1, r4
 8016cfc:	a805      	add	r0, sp, #20
 8016cfe:	f001 f9af 	bl	8018060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d02:	b1f0      	cbz	r0, 8016d42 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016d04:	280a      	cmp	r0, #10
 8016d06:	d018      	beq.n	8016d3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016d08:	9f04      	ldr	r7, [sp, #16]
 8016d0a:	b1b7      	cbz	r7, 8016d3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016d0c:	7b78      	ldrb	r0, [r7, #13]
 8016d0e:	7a3b      	ldrb	r3, [r7, #8]
 8016d10:	88ea      	ldrh	r2, [r5, #6]
 8016d12:	00c1      	lsls	r1, r0, #3
 8016d14:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016d18:	4319      	orrs	r1, r3
 8016d1a:	0643      	lsls	r3, r0, #25
 8016d1c:	bf44      	itt	mi
 8016d1e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016d22:	b219      	sxthmi	r1, r3
 8016d24:	0100      	lsls	r0, r0, #4
 8016d26:	79fb      	ldrb	r3, [r7, #7]
 8016d28:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016d2c:	4303      	orrs	r3, r0
 8016d2e:	4413      	add	r3, r2
 8016d30:	1a5b      	subs	r3, r3, r1
 8016d32:	b21b      	sxth	r3, r3
 8016d34:	429c      	cmp	r4, r3
 8016d36:	bfb8      	it	lt
 8016d38:	461c      	movlt	r4, r3
 8016d3a:	4633      	mov	r3, r6
 8016d3c:	462a      	mov	r2, r5
 8016d3e:	2100      	movs	r1, #0
 8016d40:	e7dc      	b.n	8016cfc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016d42:	b2a0      	uxth	r0, r4
 8016d44:	b01e      	add	sp, #120	; 0x78
 8016d46:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016d4a:	b003      	add	sp, #12
 8016d4c:	4770      	bx	lr

08016d4e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016d4e:	7a43      	ldrb	r3, [r0, #9]
 8016d50:	8880      	ldrh	r0, [r0, #4]
 8016d52:	4418      	add	r0, r3
 8016d54:	b280      	uxth	r0, r0
 8016d56:	4770      	bx	lr

08016d58 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016d58:	6803      	ldr	r3, [r0, #0]
 8016d5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016d5c:	4718      	bx	r3

08016d5e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016d5e:	b40e      	push	{r1, r2, r3}
 8016d60:	b570      	push	{r4, r5, r6, lr}
 8016d62:	b09d      	sub	sp, #116	; 0x74
 8016d64:	ab21      	add	r3, sp, #132	; 0x84
 8016d66:	4604      	mov	r4, r0
 8016d68:	f853 5b04 	ldr.w	r5, [r3], #4
 8016d6c:	9302      	str	r3, [sp, #8]
 8016d6e:	a803      	add	r0, sp, #12
 8016d70:	f000 fe18 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016d74:	6823      	ldr	r3, [r4, #0]
 8016d76:	4620      	mov	r0, r4
 8016d78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016d7a:	4798      	blx	r3
 8016d7c:	6823      	ldr	r3, [r4, #0]
 8016d7e:	4606      	mov	r6, r0
 8016d80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d82:	4620      	mov	r0, r4
 8016d84:	4798      	blx	r3
 8016d86:	4633      	mov	r3, r6
 8016d88:	9000      	str	r0, [sp, #0]
 8016d8a:	9a02      	ldr	r2, [sp, #8]
 8016d8c:	4629      	mov	r1, r5
 8016d8e:	a803      	add	r0, sp, #12
 8016d90:	f000 fe63 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d94:	a803      	add	r0, sp, #12
 8016d96:	f001 fa31 	bl	80181fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016d9a:	2401      	movs	r4, #1
 8016d9c:	b2a3      	uxth	r3, r4
 8016d9e:	b140      	cbz	r0, 8016db2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016da0:	280a      	cmp	r0, #10
 8016da2:	bf08      	it	eq
 8016da4:	3301      	addeq	r3, #1
 8016da6:	a803      	add	r0, sp, #12
 8016da8:	bf08      	it	eq
 8016daa:	b21c      	sxtheq	r4, r3
 8016dac:	f001 fa26 	bl	80181fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016db0:	e7f4      	b.n	8016d9c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016db2:	4618      	mov	r0, r3
 8016db4:	b01d      	add	sp, #116	; 0x74
 8016db6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016dba:	b003      	add	sp, #12
 8016dbc:	4770      	bx	lr

08016dbe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016dbe:	b40e      	push	{r1, r2, r3}
 8016dc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016dc2:	b09e      	sub	sp, #120	; 0x78
 8016dc4:	ab23      	add	r3, sp, #140	; 0x8c
 8016dc6:	4604      	mov	r4, r0
 8016dc8:	f853 5b04 	ldr.w	r5, [r3], #4
 8016dcc:	9303      	str	r3, [sp, #12]
 8016dce:	a805      	add	r0, sp, #20
 8016dd0:	f000 fde8 	bl	80179a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016dd4:	6823      	ldr	r3, [r4, #0]
 8016dd6:	4620      	mov	r0, r4
 8016dd8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016dda:	4798      	blx	r3
 8016ddc:	6823      	ldr	r3, [r4, #0]
 8016dde:	4606      	mov	r6, r0
 8016de0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016de2:	4620      	mov	r0, r4
 8016de4:	4798      	blx	r3
 8016de6:	4633      	mov	r3, r6
 8016de8:	4629      	mov	r1, r5
 8016dea:	9000      	str	r0, [sp, #0]
 8016dec:	9a03      	ldr	r2, [sp, #12]
 8016dee:	a805      	add	r0, sp, #20
 8016df0:	ad1e      	add	r5, sp, #120	; 0x78
 8016df2:	f000 fe32 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016df6:	2100      	movs	r1, #0
 8016df8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016dfc:	4622      	mov	r2, r4
 8016dfe:	462b      	mov	r3, r5
 8016e00:	a805      	add	r0, sp, #20
 8016e02:	f001 f92d 	bl	8018060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016e06:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016e0a:	b1d8      	cbz	r0, 8016e44 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016e0c:	280a      	cmp	r0, #10
 8016e0e:	d012      	beq.n	8016e36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016e10:	9804      	ldr	r0, [sp, #16]
 8016e12:	b180      	cbz	r0, 8016e36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016e14:	7b47      	ldrb	r7, [r0, #13]
 8016e16:	88e2      	ldrh	r2, [r4, #6]
 8016e18:	00fb      	lsls	r3, r7, #3
 8016e1a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016e1e:	7a03      	ldrb	r3, [r0, #8]
 8016e20:	430b      	orrs	r3, r1
 8016e22:	0679      	lsls	r1, r7, #25
 8016e24:	bf44      	itt	mi
 8016e26:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e2a:	b21b      	sxthmi	r3, r3
 8016e2c:	1ad3      	subs	r3, r2, r3
 8016e2e:	b21b      	sxth	r3, r3
 8016e30:	429e      	cmp	r6, r3
 8016e32:	bfa8      	it	ge
 8016e34:	461e      	movge	r6, r3
 8016e36:	462b      	mov	r3, r5
 8016e38:	4622      	mov	r2, r4
 8016e3a:	2100      	movs	r1, #0
 8016e3c:	a805      	add	r0, sp, #20
 8016e3e:	f001 f90f 	bl	8018060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016e42:	e7e2      	b.n	8016e0a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016e44:	4630      	mov	r0, r6
 8016e46:	b01e      	add	sp, #120	; 0x78
 8016e48:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016e4c:	b003      	add	sp, #12
 8016e4e:	4770      	bx	lr

08016e50 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016e50:	b513      	push	{r0, r1, r4, lr}
 8016e52:	6803      	ldr	r3, [r0, #0]
 8016e54:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016e58:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016e5c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016e60:	2400      	movs	r4, #0
 8016e62:	9400      	str	r4, [sp, #0]
 8016e64:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016e68:	691b      	ldr	r3, [r3, #16]
 8016e6a:	4669      	mov	r1, sp
 8016e6c:	4798      	blx	r3
 8016e6e:	b002      	add	sp, #8
 8016e70:	bd10      	pop	{r4, pc}

08016e72 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016e72:	b538      	push	{r3, r4, r5, lr}
 8016e74:	680b      	ldr	r3, [r1, #0]
 8016e76:	460c      	mov	r4, r1
 8016e78:	68db      	ldr	r3, [r3, #12]
 8016e7a:	4605      	mov	r5, r0
 8016e7c:	4798      	blx	r3
 8016e7e:	6823      	ldr	r3, [r4, #0]
 8016e80:	4620      	mov	r0, r4
 8016e82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016e84:	4629      	mov	r1, r5
 8016e86:	4798      	blx	r3
 8016e88:	4628      	mov	r0, r5
 8016e8a:	bd38      	pop	{r3, r4, r5, pc}

08016e8c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016e8c:	b410      	push	{r4}
 8016e8e:	880a      	ldrh	r2, [r1, #0]
 8016e90:	8884      	ldrh	r4, [r0, #4]
 8016e92:	4422      	add	r2, r4
 8016e94:	800a      	strh	r2, [r1, #0]
 8016e96:	88c4      	ldrh	r4, [r0, #6]
 8016e98:	884a      	ldrh	r2, [r1, #2]
 8016e9a:	4422      	add	r2, r4
 8016e9c:	804a      	strh	r2, [r1, #2]
 8016e9e:	6940      	ldr	r0, [r0, #20]
 8016ea0:	b120      	cbz	r0, 8016eac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016ea2:	6803      	ldr	r3, [r0, #0]
 8016ea4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016ea8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016eaa:	4718      	bx	r3
 8016eac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016eb0:	4770      	bx	lr

08016eb2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016eb2:	b570      	push	{r4, r5, r6, lr}
 8016eb4:	8882      	ldrh	r2, [r0, #4]
 8016eb6:	880b      	ldrh	r3, [r1, #0]
 8016eb8:	4413      	add	r3, r2
 8016eba:	800b      	strh	r3, [r1, #0]
 8016ebc:	88c2      	ldrh	r2, [r0, #6]
 8016ebe:	884b      	ldrh	r3, [r1, #2]
 8016ec0:	460c      	mov	r4, r1
 8016ec2:	4413      	add	r3, r2
 8016ec4:	804b      	strh	r3, [r1, #2]
 8016ec6:	4605      	mov	r5, r0
 8016ec8:	1d01      	adds	r1, r0, #4
 8016eca:	4620      	mov	r0, r4
 8016ecc:	f7f9 fdc6 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8016ed0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016ed4:	2b00      	cmp	r3, #0
 8016ed6:	dd0b      	ble.n	8016ef0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016ed8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016edc:	2b00      	cmp	r3, #0
 8016ede:	dd07      	ble.n	8016ef0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016ee0:	6968      	ldr	r0, [r5, #20]
 8016ee2:	b128      	cbz	r0, 8016ef0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016ee4:	6803      	ldr	r3, [r0, #0]
 8016ee6:	4621      	mov	r1, r4
 8016ee8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016eea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016eee:	4718      	bx	r3
 8016ef0:	bd70      	pop	{r4, r5, r6, pc}
	...

08016ef4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016ef4:	b570      	push	{r4, r5, r6, lr}
 8016ef6:	8882      	ldrh	r2, [r0, #4]
 8016ef8:	880b      	ldrh	r3, [r1, #0]
 8016efa:	4413      	add	r3, r2
 8016efc:	800b      	strh	r3, [r1, #0]
 8016efe:	88c2      	ldrh	r2, [r0, #6]
 8016f00:	884b      	ldrh	r3, [r1, #2]
 8016f02:	460c      	mov	r4, r1
 8016f04:	4413      	add	r3, r2
 8016f06:	804b      	strh	r3, [r1, #2]
 8016f08:	4605      	mov	r5, r0
 8016f0a:	1d01      	adds	r1, r0, #4
 8016f0c:	4620      	mov	r0, r4
 8016f0e:	f7f9 fda5 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8016f12:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016f16:	2b00      	cmp	r3, #0
 8016f18:	dd19      	ble.n	8016f4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016f1a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016f1e:	2b00      	cmp	r3, #0
 8016f20:	dd15      	ble.n	8016f4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016f22:	6968      	ldr	r0, [r5, #20]
 8016f24:	b128      	cbz	r0, 8016f32 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016f26:	6803      	ldr	r3, [r0, #0]
 8016f28:	4621      	mov	r1, r4
 8016f2a:	691b      	ldr	r3, [r3, #16]
 8016f2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f30:	4718      	bx	r3
 8016f32:	4b07      	ldr	r3, [pc, #28]	; (8016f50 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016f34:	681b      	ldr	r3, [r3, #0]
 8016f36:	3304      	adds	r3, #4
 8016f38:	429d      	cmp	r5, r3
 8016f3a:	d108      	bne.n	8016f4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016f3c:	f7fe fea0 	bl	8015c80 <_ZN8touchgfx11Application11getInstanceEv>
 8016f40:	6803      	ldr	r3, [r0, #0]
 8016f42:	6821      	ldr	r1, [r4, #0]
 8016f44:	6862      	ldr	r2, [r4, #4]
 8016f46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016f48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f4c:	4718      	bx	r3
 8016f4e:	bd70      	pop	{r4, r5, r6, pc}
 8016f50:	20012de8 	.word	0x20012de8

08016f54 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016f54:	b570      	push	{r4, r5, r6, lr}
 8016f56:	4604      	mov	r4, r0
 8016f58:	4616      	mov	r6, r2
 8016f5a:	460d      	mov	r5, r1
 8016f5c:	b901      	cbnz	r1, 8016f60 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016f5e:	b192      	cbz	r2, 8016f86 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016f60:	6823      	ldr	r3, [r4, #0]
 8016f62:	4620      	mov	r0, r4
 8016f64:	699b      	ldr	r3, [r3, #24]
 8016f66:	4798      	blx	r3
 8016f68:	88e2      	ldrh	r2, [r4, #6]
 8016f6a:	88a1      	ldrh	r1, [r4, #4]
 8016f6c:	4432      	add	r2, r6
 8016f6e:	4429      	add	r1, r5
 8016f70:	4620      	mov	r0, r4
 8016f72:	b212      	sxth	r2, r2
 8016f74:	b209      	sxth	r1, r1
 8016f76:	f7ec f8b6 	bl	80030e6 <_ZN8touchgfx8Drawable5setXYEss>
 8016f7a:	6823      	ldr	r3, [r4, #0]
 8016f7c:	4620      	mov	r0, r4
 8016f7e:	699b      	ldr	r3, [r3, #24]
 8016f80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f84:	4718      	bx	r3
 8016f86:	bd70      	pop	{r4, r5, r6, pc}

08016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016f88:	b510      	push	{r4, lr}
 8016f8a:	4604      	mov	r4, r0
 8016f8c:	4608      	mov	r0, r1
 8016f8e:	2300      	movs	r3, #0
 8016f90:	8023      	strh	r3, [r4, #0]
 8016f92:	8063      	strh	r3, [r4, #2]
 8016f94:	6803      	ldr	r3, [r0, #0]
 8016f96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016f9a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8016f9e:	80a1      	strh	r1, [r4, #4]
 8016fa0:	80e2      	strh	r2, [r4, #6]
 8016fa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fa4:	4621      	mov	r1, r4
 8016fa6:	4798      	blx	r3
 8016fa8:	4620      	mov	r0, r4
 8016faa:	bd10      	pop	{r4, pc}

08016fac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8016fac:	b530      	push	{r4, r5, lr}
 8016fae:	8083      	strh	r3, [r0, #4]
 8016fb0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016fb4:	80c3      	strh	r3, [r0, #6]
 8016fb6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016fba:	7203      	strb	r3, [r0, #8]
 8016fbc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016fc0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016fc4:	7243      	strb	r3, [r0, #9]
 8016fc6:	7a83      	ldrb	r3, [r0, #10]
 8016fc8:	6141      	str	r1, [r0, #20]
 8016fca:	f365 0306 	bfi	r3, r5, #0, #7
 8016fce:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016fd2:	8302      	strh	r2, [r0, #24]
 8016fd4:	f365 13c7 	bfi	r3, r5, #7, #1
 8016fd8:	7283      	strb	r3, [r0, #10]
 8016fda:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016fde:	72c3      	strb	r3, [r0, #11]
 8016fe0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016fe4:	7303      	strb	r3, [r0, #12]
 8016fe6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016fea:	81c3      	strh	r3, [r0, #14]
 8016fec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016ff0:	8203      	strh	r3, [r0, #16]
 8016ff2:	4b01      	ldr	r3, [pc, #4]	; (8016ff8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016ff4:	6003      	str	r3, [r0, #0]
 8016ff6:	bd30      	pop	{r4, r5, pc}
 8016ff8:	0802f554 	.word	0x0802f554

08016ffc <_ZNK8touchgfx9ConstFont4findEt>:
 8016ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ffe:	6944      	ldr	r4, [r0, #20]
 8017000:	b3bc      	cbz	r4, 8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017002:	88a3      	ldrh	r3, [r4, #4]
 8017004:	8b02      	ldrh	r2, [r0, #24]
 8017006:	1acb      	subs	r3, r1, r3
 8017008:	f102 32ff 	add.w	r2, r2, #4294967295
 801700c:	d431      	bmi.n	8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801700e:	4293      	cmp	r3, r2
 8017010:	dd0c      	ble.n	801702c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017012:	230e      	movs	r3, #14
 8017014:	fb03 4302 	mla	r3, r3, r2, r4
 8017018:	889b      	ldrh	r3, [r3, #4]
 801701a:	1a5b      	subs	r3, r3, r1
 801701c:	1ad3      	subs	r3, r2, r3
 801701e:	429a      	cmp	r2, r3
 8017020:	db27      	blt.n	8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017022:	2b00      	cmp	r3, #0
 8017024:	bfbc      	itt	lt
 8017026:	2302      	movlt	r3, #2
 8017028:	fb92 f3f3 	sdivlt	r3, r2, r3
 801702c:	2500      	movs	r5, #0
 801702e:	260e      	movs	r6, #14
 8017030:	4295      	cmp	r5, r2
 8017032:	dc1e      	bgt.n	8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017034:	fb06 4003 	mla	r0, r6, r3, r4
 8017038:	8887      	ldrh	r7, [r0, #4]
 801703a:	42b9      	cmp	r1, r7
 801703c:	d01a      	beq.n	8017074 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801703e:	d20d      	bcs.n	801705c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017040:	1e5a      	subs	r2, r3, #1
 8017042:	4295      	cmp	r5, r2
 8017044:	dc15      	bgt.n	8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017046:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801704a:	1a5b      	subs	r3, r3, r1
 801704c:	1ad3      	subs	r3, r2, r3
 801704e:	429a      	cmp	r2, r3
 8017050:	db0f      	blt.n	8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017052:	429d      	cmp	r5, r3
 8017054:	ddec      	ble.n	8017030 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017056:	1953      	adds	r3, r2, r5
 8017058:	105b      	asrs	r3, r3, #1
 801705a:	e7e9      	b.n	8017030 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801705c:	1c5d      	adds	r5, r3, #1
 801705e:	42aa      	cmp	r2, r5
 8017060:	db07      	blt.n	8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017062:	8a43      	ldrh	r3, [r0, #18]
 8017064:	1acb      	subs	r3, r1, r3
 8017066:	442b      	add	r3, r5
 8017068:	429d      	cmp	r5, r3
 801706a:	dc02      	bgt.n	8017072 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801706c:	429a      	cmp	r2, r3
 801706e:	dadf      	bge.n	8017030 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017070:	e7f1      	b.n	8017056 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017072:	2000      	movs	r0, #0
 8017074:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017076 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017076:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017078:	4604      	mov	r4, r0
 801707a:	4617      	mov	r7, r2
 801707c:	461e      	mov	r6, r3
 801707e:	b911      	cbnz	r1, 8017086 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017080:	2500      	movs	r5, #0
 8017082:	4628      	mov	r0, r5
 8017084:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017086:	290a      	cmp	r1, #10
 8017088:	d0fa      	beq.n	8017080 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801708a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801708e:	4291      	cmp	r1, r2
 8017090:	d0f6      	beq.n	8017080 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017092:	f242 020b 	movw	r2, #8203	; 0x200b
 8017096:	4291      	cmp	r1, r2
 8017098:	d0f2      	beq.n	8017080 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801709a:	f7ff ffaf 	bl	8016ffc <_ZNK8touchgfx9ConstFont4findEt>
 801709e:	4605      	mov	r5, r0
 80170a0:	b950      	cbnz	r0, 80170b8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80170a2:	6823      	ldr	r3, [r4, #0]
 80170a4:	4620      	mov	r0, r4
 80170a6:	691b      	ldr	r3, [r3, #16]
 80170a8:	4798      	blx	r3
 80170aa:	4601      	mov	r1, r0
 80170ac:	4620      	mov	r0, r4
 80170ae:	f7ff ffa5 	bl	8016ffc <_ZNK8touchgfx9ConstFont4findEt>
 80170b2:	4605      	mov	r5, r0
 80170b4:	2800      	cmp	r0, #0
 80170b6:	d0e3      	beq.n	8017080 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80170b8:	6823      	ldr	r3, [r4, #0]
 80170ba:	4629      	mov	r1, r5
 80170bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80170be:	4620      	mov	r0, r4
 80170c0:	4798      	blx	r3
 80170c2:	6038      	str	r0, [r7, #0]
 80170c4:	6823      	ldr	r3, [r4, #0]
 80170c6:	4620      	mov	r0, r4
 80170c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80170ca:	4798      	blx	r3
 80170cc:	7030      	strb	r0, [r6, #0]
 80170ce:	e7d8      	b.n	8017082 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080170d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80170d0:	b538      	push	{r3, r4, r5, lr}
 80170d2:	4605      	mov	r5, r0
 80170d4:	f002 fb56 	bl	8019784 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80170d8:	4604      	mov	r4, r0
 80170da:	4628      	mov	r0, r5
 80170dc:	f002 fa96 	bl	801960c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80170e0:	2800      	cmp	r0, #0
 80170e2:	bf14      	ite	ne
 80170e4:	2002      	movne	r0, #2
 80170e6:	2000      	moveq	r0, #0
 80170e8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80170ec:	b280      	uxth	r0, r0
 80170ee:	bd38      	pop	{r3, r4, r5, pc}

080170f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80170f0:	b538      	push	{r3, r4, r5, lr}
 80170f2:	4605      	mov	r5, r0
 80170f4:	f002 fb46 	bl	8019784 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80170f8:	4604      	mov	r4, r0
 80170fa:	4628      	mov	r0, r5
 80170fc:	f002 fa86 	bl	801960c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017100:	2800      	cmp	r0, #0
 8017102:	bf14      	ite	ne
 8017104:	2002      	movne	r0, #2
 8017106:	2000      	moveq	r0, #0
 8017108:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801710c:	f040 0001 	orr.w	r0, r0, #1
 8017110:	b280      	uxth	r0, r0
 8017112:	bd38      	pop	{r3, r4, r5, pc}

08017114 <_ZN8touchgfx4clzuEm>:
 8017114:	4603      	mov	r3, r0
 8017116:	b1c8      	cbz	r0, 801714c <_ZN8touchgfx4clzuEm+0x38>
 8017118:	0c02      	lsrs	r2, r0, #16
 801711a:	0412      	lsls	r2, r2, #16
 801711c:	b9a2      	cbnz	r2, 8017148 <_ZN8touchgfx4clzuEm+0x34>
 801711e:	0403      	lsls	r3, r0, #16
 8017120:	2010      	movs	r0, #16
 8017122:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017126:	bf04      	itt	eq
 8017128:	021b      	lsleq	r3, r3, #8
 801712a:	3008      	addeq	r0, #8
 801712c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017130:	bf04      	itt	eq
 8017132:	011b      	lsleq	r3, r3, #4
 8017134:	3004      	addeq	r0, #4
 8017136:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801713a:	bf04      	itt	eq
 801713c:	009b      	lsleq	r3, r3, #2
 801713e:	3002      	addeq	r0, #2
 8017140:	2b00      	cmp	r3, #0
 8017142:	db04      	blt.n	801714e <_ZN8touchgfx4clzuEm+0x3a>
 8017144:	3001      	adds	r0, #1
 8017146:	4770      	bx	lr
 8017148:	2000      	movs	r0, #0
 801714a:	e7ea      	b.n	8017122 <_ZN8touchgfx4clzuEm+0xe>
 801714c:	2020      	movs	r0, #32
 801714e:	4770      	bx	lr

08017150 <_ZN8touchgfx7muldivuEmmmRm>:
 8017150:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017154:	460f      	mov	r7, r1
 8017156:	4615      	mov	r5, r2
 8017158:	461e      	mov	r6, r3
 801715a:	4601      	mov	r1, r0
 801715c:	b100      	cbz	r0, 8017160 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801715e:	b927      	cbnz	r7, 801716a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017160:	2000      	movs	r0, #0
 8017162:	6030      	str	r0, [r6, #0]
 8017164:	b002      	add	sp, #8
 8017166:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801716a:	f7ff ffd3 	bl	8017114 <_ZN8touchgfx4clzuEm>
 801716e:	b980      	cbnz	r0, 8017192 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017170:	4638      	mov	r0, r7
 8017172:	f7ff ffcf 	bl	8017114 <_ZN8touchgfx4clzuEm>
 8017176:	2800      	cmp	r0, #0
 8017178:	dd05      	ble.n	8017186 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801717a:	4633      	mov	r3, r6
 801717c:	462a      	mov	r2, r5
 801717e:	4638      	mov	r0, r7
 8017180:	f7ff ffe6 	bl	8017150 <_ZN8touchgfx7muldivuEmmmRm>
 8017184:	e7ee      	b.n	8017164 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017186:	f04f 33ff 	mov.w	r3, #4294967295
 801718a:	6033      	str	r3, [r6, #0]
 801718c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017190:	e7e8      	b.n	8017164 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017192:	fa37 f800 	lsrs.w	r8, r7, r0
 8017196:	fb07 f301 	mul.w	r3, r7, r1
 801719a:	d105      	bne.n	80171a8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801719c:	fbb3 f0f5 	udiv	r0, r3, r5
 80171a0:	fb05 3510 	mls	r5, r5, r0, r3
 80171a4:	6035      	str	r5, [r6, #0]
 80171a6:	e7dd      	b.n	8017164 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80171a8:	2301      	movs	r3, #1
 80171aa:	fa01 fa00 	lsl.w	sl, r1, r0
 80171ae:	fa03 f000 	lsl.w	r0, r3, r0
 80171b2:	3801      	subs	r0, #1
 80171b4:	462a      	mov	r2, r5
 80171b6:	4633      	mov	r3, r6
 80171b8:	4038      	ands	r0, r7
 80171ba:	f7ff ffc9 	bl	8017150 <_ZN8touchgfx7muldivuEmmmRm>
 80171be:	fbba f9f5 	udiv	r9, sl, r5
 80171c2:	462a      	mov	r2, r5
 80171c4:	4607      	mov	r7, r0
 80171c6:	ab01      	add	r3, sp, #4
 80171c8:	fb05 a119 	mls	r1, r5, r9, sl
 80171cc:	4640      	mov	r0, r8
 80171ce:	f7ff ffbf 	bl	8017150 <_ZN8touchgfx7muldivuEmmmRm>
 80171d2:	9b01      	ldr	r3, [sp, #4]
 80171d4:	6832      	ldr	r2, [r6, #0]
 80171d6:	fb08 f409 	mul.w	r4, r8, r9
 80171da:	441a      	add	r2, r3
 80171dc:	fbb2 f3f5 	udiv	r3, r2, r5
 80171e0:	441c      	add	r4, r3
 80171e2:	443c      	add	r4, r7
 80171e4:	4420      	add	r0, r4
 80171e6:	fb05 2513 	mls	r5, r5, r3, r2
 80171ea:	e7db      	b.n	80171a4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080171ec <_ZN8touchgfx6muldivElllRl>:
 80171ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80171ee:	2800      	cmp	r0, #0
 80171f0:	bfba      	itte	lt
 80171f2:	4240      	neglt	r0, r0
 80171f4:	f04f 34ff 	movlt.w	r4, #4294967295
 80171f8:	2401      	movge	r4, #1
 80171fa:	2900      	cmp	r1, #0
 80171fc:	bfbc      	itt	lt
 80171fe:	4249      	neglt	r1, r1
 8017200:	4264      	neglt	r4, r4
 8017202:	2a00      	cmp	r2, #0
 8017204:	bfb6      	itet	lt
 8017206:	4265      	neglt	r5, r4
 8017208:	4625      	movge	r5, r4
 801720a:	4252      	neglt	r2, r2
 801720c:	4288      	cmp	r0, r1
 801720e:	461e      	mov	r6, r3
 8017210:	bfc2      	ittt	gt
 8017212:	4603      	movgt	r3, r0
 8017214:	4608      	movgt	r0, r1
 8017216:	4619      	movgt	r1, r3
 8017218:	ab01      	add	r3, sp, #4
 801721a:	f7ff ff99 	bl	8017150 <_ZN8touchgfx7muldivuEmmmRm>
 801721e:	9b01      	ldr	r3, [sp, #4]
 8017220:	4368      	muls	r0, r5
 8017222:	435c      	muls	r4, r3
 8017224:	6034      	str	r4, [r6, #0]
 8017226:	b002      	add	sp, #8
 8017228:	bd70      	pop	{r4, r5, r6, pc}

0801722a <_ZN8touchgfx6muldivElll>:
 801722a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801722c:	4606      	mov	r6, r0
 801722e:	ab01      	add	r3, sp, #4
 8017230:	460d      	mov	r5, r1
 8017232:	4614      	mov	r4, r2
 8017234:	f7ff ffda 	bl	80171ec <_ZN8touchgfx6muldivElllRl>
 8017238:	2e00      	cmp	r6, #0
 801723a:	db20      	blt.n	801727e <_ZN8touchgfx6muldivElll+0x54>
 801723c:	bf14      	ite	ne
 801723e:	2301      	movne	r3, #1
 8017240:	2300      	moveq	r3, #0
 8017242:	2d00      	cmp	r5, #0
 8017244:	db1e      	blt.n	8017284 <_ZN8touchgfx6muldivElll+0x5a>
 8017246:	bf14      	ite	ne
 8017248:	2201      	movne	r2, #1
 801724a:	2200      	moveq	r2, #0
 801724c:	2c00      	cmp	r4, #0
 801724e:	fb03 f202 	mul.w	r2, r3, r2
 8017252:	db1a      	blt.n	801728a <_ZN8touchgfx6muldivElll+0x60>
 8017254:	bf14      	ite	ne
 8017256:	2301      	movne	r3, #1
 8017258:	2300      	moveq	r3, #0
 801725a:	4353      	muls	r3, r2
 801725c:	2b01      	cmp	r3, #1
 801725e:	d117      	bne.n	8017290 <_ZN8touchgfx6muldivElll+0x66>
 8017260:	9b01      	ldr	r3, [sp, #4]
 8017262:	2c00      	cmp	r4, #0
 8017264:	bfb8      	it	lt
 8017266:	4264      	neglt	r4, r4
 8017268:	2b00      	cmp	r3, #0
 801726a:	f104 0401 	add.w	r4, r4, #1
 801726e:	bfb8      	it	lt
 8017270:	425b      	neglt	r3, r3
 8017272:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017276:	db00      	blt.n	801727a <_ZN8touchgfx6muldivElll+0x50>
 8017278:	3001      	adds	r0, #1
 801727a:	b002      	add	sp, #8
 801727c:	bd70      	pop	{r4, r5, r6, pc}
 801727e:	f04f 33ff 	mov.w	r3, #4294967295
 8017282:	e7de      	b.n	8017242 <_ZN8touchgfx6muldivElll+0x18>
 8017284:	f04f 32ff 	mov.w	r2, #4294967295
 8017288:	e7e0      	b.n	801724c <_ZN8touchgfx6muldivElll+0x22>
 801728a:	f04f 33ff 	mov.w	r3, #4294967295
 801728e:	e7e4      	b.n	801725a <_ZN8touchgfx6muldivElll+0x30>
 8017290:	3301      	adds	r3, #1
 8017292:	d1f2      	bne.n	801727a <_ZN8touchgfx6muldivElll+0x50>
 8017294:	9b01      	ldr	r3, [sp, #4]
 8017296:	2c00      	cmp	r4, #0
 8017298:	bfb8      	it	lt
 801729a:	4264      	neglt	r4, r4
 801729c:	2b00      	cmp	r3, #0
 801729e:	bfb8      	it	lt
 80172a0:	425b      	neglt	r3, r3
 80172a2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80172a6:	bfc8      	it	gt
 80172a8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80172ac:	e7e5      	b.n	801727a <_ZN8touchgfx6muldivElll+0x50>

080172ae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80172ae:	2000      	movs	r0, #0
 80172b0:	4770      	bx	lr

080172b2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80172b2:	2001      	movs	r0, #1
 80172b4:	4770      	bx	lr

080172b6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80172b6:	2002      	movs	r0, #2
 80172b8:	4770      	bx	lr

080172ba <_ZN8touchgfx6ScreenD1Ev>:
 80172ba:	4770      	bx	lr

080172bc <_ZN8touchgfx12GestureEventD1Ev>:
 80172bc:	4770      	bx	lr

080172be <_ZN8touchgfx9DragEventD1Ev>:
 80172be:	4770      	bx	lr

080172c0 <_ZN8touchgfx10ClickEventD1Ev>:
 80172c0:	4770      	bx	lr

080172c2 <_ZN8touchgfx10ClickEventD0Ev>:
 80172c2:	b510      	push	{r4, lr}
 80172c4:	210c      	movs	r1, #12
 80172c6:	4604      	mov	r4, r0
 80172c8:	f012 fdf9 	bl	8029ebe <_ZdlPvj>
 80172cc:	4620      	mov	r0, r4
 80172ce:	bd10      	pop	{r4, pc}

080172d0 <_ZN8touchgfx9DragEventD0Ev>:
 80172d0:	b510      	push	{r4, lr}
 80172d2:	2110      	movs	r1, #16
 80172d4:	4604      	mov	r4, r0
 80172d6:	f012 fdf2 	bl	8029ebe <_ZdlPvj>
 80172da:	4620      	mov	r0, r4
 80172dc:	bd10      	pop	{r4, pc}

080172de <_ZN8touchgfx12GestureEventD0Ev>:
 80172de:	b510      	push	{r4, lr}
 80172e0:	210c      	movs	r1, #12
 80172e2:	4604      	mov	r4, r0
 80172e4:	f012 fdeb 	bl	8029ebe <_ZdlPvj>
 80172e8:	4620      	mov	r0, r4
 80172ea:	bd10      	pop	{r4, pc}

080172ec <_ZN8touchgfx6ScreenD0Ev>:
 80172ec:	b510      	push	{r4, lr}
 80172ee:	213c      	movs	r1, #60	; 0x3c
 80172f0:	4604      	mov	r4, r0
 80172f2:	f012 fde4 	bl	8029ebe <_ZdlPvj>
 80172f6:	4620      	mov	r0, r4
 80172f8:	bd10      	pop	{r4, pc}
	...

080172fc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80172fc:	b530      	push	{r4, r5, lr}
 80172fe:	460d      	mov	r5, r1
 8017300:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017302:	b087      	sub	sp, #28
 8017304:	4604      	mov	r4, r0
 8017306:	b301      	cbz	r1, 801734a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017308:	a801      	add	r0, sp, #4
 801730a:	f7ff fe3d 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801730e:	892a      	ldrh	r2, [r5, #8]
 8017310:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017314:	7928      	ldrb	r0, [r5, #4]
 8017316:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801731a:	f88d 0010 	strb.w	r0, [sp, #16]
 801731e:	1ad2      	subs	r2, r2, r3
 8017320:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017322:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017324:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017328:	441a      	add	r2, r3
 801732a:	896b      	ldrh	r3, [r5, #10]
 801732c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017330:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017334:	1b5b      	subs	r3, r3, r5
 8017336:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017338:	442b      	add	r3, r5
 801733a:	4d05      	ldr	r5, [pc, #20]	; (8017350 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801733c:	9503      	str	r5, [sp, #12]
 801733e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017342:	6803      	ldr	r3, [r0, #0]
 8017344:	a903      	add	r1, sp, #12
 8017346:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017348:	4798      	blx	r3
 801734a:	b007      	add	sp, #28
 801734c:	bd30      	pop	{r4, r5, pc}
 801734e:	bf00      	nop
 8017350:	0802f5dc 	.word	0x0802f5dc

08017354 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017358:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801735a:	b08a      	sub	sp, #40	; 0x28
 801735c:	4604      	mov	r4, r0
 801735e:	460d      	mov	r5, r1
 8017360:	b113      	cbz	r3, 8017368 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017362:	790b      	ldrb	r3, [r1, #4]
 8017364:	2b00      	cmp	r3, #0
 8017366:	d044      	beq.n	80173f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017368:	f104 0804 	add.w	r8, r4, #4
 801736c:	4641      	mov	r1, r8
 801736e:	a803      	add	r0, sp, #12
 8017370:	f7ff fe0a 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017374:	792b      	ldrb	r3, [r5, #4]
 8017376:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801737a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801737e:	b983      	cbnz	r3, 80173a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017380:	892a      	ldrh	r2, [r5, #8]
 8017382:	88e9      	ldrh	r1, [r5, #6]
 8017384:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017388:	1b92      	subs	r2, r2, r6
 801738a:	1bc9      	subs	r1, r1, r7
 801738c:	9301      	str	r3, [sp, #4]
 801738e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017392:	9300      	str	r3, [sp, #0]
 8017394:	b212      	sxth	r2, r2
 8017396:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801739a:	b209      	sxth	r1, r1
 801739c:	4640      	mov	r0, r8
 801739e:	f7f9 fa79 	bl	8010894 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80173a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80173a4:	b329      	cbz	r1, 80173f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80173a6:	a805      	add	r0, sp, #20
 80173a8:	f7ff fdee 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80173ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80173b0:	792b      	ldrb	r3, [r5, #4]
 80173b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80173b4:	f88d 3020 	strb.w	r3, [sp, #32]
 80173b8:	1abf      	subs	r7, r7, r2
 80173ba:	88ea      	ldrh	r2, [r5, #6]
 80173bc:	4417      	add	r7, r2
 80173be:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80173c0:	4417      	add	r7, r2
 80173c2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80173c6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80173ca:	1ab6      	subs	r6, r6, r2
 80173cc:	892a      	ldrh	r2, [r5, #8]
 80173ce:	4416      	add	r6, r2
 80173d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80173d2:	4416      	add	r6, r2
 80173d4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80173d8:	4a07      	ldr	r2, [pc, #28]	; (80173f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80173da:	9207      	str	r2, [sp, #28]
 80173dc:	2600      	movs	r6, #0
 80173de:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80173e2:	6803      	ldr	r3, [r0, #0]
 80173e4:	a907      	add	r1, sp, #28
 80173e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80173e8:	4798      	blx	r3
 80173ea:	792b      	ldrb	r3, [r5, #4]
 80173ec:	b10b      	cbz	r3, 80173f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80173ee:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80173f2:	b00a      	add	sp, #40	; 0x28
 80173f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80173f8:	0802f5b4 	.word	0x0802f5b4

080173fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80173fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017400:	460c      	mov	r4, r1
 8017402:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017404:	b088      	sub	sp, #32
 8017406:	4605      	mov	r5, r0
 8017408:	2900      	cmp	r1, #0
 801740a:	d06d      	beq.n	80174e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801740c:	4668      	mov	r0, sp
 801740e:	f7ff fdbb 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017412:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017414:	88e3      	ldrh	r3, [r4, #6]
 8017416:	f9bd 8000 	ldrsh.w	r8, [sp]
 801741a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801741e:	440b      	add	r3, r1
 8017420:	b21b      	sxth	r3, r3
 8017422:	4543      	cmp	r3, r8
 8017424:	db31      	blt.n	801748a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017426:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801742a:	44c4      	add	ip, r8
 801742c:	fa0f fc8c 	sxth.w	ip, ip
 8017430:	4563      	cmp	r3, ip
 8017432:	da2a      	bge.n	801748a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017434:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017436:	8926      	ldrh	r6, [r4, #8]
 8017438:	4416      	add	r6, r2
 801743a:	b236      	sxth	r6, r6
 801743c:	42be      	cmp	r6, r7
 801743e:	db24      	blt.n	801748a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017440:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017444:	4438      	add	r0, r7
 8017446:	b200      	sxth	r0, r0
 8017448:	4286      	cmp	r6, r0
 801744a:	da1e      	bge.n	801748a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801744c:	8963      	ldrh	r3, [r4, #10]
 801744e:	4419      	add	r1, r3
 8017450:	b209      	sxth	r1, r1
 8017452:	4541      	cmp	r1, r8
 8017454:	db08      	blt.n	8017468 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017456:	4561      	cmp	r1, ip
 8017458:	da06      	bge.n	8017468 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801745a:	89a3      	ldrh	r3, [r4, #12]
 801745c:	441a      	add	r2, r3
 801745e:	b212      	sxth	r2, r2
 8017460:	42ba      	cmp	r2, r7
 8017462:	db01      	blt.n	8017468 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017464:	4282      	cmp	r2, r0
 8017466:	db10      	blt.n	801748a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017468:	4b21      	ldr	r3, [pc, #132]	; (80174f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801746a:	9304      	str	r3, [sp, #16]
 801746c:	2302      	movs	r3, #2
 801746e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017472:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017474:	2300      	movs	r3, #0
 8017476:	f8ad 3016 	strh.w	r3, [sp, #22]
 801747a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801747e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017482:	6803      	ldr	r3, [r0, #0]
 8017484:	a904      	add	r1, sp, #16
 8017486:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017488:	4798      	blx	r3
 801748a:	1d29      	adds	r1, r5, #4
 801748c:	a802      	add	r0, sp, #8
 801748e:	f7ff fd7b 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017492:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017496:	88e0      	ldrh	r0, [r4, #6]
 8017498:	7921      	ldrb	r1, [r4, #4]
 801749a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801749e:	8922      	ldrh	r2, [r4, #8]
 80174a0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80174a2:	f88d 1014 	strb.w	r1, [sp, #20]
 80174a6:	eba3 0808 	sub.w	r8, r3, r8
 80174aa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80174ae:	1bdf      	subs	r7, r3, r7
 80174b0:	b2bb      	uxth	r3, r7
 80174b2:	fa1f f888 	uxth.w	r8, r8
 80174b6:	8967      	ldrh	r7, [r4, #10]
 80174b8:	89a4      	ldrh	r4, [r4, #12]
 80174ba:	4440      	add	r0, r8
 80174bc:	4460      	add	r0, ip
 80174be:	441a      	add	r2, r3
 80174c0:	44b8      	add	r8, r7
 80174c2:	4423      	add	r3, r4
 80174c4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80174c8:	4433      	add	r3, r6
 80174ca:	4432      	add	r2, r6
 80174cc:	44e0      	add	r8, ip
 80174ce:	4c09      	ldr	r4, [pc, #36]	; (80174f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80174d0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80174d2:	9404      	str	r4, [sp, #16]
 80174d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80174d8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80174dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80174e0:	6803      	ldr	r3, [r0, #0]
 80174e2:	a904      	add	r1, sp, #16
 80174e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80174e6:	4798      	blx	r3
 80174e8:	b008      	add	sp, #32
 80174ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80174ee:	bf00      	nop
 80174f0:	0802f5b4 	.word	0x0802f5b4
 80174f4:	0802f5c8 	.word	0x0802f5c8

080174f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80174f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80174fa:	4604      	mov	r4, r0
 80174fc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017500:	3201      	adds	r2, #1
 8017502:	d112      	bne.n	801752a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017504:	6803      	ldr	r3, [r0, #0]
 8017506:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801750a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801750e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017512:	2500      	movs	r5, #0
 8017514:	9500      	str	r5, [sp, #0]
 8017516:	466d      	mov	r5, sp
 8017518:	4629      	mov	r1, r5
 801751a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801751e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017520:	4798      	blx	r3
 8017522:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017526:	e884 0003 	stmia.w	r4, {r0, r1}
 801752a:	4620      	mov	r0, r4
 801752c:	b003      	add	sp, #12
 801752e:	bd30      	pop	{r4, r5, pc}

08017530 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017530:	b513      	push	{r0, r1, r4, lr}
 8017532:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017536:	3301      	adds	r3, #1
 8017538:	4604      	mov	r4, r0
 801753a:	d109      	bne.n	8017550 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801753c:	4601      	mov	r1, r0
 801753e:	4668      	mov	r0, sp
 8017540:	f7ff fd22 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017544:	f8bd 3000 	ldrh.w	r3, [sp]
 8017548:	8423      	strh	r3, [r4, #32]
 801754a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801754e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017550:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017554:	b002      	add	sp, #8
 8017556:	bd10      	pop	{r4, pc}

08017558 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017558:	b513      	push	{r0, r1, r4, lr}
 801755a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801755e:	3301      	adds	r3, #1
 8017560:	4604      	mov	r4, r0
 8017562:	d109      	bne.n	8017578 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017564:	4601      	mov	r1, r0
 8017566:	4668      	mov	r0, sp
 8017568:	f7ff fd0e 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801756c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017570:	8423      	strh	r3, [r4, #32]
 8017572:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017576:	8463      	strh	r3, [r4, #34]	; 0x22
 8017578:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801757c:	b002      	add	sp, #8
 801757e:	bd10      	pop	{r4, pc}

08017580 <_ZN8touchgfx6ScreenC1Ev>:
 8017580:	b570      	push	{r4, r5, r6, lr}
 8017582:	4605      	mov	r5, r0
 8017584:	4b16      	ldr	r3, [pc, #88]	; (80175e0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017586:	f845 3b04 	str.w	r3, [r5], #4
 801758a:	2300      	movs	r3, #0
 801758c:	8103      	strh	r3, [r0, #8]
 801758e:	8143      	strh	r3, [r0, #10]
 8017590:	8183      	strh	r3, [r0, #12]
 8017592:	81c3      	strh	r3, [r0, #14]
 8017594:	8203      	strh	r3, [r0, #16]
 8017596:	8243      	strh	r3, [r0, #18]
 8017598:	8283      	strh	r3, [r0, #20]
 801759a:	82c3      	strh	r3, [r0, #22]
 801759c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80175a0:	6203      	str	r3, [r0, #32]
 80175a2:	8483      	strh	r3, [r0, #36]	; 0x24
 80175a4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80175a6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80175aa:	4a0e      	ldr	r2, [pc, #56]	; (80175e4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80175ac:	6343      	str	r3, [r0, #52]	; 0x34
 80175ae:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80175b2:	4b0d      	ldr	r3, [pc, #52]	; (80175e8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80175b4:	6042      	str	r2, [r0, #4]
 80175b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80175ba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80175bc:	4a0b      	ldr	r2, [pc, #44]	; (80175ec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80175be:	4604      	mov	r4, r0
 80175c0:	2101      	movs	r1, #1
 80175c2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80175c6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80175ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 80175ce:	4628      	mov	r0, r5
 80175d0:	4798      	blx	r3
 80175d2:	6863      	ldr	r3, [r4, #4]
 80175d4:	4628      	mov	r0, r5
 80175d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80175d8:	4631      	mov	r1, r6
 80175da:	4798      	blx	r3
 80175dc:	4620      	mov	r0, r4
 80175de:	bd70      	pop	{r4, r5, r6, pc}
 80175e0:	0802f5f0 	.word	0x0802f5f0
 80175e4:	0802ee54 	.word	0x0802ee54
 80175e8:	20012d9a 	.word	0x20012d9a
 80175ec:	20012d98 	.word	0x20012d98

080175f0 <_ZN8touchgfx6Screen4drawEv>:
 80175f0:	b507      	push	{r0, r1, r2, lr}
 80175f2:	4b09      	ldr	r3, [pc, #36]	; (8017618 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80175f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80175f8:	4b08      	ldr	r3, [pc, #32]	; (801761c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80175fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80175fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017602:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017606:	6803      	ldr	r3, [r0, #0]
 8017608:	2100      	movs	r1, #0
 801760a:	9100      	str	r1, [sp, #0]
 801760c:	689b      	ldr	r3, [r3, #8]
 801760e:	4669      	mov	r1, sp
 8017610:	4798      	blx	r3
 8017612:	b003      	add	sp, #12
 8017614:	f85d fb04 	ldr.w	pc, [sp], #4
 8017618:	20012d98 	.word	0x20012d98
 801761c:	20012d9a 	.word	0x20012d9a

08017620 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017624:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017628:	2b00      	cmp	r3, #0
 801762a:	b089      	sub	sp, #36	; 0x24
 801762c:	4680      	mov	r8, r0
 801762e:	460c      	mov	r4, r1
 8017630:	4615      	mov	r5, r2
 8017632:	dd0e      	ble.n	8017652 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017634:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017638:	2b00      	cmp	r3, #0
 801763a:	dd0a      	ble.n	8017652 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801763c:	4628      	mov	r0, r5
 801763e:	f7ff ff5b 	bl	80174f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017642:	4621      	mov	r1, r4
 8017644:	f7fe fa3d 	bl	8015ac2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017648:	69eb      	ldr	r3, [r5, #28]
 801764a:	b928      	cbnz	r0, 8017658 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801764c:	461d      	mov	r5, r3
 801764e:	2b00      	cmp	r3, #0
 8017650:	d1f4      	bne.n	801763c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017652:	b009      	add	sp, #36	; 0x24
 8017654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017658:	ae04      	add	r6, sp, #16
 801765a:	2b00      	cmp	r3, #0
 801765c:	f000 80b5 	beq.w	80177ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017660:	682b      	ldr	r3, [r5, #0]
 8017662:	4629      	mov	r1, r5
 8017664:	68db      	ldr	r3, [r3, #12]
 8017666:	a802      	add	r0, sp, #8
 8017668:	4798      	blx	r3
 801766a:	4628      	mov	r0, r5
 801766c:	f7ff ff60 	bl	8017530 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017670:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017674:	4407      	add	r7, r0
 8017676:	4628      	mov	r0, r5
 8017678:	f7ff ff6e 	bl	8017558 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801767c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017680:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017684:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017688:	4418      	add	r0, r3
 801768a:	4621      	mov	r1, r4
 801768c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017690:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017694:	b23f      	sxth	r7, r7
 8017696:	4630      	mov	r0, r6
 8017698:	f8ad 3016 	strh.w	r3, [sp, #22]
 801769c:	f8ad 7010 	strh.w	r7, [sp, #16]
 80176a0:	f7f9 f9dc 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 80176a4:	4628      	mov	r0, r5
 80176a6:	f7ff ff27 	bl	80174f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80176aa:	4602      	mov	r2, r0
 80176ac:	e896 0003 	ldmia.w	r6, {r0, r1}
 80176b0:	ab06      	add	r3, sp, #24
 80176b2:	e883 0003 	stmia.w	r3, {r0, r1}
 80176b6:	4611      	mov	r1, r2
 80176b8:	4618      	mov	r0, r3
 80176ba:	f7f9 f9cf 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 80176be:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80176c2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80176c6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80176ca:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80176ce:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80176d2:	4299      	cmp	r1, r3
 80176d4:	d10b      	bne.n	80176ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80176d6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80176da:	4552      	cmp	r2, sl
 80176dc:	d107      	bne.n	80176ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80176de:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80176e2:	455a      	cmp	r2, fp
 80176e4:	d103      	bne.n	80176ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80176e6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80176ea:	454a      	cmp	r2, r9
 80176ec:	d06d      	beq.n	80177ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80176ee:	f1bb 0f00 	cmp.w	fp, #0
 80176f2:	dd65      	ble.n	80177c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80176f4:	f1b9 0f00 	cmp.w	r9, #0
 80176f8:	dd62      	ble.n	80177c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80176fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80176fe:	fa1f f08a 	uxth.w	r0, sl
 8017702:	4552      	cmp	r2, sl
 8017704:	9000      	str	r0, [sp, #0]
 8017706:	da12      	bge.n	801772e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017708:	9301      	str	r3, [sp, #4]
 801770a:	9b00      	ldr	r3, [sp, #0]
 801770c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017710:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017714:	1a9a      	subs	r2, r3, r2
 8017716:	f8ad 1010 	strh.w	r1, [sp, #16]
 801771a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801771e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017722:	69ea      	ldr	r2, [r5, #28]
 8017724:	4631      	mov	r1, r6
 8017726:	4640      	mov	r0, r8
 8017728:	f7ff ff7a 	bl	8017620 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801772c:	9b01      	ldr	r3, [sp, #4]
 801772e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017732:	429a      	cmp	r2, r3
 8017734:	b29f      	uxth	r7, r3
 8017736:	da0d      	bge.n	8017754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017738:	f8ad 2010 	strh.w	r2, [sp, #16]
 801773c:	1aba      	subs	r2, r7, r2
 801773e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017742:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017746:	f8ad 9016 	strh.w	r9, [sp, #22]
 801774a:	69ea      	ldr	r2, [r5, #28]
 801774c:	4631      	mov	r1, r6
 801774e:	4640      	mov	r0, r8
 8017750:	f7ff ff66 	bl	8017620 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017754:	8822      	ldrh	r2, [r4, #0]
 8017756:	88a3      	ldrh	r3, [r4, #4]
 8017758:	445f      	add	r7, fp
 801775a:	4413      	add	r3, r2
 801775c:	b29b      	uxth	r3, r3
 801775e:	b2bf      	uxth	r7, r7
 8017760:	b23a      	sxth	r2, r7
 8017762:	b219      	sxth	r1, r3
 8017764:	4291      	cmp	r1, r2
 8017766:	dd0d      	ble.n	8017784 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017768:	1bdb      	subs	r3, r3, r7
 801776a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801776e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017772:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017776:	f8ad 9016 	strh.w	r9, [sp, #22]
 801777a:	69ea      	ldr	r2, [r5, #28]
 801777c:	4631      	mov	r1, r6
 801777e:	4640      	mov	r0, r8
 8017780:	f7ff ff4e 	bl	8017620 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017784:	88e2      	ldrh	r2, [r4, #6]
 8017786:	8863      	ldrh	r3, [r4, #2]
 8017788:	4413      	add	r3, r2
 801778a:	9a00      	ldr	r2, [sp, #0]
 801778c:	444a      	add	r2, r9
 801778e:	b29b      	uxth	r3, r3
 8017790:	fa1f f982 	uxth.w	r9, r2
 8017794:	fa0f f289 	sxth.w	r2, r9
 8017798:	b219      	sxth	r1, r3
 801779a:	428a      	cmp	r2, r1
 801779c:	da15      	bge.n	80177ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801779e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80177a2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80177a6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80177aa:	eba3 0309 	sub.w	r3, r3, r9
 80177ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 80177b2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80177b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80177ba:	69ea      	ldr	r2, [r5, #28]
 80177bc:	4631      	mov	r1, r6
 80177be:	e001      	b.n	80177c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80177c0:	69ea      	ldr	r2, [r5, #28]
 80177c2:	4621      	mov	r1, r4
 80177c4:	4640      	mov	r0, r8
 80177c6:	f7ff ff2b 	bl	8017620 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80177ca:	4628      	mov	r0, r5
 80177cc:	f7ff fe94 	bl	80174f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80177d0:	6861      	ldr	r1, [r4, #4]
 80177d2:	4602      	mov	r2, r0
 80177d4:	6820      	ldr	r0, [r4, #0]
 80177d6:	4633      	mov	r3, r6
 80177d8:	c303      	stmia	r3!, {r0, r1}
 80177da:	4611      	mov	r1, r2
 80177dc:	4630      	mov	r0, r6
 80177de:	f7f9 f93d 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 80177e2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80177e6:	2b00      	cmp	r3, #0
 80177e8:	f77f af33 	ble.w	8017652 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80177ec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80177f0:	2b00      	cmp	r3, #0
 80177f2:	f77f af2e 	ble.w	8017652 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80177f6:	4628      	mov	r0, r5
 80177f8:	f7ff fe9a 	bl	8017530 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80177fc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017800:	1a18      	subs	r0, r3, r0
 8017802:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017806:	4628      	mov	r0, r5
 8017808:	f7ff fea6 	bl	8017558 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801780c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017810:	1a18      	subs	r0, r3, r0
 8017812:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017816:	682b      	ldr	r3, [r5, #0]
 8017818:	4631      	mov	r1, r6
 801781a:	689b      	ldr	r3, [r3, #8]
 801781c:	4628      	mov	r0, r5
 801781e:	4798      	blx	r3
 8017820:	e717      	b.n	8017652 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017822 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017822:	b570      	push	{r4, r5, r6, lr}
 8017824:	460c      	mov	r4, r1
 8017826:	b086      	sub	sp, #24
 8017828:	1d06      	adds	r6, r0, #4
 801782a:	2300      	movs	r3, #0
 801782c:	4631      	mov	r1, r6
 801782e:	4605      	mov	r5, r0
 8017830:	a802      	add	r0, sp, #8
 8017832:	9301      	str	r3, [sp, #4]
 8017834:	f7ff fba8 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017838:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801783c:	8822      	ldrh	r2, [r4, #0]
 801783e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017842:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017846:	f8ad 0014 	strh.w	r0, [sp, #20]
 801784a:	1ad2      	subs	r2, r2, r3
 801784c:	8863      	ldrh	r3, [r4, #2]
 801784e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017852:	1a5b      	subs	r3, r3, r1
 8017854:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017858:	f8ad 1016 	strh.w	r1, [sp, #22]
 801785c:	aa01      	add	r2, sp, #4
 801785e:	a904      	add	r1, sp, #16
 8017860:	4630      	mov	r0, r6
 8017862:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017866:	f7f9 f9d1 	bl	8010c0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801786a:	9a01      	ldr	r2, [sp, #4]
 801786c:	b11a      	cbz	r2, 8017876 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801786e:	4621      	mov	r1, r4
 8017870:	4628      	mov	r0, r5
 8017872:	f7ff fed5 	bl	8017620 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017876:	b006      	add	sp, #24
 8017878:	bd70      	pop	{r4, r5, r6, pc}

0801787a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801787a:	b530      	push	{r4, r5, lr}
 801787c:	4602      	mov	r2, r0
 801787e:	4604      	mov	r4, r0
 8017880:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017884:	b085      	sub	sp, #20
 8017886:	460d      	mov	r5, r1
 8017888:	6851      	ldr	r1, [r2, #4]
 801788a:	466b      	mov	r3, sp
 801788c:	c303      	stmia	r3!, {r0, r1}
 801788e:	4629      	mov	r1, r5
 8017890:	4668      	mov	r0, sp
 8017892:	f7f9 f8e3 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 8017896:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801789a:	b12b      	cbz	r3, 80178a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801789c:	4669      	mov	r1, sp
 801789e:	4620      	mov	r0, r4
 80178a0:	f7ff ffbf 	bl	8017822 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80178a4:	b005      	add	sp, #20
 80178a6:	bd30      	pop	{r4, r5, pc}
 80178a8:	3404      	adds	r4, #4
 80178aa:	4621      	mov	r1, r4
 80178ac:	a802      	add	r0, sp, #8
 80178ae:	f7ff fb6b 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80178b2:	f8bd 3000 	ldrh.w	r3, [sp]
 80178b6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80178ba:	1a9b      	subs	r3, r3, r2
 80178bc:	f8ad 3000 	strh.w	r3, [sp]
 80178c0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80178c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80178c8:	4669      	mov	r1, sp
 80178ca:	1a9b      	subs	r3, r3, r2
 80178cc:	4620      	mov	r0, r4
 80178ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80178d2:	f7f9 f962 	bl	8010b9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80178d6:	e7e5      	b.n	80178a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080178d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80178d8:	680a      	ldr	r2, [r1, #0]
 80178da:	460b      	mov	r3, r1
 80178dc:	6992      	ldr	r2, [r2, #24]
 80178de:	1d01      	adds	r1, r0, #4
 80178e0:	4618      	mov	r0, r3
 80178e2:	4710      	bx	r2

080178e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80178e4:	4298      	cmp	r0, r3
 80178e6:	d200      	bcs.n	80178ea <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80178e8:	b913      	cbnz	r3, 80178f0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80178ea:	440a      	add	r2, r1
 80178ec:	b210      	sxth	r0, r2
 80178ee:	4770      	bx	lr
 80178f0:	ee07 0a90 	vmov	s15, r0
 80178f4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80178f8:	ee07 3a90 	vmov	s15, r3
 80178fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017900:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017904:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017908:	ee37 7a66 	vsub.f32	s14, s14, s13
 801790c:	ee07 2a90 	vmov	s15, r2
 8017910:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017914:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017918:	eee5 6a87 	vfma.f32	s13, s11, s14
 801791c:	ee07 1a90 	vmov	s15, r1
 8017920:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017924:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017928:	eee6 7a26 	vfma.f32	s15, s12, s13
 801792c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017934:	bfcc      	ite	gt
 8017936:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801793a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801793e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017942:	ee17 3a90 	vmov	r3, s15
 8017946:	b218      	sxth	r0, r3
 8017948:	4770      	bx	lr

0801794a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801794a:	4298      	cmp	r0, r3
 801794c:	d200      	bcs.n	8017950 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801794e:	b913      	cbnz	r3, 8017956 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017950:	440a      	add	r2, r1
 8017952:	b210      	sxth	r0, r2
 8017954:	4770      	bx	lr
 8017956:	ee07 2a90 	vmov	s15, r2
 801795a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801795e:	ee07 0a90 	vmov	s15, r0
 8017962:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017966:	ee67 7a27 	vmul.f32	s15, s14, s15
 801796a:	ee07 3a10 	vmov	s14, r3
 801796e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017972:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017976:	ee07 1a90 	vmov	s15, r1
 801797a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801797e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017982:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017986:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801798a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801798e:	bfcc      	ite	gt
 8017990:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017994:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017998:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801799c:	ee17 3a90 	vmov	r3, s15
 80179a0:	b218      	sxth	r0, r3
 80179a2:	4770      	bx	lr

080179a4 <_ZN8touchgfx12TextProviderC1Ev>:
 80179a4:	b538      	push	{r3, r4, r5, lr}
 80179a6:	2500      	movs	r5, #0
 80179a8:	2302      	movs	r3, #2
 80179aa:	4604      	mov	r4, r0
 80179ac:	e9c0 5500 	strd	r5, r5, [r0]
 80179b0:	7403      	strb	r3, [r0, #16]
 80179b2:	6145      	str	r5, [r0, #20]
 80179b4:	7605      	strb	r5, [r0, #24]
 80179b6:	83c5      	strh	r5, [r0, #30]
 80179b8:	8405      	strh	r5, [r0, #32]
 80179ba:	86c5      	strh	r5, [r0, #54]	; 0x36
 80179bc:	8705      	strh	r5, [r0, #56]	; 0x38
 80179be:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80179c0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80179c4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80179c8:	220e      	movs	r2, #14
 80179ca:	4629      	mov	r1, r5
 80179cc:	304c      	adds	r0, #76	; 0x4c
 80179ce:	f013 fb62 	bl	802b096 <memset>
 80179d2:	2301      	movs	r3, #1
 80179d4:	4620      	mov	r0, r4
 80179d6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80179da:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80179de:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80179e2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80179e6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80179ea:	f7f1 fb0f 	bl	800900c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80179ee:	4620      	mov	r0, r4
 80179f0:	bd38      	pop	{r3, r4, r5, pc}

080179f2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80179f2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80179f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80179f8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80179fa:	fab0 f080 	clz	r0, r0
 80179fe:	0940      	lsrs	r0, r0, #5
 8017a00:	4770      	bx	lr

08017a02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017a02:	b530      	push	{r4, r5, lr}
 8017a04:	2500      	movs	r5, #0
 8017a06:	2401      	movs	r4, #1
 8017a08:	6843      	ldr	r3, [r0, #4]
 8017a0a:	b913      	cbnz	r3, 8017a12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017a0c:	6803      	ldr	r3, [r0, #0]
 8017a0e:	b313      	cbz	r3, 8017a56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017a10:	6043      	str	r3, [r0, #4]
 8017a12:	7e03      	ldrb	r3, [r0, #24]
 8017a14:	b143      	cbz	r3, 8017a28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017a16:	6943      	ldr	r3, [r0, #20]
 8017a18:	b12b      	cbz	r3, 8017a26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017a1a:	881a      	ldrh	r2, [r3, #0]
 8017a1c:	b11a      	cbz	r2, 8017a26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017a1e:	1c9a      	adds	r2, r3, #2
 8017a20:	6142      	str	r2, [r0, #20]
 8017a22:	8818      	ldrh	r0, [r3, #0]
 8017a24:	bd30      	pop	{r4, r5, pc}
 8017a26:	7605      	strb	r5, [r0, #24]
 8017a28:	6843      	ldr	r3, [r0, #4]
 8017a2a:	8819      	ldrh	r1, [r3, #0]
 8017a2c:	b199      	cbz	r1, 8017a56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017a2e:	1c9a      	adds	r2, r3, #2
 8017a30:	2902      	cmp	r1, #2
 8017a32:	6042      	str	r2, [r0, #4]
 8017a34:	d1f5      	bne.n	8017a22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017a36:	7c03      	ldrb	r3, [r0, #16]
 8017a38:	2b01      	cmp	r3, #1
 8017a3a:	d8e5      	bhi.n	8017a08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017a3c:	1c5a      	adds	r2, r3, #1
 8017a3e:	3302      	adds	r3, #2
 8017a40:	7402      	strb	r2, [r0, #16]
 8017a42:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017a46:	6143      	str	r3, [r0, #20]
 8017a48:	2b00      	cmp	r3, #0
 8017a4a:	d0dd      	beq.n	8017a08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017a4c:	881b      	ldrh	r3, [r3, #0]
 8017a4e:	2b00      	cmp	r3, #0
 8017a50:	d0da      	beq.n	8017a08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017a52:	7604      	strb	r4, [r0, #24]
 8017a54:	e7d8      	b.n	8017a08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017a56:	2000      	movs	r0, #0
 8017a58:	e7e4      	b.n	8017a24 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017a5a:	b430      	push	{r4, r5}
 8017a5c:	6001      	str	r1, [r0, #0]
 8017a5e:	2100      	movs	r1, #0
 8017a60:	6041      	str	r1, [r0, #4]
 8017a62:	6815      	ldr	r5, [r2, #0]
 8017a64:	6085      	str	r5, [r0, #8]
 8017a66:	6852      	ldr	r2, [r2, #4]
 8017a68:	6443      	str	r3, [r0, #68]	; 0x44
 8017a6a:	9b02      	ldr	r3, [sp, #8]
 8017a6c:	60c2      	str	r2, [r0, #12]
 8017a6e:	7401      	strb	r1, [r0, #16]
 8017a70:	6141      	str	r1, [r0, #20]
 8017a72:	7601      	strb	r1, [r0, #24]
 8017a74:	8701      	strh	r1, [r0, #56]	; 0x38
 8017a76:	8401      	strh	r1, [r0, #32]
 8017a78:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8017a7c:	6483      	str	r3, [r0, #72]	; 0x48
 8017a7e:	bc30      	pop	{r4, r5}
 8017a80:	f7f1 bac4 	b.w	800900c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017a84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017a84:	b408      	push	{r3}
 8017a86:	b510      	push	{r4, lr}
 8017a88:	b085      	sub	sp, #20
 8017a8a:	ac07      	add	r4, sp, #28
 8017a8c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017a90:	9300      	str	r3, [sp, #0]
 8017a92:	4613      	mov	r3, r2
 8017a94:	4622      	mov	r2, r4
 8017a96:	9403      	str	r4, [sp, #12]
 8017a98:	f7ff ffdf 	bl	8017a5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017a9c:	b005      	add	sp, #20
 8017a9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017aa2:	b001      	add	sp, #4
 8017aa4:	4770      	bx	lr

08017aa6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017aa6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017aa8:	4605      	mov	r5, r0
 8017aaa:	4608      	mov	r0, r1
 8017aac:	b1e9      	cbz	r1, 8017aea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017aae:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017ab2:	460b      	mov	r3, r1
 8017ab4:	f101 0708 	add.w	r7, r1, #8
 8017ab8:	4622      	mov	r2, r4
 8017aba:	6818      	ldr	r0, [r3, #0]
 8017abc:	6859      	ldr	r1, [r3, #4]
 8017abe:	4626      	mov	r6, r4
 8017ac0:	c603      	stmia	r6!, {r0, r1}
 8017ac2:	3308      	adds	r3, #8
 8017ac4:	42bb      	cmp	r3, r7
 8017ac6:	4634      	mov	r4, r6
 8017ac8:	d1f7      	bne.n	8017aba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017aca:	6818      	ldr	r0, [r3, #0]
 8017acc:	6030      	str	r0, [r6, #0]
 8017ace:	889b      	ldrh	r3, [r3, #4]
 8017ad0:	80b3      	strh	r3, [r6, #4]
 8017ad2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017ad6:	015b      	lsls	r3, r3, #5
 8017ad8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017adc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017ae0:	430b      	orrs	r3, r1
 8017ae2:	425b      	negs	r3, r3
 8017ae4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017ae8:	4610      	mov	r0, r2
 8017aea:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017aec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017aec:	b538      	push	{r3, r4, r5, lr}
 8017aee:	460c      	mov	r4, r1
 8017af0:	6811      	ldr	r1, [r2, #0]
 8017af2:	4610      	mov	r0, r2
 8017af4:	68cd      	ldr	r5, [r1, #12]
 8017af6:	4619      	mov	r1, r3
 8017af8:	47a8      	blx	r5
 8017afa:	2800      	cmp	r0, #0
 8017afc:	bf08      	it	eq
 8017afe:	4620      	moveq	r0, r4
 8017b00:	bd38      	pop	{r3, r4, r5, pc}
	...

08017b04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017b06:	4604      	mov	r4, r0
 8017b08:	4615      	mov	r5, r2
 8017b0a:	4608      	mov	r0, r1
 8017b0c:	b93a      	cbnz	r2, 8017b1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017b0e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017b12:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017b16:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017b1a:	4628      	mov	r0, r5
 8017b1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017b1e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017b22:	8893      	ldrh	r3, [r2, #4]
 8017b24:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017b28:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017b2c:	79ee      	ldrb	r6, [r5, #7]
 8017b2e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017b32:	4316      	orrs	r6, r2
 8017b34:	19da      	adds	r2, r3, r7
 8017b36:	b291      	uxth	r1, r2
 8017b38:	291d      	cmp	r1, #29
 8017b3a:	b2b7      	uxth	r7, r6
 8017b3c:	d87a      	bhi.n	8017c34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017b3e:	2201      	movs	r2, #1
 8017b40:	408a      	lsls	r2, r1
 8017b42:	4975      	ldr	r1, [pc, #468]	; (8017d18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017b44:	420a      	tst	r2, r1
 8017b46:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017b4a:	d12d      	bne.n	8017ba8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017b4c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017b50:	d070      	beq.n	8017c34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017b52:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017b56:	462b      	mov	r3, r5
 8017b58:	f105 0e08 	add.w	lr, r5, #8
 8017b5c:	4615      	mov	r5, r2
 8017b5e:	6818      	ldr	r0, [r3, #0]
 8017b60:	6859      	ldr	r1, [r3, #4]
 8017b62:	4694      	mov	ip, r2
 8017b64:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017b68:	3308      	adds	r3, #8
 8017b6a:	4573      	cmp	r3, lr
 8017b6c:	4662      	mov	r2, ip
 8017b6e:	d1f6      	bne.n	8017b5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017b70:	6818      	ldr	r0, [r3, #0]
 8017b72:	f8cc 0000 	str.w	r0, [ip]
 8017b76:	889b      	ldrh	r3, [r3, #4]
 8017b78:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017b7c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017b80:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017b84:	b2b3      	uxth	r3, r6
 8017b86:	1aca      	subs	r2, r1, r3
 8017b88:	b292      	uxth	r2, r2
 8017b8a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017b8e:	10d2      	asrs	r2, r2, #3
 8017b90:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017b94:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017b98:	4302      	orrs	r2, r0
 8017b9a:	1bcf      	subs	r7, r1, r7
 8017b9c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017ba0:	1afb      	subs	r3, r7, r3
 8017ba2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017ba6:	e7b8      	b.n	8017b1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017ba8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017baa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017bae:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017bb0:	f640 6333 	movw	r3, #3635	; 0xe33
 8017bb4:	4299      	cmp	r1, r3
 8017bb6:	d110      	bne.n	8017bda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017bb8:	6803      	ldr	r3, [r0, #0]
 8017bba:	68db      	ldr	r3, [r3, #12]
 8017bbc:	4798      	blx	r3
 8017bbe:	7b41      	ldrb	r1, [r0, #13]
 8017bc0:	00cb      	lsls	r3, r1, #3
 8017bc2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017bc6:	7a03      	ldrb	r3, [r0, #8]
 8017bc8:	0648      	lsls	r0, r1, #25
 8017bca:	ea43 0302 	orr.w	r3, r3, r2
 8017bce:	bf44      	itt	mi
 8017bd0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017bd4:	b21b      	sxthmi	r3, r3
 8017bd6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017bda:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017bde:	443b      	add	r3, r7
 8017be0:	4433      	add	r3, r6
 8017be2:	b29b      	uxth	r3, r3
 8017be4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017be8:	462a      	mov	r2, r5
 8017bea:	f105 0c08 	add.w	ip, r5, #8
 8017bee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017bf2:	4635      	mov	r5, r6
 8017bf4:	6810      	ldr	r0, [r2, #0]
 8017bf6:	6851      	ldr	r1, [r2, #4]
 8017bf8:	4637      	mov	r7, r6
 8017bfa:	c703      	stmia	r7!, {r0, r1}
 8017bfc:	3208      	adds	r2, #8
 8017bfe:	4562      	cmp	r2, ip
 8017c00:	463e      	mov	r6, r7
 8017c02:	d1f7      	bne.n	8017bf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017c04:	6810      	ldr	r0, [r2, #0]
 8017c06:	6038      	str	r0, [r7, #0]
 8017c08:	8892      	ldrh	r2, [r2, #4]
 8017c0a:	80ba      	strh	r2, [r7, #4]
 8017c0c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017c10:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017c14:	10db      	asrs	r3, r3, #3
 8017c16:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017c1a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017c1e:	4313      	orrs	r3, r2
 8017c20:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017c24:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017c28:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017c2c:	1a9b      	subs	r3, r3, r2
 8017c2e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017c32:	e772      	b.n	8017b1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017c34:	f023 0204 	bic.w	r2, r3, #4
 8017c38:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017c3c:	428a      	cmp	r2, r1
 8017c3e:	d003      	beq.n	8017c48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017c40:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017c44:	4293      	cmp	r3, r2
 8017c46:	d120      	bne.n	8017c8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017c48:	3b01      	subs	r3, #1
 8017c4a:	4602      	mov	r2, r0
 8017c4c:	b29b      	uxth	r3, r3
 8017c4e:	4629      	mov	r1, r5
 8017c50:	4620      	mov	r0, r4
 8017c52:	f7ff ff4b 	bl	8017aec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017c56:	7b41      	ldrb	r1, [r0, #13]
 8017c58:	00cb      	lsls	r3, r1, #3
 8017c5a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017c5e:	7a03      	ldrb	r3, [r0, #8]
 8017c60:	0649      	lsls	r1, r1, #25
 8017c62:	ea43 0302 	orr.w	r3, r3, r2
 8017c66:	bf44      	itt	mi
 8017c68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017c6c:	b21b      	sxthmi	r3, r3
 8017c6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017c72:	7b6b      	ldrb	r3, [r5, #13]
 8017c74:	7aaa      	ldrb	r2, [r5, #10]
 8017c76:	005b      	lsls	r3, r3, #1
 8017c78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017c7c:	4313      	orrs	r3, r2
 8017c7e:	115a      	asrs	r2, r3, #5
 8017c80:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017c84:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017c88:	e036      	b.n	8017cf8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017c8a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017c8e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017c92:	7a2a      	ldrb	r2, [r5, #8]
 8017c94:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017c98:	ea42 0201 	orr.w	r2, r2, r1
 8017c9c:	bf1c      	itt	ne
 8017c9e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017ca2:	b212      	sxthne	r2, r2
 8017ca4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017ca8:	f640 6109 	movw	r1, #3593	; 0xe09
 8017cac:	f023 0210 	bic.w	r2, r3, #16
 8017cb0:	428a      	cmp	r2, r1
 8017cb2:	d003      	beq.n	8017cbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017cb4:	f640 6213 	movw	r2, #3603	; 0xe13
 8017cb8:	4293      	cmp	r3, r2
 8017cba:	d12a      	bne.n	8017d12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017cbc:	7b6e      	ldrb	r6, [r5, #13]
 8017cbe:	0076      	lsls	r6, r6, #1
 8017cc0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017cc4:	7aae      	ldrb	r6, [r5, #10]
 8017cc6:	4316      	orrs	r6, r2
 8017cc8:	f640 6213 	movw	r2, #3603	; 0xe13
 8017ccc:	4293      	cmp	r3, r2
 8017cce:	bf18      	it	ne
 8017cd0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017cd4:	4602      	mov	r2, r0
 8017cd6:	bf14      	ite	ne
 8017cd8:	b29b      	uxthne	r3, r3
 8017cda:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017cde:	4629      	mov	r1, r5
 8017ce0:	4620      	mov	r0, r4
 8017ce2:	f7ff ff03 	bl	8017aec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017ce6:	7b43      	ldrb	r3, [r0, #13]
 8017ce8:	7a82      	ldrb	r2, [r0, #10]
 8017cea:	005b      	lsls	r3, r3, #1
 8017cec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017cf0:	4313      	orrs	r3, r2
 8017cf2:	1af6      	subs	r6, r6, r3
 8017cf4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017cf8:	7b69      	ldrb	r1, [r5, #13]
 8017cfa:	00cb      	lsls	r3, r1, #3
 8017cfc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d00:	7a2b      	ldrb	r3, [r5, #8]
 8017d02:	4313      	orrs	r3, r2
 8017d04:	064a      	lsls	r2, r1, #25
 8017d06:	bf44      	itt	mi
 8017d08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d0c:	b21b      	sxthmi	r3, r3
 8017d0e:	1bdb      	subs	r3, r3, r7
 8017d10:	e747      	b.n	8017ba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017d12:	2300      	movs	r3, #0
 8017d14:	e7b6      	b.n	8017c84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017d16:	bf00      	nop
 8017d18:	3fc00079 	.word	0x3fc00079

08017d1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017d1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017d20:	4604      	mov	r4, r0
 8017d22:	b942      	cbnz	r2, 8017d36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017d24:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017d28:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017d2c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017d30:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017d34:	e047      	b.n	8017dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017d36:	7b51      	ldrb	r1, [r2, #13]
 8017d38:	8893      	ldrh	r3, [r2, #4]
 8017d3a:	010d      	lsls	r5, r1, #4
 8017d3c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017d40:	79d5      	ldrb	r5, [r2, #7]
 8017d42:	4305      	orrs	r5, r0
 8017d44:	2d04      	cmp	r5, #4
 8017d46:	bfcc      	ite	gt
 8017d48:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017d4c:	f04f 0e01 	movle.w	lr, #1
 8017d50:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017d54:	f200 80ab 	bhi.w	8017eae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017d58:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017d5c:	4283      	cmp	r3, r0
 8017d5e:	d216      	bcs.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d60:	f240 605b 	movw	r0, #1627	; 0x65b
 8017d64:	4283      	cmp	r3, r0
 8017d66:	d859      	bhi.n	8017e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017d68:	f240 6057 	movw	r0, #1623	; 0x657
 8017d6c:	4283      	cmp	r3, r0
 8017d6e:	d20e      	bcs.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d70:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017d74:	d24a      	bcs.n	8017e0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017d76:	f240 604e 	movw	r0, #1614	; 0x64e
 8017d7a:	4283      	cmp	r3, r0
 8017d7c:	d207      	bcs.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d7e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017d82:	4283      	cmp	r3, r0
 8017d84:	d02a      	beq.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d86:	d821      	bhi.n	8017dcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017d88:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017d8c:	d35b      	bcc.n	8017e46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017d8e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017d92:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017d96:	f040 80d0 	bne.w	8017f3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017d9a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017d9e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017da2:	f040 80ca 	bne.w	8017f3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017da6:	00cb      	lsls	r3, r1, #3
 8017da8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017dac:	7a13      	ldrb	r3, [r2, #8]
 8017dae:	0649      	lsls	r1, r1, #25
 8017db0:	ea43 0300 	orr.w	r3, r3, r0
 8017db4:	bf44      	itt	mi
 8017db6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017dba:	b21b      	sxthmi	r3, r3
 8017dbc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017dc0:	1b5d      	subs	r5, r3, r5
 8017dc2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017dc6:	4610      	mov	r0, r2
 8017dc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017dcc:	f240 604b 	movw	r0, #1611	; 0x64b
 8017dd0:	4283      	cmp	r3, r0
 8017dd2:	d338      	bcc.n	8017e46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017dd4:	f240 604c 	movw	r0, #1612	; 0x64c
 8017dd8:	4283      	cmp	r3, r0
 8017dda:	d9d8      	bls.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ddc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017de0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017de4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017de8:	f040 80f2 	bne.w	8017fd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017dec:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017df0:	f040 80ee 	bne.w	8017fd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017df4:	00cb      	lsls	r3, r1, #3
 8017df6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017dfa:	7a13      	ldrb	r3, [r2, #8]
 8017dfc:	064e      	lsls	r6, r1, #25
 8017dfe:	ea43 0300 	orr.w	r3, r3, r0
 8017e02:	bf44      	itt	mi
 8017e04:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e08:	b21b      	sxthmi	r3, r3
 8017e0a:	e7d9      	b.n	8017dc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017e0c:	f240 6054 	movw	r0, #1620	; 0x654
 8017e10:	4283      	cmp	r3, r0
 8017e12:	d8e3      	bhi.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e14:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017e18:	d9e0      	bls.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e1a:	e7b8      	b.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e1c:	f240 6074 	movw	r0, #1652	; 0x674
 8017e20:	4283      	cmp	r3, r0
 8017e22:	d0b4      	beq.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e24:	d82d      	bhi.n	8017e82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017e26:	f240 605e 	movw	r0, #1630	; 0x65e
 8017e2a:	4283      	cmp	r3, r0
 8017e2c:	d804      	bhi.n	8017e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017e2e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017e32:	4283      	cmp	r3, r0
 8017e34:	d3d2      	bcc.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e36:	e7aa      	b.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e38:	f240 605f 	movw	r0, #1631	; 0x65f
 8017e3c:	4283      	cmp	r3, r0
 8017e3e:	d0cd      	beq.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e40:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017e44:	d0a3      	beq.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e46:	00cb      	lsls	r3, r1, #3
 8017e48:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017e4c:	7a13      	ldrb	r3, [r2, #8]
 8017e4e:	0649      	lsls	r1, r1, #25
 8017e50:	ea43 0300 	orr.w	r3, r3, r0
 8017e54:	bf44      	itt	mi
 8017e56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e5a:	b21b      	sxthmi	r3, r3
 8017e5c:	1b5d      	subs	r5, r3, r5
 8017e5e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017e62:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017e66:	7b53      	ldrb	r3, [r2, #13]
 8017e68:	015b      	lsls	r3, r3, #5
 8017e6a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017e6e:	7993      	ldrb	r3, [r2, #6]
 8017e70:	430b      	orrs	r3, r1
 8017e72:	005b      	lsls	r3, r3, #1
 8017e74:	2105      	movs	r1, #5
 8017e76:	fb93 f3f1 	sdiv	r3, r3, r1
 8017e7a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017e7e:	440b      	add	r3, r1
 8017e80:	e756      	b.n	8017d30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017e82:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017e86:	4283      	cmp	r3, r0
 8017e88:	d809      	bhi.n	8017e9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017e8a:	f240 60df 	movw	r0, #1759	; 0x6df
 8017e8e:	4283      	cmp	r3, r0
 8017e90:	f4bf af7d 	bcs.w	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e94:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017e98:	2b05      	cmp	r3, #5
 8017e9a:	d8d4      	bhi.n	8017e46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017e9c:	e777      	b.n	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e9e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017ea2:	4283      	cmp	r3, r0
 8017ea4:	d09a      	beq.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ea6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017eaa:	4283      	cmp	r3, r0
 8017eac:	e7ca      	b.n	8017e44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017eae:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017eb2:	d22b      	bcs.n	8017f0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017eb4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017eb8:	4283      	cmp	r3, r0
 8017eba:	d28f      	bcs.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ebc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017ec0:	4283      	cmp	r3, r0
 8017ec2:	d816      	bhi.n	8017ef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017ec4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017ec8:	4283      	cmp	r3, r0
 8017eca:	f4bf af60 	bcs.w	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ece:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017ed2:	4283      	cmp	r3, r0
 8017ed4:	d80a      	bhi.n	8017eec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017ed6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017eda:	4283      	cmp	r3, r0
 8017edc:	f4bf af57 	bcs.w	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ee0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017ee4:	4283      	cmp	r3, r0
 8017ee6:	f43f af79 	beq.w	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017eea:	e7ac      	b.n	8017e46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017eec:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017ef0:	e7f8      	b.n	8017ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017ef2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017ef6:	4283      	cmp	r3, r0
 8017ef8:	d802      	bhi.n	8017f00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017efa:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017efe:	e798      	b.n	8017e32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017f00:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017f04:	4283      	cmp	r3, r0
 8017f06:	f47f af42 	bne.w	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f0a:	e767      	b.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f0c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017f10:	4283      	cmp	r3, r0
 8017f12:	f43f af63 	beq.w	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f16:	d802      	bhi.n	8017f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017f18:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017f1c:	e7f2      	b.n	8017f04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017f1e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017f22:	4283      	cmp	r3, r0
 8017f24:	d805      	bhi.n	8017f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017f26:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017f2a:	4283      	cmp	r3, r0
 8017f2c:	f4ff af2f 	bcc.w	8017d8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f30:	e754      	b.n	8017ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f32:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017f36:	4283      	cmp	r3, r0
 8017f38:	e7af      	b.n	8017e9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017f3a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017f3e:	4617      	mov	r7, r2
 8017f40:	f102 0808 	add.w	r8, r2, #8
 8017f44:	4666      	mov	r6, ip
 8017f46:	6838      	ldr	r0, [r7, #0]
 8017f48:	6879      	ldr	r1, [r7, #4]
 8017f4a:	46e6      	mov	lr, ip
 8017f4c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017f50:	3708      	adds	r7, #8
 8017f52:	4547      	cmp	r7, r8
 8017f54:	46f4      	mov	ip, lr
 8017f56:	d1f6      	bne.n	8017f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017f58:	6838      	ldr	r0, [r7, #0]
 8017f5a:	f8ce 0000 	str.w	r0, [lr]
 8017f5e:	88b9      	ldrh	r1, [r7, #4]
 8017f60:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017f64:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017f68:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017f6c:	d009      	beq.n	8017f82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017f6e:	7b51      	ldrb	r1, [r2, #13]
 8017f70:	7992      	ldrb	r2, [r2, #6]
 8017f72:	0149      	lsls	r1, r1, #5
 8017f74:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017f78:	4311      	orrs	r1, r2
 8017f7a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017f7e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017f82:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017f86:	b2ad      	uxth	r5, r5
 8017f88:	d00d      	beq.n	8017fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8017f8a:	442b      	add	r3, r5
 8017f8c:	b29b      	uxth	r3, r3
 8017f8e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017f92:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017f96:	10db      	asrs	r3, r3, #3
 8017f98:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017f9c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017fa0:	4313      	orrs	r3, r2
 8017fa2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017fa6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017faa:	00cb      	lsls	r3, r1, #3
 8017fac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017fb0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017fb4:	064f      	lsls	r7, r1, #25
 8017fb6:	ea43 0302 	orr.w	r3, r3, r2
 8017fba:	bf44      	itt	mi
 8017fbc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017fc0:	b21b      	sxthmi	r3, r3
 8017fc2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017fc6:	1b5b      	subs	r3, r3, r5
 8017fc8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017fcc:	4632      	mov	r2, r6
 8017fce:	e6fa      	b.n	8017dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017fd0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017fd4:	4617      	mov	r7, r2
 8017fd6:	f102 0908 	add.w	r9, r2, #8
 8017fda:	4666      	mov	r6, ip
 8017fdc:	6838      	ldr	r0, [r7, #0]
 8017fde:	6879      	ldr	r1, [r7, #4]
 8017fe0:	46e0      	mov	r8, ip
 8017fe2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8017fe6:	3708      	adds	r7, #8
 8017fe8:	454f      	cmp	r7, r9
 8017fea:	46c4      	mov	ip, r8
 8017fec:	d1f6      	bne.n	8017fdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8017fee:	6838      	ldr	r0, [r7, #0]
 8017ff0:	f8c8 0000 	str.w	r0, [r8]
 8017ff4:	88b9      	ldrh	r1, [r7, #4]
 8017ff6:	f8a8 1004 	strh.w	r1, [r8, #4]
 8017ffa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017ffe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018002:	d009      	beq.n	8018018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018004:	7b51      	ldrb	r1, [r2, #13]
 8018006:	7992      	ldrb	r2, [r2, #6]
 8018008:	0149      	lsls	r1, r1, #5
 801800a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801800e:	4311      	orrs	r1, r2
 8018010:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018014:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018018:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801801c:	d00e      	beq.n	801803c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801801e:	eba3 030e 	sub.w	r3, r3, lr
 8018022:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018026:	b29b      	uxth	r3, r3
 8018028:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801802c:	10db      	asrs	r3, r3, #3
 801802e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018032:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018036:	4313      	orrs	r3, r2
 8018038:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801803c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018040:	00cb      	lsls	r3, r1, #3
 8018042:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018046:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801804a:	0648      	lsls	r0, r1, #25
 801804c:	ea43 0302 	orr.w	r3, r3, r2
 8018050:	bf44      	itt	mi
 8018052:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018056:	b21b      	sxthmi	r3, r3
 8018058:	1b5d      	subs	r5, r3, r5
 801805a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801805e:	e7b5      	b.n	8017fcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018064:	461e      	mov	r6, r3
 8018066:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018068:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801806c:	4604      	mov	r4, r0
 801806e:	4617      	mov	r7, r2
 8018070:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018074:	f7f0 ff88 	bl	8008f88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018078:	4605      	mov	r5, r0
 801807a:	b918      	cbnz	r0, 8018084 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801807c:	6030      	str	r0, [r6, #0]
 801807e:	4628      	mov	r0, r5
 8018080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018084:	683b      	ldr	r3, [r7, #0]
 8018086:	4601      	mov	r1, r0
 8018088:	68db      	ldr	r3, [r3, #12]
 801808a:	4638      	mov	r0, r7
 801808c:	4798      	blx	r3
 801808e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018092:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018096:	4602      	mov	r2, r0
 8018098:	6030      	str	r0, [r6, #0]
 801809a:	d213      	bcs.n	80180c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801809c:	4643      	mov	r3, r8
 801809e:	4639      	mov	r1, r7
 80180a0:	4620      	mov	r0, r4
 80180a2:	f7ff fe3b 	bl	8017d1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80180a6:	6030      	str	r0, [r6, #0]
 80180a8:	6833      	ldr	r3, [r6, #0]
 80180aa:	b143      	cbz	r3, 80180be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80180ac:	7b5a      	ldrb	r2, [r3, #13]
 80180ae:	7a9b      	ldrb	r3, [r3, #10]
 80180b0:	0052      	lsls	r2, r2, #1
 80180b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80180b6:	4313      	orrs	r3, r2
 80180b8:	bf0c      	ite	eq
 80180ba:	2301      	moveq	r3, #1
 80180bc:	2300      	movne	r3, #0
 80180be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80180c2:	e7dc      	b.n	801807e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80180c4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80180c8:	b29b      	uxth	r3, r3
 80180ca:	2b7f      	cmp	r3, #127	; 0x7f
 80180cc:	d804      	bhi.n	80180d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80180ce:	4639      	mov	r1, r7
 80180d0:	4620      	mov	r0, r4
 80180d2:	f7ff fd17 	bl	8017b04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80180d6:	e7e6      	b.n	80180a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80180d8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80180dc:	2b00      	cmp	r3, #0
 80180de:	d0e3      	beq.n	80180a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80180e0:	f640 1302 	movw	r3, #2306	; 0x902
 80180e4:	429d      	cmp	r5, r3
 80180e6:	d1df      	bne.n	80180a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80180e8:	4601      	mov	r1, r0
 80180ea:	4620      	mov	r0, r4
 80180ec:	f7ff fcdb 	bl	8017aa6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80180f0:	e7d9      	b.n	80180a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080180f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80180f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80180f6:	461e      	mov	r6, r3
 80180f8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80180fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80180fe:	4604      	mov	r4, r0
 8018100:	4617      	mov	r7, r2
 8018102:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018106:	f7f0 ff3f 	bl	8008f88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801810a:	4605      	mov	r5, r0
 801810c:	b918      	cbnz	r0, 8018116 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801810e:	6030      	str	r0, [r6, #0]
 8018110:	4628      	mov	r0, r5
 8018112:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018116:	683b      	ldr	r3, [r7, #0]
 8018118:	4601      	mov	r1, r0
 801811a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801811e:	4638      	mov	r0, r7
 8018120:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018124:	47c8      	blx	r9
 8018126:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801812a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801812e:	4602      	mov	r2, r0
 8018130:	6030      	str	r0, [r6, #0]
 8018132:	d213      	bcs.n	801815c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018134:	4643      	mov	r3, r8
 8018136:	4639      	mov	r1, r7
 8018138:	4620      	mov	r0, r4
 801813a:	f7ff fdef 	bl	8017d1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801813e:	6030      	str	r0, [r6, #0]
 8018140:	6833      	ldr	r3, [r6, #0]
 8018142:	b143      	cbz	r3, 8018156 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018144:	7b5a      	ldrb	r2, [r3, #13]
 8018146:	7a9b      	ldrb	r3, [r3, #10]
 8018148:	0052      	lsls	r2, r2, #1
 801814a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801814e:	4313      	orrs	r3, r2
 8018150:	bf0c      	ite	eq
 8018152:	2301      	moveq	r3, #1
 8018154:	2300      	movne	r3, #0
 8018156:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801815a:	e7d9      	b.n	8018110 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801815c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018160:	b29b      	uxth	r3, r3
 8018162:	2b7f      	cmp	r3, #127	; 0x7f
 8018164:	d804      	bhi.n	8018170 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018166:	4639      	mov	r1, r7
 8018168:	4620      	mov	r0, r4
 801816a:	f7ff fccb 	bl	8017b04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801816e:	e7e6      	b.n	801813e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018170:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018174:	2b00      	cmp	r3, #0
 8018176:	d0e3      	beq.n	8018140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018178:	f640 1302 	movw	r3, #2306	; 0x902
 801817c:	429d      	cmp	r5, r3
 801817e:	d1df      	bne.n	8018140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018180:	4601      	mov	r1, r0
 8018182:	4620      	mov	r0, r4
 8018184:	f7ff fc8f 	bl	8017aa6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018188:	e7d9      	b.n	801813e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801818a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801818a:	b510      	push	{r4, lr}
 801818c:	4604      	mov	r4, r0
 801818e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018192:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018194:	b1f1      	cbz	r1, 80181d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018196:	2b0a      	cmp	r3, #10
 8018198:	d02f      	beq.n	80181fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801819a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801819c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80181a0:	3901      	subs	r1, #1
 80181a2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80181a4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80181a8:	1c51      	adds	r1, r2, #1
 80181aa:	b289      	uxth	r1, r1
 80181ac:	2901      	cmp	r1, #1
 80181ae:	bf84      	itt	hi
 80181b0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80181b4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80181b6:	f103 0201 	add.w	r2, r3, #1
 80181ba:	8722      	strh	r2, [r4, #56]	; 0x38
 80181bc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80181be:	bf98      	it	ls
 80181c0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80181c2:	4413      	add	r3, r2
 80181c4:	b29b      	uxth	r3, r3
 80181c6:	2b09      	cmp	r3, #9
 80181c8:	bf88      	it	hi
 80181ca:	3b0a      	subhi	r3, #10
 80181cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80181d0:	8458      	strh	r0, [r3, #34]	; 0x22
 80181d2:	e7dc      	b.n	801818e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80181d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80181d6:	2b0a      	cmp	r3, #10
 80181d8:	d00f      	beq.n	80181fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80181da:	4620      	mov	r0, r4
 80181dc:	f7ff fc11 	bl	8017a02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80181e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80181e2:	1c5a      	adds	r2, r3, #1
 80181e4:	8722      	strh	r2, [r4, #56]	; 0x38
 80181e6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80181e8:	4413      	add	r3, r2
 80181ea:	b29b      	uxth	r3, r3
 80181ec:	2b09      	cmp	r3, #9
 80181ee:	bf88      	it	hi
 80181f0:	3b0a      	subhi	r3, #10
 80181f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80181f6:	8458      	strh	r0, [r3, #34]	; 0x22
 80181f8:	e7ec      	b.n	80181d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80181fa:	bd10      	pop	{r4, pc}

080181fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80181fc:	b538      	push	{r3, r4, r5, lr}
 80181fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018200:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018204:	4604      	mov	r4, r0
 8018206:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018208:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801820a:	3a01      	subs	r2, #1
 801820c:	8702      	strh	r2, [r0, #56]	; 0x38
 801820e:	1c5a      	adds	r2, r3, #1
 8018210:	b292      	uxth	r2, r2
 8018212:	2a09      	cmp	r2, #9
 8018214:	bf86      	itte	hi
 8018216:	3b09      	subhi	r3, #9
 8018218:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801821a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801821c:	f7ff ffb5 	bl	801818a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018220:	8c23      	ldrh	r3, [r4, #32]
 8018222:	2b01      	cmp	r3, #1
 8018224:	bf9c      	itt	ls
 8018226:	3301      	addls	r3, #1
 8018228:	8423      	strhls	r3, [r4, #32]
 801822a:	8be3      	ldrh	r3, [r4, #30]
 801822c:	b90b      	cbnz	r3, 8018232 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801822e:	2302      	movs	r3, #2
 8018230:	83e3      	strh	r3, [r4, #30]
 8018232:	8be3      	ldrh	r3, [r4, #30]
 8018234:	3b01      	subs	r3, #1
 8018236:	b29b      	uxth	r3, r3
 8018238:	83e3      	strh	r3, [r4, #30]
 801823a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801823e:	4628      	mov	r0, r5
 8018240:	8365      	strh	r5, [r4, #26]
 8018242:	bd38      	pop	{r3, r4, r5, pc}

08018244 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018244:	428a      	cmp	r2, r1
 8018246:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801824a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801824c:	d931      	bls.n	80182b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801824e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018250:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018254:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018258:	19ee      	adds	r6, r5, r7
 801825a:	1a54      	subs	r4, r2, r1
 801825c:	3e01      	subs	r6, #1
 801825e:	fa1f fe84 	uxth.w	lr, r4
 8018262:	b2b4      	uxth	r4, r6
 8018264:	eba4 090e 	sub.w	r9, r4, lr
 8018268:	fa1f f989 	uxth.w	r9, r9
 801826c:	2c09      	cmp	r4, #9
 801826e:	4626      	mov	r6, r4
 8018270:	bf88      	it	hi
 8018272:	f1a4 060a 	subhi.w	r6, r4, #10
 8018276:	f1bc 0f00 	cmp.w	ip, #0
 801827a:	bf08      	it	eq
 801827c:	f04f 0c02 	moveq.w	ip, #2
 8018280:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018284:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018288:	fa1f fc8c 	uxth.w	ip, ip
 801828c:	3c01      	subs	r4, #1
 801828e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018292:	b2a4      	uxth	r4, r4
 8018294:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018298:	454c      	cmp	r4, r9
 801829a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801829e:	d1e5      	bne.n	801826c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80182a0:	eba5 050e 	sub.w	r5, r5, lr
 80182a4:	eb0e 0408 	add.w	r4, lr, r8
 80182a8:	8705      	strh	r5, [r0, #56]	; 0x38
 80182aa:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80182ae:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80182b2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80182b4:	1a64      	subs	r4, r4, r1
 80182b6:	4439      	add	r1, r7
 80182b8:	b289      	uxth	r1, r1
 80182ba:	2909      	cmp	r1, #9
 80182bc:	bf88      	it	hi
 80182be:	390a      	subhi	r1, #10
 80182c0:	8704      	strh	r4, [r0, #56]	; 0x38
 80182c2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80182c4:	250a      	movs	r5, #10
 80182c6:	b18a      	cbz	r2, 80182ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80182c8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80182ca:	3a01      	subs	r2, #1
 80182cc:	b292      	uxth	r2, r2
 80182ce:	3101      	adds	r1, #1
 80182d0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80182d4:	8701      	strh	r1, [r0, #56]	; 0x38
 80182d6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80182d8:	b901      	cbnz	r1, 80182dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80182da:	86c5      	strh	r5, [r0, #54]	; 0x36
 80182dc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80182de:	3901      	subs	r1, #1
 80182e0:	b289      	uxth	r1, r1
 80182e2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80182e4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80182e8:	844c      	strh	r4, [r1, #34]	; 0x22
 80182ea:	e7ec      	b.n	80182c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80182ec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80182f0:	f7ff bf4b 	b.w	801818a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080182f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80182f4:	b570      	push	{r4, r5, r6, lr}
 80182f6:	2500      	movs	r5, #0
 80182f8:	4295      	cmp	r5, r2
 80182fa:	d011      	beq.n	8018320 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80182fc:	8bc4      	ldrh	r4, [r0, #30]
 80182fe:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018302:	4414      	add	r4, r2
 8018304:	3c01      	subs	r4, #1
 8018306:	1b64      	subs	r4, r4, r5
 8018308:	b2a4      	uxth	r4, r4
 801830a:	2c01      	cmp	r4, #1
 801830c:	bf88      	it	hi
 801830e:	3c02      	subhi	r4, #2
 8018310:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018314:	8b64      	ldrh	r4, [r4, #26]
 8018316:	42b4      	cmp	r4, r6
 8018318:	d117      	bne.n	801834a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801831a:	3501      	adds	r5, #1
 801831c:	b2ad      	uxth	r5, r5
 801831e:	e7eb      	b.n	80182f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018320:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018324:	2400      	movs	r4, #0
 8018326:	4413      	add	r3, r2
 8018328:	b2a2      	uxth	r2, r4
 801832a:	429a      	cmp	r2, r3
 801832c:	da0f      	bge.n	801834e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801832e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018330:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018334:	4432      	add	r2, r6
 8018336:	b292      	uxth	r2, r2
 8018338:	2a09      	cmp	r2, #9
 801833a:	bf88      	it	hi
 801833c:	3a0a      	subhi	r2, #10
 801833e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018342:	3401      	adds	r4, #1
 8018344:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018346:	42aa      	cmp	r2, r5
 8018348:	d0ee      	beq.n	8018328 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801834a:	2000      	movs	r0, #0
 801834c:	bd70      	pop	{r4, r5, r6, pc}
 801834e:	2001      	movs	r0, #1
 8018350:	e7fc      	b.n	801834c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018352 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018352:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018356:	4605      	mov	r5, r0
 8018358:	4616      	mov	r6, r2
 801835a:	1c8c      	adds	r4, r1, #2
 801835c:	8809      	ldrh	r1, [r1, #0]
 801835e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018362:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018366:	42b3      	cmp	r3, r6
 8018368:	d124      	bne.n	80183b4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801836a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801836e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018372:	f001 070f 	and.w	r7, r1, #15
 8018376:	f8cd 8000 	str.w	r8, [sp]
 801837a:	464b      	mov	r3, r9
 801837c:	4652      	mov	r2, sl
 801837e:	4621      	mov	r1, r4
 8018380:	4628      	mov	r0, r5
 8018382:	f7ff ffb7 	bl	80182f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018386:	4683      	mov	fp, r0
 8018388:	b168      	cbz	r0, 80183a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801838a:	eb0a 0109 	add.w	r1, sl, r9
 801838e:	4441      	add	r1, r8
 8018390:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018394:	463a      	mov	r2, r7
 8018396:	4649      	mov	r1, r9
 8018398:	4628      	mov	r0, r5
 801839a:	f7ff ff53 	bl	8018244 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801839e:	4658      	mov	r0, fp
 80183a0:	b003      	add	sp, #12
 80183a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183a6:	eb07 010a 	add.w	r1, r7, sl
 80183aa:	4449      	add	r1, r9
 80183ac:	4441      	add	r1, r8
 80183ae:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80183b2:	e7d2      	b.n	801835a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80183b4:	f04f 0b00 	mov.w	fp, #0
 80183b8:	e7f1      	b.n	801839e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080183ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80183ba:	b570      	push	{r4, r5, r6, lr}
 80183bc:	8810      	ldrh	r0, [r2, #0]
 80183be:	4298      	cmp	r0, r3
 80183c0:	d817      	bhi.n	80183f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80183c2:	1e48      	subs	r0, r1, #1
 80183c4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80183c8:	4298      	cmp	r0, r3
 80183ca:	d312      	bcc.n	80183f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80183cc:	2400      	movs	r4, #0
 80183ce:	428c      	cmp	r4, r1
 80183d0:	d20f      	bcs.n	80183f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80183d2:	1860      	adds	r0, r4, r1
 80183d4:	1040      	asrs	r0, r0, #1
 80183d6:	0085      	lsls	r5, r0, #2
 80183d8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80183dc:	42b3      	cmp	r3, r6
 80183de:	d902      	bls.n	80183e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80183e0:	3001      	adds	r0, #1
 80183e2:	b284      	uxth	r4, r0
 80183e4:	e7f3      	b.n	80183ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80183e6:	d201      	bcs.n	80183ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80183e8:	b281      	uxth	r1, r0
 80183ea:	e7f0      	b.n	80183ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80183ec:	442a      	add	r2, r5
 80183ee:	8850      	ldrh	r0, [r2, #2]
 80183f0:	bd70      	pop	{r4, r5, r6, pc}
 80183f2:	2000      	movs	r0, #0
 80183f4:	e7fc      	b.n	80183f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080183f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80183f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80183fa:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80183fc:	886f      	ldrh	r7, [r5, #2]
 80183fe:	4604      	mov	r4, r0
 8018400:	087f      	lsrs	r7, r7, #1
 8018402:	260b      	movs	r6, #11
 8018404:	3e01      	subs	r6, #1
 8018406:	d013      	beq.n	8018430 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018408:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801840a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801840e:	462a      	mov	r2, r5
 8018410:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018414:	4639      	mov	r1, r7
 8018416:	4643      	mov	r3, r8
 8018418:	4620      	mov	r0, r4
 801841a:	f7ff ffce 	bl	80183ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801841e:	b138      	cbz	r0, 8018430 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018420:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018424:	4642      	mov	r2, r8
 8018426:	4620      	mov	r0, r4
 8018428:	f7ff ff93 	bl	8018352 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801842c:	2800      	cmp	r0, #0
 801842e:	d1e9      	bne.n	8018404 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018430:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018434 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018434:	b570      	push	{r4, r5, r6, lr}
 8018436:	694a      	ldr	r2, [r1, #20]
 8018438:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801843a:	684b      	ldr	r3, [r1, #4]
 801843c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801843e:	1b54      	subs	r4, r2, r5
 8018440:	f000 8106 	beq.w	8018650 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018444:	1b9b      	subs	r3, r3, r6
 8018446:	d003      	beq.n	8018450 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018448:	4363      	muls	r3, r4
 801844a:	2210      	movs	r2, #16
 801844c:	fb93 f3f2 	sdiv	r3, r3, r2
 8018450:	680c      	ldr	r4, [r1, #0]
 8018452:	698a      	ldr	r2, [r1, #24]
 8018454:	1b65      	subs	r5, r4, r5
 8018456:	f000 80fd 	beq.w	8018654 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801845a:	1b92      	subs	r2, r2, r6
 801845c:	d003      	beq.n	8018466 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801845e:	436a      	muls	r2, r5
 8018460:	2410      	movs	r4, #16
 8018462:	fb92 f2f4 	sdiv	r2, r2, r4
 8018466:	1a9b      	subs	r3, r3, r2
 8018468:	ee07 3a90 	vmov	s15, r3
 801846c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018690 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018470:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018474:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018478:	ee67 7a84 	vmul.f32	s15, s15, s8
 801847c:	460a      	mov	r2, r1
 801847e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018482:	4603      	mov	r3, r0
 8018484:	f100 040c 	add.w	r4, r0, #12
 8018488:	eeb1 6a43 	vneg.f32	s12, s6
 801848c:	edd2 7a02 	vldr	s15, [r2, #8]
 8018490:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018494:	3214      	adds	r2, #20
 8018496:	ece3 6a01 	vstmia	r3!, {s13}
 801849a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801849e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80184a2:	429c      	cmp	r4, r3
 80184a4:	edc3 7a02 	vstr	s15, [r3, #8]
 80184a8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80184ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80184b0:	edc3 7a05 	vstr	s15, [r3, #20]
 80184b4:	d1ea      	bne.n	801848c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80184b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80184b8:	698b      	ldr	r3, [r1, #24]
 80184ba:	edd0 4a02 	vldr	s9, [r0, #8]
 80184be:	edd0 3a00 	vldr	s7, [r0]
 80184c2:	edd0 6a01 	vldr	s13, [r0, #4]
 80184c6:	ed90 5a05 	vldr	s10, [r0, #20]
 80184ca:	ed90 2a03 	vldr	s4, [r0, #12]
 80184ce:	edd0 5a04 	vldr	s11, [r0, #16]
 80184d2:	ed90 1a07 	vldr	s2, [r0, #28]
 80184d6:	edd0 2a06 	vldr	s5, [r0, #24]
 80184da:	1a9b      	subs	r3, r3, r2
 80184dc:	ee07 3a90 	vmov	s15, r3
 80184e0:	684b      	ldr	r3, [r1, #4]
 80184e2:	1a9b      	subs	r3, r3, r2
 80184e4:	ee07 3a10 	vmov	s14, r3
 80184e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80184ec:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80184f0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80184f4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80184f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80184fc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018500:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018504:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018508:	eee6 7a87 	vfma.f32	s15, s13, s14
 801850c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018510:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018514:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018518:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801851a:	694a      	ldr	r2, [r1, #20]
 801851c:	1b13      	subs	r3, r2, r4
 801851e:	ee07 3a10 	vmov	s14, r3
 8018522:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018526:	680b      	ldr	r3, [r1, #0]
 8018528:	ee27 7a04 	vmul.f32	s14, s14, s8
 801852c:	1b1b      	subs	r3, r3, r4
 801852e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018532:	ee07 3a10 	vmov	s14, r3
 8018536:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801853a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801853e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018542:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018546:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801854a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801854c:	698b      	ldr	r3, [r1, #24]
 801854e:	1a9b      	subs	r3, r3, r2
 8018550:	ee06 3a90 	vmov	s13, r3
 8018554:	684b      	ldr	r3, [r1, #4]
 8018556:	1a9b      	subs	r3, r3, r2
 8018558:	ee07 3a10 	vmov	s14, r3
 801855c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018560:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018564:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018568:	ee27 7a04 	vmul.f32	s14, s14, s8
 801856c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018570:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018574:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018578:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801857c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801857e:	694a      	ldr	r2, [r1, #20]
 8018580:	1b13      	subs	r3, r2, r4
 8018582:	ee07 3a10 	vmov	s14, r3
 8018586:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801858a:	680b      	ldr	r3, [r1, #0]
 801858c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018590:	1b1b      	subs	r3, r3, r4
 8018592:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018596:	ee07 3a10 	vmov	s14, r3
 801859a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801859e:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185a2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80185a6:	edd0 5a08 	vldr	s11, [r0, #32]
 80185aa:	ee25 5a06 	vmul.f32	s10, s10, s12
 80185ae:	ee31 1a65 	vsub.f32	s2, s2, s11
 80185b2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80185b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80185b8:	698b      	ldr	r3, [r1, #24]
 80185ba:	1a9b      	subs	r3, r3, r2
 80185bc:	ee07 3a10 	vmov	s14, r3
 80185c0:	684b      	ldr	r3, [r1, #4]
 80185c2:	1a9b      	subs	r3, r3, r2
 80185c4:	ee01 3a90 	vmov	s3, r3
 80185c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185cc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80185d0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185d4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80185d8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80185dc:	ee61 1a84 	vmul.f32	s3, s3, s8
 80185e0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80185e4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80185e8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80185ec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80185ee:	694a      	ldr	r2, [r1, #20]
 80185f0:	1b13      	subs	r3, r2, r4
 80185f2:	ee03 3a10 	vmov	s6, r3
 80185f6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80185fa:	680b      	ldr	r3, [r1, #0]
 80185fc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018600:	1b1b      	subs	r3, r3, r4
 8018602:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018606:	ee03 3a10 	vmov	s6, r3
 801860a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801860e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018612:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018616:	ee25 6a86 	vmul.f32	s12, s11, s12
 801861a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801861e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018622:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018626:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801862a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801862e:	dd13      	ble.n	8018658 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018630:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018634:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018638:	63c3      	str	r3, [r0, #60]	; 0x3c
 801863a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801863e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018646:	dd15      	ble.n	8018674 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018648:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801864c:	6403      	str	r3, [r0, #64]	; 0x40
 801864e:	bd70      	pop	{r4, r5, r6, pc}
 8018650:	4623      	mov	r3, r4
 8018652:	e6fd      	b.n	8018450 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018654:	462a      	mov	r2, r5
 8018656:	e706      	b.n	8018466 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018658:	d502      	bpl.n	8018660 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801865a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801865e:	e7e9      	b.n	8018634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018660:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018664:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018668:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801866c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018670:	dade      	bge.n	8018630 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018672:	e7f2      	b.n	801865a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018674:	d502      	bpl.n	801867c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018676:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801867a:	e7e7      	b.n	801864c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801867c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018680:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018684:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018688:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801868c:	dadc      	bge.n	8018648 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801868e:	e7f2      	b.n	8018676 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018690:	3d800000 	.word	0x3d800000

08018694 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018698:	2714      	movs	r7, #20
 801869a:	435f      	muls	r7, r3
 801869c:	eb02 0c07 	add.w	ip, r2, r7
 80186a0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80186a4:	f115 0e0f 	adds.w	lr, r5, #15
 80186a8:	f100 80a2 	bmi.w	80187f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80186ac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80186b0:	9c08      	ldr	r4, [sp, #32]
 80186b2:	f8c0 e014 	str.w	lr, [r0, #20]
 80186b6:	2614      	movs	r6, #20
 80186b8:	4366      	muls	r6, r4
 80186ba:	eb02 0806 	add.w	r8, r2, r6
 80186be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80186c2:	f115 040f 	adds.w	r4, r5, #15
 80186c6:	f100 809f 	bmi.w	8018808 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80186ca:	1124      	asrs	r4, r4, #4
 80186cc:	eba4 040e 	sub.w	r4, r4, lr
 80186d0:	6184      	str	r4, [r0, #24]
 80186d2:	2c00      	cmp	r4, #0
 80186d4:	f000 808a 	beq.w	80187ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80186d8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80186dc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80186e0:	5995      	ldr	r5, [r2, r6]
 80186e2:	eba4 0809 	sub.w	r8, r4, r9
 80186e6:	59d4      	ldr	r4, [r2, r7]
 80186e8:	eba5 0a04 	sub.w	sl, r5, r4
 80186ec:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80186f0:	fb0e fe05 	mul.w	lr, lr, r5
 80186f4:	fb0a ee19 	mls	lr, sl, r9, lr
 80186f8:	fb08 e404 	mla	r4, r8, r4, lr
 80186fc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018700:	3c01      	subs	r4, #1
 8018702:	19a4      	adds	r4, r4, r6
 8018704:	f100 808c 	bmi.w	8018820 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018708:	fb94 fef6 	sdiv	lr, r4, r6
 801870c:	f8c0 e000 	str.w	lr, [r0]
 8018710:	fb06 441e 	mls	r4, r6, lr, r4
 8018714:	6104      	str	r4, [r0, #16]
 8018716:	2d00      	cmp	r5, #0
 8018718:	f2c0 8095 	blt.w	8018846 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801871c:	fb95 f4f6 	sdiv	r4, r5, r6
 8018720:	6044      	str	r4, [r0, #4]
 8018722:	fb06 5514 	mls	r5, r6, r4, r5
 8018726:	6085      	str	r5, [r0, #8]
 8018728:	60c6      	str	r6, [r0, #12]
 801872a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801872e:	6945      	ldr	r5, [r0, #20]
 8018730:	59d2      	ldr	r2, [r2, r7]
 8018732:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018868 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018736:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801873a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801873e:	ee07 4a10 	vmov	s14, r4
 8018742:	6804      	ldr	r4, [r0, #0]
 8018744:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018748:	ee07 2a90 	vmov	s15, r2
 801874c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018750:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018754:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018758:	ee27 7a26 	vmul.f32	s14, s14, s13
 801875c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018760:	edd3 6a00 	vldr	s13, [r3]
 8018764:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018768:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801876c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018770:	edc0 6a07 	vstr	s13, [r0, #28]
 8018774:	edd0 6a01 	vldr	s13, [r0, #4]
 8018778:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801877c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018780:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018784:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018788:	ed80 6a08 	vstr	s12, [r0, #32]
 801878c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801878e:	6242      	str	r2, [r0, #36]	; 0x24
 8018790:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018794:	ed93 6a03 	vldr	s12, [r3, #12]
 8018798:	eea5 6a87 	vfma.f32	s12, s11, s14
 801879c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80187a0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80187a4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80187a8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80187ac:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80187b0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80187b4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80187b8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80187ba:	6302      	str	r2, [r0, #48]	; 0x30
 80187bc:	ed93 6a06 	vldr	s12, [r3, #24]
 80187c0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80187c4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80187c8:	eeb0 7a46 	vmov.f32	s14, s12
 80187cc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80187d0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80187d4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80187d8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80187dc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80187e0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80187e4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80187e8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80187ea:	63c3      	str	r3, [r0, #60]	; 0x3c
 80187ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80187f0:	f1c5 0501 	rsb	r5, r5, #1
 80187f4:	f015 050f 	ands.w	r5, r5, #15
 80187f8:	bf18      	it	ne
 80187fa:	2501      	movne	r5, #1
 80187fc:	2410      	movs	r4, #16
 80187fe:	fb9e fef4 	sdiv	lr, lr, r4
 8018802:	ebae 0e05 	sub.w	lr, lr, r5
 8018806:	e753      	b.n	80186b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018808:	f1c5 0501 	rsb	r5, r5, #1
 801880c:	f015 050f 	ands.w	r5, r5, #15
 8018810:	bf18      	it	ne
 8018812:	2501      	movne	r5, #1
 8018814:	f04f 0910 	mov.w	r9, #16
 8018818:	fb94 f4f9 	sdiv	r4, r4, r9
 801881c:	1b64      	subs	r4, r4, r5
 801881e:	e755      	b.n	80186cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018820:	4264      	negs	r4, r4
 8018822:	fb94 fef6 	sdiv	lr, r4, r6
 8018826:	f1ce 0800 	rsb	r8, lr, #0
 801882a:	fb06 441e 	mls	r4, r6, lr, r4
 801882e:	f8c0 8000 	str.w	r8, [r0]
 8018832:	6104      	str	r4, [r0, #16]
 8018834:	2c00      	cmp	r4, #0
 8018836:	f43f af6e 	beq.w	8018716 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801883a:	ea6f 0e0e 	mvn.w	lr, lr
 801883e:	f8c0 e000 	str.w	lr, [r0]
 8018842:	1b34      	subs	r4, r6, r4
 8018844:	e766      	b.n	8018714 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018846:	426d      	negs	r5, r5
 8018848:	fb95 f4f6 	sdiv	r4, r5, r6
 801884c:	f1c4 0e00 	rsb	lr, r4, #0
 8018850:	fb06 5514 	mls	r5, r6, r4, r5
 8018854:	f8c0 e004 	str.w	lr, [r0, #4]
 8018858:	6085      	str	r5, [r0, #8]
 801885a:	2d00      	cmp	r5, #0
 801885c:	f43f af64 	beq.w	8018728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018860:	43e4      	mvns	r4, r4
 8018862:	6044      	str	r4, [r0, #4]
 8018864:	1b75      	subs	r5, r6, r5
 8018866:	e75e      	b.n	8018726 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018868:	3d800000 	.word	0x3d800000

0801886c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801886c:	4602      	mov	r2, r0
 801886e:	b148      	cbz	r0, 8018884 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018870:	2300      	movs	r3, #0
 8018872:	b298      	uxth	r0, r3
 8018874:	3301      	adds	r3, #1
 8018876:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801887a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801887e:	2900      	cmp	r1, #0
 8018880:	d1f7      	bne.n	8018872 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018882:	4770      	bx	lr
 8018884:	4770      	bx	lr

08018886 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018886:	b530      	push	{r4, r5, lr}
 8018888:	4604      	mov	r4, r0
 801888a:	b159      	cbz	r1, 80188a4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801888c:	b148      	cbz	r0, 80188a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801888e:	2300      	movs	r3, #0
 8018890:	b298      	uxth	r0, r3
 8018892:	4282      	cmp	r2, r0
 8018894:	d905      	bls.n	80188a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018896:	5ccd      	ldrb	r5, [r1, r3]
 8018898:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801889c:	3301      	adds	r3, #1
 801889e:	2d00      	cmp	r5, #0
 80188a0:	d1f6      	bne.n	8018890 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80188a2:	bd30      	pop	{r4, r5, pc}
 80188a4:	4608      	mov	r0, r1
 80188a6:	e7fc      	b.n	80188a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080188a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80188a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80188aa:	b08b      	sub	sp, #44	; 0x2c
 80188ac:	468c      	mov	ip, r1
 80188ae:	2100      	movs	r1, #0
 80188b0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80188b4:	4604      	mov	r4, r0
 80188b6:	261f      	movs	r6, #31
 80188b8:	af01      	add	r7, sp, #4
 80188ba:	fb94 fef3 	sdiv	lr, r4, r3
 80188be:	fb03 441e 	mls	r4, r3, lr, r4
 80188c2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80188c6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80188ca:	b2ec      	uxtb	r4, r5
 80188cc:	2d09      	cmp	r5, #9
 80188ce:	bfd4      	ite	le
 80188d0:	3430      	addle	r4, #48	; 0x30
 80188d2:	3457      	addgt	r4, #87	; 0x57
 80188d4:	b2e4      	uxtb	r4, r4
 80188d6:	55bc      	strb	r4, [r7, r6]
 80188d8:	4674      	mov	r4, lr
 80188da:	1e71      	subs	r1, r6, #1
 80188dc:	b974      	cbnz	r4, 80188fc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80188de:	2800      	cmp	r0, #0
 80188e0:	da05      	bge.n	80188ee <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80188e2:	ab0a      	add	r3, sp, #40	; 0x28
 80188e4:	4419      	add	r1, r3
 80188e6:	232d      	movs	r3, #45	; 0x2d
 80188e8:	f801 3c24 	strb.w	r3, [r1, #-36]
 80188ec:	1eb1      	subs	r1, r6, #2
 80188ee:	3101      	adds	r1, #1
 80188f0:	4439      	add	r1, r7
 80188f2:	4660      	mov	r0, ip
 80188f4:	f7ff ffc7 	bl	8018886 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80188f8:	b00b      	add	sp, #44	; 0x2c
 80188fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80188fc:	460e      	mov	r6, r1
 80188fe:	e7dc      	b.n	80188ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018900 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018900:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018902:	b08b      	sub	sp, #44	; 0x2c
 8018904:	468c      	mov	ip, r1
 8018906:	2100      	movs	r1, #0
 8018908:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801890c:	ae01      	add	r6, sp, #4
 801890e:	211f      	movs	r1, #31
 8018910:	fbb0 f7f3 	udiv	r7, r0, r3
 8018914:	fb03 0517 	mls	r5, r3, r7, r0
 8018918:	b2ec      	uxtb	r4, r5
 801891a:	2d09      	cmp	r5, #9
 801891c:	bfd4      	ite	le
 801891e:	3430      	addle	r4, #48	; 0x30
 8018920:	3457      	addgt	r4, #87	; 0x57
 8018922:	b2e4      	uxtb	r4, r4
 8018924:	558c      	strb	r4, [r1, r6]
 8018926:	4638      	mov	r0, r7
 8018928:	1e4c      	subs	r4, r1, #1
 801892a:	b92f      	cbnz	r7, 8018938 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801892c:	4431      	add	r1, r6
 801892e:	4660      	mov	r0, ip
 8018930:	f7ff ffa9 	bl	8018886 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018934:	b00b      	add	sp, #44	; 0x2c
 8018936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018938:	4621      	mov	r1, r4
 801893a:	e7e9      	b.n	8018910 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801893c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801893c:	b410      	push	{r4}
 801893e:	b131      	cbz	r1, 801894e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018940:	1e9c      	subs	r4, r3, #2
 8018942:	2c22      	cmp	r4, #34	; 0x22
 8018944:	d803      	bhi.n	801894e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018946:	f85d 4b04 	ldr.w	r4, [sp], #4
 801894a:	f7ff bfad 	b.w	80188a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801894e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018952:	4770      	bx	lr

08018954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018958:	4691      	mov	r9, r2
 801895a:	b085      	sub	sp, #20
 801895c:	6802      	ldr	r2, [r0, #0]
 801895e:	9201      	str	r2, [sp, #4]
 8018960:	4688      	mov	r8, r1
 8018962:	4683      	mov	fp, r0
 8018964:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018968:	9103      	str	r1, [sp, #12]
 801896a:	4610      	mov	r0, r2
 801896c:	461c      	mov	r4, r3
 801896e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018972:	9302      	str	r3, [sp, #8]
 8018974:	f7ff ff7a 	bl	801886c <_ZN8touchgfx7Unicode6strlenEPKt>
 8018978:	f1b8 0f00 	cmp.w	r8, #0
 801897c:	bf0c      	ite	eq
 801897e:	4684      	moveq	ip, r0
 8018980:	f100 0c01 	addne.w	ip, r0, #1
 8018984:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018988:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801898c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801898e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018990:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018994:	9903      	ldr	r1, [sp, #12]
 8018996:	fa1f fc8c 	uxth.w	ip, ip
 801899a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801899e:	d041      	beq.n	8018a24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80189a0:	d834      	bhi.n	8018a0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80189a2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80189a6:	d059      	beq.n	8018a5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80189a8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80189ac:	d03a      	beq.n	8018a24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80189ae:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80189b2:	d034      	beq.n	8018a1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80189b4:	2400      	movs	r4, #0
 80189b6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80189ba:	3a01      	subs	r2, #1
 80189bc:	b169      	cbz	r1, 80189da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80189be:	9911      	ldr	r1, [sp, #68]	; 0x44
 80189c0:	458c      	cmp	ip, r1
 80189c2:	da09      	bge.n	80189d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80189c4:	eba1 010c 	sub.w	r1, r1, ip
 80189c8:	b289      	uxth	r1, r1
 80189ca:	b933      	cbnz	r3, 80189da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80189cc:	2e00      	cmp	r6, #0
 80189ce:	d051      	beq.n	8018a74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80189d0:	2800      	cmp	r0, #0
 80189d2:	d04f      	beq.n	8018a74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80189d4:	440c      	add	r4, r1
 80189d6:	b2a4      	uxth	r4, r4
 80189d8:	2100      	movs	r1, #0
 80189da:	682b      	ldr	r3, [r5, #0]
 80189dc:	4293      	cmp	r3, r2
 80189de:	da07      	bge.n	80189f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80189e0:	f1b8 0f00 	cmp.w	r8, #0
 80189e4:	d004      	beq.n	80189f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80189e6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80189ea:	682b      	ldr	r3, [r5, #0]
 80189ec:	3301      	adds	r3, #1
 80189ee:	602b      	str	r3, [r5, #0]
 80189f0:	2730      	movs	r7, #48	; 0x30
 80189f2:	2c00      	cmp	r4, #0
 80189f4:	d04e      	beq.n	8018a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80189f6:	682e      	ldr	r6, [r5, #0]
 80189f8:	3c01      	subs	r4, #1
 80189fa:	42b2      	cmp	r2, r6
 80189fc:	b2a4      	uxth	r4, r4
 80189fe:	dd49      	ble.n	8018a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018a00:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018a04:	682b      	ldr	r3, [r5, #0]
 8018a06:	3301      	adds	r3, #1
 8018a08:	602b      	str	r3, [r5, #0]
 8018a0a:	e7f2      	b.n	80189f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018a0c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018a10:	d01d      	beq.n	8018a4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018a12:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018a16:	d002      	beq.n	8018a1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018a18:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018a1c:	e7c9      	b.n	80189b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018a1e:	4684      	mov	ip, r0
 8018a20:	f04f 0800 	mov.w	r8, #0
 8018a24:	2c00      	cmp	r4, #0
 8018a26:	d0c6      	beq.n	80189b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018a28:	b947      	cbnz	r7, 8018a3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018a2a:	2801      	cmp	r0, #1
 8018a2c:	d106      	bne.n	8018a3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018a2e:	8814      	ldrh	r4, [r2, #0]
 8018a30:	2c30      	cmp	r4, #48	; 0x30
 8018a32:	bf02      	ittt	eq
 8018a34:	3202      	addeq	r2, #2
 8018a36:	f8cb 2000 	streq.w	r2, [fp]
 8018a3a:	4638      	moveq	r0, r7
 8018a3c:	45bc      	cmp	ip, r7
 8018a3e:	da14      	bge.n	8018a6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018a40:	b2bf      	uxth	r7, r7
 8018a42:	eba7 040c 	sub.w	r4, r7, ip
 8018a46:	b2a4      	uxth	r4, r4
 8018a48:	46bc      	mov	ip, r7
 8018a4a:	2600      	movs	r6, #0
 8018a4c:	e7b3      	b.n	80189b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018a4e:	4684      	mov	ip, r0
 8018a50:	b16c      	cbz	r4, 8018a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018a52:	42b8      	cmp	r0, r7
 8018a54:	dd00      	ble.n	8018a58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018a56:	b2b8      	uxth	r0, r7
 8018a58:	2400      	movs	r4, #0
 8018a5a:	e003      	b.n	8018a64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018a5c:	f04f 0c01 	mov.w	ip, #1
 8018a60:	2400      	movs	r4, #0
 8018a62:	4660      	mov	r0, ip
 8018a64:	4626      	mov	r6, r4
 8018a66:	46a0      	mov	r8, r4
 8018a68:	e7a5      	b.n	80189b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018a6a:	2400      	movs	r4, #0
 8018a6c:	e7ed      	b.n	8018a4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018a6e:	4626      	mov	r6, r4
 8018a70:	46a0      	mov	r8, r4
 8018a72:	e7a0      	b.n	80189b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018a74:	2900      	cmp	r1, #0
 8018a76:	d0b0      	beq.n	80189da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018a78:	2720      	movs	r7, #32
 8018a7a:	682e      	ldr	r6, [r5, #0]
 8018a7c:	2900      	cmp	r1, #0
 8018a7e:	d0ac      	beq.n	80189da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018a80:	3901      	subs	r1, #1
 8018a82:	4296      	cmp	r6, r2
 8018a84:	b289      	uxth	r1, r1
 8018a86:	daa7      	bge.n	80189d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018a88:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018a8c:	682b      	ldr	r3, [r5, #0]
 8018a8e:	3301      	adds	r3, #1
 8018a90:	602b      	str	r3, [r5, #0]
 8018a92:	e7f2      	b.n	8018a7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018a94:	b188      	cbz	r0, 8018aba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018a96:	682b      	ldr	r3, [r5, #0]
 8018a98:	3801      	subs	r0, #1
 8018a9a:	429a      	cmp	r2, r3
 8018a9c:	b280      	uxth	r0, r0
 8018a9e:	dd0c      	ble.n	8018aba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018aa0:	f8db 3000 	ldr.w	r3, [fp]
 8018aa4:	1c9c      	adds	r4, r3, #2
 8018aa6:	f8cb 4000 	str.w	r4, [fp]
 8018aaa:	881c      	ldrh	r4, [r3, #0]
 8018aac:	682b      	ldr	r3, [r5, #0]
 8018aae:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018ab2:	682b      	ldr	r3, [r5, #0]
 8018ab4:	3301      	adds	r3, #1
 8018ab6:	602b      	str	r3, [r5, #0]
 8018ab8:	e7ec      	b.n	8018a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018aba:	2620      	movs	r6, #32
 8018abc:	b151      	cbz	r1, 8018ad4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018abe:	6828      	ldr	r0, [r5, #0]
 8018ac0:	3901      	subs	r1, #1
 8018ac2:	4282      	cmp	r2, r0
 8018ac4:	b289      	uxth	r1, r1
 8018ac6:	dd05      	ble.n	8018ad4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018ac8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018acc:	682b      	ldr	r3, [r5, #0]
 8018ace:	3301      	adds	r3, #1
 8018ad0:	602b      	str	r3, [r5, #0]
 8018ad2:	e7f3      	b.n	8018abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018ad4:	b005      	add	sp, #20
 8018ad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018ada:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018ade:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018ae2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018ae6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018aea:	2400      	movs	r4, #0
 8018aec:	8014      	strh	r4, [r2, #0]
 8018aee:	701c      	strb	r4, [r3, #0]
 8018af0:	f888 4000 	strb.w	r4, [r8]
 8018af4:	f88c 4000 	strb.w	r4, [ip]
 8018af8:	f88e 4000 	strb.w	r4, [lr]
 8018afc:	703c      	strb	r4, [r7, #0]
 8018afe:	6804      	ldr	r4, [r0, #0]
 8018b00:	b1a4      	cbz	r4, 8018b2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018b02:	8824      	ldrh	r4, [r4, #0]
 8018b04:	f04f 0901 	mov.w	r9, #1
 8018b08:	b314      	cbz	r4, 8018b50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018b0a:	2c2b      	cmp	r4, #43	; 0x2b
 8018b0c:	d001      	beq.n	8018b12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018b0e:	2c20      	cmp	r4, #32
 8018b10:	d110      	bne.n	8018b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018b12:	8014      	strh	r4, [r2, #0]
 8018b14:	6804      	ldr	r4, [r0, #0]
 8018b16:	b10c      	cbz	r4, 8018b1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018b18:	3402      	adds	r4, #2
 8018b1a:	6004      	str	r4, [r0, #0]
 8018b1c:	680c      	ldr	r4, [r1, #0]
 8018b1e:	b10c      	cbz	r4, 8018b24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018b20:	3401      	adds	r4, #1
 8018b22:	600c      	str	r4, [r1, #0]
 8018b24:	6804      	ldr	r4, [r0, #0]
 8018b26:	b17c      	cbz	r4, 8018b48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018b28:	8824      	ldrh	r4, [r4, #0]
 8018b2a:	e7ed      	b.n	8018b08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018b2c:	680c      	ldr	r4, [r1, #0]
 8018b2e:	b17c      	cbz	r4, 8018b50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018b30:	7824      	ldrb	r4, [r4, #0]
 8018b32:	e7e7      	b.n	8018b04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018b34:	2c2d      	cmp	r4, #45	; 0x2d
 8018b36:	d102      	bne.n	8018b3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018b38:	f883 9000 	strb.w	r9, [r3]
 8018b3c:	e7ea      	b.n	8018b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018b3e:	2c23      	cmp	r4, #35	; 0x23
 8018b40:	d107      	bne.n	8018b52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018b42:	f888 9000 	strb.w	r9, [r8]
 8018b46:	e7e5      	b.n	8018b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018b48:	680c      	ldr	r4, [r1, #0]
 8018b4a:	b10c      	cbz	r4, 8018b50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018b4c:	7824      	ldrb	r4, [r4, #0]
 8018b4e:	e7db      	b.n	8018b08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018b50:	2400      	movs	r4, #0
 8018b52:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018b56:	2b09      	cmp	r3, #9
 8018b58:	d901      	bls.n	8018b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018b5a:	2c2a      	cmp	r4, #42	; 0x2a
 8018b5c:	d122      	bne.n	8018ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018b5e:	2301      	movs	r3, #1
 8018b60:	2c30      	cmp	r4, #48	; 0x30
 8018b62:	f88e 3000 	strb.w	r3, [lr]
 8018b66:	d10d      	bne.n	8018b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018b68:	f88c 3000 	strb.w	r3, [ip]
 8018b6c:	6803      	ldr	r3, [r0, #0]
 8018b6e:	b10b      	cbz	r3, 8018b74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018b70:	3302      	adds	r3, #2
 8018b72:	6003      	str	r3, [r0, #0]
 8018b74:	680b      	ldr	r3, [r1, #0]
 8018b76:	b10b      	cbz	r3, 8018b7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018b78:	3301      	adds	r3, #1
 8018b7a:	600b      	str	r3, [r1, #0]
 8018b7c:	6803      	ldr	r3, [r0, #0]
 8018b7e:	2b00      	cmp	r3, #0
 8018b80:	d02f      	beq.n	8018be2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018b82:	881c      	ldrh	r4, [r3, #0]
 8018b84:	2c2a      	cmp	r4, #42	; 0x2a
 8018b86:	d135      	bne.n	8018bf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018b88:	f04f 33ff 	mov.w	r3, #4294967295
 8018b8c:	6033      	str	r3, [r6, #0]
 8018b8e:	6803      	ldr	r3, [r0, #0]
 8018b90:	b10b      	cbz	r3, 8018b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018b92:	3302      	adds	r3, #2
 8018b94:	6003      	str	r3, [r0, #0]
 8018b96:	680b      	ldr	r3, [r1, #0]
 8018b98:	b10b      	cbz	r3, 8018b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018b9a:	3301      	adds	r3, #1
 8018b9c:	600b      	str	r3, [r1, #0]
 8018b9e:	6803      	ldr	r3, [r0, #0]
 8018ba0:	b31b      	cbz	r3, 8018bea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018ba2:	881c      	ldrh	r4, [r3, #0]
 8018ba4:	2c2e      	cmp	r4, #46	; 0x2e
 8018ba6:	d11a      	bne.n	8018bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018ba8:	2301      	movs	r3, #1
 8018baa:	703b      	strb	r3, [r7, #0]
 8018bac:	6803      	ldr	r3, [r0, #0]
 8018bae:	b10b      	cbz	r3, 8018bb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018bb0:	3302      	adds	r3, #2
 8018bb2:	6003      	str	r3, [r0, #0]
 8018bb4:	680b      	ldr	r3, [r1, #0]
 8018bb6:	b10b      	cbz	r3, 8018bbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018bb8:	3301      	adds	r3, #1
 8018bba:	600b      	str	r3, [r1, #0]
 8018bbc:	6803      	ldr	r3, [r0, #0]
 8018bbe:	2b00      	cmp	r3, #0
 8018bc0:	d036      	beq.n	8018c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018bc2:	881b      	ldrh	r3, [r3, #0]
 8018bc4:	2b2a      	cmp	r3, #42	; 0x2a
 8018bc6:	d137      	bne.n	8018c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018bc8:	f04f 33ff 	mov.w	r3, #4294967295
 8018bcc:	602b      	str	r3, [r5, #0]
 8018bce:	6803      	ldr	r3, [r0, #0]
 8018bd0:	b10b      	cbz	r3, 8018bd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018bd2:	3302      	adds	r3, #2
 8018bd4:	6003      	str	r3, [r0, #0]
 8018bd6:	680b      	ldr	r3, [r1, #0]
 8018bd8:	b10b      	cbz	r3, 8018bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018bda:	3301      	adds	r3, #1
 8018bdc:	600b      	str	r3, [r1, #0]
 8018bde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018be2:	680c      	ldr	r4, [r1, #0]
 8018be4:	b134      	cbz	r4, 8018bf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018be6:	7824      	ldrb	r4, [r4, #0]
 8018be8:	e7cc      	b.n	8018b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018bea:	680b      	ldr	r3, [r1, #0]
 8018bec:	2b00      	cmp	r3, #0
 8018bee:	d0f6      	beq.n	8018bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018bf0:	781c      	ldrb	r4, [r3, #0]
 8018bf2:	e7d7      	b.n	8018ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018bf4:	2300      	movs	r3, #0
 8018bf6:	6033      	str	r3, [r6, #0]
 8018bf8:	220a      	movs	r2, #10
 8018bfa:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018bfe:	fa1f f38c 	uxth.w	r3, ip
 8018c02:	2b09      	cmp	r3, #9
 8018c04:	d8ce      	bhi.n	8018ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018c06:	6833      	ldr	r3, [r6, #0]
 8018c08:	fb02 c303 	mla	r3, r2, r3, ip
 8018c0c:	6033      	str	r3, [r6, #0]
 8018c0e:	6803      	ldr	r3, [r0, #0]
 8018c10:	b10b      	cbz	r3, 8018c16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018c12:	3302      	adds	r3, #2
 8018c14:	6003      	str	r3, [r0, #0]
 8018c16:	680b      	ldr	r3, [r1, #0]
 8018c18:	b10b      	cbz	r3, 8018c1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018c1a:	3301      	adds	r3, #1
 8018c1c:	600b      	str	r3, [r1, #0]
 8018c1e:	6803      	ldr	r3, [r0, #0]
 8018c20:	b10b      	cbz	r3, 8018c26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018c22:	881c      	ldrh	r4, [r3, #0]
 8018c24:	e7e9      	b.n	8018bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018c26:	680c      	ldr	r4, [r1, #0]
 8018c28:	2c00      	cmp	r4, #0
 8018c2a:	d0e6      	beq.n	8018bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018c2c:	7824      	ldrb	r4, [r4, #0]
 8018c2e:	e7e4      	b.n	8018bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018c30:	680b      	ldr	r3, [r1, #0]
 8018c32:	b10b      	cbz	r3, 8018c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018c34:	781b      	ldrb	r3, [r3, #0]
 8018c36:	e7c5      	b.n	8018bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018c38:	2200      	movs	r2, #0
 8018c3a:	602a      	str	r2, [r5, #0]
 8018c3c:	240a      	movs	r4, #10
 8018c3e:	3b30      	subs	r3, #48	; 0x30
 8018c40:	b29e      	uxth	r6, r3
 8018c42:	2e09      	cmp	r6, #9
 8018c44:	682a      	ldr	r2, [r5, #0]
 8018c46:	d813      	bhi.n	8018c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018c48:	fb04 3302 	mla	r3, r4, r2, r3
 8018c4c:	602b      	str	r3, [r5, #0]
 8018c4e:	6803      	ldr	r3, [r0, #0]
 8018c50:	b10b      	cbz	r3, 8018c56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018c52:	3302      	adds	r3, #2
 8018c54:	6003      	str	r3, [r0, #0]
 8018c56:	680b      	ldr	r3, [r1, #0]
 8018c58:	b10b      	cbz	r3, 8018c5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018c5a:	3301      	adds	r3, #1
 8018c5c:	600b      	str	r3, [r1, #0]
 8018c5e:	6803      	ldr	r3, [r0, #0]
 8018c60:	b10b      	cbz	r3, 8018c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018c62:	881b      	ldrh	r3, [r3, #0]
 8018c64:	e7eb      	b.n	8018c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018c66:	680b      	ldr	r3, [r1, #0]
 8018c68:	2b00      	cmp	r3, #0
 8018c6a:	d0e8      	beq.n	8018c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018c6c:	781b      	ldrb	r3, [r3, #0]
 8018c6e:	e7e6      	b.n	8018c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018c70:	2a06      	cmp	r2, #6
 8018c72:	bfa8      	it	ge
 8018c74:	2206      	movge	r2, #6
 8018c76:	602a      	str	r2, [r5, #0]
 8018c78:	e7b1      	b.n	8018bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018c7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018c7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c7e:	b0a3      	sub	sp, #140	; 0x8c
 8018c80:	2600      	movs	r6, #0
 8018c82:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018c86:	4607      	mov	r7, r0
 8018c88:	4688      	mov	r8, r1
 8018c8a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018c8e:	4631      	mov	r1, r6
 8018c90:	2242      	movs	r2, #66	; 0x42
 8018c92:	4648      	mov	r0, r9
 8018c94:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018c96:	960d      	str	r6, [sp, #52]	; 0x34
 8018c98:	f012 f9fd 	bl	802b096 <memset>
 8018c9c:	b15f      	cbz	r7, 8018cb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018c9e:	f108 3aff 	add.w	sl, r8, #4294967295
 8018ca2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ca4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ca6:	b152      	cbz	r2, 8018cbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018ca8:	8812      	ldrh	r2, [r2, #0]
 8018caa:	b10a      	cbz	r2, 8018cb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018cac:	459a      	cmp	sl, r3
 8018cae:	dc2e      	bgt.n	8018d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018cb0:	2200      	movs	r2, #0
 8018cb2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018cb6:	4638      	mov	r0, r7
 8018cb8:	b023      	add	sp, #140	; 0x8c
 8018cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018cbe:	9a08      	ldr	r2, [sp, #32]
 8018cc0:	2a00      	cmp	r2, #0
 8018cc2:	d0f5      	beq.n	8018cb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018cc4:	7812      	ldrb	r2, [r2, #0]
 8018cc6:	e7f0      	b.n	8018caa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018cc8:	2d00      	cmp	r5, #0
 8018cca:	d0ea      	beq.n	8018ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ccc:	782a      	ldrb	r2, [r5, #0]
 8018cce:	b142      	cbz	r2, 8018ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018cd0:	2a25      	cmp	r2, #37	; 0x25
 8018cd2:	d001      	beq.n	8018cd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018cd4:	459a      	cmp	sl, r3
 8018cd6:	dc08      	bgt.n	8018cea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018cd8:	f1bb 0f00 	cmp.w	fp, #0
 8018cdc:	d121      	bne.n	8018d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018cde:	2d00      	cmp	r5, #0
 8018ce0:	d0df      	beq.n	8018ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ce2:	782a      	ldrb	r2, [r5, #0]
 8018ce4:	f04f 0b00 	mov.w	fp, #0
 8018ce8:	e01d      	b.n	8018d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018cea:	f1bb 0f00 	cmp.w	fp, #0
 8018cee:	d078      	beq.n	8018de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018cf0:	f8bb 2000 	ldrh.w	r2, [fp]
 8018cf4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018cf8:	f1bb 0f00 	cmp.w	fp, #0
 8018cfc:	d002      	beq.n	8018d04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018cfe:	f10b 0202 	add.w	r2, fp, #2
 8018d02:	9209      	str	r2, [sp, #36]	; 0x24
 8018d04:	b10d      	cbz	r5, 8018d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018d06:	3501      	adds	r5, #1
 8018d08:	9508      	str	r5, [sp, #32]
 8018d0a:	3301      	adds	r3, #1
 8018d0c:	930d      	str	r3, [sp, #52]	; 0x34
 8018d0e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018d12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018d14:	f1bb 0f00 	cmp.w	fp, #0
 8018d18:	d0d6      	beq.n	8018cc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018d1a:	f8bb 2000 	ldrh.w	r2, [fp]
 8018d1e:	2a00      	cmp	r2, #0
 8018d20:	d1d6      	bne.n	8018cd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018d22:	f8bb 2000 	ldrh.w	r2, [fp]
 8018d26:	2a00      	cmp	r2, #0
 8018d28:	d0bb      	beq.n	8018ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d2a:	459a      	cmp	sl, r3
 8018d2c:	ddb9      	ble.n	8018ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d2e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018d32:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018d36:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018d3a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018d3e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018d42:	960e      	str	r6, [sp, #56]	; 0x38
 8018d44:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018d48:	960f      	str	r6, [sp, #60]	; 0x3c
 8018d4a:	f1bb 0f00 	cmp.w	fp, #0
 8018d4e:	d002      	beq.n	8018d56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018d50:	f10b 0302 	add.w	r3, fp, #2
 8018d54:	9309      	str	r3, [sp, #36]	; 0x24
 8018d56:	b10d      	cbz	r5, 8018d5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018d58:	1c6b      	adds	r3, r5, #1
 8018d5a:	9308      	str	r3, [sp, #32]
 8018d5c:	ab0f      	add	r3, sp, #60	; 0x3c
 8018d5e:	9305      	str	r3, [sp, #20]
 8018d60:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018d64:	9304      	str	r3, [sp, #16]
 8018d66:	ab0e      	add	r3, sp, #56	; 0x38
 8018d68:	9303      	str	r3, [sp, #12]
 8018d6a:	ab0c      	add	r3, sp, #48	; 0x30
 8018d6c:	9302      	str	r3, [sp, #8]
 8018d6e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018d72:	9301      	str	r3, [sp, #4]
 8018d74:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018d78:	9300      	str	r3, [sp, #0]
 8018d7a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018d7e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018d82:	a908      	add	r1, sp, #32
 8018d84:	a809      	add	r0, sp, #36	; 0x24
 8018d86:	f7ff fea8 	bl	8018ada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018d8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018d8c:	2b00      	cmp	r3, #0
 8018d8e:	bfbe      	ittt	lt
 8018d90:	6823      	ldrlt	r3, [r4, #0]
 8018d92:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018d96:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018d98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d9a:	bfb8      	it	lt
 8018d9c:	3404      	addlt	r4, #4
 8018d9e:	2b00      	cmp	r3, #0
 8018da0:	bfb8      	it	lt
 8018da2:	6823      	ldrlt	r3, [r4, #0]
 8018da4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018da8:	bfbe      	ittt	lt
 8018daa:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018dae:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018db0:	3404      	addlt	r4, #4
 8018db2:	b1d9      	cbz	r1, 8018dec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018db4:	880b      	ldrh	r3, [r1, #0]
 8018db6:	2b69      	cmp	r3, #105	; 0x69
 8018db8:	d01f      	beq.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018dba:	d82f      	bhi.n	8018e1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018dbc:	2b58      	cmp	r3, #88	; 0x58
 8018dbe:	d01c      	beq.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018dc0:	d818      	bhi.n	8018df4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018dc2:	2b25      	cmp	r3, #37	; 0x25
 8018dc4:	d034      	beq.n	8018e30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018dc6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018dca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018dcc:	f1bb 0f00 	cmp.w	fp, #0
 8018dd0:	f000 80b8 	beq.w	8018f44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018dd4:	f8bb 5000 	ldrh.w	r5, [fp]
 8018dd8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018ddc:	3301      	adds	r3, #1
 8018dde:	930d      	str	r3, [sp, #52]	; 0x34
 8018de0:	e029      	b.n	8018e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018de2:	b10d      	cbz	r5, 8018de8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018de4:	782a      	ldrb	r2, [r5, #0]
 8018de6:	e785      	b.n	8018cf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018de8:	462a      	mov	r2, r5
 8018dea:	e783      	b.n	8018cf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018dec:	2a00      	cmp	r2, #0
 8018dee:	d0ea      	beq.n	8018dc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018df0:	7813      	ldrb	r3, [r2, #0]
 8018df2:	e7e0      	b.n	8018db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018df4:	3b63      	subs	r3, #99	; 0x63
 8018df6:	2b01      	cmp	r3, #1
 8018df8:	d8e5      	bhi.n	8018dc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018dfa:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018dfe:	b329      	cbz	r1, 8018e4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018e00:	880b      	ldrh	r3, [r1, #0]
 8018e02:	2b69      	cmp	r3, #105	; 0x69
 8018e04:	d063      	beq.n	8018ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018e06:	d825      	bhi.n	8018e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018e08:	2b63      	cmp	r3, #99	; 0x63
 8018e0a:	d038      	beq.n	8018e7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018e0c:	2b64      	cmp	r3, #100	; 0x64
 8018e0e:	d05e      	beq.n	8018ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018e10:	2b58      	cmp	r3, #88	; 0x58
 8018e12:	d07b      	beq.n	8018f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018e14:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018e18:	4625      	mov	r5, r4
 8018e1a:	e036      	b.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018e1c:	2b73      	cmp	r3, #115	; 0x73
 8018e1e:	d0ec      	beq.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018e20:	d802      	bhi.n	8018e28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018e22:	2b6f      	cmp	r3, #111	; 0x6f
 8018e24:	d1cf      	bne.n	8018dc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018e26:	e7e8      	b.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018e28:	2b75      	cmp	r3, #117	; 0x75
 8018e2a:	d0e6      	beq.n	8018dfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018e2c:	2b78      	cmp	r3, #120	; 0x78
 8018e2e:	e7f9      	b.n	8018e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018e30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e32:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018e36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e38:	b10b      	cbz	r3, 8018e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018e3a:	3302      	adds	r3, #2
 8018e3c:	9309      	str	r3, [sp, #36]	; 0x24
 8018e3e:	9b08      	ldr	r3, [sp, #32]
 8018e40:	2b00      	cmp	r3, #0
 8018e42:	f43f af2e 	beq.w	8018ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e46:	3301      	adds	r3, #1
 8018e48:	9308      	str	r3, [sp, #32]
 8018e4a:	e72a      	b.n	8018ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018e4c:	2a00      	cmp	r2, #0
 8018e4e:	d0e1      	beq.n	8018e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018e50:	7813      	ldrb	r3, [r2, #0]
 8018e52:	e7d6      	b.n	8018e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018e54:	2b73      	cmp	r3, #115	; 0x73
 8018e56:	d036      	beq.n	8018ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018e58:	d807      	bhi.n	8018e6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018e5a:	2b6f      	cmp	r3, #111	; 0x6f
 8018e5c:	d1da      	bne.n	8018e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018e5e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e60:	1d25      	adds	r5, r4, #4
 8018e62:	eba8 0202 	sub.w	r2, r8, r2
 8018e66:	2308      	movs	r3, #8
 8018e68:	e04a      	b.n	8018f00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018e6a:	2b75      	cmp	r3, #117	; 0x75
 8018e6c:	d043      	beq.n	8018ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018e6e:	2b78      	cmp	r3, #120	; 0x78
 8018e70:	d1d0      	bne.n	8018e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018e72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e74:	1d25      	adds	r5, r4, #4
 8018e76:	eba8 0202 	sub.w	r2, r8, r2
 8018e7a:	2310      	movs	r3, #16
 8018e7c:	e040      	b.n	8018f00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018e7e:	6823      	ldr	r3, [r4, #0]
 8018e80:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018e84:	1d25      	adds	r5, r4, #4
 8018e86:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e8c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018e90:	2b00      	cmp	r3, #0
 8018e92:	d052      	beq.n	8018f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018e94:	881a      	ldrh	r2, [r3, #0]
 8018e96:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018e9a:	a80d      	add	r0, sp, #52	; 0x34
 8018e9c:	9005      	str	r0, [sp, #20]
 8018e9e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018ea2:	9004      	str	r0, [sp, #16]
 8018ea4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018ea6:	9003      	str	r0, [sp, #12]
 8018ea8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018eac:	9002      	str	r0, [sp, #8]
 8018eae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018eb0:	9001      	str	r0, [sp, #4]
 8018eb2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018eb6:	9000      	str	r0, [sp, #0]
 8018eb8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018ebc:	a810      	add	r0, sp, #64	; 0x40
 8018ebe:	f7ff fd49 	bl	8018954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018ec2:	462c      	mov	r4, r5
 8018ec4:	e7b7      	b.n	8018e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018ec6:	6823      	ldr	r3, [r4, #0]
 8018ec8:	1d25      	adds	r5, r4, #4
 8018eca:	9310      	str	r3, [sp, #64]	; 0x40
 8018ecc:	e7dd      	b.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018ece:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018ed0:	6820      	ldr	r0, [r4, #0]
 8018ed2:	eba8 0202 	sub.w	r2, r8, r2
 8018ed6:	230a      	movs	r3, #10
 8018ed8:	b292      	uxth	r2, r2
 8018eda:	4649      	mov	r1, r9
 8018edc:	f7ff fce4 	bl	80188a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018ee0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018ee4:	2b2d      	cmp	r3, #45	; 0x2d
 8018ee6:	f104 0504 	add.w	r5, r4, #4
 8018eea:	d1ce      	bne.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018eec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018ef0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ef2:	3302      	adds	r3, #2
 8018ef4:	e7e9      	b.n	8018eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8018ef6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018ef8:	1d25      	adds	r5, r4, #4
 8018efa:	eba8 0202 	sub.w	r2, r8, r2
 8018efe:	230a      	movs	r3, #10
 8018f00:	b292      	uxth	r2, r2
 8018f02:	4649      	mov	r1, r9
 8018f04:	6820      	ldr	r0, [r4, #0]
 8018f06:	f7ff fcfb 	bl	8018900 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018f0a:	e7be      	b.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f0c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f0e:	6820      	ldr	r0, [r4, #0]
 8018f10:	eba8 0202 	sub.w	r2, r8, r2
 8018f14:	b292      	uxth	r2, r2
 8018f16:	2310      	movs	r3, #16
 8018f18:	4649      	mov	r1, r9
 8018f1a:	f7ff fcf1 	bl	8018900 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018f1e:	1d25      	adds	r5, r4, #4
 8018f20:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018f24:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018f28:	2b00      	cmp	r3, #0
 8018f2a:	d0ae      	beq.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f2c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018f30:	2919      	cmp	r1, #25
 8018f32:	d8f7      	bhi.n	8018f24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018f34:	3b20      	subs	r3, #32
 8018f36:	8013      	strh	r3, [r2, #0]
 8018f38:	e7f4      	b.n	8018f24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018f3a:	9a08      	ldr	r2, [sp, #32]
 8018f3c:	2a00      	cmp	r2, #0
 8018f3e:	d0aa      	beq.n	8018e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018f40:	7812      	ldrb	r2, [r2, #0]
 8018f42:	e7a8      	b.n	8018e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018f44:	2d00      	cmp	r5, #0
 8018f46:	f43f af47 	beq.w	8018dd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018f4a:	782d      	ldrb	r5, [r5, #0]
 8018f4c:	e744      	b.n	8018dd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018f4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018f4e:	b507      	push	{r0, r1, r2, lr}
 8018f50:	9300      	str	r3, [sp, #0]
 8018f52:	4613      	mov	r3, r2
 8018f54:	2200      	movs	r2, #0
 8018f56:	f7ff fe90 	bl	8018c7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018f5a:	b003      	add	sp, #12
 8018f5c:	f85d fb04 	ldr.w	pc, [sp], #4

08018f60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018f60:	b40c      	push	{r2, r3}
 8018f62:	b507      	push	{r0, r1, r2, lr}
 8018f64:	ab04      	add	r3, sp, #16
 8018f66:	f853 2b04 	ldr.w	r2, [r3], #4
 8018f6a:	9301      	str	r3, [sp, #4]
 8018f6c:	f7ff ffef 	bl	8018f4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018f70:	b003      	add	sp, #12
 8018f72:	f85d eb04 	ldr.w	lr, [sp], #4
 8018f76:	b002      	add	sp, #8
 8018f78:	4770      	bx	lr
	...

08018f7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8018f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f80:	b0c5      	sub	sp, #276	; 0x114
 8018f82:	2400      	movs	r4, #0
 8018f84:	af11      	add	r7, sp, #68	; 0x44
 8018f86:	4606      	mov	r6, r0
 8018f88:	468a      	mov	sl, r1
 8018f8a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018f8e:	4621      	mov	r1, r4
 8018f90:	22c8      	movs	r2, #200	; 0xc8
 8018f92:	4638      	mov	r0, r7
 8018f94:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018f98:	940d      	str	r4, [sp, #52]	; 0x34
 8018f9a:	f012 f87c 	bl	802b096 <memset>
 8018f9e:	b16e      	cbz	r6, 8018fbc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8018fa0:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019244 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8018fa4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018fa6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018fa8:	b162      	cbz	r2, 8018fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8018faa:	8812      	ldrh	r2, [r2, #0]
 8018fac:	b11a      	cbz	r2, 8018fb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018fae:	f10a 31ff 	add.w	r1, sl, #4294967295
 8018fb2:	4299      	cmp	r1, r3
 8018fb4:	dc2e      	bgt.n	8019014 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8018fb6:	2200      	movs	r2, #0
 8018fb8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018fbc:	4630      	mov	r0, r6
 8018fbe:	b045      	add	sp, #276	; 0x114
 8018fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fc4:	9a08      	ldr	r2, [sp, #32]
 8018fc6:	2a00      	cmp	r2, #0
 8018fc8:	d0f5      	beq.n	8018fb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018fca:	7812      	ldrb	r2, [r2, #0]
 8018fcc:	e7ee      	b.n	8018fac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8018fce:	2d00      	cmp	r5, #0
 8018fd0:	d0e8      	beq.n	8018fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018fd2:	782a      	ldrb	r2, [r5, #0]
 8018fd4:	b142      	cbz	r2, 8018fe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8018fd6:	2a25      	cmp	r2, #37	; 0x25
 8018fd8:	d001      	beq.n	8018fde <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8018fda:	4299      	cmp	r1, r3
 8018fdc:	dc08      	bgt.n	8018ff0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8018fde:	f1b8 0f00 	cmp.w	r8, #0
 8018fe2:	d121      	bne.n	8019028 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8018fe4:	2d00      	cmp	r5, #0
 8018fe6:	d0dd      	beq.n	8018fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018fe8:	782a      	ldrb	r2, [r5, #0]
 8018fea:	f04f 0800 	mov.w	r8, #0
 8018fee:	e01d      	b.n	801902c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8018ff0:	f1b8 0f00 	cmp.w	r8, #0
 8018ff4:	d07f      	beq.n	80190f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8018ff6:	f8b8 2000 	ldrh.w	r2, [r8]
 8018ffa:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018ffe:	f1b8 0f00 	cmp.w	r8, #0
 8019002:	d002      	beq.n	801900a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019004:	f108 0202 	add.w	r2, r8, #2
 8019008:	9209      	str	r2, [sp, #36]	; 0x24
 801900a:	b10d      	cbz	r5, 8019010 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801900c:	3501      	adds	r5, #1
 801900e:	9508      	str	r5, [sp, #32]
 8019010:	3301      	adds	r3, #1
 8019012:	930d      	str	r3, [sp, #52]	; 0x34
 8019014:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8019018:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801901a:	f1b8 0f00 	cmp.w	r8, #0
 801901e:	d0d6      	beq.n	8018fce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8019020:	f8b8 2000 	ldrh.w	r2, [r8]
 8019024:	2a00      	cmp	r2, #0
 8019026:	d1d6      	bne.n	8018fd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8019028:	f8b8 2000 	ldrh.w	r2, [r8]
 801902c:	2a00      	cmp	r2, #0
 801902e:	d0b9      	beq.n	8018fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019030:	4299      	cmp	r1, r3
 8019032:	ddb7      	ble.n	8018fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019034:	2300      	movs	r3, #0
 8019036:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801903a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801903e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8019042:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8019046:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801904a:	930e      	str	r3, [sp, #56]	; 0x38
 801904c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019050:	930f      	str	r3, [sp, #60]	; 0x3c
 8019052:	f1b8 0f00 	cmp.w	r8, #0
 8019056:	d002      	beq.n	801905e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8019058:	f108 0302 	add.w	r3, r8, #2
 801905c:	9309      	str	r3, [sp, #36]	; 0x24
 801905e:	b10d      	cbz	r5, 8019064 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8019060:	1c6b      	adds	r3, r5, #1
 8019062:	9308      	str	r3, [sp, #32]
 8019064:	ab0f      	add	r3, sp, #60	; 0x3c
 8019066:	9305      	str	r3, [sp, #20]
 8019068:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801906c:	9304      	str	r3, [sp, #16]
 801906e:	ab0e      	add	r3, sp, #56	; 0x38
 8019070:	9303      	str	r3, [sp, #12]
 8019072:	ab0c      	add	r3, sp, #48	; 0x30
 8019074:	9302      	str	r3, [sp, #8]
 8019076:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801907a:	9301      	str	r3, [sp, #4]
 801907c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019080:	9300      	str	r3, [sp, #0]
 8019082:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019086:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801908a:	a908      	add	r1, sp, #32
 801908c:	a809      	add	r0, sp, #36	; 0x24
 801908e:	f7ff fd24 	bl	8018ada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019092:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019094:	2b00      	cmp	r3, #0
 8019096:	da0b      	bge.n	80190b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019098:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801909c:	edd3 7a00 	vldr	s15, [r3]
 80190a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80190a4:	3401      	adds	r4, #1
 80190a6:	ee17 3a90 	vmov	r3, s15
 80190aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80190ae:	930e      	str	r3, [sp, #56]	; 0x38
 80190b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80190b2:	2b00      	cmp	r3, #0
 80190b4:	da0b      	bge.n	80190ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80190b6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80190ba:	edd3 7a00 	vldr	s15, [r3]
 80190be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80190c2:	3401      	adds	r4, #1
 80190c4:	ee17 3a90 	vmov	r3, s15
 80190c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80190cc:	930f      	str	r3, [sp, #60]	; 0x3c
 80190ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80190d0:	b1b3      	cbz	r3, 8019100 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80190d2:	881a      	ldrh	r2, [r3, #0]
 80190d4:	2a25      	cmp	r2, #37	; 0x25
 80190d6:	d018      	beq.n	801910a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80190d8:	2a66      	cmp	r2, #102	; 0x66
 80190da:	d01c      	beq.n	8019116 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80190dc:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80190e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80190e2:	f1b8 0f00 	cmp.w	r8, #0
 80190e6:	f000 8121 	beq.w	801932c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 80190ea:	f8b8 5000 	ldrh.w	r5, [r8]
 80190ee:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80190f2:	3301      	adds	r3, #1
 80190f4:	e00d      	b.n	8019112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80190f6:	b10d      	cbz	r5, 80190fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80190f8:	782a      	ldrb	r2, [r5, #0]
 80190fa:	e77e      	b.n	8018ffa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80190fc:	462a      	mov	r2, r5
 80190fe:	e77c      	b.n	8018ffa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019100:	9b08      	ldr	r3, [sp, #32]
 8019102:	2b00      	cmp	r3, #0
 8019104:	d0ea      	beq.n	80190dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019106:	781a      	ldrb	r2, [r3, #0]
 8019108:	e7e4      	b.n	80190d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801910a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801910c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019110:	3302      	adds	r3, #2
 8019112:	930d      	str	r3, [sp, #52]	; 0x34
 8019114:	e041      	b.n	801919a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019116:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801911a:	edd3 7a00 	vldr	s15, [r3]
 801911e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019122:	9710      	str	r7, [sp, #64]	; 0x40
 8019124:	3401      	adds	r4, #1
 8019126:	b923      	cbnz	r3, 8019132 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019128:	2301      	movs	r3, #1
 801912a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801912e:	2306      	movs	r3, #6
 8019130:	930f      	str	r3, [sp, #60]	; 0x3c
 8019132:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019136:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801913a:	bf48      	it	mi
 801913c:	eef1 7a67 	vnegmi.f32	s15, s15
 8019140:	eeb0 7ae7 	vabs.f32	s14, s15
 8019144:	bf48      	it	mi
 8019146:	232d      	movmi	r3, #45	; 0x2d
 8019148:	eeb4 7a45 	vcmp.f32	s14, s10
 801914c:	bf48      	it	mi
 801914e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019152:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019156:	dd2b      	ble.n	80191b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019158:	4b3b      	ldr	r3, [pc, #236]	; (8019248 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801915a:	9311      	str	r3, [sp, #68]	; 0x44
 801915c:	2366      	movs	r3, #102	; 0x66
 801915e:	9312      	str	r3, [sp, #72]	; 0x48
 8019160:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019162:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019166:	2b00      	cmp	r3, #0
 8019168:	f000 80da 	beq.w	8019320 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801916c:	881a      	ldrh	r2, [r3, #0]
 801916e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019172:	a80d      	add	r0, sp, #52	; 0x34
 8019174:	9005      	str	r0, [sp, #20]
 8019176:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801917a:	9004      	str	r0, [sp, #16]
 801917c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801917e:	9003      	str	r0, [sp, #12]
 8019180:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019184:	9002      	str	r0, [sp, #8]
 8019186:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019188:	9001      	str	r0, [sp, #4]
 801918a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801918e:	9000      	str	r0, [sp, #0]
 8019190:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019194:	a810      	add	r0, sp, #64	; 0x40
 8019196:	f7ff fbdd 	bl	8018954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801919a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801919c:	b10b      	cbz	r3, 80191a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801919e:	3302      	adds	r3, #2
 80191a0:	9309      	str	r3, [sp, #36]	; 0x24
 80191a2:	9b08      	ldr	r3, [sp, #32]
 80191a4:	2b00      	cmp	r3, #0
 80191a6:	f43f aefd 	beq.w	8018fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80191aa:	3301      	adds	r3, #1
 80191ac:	9308      	str	r3, [sp, #32]
 80191ae:	e6f9      	b.n	8018fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80191b0:	eef4 7a67 	vcmp.f32	s15, s15
 80191b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191b8:	d63a      	bvs.n	8019230 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80191ba:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80191be:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80191c2:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80191c6:	eeb0 6a67 	vmov.f32	s12, s15
 80191ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80191ce:	eef0 5a47 	vmov.f32	s11, s14
 80191d2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80191d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191da:	da2d      	bge.n	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80191dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80191de:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80191e2:	2100      	movs	r1, #0
 80191e4:	eef0 4a46 	vmov.f32	s9, s12
 80191e8:	ebaa 0202 	sub.w	r2, sl, r2
 80191ec:	eef4 6ac6 	vcmpe.f32	s13, s12
 80191f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191f4:	b28d      	uxth	r5, r1
 80191f6:	db2c      	blt.n	8019252 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80191f8:	1a53      	subs	r3, r2, r1
 80191fa:	2b00      	cmp	r3, #0
 80191fc:	dd29      	ble.n	8019252 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80191fe:	3101      	adds	r1, #1
 8019200:	2964      	cmp	r1, #100	; 0x64
 8019202:	d025      	beq.n	8019250 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019204:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019208:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801920c:	ee17 3a10 	vmov	r3, s14
 8019210:	2b09      	cmp	r3, #9
 8019212:	bfa8      	it	ge
 8019214:	2309      	movge	r3, #9
 8019216:	ee07 3a10 	vmov	s14, r3
 801921a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801921e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019222:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019226:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801922a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801922e:	e7dd      	b.n	80191ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019230:	4b06      	ldr	r3, [pc, #24]	; (801924c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019232:	9311      	str	r3, [sp, #68]	; 0x44
 8019234:	236e      	movs	r3, #110	; 0x6e
 8019236:	e792      	b.n	801915e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019238:	ee66 6a87 	vmul.f32	s13, s13, s14
 801923c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019240:	e7c7      	b.n	80191d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019242:	bf00      	nop
 8019244:	7f7fffff 	.word	0x7f7fffff
 8019248:	006e0069 	.word	0x006e0069
 801924c:	0061006e 	.word	0x0061006e
 8019250:	2563      	movs	r5, #99	; 0x63
 8019252:	2a63      	cmp	r2, #99	; 0x63
 8019254:	bfd4      	ite	le
 8019256:	ebc5 0202 	rsble	r2, r5, r2
 801925a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801925e:	2a00      	cmp	r2, #0
 8019260:	dd43      	ble.n	80192ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019262:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019264:	2b00      	cmp	r3, #0
 8019266:	dd40      	ble.n	80192ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019268:	f04f 0901 	mov.w	r9, #1
 801926c:	210a      	movs	r1, #10
 801926e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019272:	d30c      	bcc.n	801928e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019274:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019278:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801927c:	ee17 0a10 	vmov	r0, s14
 8019280:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019284:	fb01 0909 	mla	r9, r1, r9, r0
 8019288:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801928c:	e7ef      	b.n	801926e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801928e:	3501      	adds	r5, #1
 8019290:	930f      	str	r3, [sp, #60]	; 0x3c
 8019292:	b292      	uxth	r2, r2
 8019294:	230a      	movs	r3, #10
 8019296:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801929a:	4648      	mov	r0, r9
 801929c:	f7ff fb4e 	bl	801893c <_ZN8touchgfx7Unicode4itoaElPtti>
 80192a0:	f1b9 0f01 	cmp.w	r9, #1
 80192a4:	dc1f      	bgt.n	80192e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80192a6:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80192aa:	2b00      	cmp	r3, #0
 80192ac:	bf0c      	ite	eq
 80192ae:	2300      	moveq	r3, #0
 80192b0:	232e      	movne	r3, #46	; 0x2e
 80192b2:	aa44      	add	r2, sp, #272	; 0x110
 80192b4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80192b8:	eef4 7ae4 	vcmpe.f32	s15, s9
 80192bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192c0:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80192c4:	f6ff af4c 	blt.w	8019160 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80192c8:	2300      	movs	r3, #0
 80192ca:	f838 2b02 	ldrh.w	r2, [r8], #2
 80192ce:	1c59      	adds	r1, r3, #1
 80192d0:	b98a      	cbnz	r2, 80192f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80192d2:	b29b      	uxth	r3, r3
 80192d4:	2130      	movs	r1, #48	; 0x30
 80192d6:	b983      	cbnz	r3, 80192fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80192d8:	2331      	movs	r3, #49	; 0x31
 80192da:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80192de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192e0:	3b02      	subs	r3, #2
 80192e2:	9310      	str	r3, [sp, #64]	; 0x40
 80192e4:	e73c      	b.n	8019160 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80192e6:	232e      	movs	r3, #46	; 0x2e
 80192e8:	e7e3      	b.n	80192b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 80192ea:	ab44      	add	r3, sp, #272	; 0x110
 80192ec:	3501      	adds	r5, #1
 80192ee:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80192f2:	2300      	movs	r3, #0
 80192f4:	e7e0      	b.n	80192b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80192f6:	460b      	mov	r3, r1
 80192f8:	e7e7      	b.n	80192ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 80192fa:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80192fe:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019302:	2808      	cmp	r0, #8
 8019304:	d806      	bhi.n	8019314 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019306:	a944      	add	r1, sp, #272	; 0x110
 8019308:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801930c:	3201      	adds	r2, #1
 801930e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019312:	e725      	b.n	8019160 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019314:	2a39      	cmp	r2, #57	; 0x39
 8019316:	bf08      	it	eq
 8019318:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801931c:	3b01      	subs	r3, #1
 801931e:	e7da      	b.n	80192d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019320:	9a08      	ldr	r2, [sp, #32]
 8019322:	2a00      	cmp	r2, #0
 8019324:	f43f af23 	beq.w	801916e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019328:	7812      	ldrb	r2, [r2, #0]
 801932a:	e720      	b.n	801916e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801932c:	2d00      	cmp	r5, #0
 801932e:	f43f aede 	beq.w	80190ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019332:	782d      	ldrb	r5, [r5, #0]
 8019334:	e6db      	b.n	80190ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019336:	bf00      	nop

08019338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019338:	b507      	push	{r0, r1, r2, lr}
 801933a:	9300      	str	r3, [sp, #0]
 801933c:	4613      	mov	r3, r2
 801933e:	2200      	movs	r2, #0
 8019340:	f7ff fe1c 	bl	8018f7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019344:	b003      	add	sp, #12
 8019346:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801934c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801934c:	4b01      	ldr	r3, [pc, #4]	; (8019354 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801934e:	6018      	str	r0, [r3, #0]
 8019350:	4770      	bx	lr
 8019352:	bf00      	nop
 8019354:	20012e0c 	.word	0x20012e0c

08019358 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019358:	4b06      	ldr	r3, [pc, #24]	; (8019374 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801935a:	881a      	ldrh	r2, [r3, #0]
 801935c:	4282      	cmp	r2, r0
 801935e:	d807      	bhi.n	8019370 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019360:	4b05      	ldr	r3, [pc, #20]	; (8019378 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019362:	881b      	ldrh	r3, [r3, #0]
 8019364:	4413      	add	r3, r2
 8019366:	4298      	cmp	r0, r3
 8019368:	bfac      	ite	ge
 801936a:	2000      	movge	r0, #0
 801936c:	2001      	movlt	r0, #1
 801936e:	4770      	bx	lr
 8019370:	2000      	movs	r0, #0
 8019372:	4770      	bx	lr
 8019374:	20012e2c 	.word	0x20012e2c
 8019378:	20012e30 	.word	0x20012e30

0801937c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801937c:	b508      	push	{r3, lr}
 801937e:	4601      	mov	r1, r0
 8019380:	f7ff ffea 	bl	8019358 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019384:	b118      	cbz	r0, 801938e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019386:	4b02      	ldr	r3, [pc, #8]	; (8019390 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019388:	681b      	ldr	r3, [r3, #0]
 801938a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801938e:	bd08      	pop	{r3, pc}
 8019390:	20012e10 	.word	0x20012e10

08019394 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019394:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019396:	4c24      	ldr	r4, [pc, #144]	; (8019428 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019398:	6823      	ldr	r3, [r4, #0]
 801939a:	2b00      	cmp	r3, #0
 801939c:	d042      	beq.n	8019424 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801939e:	4a23      	ldr	r2, [pc, #140]	; (801942c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80193a0:	4d23      	ldr	r5, [pc, #140]	; (8019430 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80193a2:	8811      	ldrh	r1, [r2, #0]
 80193a4:	f8b5 c000 	ldrh.w	ip, [r5]
 80193a8:	4822      	ldr	r0, [pc, #136]	; (8019434 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80193aa:	4461      	add	r1, ip
 80193ac:	1c4a      	adds	r2, r1, #1
 80193ae:	f022 0201 	bic.w	r2, r2, #1
 80193b2:	008f      	lsls	r7, r1, #2
 80193b4:	0412      	lsls	r2, r2, #16
 80193b6:	19de      	adds	r6, r3, r7
 80193b8:	0c12      	lsrs	r2, r2, #16
 80193ba:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80193be:	6006      	str	r6, [r0, #0]
 80193c0:	4e1d      	ldr	r6, [pc, #116]	; (8019438 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80193c2:	19da      	adds	r2, r3, r7
 80193c4:	6032      	str	r2, [r6, #0]
 80193c6:	220e      	movs	r2, #14
 80193c8:	fb02 f20c 	mul.w	r2, r2, ip
 80193cc:	3203      	adds	r2, #3
 80193ce:	f022 0203 	bic.w	r2, r2, #3
 80193d2:	443a      	add	r2, r7
 80193d4:	4f19      	ldr	r7, [pc, #100]	; (801943c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80193d6:	4413      	add	r3, r2
 80193d8:	603b      	str	r3, [r7, #0]
 80193da:	4f19      	ldr	r7, [pc, #100]	; (8019440 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80193dc:	2300      	movs	r3, #0
 80193de:	803b      	strh	r3, [r7, #0]
 80193e0:	4f18      	ldr	r7, [pc, #96]	; (8019444 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80193e2:	683f      	ldr	r7, [r7, #0]
 80193e4:	1aba      	subs	r2, r7, r2
 80193e6:	4f18      	ldr	r7, [pc, #96]	; (8019448 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80193e8:	603a      	str	r2, [r7, #0]
 80193ea:	4a18      	ldr	r2, [pc, #96]	; (801944c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80193ec:	469c      	mov	ip, r3
 80193ee:	8013      	strh	r3, [r2, #0]
 80193f0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80193f4:	428b      	cmp	r3, r1
 80193f6:	d10d      	bne.n	8019414 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80193f8:	882d      	ldrh	r5, [r5, #0]
 80193fa:	6830      	ldr	r0, [r6, #0]
 80193fc:	2300      	movs	r3, #0
 80193fe:	240e      	movs	r4, #14
 8019400:	429d      	cmp	r5, r3
 8019402:	d90f      	bls.n	8019424 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019404:	fb04 0203 	mla	r2, r4, r3, r0
 8019408:	3301      	adds	r3, #1
 801940a:	7b11      	ldrb	r1, [r2, #12]
 801940c:	f36f 1145 	bfc	r1, #5, #1
 8019410:	7311      	strb	r1, [r2, #12]
 8019412:	e7f5      	b.n	8019400 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019414:	6822      	ldr	r2, [r4, #0]
 8019416:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801941a:	6802      	ldr	r2, [r0, #0]
 801941c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019420:	3301      	adds	r3, #1
 8019422:	e7e7      	b.n	80193f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019424:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019426:	bf00      	nop
 8019428:	20012e10 	.word	0x20012e10
 801942c:	20012e2c 	.word	0x20012e2c
 8019430:	20012e30 	.word	0x20012e30
 8019434:	20012e24 	.word	0x20012e24
 8019438:	20012e14 	.word	0x20012e14
 801943c:	20012e1c 	.word	0x20012e1c
 8019440:	20012e2e 	.word	0x20012e2e
 8019444:	20012e18 	.word	0x20012e18
 8019448:	20012e28 	.word	0x20012e28
 801944c:	20012e20 	.word	0x20012e20

08019450 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019450:	4b06      	ldr	r3, [pc, #24]	; (801946c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019452:	681b      	ldr	r3, [r3, #0]
 8019454:	b943      	cbnz	r3, 8019468 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019456:	b139      	cbz	r1, 8019468 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019458:	4b05      	ldr	r3, [pc, #20]	; (8019470 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801945a:	801a      	strh	r2, [r3, #0]
 801945c:	4b05      	ldr	r3, [pc, #20]	; (8019474 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801945e:	6019      	str	r1, [r3, #0]
 8019460:	4b05      	ldr	r3, [pc, #20]	; (8019478 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019462:	6018      	str	r0, [r3, #0]
 8019464:	f7ff bf96 	b.w	8019394 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019468:	4770      	bx	lr
 801946a:	bf00      	nop
 801946c:	20012e1c 	.word	0x20012e1c
 8019470:	20012e30 	.word	0x20012e30
 8019474:	20012e18 	.word	0x20012e18
 8019478:	20012e10 	.word	0x20012e10

0801947c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801947c:	b470      	push	{r4, r5, r6}
 801947e:	4c07      	ldr	r4, [pc, #28]	; (801949c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019480:	6826      	ldr	r6, [r4, #0]
 8019482:	4605      	mov	r5, r0
 8019484:	4610      	mov	r0, r2
 8019486:	9a03      	ldr	r2, [sp, #12]
 8019488:	b936      	cbnz	r6, 8019498 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801948a:	6025      	str	r5, [r4, #0]
 801948c:	4c04      	ldr	r4, [pc, #16]	; (80194a0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801948e:	8021      	strh	r1, [r4, #0]
 8019490:	bc70      	pop	{r4, r5, r6}
 8019492:	4619      	mov	r1, r3
 8019494:	f7ff bfdc 	b.w	8019450 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019498:	bc70      	pop	{r4, r5, r6}
 801949a:	4770      	bx	lr
 801949c:	20012e34 	.word	0x20012e34
 80194a0:	20012e2c 	.word	0x20012e2c

080194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80194a4:	4a12      	ldr	r2, [pc, #72]	; (80194f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80194a6:	8803      	ldrh	r3, [r0, #0]
 80194a8:	8812      	ldrh	r2, [r2, #0]
 80194aa:	4293      	cmp	r3, r2
 80194ac:	d207      	bcs.n	80194be <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80194ae:	4a11      	ldr	r2, [pc, #68]	; (80194f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80194b0:	6812      	ldr	r2, [r2, #0]
 80194b2:	2114      	movs	r1, #20
 80194b4:	fb01 2303 	mla	r3, r1, r3, r2
 80194b8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80194bc:	4770      	bx	lr
 80194be:	490e      	ldr	r1, [pc, #56]	; (80194f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80194c0:	8809      	ldrh	r1, [r1, #0]
 80194c2:	4411      	add	r1, r2
 80194c4:	428b      	cmp	r3, r1
 80194c6:	da04      	bge.n	80194d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80194c8:	1a9b      	subs	r3, r3, r2
 80194ca:	4a0c      	ldr	r2, [pc, #48]	; (80194fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80194cc:	210e      	movs	r1, #14
 80194ce:	6812      	ldr	r2, [r2, #0]
 80194d0:	e7f0      	b.n	80194b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80194d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80194d6:	4293      	cmp	r3, r2
 80194d8:	d108      	bne.n	80194ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80194da:	4b09      	ldr	r3, [pc, #36]	; (8019500 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80194dc:	781b      	ldrb	r3, [r3, #0]
 80194de:	b91b      	cbnz	r3, 80194e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80194e0:	4b08      	ldr	r3, [pc, #32]	; (8019504 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80194e2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80194e6:	4770      	bx	lr
 80194e8:	4b07      	ldr	r3, [pc, #28]	; (8019508 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80194ea:	e7fa      	b.n	80194e2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80194ec:	2000      	movs	r0, #0
 80194ee:	4770      	bx	lr
 80194f0:	20012e2c 	.word	0x20012e2c
 80194f4:	20012e34 	.word	0x20012e34
 80194f8:	20012e30 	.word	0x20012e30
 80194fc:	20012e14 	.word	0x20012e14
 8019500:	20012d9c 	.word	0x20012d9c
 8019504:	20012d9e 	.word	0x20012d9e
 8019508:	20012da0 	.word	0x20012da0

0801950c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801950c:	4a12      	ldr	r2, [pc, #72]	; (8019558 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801950e:	8803      	ldrh	r3, [r0, #0]
 8019510:	8812      	ldrh	r2, [r2, #0]
 8019512:	4293      	cmp	r3, r2
 8019514:	d207      	bcs.n	8019526 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019516:	4a11      	ldr	r2, [pc, #68]	; (801955c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019518:	6812      	ldr	r2, [r2, #0]
 801951a:	2114      	movs	r1, #20
 801951c:	fb01 2303 	mla	r3, r1, r3, r2
 8019520:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019524:	4770      	bx	lr
 8019526:	490e      	ldr	r1, [pc, #56]	; (8019560 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019528:	8809      	ldrh	r1, [r1, #0]
 801952a:	4411      	add	r1, r2
 801952c:	428b      	cmp	r3, r1
 801952e:	da04      	bge.n	801953a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8019530:	1a9b      	subs	r3, r3, r2
 8019532:	4a0c      	ldr	r2, [pc, #48]	; (8019564 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019534:	210e      	movs	r1, #14
 8019536:	6812      	ldr	r2, [r2, #0]
 8019538:	e7f0      	b.n	801951c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801953a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801953e:	4293      	cmp	r3, r2
 8019540:	d108      	bne.n	8019554 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8019542:	4b09      	ldr	r3, [pc, #36]	; (8019568 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019544:	781b      	ldrb	r3, [r3, #0]
 8019546:	b91b      	cbnz	r3, 8019550 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019548:	4b08      	ldr	r3, [pc, #32]	; (801956c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801954a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801954e:	4770      	bx	lr
 8019550:	4b07      	ldr	r3, [pc, #28]	; (8019570 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019552:	e7fa      	b.n	801954a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019554:	2000      	movs	r0, #0
 8019556:	4770      	bx	lr
 8019558:	20012e2c 	.word	0x20012e2c
 801955c:	20012e34 	.word	0x20012e34
 8019560:	20012e30 	.word	0x20012e30
 8019564:	20012e14 	.word	0x20012e14
 8019568:	20012d9c 	.word	0x20012d9c
 801956c:	20012da0 	.word	0x20012da0
 8019570:	20012d9e 	.word	0x20012d9e

08019574 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019574:	b510      	push	{r4, lr}
 8019576:	4a1f      	ldr	r2, [pc, #124]	; (80195f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019578:	880b      	ldrh	r3, [r1, #0]
 801957a:	8812      	ldrh	r2, [r2, #0]
 801957c:	4293      	cmp	r3, r2
 801957e:	d213      	bcs.n	80195a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019580:	4a1d      	ldr	r2, [pc, #116]	; (80195f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019582:	6812      	ldr	r2, [r2, #0]
 8019584:	2114      	movs	r1, #20
 8019586:	fb01 2303 	mla	r3, r1, r3, r2
 801958a:	8a1a      	ldrh	r2, [r3, #16]
 801958c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019590:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019594:	8a5b      	ldrh	r3, [r3, #18]
 8019596:	8004      	strh	r4, [r0, #0]
 8019598:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801959c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80195a0:	8041      	strh	r1, [r0, #2]
 80195a2:	8082      	strh	r2, [r0, #4]
 80195a4:	80c3      	strh	r3, [r0, #6]
 80195a6:	e00e      	b.n	80195c6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80195a8:	4914      	ldr	r1, [pc, #80]	; (80195fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80195aa:	8809      	ldrh	r1, [r1, #0]
 80195ac:	4411      	add	r1, r2
 80195ae:	428b      	cmp	r3, r1
 80195b0:	da0a      	bge.n	80195c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80195b2:	1a9b      	subs	r3, r3, r2
 80195b4:	4a12      	ldr	r2, [pc, #72]	; (8019600 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80195b6:	6812      	ldr	r2, [r2, #0]
 80195b8:	210e      	movs	r1, #14
 80195ba:	fb01 2303 	mla	r3, r1, r3, r2
 80195be:	681a      	ldr	r2, [r3, #0]
 80195c0:	6002      	str	r2, [r0, #0]
 80195c2:	685a      	ldr	r2, [r3, #4]
 80195c4:	6042      	str	r2, [r0, #4]
 80195c6:	bd10      	pop	{r4, pc}
 80195c8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80195cc:	4293      	cmp	r3, r2
 80195ce:	d10b      	bne.n	80195e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80195d0:	4b0c      	ldr	r3, [pc, #48]	; (8019604 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80195d2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80195d6:	4b0c      	ldr	r3, [pc, #48]	; (8019608 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80195d8:	8081      	strh	r1, [r0, #4]
 80195da:	f9b3 2000 	ldrsh.w	r2, [r3]
 80195de:	80c2      	strh	r2, [r0, #6]
 80195e0:	2300      	movs	r3, #0
 80195e2:	8003      	strh	r3, [r0, #0]
 80195e4:	8043      	strh	r3, [r0, #2]
 80195e6:	e7ee      	b.n	80195c6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80195e8:	2300      	movs	r3, #0
 80195ea:	8003      	strh	r3, [r0, #0]
 80195ec:	8043      	strh	r3, [r0, #2]
 80195ee:	8083      	strh	r3, [r0, #4]
 80195f0:	e7d8      	b.n	80195a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80195f2:	bf00      	nop
 80195f4:	20012e2c 	.word	0x20012e2c
 80195f8:	20012e34 	.word	0x20012e34
 80195fc:	20012e30 	.word	0x20012e30
 8019600:	20012e14 	.word	0x20012e14
 8019604:	20012d98 	.word	0x20012d98
 8019608:	20012d9a 	.word	0x20012d9a

0801960c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801960c:	4a17      	ldr	r2, [pc, #92]	; (801966c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801960e:	8803      	ldrh	r3, [r0, #0]
 8019610:	8812      	ldrh	r2, [r2, #0]
 8019612:	4293      	cmp	r3, r2
 8019614:	d213      	bcs.n	801963e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019616:	4a16      	ldr	r2, [pc, #88]	; (8019670 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019618:	6812      	ldr	r2, [r2, #0]
 801961a:	2114      	movs	r1, #20
 801961c:	fb01 2303 	mla	r3, r1, r3, r2
 8019620:	8a1a      	ldrh	r2, [r3, #16]
 8019622:	8919      	ldrh	r1, [r3, #8]
 8019624:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019628:	428a      	cmp	r2, r1
 801962a:	db1d      	blt.n	8019668 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801962c:	8a58      	ldrh	r0, [r3, #18]
 801962e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019632:	895b      	ldrh	r3, [r3, #10]
 8019634:	4298      	cmp	r0, r3
 8019636:	bfac      	ite	ge
 8019638:	2000      	movge	r0, #0
 801963a:	2001      	movlt	r0, #1
 801963c:	4770      	bx	lr
 801963e:	490d      	ldr	r1, [pc, #52]	; (8019674 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019640:	8809      	ldrh	r1, [r1, #0]
 8019642:	4411      	add	r1, r2
 8019644:	428b      	cmp	r3, r1
 8019646:	da0d      	bge.n	8019664 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019648:	1a9b      	subs	r3, r3, r2
 801964a:	4a0b      	ldr	r2, [pc, #44]	; (8019678 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801964c:	6812      	ldr	r2, [r2, #0]
 801964e:	210e      	movs	r1, #14
 8019650:	fb01 2303 	mla	r3, r1, r3, r2
 8019654:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019658:	891a      	ldrh	r2, [r3, #8]
 801965a:	4291      	cmp	r1, r2
 801965c:	db04      	blt.n	8019668 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801965e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019662:	e7e6      	b.n	8019632 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019664:	2000      	movs	r0, #0
 8019666:	4770      	bx	lr
 8019668:	2001      	movs	r0, #1
 801966a:	4770      	bx	lr
 801966c:	20012e2c 	.word	0x20012e2c
 8019670:	20012e34 	.word	0x20012e34
 8019674:	20012e30 	.word	0x20012e30
 8019678:	20012e14 	.word	0x20012e14

0801967c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801967c:	4a12      	ldr	r2, [pc, #72]	; (80196c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801967e:	8803      	ldrh	r3, [r0, #0]
 8019680:	8811      	ldrh	r1, [r2, #0]
 8019682:	428b      	cmp	r3, r1
 8019684:	d20b      	bcs.n	801969e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8019686:	4a11      	ldr	r2, [pc, #68]	; (80196cc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019688:	6812      	ldr	r2, [r2, #0]
 801968a:	b112      	cbz	r2, 8019692 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801968c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019690:	b9c0      	cbnz	r0, 80196c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019692:	4a0f      	ldr	r2, [pc, #60]	; (80196d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019694:	6811      	ldr	r1, [r2, #0]
 8019696:	2214      	movs	r2, #20
 8019698:	4353      	muls	r3, r2
 801969a:	58c8      	ldr	r0, [r1, r3]
 801969c:	4770      	bx	lr
 801969e:	4a0d      	ldr	r2, [pc, #52]	; (80196d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80196a0:	8812      	ldrh	r2, [r2, #0]
 80196a2:	440a      	add	r2, r1
 80196a4:	4293      	cmp	r3, r2
 80196a6:	da04      	bge.n	80196b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80196a8:	4a08      	ldr	r2, [pc, #32]	; (80196cc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80196aa:	6812      	ldr	r2, [r2, #0]
 80196ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80196b0:	4770      	bx	lr
 80196b2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80196b6:	4293      	cmp	r3, r2
 80196b8:	d103      	bne.n	80196c2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80196ba:	4b07      	ldr	r3, [pc, #28]	; (80196d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80196bc:	681b      	ldr	r3, [r3, #0]
 80196be:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80196c0:	4770      	bx	lr
 80196c2:	2000      	movs	r0, #0
 80196c4:	4770      	bx	lr
 80196c6:	bf00      	nop
 80196c8:	20012e2c 	.word	0x20012e2c
 80196cc:	20012e10 	.word	0x20012e10
 80196d0:	20012e34 	.word	0x20012e34
 80196d4:	20012e30 	.word	0x20012e30
 80196d8:	20012da4 	.word	0x20012da4

080196dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80196dc:	4b24      	ldr	r3, [pc, #144]	; (8019770 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80196de:	8802      	ldrh	r2, [r0, #0]
 80196e0:	8818      	ldrh	r0, [r3, #0]
 80196e2:	4282      	cmp	r2, r0
 80196e4:	d221      	bcs.n	801972a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80196e6:	4b23      	ldr	r3, [pc, #140]	; (8019774 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80196e8:	6819      	ldr	r1, [r3, #0]
 80196ea:	2314      	movs	r3, #20
 80196ec:	fb03 1302 	mla	r3, r3, r2, r1
 80196f0:	6858      	ldr	r0, [r3, #4]
 80196f2:	2800      	cmp	r0, #0
 80196f4:	d03a      	beq.n	801976c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80196f6:	4920      	ldr	r1, [pc, #128]	; (8019778 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80196f8:	6809      	ldr	r1, [r1, #0]
 80196fa:	2900      	cmp	r1, #0
 80196fc:	d036      	beq.n	801976c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80196fe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019702:	2900      	cmp	r1, #0
 8019704:	d032      	beq.n	801976c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019706:	891a      	ldrh	r2, [r3, #8]
 8019708:	8958      	ldrh	r0, [r3, #10]
 801970a:	4350      	muls	r0, r2
 801970c:	7c5a      	ldrb	r2, [r3, #17]
 801970e:	7cdb      	ldrb	r3, [r3, #19]
 8019710:	0952      	lsrs	r2, r2, #5
 8019712:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019716:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801971a:	2b0b      	cmp	r3, #11
 801971c:	bf18      	it	ne
 801971e:	0040      	lslne	r0, r0, #1
 8019720:	3003      	adds	r0, #3
 8019722:	f020 0003 	bic.w	r0, r0, #3
 8019726:	4408      	add	r0, r1
 8019728:	4770      	bx	lr
 801972a:	4b14      	ldr	r3, [pc, #80]	; (801977c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801972c:	881b      	ldrh	r3, [r3, #0]
 801972e:	4403      	add	r3, r0
 8019730:	429a      	cmp	r2, r3
 8019732:	da1a      	bge.n	801976a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019734:	4b12      	ldr	r3, [pc, #72]	; (8019780 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019736:	681b      	ldr	r3, [r3, #0]
 8019738:	1a10      	subs	r0, r2, r0
 801973a:	210e      	movs	r1, #14
 801973c:	fb01 3000 	mla	r0, r1, r0, r3
 8019740:	7b03      	ldrb	r3, [r0, #12]
 8019742:	f003 031f 	and.w	r3, r3, #31
 8019746:	2b0b      	cmp	r3, #11
 8019748:	d10b      	bne.n	8019762 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801974a:	8903      	ldrh	r3, [r0, #8]
 801974c:	8940      	ldrh	r0, [r0, #10]
 801974e:	4358      	muls	r0, r3
 8019750:	4b09      	ldr	r3, [pc, #36]	; (8019778 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019752:	6819      	ldr	r1, [r3, #0]
 8019754:	3003      	adds	r0, #3
 8019756:	f020 0303 	bic.w	r3, r0, #3
 801975a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801975e:	4418      	add	r0, r3
 8019760:	4770      	bx	lr
 8019762:	2b0d      	cmp	r3, #13
 8019764:	d101      	bne.n	801976a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019766:	300d      	adds	r0, #13
 8019768:	4770      	bx	lr
 801976a:	2000      	movs	r0, #0
 801976c:	4770      	bx	lr
 801976e:	bf00      	nop
 8019770:	20012e2c 	.word	0x20012e2c
 8019774:	20012e34 	.word	0x20012e34
 8019778:	20012e10 	.word	0x20012e10
 801977c:	20012e30 	.word	0x20012e30
 8019780:	20012e14 	.word	0x20012e14

08019784 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019784:	b510      	push	{r4, lr}
 8019786:	4a17      	ldr	r2, [pc, #92]	; (80197e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019788:	8803      	ldrh	r3, [r0, #0]
 801978a:	8812      	ldrh	r2, [r2, #0]
 801978c:	4293      	cmp	r3, r2
 801978e:	d20c      	bcs.n	80197aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019790:	4a15      	ldr	r2, [pc, #84]	; (80197e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019792:	6812      	ldr	r2, [r2, #0]
 8019794:	2114      	movs	r1, #20
 8019796:	fb01 2303 	mla	r3, r1, r3, r2
 801979a:	7c58      	ldrb	r0, [r3, #17]
 801979c:	0942      	lsrs	r2, r0, #5
 801979e:	7cd8      	ldrb	r0, [r3, #19]
 80197a0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80197a4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80197a8:	bd10      	pop	{r4, pc}
 80197aa:	4910      	ldr	r1, [pc, #64]	; (80197ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80197ac:	8809      	ldrh	r1, [r1, #0]
 80197ae:	4411      	add	r1, r2
 80197b0:	428b      	cmp	r3, r1
 80197b2:	da09      	bge.n	80197c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80197b4:	1a9b      	subs	r3, r3, r2
 80197b6:	4a0e      	ldr	r2, [pc, #56]	; (80197f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80197b8:	6812      	ldr	r2, [r2, #0]
 80197ba:	210e      	movs	r1, #14
 80197bc:	fb01 2303 	mla	r3, r1, r3, r2
 80197c0:	7b18      	ldrb	r0, [r3, #12]
 80197c2:	f000 001f 	and.w	r0, r0, #31
 80197c6:	e7ef      	b.n	80197a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80197c8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80197cc:	4293      	cmp	r3, r2
 80197ce:	d106      	bne.n	80197de <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80197d0:	f7eb f814 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 80197d4:	6803      	ldr	r3, [r0, #0]
 80197d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80197da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80197dc:	4718      	bx	r3
 80197de:	2000      	movs	r0, #0
 80197e0:	e7e2      	b.n	80197a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80197e2:	bf00      	nop
 80197e4:	20012e2c 	.word	0x20012e2c
 80197e8:	20012e34 	.word	0x20012e34
 80197ec:	20012e30 	.word	0x20012e30
 80197f0:	20012e14 	.word	0x20012e14

080197f4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80197f4:	2010      	movs	r0, #16
 80197f6:	4770      	bx	lr

080197f8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80197f8:	2000      	movs	r0, #0
 80197fa:	4770      	bx	lr

080197fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80197fc:	4b02      	ldr	r3, [pc, #8]	; (8019808 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80197fe:	8818      	ldrh	r0, [r3, #0]
 8019800:	0040      	lsls	r0, r0, #1
 8019802:	b280      	uxth	r0, r0
 8019804:	4770      	bx	lr
 8019806:	bf00      	nop
 8019808:	20012d9e 	.word	0x20012d9e

0801980c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801980c:	2bff      	cmp	r3, #255	; 0xff
 801980e:	d050      	beq.n	80198b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019810:	2a0b      	cmp	r2, #11
 8019812:	d04a      	beq.n	80198aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019814:	d80e      	bhi.n	8019834 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019816:	2a03      	cmp	r2, #3
 8019818:	d03f      	beq.n	801989a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801981a:	d804      	bhi.n	8019826 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801981c:	2a01      	cmp	r2, #1
 801981e:	d03e      	beq.n	801989e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019820:	d93f      	bls.n	80198a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019822:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019824:	4770      	bx	lr
 8019826:	2a09      	cmp	r2, #9
 8019828:	d03f      	beq.n	80198aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801982a:	d83c      	bhi.n	80198a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801982c:	2a08      	cmp	r2, #8
 801982e:	d03a      	beq.n	80198a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019830:	2000      	movs	r0, #0
 8019832:	4770      	bx	lr
 8019834:	2a2f      	cmp	r2, #47	; 0x2f
 8019836:	d024      	beq.n	8019882 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019838:	d80d      	bhi.n	8019856 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801983a:	2a2d      	cmp	r2, #45	; 0x2d
 801983c:	d014      	beq.n	8019868 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801983e:	d826      	bhi.n	801988e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019840:	2a2c      	cmp	r2, #44	; 0x2c
 8019842:	d1f5      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019844:	684b      	ldr	r3, [r1, #4]
 8019846:	781b      	ldrb	r3, [r3, #0]
 8019848:	2b01      	cmp	r3, #1
 801984a:	d018      	beq.n	801987e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801984c:	d323      	bcc.n	8019896 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801984e:	2b02      	cmp	r3, #2
 8019850:	d1ee      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019852:	6880      	ldr	r0, [r0, #8]
 8019854:	4770      	bx	lr
 8019856:	2a31      	cmp	r2, #49	; 0x31
 8019858:	d004      	beq.n	8019864 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801985a:	d328      	bcc.n	80198ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801985c:	2a32      	cmp	r2, #50	; 0x32
 801985e:	d026      	beq.n	80198ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019860:	2a33      	cmp	r2, #51	; 0x33
 8019862:	d1e5      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019864:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019866:	4770      	bx	lr
 8019868:	684b      	ldr	r3, [r1, #4]
 801986a:	781b      	ldrb	r3, [r3, #0]
 801986c:	2b01      	cmp	r3, #1
 801986e:	d004      	beq.n	801987a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019870:	d30b      	bcc.n	801988a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019872:	2b02      	cmp	r3, #2
 8019874:	d1dc      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019876:	6900      	ldr	r0, [r0, #16]
 8019878:	4770      	bx	lr
 801987a:	6a00      	ldr	r0, [r0, #32]
 801987c:	4770      	bx	lr
 801987e:	6980      	ldr	r0, [r0, #24]
 8019880:	4770      	bx	lr
 8019882:	684b      	ldr	r3, [r1, #4]
 8019884:	781b      	ldrb	r3, [r3, #0]
 8019886:	2b00      	cmp	r3, #0
 8019888:	d1d2      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801988a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801988c:	4770      	bx	lr
 801988e:	684b      	ldr	r3, [r1, #4]
 8019890:	781b      	ldrb	r3, [r3, #0]
 8019892:	2b00      	cmp	r3, #0
 8019894:	d1cc      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019896:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019898:	4770      	bx	lr
 801989a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801989c:	4770      	bx	lr
 801989e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80198a0:	4770      	bx	lr
 80198a2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80198a4:	4770      	bx	lr
 80198a6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80198a8:	4770      	bx	lr
 80198aa:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80198ac:	4770      	bx	lr
 80198ae:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80198b0:	4770      	bx	lr
 80198b2:	2a0b      	cmp	r2, #11
 80198b4:	d049      	beq.n	801994a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80198b6:	d80e      	bhi.n	80198d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80198b8:	2a03      	cmp	r2, #3
 80198ba:	d040      	beq.n	801993e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80198bc:	d804      	bhi.n	80198c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80198be:	2a01      	cmp	r2, #1
 80198c0:	d03f      	beq.n	8019942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80198c2:	d940      	bls.n	8019946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80198c4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80198c6:	4770      	bx	lr
 80198c8:	2a09      	cmp	r2, #9
 80198ca:	d03e      	beq.n	801994a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80198cc:	d801      	bhi.n	80198d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80198ce:	2a08      	cmp	r2, #8
 80198d0:	d1ae      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198d2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80198d4:	4770      	bx	lr
 80198d6:	2a2f      	cmp	r2, #47	; 0x2f
 80198d8:	d024      	beq.n	8019924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80198da:	d80d      	bhi.n	80198f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80198dc:	2a2d      	cmp	r2, #45	; 0x2d
 80198de:	d014      	beq.n	801990a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80198e0:	d826      	bhi.n	8019930 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80198e2:	2a2c      	cmp	r2, #44	; 0x2c
 80198e4:	d1a4      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198e6:	684b      	ldr	r3, [r1, #4]
 80198e8:	781b      	ldrb	r3, [r3, #0]
 80198ea:	2b01      	cmp	r3, #1
 80198ec:	d018      	beq.n	8019920 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80198ee:	d324      	bcc.n	801993a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80198f0:	2b02      	cmp	r3, #2
 80198f2:	d19d      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198f4:	68c0      	ldr	r0, [r0, #12]
 80198f6:	4770      	bx	lr
 80198f8:	2a31      	cmp	r2, #49	; 0x31
 80198fa:	d004      	beq.n	8019906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80198fc:	d327      	bcc.n	801994e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80198fe:	2a32      	cmp	r2, #50	; 0x32
 8019900:	d025      	beq.n	801994e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019902:	2a33      	cmp	r2, #51	; 0x33
 8019904:	d194      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019906:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019908:	4770      	bx	lr
 801990a:	684b      	ldr	r3, [r1, #4]
 801990c:	781b      	ldrb	r3, [r3, #0]
 801990e:	2b01      	cmp	r3, #1
 8019910:	d004      	beq.n	801991c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019912:	d30b      	bcc.n	801992c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019914:	2b02      	cmp	r3, #2
 8019916:	d18b      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019918:	6940      	ldr	r0, [r0, #20]
 801991a:	4770      	bx	lr
 801991c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801991e:	4770      	bx	lr
 8019920:	69c0      	ldr	r0, [r0, #28]
 8019922:	4770      	bx	lr
 8019924:	684b      	ldr	r3, [r1, #4]
 8019926:	781b      	ldrb	r3, [r3, #0]
 8019928:	2b00      	cmp	r3, #0
 801992a:	d181      	bne.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801992c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801992e:	4770      	bx	lr
 8019930:	684b      	ldr	r3, [r1, #4]
 8019932:	781b      	ldrb	r3, [r3, #0]
 8019934:	2b00      	cmp	r3, #0
 8019936:	f47f af7b 	bne.w	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801993a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801993c:	4770      	bx	lr
 801993e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019940:	4770      	bx	lr
 8019942:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019944:	4770      	bx	lr
 8019946:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019948:	4770      	bx	lr
 801994a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801994c:	4770      	bx	lr
 801994e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019950:	4770      	bx	lr

08019952 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019952:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019956:	b087      	sub	sp, #28
 8019958:	9815      	ldr	r0, [sp, #84]	; 0x54
 801995a:	9205      	str	r2, [sp, #20]
 801995c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019960:	9202      	str	r2, [sp, #8]
 8019962:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019966:	9101      	str	r1, [sp, #4]
 8019968:	6841      	ldr	r1, [r0, #4]
 801996a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801996e:	fb01 2404 	mla	r4, r1, r4, r2
 8019972:	6802      	ldr	r2, [r0, #0]
 8019974:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019978:	f8de 2000 	ldr.w	r2, [lr]
 801997c:	9203      	str	r2, [sp, #12]
 801997e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019982:	3204      	adds	r2, #4
 8019984:	9204      	str	r2, [sp, #16]
 8019986:	9a02      	ldr	r2, [sp, #8]
 8019988:	43d6      	mvns	r6, r2
 801998a:	b2f6      	uxtb	r6, r6
 801998c:	9a01      	ldr	r2, [sp, #4]
 801998e:	2a00      	cmp	r2, #0
 8019990:	dc03      	bgt.n	801999a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019992:	9a05      	ldr	r2, [sp, #20]
 8019994:	2a00      	cmp	r2, #0
 8019996:	f340 8129 	ble.w	8019bec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801999a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801999c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80199a0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80199a4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80199a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80199aa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80199ae:	2b00      	cmp	r3, #0
 80199b0:	dd0e      	ble.n	80199d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80199b2:	1408      	asrs	r0, r1, #16
 80199b4:	d405      	bmi.n	80199c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80199b6:	4560      	cmp	r0, ip
 80199b8:	da03      	bge.n	80199c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80199ba:	1410      	asrs	r0, r2, #16
 80199bc:	d401      	bmi.n	80199c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80199be:	42b8      	cmp	r0, r7
 80199c0:	db07      	blt.n	80199d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80199c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80199c4:	4401      	add	r1, r0
 80199c6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80199c8:	3b01      	subs	r3, #1
 80199ca:	4402      	add	r2, r0
 80199cc:	3402      	adds	r4, #2
 80199ce:	e7ee      	b.n	80199ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80199d0:	d071      	beq.n	8019ab6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80199d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80199d4:	1e58      	subs	r0, r3, #1
 80199d6:	fb05 1500 	mla	r5, r5, r0, r1
 80199da:	142d      	asrs	r5, r5, #16
 80199dc:	d45f      	bmi.n	8019a9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80199de:	4565      	cmp	r5, ip
 80199e0:	da5d      	bge.n	8019a9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80199e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80199e4:	fb05 2000 	mla	r0, r5, r0, r2
 80199e8:	1400      	asrs	r0, r0, #16
 80199ea:	d458      	bmi.n	8019a9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80199ec:	42b8      	cmp	r0, r7
 80199ee:	da56      	bge.n	8019a9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80199f0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80199f4:	4699      	mov	r9, r3
 80199f6:	46a2      	mov	sl, r4
 80199f8:	f1b9 0f00 	cmp.w	r9, #0
 80199fc:	dd57      	ble.n	8019aae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80199fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019a02:	9803      	ldr	r0, [sp, #12]
 8019a04:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019a08:	140d      	asrs	r5, r1, #16
 8019a0a:	fb07 000c 	mla	r0, r7, ip, r0
 8019a0e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019a12:	5d40      	ldrb	r0, [r0, r5]
 8019a14:	9d04      	ldr	r5, [sp, #16]
 8019a16:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019a1a:	f8ba 5000 	ldrh.w	r5, [sl]
 8019a1e:	122f      	asrs	r7, r5, #8
 8019a20:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019a24:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019a28:	fb17 f706 	smulbb	r7, r7, r6
 8019a2c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019a30:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019a34:	00ed      	lsls	r5, r5, #3
 8019a36:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019a3a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019a3e:	10c7      	asrs	r7, r0, #3
 8019a40:	b2ed      	uxtb	r5, r5
 8019a42:	00c0      	lsls	r0, r0, #3
 8019a44:	fb18 f806 	smulbb	r8, r8, r6
 8019a48:	fb15 f506 	smulbb	r5, r5, r6
 8019a4c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019a50:	b2c0      	uxtb	r0, r0
 8019a52:	fa1f fc8c 	uxth.w	ip, ip
 8019a56:	fb07 870b 	mla	r7, r7, fp, r8
 8019a5a:	fb00 500b 	mla	r0, r0, fp, r5
 8019a5e:	b280      	uxth	r0, r0
 8019a60:	b2bf      	uxth	r7, r7
 8019a62:	f10c 0501 	add.w	r5, ip, #1
 8019a66:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019a6a:	f107 0801 	add.w	r8, r7, #1
 8019a6e:	1c45      	adds	r5, r0, #1
 8019a70:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019a74:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019a78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019a7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019a7e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019a82:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019a86:	ea45 0c0c 	orr.w	ip, r5, ip
 8019a8a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019a8e:	4401      	add	r1, r0
 8019a90:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019a92:	ea4c 0c08 	orr.w	ip, ip, r8
 8019a96:	f82a cb02 	strh.w	ip, [sl], #2
 8019a9a:	4402      	add	r2, r0
 8019a9c:	e7ac      	b.n	80199f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019a9e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019aa2:	f04f 0800 	mov.w	r8, #0
 8019aa6:	eb03 0008 	add.w	r0, r3, r8
 8019aaa:	2800      	cmp	r0, #0
 8019aac:	dc41      	bgt.n	8019b32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019aae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ab2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019ab6:	9b01      	ldr	r3, [sp, #4]
 8019ab8:	2b00      	cmp	r3, #0
 8019aba:	f340 8097 	ble.w	8019bec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019abe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019ac2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019ac6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019aca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019acc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ad0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ad4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ad8:	eef0 6a62 	vmov.f32	s13, s5
 8019adc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ae0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ae4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ae8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019aec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019af0:	eef0 6a43 	vmov.f32	s13, s6
 8019af4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019af8:	ee12 2a90 	vmov	r2, s5
 8019afc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b00:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b04:	ee13 2a10 	vmov	r2, s6
 8019b08:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b10:	9314      	str	r3, [sp, #80]	; 0x50
 8019b12:	9b01      	ldr	r3, [sp, #4]
 8019b14:	9a05      	ldr	r2, [sp, #20]
 8019b16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b1a:	3b01      	subs	r3, #1
 8019b1c:	9301      	str	r3, [sp, #4]
 8019b1e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019b22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b24:	eeb0 3a67 	vmov.f32	s6, s15
 8019b28:	bf08      	it	eq
 8019b2a:	4613      	moveq	r3, r2
 8019b2c:	eef0 2a47 	vmov.f32	s5, s14
 8019b30:	e72c      	b.n	801998c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019b32:	140f      	asrs	r7, r1, #16
 8019b34:	d453      	bmi.n	8019bde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019b36:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019b3a:	42bd      	cmp	r5, r7
 8019b3c:	dd4f      	ble.n	8019bde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019b3e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019b42:	d44c      	bmi.n	8019bde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019b44:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019b48:	4560      	cmp	r0, ip
 8019b4a:	dd48      	ble.n	8019bde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019b4c:	9803      	ldr	r0, [sp, #12]
 8019b4e:	b22d      	sxth	r5, r5
 8019b50:	fb0c 0505 	mla	r5, ip, r5, r0
 8019b54:	5de8      	ldrb	r0, [r5, r7]
 8019b56:	9d04      	ldr	r5, [sp, #16]
 8019b58:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019b5c:	f06f 0501 	mvn.w	r5, #1
 8019b60:	fb05 fb08 	mul.w	fp, r5, r8
 8019b64:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019b68:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019b6c:	122f      	asrs	r7, r5, #8
 8019b6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b72:	fb17 f706 	smulbb	r7, r7, r6
 8019b76:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019b7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b7e:	00ed      	lsls	r5, r5, #3
 8019b80:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019b84:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019b88:	10c7      	asrs	r7, r0, #3
 8019b8a:	b2ed      	uxtb	r5, r5
 8019b8c:	00c0      	lsls	r0, r0, #3
 8019b8e:	fb19 f906 	smulbb	r9, r9, r6
 8019b92:	fb15 f506 	smulbb	r5, r5, r6
 8019b96:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b9a:	b2c0      	uxtb	r0, r0
 8019b9c:	fa1f fc8c 	uxth.w	ip, ip
 8019ba0:	fb07 970a 	mla	r7, r7, sl, r9
 8019ba4:	fb00 500a 	mla	r0, r0, sl, r5
 8019ba8:	b2bf      	uxth	r7, r7
 8019baa:	b280      	uxth	r0, r0
 8019bac:	f10c 0501 	add.w	r5, ip, #1
 8019bb0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019bb4:	f107 0901 	add.w	r9, r7, #1
 8019bb8:	1c45      	adds	r5, r0, #1
 8019bba:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019bbe:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019bc2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019bc6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019bca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019bce:	ea45 0c0c 	orr.w	ip, r5, ip
 8019bd2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019bd6:	ea4c 0c09 	orr.w	ip, ip, r9
 8019bda:	f824 c00b 	strh.w	ip, [r4, fp]
 8019bde:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019be0:	4401      	add	r1, r0
 8019be2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019be4:	f108 38ff 	add.w	r8, r8, #4294967295
 8019be8:	4402      	add	r2, r0
 8019bea:	e75c      	b.n	8019aa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019bec:	b007      	add	sp, #28
 8019bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019bf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bf6:	b085      	sub	sp, #20
 8019bf8:	4693      	mov	fp, r2
 8019bfa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019bfc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019bfe:	6870      	ldr	r0, [r6, #4]
 8019c00:	9100      	str	r1, [sp, #0]
 8019c02:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019c06:	fb00 2404 	mla	r4, r0, r4, r2
 8019c0a:	6832      	ldr	r2, [r6, #0]
 8019c0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c10:	682a      	ldr	r2, [r5, #0]
 8019c12:	9201      	str	r2, [sp, #4]
 8019c14:	686a      	ldr	r2, [r5, #4]
 8019c16:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019c1a:	3204      	adds	r2, #4
 8019c1c:	9202      	str	r2, [sp, #8]
 8019c1e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019c22:	9a00      	ldr	r2, [sp, #0]
 8019c24:	2a00      	cmp	r2, #0
 8019c26:	dc03      	bgt.n	8019c30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019c28:	f1bb 0f00 	cmp.w	fp, #0
 8019c2c:	f340 80a0 	ble.w	8019d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019c30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c32:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019c36:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019c3a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019c3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019c40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019c44:	2b00      	cmp	r3, #0
 8019c46:	dd0c      	ble.n	8019c62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019c48:	1406      	asrs	r6, r0, #16
 8019c4a:	d405      	bmi.n	8019c58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c4c:	454e      	cmp	r6, r9
 8019c4e:	da03      	bge.n	8019c58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c50:	1416      	asrs	r6, r2, #16
 8019c52:	d401      	bmi.n	8019c58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c54:	4546      	cmp	r6, r8
 8019c56:	db05      	blt.n	8019c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c58:	4470      	add	r0, lr
 8019c5a:	4462      	add	r2, ip
 8019c5c:	3b01      	subs	r3, #1
 8019c5e:	3402      	adds	r4, #2
 8019c60:	e7f0      	b.n	8019c44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019c62:	d00f      	beq.n	8019c84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019c64:	1e5e      	subs	r6, r3, #1
 8019c66:	fb0e 0706 	mla	r7, lr, r6, r0
 8019c6a:	143f      	asrs	r7, r7, #16
 8019c6c:	d541      	bpl.n	8019cf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019c6e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019c72:	4698      	mov	r8, r3
 8019c74:	9603      	str	r6, [sp, #12]
 8019c76:	f1b8 0f00 	cmp.w	r8, #0
 8019c7a:	dc59      	bgt.n	8019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019c7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019c80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019c84:	9b00      	ldr	r3, [sp, #0]
 8019c86:	2b00      	cmp	r3, #0
 8019c88:	dd72      	ble.n	8019d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019c8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ca0:	eeb0 6a62 	vmov.f32	s12, s5
 8019ca4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ca8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019cac:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cb0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019cb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019cb8:	eeb0 6a43 	vmov.f32	s12, s6
 8019cbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019cc0:	ee12 2a90 	vmov	r2, s5
 8019cc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019cc8:	fb92 fef3 	sdiv	lr, r2, r3
 8019ccc:	ee13 2a10 	vmov	r2, s6
 8019cd0:	fb92 fcf3 	sdiv	ip, r2, r3
 8019cd4:	9b00      	ldr	r3, [sp, #0]
 8019cd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019cda:	3b01      	subs	r3, #1
 8019cdc:	9300      	str	r3, [sp, #0]
 8019cde:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019ce2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ce4:	eeb0 3a67 	vmov.f32	s6, s15
 8019ce8:	bf08      	it	eq
 8019cea:	465b      	moveq	r3, fp
 8019cec:	eef0 2a47 	vmov.f32	s5, s14
 8019cf0:	e797      	b.n	8019c22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019cf2:	454f      	cmp	r7, r9
 8019cf4:	dabb      	bge.n	8019c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019cf6:	fb0c 2606 	mla	r6, ip, r6, r2
 8019cfa:	1436      	asrs	r6, r6, #16
 8019cfc:	d4b7      	bmi.n	8019c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019cfe:	4546      	cmp	r6, r8
 8019d00:	dab5      	bge.n	8019c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d02:	461e      	mov	r6, r3
 8019d04:	46a0      	mov	r8, r4
 8019d06:	2e00      	cmp	r6, #0
 8019d08:	ddb8      	ble.n	8019c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019d0a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019d0e:	9901      	ldr	r1, [sp, #4]
 8019d10:	1417      	asrs	r7, r2, #16
 8019d12:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019d16:	fb0a 1707 	mla	r7, sl, r7, r1
 8019d1a:	9902      	ldr	r1, [sp, #8]
 8019d1c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019d20:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019d24:	f828 7b02 	strh.w	r7, [r8], #2
 8019d28:	4470      	add	r0, lr
 8019d2a:	4462      	add	r2, ip
 8019d2c:	3e01      	subs	r6, #1
 8019d2e:	e7ea      	b.n	8019d06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019d30:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019d34:	d417      	bmi.n	8019d66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019d36:	68ae      	ldr	r6, [r5, #8]
 8019d38:	454e      	cmp	r6, r9
 8019d3a:	dd14      	ble.n	8019d66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019d3c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019d40:	d411      	bmi.n	8019d66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019d42:	68ef      	ldr	r7, [r5, #12]
 8019d44:	4557      	cmp	r7, sl
 8019d46:	dd0e      	ble.n	8019d66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019d48:	9f01      	ldr	r7, [sp, #4]
 8019d4a:	b236      	sxth	r6, r6
 8019d4c:	fb0a 7606 	mla	r6, sl, r6, r7
 8019d50:	9f02      	ldr	r7, [sp, #8]
 8019d52:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019d56:	f06f 0101 	mvn.w	r1, #1
 8019d5a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019d5e:	fb01 f608 	mul.w	r6, r1, r8
 8019d62:	9903      	ldr	r1, [sp, #12]
 8019d64:	538f      	strh	r7, [r1, r6]
 8019d66:	4470      	add	r0, lr
 8019d68:	4462      	add	r2, ip
 8019d6a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d6e:	e782      	b.n	8019c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019d70:	b005      	add	sp, #20
 8019d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d7a:	b087      	sub	sp, #28
 8019d7c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019d7e:	9205      	str	r2, [sp, #20]
 8019d80:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019d84:	9203      	str	r2, [sp, #12]
 8019d86:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019d8a:	9102      	str	r1, [sp, #8]
 8019d8c:	6861      	ldr	r1, [r4, #4]
 8019d8e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019d92:	fb01 2000 	mla	r0, r1, r0, r2
 8019d96:	6822      	ldr	r2, [r4, #0]
 8019d98:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019d9c:	9200      	str	r2, [sp, #0]
 8019d9e:	f8dc 2000 	ldr.w	r2, [ip]
 8019da2:	9204      	str	r2, [sp, #16]
 8019da4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019da8:	3204      	adds	r2, #4
 8019daa:	9201      	str	r2, [sp, #4]
 8019dac:	9a03      	ldr	r2, [sp, #12]
 8019dae:	43d5      	mvns	r5, r2
 8019db0:	b2ed      	uxtb	r5, r5
 8019db2:	9a02      	ldr	r2, [sp, #8]
 8019db4:	2a00      	cmp	r2, #0
 8019db6:	dc03      	bgt.n	8019dc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019db8:	9a05      	ldr	r2, [sp, #20]
 8019dba:	2a00      	cmp	r2, #0
 8019dbc:	f340 812c 	ble.w	801a018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019dc0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019dc2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019dc6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019dca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019dce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019dd0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019dd4:	2b00      	cmp	r3, #0
 8019dd6:	dd10      	ble.n	8019dfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019dd8:	140c      	asrs	r4, r1, #16
 8019dda:	d405      	bmi.n	8019de8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ddc:	4574      	cmp	r4, lr
 8019dde:	da03      	bge.n	8019de8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019de0:	1414      	asrs	r4, r2, #16
 8019de2:	d401      	bmi.n	8019de8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019de4:	42bc      	cmp	r4, r7
 8019de6:	db09      	blt.n	8019dfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019de8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019dea:	9800      	ldr	r0, [sp, #0]
 8019dec:	4421      	add	r1, r4
 8019dee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019df0:	3002      	adds	r0, #2
 8019df2:	4422      	add	r2, r4
 8019df4:	3b01      	subs	r3, #1
 8019df6:	9000      	str	r0, [sp, #0]
 8019df8:	e7ec      	b.n	8019dd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019dfa:	d071      	beq.n	8019ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019dfc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019dfe:	1e5c      	subs	r4, r3, #1
 8019e00:	fb06 1604 	mla	r6, r6, r4, r1
 8019e04:	1436      	asrs	r6, r6, #16
 8019e06:	d45d      	bmi.n	8019ec4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e08:	4576      	cmp	r6, lr
 8019e0a:	da5b      	bge.n	8019ec4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e0c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019e0e:	fb06 2404 	mla	r4, r6, r4, r2
 8019e12:	1424      	asrs	r4, r4, #16
 8019e14:	d456      	bmi.n	8019ec4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e16:	42bc      	cmp	r4, r7
 8019e18:	da54      	bge.n	8019ec4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e1a:	f8dd 9000 	ldr.w	r9, [sp]
 8019e1e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019e22:	4698      	mov	r8, r3
 8019e24:	f1b8 0f00 	cmp.w	r8, #0
 8019e28:	dd54      	ble.n	8019ed4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019e2a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019e2e:	9804      	ldr	r0, [sp, #16]
 8019e30:	1414      	asrs	r4, r2, #16
 8019e32:	fb07 0404 	mla	r4, r7, r4, r0
 8019e36:	140e      	asrs	r6, r1, #16
 8019e38:	9801      	ldr	r0, [sp, #4]
 8019e3a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019e3e:	f8b9 4000 	ldrh.w	r4, [r9]
 8019e42:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019e46:	eb00 0b0e 	add.w	fp, r0, lr
 8019e4a:	1227      	asrs	r7, r4, #8
 8019e4c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019e50:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019e54:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019e58:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019e5a:	fb16 f60a 	smulbb	r6, r6, sl
 8019e5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e62:	fb07 6705 	mla	r7, r7, r5, r6
 8019e66:	10e6      	asrs	r6, r4, #3
 8019e68:	00e4      	lsls	r4, r4, #3
 8019e6a:	b2e4      	uxtb	r4, r4
 8019e6c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019e70:	fb14 f405 	smulbb	r4, r4, r5
 8019e74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019e78:	b2bf      	uxth	r7, r7
 8019e7a:	fb06 b605 	mla	r6, r6, r5, fp
 8019e7e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019e82:	b2b6      	uxth	r6, r6
 8019e84:	fa1f fe8e 	uxth.w	lr, lr
 8019e88:	1c7c      	adds	r4, r7, #1
 8019e8a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019e8e:	f106 0b01 	add.w	fp, r6, #1
 8019e92:	f10e 0401 	add.w	r4, lr, #1
 8019e96:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019e9a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019e9e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019ea2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019ea6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019eaa:	4327      	orrs	r7, r4
 8019eac:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019eb0:	4401      	add	r1, r0
 8019eb2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019eb4:	ea47 070b 	orr.w	r7, r7, fp
 8019eb8:	f829 7b02 	strh.w	r7, [r9], #2
 8019ebc:	4402      	add	r2, r0
 8019ebe:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ec2:	e7af      	b.n	8019e24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019ec4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019ec8:	f04f 0e00 	mov.w	lr, #0
 8019ecc:	eb03 040e 	add.w	r4, r3, lr
 8019ed0:	2c00      	cmp	r4, #0
 8019ed2:	dc43      	bgt.n	8019f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019ed4:	9a00      	ldr	r2, [sp, #0]
 8019ed6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019eda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ede:	9300      	str	r3, [sp, #0]
 8019ee0:	9b02      	ldr	r3, [sp, #8]
 8019ee2:	2b00      	cmp	r3, #0
 8019ee4:	f340 8098 	ble.w	801a018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019ee8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019eec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019ef0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019ef4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ef6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019efa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019efe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f02:	eef0 6a62 	vmov.f32	s13, s5
 8019f06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f12:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019f16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f1a:	eef0 6a43 	vmov.f32	s13, s6
 8019f1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f22:	ee12 2a90 	vmov	r2, s5
 8019f26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f2e:	ee13 2a10 	vmov	r2, s6
 8019f32:	9313      	str	r3, [sp, #76]	; 0x4c
 8019f34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f36:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f3a:	9314      	str	r3, [sp, #80]	; 0x50
 8019f3c:	9b02      	ldr	r3, [sp, #8]
 8019f3e:	9a05      	ldr	r2, [sp, #20]
 8019f40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f44:	3b01      	subs	r3, #1
 8019f46:	9302      	str	r3, [sp, #8]
 8019f48:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019f4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f4e:	eeb0 3a67 	vmov.f32	s6, s15
 8019f52:	bf08      	it	eq
 8019f54:	4613      	moveq	r3, r2
 8019f56:	eef0 2a47 	vmov.f32	s5, s14
 8019f5a:	e72a      	b.n	8019db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019f5c:	140f      	asrs	r7, r1, #16
 8019f5e:	d454      	bmi.n	801a00a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019f60:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019f64:	42be      	cmp	r6, r7
 8019f66:	dd50      	ble.n	801a00a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019f68:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019f6c:	d44d      	bmi.n	801a00a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019f6e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019f72:	4544      	cmp	r4, r8
 8019f74:	dd49      	ble.n	801a00a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019f76:	9c04      	ldr	r4, [sp, #16]
 8019f78:	b236      	sxth	r6, r6
 8019f7a:	fb08 4606 	mla	r6, r8, r6, r4
 8019f7e:	f06f 0001 	mvn.w	r0, #1
 8019f82:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019f86:	9c01      	ldr	r4, [sp, #4]
 8019f88:	fb00 fa0e 	mul.w	sl, r0, lr
 8019f8c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019f90:	9800      	ldr	r0, [sp, #0]
 8019f92:	eb04 0b08 	add.w	fp, r4, r8
 8019f96:	f830 400a 	ldrh.w	r4, [r0, sl]
 8019f9a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019f9e:	9801      	ldr	r0, [sp, #4]
 8019fa0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019fa4:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019fa8:	9800      	ldr	r0, [sp, #0]
 8019faa:	1227      	asrs	r7, r4, #8
 8019fac:	fb16 f609 	smulbb	r6, r6, r9
 8019fb0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019fb4:	fb07 6705 	mla	r7, r7, r5, r6
 8019fb8:	10e6      	asrs	r6, r4, #3
 8019fba:	00e4      	lsls	r4, r4, #3
 8019fbc:	b2e4      	uxtb	r4, r4
 8019fbe:	fb1b fb09 	smulbb	fp, fp, r9
 8019fc2:	fb14 f405 	smulbb	r4, r4, r5
 8019fc6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019fca:	b2bf      	uxth	r7, r7
 8019fcc:	fb06 b605 	mla	r6, r6, r5, fp
 8019fd0:	fb08 4809 	mla	r8, r8, r9, r4
 8019fd4:	b2b6      	uxth	r6, r6
 8019fd6:	fa1f f888 	uxth.w	r8, r8
 8019fda:	1c7c      	adds	r4, r7, #1
 8019fdc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019fe0:	f106 0b01 	add.w	fp, r6, #1
 8019fe4:	f108 0401 	add.w	r4, r8, #1
 8019fe8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019fec:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019ff0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019ff4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019ff8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019ffc:	4327      	orrs	r7, r4
 8019ffe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a002:	ea47 070b 	orr.w	r7, r7, fp
 801a006:	f820 700a 	strh.w	r7, [r0, sl]
 801a00a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a00c:	4401      	add	r1, r0
 801a00e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a010:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a014:	4402      	add	r2, r0
 801a016:	e759      	b.n	8019ecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a018:	b007      	add	sp, #28
 801a01a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a024:	b085      	sub	sp, #20
 801a026:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a02a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a02c:	9203      	str	r2, [sp, #12]
 801a02e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a032:	6870      	ldr	r0, [r6, #4]
 801a034:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a036:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a03a:	686f      	ldr	r7, [r5, #4]
 801a03c:	9101      	str	r1, [sp, #4]
 801a03e:	fb00 2404 	mla	r4, r0, r4, r2
 801a042:	6832      	ldr	r2, [r6, #0]
 801a044:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a048:	682a      	ldr	r2, [r5, #0]
 801a04a:	9202      	str	r2, [sp, #8]
 801a04c:	3704      	adds	r7, #4
 801a04e:	9a01      	ldr	r2, [sp, #4]
 801a050:	2a00      	cmp	r2, #0
 801a052:	dc03      	bgt.n	801a05c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a054:	9a03      	ldr	r2, [sp, #12]
 801a056:	2a00      	cmp	r2, #0
 801a058:	f340 80cc 	ble.w	801a1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a05c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a05e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a062:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a066:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a06a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a06c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a070:	2b00      	cmp	r3, #0
 801a072:	dd0d      	ble.n	801a090 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a074:	1406      	asrs	r6, r0, #16
 801a076:	d405      	bmi.n	801a084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a078:	454e      	cmp	r6, r9
 801a07a:	da03      	bge.n	801a084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a07c:	1416      	asrs	r6, r2, #16
 801a07e:	d401      	bmi.n	801a084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a080:	4546      	cmp	r6, r8
 801a082:	db06      	blt.n	801a092 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a084:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a086:	4460      	add	r0, ip
 801a088:	4432      	add	r2, r6
 801a08a:	3b01      	subs	r3, #1
 801a08c:	3402      	adds	r4, #2
 801a08e:	e7ef      	b.n	801a070 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a090:	d00f      	beq.n	801a0b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a092:	1e5e      	subs	r6, r3, #1
 801a094:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a098:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a09c:	d543      	bpl.n	801a126 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a09e:	4698      	mov	r8, r3
 801a0a0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a0a4:	f1b8 0f00 	cmp.w	r8, #0
 801a0a8:	dc71      	bgt.n	801a18e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a0aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a0ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a0b2:	9b01      	ldr	r3, [sp, #4]
 801a0b4:	2b00      	cmp	r3, #0
 801a0b6:	f340 809d 	ble.w	801a1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a0ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a0c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0d0:	eeb0 6a62 	vmov.f32	s12, s5
 801a0d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a0dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a0e0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a0e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a0e8:	eeb0 6a43 	vmov.f32	s12, s6
 801a0ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a0f0:	ee12 2a90 	vmov	r2, s5
 801a0f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a0f8:	fb92 fcf3 	sdiv	ip, r2, r3
 801a0fc:	ee13 2a10 	vmov	r2, s6
 801a100:	fb92 f3f3 	sdiv	r3, r2, r3
 801a104:	9312      	str	r3, [sp, #72]	; 0x48
 801a106:	9b01      	ldr	r3, [sp, #4]
 801a108:	9a03      	ldr	r2, [sp, #12]
 801a10a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a10e:	3b01      	subs	r3, #1
 801a110:	9301      	str	r3, [sp, #4]
 801a112:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a116:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a118:	eeb0 3a67 	vmov.f32	s6, s15
 801a11c:	bf08      	it	eq
 801a11e:	4613      	moveq	r3, r2
 801a120:	eef0 2a47 	vmov.f32	s5, s14
 801a124:	e793      	b.n	801a04e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a126:	45ce      	cmp	lr, r9
 801a128:	dab9      	bge.n	801a09e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a12a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a12c:	fb01 2606 	mla	r6, r1, r6, r2
 801a130:	1436      	asrs	r6, r6, #16
 801a132:	d4b4      	bmi.n	801a09e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a134:	4546      	cmp	r6, r8
 801a136:	dab2      	bge.n	801a09e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a138:	4698      	mov	r8, r3
 801a13a:	46a2      	mov	sl, r4
 801a13c:	f1b8 0f00 	cmp.w	r8, #0
 801a140:	ddb3      	ble.n	801a0aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a142:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a146:	9902      	ldr	r1, [sp, #8]
 801a148:	1416      	asrs	r6, r2, #16
 801a14a:	fb09 1606 	mla	r6, r9, r6, r1
 801a14e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a152:	492a      	ldr	r1, [pc, #168]	; (801a1fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a154:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a158:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a15c:	eb07 0b0e 	add.w	fp, r7, lr
 801a160:	4460      	add	r0, ip
 801a162:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a166:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a16a:	00f6      	lsls	r6, r6, #3
 801a16c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a170:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a174:	ea49 0606 	orr.w	r6, r9, r6
 801a178:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a17c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a17e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a182:	f82a 6b02 	strh.w	r6, [sl], #2
 801a186:	440a      	add	r2, r1
 801a188:	f108 38ff 	add.w	r8, r8, #4294967295
 801a18c:	e7d6      	b.n	801a13c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a18e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a192:	d429      	bmi.n	801a1e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a194:	68ae      	ldr	r6, [r5, #8]
 801a196:	454e      	cmp	r6, r9
 801a198:	dd26      	ble.n	801a1e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a19a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a19e:	d423      	bmi.n	801a1e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a1a0:	68e9      	ldr	r1, [r5, #12]
 801a1a2:	4559      	cmp	r1, fp
 801a1a4:	dd20      	ble.n	801a1e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a1a6:	9902      	ldr	r1, [sp, #8]
 801a1a8:	fa0f fe86 	sxth.w	lr, r6
 801a1ac:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a1b0:	f06f 0101 	mvn.w	r1, #1
 801a1b4:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a1b8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a1bc:	eb07 060e 	add.w	r6, r7, lr
 801a1c0:	fb01 f908 	mul.w	r9, r1, r8
 801a1c4:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a1c8:	7876      	ldrb	r6, [r6, #1]
 801a1ca:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a1ce:	00f6      	lsls	r6, r6, #3
 801a1d0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a1d4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a1d8:	ea4b 0606 	orr.w	r6, fp, r6
 801a1dc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a1e0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a1e4:	f82a 6009 	strh.w	r6, [sl, r9]
 801a1e8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a1ea:	4460      	add	r0, ip
 801a1ec:	440a      	add	r2, r1
 801a1ee:	f108 38ff 	add.w	r8, r8, #4294967295
 801a1f2:	e757      	b.n	801a0a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a1f4:	b005      	add	sp, #20
 801a1f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1fa:	bf00      	nop
 801a1fc:	fffff800 	.word	0xfffff800

0801a200 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a204:	b087      	sub	sp, #28
 801a206:	468b      	mov	fp, r1
 801a208:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a20a:	9204      	str	r2, [sp, #16]
 801a20c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a210:	9205      	str	r2, [sp, #20]
 801a212:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a216:	6841      	ldr	r1, [r0, #4]
 801a218:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a21c:	fb01 2404 	mla	r4, r1, r4, r2
 801a220:	6802      	ldr	r2, [r0, #0]
 801a222:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a226:	f8dc 2000 	ldr.w	r2, [ip]
 801a22a:	9201      	str	r2, [sp, #4]
 801a22c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a230:	3204      	adds	r2, #4
 801a232:	9202      	str	r2, [sp, #8]
 801a234:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a238:	f1bb 0f00 	cmp.w	fp, #0
 801a23c:	dc03      	bgt.n	801a246 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a23e:	9a04      	ldr	r2, [sp, #16]
 801a240:	2a00      	cmp	r2, #0
 801a242:	f340 8138 	ble.w	801a4b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a246:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a248:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a24c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a250:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a254:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a256:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a25a:	2b00      	cmp	r3, #0
 801a25c:	dd0e      	ble.n	801a27c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a25e:	1402      	asrs	r2, r0, #16
 801a260:	d405      	bmi.n	801a26e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a262:	42ba      	cmp	r2, r7
 801a264:	da03      	bge.n	801a26e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a266:	140a      	asrs	r2, r1, #16
 801a268:	d401      	bmi.n	801a26e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a26a:	42b2      	cmp	r2, r6
 801a26c:	db07      	blt.n	801a27e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a26e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a270:	4410      	add	r0, r2
 801a272:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a274:	3b01      	subs	r3, #1
 801a276:	4411      	add	r1, r2
 801a278:	3402      	adds	r4, #2
 801a27a:	e7ee      	b.n	801a25a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a27c:	d019      	beq.n	801a2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a27e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a280:	1e5a      	subs	r2, r3, #1
 801a282:	fb05 0502 	mla	r5, r5, r2, r0
 801a286:	142d      	asrs	r5, r5, #16
 801a288:	d409      	bmi.n	801a29e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a28a:	42bd      	cmp	r5, r7
 801a28c:	da07      	bge.n	801a29e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a28e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a290:	fb05 1202 	mla	r2, r5, r2, r1
 801a294:	1412      	asrs	r2, r2, #16
 801a296:	d402      	bmi.n	801a29e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a298:	42b2      	cmp	r2, r6
 801a29a:	f2c0 80ac 	blt.w	801a3f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a29e:	f04f 0e00 	mov.w	lr, #0
 801a2a2:	eb03 020e 	add.w	r2, r3, lr
 801a2a6:	2a00      	cmp	r2, #0
 801a2a8:	dc3e      	bgt.n	801a328 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a2aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a2b2:	f1bb 0f00 	cmp.w	fp, #0
 801a2b6:	f340 80fe 	ble.w	801a4b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a2ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a2c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a2c8:	f1bb 0b01 	subs.w	fp, fp, #1
 801a2cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a2d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a2d4:	eeb0 6a62 	vmov.f32	s12, s5
 801a2d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a2dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a2e4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a2e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2ec:	eeb0 6a43 	vmov.f32	s12, s6
 801a2f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2f4:	ee12 2a90 	vmov	r2, s5
 801a2f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a300:	ee13 2a10 	vmov	r2, s6
 801a304:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a308:	9313      	str	r3, [sp, #76]	; 0x4c
 801a30a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a30c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a310:	9a04      	ldr	r2, [sp, #16]
 801a312:	9314      	str	r3, [sp, #80]	; 0x50
 801a314:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a318:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a31a:	eeb0 3a67 	vmov.f32	s6, s15
 801a31e:	bf08      	it	eq
 801a320:	4613      	moveq	r3, r2
 801a322:	eef0 2a47 	vmov.f32	s5, s14
 801a326:	e787      	b.n	801a238 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a328:	1406      	asrs	r6, r0, #16
 801a32a:	d45d      	bmi.n	801a3e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a32c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a330:	42b5      	cmp	r5, r6
 801a332:	dd59      	ble.n	801a3e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a334:	140f      	asrs	r7, r1, #16
 801a336:	d457      	bmi.n	801a3e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a338:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a33c:	42ba      	cmp	r2, r7
 801a33e:	dd53      	ble.n	801a3e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a340:	9a01      	ldr	r2, [sp, #4]
 801a342:	b22d      	sxth	r5, r5
 801a344:	fb07 2505 	mla	r5, r7, r5, r2
 801a348:	5daa      	ldrb	r2, [r5, r6]
 801a34a:	9d02      	ldr	r5, [sp, #8]
 801a34c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a350:	0e2e      	lsrs	r6, r5, #24
 801a352:	d049      	beq.n	801a3e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a354:	f06f 0201 	mvn.w	r2, #1
 801a358:	fb02 f20e 	mul.w	r2, r2, lr
 801a35c:	9203      	str	r2, [sp, #12]
 801a35e:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a362:	9a05      	ldr	r2, [sp, #20]
 801a364:	4356      	muls	r6, r2
 801a366:	1c72      	adds	r2, r6, #1
 801a368:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a36c:	1212      	asrs	r2, r2, #8
 801a36e:	fa1f f982 	uxth.w	r9, r2
 801a372:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a376:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a37a:	43d2      	mvns	r2, r2
 801a37c:	b2d2      	uxtb	r2, r2
 801a37e:	fb16 f609 	smulbb	r6, r6, r9
 801a382:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a386:	fb07 6702 	mla	r7, r7, r2, r6
 801a38a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a38e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a392:	b2ed      	uxtb	r5, r5
 801a394:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a398:	fa5f f888 	uxtb.w	r8, r8
 801a39c:	fb15 f509 	smulbb	r5, r5, r9
 801a3a0:	fb08 5502 	mla	r5, r8, r2, r5
 801a3a4:	b2bf      	uxth	r7, r7
 801a3a6:	fb1a fa09 	smulbb	sl, sl, r9
 801a3aa:	b2ad      	uxth	r5, r5
 801a3ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a3b0:	fb06 a602 	mla	r6, r6, r2, sl
 801a3b4:	1c7a      	adds	r2, r7, #1
 801a3b6:	f105 0a01 	add.w	sl, r5, #1
 801a3ba:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a3be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a3c2:	b2b6      	uxth	r6, r6
 801a3c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a3c8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a3cc:	ea4a 0707 	orr.w	r7, sl, r7
 801a3d0:	f106 0a01 	add.w	sl, r6, #1
 801a3d4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a3d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a3dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a3e0:	9a03      	ldr	r2, [sp, #12]
 801a3e2:	ea47 070a 	orr.w	r7, r7, sl
 801a3e6:	52a7      	strh	r7, [r4, r2]
 801a3e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a3ea:	4410      	add	r0, r2
 801a3ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3ee:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a3f2:	4411      	add	r1, r2
 801a3f4:	e755      	b.n	801a2a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a3f6:	f04f 0800 	mov.w	r8, #0
 801a3fa:	eba3 0208 	sub.w	r2, r3, r8
 801a3fe:	2a00      	cmp	r2, #0
 801a400:	f77f af53 	ble.w	801a2aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a404:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a408:	9f01      	ldr	r7, [sp, #4]
 801a40a:	140a      	asrs	r2, r1, #16
 801a40c:	1405      	asrs	r5, r0, #16
 801a40e:	fb06 7202 	mla	r2, r6, r2, r7
 801a412:	5d52      	ldrb	r2, [r2, r5]
 801a414:	9d02      	ldr	r5, [sp, #8]
 801a416:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a41a:	0e2e      	lsrs	r6, r5, #24
 801a41c:	d044      	beq.n	801a4a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a41e:	9a05      	ldr	r2, [sp, #20]
 801a420:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a424:	4356      	muls	r6, r2
 801a426:	1c72      	adds	r2, r6, #1
 801a428:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a42c:	1212      	asrs	r2, r2, #8
 801a42e:	fa1f f982 	uxth.w	r9, r2
 801a432:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a436:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a43a:	43d2      	mvns	r2, r2
 801a43c:	b2d2      	uxtb	r2, r2
 801a43e:	fb16 f609 	smulbb	r6, r6, r9
 801a442:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a446:	fb07 6702 	mla	r7, r7, r2, r6
 801a44a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a44e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a452:	b2ed      	uxtb	r5, r5
 801a454:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a458:	fa5f fe8e 	uxtb.w	lr, lr
 801a45c:	fb15 f509 	smulbb	r5, r5, r9
 801a460:	fb0e 5502 	mla	r5, lr, r2, r5
 801a464:	b2bf      	uxth	r7, r7
 801a466:	fb1a fa09 	smulbb	sl, sl, r9
 801a46a:	b2ad      	uxth	r5, r5
 801a46c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a470:	fb06 a602 	mla	r6, r6, r2, sl
 801a474:	1c7a      	adds	r2, r7, #1
 801a476:	f105 0a01 	add.w	sl, r5, #1
 801a47a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a47e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a482:	b2b6      	uxth	r6, r6
 801a484:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a488:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a48c:	ea4a 0707 	orr.w	r7, sl, r7
 801a490:	f106 0a01 	add.w	sl, r6, #1
 801a494:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a498:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a49c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a4a0:	ea47 070a 	orr.w	r7, r7, sl
 801a4a4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a4a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4aa:	4410      	add	r0, r2
 801a4ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4ae:	f108 0801 	add.w	r8, r8, #1
 801a4b2:	4411      	add	r1, r2
 801a4b4:	e7a1      	b.n	801a3fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a4b6:	b007      	add	sp, #28
 801a4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4c0:	b085      	sub	sp, #20
 801a4c2:	468b      	mov	fp, r1
 801a4c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a4c6:	9203      	str	r2, [sp, #12]
 801a4c8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a4cc:	6841      	ldr	r1, [r0, #4]
 801a4ce:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a4d2:	fb01 2404 	mla	r4, r1, r4, r2
 801a4d6:	6802      	ldr	r2, [r0, #0]
 801a4d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a4dc:	f8de 2000 	ldr.w	r2, [lr]
 801a4e0:	9200      	str	r2, [sp, #0]
 801a4e2:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a4e6:	3204      	adds	r2, #4
 801a4e8:	9201      	str	r2, [sp, #4]
 801a4ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a4ee:	f1bb 0f00 	cmp.w	fp, #0
 801a4f2:	dc03      	bgt.n	801a4fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a4f4:	9a03      	ldr	r2, [sp, #12]
 801a4f6:	2a00      	cmp	r2, #0
 801a4f8:	f340 8153 	ble.w	801a7a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a4fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a4fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a502:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a506:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a50a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a50c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a510:	2b00      	cmp	r3, #0
 801a512:	dd0e      	ble.n	801a532 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a514:	1408      	asrs	r0, r1, #16
 801a516:	d405      	bmi.n	801a524 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a518:	42b8      	cmp	r0, r7
 801a51a:	da03      	bge.n	801a524 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a51c:	1410      	asrs	r0, r2, #16
 801a51e:	d401      	bmi.n	801a524 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a520:	42b0      	cmp	r0, r6
 801a522:	db07      	blt.n	801a534 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a524:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a526:	4401      	add	r1, r0
 801a528:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a52a:	3b01      	subs	r3, #1
 801a52c:	4402      	add	r2, r0
 801a52e:	3402      	adds	r4, #2
 801a530:	e7ee      	b.n	801a510 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a532:	d017      	beq.n	801a564 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a534:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a536:	1e58      	subs	r0, r3, #1
 801a538:	fb05 1500 	mla	r5, r5, r0, r1
 801a53c:	142d      	asrs	r5, r5, #16
 801a53e:	d409      	bmi.n	801a554 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a540:	42bd      	cmp	r5, r7
 801a542:	da07      	bge.n	801a554 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a544:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a546:	fb05 2000 	mla	r0, r5, r0, r2
 801a54a:	1400      	asrs	r0, r0, #16
 801a54c:	d402      	bmi.n	801a554 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a54e:	42b0      	cmp	r0, r6
 801a550:	f2c0 80bc 	blt.w	801a6cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a554:	2600      	movs	r6, #0
 801a556:	1998      	adds	r0, r3, r6
 801a558:	2800      	cmp	r0, #0
 801a55a:	dc3e      	bgt.n	801a5da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a55c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a560:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a564:	f1bb 0f00 	cmp.w	fp, #0
 801a568:	f340 811b 	ble.w	801a7a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a56c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a570:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a574:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a578:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a57a:	f1bb 0b01 	subs.w	fp, fp, #1
 801a57e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a582:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a586:	eeb0 6a62 	vmov.f32	s12, s5
 801a58a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a58e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a592:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a596:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a59a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a59e:	eeb0 6a43 	vmov.f32	s12, s6
 801a5a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a5a6:	ee12 2a90 	vmov	r2, s5
 801a5aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a5ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5b2:	ee13 2a10 	vmov	r2, s6
 801a5b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5ba:	9311      	str	r3, [sp, #68]	; 0x44
 801a5bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5be:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5c2:	9a03      	ldr	r2, [sp, #12]
 801a5c4:	9312      	str	r3, [sp, #72]	; 0x48
 801a5c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a5ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5cc:	eeb0 3a67 	vmov.f32	s6, s15
 801a5d0:	bf08      	it	eq
 801a5d2:	4613      	moveq	r3, r2
 801a5d4:	eef0 2a47 	vmov.f32	s5, s14
 801a5d8:	e789      	b.n	801a4ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a5da:	140f      	asrs	r7, r1, #16
 801a5dc:	d426      	bmi.n	801a62c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a5de:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a5e2:	42bd      	cmp	r5, r7
 801a5e4:	dd22      	ble.n	801a62c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a5e6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a5ea:	d41f      	bmi.n	801a62c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a5ec:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a5f0:	4560      	cmp	r0, ip
 801a5f2:	dd1b      	ble.n	801a62c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a5f4:	9800      	ldr	r0, [sp, #0]
 801a5f6:	b22d      	sxth	r5, r5
 801a5f8:	fb0c 0505 	mla	r5, ip, r5, r0
 801a5fc:	5de8      	ldrb	r0, [r5, r7]
 801a5fe:	9d01      	ldr	r5, [sp, #4]
 801a600:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a604:	0e07      	lsrs	r7, r0, #24
 801a606:	2fff      	cmp	r7, #255	; 0xff
 801a608:	d116      	bne.n	801a638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a60a:	f06f 0501 	mvn.w	r5, #1
 801a60e:	fb05 f706 	mul.w	r7, r5, r6
 801a612:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a616:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a61a:	0945      	lsrs	r5, r0, #5
 801a61c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a620:	ea4c 0505 	orr.w	r5, ip, r5
 801a624:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a628:	4305      	orrs	r5, r0
 801a62a:	53e5      	strh	r5, [r4, r7]
 801a62c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a62e:	4401      	add	r1, r0
 801a630:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a632:	3e01      	subs	r6, #1
 801a634:	4402      	add	r2, r0
 801a636:	e78e      	b.n	801a556 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a638:	b2fd      	uxtb	r5, r7
 801a63a:	2f00      	cmp	r7, #0
 801a63c:	d0f6      	beq.n	801a62c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a63e:	f06f 0701 	mvn.w	r7, #1
 801a642:	4377      	muls	r7, r6
 801a644:	fa1f f985 	uxth.w	r9, r5
 801a648:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a64c:	9702      	str	r7, [sp, #8]
 801a64e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a652:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a656:	43ed      	mvns	r5, r5
 801a658:	b2ed      	uxtb	r5, r5
 801a65a:	fb17 f709 	smulbb	r7, r7, r9
 801a65e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a662:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a666:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a66a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a66e:	b2c0      	uxtb	r0, r0
 801a670:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a674:	fa5f f888 	uxtb.w	r8, r8
 801a678:	fb10 f009 	smulbb	r0, r0, r9
 801a67c:	fb08 0005 	mla	r0, r8, r5, r0
 801a680:	b280      	uxth	r0, r0
 801a682:	fa1f fc8c 	uxth.w	ip, ip
 801a686:	fb1a fa09 	smulbb	sl, sl, r9
 801a68a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a68e:	fb07 a705 	mla	r7, r7, r5, sl
 801a692:	f100 0a01 	add.w	sl, r0, #1
 801a696:	f10c 0501 	add.w	r5, ip, #1
 801a69a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a69e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a6a2:	b2bf      	uxth	r7, r7
 801a6a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a6ac:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a6b0:	f107 0a01 	add.w	sl, r7, #1
 801a6b4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a6b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a6c0:	9802      	ldr	r0, [sp, #8]
 801a6c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a6c6:	f824 c000 	strh.w	ip, [r4, r0]
 801a6ca:	e7af      	b.n	801a62c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a6cc:	f04f 0800 	mov.w	r8, #0
 801a6d0:	eba3 0008 	sub.w	r0, r3, r8
 801a6d4:	2800      	cmp	r0, #0
 801a6d6:	f77f af41 	ble.w	801a55c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a6da:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a6de:	9f00      	ldr	r7, [sp, #0]
 801a6e0:	1410      	asrs	r0, r2, #16
 801a6e2:	140d      	asrs	r5, r1, #16
 801a6e4:	fb06 7000 	mla	r0, r6, r0, r7
 801a6e8:	5d40      	ldrb	r0, [r0, r5]
 801a6ea:	9d01      	ldr	r5, [sp, #4]
 801a6ec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a6f0:	0e2e      	lsrs	r6, r5, #24
 801a6f2:	2eff      	cmp	r6, #255	; 0xff
 801a6f4:	d112      	bne.n	801a71c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a6f6:	482c      	ldr	r0, [pc, #176]	; (801a7a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a6f8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a6fc:	0968      	lsrs	r0, r5, #5
 801a6fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a702:	4330      	orrs	r0, r6
 801a704:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a708:	4328      	orrs	r0, r5
 801a70a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a70e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a710:	4401      	add	r1, r0
 801a712:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a714:	f108 0801 	add.w	r8, r8, #1
 801a718:	4402      	add	r2, r0
 801a71a:	e7d9      	b.n	801a6d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a71c:	b2f0      	uxtb	r0, r6
 801a71e:	2e00      	cmp	r6, #0
 801a720:	d0f5      	beq.n	801a70e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a722:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a726:	fa1f f980 	uxth.w	r9, r0
 801a72a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a72e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a732:	43c0      	mvns	r0, r0
 801a734:	b2c0      	uxtb	r0, r0
 801a736:	fb16 f609 	smulbb	r6, r6, r9
 801a73a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a73e:	fb07 6700 	mla	r7, r7, r0, r6
 801a742:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a746:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a74a:	b2ed      	uxtb	r5, r5
 801a74c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a750:	fa5f fc8c 	uxtb.w	ip, ip
 801a754:	fb15 f509 	smulbb	r5, r5, r9
 801a758:	fb0c 5500 	mla	r5, ip, r0, r5
 801a75c:	b2bf      	uxth	r7, r7
 801a75e:	fb1a fa09 	smulbb	sl, sl, r9
 801a762:	b2ad      	uxth	r5, r5
 801a764:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a768:	fb06 a600 	mla	r6, r6, r0, sl
 801a76c:	1c78      	adds	r0, r7, #1
 801a76e:	f105 0a01 	add.w	sl, r5, #1
 801a772:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a776:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a77a:	b2b6      	uxth	r6, r6
 801a77c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a780:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a784:	ea4a 0707 	orr.w	r7, sl, r7
 801a788:	f106 0a01 	add.w	sl, r6, #1
 801a78c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a790:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a794:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a798:	ea47 070a 	orr.w	r7, r7, sl
 801a79c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a7a0:	e7b5      	b.n	801a70e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a7a2:	b005      	add	sp, #20
 801a7a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7a8:	fffff800 	.word	0xfffff800

0801a7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7b0:	b087      	sub	sp, #28
 801a7b2:	468b      	mov	fp, r1
 801a7b4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a7b6:	9204      	str	r2, [sp, #16]
 801a7b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a7bc:	9205      	str	r2, [sp, #20]
 801a7be:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a7c2:	6861      	ldr	r1, [r4, #4]
 801a7c4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a7c8:	fb01 2000 	mla	r0, r1, r0, r2
 801a7cc:	6822      	ldr	r2, [r4, #0]
 801a7ce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a7d2:	f8de 2000 	ldr.w	r2, [lr]
 801a7d6:	9201      	str	r2, [sp, #4]
 801a7d8:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a7dc:	9202      	str	r2, [sp, #8]
 801a7de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a7e2:	f1bb 0f00 	cmp.w	fp, #0
 801a7e6:	dc03      	bgt.n	801a7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a7e8:	9a04      	ldr	r2, [sp, #16]
 801a7ea:	2a00      	cmp	r2, #0
 801a7ec:	f340 8142 	ble.w	801aa74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a7f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a7f2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a7f6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a7fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a7fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a800:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a804:	2b00      	cmp	r3, #0
 801a806:	dd0e      	ble.n	801a826 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a808:	140c      	asrs	r4, r1, #16
 801a80a:	d405      	bmi.n	801a818 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a80c:	42bc      	cmp	r4, r7
 801a80e:	da03      	bge.n	801a818 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a810:	1414      	asrs	r4, r2, #16
 801a812:	d401      	bmi.n	801a818 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a814:	42b4      	cmp	r4, r6
 801a816:	db07      	blt.n	801a828 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a818:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a81a:	4421      	add	r1, r4
 801a81c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a81e:	3b01      	subs	r3, #1
 801a820:	4422      	add	r2, r4
 801a822:	3002      	adds	r0, #2
 801a824:	e7ee      	b.n	801a804 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a826:	d019      	beq.n	801a85c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a828:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a82a:	1e5c      	subs	r4, r3, #1
 801a82c:	fb05 1504 	mla	r5, r5, r4, r1
 801a830:	142d      	asrs	r5, r5, #16
 801a832:	d409      	bmi.n	801a848 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a834:	42bd      	cmp	r5, r7
 801a836:	da07      	bge.n	801a848 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a838:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a83a:	fb05 2404 	mla	r4, r5, r4, r2
 801a83e:	1424      	asrs	r4, r4, #16
 801a840:	d402      	bmi.n	801a848 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a842:	42b4      	cmp	r4, r6
 801a844:	f2c0 80b1 	blt.w	801a9aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a848:	f04f 0800 	mov.w	r8, #0
 801a84c:	eb03 0408 	add.w	r4, r3, r8
 801a850:	2c00      	cmp	r4, #0
 801a852:	dc3e      	bgt.n	801a8d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a854:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a858:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a85c:	f1bb 0f00 	cmp.w	fp, #0
 801a860:	f340 8108 	ble.w	801aa74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a864:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a868:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a86c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a870:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a872:	f1bb 0b01 	subs.w	fp, fp, #1
 801a876:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a87a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a87e:	eeb0 6a62 	vmov.f32	s12, s5
 801a882:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a886:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a88a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a88e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a892:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a896:	eeb0 6a43 	vmov.f32	s12, s6
 801a89a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a89e:	ee12 2a90 	vmov	r2, s5
 801a8a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8aa:	ee13 2a10 	vmov	r2, s6
 801a8ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8b2:	9313      	str	r3, [sp, #76]	; 0x4c
 801a8b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8ba:	9a04      	ldr	r2, [sp, #16]
 801a8bc:	9314      	str	r3, [sp, #80]	; 0x50
 801a8be:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a8c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8c4:	eeb0 3a67 	vmov.f32	s6, s15
 801a8c8:	bf08      	it	eq
 801a8ca:	4613      	moveq	r3, r2
 801a8cc:	eef0 2a47 	vmov.f32	s5, s14
 801a8d0:	e787      	b.n	801a7e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a8d2:	140e      	asrs	r6, r1, #16
 801a8d4:	d462      	bmi.n	801a99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a8d6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a8da:	42b5      	cmp	r5, r6
 801a8dc:	dd5e      	ble.n	801a99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a8de:	1417      	asrs	r7, r2, #16
 801a8e0:	d45c      	bmi.n	801a99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a8e2:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a8e6:	42bc      	cmp	r4, r7
 801a8e8:	dd58      	ble.n	801a99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a8ea:	b22d      	sxth	r5, r5
 801a8ec:	fb07 6505 	mla	r5, r7, r5, r6
 801a8f0:	9c02      	ldr	r4, [sp, #8]
 801a8f2:	5d66      	ldrb	r6, [r4, r5]
 801a8f4:	2e00      	cmp	r6, #0
 801a8f6:	d051      	beq.n	801a99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a8f8:	9c01      	ldr	r4, [sp, #4]
 801a8fa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a8fe:	f06f 0401 	mvn.w	r4, #1
 801a902:	fb04 f408 	mul.w	r4, r4, r8
 801a906:	9403      	str	r4, [sp, #12]
 801a908:	5b05      	ldrh	r5, [r0, r4]
 801a90a:	9c05      	ldr	r4, [sp, #20]
 801a90c:	4366      	muls	r6, r4
 801a90e:	1c74      	adds	r4, r6, #1
 801a910:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a914:	1224      	asrs	r4, r4, #8
 801a916:	b2a7      	uxth	r7, r4
 801a918:	122e      	asrs	r6, r5, #8
 801a91a:	43e4      	mvns	r4, r4
 801a91c:	b2e4      	uxtb	r4, r4
 801a91e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a922:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a926:	fb16 f604 	smulbb	r6, r6, r4
 801a92a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a92e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a932:	00ed      	lsls	r5, r5, #3
 801a934:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a938:	b2ed      	uxtb	r5, r5
 801a93a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a93e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a942:	fb15 f504 	smulbb	r5, r5, r4
 801a946:	fa5f f989 	uxtb.w	r9, r9
 801a94a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a94e:	fb09 5507 	mla	r5, r9, r7, r5
 801a952:	fb1a fa04 	smulbb	sl, sl, r4
 801a956:	fa1f fc8c 	uxth.w	ip, ip
 801a95a:	b2ad      	uxth	r5, r5
 801a95c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a960:	fb06 a607 	mla	r6, r6, r7, sl
 801a964:	f10c 0401 	add.w	r4, ip, #1
 801a968:	f105 0a01 	add.w	sl, r5, #1
 801a96c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a970:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a974:	b2b6      	uxth	r6, r6
 801a976:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a97a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a97e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a982:	f106 0a01 	add.w	sl, r6, #1
 801a986:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a98a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a98e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a992:	9c03      	ldr	r4, [sp, #12]
 801a994:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a998:	f820 c004 	strh.w	ip, [r0, r4]
 801a99c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a99e:	4421      	add	r1, r4
 801a9a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a9a2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a9a6:	4422      	add	r2, r4
 801a9a8:	e750      	b.n	801a84c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9aa:	f04f 0900 	mov.w	r9, #0
 801a9ae:	eba3 0409 	sub.w	r4, r3, r9
 801a9b2:	2c00      	cmp	r4, #0
 801a9b4:	f77f af4e 	ble.w	801a854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a9b8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a9bc:	140d      	asrs	r5, r1, #16
 801a9be:	1414      	asrs	r4, r2, #16
 801a9c0:	fb06 5404 	mla	r4, r6, r4, r5
 801a9c4:	9d02      	ldr	r5, [sp, #8]
 801a9c6:	5d2e      	ldrb	r6, [r5, r4]
 801a9c8:	2e00      	cmp	r6, #0
 801a9ca:	d04c      	beq.n	801aa66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a9cc:	9d01      	ldr	r5, [sp, #4]
 801a9ce:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a9d2:	9c05      	ldr	r4, [sp, #20]
 801a9d4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a9d8:	4366      	muls	r6, r4
 801a9da:	1c74      	adds	r4, r6, #1
 801a9dc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a9e0:	1224      	asrs	r4, r4, #8
 801a9e2:	b2a7      	uxth	r7, r4
 801a9e4:	122e      	asrs	r6, r5, #8
 801a9e6:	43e4      	mvns	r4, r4
 801a9e8:	b2e4      	uxtb	r4, r4
 801a9ea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a9ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a9f2:	fb16 f604 	smulbb	r6, r6, r4
 801a9f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a9fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a9fe:	00ed      	lsls	r5, r5, #3
 801aa00:	fb0c 6c07 	mla	ip, ip, r7, r6
 801aa04:	b2ed      	uxtb	r5, r5
 801aa06:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801aa0a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801aa0e:	fb15 f504 	smulbb	r5, r5, r4
 801aa12:	fa5f f888 	uxtb.w	r8, r8
 801aa16:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aa1a:	fb08 5507 	mla	r5, r8, r7, r5
 801aa1e:	fb1a fa04 	smulbb	sl, sl, r4
 801aa22:	fa1f fc8c 	uxth.w	ip, ip
 801aa26:	b2ad      	uxth	r5, r5
 801aa28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa2c:	fb06 a607 	mla	r6, r6, r7, sl
 801aa30:	f10c 0401 	add.w	r4, ip, #1
 801aa34:	f105 0a01 	add.w	sl, r5, #1
 801aa38:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801aa3c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aa40:	b2b6      	uxth	r6, r6
 801aa42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa46:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aa4a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aa4e:	f106 0a01 	add.w	sl, r6, #1
 801aa52:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aa56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa5e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aa62:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801aa66:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa68:	4421      	add	r1, r4
 801aa6a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa6c:	f109 0901 	add.w	r9, r9, #1
 801aa70:	4422      	add	r2, r4
 801aa72:	e79c      	b.n	801a9ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801aa74:	b007      	add	sp, #28
 801aa76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa7e:	b085      	sub	sp, #20
 801aa80:	468b      	mov	fp, r1
 801aa82:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa84:	9203      	str	r2, [sp, #12]
 801aa86:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801aa8a:	6861      	ldr	r1, [r4, #4]
 801aa8c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801aa90:	fb01 2000 	mla	r0, r1, r0, r2
 801aa94:	6822      	ldr	r2, [r4, #0]
 801aa96:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801aa9a:	f8d8 2000 	ldr.w	r2, [r8]
 801aa9e:	9200      	str	r2, [sp, #0]
 801aaa0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801aaa4:	9201      	str	r2, [sp, #4]
 801aaa6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aaaa:	f1bb 0f00 	cmp.w	fp, #0
 801aaae:	dc03      	bgt.n	801aab8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801aab0:	9a03      	ldr	r2, [sp, #12]
 801aab2:	2a00      	cmp	r2, #0
 801aab4:	f340 8146 	ble.w	801ad44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801aab8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aaba:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801aabe:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801aac2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aac6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aac8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aacc:	2b00      	cmp	r3, #0
 801aace:	dd0e      	ble.n	801aaee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801aad0:	140c      	asrs	r4, r1, #16
 801aad2:	d405      	bmi.n	801aae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aad4:	42bc      	cmp	r4, r7
 801aad6:	da03      	bge.n	801aae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aad8:	1414      	asrs	r4, r2, #16
 801aada:	d401      	bmi.n	801aae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801aadc:	42b4      	cmp	r4, r6
 801aade:	db07      	blt.n	801aaf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801aae0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aae2:	4421      	add	r1, r4
 801aae4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aae6:	3b01      	subs	r3, #1
 801aae8:	4422      	add	r2, r4
 801aaea:	3002      	adds	r0, #2
 801aaec:	e7ee      	b.n	801aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801aaee:	d017      	beq.n	801ab20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801aaf0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aaf2:	1e5c      	subs	r4, r3, #1
 801aaf4:	fb05 1504 	mla	r5, r5, r4, r1
 801aaf8:	142d      	asrs	r5, r5, #16
 801aafa:	d409      	bmi.n	801ab10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aafc:	42bd      	cmp	r5, r7
 801aafe:	da07      	bge.n	801ab10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab00:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab02:	fb05 2404 	mla	r4, r5, r4, r2
 801ab06:	1424      	asrs	r4, r4, #16
 801ab08:	d402      	bmi.n	801ab10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab0a:	42b4      	cmp	r4, r6
 801ab0c:	f2c0 80b3 	blt.w	801ac76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ab10:	2600      	movs	r6, #0
 801ab12:	199c      	adds	r4, r3, r6
 801ab14:	2c00      	cmp	r4, #0
 801ab16:	dc3e      	bgt.n	801ab96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ab18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ab20:	f1bb 0f00 	cmp.w	fp, #0
 801ab24:	f340 810e 	ble.w	801ad44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ab28:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab30:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ab34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab36:	f1bb 0b01 	subs.w	fp, fp, #1
 801ab3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab42:	eeb0 6a62 	vmov.f32	s12, s5
 801ab46:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ab4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ab52:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ab56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ab5a:	eeb0 6a43 	vmov.f32	s12, s6
 801ab5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ab62:	ee12 2a90 	vmov	r2, s5
 801ab66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ab6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab6e:	ee13 2a10 	vmov	r2, s6
 801ab72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab76:	9311      	str	r3, [sp, #68]	; 0x44
 801ab78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab7e:	9a03      	ldr	r2, [sp, #12]
 801ab80:	9312      	str	r3, [sp, #72]	; 0x48
 801ab82:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ab86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab88:	eeb0 3a67 	vmov.f32	s6, s15
 801ab8c:	bf08      	it	eq
 801ab8e:	4613      	moveq	r3, r2
 801ab90:	eef0 2a47 	vmov.f32	s5, s14
 801ab94:	e789      	b.n	801aaaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ab96:	140f      	asrs	r7, r1, #16
 801ab98:	d418      	bmi.n	801abcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab9a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ab9e:	42bd      	cmp	r5, r7
 801aba0:	dd14      	ble.n	801abcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aba2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aba6:	d411      	bmi.n	801abcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aba8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801abac:	4564      	cmp	r4, ip
 801abae:	dd0d      	ble.n	801abcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801abb0:	b22d      	sxth	r5, r5
 801abb2:	fb0c 7505 	mla	r5, ip, r5, r7
 801abb6:	9c01      	ldr	r4, [sp, #4]
 801abb8:	5d64      	ldrb	r4, [r4, r5]
 801abba:	2cff      	cmp	r4, #255	; 0xff
 801abbc:	d10c      	bne.n	801abd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801abbe:	9c00      	ldr	r4, [sp, #0]
 801abc0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801abc4:	f06f 0401 	mvn.w	r4, #1
 801abc8:	4374      	muls	r4, r6
 801abca:	5305      	strh	r5, [r0, r4]
 801abcc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801abce:	4421      	add	r1, r4
 801abd0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801abd2:	3e01      	subs	r6, #1
 801abd4:	4422      	add	r2, r4
 801abd6:	e79c      	b.n	801ab12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801abd8:	2c00      	cmp	r4, #0
 801abda:	d0f7      	beq.n	801abcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801abdc:	9f00      	ldr	r7, [sp, #0]
 801abde:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801abe2:	f06f 0501 	mvn.w	r5, #1
 801abe6:	4375      	muls	r5, r6
 801abe8:	9502      	str	r5, [sp, #8]
 801abea:	5b45      	ldrh	r5, [r0, r5]
 801abec:	fa1f fc84 	uxth.w	ip, r4
 801abf0:	122f      	asrs	r7, r5, #8
 801abf2:	43e4      	mvns	r4, r4
 801abf4:	b2e4      	uxtb	r4, r4
 801abf6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801abfa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801abfe:	fb17 f704 	smulbb	r7, r7, r4
 801ac02:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac06:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ac0a:	00ed      	lsls	r5, r5, #3
 801ac0c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ac10:	b2ed      	uxtb	r5, r5
 801ac12:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ac16:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ac1a:	fb15 f504 	smulbb	r5, r5, r4
 801ac1e:	fa5f f989 	uxtb.w	r9, r9
 801ac22:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ac26:	fb09 550c 	mla	r5, r9, ip, r5
 801ac2a:	fb1a fa04 	smulbb	sl, sl, r4
 801ac2e:	fa1f fe8e 	uxth.w	lr, lr
 801ac32:	b2ad      	uxth	r5, r5
 801ac34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac38:	fb07 a70c 	mla	r7, r7, ip, sl
 801ac3c:	f10e 0401 	add.w	r4, lr, #1
 801ac40:	f105 0a01 	add.w	sl, r5, #1
 801ac44:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ac48:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac4c:	b2bf      	uxth	r7, r7
 801ac4e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac52:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ac56:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ac5a:	f107 0a01 	add.w	sl, r7, #1
 801ac5e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ac62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac6a:	9c02      	ldr	r4, [sp, #8]
 801ac6c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ac70:	f820 e004 	strh.w	lr, [r0, r4]
 801ac74:	e7aa      	b.n	801abcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac76:	f04f 0900 	mov.w	r9, #0
 801ac7a:	eba3 0409 	sub.w	r4, r3, r9
 801ac7e:	2c00      	cmp	r4, #0
 801ac80:	f77f af4a 	ble.w	801ab18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ac84:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ac88:	1414      	asrs	r4, r2, #16
 801ac8a:	140d      	asrs	r5, r1, #16
 801ac8c:	fb06 5504 	mla	r5, r6, r4, r5
 801ac90:	9c01      	ldr	r4, [sp, #4]
 801ac92:	5d64      	ldrb	r4, [r4, r5]
 801ac94:	2cff      	cmp	r4, #255	; 0xff
 801ac96:	d10b      	bne.n	801acb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ac98:	9c00      	ldr	r4, [sp, #0]
 801ac9a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ac9e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801aca2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aca4:	4421      	add	r1, r4
 801aca6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aca8:	f109 0901 	add.w	r9, r9, #1
 801acac:	4422      	add	r2, r4
 801acae:	e7e4      	b.n	801ac7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801acb0:	2c00      	cmp	r4, #0
 801acb2:	d0f6      	beq.n	801aca2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801acb4:	9e00      	ldr	r6, [sp, #0]
 801acb6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801acba:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801acbe:	b2a7      	uxth	r7, r4
 801acc0:	122e      	asrs	r6, r5, #8
 801acc2:	43e4      	mvns	r4, r4
 801acc4:	b2e4      	uxtb	r4, r4
 801acc6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801acca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801acce:	fb16 f604 	smulbb	r6, r6, r4
 801acd2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801acd6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801acda:	00ed      	lsls	r5, r5, #3
 801acdc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ace0:	b2ed      	uxtb	r5, r5
 801ace2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ace6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801acea:	fb15 f504 	smulbb	r5, r5, r4
 801acee:	fa5f fe8e 	uxtb.w	lr, lr
 801acf2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801acf6:	fb0e 5507 	mla	r5, lr, r7, r5
 801acfa:	fb1a fa04 	smulbb	sl, sl, r4
 801acfe:	fa1f fc8c 	uxth.w	ip, ip
 801ad02:	b2ad      	uxth	r5, r5
 801ad04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad08:	fb06 a607 	mla	r6, r6, r7, sl
 801ad0c:	f10c 0401 	add.w	r4, ip, #1
 801ad10:	f105 0a01 	add.w	sl, r5, #1
 801ad14:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ad18:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad1c:	b2b6      	uxth	r6, r6
 801ad1e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad22:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ad26:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ad2a:	f106 0a01 	add.w	sl, r6, #1
 801ad2e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ad32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad3a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ad3e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ad42:	e7ae      	b.n	801aca2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ad44:	b005      	add	sp, #20
 801ad46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ad4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad4e:	b085      	sub	sp, #20
 801ad50:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ad52:	9203      	str	r2, [sp, #12]
 801ad54:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ad58:	9201      	str	r2, [sp, #4]
 801ad5a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ad5e:	9100      	str	r1, [sp, #0]
 801ad60:	6841      	ldr	r1, [r0, #4]
 801ad62:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ad66:	fb01 2404 	mla	r4, r1, r4, r2
 801ad6a:	6802      	ldr	r2, [r0, #0]
 801ad6c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ad70:	f8de 2000 	ldr.w	r2, [lr]
 801ad74:	9202      	str	r2, [sp, #8]
 801ad76:	9a01      	ldr	r2, [sp, #4]
 801ad78:	43d6      	mvns	r6, r2
 801ad7a:	b2f6      	uxtb	r6, r6
 801ad7c:	9a00      	ldr	r2, [sp, #0]
 801ad7e:	2a00      	cmp	r2, #0
 801ad80:	dc03      	bgt.n	801ad8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ad82:	9a03      	ldr	r2, [sp, #12]
 801ad84:	2a00      	cmp	r2, #0
 801ad86:	f340 8124 	ble.w	801afd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ad8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad8c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ad90:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ad94:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad98:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad9a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad9e:	2b00      	cmp	r3, #0
 801ada0:	dd0e      	ble.n	801adc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ada2:	1408      	asrs	r0, r1, #16
 801ada4:	d405      	bmi.n	801adb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ada6:	4560      	cmp	r0, ip
 801ada8:	da03      	bge.n	801adb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801adaa:	1410      	asrs	r0, r2, #16
 801adac:	d401      	bmi.n	801adb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801adae:	42b8      	cmp	r0, r7
 801adb0:	db07      	blt.n	801adc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801adb2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801adb4:	4401      	add	r1, r0
 801adb6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801adb8:	3b01      	subs	r3, #1
 801adba:	4402      	add	r2, r0
 801adbc:	3402      	adds	r4, #2
 801adbe:	e7ee      	b.n	801ad9e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801adc0:	d06e      	beq.n	801aea0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801adc2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801adc4:	1e58      	subs	r0, r3, #1
 801adc6:	fb05 1500 	mla	r5, r5, r0, r1
 801adca:	142d      	asrs	r5, r5, #16
 801adcc:	d45c      	bmi.n	801ae88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801adce:	4565      	cmp	r5, ip
 801add0:	da5a      	bge.n	801ae88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801add2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801add4:	fb05 2000 	mla	r0, r5, r0, r2
 801add8:	1400      	asrs	r0, r0, #16
 801adda:	d455      	bmi.n	801ae88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801addc:	42b8      	cmp	r0, r7
 801adde:	da53      	bge.n	801ae88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ade0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801ade4:	4699      	mov	r9, r3
 801ade6:	46a2      	mov	sl, r4
 801ade8:	f1b9 0f00 	cmp.w	r9, #0
 801adec:	dd54      	ble.n	801ae98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801adee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801adf2:	140d      	asrs	r5, r1, #16
 801adf4:	1410      	asrs	r0, r2, #16
 801adf6:	fb07 5000 	mla	r0, r7, r0, r5
 801adfa:	9d02      	ldr	r5, [sp, #8]
 801adfc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ae00:	f8ba 5000 	ldrh.w	r5, [sl]
 801ae04:	122f      	asrs	r7, r5, #8
 801ae06:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ae0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae0e:	fb17 f706 	smulbb	r7, r7, r6
 801ae12:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ae16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ae1a:	00ed      	lsls	r5, r5, #3
 801ae1c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ae20:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ae24:	10c7      	asrs	r7, r0, #3
 801ae26:	b2ed      	uxtb	r5, r5
 801ae28:	00c0      	lsls	r0, r0, #3
 801ae2a:	fb18 f806 	smulbb	r8, r8, r6
 801ae2e:	fb15 f506 	smulbb	r5, r5, r6
 801ae32:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae36:	b2c0      	uxtb	r0, r0
 801ae38:	fa1f fc8c 	uxth.w	ip, ip
 801ae3c:	fb07 870b 	mla	r7, r7, fp, r8
 801ae40:	fb00 500b 	mla	r0, r0, fp, r5
 801ae44:	b280      	uxth	r0, r0
 801ae46:	b2bf      	uxth	r7, r7
 801ae48:	f10c 0501 	add.w	r5, ip, #1
 801ae4c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ae50:	f107 0801 	add.w	r8, r7, #1
 801ae54:	1c45      	adds	r5, r0, #1
 801ae56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ae5a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ae5e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ae60:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ae64:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ae68:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ae6c:	ea45 0c0c 	orr.w	ip, r5, ip
 801ae70:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ae74:	4401      	add	r1, r0
 801ae76:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ae78:	ea4c 0c08 	orr.w	ip, ip, r8
 801ae7c:	f82a cb02 	strh.w	ip, [sl], #2
 801ae80:	4402      	add	r2, r0
 801ae82:	f109 39ff 	add.w	r9, r9, #4294967295
 801ae86:	e7af      	b.n	801ade8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ae88:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801ae8c:	f04f 0800 	mov.w	r8, #0
 801ae90:	eb03 0008 	add.w	r0, r3, r8
 801ae94:	2800      	cmp	r0, #0
 801ae96:	dc41      	bgt.n	801af1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801ae98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae9c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aea0:	9b00      	ldr	r3, [sp, #0]
 801aea2:	2b00      	cmp	r3, #0
 801aea4:	f340 8095 	ble.w	801afd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801aea8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aeac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801aeb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801aeb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aeb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aeba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aebe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aec2:	eef0 6a62 	vmov.f32	s13, s5
 801aec6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aeca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aece:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aed2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801aed6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aeda:	eef0 6a43 	vmov.f32	s13, s6
 801aede:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aee2:	ee12 2a90 	vmov	r2, s5
 801aee6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aeea:	fb92 f3f3 	sdiv	r3, r2, r3
 801aeee:	ee13 2a10 	vmov	r2, s6
 801aef2:	9311      	str	r3, [sp, #68]	; 0x44
 801aef4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aef6:	fb92 f3f3 	sdiv	r3, r2, r3
 801aefa:	9312      	str	r3, [sp, #72]	; 0x48
 801aefc:	9b00      	ldr	r3, [sp, #0]
 801aefe:	9a03      	ldr	r2, [sp, #12]
 801af00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af04:	3b01      	subs	r3, #1
 801af06:	9300      	str	r3, [sp, #0]
 801af08:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801af0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af0e:	eeb0 3a67 	vmov.f32	s6, s15
 801af12:	bf08      	it	eq
 801af14:	4613      	moveq	r3, r2
 801af16:	eef0 2a47 	vmov.f32	s5, s14
 801af1a:	e72f      	b.n	801ad7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801af1c:	140f      	asrs	r7, r1, #16
 801af1e:	d451      	bmi.n	801afc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801af20:	f8de 5008 	ldr.w	r5, [lr, #8]
 801af24:	42bd      	cmp	r5, r7
 801af26:	dd4d      	ble.n	801afc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801af28:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801af2c:	d44a      	bmi.n	801afc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801af2e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801af32:	4560      	cmp	r0, ip
 801af34:	dd46      	ble.n	801afc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801af36:	b22d      	sxth	r5, r5
 801af38:	fb0c 7505 	mla	r5, ip, r5, r7
 801af3c:	9802      	ldr	r0, [sp, #8]
 801af3e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801af42:	f06f 0501 	mvn.w	r5, #1
 801af46:	fb05 fb08 	mul.w	fp, r5, r8
 801af4a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801af4e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801af52:	122f      	asrs	r7, r5, #8
 801af54:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af58:	fb17 f706 	smulbb	r7, r7, r6
 801af5c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801af60:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af64:	00ed      	lsls	r5, r5, #3
 801af66:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801af6a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801af6e:	10c7      	asrs	r7, r0, #3
 801af70:	b2ed      	uxtb	r5, r5
 801af72:	00c0      	lsls	r0, r0, #3
 801af74:	fb19 f906 	smulbb	r9, r9, r6
 801af78:	fb15 f506 	smulbb	r5, r5, r6
 801af7c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801af80:	b2c0      	uxtb	r0, r0
 801af82:	fa1f fc8c 	uxth.w	ip, ip
 801af86:	fb07 970a 	mla	r7, r7, sl, r9
 801af8a:	fb00 500a 	mla	r0, r0, sl, r5
 801af8e:	b2bf      	uxth	r7, r7
 801af90:	b280      	uxth	r0, r0
 801af92:	f10c 0501 	add.w	r5, ip, #1
 801af96:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801af9a:	f107 0901 	add.w	r9, r7, #1
 801af9e:	1c45      	adds	r5, r0, #1
 801afa0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801afa4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801afa8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801afac:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801afb0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801afb4:	ea45 0c0c 	orr.w	ip, r5, ip
 801afb8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801afbc:	ea4c 0c09 	orr.w	ip, ip, r9
 801afc0:	f824 c00b 	strh.w	ip, [r4, fp]
 801afc4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801afc6:	4401      	add	r1, r0
 801afc8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801afca:	f108 38ff 	add.w	r8, r8, #4294967295
 801afce:	4402      	add	r2, r0
 801afd0:	e75e      	b.n	801ae90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801afd2:	b005      	add	sp, #20
 801afd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afdc:	b085      	sub	sp, #20
 801afde:	4693      	mov	fp, r2
 801afe0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801afe2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801afe4:	6870      	ldr	r0, [r6, #4]
 801afe6:	9101      	str	r1, [sp, #4]
 801afe8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801afec:	fb00 2404 	mla	r4, r0, r4, r2
 801aff0:	6832      	ldr	r2, [r6, #0]
 801aff2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801aff6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801affa:	682a      	ldr	r2, [r5, #0]
 801affc:	9202      	str	r2, [sp, #8]
 801affe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b002:	9a01      	ldr	r2, [sp, #4]
 801b004:	2a00      	cmp	r2, #0
 801b006:	dc03      	bgt.n	801b010 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b008:	f1bb 0f00 	cmp.w	fp, #0
 801b00c:	f340 809a 	ble.w	801b144 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b010:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b012:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b016:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b01a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b01e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b020:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b024:	2b00      	cmp	r3, #0
 801b026:	dd0c      	ble.n	801b042 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b028:	1406      	asrs	r6, r0, #16
 801b02a:	d405      	bmi.n	801b038 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b02c:	454e      	cmp	r6, r9
 801b02e:	da03      	bge.n	801b038 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b030:	1416      	asrs	r6, r2, #16
 801b032:	d401      	bmi.n	801b038 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b034:	4546      	cmp	r6, r8
 801b036:	db05      	blt.n	801b044 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b038:	4470      	add	r0, lr
 801b03a:	4462      	add	r2, ip
 801b03c:	3b01      	subs	r3, #1
 801b03e:	3402      	adds	r4, #2
 801b040:	e7f0      	b.n	801b024 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b042:	d00f      	beq.n	801b064 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b044:	1e5e      	subs	r6, r3, #1
 801b046:	fb0e 0706 	mla	r7, lr, r6, r0
 801b04a:	143f      	asrs	r7, r7, #16
 801b04c:	d541      	bpl.n	801b0d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b04e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b052:	4698      	mov	r8, r3
 801b054:	9603      	str	r6, [sp, #12]
 801b056:	f1b8 0f00 	cmp.w	r8, #0
 801b05a:	dc56      	bgt.n	801b10a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b05c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b060:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b064:	9b01      	ldr	r3, [sp, #4]
 801b066:	2b00      	cmp	r3, #0
 801b068:	dd6c      	ble.n	801b144 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b06a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b06e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b072:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b076:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b078:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b07c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b080:	eeb0 6a62 	vmov.f32	s12, s5
 801b084:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b088:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b08c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b090:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b094:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b098:	eeb0 6a43 	vmov.f32	s12, s6
 801b09c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0a0:	ee12 2a90 	vmov	r2, s5
 801b0a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0a8:	fb92 fef3 	sdiv	lr, r2, r3
 801b0ac:	ee13 2a10 	vmov	r2, s6
 801b0b0:	fb92 fcf3 	sdiv	ip, r2, r3
 801b0b4:	9b01      	ldr	r3, [sp, #4]
 801b0b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b0ba:	3b01      	subs	r3, #1
 801b0bc:	9301      	str	r3, [sp, #4]
 801b0be:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b0c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0c4:	eeb0 3a67 	vmov.f32	s6, s15
 801b0c8:	bf08      	it	eq
 801b0ca:	465b      	moveq	r3, fp
 801b0cc:	eef0 2a47 	vmov.f32	s5, s14
 801b0d0:	e797      	b.n	801b002 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b0d2:	454f      	cmp	r7, r9
 801b0d4:	dabb      	bge.n	801b04e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b0d6:	fb0c 2606 	mla	r6, ip, r6, r2
 801b0da:	1436      	asrs	r6, r6, #16
 801b0dc:	d4b7      	bmi.n	801b04e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b0de:	4546      	cmp	r6, r8
 801b0e0:	dab5      	bge.n	801b04e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b0e2:	461e      	mov	r6, r3
 801b0e4:	46a0      	mov	r8, r4
 801b0e6:	2e00      	cmp	r6, #0
 801b0e8:	ddb8      	ble.n	801b05c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b0ea:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b0ee:	9902      	ldr	r1, [sp, #8]
 801b0f0:	1417      	asrs	r7, r2, #16
 801b0f2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b0f6:	fb0a 9707 	mla	r7, sl, r7, r9
 801b0fa:	4470      	add	r0, lr
 801b0fc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b100:	f828 7b02 	strh.w	r7, [r8], #2
 801b104:	4462      	add	r2, ip
 801b106:	3e01      	subs	r6, #1
 801b108:	e7ed      	b.n	801b0e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b10a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b10e:	d414      	bmi.n	801b13a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b110:	68ae      	ldr	r6, [r5, #8]
 801b112:	454e      	cmp	r6, r9
 801b114:	dd11      	ble.n	801b13a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b116:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b11a:	d40e      	bmi.n	801b13a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b11c:	68ef      	ldr	r7, [r5, #12]
 801b11e:	4557      	cmp	r7, sl
 801b120:	dd0b      	ble.n	801b13a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b122:	b236      	sxth	r6, r6
 801b124:	fb0a 9606 	mla	r6, sl, r6, r9
 801b128:	9f02      	ldr	r7, [sp, #8]
 801b12a:	f06f 0101 	mvn.w	r1, #1
 801b12e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b132:	fb01 f608 	mul.w	r6, r1, r8
 801b136:	9903      	ldr	r1, [sp, #12]
 801b138:	538f      	strh	r7, [r1, r6]
 801b13a:	4470      	add	r0, lr
 801b13c:	4462      	add	r2, ip
 801b13e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b142:	e788      	b.n	801b056 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b144:	b005      	add	sp, #20
 801b146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b14a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b14a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b14e:	b087      	sub	sp, #28
 801b150:	468b      	mov	fp, r1
 801b152:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b154:	9203      	str	r2, [sp, #12]
 801b156:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b15a:	9204      	str	r2, [sp, #16]
 801b15c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b160:	6841      	ldr	r1, [r0, #4]
 801b162:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b166:	fb01 2505 	mla	r5, r1, r5, r2
 801b16a:	6802      	ldr	r2, [r0, #0]
 801b16c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b170:	f8d9 2000 	ldr.w	r2, [r9]
 801b174:	9201      	str	r2, [sp, #4]
 801b176:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b17a:	f1bb 0f00 	cmp.w	fp, #0
 801b17e:	dc03      	bgt.n	801b188 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b180:	9a03      	ldr	r2, [sp, #12]
 801b182:	2a00      	cmp	r2, #0
 801b184:	f340 8159 	ble.w	801b43a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b188:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b18a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b18e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b192:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b196:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b198:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b19c:	2b00      	cmp	r3, #0
 801b19e:	dd0e      	ble.n	801b1be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b1a0:	1402      	asrs	r2, r0, #16
 801b1a2:	d405      	bmi.n	801b1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b1a4:	42ba      	cmp	r2, r7
 801b1a6:	da03      	bge.n	801b1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b1a8:	140a      	asrs	r2, r1, #16
 801b1aa:	d401      	bmi.n	801b1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b1ac:	42b2      	cmp	r2, r6
 801b1ae:	db07      	blt.n	801b1c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b1b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b1b2:	4410      	add	r0, r2
 801b1b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b1b6:	3b01      	subs	r3, #1
 801b1b8:	4411      	add	r1, r2
 801b1ba:	3502      	adds	r5, #2
 801b1bc:	e7ee      	b.n	801b19c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b1be:	d017      	beq.n	801b1f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b1c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b1c2:	1e5a      	subs	r2, r3, #1
 801b1c4:	fb04 0402 	mla	r4, r4, r2, r0
 801b1c8:	1424      	asrs	r4, r4, #16
 801b1ca:	d409      	bmi.n	801b1e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b1cc:	42bc      	cmp	r4, r7
 801b1ce:	da07      	bge.n	801b1e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b1d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1d2:	fb04 1202 	mla	r2, r4, r2, r1
 801b1d6:	1412      	asrs	r2, r2, #16
 801b1d8:	d402      	bmi.n	801b1e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b1da:	42b2      	cmp	r2, r6
 801b1dc:	f2c0 80bf 	blt.w	801b35e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b1e0:	2700      	movs	r7, #0
 801b1e2:	19da      	adds	r2, r3, r7
 801b1e4:	2a00      	cmp	r2, #0
 801b1e6:	dc3e      	bgt.n	801b266 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b1e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b1ec:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b1f0:	f1bb 0f00 	cmp.w	fp, #0
 801b1f4:	f340 8121 	ble.w	801b43a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b1f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b1fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b200:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b204:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b206:	f1bb 0b01 	subs.w	fp, fp, #1
 801b20a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b20e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b212:	eeb0 6a62 	vmov.f32	s12, s5
 801b216:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b21a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b21e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b222:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b226:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b22a:	eeb0 6a43 	vmov.f32	s12, s6
 801b22e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b232:	ee12 2a90 	vmov	r2, s5
 801b236:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b23a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b23e:	ee13 2a10 	vmov	r2, s6
 801b242:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b246:	9313      	str	r3, [sp, #76]	; 0x4c
 801b248:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b24a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b24e:	9a03      	ldr	r2, [sp, #12]
 801b250:	9314      	str	r3, [sp, #80]	; 0x50
 801b252:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b256:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b258:	eeb0 3a67 	vmov.f32	s6, s15
 801b25c:	bf08      	it	eq
 801b25e:	4613      	moveq	r3, r2
 801b260:	eef0 2a47 	vmov.f32	s5, s14
 801b264:	e789      	b.n	801b17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b266:	1406      	asrs	r6, r0, #16
 801b268:	d42d      	bmi.n	801b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b26a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b26e:	42b4      	cmp	r4, r6
 801b270:	dd29      	ble.n	801b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b272:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b276:	d426      	bmi.n	801b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b278:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b27c:	4562      	cmp	r2, ip
 801b27e:	dd22      	ble.n	801b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b280:	b224      	sxth	r4, r4
 801b282:	9a01      	ldr	r2, [sp, #4]
 801b284:	fb0c 6404 	mla	r4, ip, r4, r6
 801b288:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b28c:	0e22      	lsrs	r2, r4, #24
 801b28e:	d01a      	beq.n	801b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b290:	9e04      	ldr	r6, [sp, #16]
 801b292:	4372      	muls	r2, r6
 801b294:	1c56      	adds	r6, r2, #1
 801b296:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b29a:	1212      	asrs	r2, r2, #8
 801b29c:	0a26      	lsrs	r6, r4, #8
 801b29e:	2aff      	cmp	r2, #255	; 0xff
 801b2a0:	9605      	str	r6, [sp, #20]
 801b2a2:	d116      	bne.n	801b2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b2a4:	f06f 0201 	mvn.w	r2, #1
 801b2a8:	fb02 fc07 	mul.w	ip, r2, r7
 801b2ac:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b2b0:	0962      	lsrs	r2, r4, #5
 801b2b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b2b6:	f026 0607 	bic.w	r6, r6, #7
 801b2ba:	4316      	orrs	r6, r2
 801b2bc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b2c0:	4326      	orrs	r6, r4
 801b2c2:	f825 600c 	strh.w	r6, [r5, ip]
 801b2c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b2c8:	4410      	add	r0, r2
 801b2ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b2cc:	3f01      	subs	r7, #1
 801b2ce:	4411      	add	r1, r2
 801b2d0:	e787      	b.n	801b1e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b2d2:	f06f 0601 	mvn.w	r6, #1
 801b2d6:	437e      	muls	r6, r7
 801b2d8:	fa1f fa82 	uxth.w	sl, r2
 801b2dc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b2e0:	9602      	str	r6, [sp, #8]
 801b2e2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b2e6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b2ea:	43d2      	mvns	r2, r2
 801b2ec:	b2d2      	uxtb	r2, r2
 801b2ee:	fb1c fc0a 	smulbb	ip, ip, sl
 801b2f2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b2f6:	fb0e ce02 	mla	lr, lr, r2, ip
 801b2fa:	b2e4      	uxtb	r4, r4
 801b2fc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b300:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b304:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b308:	fa5f f888 	uxtb.w	r8, r8
 801b30c:	fb14 f40a 	smulbb	r4, r4, sl
 801b310:	fb08 4402 	mla	r4, r8, r2, r4
 801b314:	fa1f fe8e 	uxth.w	lr, lr
 801b318:	fb16 f60a 	smulbb	r6, r6, sl
 801b31c:	b2a4      	uxth	r4, r4
 801b31e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b322:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b326:	f10e 0201 	add.w	r2, lr, #1
 801b32a:	1c66      	adds	r6, r4, #1
 801b32c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b330:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b334:	fa1f fc8c 	uxth.w	ip, ip
 801b338:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b33c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b340:	ea46 0e0e 	orr.w	lr, r6, lr
 801b344:	f10c 0601 	add.w	r6, ip, #1
 801b348:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b34c:	0976      	lsrs	r6, r6, #5
 801b34e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b352:	9a02      	ldr	r2, [sp, #8]
 801b354:	ea4e 0e06 	orr.w	lr, lr, r6
 801b358:	f825 e002 	strh.w	lr, [r5, r2]
 801b35c:	e7b3      	b.n	801b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b35e:	f04f 0800 	mov.w	r8, #0
 801b362:	eba3 0208 	sub.w	r2, r3, r8
 801b366:	2a00      	cmp	r2, #0
 801b368:	f77f af3e 	ble.w	801b1e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b36c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b370:	1404      	asrs	r4, r0, #16
 801b372:	140a      	asrs	r2, r1, #16
 801b374:	fb06 4202 	mla	r2, r6, r2, r4
 801b378:	9c01      	ldr	r4, [sp, #4]
 801b37a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b37e:	0e22      	lsrs	r2, r4, #24
 801b380:	d016      	beq.n	801b3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b382:	9e04      	ldr	r6, [sp, #16]
 801b384:	4372      	muls	r2, r6
 801b386:	1c56      	adds	r6, r2, #1
 801b388:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b38c:	1212      	asrs	r2, r2, #8
 801b38e:	2aff      	cmp	r2, #255	; 0xff
 801b390:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b394:	d113      	bne.n	801b3be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b396:	0962      	lsrs	r2, r4, #5
 801b398:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b39c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3a0:	f026 0607 	bic.w	r6, r6, #7
 801b3a4:	4316      	orrs	r6, r2
 801b3a6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b3aa:	4326      	orrs	r6, r4
 801b3ac:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b3b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b3b2:	4410      	add	r0, r2
 801b3b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b3b6:	f108 0801 	add.w	r8, r8, #1
 801b3ba:	4411      	add	r1, r2
 801b3bc:	e7d1      	b.n	801b362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b3be:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b3c2:	fa1f fa82 	uxth.w	sl, r2
 801b3c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b3ca:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b3ce:	43d2      	mvns	r2, r2
 801b3d0:	b2d2      	uxtb	r2, r2
 801b3d2:	fb17 f70a 	smulbb	r7, r7, sl
 801b3d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b3da:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b3de:	b2e4      	uxtb	r4, r4
 801b3e0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b3e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b3e8:	fa5f fe8e 	uxtb.w	lr, lr
 801b3ec:	fb14 f40a 	smulbb	r4, r4, sl
 801b3f0:	fb0e 4402 	mla	r4, lr, r2, r4
 801b3f4:	b2f6      	uxtb	r6, r6
 801b3f6:	fa1f fc8c 	uxth.w	ip, ip
 801b3fa:	fb16 f60a 	smulbb	r6, r6, sl
 801b3fe:	b2a4      	uxth	r4, r4
 801b400:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b404:	fb07 6702 	mla	r7, r7, r2, r6
 801b408:	f10c 0201 	add.w	r2, ip, #1
 801b40c:	1c66      	adds	r6, r4, #1
 801b40e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b412:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b416:	b2bf      	uxth	r7, r7
 801b418:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b41c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b420:	ea46 0c0c 	orr.w	ip, r6, ip
 801b424:	1c7e      	adds	r6, r7, #1
 801b426:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b42a:	0976      	lsrs	r6, r6, #5
 801b42c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b430:	ea4c 0c06 	orr.w	ip, ip, r6
 801b434:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b438:	e7ba      	b.n	801b3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b43a:	b007      	add	sp, #28
 801b43c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b440 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b444:	b085      	sub	sp, #20
 801b446:	468b      	mov	fp, r1
 801b448:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b44a:	9203      	str	r2, [sp, #12]
 801b44c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b450:	6841      	ldr	r1, [r0, #4]
 801b452:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b456:	fb01 2404 	mla	r4, r1, r4, r2
 801b45a:	6802      	ldr	r2, [r0, #0]
 801b45c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b460:	f8d8 2000 	ldr.w	r2, [r8]
 801b464:	9201      	str	r2, [sp, #4]
 801b466:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b46a:	f1bb 0f00 	cmp.w	fp, #0
 801b46e:	dc03      	bgt.n	801b478 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b470:	9a03      	ldr	r2, [sp, #12]
 801b472:	2a00      	cmp	r2, #0
 801b474:	f340 814f 	ble.w	801b716 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b478:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b47a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b47e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b482:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b486:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b488:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b48c:	2b00      	cmp	r3, #0
 801b48e:	dd0e      	ble.n	801b4ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b490:	1408      	asrs	r0, r1, #16
 801b492:	d405      	bmi.n	801b4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b494:	42b8      	cmp	r0, r7
 801b496:	da03      	bge.n	801b4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b498:	1410      	asrs	r0, r2, #16
 801b49a:	d401      	bmi.n	801b4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b49c:	42b0      	cmp	r0, r6
 801b49e:	db07      	blt.n	801b4b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b4a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b4a2:	4401      	add	r1, r0
 801b4a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b4a6:	3b01      	subs	r3, #1
 801b4a8:	4402      	add	r2, r0
 801b4aa:	3402      	adds	r4, #2
 801b4ac:	e7ee      	b.n	801b48c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b4ae:	d017      	beq.n	801b4e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b4b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b4b2:	1e58      	subs	r0, r3, #1
 801b4b4:	fb05 1500 	mla	r5, r5, r0, r1
 801b4b8:	142d      	asrs	r5, r5, #16
 801b4ba:	d409      	bmi.n	801b4d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b4bc:	42bd      	cmp	r5, r7
 801b4be:	da07      	bge.n	801b4d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b4c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b4c2:	fb05 2000 	mla	r0, r5, r0, r2
 801b4c6:	1400      	asrs	r0, r0, #16
 801b4c8:	d402      	bmi.n	801b4d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b4ca:	42b0      	cmp	r0, r6
 801b4cc:	f2c0 80ba 	blt.w	801b644 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b4d0:	2600      	movs	r6, #0
 801b4d2:	1998      	adds	r0, r3, r6
 801b4d4:	2800      	cmp	r0, #0
 801b4d6:	dc3e      	bgt.n	801b556 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b4d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b4dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b4e0:	f1bb 0f00 	cmp.w	fp, #0
 801b4e4:	f340 8117 	ble.w	801b716 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b4e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b4ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b4f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b4f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b4f6:	f1bb 0b01 	subs.w	fp, fp, #1
 801b4fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b4fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b502:	eeb0 6a62 	vmov.f32	s12, s5
 801b506:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b50a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b50e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b512:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b516:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b51a:	eeb0 6a43 	vmov.f32	s12, s6
 801b51e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b522:	ee12 2a90 	vmov	r2, s5
 801b526:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b52a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b52e:	ee13 2a10 	vmov	r2, s6
 801b532:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b536:	9311      	str	r3, [sp, #68]	; 0x44
 801b538:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b53a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b53e:	9a03      	ldr	r2, [sp, #12]
 801b540:	9312      	str	r3, [sp, #72]	; 0x48
 801b542:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b546:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b548:	eeb0 3a67 	vmov.f32	s6, s15
 801b54c:	bf08      	it	eq
 801b54e:	4613      	moveq	r3, r2
 801b550:	eef0 2a47 	vmov.f32	s5, s14
 801b554:	e789      	b.n	801b46a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b556:	140f      	asrs	r7, r1, #16
 801b558:	d424      	bmi.n	801b5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b55a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b55e:	42bd      	cmp	r5, r7
 801b560:	dd20      	ble.n	801b5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b562:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b566:	d41d      	bmi.n	801b5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b568:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b56c:	4560      	cmp	r0, ip
 801b56e:	dd19      	ble.n	801b5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b570:	b22d      	sxth	r5, r5
 801b572:	fb0c 7505 	mla	r5, ip, r5, r7
 801b576:	9801      	ldr	r0, [sp, #4]
 801b578:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b57c:	0e07      	lsrs	r7, r0, #24
 801b57e:	2fff      	cmp	r7, #255	; 0xff
 801b580:	d116      	bne.n	801b5b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b582:	f06f 0501 	mvn.w	r5, #1
 801b586:	fb05 f706 	mul.w	r7, r5, r6
 801b58a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b58e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b592:	0945      	lsrs	r5, r0, #5
 801b594:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b598:	ea4c 0505 	orr.w	r5, ip, r5
 801b59c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b5a0:	4305      	orrs	r5, r0
 801b5a2:	53e5      	strh	r5, [r4, r7]
 801b5a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5a6:	4401      	add	r1, r0
 801b5a8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b5aa:	3e01      	subs	r6, #1
 801b5ac:	4402      	add	r2, r0
 801b5ae:	e790      	b.n	801b4d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b5b0:	b2fd      	uxtb	r5, r7
 801b5b2:	2f00      	cmp	r7, #0
 801b5b4:	d0f6      	beq.n	801b5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5b6:	f06f 0701 	mvn.w	r7, #1
 801b5ba:	4377      	muls	r7, r6
 801b5bc:	fa1f f985 	uxth.w	r9, r5
 801b5c0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b5c4:	9702      	str	r7, [sp, #8]
 801b5c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b5ca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b5ce:	43ed      	mvns	r5, r5
 801b5d0:	b2ed      	uxtb	r5, r5
 801b5d2:	fb17 f709 	smulbb	r7, r7, r9
 801b5d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b5da:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b5de:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b5e2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b5e6:	b2c0      	uxtb	r0, r0
 801b5e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b5ec:	fa5f fe8e 	uxtb.w	lr, lr
 801b5f0:	fb10 f009 	smulbb	r0, r0, r9
 801b5f4:	fb0e 0005 	mla	r0, lr, r5, r0
 801b5f8:	b280      	uxth	r0, r0
 801b5fa:	fa1f fc8c 	uxth.w	ip, ip
 801b5fe:	fb1a fa09 	smulbb	sl, sl, r9
 801b602:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b606:	fb07 a705 	mla	r7, r7, r5, sl
 801b60a:	f100 0a01 	add.w	sl, r0, #1
 801b60e:	f10c 0501 	add.w	r5, ip, #1
 801b612:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b616:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b61a:	b2bf      	uxth	r7, r7
 801b61c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b620:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b624:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b628:	f107 0a01 	add.w	sl, r7, #1
 801b62c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b630:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b634:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b638:	9802      	ldr	r0, [sp, #8]
 801b63a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b63e:	f824 c000 	strh.w	ip, [r4, r0]
 801b642:	e7af      	b.n	801b5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b644:	f04f 0e00 	mov.w	lr, #0
 801b648:	eba3 000e 	sub.w	r0, r3, lr
 801b64c:	2800      	cmp	r0, #0
 801b64e:	f77f af43 	ble.w	801b4d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b652:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b656:	140d      	asrs	r5, r1, #16
 801b658:	1410      	asrs	r0, r2, #16
 801b65a:	fb06 5000 	mla	r0, r6, r0, r5
 801b65e:	9d01      	ldr	r5, [sp, #4]
 801b660:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b664:	0e2e      	lsrs	r6, r5, #24
 801b666:	2eff      	cmp	r6, #255	; 0xff
 801b668:	d112      	bne.n	801b690 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b66a:	482c      	ldr	r0, [pc, #176]	; (801b71c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b66c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b670:	0968      	lsrs	r0, r5, #5
 801b672:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b676:	4330      	orrs	r0, r6
 801b678:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b67c:	4328      	orrs	r0, r5
 801b67e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b682:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b684:	4401      	add	r1, r0
 801b686:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b688:	f10e 0e01 	add.w	lr, lr, #1
 801b68c:	4402      	add	r2, r0
 801b68e:	e7db      	b.n	801b648 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b690:	b2f0      	uxtb	r0, r6
 801b692:	2e00      	cmp	r6, #0
 801b694:	d0f5      	beq.n	801b682 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b696:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b69a:	fa1f f980 	uxth.w	r9, r0
 801b69e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b6a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b6a6:	43c0      	mvns	r0, r0
 801b6a8:	b2c0      	uxtb	r0, r0
 801b6aa:	fb16 f609 	smulbb	r6, r6, r9
 801b6ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b6b2:	fb07 6700 	mla	r7, r7, r0, r6
 801b6b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b6ba:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b6be:	b2ed      	uxtb	r5, r5
 801b6c0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b6c4:	fa5f fc8c 	uxtb.w	ip, ip
 801b6c8:	fb15 f509 	smulbb	r5, r5, r9
 801b6cc:	fb0c 5500 	mla	r5, ip, r0, r5
 801b6d0:	b2bf      	uxth	r7, r7
 801b6d2:	fb1a fa09 	smulbb	sl, sl, r9
 801b6d6:	b2ad      	uxth	r5, r5
 801b6d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b6dc:	fb06 a600 	mla	r6, r6, r0, sl
 801b6e0:	1c78      	adds	r0, r7, #1
 801b6e2:	f105 0a01 	add.w	sl, r5, #1
 801b6e6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b6ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b6ee:	b2b6      	uxth	r6, r6
 801b6f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b6f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b6f8:	ea4a 0707 	orr.w	r7, sl, r7
 801b6fc:	f106 0a01 	add.w	sl, r6, #1
 801b700:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b704:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b708:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b70c:	ea47 070a 	orr.w	r7, r7, sl
 801b710:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b714:	e7b5      	b.n	801b682 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b716:	b005      	add	sp, #20
 801b718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b71c:	fffff800 	.word	0xfffff800

0801b720 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b724:	b087      	sub	sp, #28
 801b726:	468b      	mov	fp, r1
 801b728:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b72a:	9203      	str	r2, [sp, #12]
 801b72c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b730:	9204      	str	r2, [sp, #16]
 801b732:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b736:	6841      	ldr	r1, [r0, #4]
 801b738:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b73c:	fb01 2404 	mla	r4, r1, r4, r2
 801b740:	6802      	ldr	r2, [r0, #0]
 801b742:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b746:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b74a:	3201      	adds	r2, #1
 801b74c:	f022 0201 	bic.w	r2, r2, #1
 801b750:	9200      	str	r2, [sp, #0]
 801b752:	f8d9 2000 	ldr.w	r2, [r9]
 801b756:	9201      	str	r2, [sp, #4]
 801b758:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b75c:	f1bb 0f00 	cmp.w	fp, #0
 801b760:	dc03      	bgt.n	801b76a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b762:	9a03      	ldr	r2, [sp, #12]
 801b764:	2a00      	cmp	r2, #0
 801b766:	f340 8169 	ble.w	801ba3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b76a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b76c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b770:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b774:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b778:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b77a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b77e:	2b00      	cmp	r3, #0
 801b780:	dd0e      	ble.n	801b7a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b782:	1402      	asrs	r2, r0, #16
 801b784:	d405      	bmi.n	801b792 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b786:	42ba      	cmp	r2, r7
 801b788:	da03      	bge.n	801b792 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b78a:	140a      	asrs	r2, r1, #16
 801b78c:	d401      	bmi.n	801b792 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b78e:	42b2      	cmp	r2, r6
 801b790:	db07      	blt.n	801b7a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b792:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b794:	4410      	add	r0, r2
 801b796:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b798:	3b01      	subs	r3, #1
 801b79a:	4411      	add	r1, r2
 801b79c:	3402      	adds	r4, #2
 801b79e:	e7ee      	b.n	801b77e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b7a0:	d017      	beq.n	801b7d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b7a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b7a4:	1e5a      	subs	r2, r3, #1
 801b7a6:	fb05 0502 	mla	r5, r5, r2, r0
 801b7aa:	142d      	asrs	r5, r5, #16
 801b7ac:	d409      	bmi.n	801b7c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b7ae:	42bd      	cmp	r5, r7
 801b7b0:	da07      	bge.n	801b7c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b7b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b7b4:	fb05 1202 	mla	r2, r5, r2, r1
 801b7b8:	1412      	asrs	r2, r2, #16
 801b7ba:	d402      	bmi.n	801b7c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b7bc:	42b2      	cmp	r2, r6
 801b7be:	f2c0 80c7 	blt.w	801b950 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b7c2:	2700      	movs	r7, #0
 801b7c4:	19da      	adds	r2, r3, r7
 801b7c6:	2a00      	cmp	r2, #0
 801b7c8:	dc3e      	bgt.n	801b848 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b7ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b7ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7d2:	f1bb 0f00 	cmp.w	fp, #0
 801b7d6:	f340 8131 	ble.w	801ba3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b7da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b7e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b7e8:	f1bb 0b01 	subs.w	fp, fp, #1
 801b7ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7f4:	eeb0 6a62 	vmov.f32	s12, s5
 801b7f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b800:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b804:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b808:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b80c:	eeb0 6a43 	vmov.f32	s12, s6
 801b810:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b814:	ee12 2a90 	vmov	r2, s5
 801b818:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b81c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b820:	ee13 2a10 	vmov	r2, s6
 801b824:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b828:	9313      	str	r3, [sp, #76]	; 0x4c
 801b82a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b82c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b830:	9a03      	ldr	r2, [sp, #12]
 801b832:	9314      	str	r3, [sp, #80]	; 0x50
 801b834:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b838:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b83a:	eeb0 3a67 	vmov.f32	s6, s15
 801b83e:	bf08      	it	eq
 801b840:	4613      	moveq	r3, r2
 801b842:	eef0 2a47 	vmov.f32	s5, s14
 801b846:	e789      	b.n	801b75c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b848:	1405      	asrs	r5, r0, #16
 801b84a:	d435      	bmi.n	801b8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b84c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b850:	42aa      	cmp	r2, r5
 801b852:	dd31      	ble.n	801b8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b854:	140e      	asrs	r6, r1, #16
 801b856:	d42f      	bmi.n	801b8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b858:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b85c:	42b2      	cmp	r2, r6
 801b85e:	dd2b      	ble.n	801b8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b860:	9a00      	ldr	r2, [sp, #0]
 801b862:	fb06 5502 	mla	r5, r6, r2, r5
 801b866:	086a      	lsrs	r2, r5, #1
 801b868:	9e01      	ldr	r6, [sp, #4]
 801b86a:	5cb2      	ldrb	r2, [r6, r2]
 801b86c:	07ee      	lsls	r6, r5, #31
 801b86e:	bf54      	ite	pl
 801b870:	f002 020f 	andpl.w	r2, r2, #15
 801b874:	1112      	asrmi	r2, r2, #4
 801b876:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b87a:	b2d2      	uxtb	r2, r2
 801b87c:	b1e2      	cbz	r2, 801b8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b87e:	9d04      	ldr	r5, [sp, #16]
 801b880:	436a      	muls	r2, r5
 801b882:	1c55      	adds	r5, r2, #1
 801b884:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b888:	4d6e      	ldr	r5, [pc, #440]	; (801ba44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b88a:	682d      	ldr	r5, [r5, #0]
 801b88c:	1212      	asrs	r2, r2, #8
 801b88e:	0a2e      	lsrs	r6, r5, #8
 801b890:	2aff      	cmp	r2, #255	; 0xff
 801b892:	9605      	str	r6, [sp, #20]
 801b894:	d116      	bne.n	801b8c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b896:	f06f 0201 	mvn.w	r2, #1
 801b89a:	fb02 fc07 	mul.w	ip, r2, r7
 801b89e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b8a2:	096a      	lsrs	r2, r5, #5
 801b8a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b8a8:	f026 0607 	bic.w	r6, r6, #7
 801b8ac:	4316      	orrs	r6, r2
 801b8ae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b8b2:	432e      	orrs	r6, r5
 801b8b4:	f824 600c 	strh.w	r6, [r4, ip]
 801b8b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b8ba:	4410      	add	r0, r2
 801b8bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b8be:	3f01      	subs	r7, #1
 801b8c0:	4411      	add	r1, r2
 801b8c2:	e77f      	b.n	801b7c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b8c4:	f06f 0601 	mvn.w	r6, #1
 801b8c8:	437e      	muls	r6, r7
 801b8ca:	fa1f fa82 	uxth.w	sl, r2
 801b8ce:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b8d2:	9602      	str	r6, [sp, #8]
 801b8d4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b8d8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b8dc:	43d2      	mvns	r2, r2
 801b8de:	b2d2      	uxtb	r2, r2
 801b8e0:	fb1c fc0a 	smulbb	ip, ip, sl
 801b8e4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b8e8:	fb0e ce02 	mla	lr, lr, r2, ip
 801b8ec:	b2ed      	uxtb	r5, r5
 801b8ee:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b8f2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b8f6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b8fa:	fa5f f888 	uxtb.w	r8, r8
 801b8fe:	fb15 f50a 	smulbb	r5, r5, sl
 801b902:	fb08 5502 	mla	r5, r8, r2, r5
 801b906:	fa1f fe8e 	uxth.w	lr, lr
 801b90a:	fb16 f60a 	smulbb	r6, r6, sl
 801b90e:	b2ad      	uxth	r5, r5
 801b910:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b914:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b918:	f10e 0201 	add.w	r2, lr, #1
 801b91c:	1c6e      	adds	r6, r5, #1
 801b91e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b922:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b926:	fa1f fc8c 	uxth.w	ip, ip
 801b92a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b92e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b932:	ea46 0e0e 	orr.w	lr, r6, lr
 801b936:	f10c 0601 	add.w	r6, ip, #1
 801b93a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b93e:	0976      	lsrs	r6, r6, #5
 801b940:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b944:	9a02      	ldr	r2, [sp, #8]
 801b946:	ea4e 0e06 	orr.w	lr, lr, r6
 801b94a:	f824 e002 	strh.w	lr, [r4, r2]
 801b94e:	e7b3      	b.n	801b8b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b950:	f04f 0800 	mov.w	r8, #0
 801b954:	eba3 0208 	sub.w	r2, r3, r8
 801b958:	2a00      	cmp	r2, #0
 801b95a:	f77f af36 	ble.w	801b7ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b95e:	9e00      	ldr	r6, [sp, #0]
 801b960:	1402      	asrs	r2, r0, #16
 801b962:	140d      	asrs	r5, r1, #16
 801b964:	fb06 2505 	mla	r5, r6, r5, r2
 801b968:	086a      	lsrs	r2, r5, #1
 801b96a:	9e01      	ldr	r6, [sp, #4]
 801b96c:	5cb2      	ldrb	r2, [r6, r2]
 801b96e:	07ed      	lsls	r5, r5, #31
 801b970:	bf54      	ite	pl
 801b972:	f002 020f 	andpl.w	r2, r2, #15
 801b976:	1112      	asrmi	r2, r2, #4
 801b978:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b97c:	b2d2      	uxtb	r2, r2
 801b97e:	b1c2      	cbz	r2, 801b9b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b980:	9d04      	ldr	r5, [sp, #16]
 801b982:	436a      	muls	r2, r5
 801b984:	1c55      	adds	r5, r2, #1
 801b986:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b98a:	4d2e      	ldr	r5, [pc, #184]	; (801ba44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b98c:	1212      	asrs	r2, r2, #8
 801b98e:	682e      	ldr	r6, [r5, #0]
 801b990:	2aff      	cmp	r2, #255	; 0xff
 801b992:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b996:	d113      	bne.n	801b9c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b998:	0972      	lsrs	r2, r6, #5
 801b99a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b99e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b9a2:	f025 0507 	bic.w	r5, r5, #7
 801b9a6:	4315      	orrs	r5, r2
 801b9a8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b9ac:	4335      	orrs	r5, r6
 801b9ae:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b9b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b9b4:	4410      	add	r0, r2
 801b9b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b9b8:	f108 0801 	add.w	r8, r8, #1
 801b9bc:	4411      	add	r1, r2
 801b9be:	e7c9      	b.n	801b954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b9c0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b9c4:	fa1f fa82 	uxth.w	sl, r2
 801b9c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b9cc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b9d0:	43d2      	mvns	r2, r2
 801b9d2:	b2d2      	uxtb	r2, r2
 801b9d4:	fb17 f70a 	smulbb	r7, r7, sl
 801b9d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b9dc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b9e0:	b2f6      	uxtb	r6, r6
 801b9e2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b9e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b9ea:	fa5f fe8e 	uxtb.w	lr, lr
 801b9ee:	fb16 f60a 	smulbb	r6, r6, sl
 801b9f2:	fb0e 6602 	mla	r6, lr, r2, r6
 801b9f6:	b2ed      	uxtb	r5, r5
 801b9f8:	fa1f fc8c 	uxth.w	ip, ip
 801b9fc:	fb15 f50a 	smulbb	r5, r5, sl
 801ba00:	b2b6      	uxth	r6, r6
 801ba02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ba06:	fb07 5702 	mla	r7, r7, r2, r5
 801ba0a:	f10c 0201 	add.w	r2, ip, #1
 801ba0e:	1c75      	adds	r5, r6, #1
 801ba10:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ba14:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ba18:	b2bf      	uxth	r7, r7
 801ba1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ba1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ba22:	ea45 0c0c 	orr.w	ip, r5, ip
 801ba26:	1c7d      	adds	r5, r7, #1
 801ba28:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ba2c:	096d      	lsrs	r5, r5, #5
 801ba2e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ba32:	ea4c 0c05 	orr.w	ip, ip, r5
 801ba36:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ba3a:	e7ba      	b.n	801b9b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ba3c:	b007      	add	sp, #28
 801ba3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba42:	bf00      	nop
 801ba44:	20012db4 	.word	0x20012db4

0801ba48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba4c:	b087      	sub	sp, #28
 801ba4e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bd5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ba52:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ba54:	9205      	str	r2, [sp, #20]
 801ba56:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ba5a:	9101      	str	r1, [sp, #4]
 801ba5c:	6841      	ldr	r1, [r0, #4]
 801ba5e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ba62:	fb01 2404 	mla	r4, r1, r4, r2
 801ba66:	6802      	ldr	r2, [r0, #0]
 801ba68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ba6c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ba70:	3201      	adds	r2, #1
 801ba72:	f022 0201 	bic.w	r2, r2, #1
 801ba76:	9202      	str	r2, [sp, #8]
 801ba78:	f8db 2000 	ldr.w	r2, [fp]
 801ba7c:	9203      	str	r2, [sp, #12]
 801ba7e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ba82:	9a01      	ldr	r2, [sp, #4]
 801ba84:	2a00      	cmp	r2, #0
 801ba86:	dc03      	bgt.n	801ba90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ba88:	9a05      	ldr	r2, [sp, #20]
 801ba8a:	2a00      	cmp	r2, #0
 801ba8c:	f340 8162 	ble.w	801bd54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ba90:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ba92:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ba96:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ba9a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ba9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801baa0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801baa4:	2b00      	cmp	r3, #0
 801baa6:	dd0e      	ble.n	801bac6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801baa8:	1402      	asrs	r2, r0, #16
 801baaa:	d405      	bmi.n	801bab8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801baac:	42ba      	cmp	r2, r7
 801baae:	da03      	bge.n	801bab8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bab0:	140a      	asrs	r2, r1, #16
 801bab2:	d401      	bmi.n	801bab8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bab4:	42b2      	cmp	r2, r6
 801bab6:	db07      	blt.n	801bac8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bab8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801baba:	4410      	add	r0, r2
 801babc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801babe:	3b01      	subs	r3, #1
 801bac0:	4411      	add	r1, r2
 801bac2:	3402      	adds	r4, #2
 801bac4:	e7ee      	b.n	801baa4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bac6:	d017      	beq.n	801baf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bac8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801baca:	1e5a      	subs	r2, r3, #1
 801bacc:	fb05 0502 	mla	r5, r5, r2, r0
 801bad0:	142d      	asrs	r5, r5, #16
 801bad2:	d409      	bmi.n	801bae8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bad4:	42bd      	cmp	r5, r7
 801bad6:	da07      	bge.n	801bae8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bad8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bada:	fb05 1202 	mla	r2, r5, r2, r1
 801bade:	1412      	asrs	r2, r2, #16
 801bae0:	d402      	bmi.n	801bae8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bae2:	42b2      	cmp	r2, r6
 801bae4:	f2c0 80c3 	blt.w	801bc6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bae8:	2500      	movs	r5, #0
 801baea:	195a      	adds	r2, r3, r5
 801baec:	2a00      	cmp	r2, #0
 801baee:	dc3f      	bgt.n	801bb70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801baf0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801baf4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801baf8:	9b01      	ldr	r3, [sp, #4]
 801bafa:	2b00      	cmp	r3, #0
 801bafc:	f340 812a 	ble.w	801bd54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bb00:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb08:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bb0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb16:	eeb0 6a62 	vmov.f32	s12, s5
 801bb1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb22:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb26:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bb2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb2e:	eeb0 6a43 	vmov.f32	s12, s6
 801bb32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb36:	ee12 2a90 	vmov	r2, s5
 801bb3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb42:	ee13 2a10 	vmov	r2, s6
 801bb46:	9313      	str	r3, [sp, #76]	; 0x4c
 801bb48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb4e:	9314      	str	r3, [sp, #80]	; 0x50
 801bb50:	9b01      	ldr	r3, [sp, #4]
 801bb52:	9a05      	ldr	r2, [sp, #20]
 801bb54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb58:	3b01      	subs	r3, #1
 801bb5a:	9301      	str	r3, [sp, #4]
 801bb5c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bb60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb62:	eeb0 3a67 	vmov.f32	s6, s15
 801bb66:	bf08      	it	eq
 801bb68:	4613      	moveq	r3, r2
 801bb6a:	eef0 2a47 	vmov.f32	s5, s14
 801bb6e:	e788      	b.n	801ba82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bb70:	1406      	asrs	r6, r0, #16
 801bb72:	d42c      	bmi.n	801bbce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb74:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bb78:	42b2      	cmp	r2, r6
 801bb7a:	dd28      	ble.n	801bbce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb7c:	140f      	asrs	r7, r1, #16
 801bb7e:	d426      	bmi.n	801bbce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb80:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bb84:	42ba      	cmp	r2, r7
 801bb86:	dd22      	ble.n	801bbce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb88:	9a02      	ldr	r2, [sp, #8]
 801bb8a:	fb07 6602 	mla	r6, r7, r2, r6
 801bb8e:	0872      	lsrs	r2, r6, #1
 801bb90:	9f03      	ldr	r7, [sp, #12]
 801bb92:	5cba      	ldrb	r2, [r7, r2]
 801bb94:	07f6      	lsls	r6, r6, #31
 801bb96:	bf54      	ite	pl
 801bb98:	f002 020f 	andpl.w	r2, r2, #15
 801bb9c:	1112      	asrmi	r2, r2, #4
 801bb9e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bba2:	b2d2      	uxtb	r2, r2
 801bba4:	2aff      	cmp	r2, #255	; 0xff
 801bba6:	d118      	bne.n	801bbda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bba8:	f8d8 2000 	ldr.w	r2, [r8]
 801bbac:	f06f 0601 	mvn.w	r6, #1
 801bbb0:	fb06 f705 	mul.w	r7, r6, r5
 801bbb4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bbb8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bbbc:	0956      	lsrs	r6, r2, #5
 801bbbe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bbc2:	ea4c 0606 	orr.w	r6, ip, r6
 801bbc6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bbca:	4316      	orrs	r6, r2
 801bbcc:	53e6      	strh	r6, [r4, r7]
 801bbce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bbd0:	4410      	add	r0, r2
 801bbd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbd4:	3d01      	subs	r5, #1
 801bbd6:	4411      	add	r1, r2
 801bbd8:	e787      	b.n	801baea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bbda:	2a00      	cmp	r2, #0
 801bbdc:	d0f7      	beq.n	801bbce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bbde:	f06f 0601 	mvn.w	r6, #1
 801bbe2:	436e      	muls	r6, r5
 801bbe4:	f8d8 c000 	ldr.w	ip, [r8]
 801bbe8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bbec:	9604      	str	r6, [sp, #16]
 801bbee:	fa1f f982 	uxth.w	r9, r2
 801bbf2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bbf6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bbfa:	43d2      	mvns	r2, r2
 801bbfc:	b2d2      	uxtb	r2, r2
 801bbfe:	fb16 f609 	smulbb	r6, r6, r9
 801bc02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc06:	fb07 6702 	mla	r7, r7, r2, r6
 801bc0a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bc0e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bc12:	fa5f fc8c 	uxtb.w	ip, ip
 801bc16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bc1a:	fa5f fe8e 	uxtb.w	lr, lr
 801bc1e:	fb1c fc09 	smulbb	ip, ip, r9
 801bc22:	fb0e cc02 	mla	ip, lr, r2, ip
 801bc26:	b2bf      	uxth	r7, r7
 801bc28:	fb1a fa09 	smulbb	sl, sl, r9
 801bc2c:	fa1f fc8c 	uxth.w	ip, ip
 801bc30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bc34:	fb06 a602 	mla	r6, r6, r2, sl
 801bc38:	1c7a      	adds	r2, r7, #1
 801bc3a:	f10c 0a01 	add.w	sl, ip, #1
 801bc3e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bc42:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bc46:	b2b6      	uxth	r6, r6
 801bc48:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bc4c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bc50:	ea4a 0707 	orr.w	r7, sl, r7
 801bc54:	f106 0a01 	add.w	sl, r6, #1
 801bc58:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bc5c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bc60:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bc64:	9a04      	ldr	r2, [sp, #16]
 801bc66:	ea47 070a 	orr.w	r7, r7, sl
 801bc6a:	52a7      	strh	r7, [r4, r2]
 801bc6c:	e7af      	b.n	801bbce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc6e:	f04f 0e00 	mov.w	lr, #0
 801bc72:	eba3 020e 	sub.w	r2, r3, lr
 801bc76:	2a00      	cmp	r2, #0
 801bc78:	f77f af3a 	ble.w	801baf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bc7c:	9e02      	ldr	r6, [sp, #8]
 801bc7e:	1402      	asrs	r2, r0, #16
 801bc80:	140d      	asrs	r5, r1, #16
 801bc82:	fb06 2505 	mla	r5, r6, r5, r2
 801bc86:	086a      	lsrs	r2, r5, #1
 801bc88:	9e03      	ldr	r6, [sp, #12]
 801bc8a:	5cb2      	ldrb	r2, [r6, r2]
 801bc8c:	07ed      	lsls	r5, r5, #31
 801bc8e:	bf54      	ite	pl
 801bc90:	f002 020f 	andpl.w	r2, r2, #15
 801bc94:	1112      	asrmi	r2, r2, #4
 801bc96:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc9a:	b2d2      	uxtb	r2, r2
 801bc9c:	2aff      	cmp	r2, #255	; 0xff
 801bc9e:	d115      	bne.n	801bccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bca0:	f8d8 5000 	ldr.w	r5, [r8]
 801bca4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bca8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bcac:	096a      	lsrs	r2, r5, #5
 801bcae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bcb2:	4332      	orrs	r2, r6
 801bcb4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bcb8:	432a      	orrs	r2, r5
 801bcba:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bcbe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bcc0:	4410      	add	r0, r2
 801bcc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcc4:	f10e 0e01 	add.w	lr, lr, #1
 801bcc8:	4411      	add	r1, r2
 801bcca:	e7d2      	b.n	801bc72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bccc:	2a00      	cmp	r2, #0
 801bcce:	d0f6      	beq.n	801bcbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bcd0:	f8d8 7000 	ldr.w	r7, [r8]
 801bcd4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bcd8:	fa1f f982 	uxth.w	r9, r2
 801bcdc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bce0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bce4:	43d2      	mvns	r2, r2
 801bce6:	b2d2      	uxtb	r2, r2
 801bce8:	fb15 f509 	smulbb	r5, r5, r9
 801bcec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bcf0:	fb06 5602 	mla	r6, r6, r2, r5
 801bcf4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bcf8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bcfc:	b2ff      	uxtb	r7, r7
 801bcfe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bd02:	fa5f fc8c 	uxtb.w	ip, ip
 801bd06:	fb17 f709 	smulbb	r7, r7, r9
 801bd0a:	fb0c 7702 	mla	r7, ip, r2, r7
 801bd0e:	b2b6      	uxth	r6, r6
 801bd10:	fb1a fa09 	smulbb	sl, sl, r9
 801bd14:	b2bf      	uxth	r7, r7
 801bd16:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bd1a:	fb05 a502 	mla	r5, r5, r2, sl
 801bd1e:	1c72      	adds	r2, r6, #1
 801bd20:	f107 0a01 	add.w	sl, r7, #1
 801bd24:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bd28:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bd2c:	b2ad      	uxth	r5, r5
 801bd2e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bd32:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bd36:	ea4a 0606 	orr.w	r6, sl, r6
 801bd3a:	f105 0a01 	add.w	sl, r5, #1
 801bd3e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bd42:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bd46:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd4a:	ea46 060a 	orr.w	r6, r6, sl
 801bd4e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bd52:	e7b4      	b.n	801bcbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bd54:	b007      	add	sp, #28
 801bd56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd5a:	bf00      	nop
 801bd5c:	20012db4 	.word	0x20012db4

0801bd60 <_ZN8touchgfx8LCD16bppD1Ev>:
 801bd60:	4770      	bx	lr

0801bd62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801bd62:	4770      	bx	lr

0801bd64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801bd64:	4770      	bx	lr

0801bd66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801bd66:	4770      	bx	lr

0801bd68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bd68:	4770      	bx	lr

0801bd6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bd6a:	4770      	bx	lr

0801bd6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bd6c:	4770      	bx	lr

0801bd6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bd6e:	4770      	bx	lr

0801bd70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bd70:	4770      	bx	lr

0801bd72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bd72:	4770      	bx	lr

0801bd74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bd74:	4770      	bx	lr

0801bd76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bd76:	4770      	bx	lr

0801bd78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bd78:	4770      	bx	lr

0801bd7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bd7a:	4770      	bx	lr

0801bd7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bd7c:	4770      	bx	lr

0801bd7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bd7e:	4770      	bx	lr

0801bd80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bd80:	4770      	bx	lr

0801bd82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bd82:	4770      	bx	lr

0801bd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bd84:	4770      	bx	lr

0801bd86 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bd86:	4770      	bx	lr

0801bd88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bd88:	4770      	bx	lr

0801bd8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bd8a:	4770      	bx	lr

0801bd8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bd8c:	4770      	bx	lr

0801bd8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bd8e:	4770      	bx	lr

0801bd90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bd90:	4770      	bx	lr

0801bd92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bd92:	4770      	bx	lr

0801bd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bd94:	4770      	bx	lr

0801bd96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bd96:	4770      	bx	lr

0801bd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bd98:	4770      	bx	lr

0801bd9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bd9a:	4770      	bx	lr

0801bd9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bd9c:	4770      	bx	lr

0801bd9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bd9e:	4770      	bx	lr

0801bda0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801bda0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bda4:	b088      	sub	sp, #32
 801bda6:	ac08      	add	r4, sp, #32
 801bda8:	4606      	mov	r6, r0
 801bdaa:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801bdae:	4620      	mov	r0, r4
 801bdb0:	4688      	mov	r8, r1
 801bdb2:	4691      	mov	r9, r2
 801bdb4:	f7fd fc62 	bl	801967c <_ZNK8touchgfx6Bitmap7getDataEv>
 801bdb8:	6833      	ldr	r3, [r6, #0]
 801bdba:	4605      	mov	r5, r0
 801bdbc:	4620      	mov	r0, r4
 801bdbe:	699f      	ldr	r7, [r3, #24]
 801bdc0:	f7fd fb70 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bdc4:	4682      	mov	sl, r0
 801bdc6:	4620      	mov	r0, r4
 801bdc8:	f7fd fba0 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bdcc:	9500      	str	r5, [sp, #0]
 801bdce:	e9cd a001 	strd	sl, r0, [sp, #4]
 801bdd2:	464b      	mov	r3, r9
 801bdd4:	a806      	add	r0, sp, #24
 801bdd6:	4642      	mov	r2, r8
 801bdd8:	4631      	mov	r1, r6
 801bdda:	47b8      	blx	r7
 801bddc:	4628      	mov	r0, r5
 801bdde:	b008      	add	sp, #32
 801bde0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801bde4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801bde4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bde8:	2300      	movs	r3, #0
 801bdea:	9300      	str	r3, [sp, #0]
 801bdec:	4b3d      	ldr	r3, [pc, #244]	; (801bee4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801bdee:	781b      	ldrb	r3, [r3, #0]
 801bdf0:	2b00      	cmp	r3, #0
 801bdf2:	d137      	bne.n	801be64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801bdf4:	4a3c      	ldr	r2, [pc, #240]	; (801bee8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bdf6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801bdfa:	f8ad 2004 	strh.w	r2, [sp, #4]
 801bdfe:	2b00      	cmp	r3, #0
 801be00:	d132      	bne.n	801be68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801be02:	4b3a      	ldr	r3, [pc, #232]	; (801beec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801be04:	f9b3 3000 	ldrsh.w	r3, [r3]
 801be08:	6808      	ldr	r0, [r1, #0]
 801be0a:	6849      	ldr	r1, [r1, #4]
 801be0c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801be10:	ac02      	add	r4, sp, #8
 801be12:	ab02      	add	r3, sp, #8
 801be14:	c303      	stmia	r3!, {r0, r1}
 801be16:	4669      	mov	r1, sp
 801be18:	4620      	mov	r0, r4
 801be1a:	f7f9 fdc1 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be1e:	4668      	mov	r0, sp
 801be20:	f7f9 fd7a 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be24:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801be28:	f8bd 2000 	ldrh.w	r2, [sp]
 801be2c:	4d30      	ldr	r5, [pc, #192]	; (801bef0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801be2e:	4413      	add	r3, r2
 801be30:	f8ad 3008 	strh.w	r3, [sp, #8]
 801be34:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801be38:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801be3c:	6828      	ldr	r0, [r5, #0]
 801be3e:	4413      	add	r3, r2
 801be40:	f8ad 300a 	strh.w	r3, [sp, #10]
 801be44:	6803      	ldr	r3, [r0, #0]
 801be46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801be48:	4798      	blx	r3
 801be4a:	f010 0f01 	tst.w	r0, #1
 801be4e:	462f      	mov	r7, r5
 801be50:	d00c      	beq.n	801be6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801be52:	6828      	ldr	r0, [r5, #0]
 801be54:	6803      	ldr	r3, [r0, #0]
 801be56:	e894 0006 	ldmia.w	r4, {r1, r2}
 801be5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801be5c:	4798      	blx	r3
 801be5e:	b004      	add	sp, #16
 801be60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801be64:	4a21      	ldr	r2, [pc, #132]	; (801beec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801be66:	e7c6      	b.n	801bdf6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801be68:	4b1f      	ldr	r3, [pc, #124]	; (801bee8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801be6a:	e7cb      	b.n	801be04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801be6c:	6838      	ldr	r0, [r7, #0]
 801be6e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801be72:	6803      	ldr	r3, [r0, #0]
 801be74:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801be78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801be7a:	4798      	blx	r3
 801be7c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801be80:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801be84:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801be88:	fb16 3602 	smlabb	r6, r6, r2, r3
 801be8c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801be90:	6838      	ldr	r0, [r7, #0]
 801be92:	6803      	ldr	r3, [r0, #0]
 801be94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be96:	4798      	blx	r3
 801be98:	4a13      	ldr	r2, [pc, #76]	; (801bee8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801be9a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801be9e:	8813      	ldrh	r3, [r2, #0]
 801bea0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bea4:	fb03 1404 	mla	r4, r3, r4, r1
 801bea8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801beac:	435d      	muls	r5, r3
 801beae:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801beb2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801beb6:	4691      	mov	r9, r2
 801beb8:	6838      	ldr	r0, [r7, #0]
 801beba:	42ac      	cmp	r4, r5
 801bebc:	6803      	ldr	r3, [r0, #0]
 801bebe:	d20e      	bcs.n	801bede <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801bec0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801bec4:	4632      	mov	r2, r6
 801bec6:	4643      	mov	r3, r8
 801bec8:	4621      	mov	r1, r4
 801beca:	47d0      	blx	sl
 801becc:	f8b9 3000 	ldrh.w	r3, [r9]
 801bed0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bed4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801bed8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bedc:	e7ec      	b.n	801beb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801bede:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bee0:	4798      	blx	r3
 801bee2:	e7bc      	b.n	801be5e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801bee4:	20012d9c 	.word	0x20012d9c
 801bee8:	20012d9e 	.word	0x20012d9e
 801beec:	20012da0 	.word	0x20012da0
 801bef0:	20012da4 	.word	0x20012da4

0801bef4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801bef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bef8:	b08b      	sub	sp, #44	; 0x2c
 801befa:	460f      	mov	r7, r1
 801befc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801bf00:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801bf04:	4616      	mov	r6, r2
 801bf06:	f1bb 0f00 	cmp.w	fp, #0
 801bf0a:	d04a      	beq.n	801bfa2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801bf0c:	6810      	ldr	r0, [r2, #0]
 801bf0e:	6851      	ldr	r1, [r2, #4]
 801bf10:	ad06      	add	r5, sp, #24
 801bf12:	c503      	stmia	r5!, {r0, r1}
 801bf14:	6818      	ldr	r0, [r3, #0]
 801bf16:	6859      	ldr	r1, [r3, #4]
 801bf18:	ad08      	add	r5, sp, #32
 801bf1a:	c503      	stmia	r5!, {r0, r1}
 801bf1c:	a806      	add	r0, sp, #24
 801bf1e:	f7f9 fcfb 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bf22:	4631      	mov	r1, r6
 801bf24:	a808      	add	r0, sp, #32
 801bf26:	f7f9 fd3b 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bf2a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801bf2e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801bf32:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801bf36:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801bf3a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801bf3e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801bf42:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801bf46:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801bf4a:	4f5f      	ldr	r7, [pc, #380]	; (801c0c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bf4c:	440a      	add	r2, r1
 801bf4e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801bf52:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801bf56:	6838      	ldr	r0, [r7, #0]
 801bf58:	4413      	add	r3, r2
 801bf5a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801bf5e:	6803      	ldr	r3, [r0, #0]
 801bf60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bf62:	4798      	blx	r3
 801bf64:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bf68:	46b9      	mov	r9, r7
 801bf6a:	d11d      	bne.n	801bfa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801bf6c:	b9fc      	cbnz	r4, 801bfae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801bf6e:	f010 0f01 	tst.w	r0, #1
 801bf72:	d01c      	beq.n	801bfae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801bf74:	f8d9 0000 	ldr.w	r0, [r9]
 801bf78:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801bf7c:	6801      	ldr	r1, [r0, #0]
 801bf7e:	f8cd b00c 	str.w	fp, [sp, #12]
 801bf82:	2700      	movs	r7, #0
 801bf84:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801bf88:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801bf8c:	9402      	str	r4, [sp, #8]
 801bf8e:	b2ad      	uxth	r5, r5
 801bf90:	fa1f f488 	uxth.w	r4, r8
 801bf94:	9501      	str	r5, [sp, #4]
 801bf96:	9400      	str	r4, [sp, #0]
 801bf98:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801bf9a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801bf9e:	4631      	mov	r1, r6
 801bfa0:	47a0      	blx	r4
 801bfa2:	b00b      	add	sp, #44	; 0x2c
 801bfa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfa8:	f010 0f04 	tst.w	r0, #4
 801bfac:	e7e1      	b.n	801bf72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801bfae:	f8d9 0000 	ldr.w	r0, [r9]
 801bfb2:	6803      	ldr	r3, [r0, #0]
 801bfb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bfb6:	4798      	blx	r3
 801bfb8:	4b44      	ldr	r3, [pc, #272]	; (801c0cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801bfba:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801bfbe:	881a      	ldrh	r2, [r3, #0]
 801bfc0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801bfc4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bfc8:	fb02 1404 	mla	r4, r2, r4, r1
 801bfcc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bfd0:	469a      	mov	sl, r3
 801bfd2:	fb05 f502 	mul.w	r5, r5, r2
 801bfd6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801bfda:	d059      	beq.n	801c090 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801bfdc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801bfe0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bfe4:	fa1f f28b 	uxth.w	r2, fp
 801bfe8:	fa1f f989 	uxth.w	r9, r9
 801bfec:	469e      	mov	lr, r3
 801bfee:	42ac      	cmp	r4, r5
 801bff0:	d264      	bcs.n	801c0bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801bff2:	eb04 0a07 	add.w	sl, r4, r7
 801bff6:	4554      	cmp	r4, sl
 801bff8:	d23d      	bcs.n	801c076 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801bffa:	8821      	ldrh	r1, [r4, #0]
 801bffc:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c000:	1208      	asrs	r0, r1, #8
 801c002:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c006:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c00a:	fb10 f009 	smulbb	r0, r0, r9
 801c00e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c012:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c016:	00c9      	lsls	r1, r1, #3
 801c018:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c01c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c020:	10d8      	asrs	r0, r3, #3
 801c022:	b2c9      	uxtb	r1, r1
 801c024:	00db      	lsls	r3, r3, #3
 801c026:	fa1f fc8c 	uxth.w	ip, ip
 801c02a:	fb1b fb09 	smulbb	fp, fp, r9
 801c02e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c032:	b2db      	uxtb	r3, r3
 801c034:	fb11 f109 	smulbb	r1, r1, r9
 801c038:	fb00 b002 	mla	r0, r0, r2, fp
 801c03c:	fb03 1302 	mla	r3, r3, r2, r1
 801c040:	f10c 0b01 	add.w	fp, ip, #1
 801c044:	b29b      	uxth	r3, r3
 801c046:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c04a:	b280      	uxth	r0, r0
 801c04c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c050:	f103 0c01 	add.w	ip, r3, #1
 801c054:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c058:	1c43      	adds	r3, r0, #1
 801c05a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c05e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c062:	0940      	lsrs	r0, r0, #5
 801c064:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c068:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c06c:	ea4c 0c00 	orr.w	ip, ip, r0
 801c070:	f824 cb02 	strh.w	ip, [r4], #2
 801c074:	e7bf      	b.n	801bff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c076:	f8be 3000 	ldrh.w	r3, [lr]
 801c07a:	eba3 0308 	sub.w	r3, r3, r8
 801c07e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c082:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c086:	eba3 0308 	sub.w	r3, r3, r8
 801c08a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c08e:	e7ae      	b.n	801bfee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c090:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c094:	f8d9 0000 	ldr.w	r0, [r9]
 801c098:	42ac      	cmp	r4, r5
 801c09a:	6803      	ldr	r3, [r0, #0]
 801c09c:	d20e      	bcs.n	801c0bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c09e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c0a2:	4632      	mov	r2, r6
 801c0a4:	463b      	mov	r3, r7
 801c0a6:	4621      	mov	r1, r4
 801c0a8:	47c0      	blx	r8
 801c0aa:	f8ba 3000 	ldrh.w	r3, [sl]
 801c0ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c0b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c0b6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c0ba:	e7eb      	b.n	801c094 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c0bc:	4b02      	ldr	r3, [pc, #8]	; (801c0c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c0be:	6818      	ldr	r0, [r3, #0]
 801c0c0:	6803      	ldr	r3, [r0, #0]
 801c0c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c0c4:	4798      	blx	r3
 801c0c6:	e76c      	b.n	801bfa2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c0c8:	20012da4 	.word	0x20012da4
 801c0cc:	20012d9e 	.word	0x20012d9e

0801c0d0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c0d0:	b510      	push	{r4, lr}
 801c0d2:	2184      	movs	r1, #132	; 0x84
 801c0d4:	4604      	mov	r4, r0
 801c0d6:	f00d fef2 	bl	8029ebe <_ZdlPvj>
 801c0da:	4620      	mov	r0, r4
 801c0dc:	bd10      	pop	{r4, pc}

0801c0de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c0de:	b510      	push	{r4, lr}
 801c0e0:	2104      	movs	r1, #4
 801c0e2:	4604      	mov	r4, r0
 801c0e4:	f00d feeb 	bl	8029ebe <_ZdlPvj>
 801c0e8:	4620      	mov	r0, r4
 801c0ea:	bd10      	pop	{r4, pc}

0801c0ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c0ec:	b510      	push	{r4, lr}
 801c0ee:	2104      	movs	r1, #4
 801c0f0:	4604      	mov	r4, r0
 801c0f2:	f00d fee4 	bl	8029ebe <_ZdlPvj>
 801c0f6:	4620      	mov	r0, r4
 801c0f8:	bd10      	pop	{r4, pc}

0801c0fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c0fa:	b510      	push	{r4, lr}
 801c0fc:	f640 0144 	movw	r1, #2116	; 0x844
 801c100:	4604      	mov	r4, r0
 801c102:	f00d fedc 	bl	8029ebe <_ZdlPvj>
 801c106:	4620      	mov	r0, r4
 801c108:	bd10      	pop	{r4, pc}

0801c10a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c10a:	b510      	push	{r4, lr}
 801c10c:	2104      	movs	r1, #4
 801c10e:	4604      	mov	r4, r0
 801c110:	f00d fed5 	bl	8029ebe <_ZdlPvj>
 801c114:	4620      	mov	r0, r4
 801c116:	bd10      	pop	{r4, pc}

0801c118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c118:	b510      	push	{r4, lr}
 801c11a:	2104      	movs	r1, #4
 801c11c:	4604      	mov	r4, r0
 801c11e:	f00d fece 	bl	8029ebe <_ZdlPvj>
 801c122:	4620      	mov	r0, r4
 801c124:	bd10      	pop	{r4, pc}

0801c126 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c126:	b510      	push	{r4, lr}
 801c128:	2104      	movs	r1, #4
 801c12a:	4604      	mov	r4, r0
 801c12c:	f00d fec7 	bl	8029ebe <_ZdlPvj>
 801c130:	4620      	mov	r0, r4
 801c132:	bd10      	pop	{r4, pc}

0801c134 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c134:	b510      	push	{r4, lr}
 801c136:	2104      	movs	r1, #4
 801c138:	4604      	mov	r4, r0
 801c13a:	f00d fec0 	bl	8029ebe <_ZdlPvj>
 801c13e:	4620      	mov	r0, r4
 801c140:	bd10      	pop	{r4, pc}

0801c142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c142:	b510      	push	{r4, lr}
 801c144:	2104      	movs	r1, #4
 801c146:	4604      	mov	r4, r0
 801c148:	f00d feb9 	bl	8029ebe <_ZdlPvj>
 801c14c:	4620      	mov	r0, r4
 801c14e:	bd10      	pop	{r4, pc}

0801c150 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c150:	b510      	push	{r4, lr}
 801c152:	2104      	movs	r1, #4
 801c154:	4604      	mov	r4, r0
 801c156:	f00d feb2 	bl	8029ebe <_ZdlPvj>
 801c15a:	4620      	mov	r0, r4
 801c15c:	bd10      	pop	{r4, pc}

0801c15e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c15e:	b510      	push	{r4, lr}
 801c160:	2104      	movs	r1, #4
 801c162:	4604      	mov	r4, r0
 801c164:	f00d feab 	bl	8029ebe <_ZdlPvj>
 801c168:	4620      	mov	r0, r4
 801c16a:	bd10      	pop	{r4, pc}

0801c16c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c16c:	b510      	push	{r4, lr}
 801c16e:	2104      	movs	r1, #4
 801c170:	4604      	mov	r4, r0
 801c172:	f00d fea4 	bl	8029ebe <_ZdlPvj>
 801c176:	4620      	mov	r0, r4
 801c178:	bd10      	pop	{r4, pc}

0801c17a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c17a:	b510      	push	{r4, lr}
 801c17c:	2104      	movs	r1, #4
 801c17e:	4604      	mov	r4, r0
 801c180:	f00d fe9d 	bl	8029ebe <_ZdlPvj>
 801c184:	4620      	mov	r0, r4
 801c186:	bd10      	pop	{r4, pc}

0801c188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c188:	b510      	push	{r4, lr}
 801c18a:	2104      	movs	r1, #4
 801c18c:	4604      	mov	r4, r0
 801c18e:	f00d fe96 	bl	8029ebe <_ZdlPvj>
 801c192:	4620      	mov	r0, r4
 801c194:	bd10      	pop	{r4, pc}

0801c196 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c196:	b510      	push	{r4, lr}
 801c198:	2104      	movs	r1, #4
 801c19a:	4604      	mov	r4, r0
 801c19c:	f00d fe8f 	bl	8029ebe <_ZdlPvj>
 801c1a0:	4620      	mov	r0, r4
 801c1a2:	bd10      	pop	{r4, pc}

0801c1a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c1a4:	b510      	push	{r4, lr}
 801c1a6:	2104      	movs	r1, #4
 801c1a8:	4604      	mov	r4, r0
 801c1aa:	f00d fe88 	bl	8029ebe <_ZdlPvj>
 801c1ae:	4620      	mov	r0, r4
 801c1b0:	bd10      	pop	{r4, pc}

0801c1b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c1b2:	b510      	push	{r4, lr}
 801c1b4:	2104      	movs	r1, #4
 801c1b6:	4604      	mov	r4, r0
 801c1b8:	f00d fe81 	bl	8029ebe <_ZdlPvj>
 801c1bc:	4620      	mov	r0, r4
 801c1be:	bd10      	pop	{r4, pc}

0801c1c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c1c0:	b510      	push	{r4, lr}
 801c1c2:	2104      	movs	r1, #4
 801c1c4:	4604      	mov	r4, r0
 801c1c6:	f00d fe7a 	bl	8029ebe <_ZdlPvj>
 801c1ca:	4620      	mov	r0, r4
 801c1cc:	bd10      	pop	{r4, pc}

0801c1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c1ce:	b510      	push	{r4, lr}
 801c1d0:	2104      	movs	r1, #4
 801c1d2:	4604      	mov	r4, r0
 801c1d4:	f00d fe73 	bl	8029ebe <_ZdlPvj>
 801c1d8:	4620      	mov	r0, r4
 801c1da:	bd10      	pop	{r4, pc}

0801c1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c1dc:	b510      	push	{r4, lr}
 801c1de:	2104      	movs	r1, #4
 801c1e0:	4604      	mov	r4, r0
 801c1e2:	f00d fe6c 	bl	8029ebe <_ZdlPvj>
 801c1e6:	4620      	mov	r0, r4
 801c1e8:	bd10      	pop	{r4, pc}

0801c1ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c1ea:	b510      	push	{r4, lr}
 801c1ec:	2104      	movs	r1, #4
 801c1ee:	4604      	mov	r4, r0
 801c1f0:	f00d fe65 	bl	8029ebe <_ZdlPvj>
 801c1f4:	4620      	mov	r0, r4
 801c1f6:	bd10      	pop	{r4, pc}

0801c1f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c1f8:	b510      	push	{r4, lr}
 801c1fa:	2104      	movs	r1, #4
 801c1fc:	4604      	mov	r4, r0
 801c1fe:	f00d fe5e 	bl	8029ebe <_ZdlPvj>
 801c202:	4620      	mov	r0, r4
 801c204:	bd10      	pop	{r4, pc}

0801c206 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c206:	b510      	push	{r4, lr}
 801c208:	2104      	movs	r1, #4
 801c20a:	4604      	mov	r4, r0
 801c20c:	f00d fe57 	bl	8029ebe <_ZdlPvj>
 801c210:	4620      	mov	r0, r4
 801c212:	bd10      	pop	{r4, pc}

0801c214 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c214:	b510      	push	{r4, lr}
 801c216:	2104      	movs	r1, #4
 801c218:	4604      	mov	r4, r0
 801c21a:	f00d fe50 	bl	8029ebe <_ZdlPvj>
 801c21e:	4620      	mov	r0, r4
 801c220:	bd10      	pop	{r4, pc}

0801c222 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c222:	b510      	push	{r4, lr}
 801c224:	2104      	movs	r1, #4
 801c226:	4604      	mov	r4, r0
 801c228:	f00d fe49 	bl	8029ebe <_ZdlPvj>
 801c22c:	4620      	mov	r0, r4
 801c22e:	bd10      	pop	{r4, pc}

0801c230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c230:	b510      	push	{r4, lr}
 801c232:	2104      	movs	r1, #4
 801c234:	4604      	mov	r4, r0
 801c236:	f00d fe42 	bl	8029ebe <_ZdlPvj>
 801c23a:	4620      	mov	r0, r4
 801c23c:	bd10      	pop	{r4, pc}

0801c23e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c23e:	b510      	push	{r4, lr}
 801c240:	2104      	movs	r1, #4
 801c242:	4604      	mov	r4, r0
 801c244:	f00d fe3b 	bl	8029ebe <_ZdlPvj>
 801c248:	4620      	mov	r0, r4
 801c24a:	bd10      	pop	{r4, pc}

0801c24c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c24c:	b510      	push	{r4, lr}
 801c24e:	2104      	movs	r1, #4
 801c250:	4604      	mov	r4, r0
 801c252:	f00d fe34 	bl	8029ebe <_ZdlPvj>
 801c256:	4620      	mov	r0, r4
 801c258:	bd10      	pop	{r4, pc}

0801c25a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c25a:	b510      	push	{r4, lr}
 801c25c:	2104      	movs	r1, #4
 801c25e:	4604      	mov	r4, r0
 801c260:	f00d fe2d 	bl	8029ebe <_ZdlPvj>
 801c264:	4620      	mov	r0, r4
 801c266:	bd10      	pop	{r4, pc}

0801c268 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c268:	b510      	push	{r4, lr}
 801c26a:	2104      	movs	r1, #4
 801c26c:	4604      	mov	r4, r0
 801c26e:	f00d fe26 	bl	8029ebe <_ZdlPvj>
 801c272:	4620      	mov	r0, r4
 801c274:	bd10      	pop	{r4, pc}

0801c276 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c276:	b510      	push	{r4, lr}
 801c278:	2104      	movs	r1, #4
 801c27a:	4604      	mov	r4, r0
 801c27c:	f00d fe1f 	bl	8029ebe <_ZdlPvj>
 801c280:	4620      	mov	r0, r4
 801c282:	bd10      	pop	{r4, pc}

0801c284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c284:	b510      	push	{r4, lr}
 801c286:	2104      	movs	r1, #4
 801c288:	4604      	mov	r4, r0
 801c28a:	f00d fe18 	bl	8029ebe <_ZdlPvj>
 801c28e:	4620      	mov	r0, r4
 801c290:	bd10      	pop	{r4, pc}
	...

0801c294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c298:	b08f      	sub	sp, #60	; 0x3c
 801c29a:	461c      	mov	r4, r3
 801c29c:	9205      	str	r2, [sp, #20]
 801c29e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c2a2:	9100      	str	r1, [sp, #0]
 801c2a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c2a6:	9201      	str	r2, [sp, #4]
 801c2a8:	2a00      	cmp	r2, #0
 801c2aa:	f000 8115 	beq.w	801c4d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c2ae:	6820      	ldr	r0, [r4, #0]
 801c2b0:	6861      	ldr	r1, [r4, #4]
 801c2b2:	aa0a      	add	r2, sp, #40	; 0x28
 801c2b4:	c203      	stmia	r2!, {r0, r1}
 801c2b6:	6818      	ldr	r0, [r3, #0]
 801c2b8:	6859      	ldr	r1, [r3, #4]
 801c2ba:	aa0c      	add	r2, sp, #48	; 0x30
 801c2bc:	c203      	stmia	r2!, {r0, r1}
 801c2be:	a80a      	add	r0, sp, #40	; 0x28
 801c2c0:	f7f9 fb2a 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2c4:	4621      	mov	r1, r4
 801c2c6:	a80c      	add	r0, sp, #48	; 0x30
 801c2c8:	f7f9 fb6a 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c2cc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c2d0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c2d4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c2d8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c2dc:	bfde      	ittt	le
 801c2de:	b2b3      	uxthle	r3, r6
 801c2e0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c2e4:	fb92 f3f3 	sdivle	r3, r2, r3
 801c2e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c2ec:	bfc8      	it	gt
 801c2ee:	2301      	movgt	r3, #1
 801c2f0:	fb92 f1f3 	sdiv	r1, r2, r3
 801c2f4:	fa1f fc81 	uxth.w	ip, r1
 801c2f8:	fb0c 2413 	mls	r4, ip, r3, r2
 801c2fc:	fb14 f406 	smulbb	r4, r4, r6
 801c300:	441d      	add	r5, r3
 801c302:	4404      	add	r4, r0
 801c304:	4661      	mov	r1, ip
 801c306:	3d01      	subs	r5, #1
 801c308:	b2a4      	uxth	r4, r4
 801c30a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c30e:	b131      	cbz	r1, 801c31e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c310:	9b05      	ldr	r3, [sp, #20]
 801c312:	9900      	ldr	r1, [sp, #0]
 801c314:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c318:	ba1b      	rev	r3, r3
 801c31a:	4419      	add	r1, r3
 801c31c:	9100      	str	r1, [sp, #0]
 801c31e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c322:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c326:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c32a:	4418      	add	r0, r3
 801c32c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c330:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c334:	441a      	add	r2, r3
 801c336:	4b6a      	ldr	r3, [pc, #424]	; (801c4e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c338:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c33c:	6818      	ldr	r0, [r3, #0]
 801c33e:	6803      	ldr	r3, [r0, #0]
 801c340:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c342:	4798      	blx	r3
 801c344:	4967      	ldr	r1, [pc, #412]	; (801c4e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c346:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c34a:	880b      	ldrh	r3, [r1, #0]
 801c34c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c350:	9109      	str	r1, [sp, #36]	; 0x24
 801c352:	fb03 c202 	mla	r2, r3, r2, ip
 801c356:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c35a:	4373      	muls	r3, r6
 801c35c:	b2ad      	uxth	r5, r5
 801c35e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c362:	00ad      	lsls	r5, r5, #2
 801c364:	9306      	str	r3, [sp, #24]
 801c366:	1d2b      	adds	r3, r5, #4
 801c368:	9307      	str	r3, [sp, #28]
 801c36a:	9b01      	ldr	r3, [sp, #4]
 801c36c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c370:	9103      	str	r1, [sp, #12]
 801c372:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c376:	2c00      	cmp	r4, #0
 801c378:	bf0c      	ite	eq
 801c37a:	46c6      	moveq	lr, r8
 801c37c:	f04f 0e00 	movne.w	lr, #0
 801c380:	2300      	movs	r3, #0
 801c382:	b292      	uxth	r2, r2
 801c384:	fa1f fe8e 	uxth.w	lr, lr
 801c388:	9302      	str	r3, [sp, #8]
 801c38a:	9204      	str	r2, [sp, #16]
 801c38c:	9a06      	ldr	r2, [sp, #24]
 801c38e:	4282      	cmp	r2, r0
 801c390:	f240 809d 	bls.w	801c4ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c394:	b963      	cbnz	r3, 801c3b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c396:	9b00      	ldr	r3, [sp, #0]
 801c398:	781a      	ldrb	r2, [r3, #0]
 801c39a:	0993      	lsrs	r3, r2, #6
 801c39c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c3a0:	9202      	str	r2, [sp, #8]
 801c3a2:	1e5a      	subs	r2, r3, #1
 801c3a4:	2a02      	cmp	r2, #2
 801c3a6:	d815      	bhi.n	801c3d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c3a8:	9a00      	ldr	r2, [sp, #0]
 801c3aa:	3201      	adds	r2, #1
 801c3ac:	9200      	str	r2, [sp, #0]
 801c3ae:	b29b      	uxth	r3, r3
 801c3b0:	b1b4      	cbz	r4, 801c3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c3b2:	429c      	cmp	r4, r3
 801c3b4:	bf95      	itete	ls
 801c3b6:	1b1c      	subls	r4, r3, r4
 801c3b8:	1ae4      	subhi	r4, r4, r3
 801c3ba:	fa1f fa84 	uxthls.w	sl, r4
 801c3be:	b2a4      	uxthhi	r4, r4
 801c3c0:	bf87      	ittee	hi
 801c3c2:	4671      	movhi	r1, lr
 801c3c4:	f04f 0a00 	movhi.w	sl, #0
 801c3c8:	fa1f f188 	uxthls.w	r1, r8
 801c3cc:	2400      	movls	r4, #0
 801c3ce:	4653      	mov	r3, sl
 801c3d0:	468e      	mov	lr, r1
 801c3d2:	e7db      	b.n	801c38c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c3d4:	9a00      	ldr	r2, [sp, #0]
 801c3d6:	9b00      	ldr	r3, [sp, #0]
 801c3d8:	3202      	adds	r2, #2
 801c3da:	785b      	ldrb	r3, [r3, #1]
 801c3dc:	9200      	str	r2, [sp, #0]
 801c3de:	e7e7      	b.n	801c3b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c3e0:	2202      	movs	r2, #2
 801c3e2:	4615      	mov	r5, r2
 801c3e4:	9907      	ldr	r1, [sp, #28]
 801c3e6:	9a02      	ldr	r2, [sp, #8]
 801c3e8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c3ec:	9905      	ldr	r1, [sp, #20]
 801c3ee:	4573      	cmp	r3, lr
 801c3f0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c3f4:	9a01      	ldr	r2, [sp, #4]
 801c3f6:	bf2b      	itete	cs
 801c3f8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c3fc:	ebae 0103 	subcc.w	r1, lr, r3
 801c400:	46f1      	movcs	r9, lr
 801c402:	4699      	movcc	r9, r3
 801c404:	bf27      	ittee	cs
 801c406:	fa1f fa8a 	uxthcs.w	sl, sl
 801c40a:	4621      	movcs	r1, r4
 801c40c:	b289      	uxthcc	r1, r1
 801c40e:	46a2      	movcc	sl, r4
 801c410:	2aff      	cmp	r2, #255	; 0xff
 801c412:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c416:	d105      	bne.n	801c424 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c418:	4481      	add	r9, r0
 801c41a:	4581      	cmp	r9, r0
 801c41c:	d045      	beq.n	801c4aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c41e:	f820 cb02 	strh.w	ip, [r0], #2
 801c422:	e7fa      	b.n	801c41a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c424:	9d03      	ldr	r5, [sp, #12]
 801c426:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c42a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c42e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c432:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c436:	436a      	muls	r2, r5
 801c438:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c43c:	fa5f fc8c 	uxtb.w	ip, ip
 801c440:	9208      	str	r2, [sp, #32]
 801c442:	fb0b fb05 	mul.w	fp, fp, r5
 801c446:	fb0c fc05 	mul.w	ip, ip, r5
 801c44a:	4481      	add	r9, r0
 801c44c:	4581      	cmp	r9, r0
 801c44e:	d02c      	beq.n	801c4aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c450:	8802      	ldrh	r2, [r0, #0]
 801c452:	9d04      	ldr	r5, [sp, #16]
 801c454:	9f04      	ldr	r7, [sp, #16]
 801c456:	1216      	asrs	r6, r2, #8
 801c458:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c45c:	fb16 f605 	smulbb	r6, r6, r5
 801c460:	9d08      	ldr	r5, [sp, #32]
 801c462:	442e      	add	r6, r5
 801c464:	10d5      	asrs	r5, r2, #3
 801c466:	00d2      	lsls	r2, r2, #3
 801c468:	b2d2      	uxtb	r2, r2
 801c46a:	fb12 f207 	smulbb	r2, r2, r7
 801c46e:	b2b6      	uxth	r6, r6
 801c470:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c474:	4462      	add	r2, ip
 801c476:	fb15 f507 	smulbb	r5, r5, r7
 801c47a:	b292      	uxth	r2, r2
 801c47c:	1c77      	adds	r7, r6, #1
 801c47e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c482:	1c57      	adds	r7, r2, #1
 801c484:	445d      	add	r5, fp
 801c486:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c48a:	b2ad      	uxth	r5, r5
 801c48c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c490:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c494:	4316      	orrs	r6, r2
 801c496:	1c6a      	adds	r2, r5, #1
 801c498:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c49c:	096d      	lsrs	r5, r5, #5
 801c49e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c4a2:	432e      	orrs	r6, r5
 801c4a4:	f820 6b02 	strh.w	r6, [r0], #2
 801c4a8:	e7d0      	b.n	801c44c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c4aa:	4573      	cmp	r3, lr
 801c4ac:	d38f      	bcc.n	801c3ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c4ae:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c4b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c4b4:	fa1f f188 	uxth.w	r1, r8
 801c4b8:	1a64      	subs	r4, r4, r1
 801c4ba:	881b      	ldrh	r3, [r3, #0]
 801c4bc:	b2a4      	uxth	r4, r4
 801c4be:	2c00      	cmp	r4, #0
 801c4c0:	eba3 0308 	sub.w	r3, r3, r8
 801c4c4:	bf18      	it	ne
 801c4c6:	2100      	movne	r1, #0
 801c4c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c4cc:	e77f      	b.n	801c3ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c4ce:	4b04      	ldr	r3, [pc, #16]	; (801c4e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c4d0:	6818      	ldr	r0, [r3, #0]
 801c4d2:	6803      	ldr	r3, [r0, #0]
 801c4d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c4d6:	4798      	blx	r3
 801c4d8:	b00f      	add	sp, #60	; 0x3c
 801c4da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4de:	bf00      	nop
 801c4e0:	20012da4 	.word	0x20012da4
 801c4e4:	20012d9e 	.word	0x20012d9e

0801c4e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4ec:	b09f      	sub	sp, #124	; 0x7c
 801c4ee:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c4f2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c4f6:	9209      	str	r2, [sp, #36]	; 0x24
 801c4f8:	461d      	mov	r5, r3
 801c4fa:	4604      	mov	r4, r0
 801c4fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c4fe:	2a00      	cmp	r2, #0
 801c500:	f000 81eb 	beq.w	801c8da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c504:	6828      	ldr	r0, [r5, #0]
 801c506:	6869      	ldr	r1, [r5, #4]
 801c508:	aa1a      	add	r2, sp, #104	; 0x68
 801c50a:	c203      	stmia	r2!, {r0, r1}
 801c50c:	6818      	ldr	r0, [r3, #0]
 801c50e:	6859      	ldr	r1, [r3, #4]
 801c510:	aa1c      	add	r2, sp, #112	; 0x70
 801c512:	c203      	stmia	r2!, {r0, r1}
 801c514:	a81a      	add	r0, sp, #104	; 0x68
 801c516:	f7f9 f9ff 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c51a:	4629      	mov	r1, r5
 801c51c:	a81c      	add	r0, sp, #112	; 0x70
 801c51e:	f7f9 fa3f 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c522:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c526:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c52a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c52e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c532:	bfd7      	itett	le
 801c534:	b29a      	uxthle	r2, r3
 801c536:	2201      	movgt	r2, #1
 801c538:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c53c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c540:	9202      	str	r2, [sp, #8]
 801c542:	9802      	ldr	r0, [sp, #8]
 801c544:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c548:	fb92 f0f0 	sdiv	r0, r2, r0
 801c54c:	b280      	uxth	r0, r0
 801c54e:	9010      	str	r0, [sp, #64]	; 0x40
 801c550:	9902      	ldr	r1, [sp, #8]
 801c552:	9802      	ldr	r0, [sp, #8]
 801c554:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c556:	4488      	add	r8, r1
 801c558:	fb05 2510 	mls	r5, r5, r0, r2
 801c55c:	fb15 f503 	smulbb	r5, r5, r3
 801c560:	f108 38ff 	add.w	r8, r8, #4294967295
 801c564:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c568:	fb98 f8f1 	sdiv	r8, r8, r1
 801c56c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c570:	440d      	add	r5, r1
 801c572:	4419      	add	r1, r3
 801c574:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c578:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c57c:	441a      	add	r2, r3
 801c57e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c582:	9304      	str	r3, [sp, #16]
 801c584:	4b95      	ldr	r3, [pc, #596]	; (801c7dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c586:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c58a:	6818      	ldr	r0, [r3, #0]
 801c58c:	6803      	ldr	r3, [r0, #0]
 801c58e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c590:	4798      	blx	r3
 801c592:	4b93      	ldr	r3, [pc, #588]	; (801c7e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c594:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c598:	881a      	ldrh	r2, [r3, #0]
 801c59a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c59e:	9318      	str	r3, [sp, #96]	; 0x60
 801c5a0:	fb02 7101 	mla	r1, r2, r1, r7
 801c5a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c5a8:	4356      	muls	r6, r2
 801c5aa:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c5ae:	f108 0801 	add.w	r8, r8, #1
 801c5b2:	920a      	str	r2, [sp, #40]	; 0x28
 801c5b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c5b6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c5ba:	930f      	str	r3, [sp, #60]	; 0x3c
 801c5bc:	fa1f f888 	uxth.w	r8, r8
 801c5c0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c5c4:	f108 0204 	add.w	r2, r8, #4
 801c5c8:	9211      	str	r2, [sp, #68]	; 0x44
 801c5ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c5cc:	4b85      	ldr	r3, [pc, #532]	; (801c7e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c5ce:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c5d2:	b2ad      	uxth	r5, r5
 801c5d4:	9215      	str	r2, [sp, #84]	; 0x54
 801c5d6:	2d00      	cmp	r5, #0
 801c5d8:	9a04      	ldr	r2, [sp, #16]
 801c5da:	f04f 0100 	mov.w	r1, #0
 801c5de:	bf18      	it	ne
 801c5e0:	2200      	movne	r2, #0
 801c5e2:	1b1b      	subs	r3, r3, r4
 801c5e4:	b292      	uxth	r2, r2
 801c5e6:	910d      	str	r1, [sp, #52]	; 0x34
 801c5e8:	9319      	str	r3, [sp, #100]	; 0x64
 801c5ea:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c5ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c5ee:	fa11 f383 	uxtah	r3, r1, r3
 801c5f2:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c5f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c5f8:	3304      	adds	r3, #4
 801c5fa:	9306      	str	r3, [sp, #24]
 801c5fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c5fe:	4283      	cmp	r3, r0
 801c600:	f240 8166 	bls.w	801c8d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c604:	9902      	ldr	r1, [sp, #8]
 801c606:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c60a:	fbb5 f3f3 	udiv	r3, r5, r3
 801c60e:	1acb      	subs	r3, r1, r3
 801c610:	b29b      	uxth	r3, r3
 801c612:	9316      	str	r3, [sp, #88]	; 0x58
 801c614:	9b06      	ldr	r3, [sp, #24]
 801c616:	9e06      	ldr	r6, [sp, #24]
 801c618:	7859      	ldrb	r1, [r3, #1]
 801c61a:	789b      	ldrb	r3, [r3, #2]
 801c61c:	7836      	ldrb	r6, [r6, #0]
 801c61e:	9612      	str	r6, [sp, #72]	; 0x48
 801c620:	021b      	lsls	r3, r3, #8
 801c622:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c626:	9906      	ldr	r1, [sp, #24]
 801c628:	78c9      	ldrb	r1, [r1, #3]
 801c62a:	430b      	orrs	r3, r1
 801c62c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c62e:	3601      	adds	r6, #1
 801c630:	4419      	add	r1, r3
 801c632:	9605      	str	r6, [sp, #20]
 801c634:	1c4e      	adds	r6, r1, #1
 801c636:	9603      	str	r6, [sp, #12]
 801c638:	7849      	ldrb	r1, [r1, #1]
 801c63a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c63c:	0209      	lsls	r1, r1, #8
 801c63e:	5cf3      	ldrb	r3, [r6, r3]
 801c640:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c644:	4319      	orrs	r1, r3
 801c646:	b28b      	uxth	r3, r1
 801c648:	930c      	str	r3, [sp, #48]	; 0x30
 801c64a:	2300      	movs	r3, #0
 801c64c:	f04f 0a01 	mov.w	sl, #1
 801c650:	9307      	str	r3, [sp, #28]
 801c652:	469c      	mov	ip, r3
 801c654:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c658:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c65c:	46d3      	mov	fp, sl
 801c65e:	4657      	mov	r7, sl
 801c660:	930e      	str	r3, [sp, #56]	; 0x38
 801c662:	2d00      	cmp	r5, #0
 801c664:	d07e      	beq.n	801c764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c666:	42af      	cmp	r7, r5
 801c668:	d26e      	bcs.n	801c748 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c66a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c66c:	9201      	str	r2, [sp, #4]
 801c66e:	1bed      	subs	r5, r5, r7
 801c670:	4283      	cmp	r3, r0
 801c672:	b2ad      	uxth	r5, r5
 801c674:	d802      	bhi.n	801c67c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c676:	e073      	b.n	801c760 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c678:	2b00      	cmp	r3, #0
 801c67a:	d15f      	bne.n	801c73c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c67c:	9b03      	ldr	r3, [sp, #12]
 801c67e:	785b      	ldrb	r3, [r3, #1]
 801c680:	f1cb 0207 	rsb	r2, fp, #7
 801c684:	4093      	lsls	r3, r2
 801c686:	005b      	lsls	r3, r3, #1
 801c688:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c68c:	9b03      	ldr	r3, [sp, #12]
 801c68e:	781b      	ldrb	r3, [r3, #0]
 801c690:	fa43 f30b 	asr.w	r3, r3, fp
 801c694:	b2db      	uxtb	r3, r3
 801c696:	4313      	orrs	r3, r2
 801c698:	f10b 0201 	add.w	r2, fp, #1
 801c69c:	fa5f fb82 	uxtb.w	fp, r2
 801c6a0:	9a03      	ldr	r2, [sp, #12]
 801c6a2:	f1bb 0f08 	cmp.w	fp, #8
 801c6a6:	bf15      	itete	ne
 801c6a8:	3201      	addne	r2, #1
 801c6aa:	3202      	addeq	r2, #2
 801c6ac:	9203      	strne	r2, [sp, #12]
 801c6ae:	9203      	streq	r2, [sp, #12]
 801c6b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c6b2:	b29f      	uxth	r7, r3
 801c6b4:	bf08      	it	eq
 801c6b6:	f04f 0b00 	moveq.w	fp, #0
 801c6ba:	42ba      	cmp	r2, r7
 801c6bc:	d309      	bcc.n	801c6d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c6be:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c6c2:	2301      	movs	r3, #1
 801c6c4:	9a05      	ldr	r2, [sp, #20]
 801c6c6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c6ca:	d30e      	bcc.n	801c6ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c6cc:	469a      	mov	sl, r3
 801c6ce:	2600      	movs	r6, #0
 801c6d0:	e035      	b.n	801c73e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c6d2:	9b05      	ldr	r3, [sp, #20]
 801c6d4:	429f      	cmp	r7, r3
 801c6d6:	d318      	bcc.n	801c70a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c6d8:	eb04 030a 	add.w	r3, r4, sl
 801c6dc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c6e0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c6e4:	f10a 0301 	add.w	r3, sl, #1
 801c6e8:	b29b      	uxth	r3, r3
 801c6ea:	9a05      	ldr	r2, [sp, #20]
 801c6ec:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c6f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c6f2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c6f6:	7116      	strb	r6, [r2, #4]
 801c6f8:	f10a 0601 	add.w	r6, sl, #1
 801c6fc:	80d1      	strh	r1, [r2, #6]
 801c6fe:	7156      	strb	r6, [r2, #5]
 801c700:	9a05      	ldr	r2, [sp, #20]
 801c702:	3201      	adds	r2, #1
 801c704:	b292      	uxth	r2, r2
 801c706:	9205      	str	r2, [sp, #20]
 801c708:	e7e0      	b.n	801c6cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c70a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c70e:	463a      	mov	r2, r7
 801c710:	795b      	ldrb	r3, [r3, #5]
 801c712:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c716:	4426      	add	r6, r4
 801c718:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c71a:	eb01 0c06 	add.w	ip, r1, r6
 801c71e:	f1bc 0f00 	cmp.w	ip, #0
 801c722:	dd07      	ble.n	801c734 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c724:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c728:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c72c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c730:	88d2      	ldrh	r2, [r2, #6]
 801c732:	e7f1      	b.n	801c718 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c734:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c738:	b29b      	uxth	r3, r3
 801c73a:	e7c3      	b.n	801c6c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c73c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c73e:	970c      	str	r7, [sp, #48]	; 0x30
 801c740:	9a01      	ldr	r2, [sp, #4]
 801c742:	46b4      	mov	ip, r6
 801c744:	461f      	mov	r7, r3
 801c746:	e78c      	b.n	801c662 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c748:	1b7b      	subs	r3, r7, r5
 801c74a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c74e:	9201      	str	r2, [sp, #4]
 801c750:	eb0c 0605 	add.w	r6, ip, r5
 801c754:	b29b      	uxth	r3, r3
 801c756:	b2b6      	uxth	r6, r6
 801c758:	2500      	movs	r5, #0
 801c75a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c75c:	4282      	cmp	r2, r0
 801c75e:	d88b      	bhi.n	801c678 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c760:	9a01      	ldr	r2, [sp, #4]
 801c762:	e74b      	b.n	801c5fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c764:	4297      	cmp	r7, r2
 801c766:	d332      	bcc.n	801c7ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c768:	1abb      	subs	r3, r7, r2
 801c76a:	b29b      	uxth	r3, r3
 801c76c:	9208      	str	r2, [sp, #32]
 801c76e:	9501      	str	r5, [sp, #4]
 801c770:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c772:	29ff      	cmp	r1, #255	; 0xff
 801c774:	9908      	ldr	r1, [sp, #32]
 801c776:	eb0c 0601 	add.w	r6, ip, r1
 801c77a:	d135      	bne.n	801c7e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c77c:	f1a0 0e02 	sub.w	lr, r0, #2
 801c780:	b2b6      	uxth	r6, r6
 801c782:	45b4      	cmp	ip, r6
 801c784:	f040 808c 	bne.w	801c8a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c788:	9908      	ldr	r1, [sp, #32]
 801c78a:	4297      	cmp	r7, r2
 801c78c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c790:	d3e2      	bcc.n	801c758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c792:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c794:	9904      	ldr	r1, [sp, #16]
 801c796:	8812      	ldrh	r2, [r2, #0]
 801c798:	1a52      	subs	r2, r2, r1
 801c79a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c79e:	9a07      	ldr	r2, [sp, #28]
 801c7a0:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c7a2:	3201      	adds	r2, #1
 801c7a4:	428a      	cmp	r2, r1
 801c7a6:	9207      	str	r2, [sp, #28]
 801c7a8:	f040 8087 	bne.w	801c8ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c7ac:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c7b0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c7b4:	9b04      	ldr	r3, [sp, #16]
 801c7b6:	1bed      	subs	r5, r5, r7
 801c7b8:	b2ad      	uxth	r5, r5
 801c7ba:	2d00      	cmp	r5, #0
 801c7bc:	bf08      	it	eq
 801c7be:	461a      	moveq	r2, r3
 801c7c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c7c2:	bf18      	it	ne
 801c7c4:	2200      	movne	r2, #0
 801c7c6:	3301      	adds	r3, #1
 801c7c8:	930d      	str	r3, [sp, #52]	; 0x34
 801c7ca:	b292      	uxth	r2, r2
 801c7cc:	e70d      	b.n	801c5ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c7ce:	1bd1      	subs	r1, r2, r7
 801c7d0:	b28b      	uxth	r3, r1
 801c7d2:	9301      	str	r3, [sp, #4]
 801c7d4:	9708      	str	r7, [sp, #32]
 801c7d6:	462b      	mov	r3, r5
 801c7d8:	e7ca      	b.n	801c770 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c7da:	bf00      	nop
 801c7dc:	20012da4 	.word	0x20012da4
 801c7e0:	20012d9e 	.word	0x20012d9e
 801c7e4:	fffff7fb 	.word	0xfffff7fb
 801c7e8:	b2b6      	uxth	r6, r6
 801c7ea:	900b      	str	r0, [sp, #44]	; 0x2c
 801c7ec:	45b4      	cmp	ip, r6
 801c7ee:	d0cb      	beq.n	801c788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c7f0:	f10c 0101 	add.w	r1, ip, #1
 801c7f4:	44a4      	add	ip, r4
 801c7f6:	9117      	str	r1, [sp, #92]	; 0x5c
 801c7f8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c7fc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c7fe:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c802:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c804:	f8b1 c000 	ldrh.w	ip, [r1]
 801c808:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c80a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c80e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c812:	fb1e fe01 	smulbb	lr, lr, r1
 801c816:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c81a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c81c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c820:	fb08 e801 	mla	r8, r8, r1, lr
 801c824:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c828:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c82a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c82e:	fb19 f901 	smulbb	r9, r9, r1
 801c832:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c836:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c838:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c83c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c840:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c844:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c846:	fa5f fc8c 	uxtb.w	ip, ip
 801c84a:	fb1c fc01 	smulbb	ip, ip, r1
 801c84e:	00ed      	lsls	r5, r5, #3
 801c850:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c852:	b2ed      	uxtb	r5, r5
 801c854:	fb05 c501 	mla	r5, r5, r1, ip
 801c858:	fa1f f888 	uxth.w	r8, r8
 801c85c:	fa1f fe8e 	uxth.w	lr, lr
 801c860:	b2ad      	uxth	r5, r5
 801c862:	f108 0c01 	add.w	ip, r8, #1
 801c866:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c86a:	f10e 0901 	add.w	r9, lr, #1
 801c86e:	f105 0c01 	add.w	ip, r5, #1
 801c872:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c876:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c87a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c87e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c882:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c886:	ea4c 0808 	orr.w	r8, ip, r8
 801c88a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c88c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c890:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c894:	ea48 0809 	orr.w	r8, r8, r9
 801c898:	f821 8b02 	strh.w	r8, [r1], #2
 801c89c:	910b      	str	r1, [sp, #44]	; 0x2c
 801c89e:	e7a5      	b.n	801c7ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c8a0:	f10c 0801 	add.w	r8, ip, #1
 801c8a4:	44a4      	add	ip, r4
 801c8a6:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c8a8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c8ac:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c8b0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c8b4:	fa1f fc88 	uxth.w	ip, r8
 801c8b8:	e763      	b.n	801c782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c8ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c8be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c8c2:	1aad      	subs	r5, r5, r2
 801c8c4:	b2ad      	uxth	r5, r5
 801c8c6:	2d00      	cmp	r5, #0
 801c8c8:	bf18      	it	ne
 801c8ca:	2200      	movne	r2, #0
 801c8cc:	9201      	str	r2, [sp, #4]
 801c8ce:	e744      	b.n	801c75a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c8d0:	4b03      	ldr	r3, [pc, #12]	; (801c8e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c8d2:	6818      	ldr	r0, [r3, #0]
 801c8d4:	6803      	ldr	r3, [r0, #0]
 801c8d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c8d8:	4798      	blx	r3
 801c8da:	b01f      	add	sp, #124	; 0x7c
 801c8dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8e0:	20012da4 	.word	0x20012da4

0801c8e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c8e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8e8:	b08f      	sub	sp, #60	; 0x3c
 801c8ea:	461c      	mov	r4, r3
 801c8ec:	9203      	str	r2, [sp, #12]
 801c8ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c8f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c8f4:	9202      	str	r2, [sp, #8]
 801c8f6:	460f      	mov	r7, r1
 801c8f8:	2a00      	cmp	r2, #0
 801c8fa:	f000 8128 	beq.w	801cb4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c8fe:	6820      	ldr	r0, [r4, #0]
 801c900:	6861      	ldr	r1, [r4, #4]
 801c902:	aa0a      	add	r2, sp, #40	; 0x28
 801c904:	c203      	stmia	r2!, {r0, r1}
 801c906:	6818      	ldr	r0, [r3, #0]
 801c908:	6859      	ldr	r1, [r3, #4]
 801c90a:	aa0c      	add	r2, sp, #48	; 0x30
 801c90c:	c203      	stmia	r2!, {r0, r1}
 801c90e:	a80a      	add	r0, sp, #40	; 0x28
 801c910:	f7f9 f802 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c914:	4621      	mov	r1, r4
 801c916:	a80c      	add	r0, sp, #48	; 0x30
 801c918:	f7f9 f842 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c91c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c920:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c924:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c928:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c92c:	bfde      	ittt	le
 801c92e:	b2b3      	uxthle	r3, r6
 801c930:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c934:	fb92 f3f3 	sdivle	r3, r2, r3
 801c938:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c93c:	bfc8      	it	gt
 801c93e:	2301      	movgt	r3, #1
 801c940:	fb92 f1f3 	sdiv	r1, r2, r3
 801c944:	fa1f fc81 	uxth.w	ip, r1
 801c948:	fb0c 2413 	mls	r4, ip, r3, r2
 801c94c:	fb14 f406 	smulbb	r4, r4, r6
 801c950:	441d      	add	r5, r3
 801c952:	4404      	add	r4, r0
 801c954:	4661      	mov	r1, ip
 801c956:	3d01      	subs	r5, #1
 801c958:	b2a4      	uxth	r4, r4
 801c95a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c95e:	b121      	cbz	r1, 801c96a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c960:	9b03      	ldr	r3, [sp, #12]
 801c962:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c966:	ba1b      	rev	r3, r3
 801c968:	441f      	add	r7, r3
 801c96a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c96e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c972:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c976:	4418      	add	r0, r3
 801c978:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c97c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c980:	441a      	add	r2, r3
 801c982:	4b74      	ldr	r3, [pc, #464]	; (801cb54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c984:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c988:	6818      	ldr	r0, [r3, #0]
 801c98a:	6803      	ldr	r3, [r0, #0]
 801c98c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c98e:	4798      	blx	r3
 801c990:	4a71      	ldr	r2, [pc, #452]	; (801cb58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c992:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801c996:	8813      	ldrh	r3, [r2, #0]
 801c998:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c99c:	9209      	str	r2, [sp, #36]	; 0x24
 801c99e:	fb03 c101 	mla	r1, r3, r1, ip
 801c9a2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c9a6:	4373      	muls	r3, r6
 801c9a8:	b2ad      	uxth	r5, r5
 801c9aa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c9ae:	00ad      	lsls	r5, r5, #2
 801c9b0:	2c00      	cmp	r4, #0
 801c9b2:	9304      	str	r3, [sp, #16]
 801c9b4:	f105 0304 	add.w	r3, r5, #4
 801c9b8:	9305      	str	r3, [sp, #20]
 801c9ba:	bf0c      	ite	eq
 801c9bc:	46c8      	moveq	r8, r9
 801c9be:	f04f 0800 	movne.w	r8, #0
 801c9c2:	2300      	movs	r3, #0
 801c9c4:	fa1f f888 	uxth.w	r8, r8
 801c9c8:	9301      	str	r3, [sp, #4]
 801c9ca:	9a04      	ldr	r2, [sp, #16]
 801c9cc:	4282      	cmp	r2, r0
 801c9ce:	f240 80b9 	bls.w	801cb44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c9d2:	b95b      	cbnz	r3, 801c9ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c9d4:	783a      	ldrb	r2, [r7, #0]
 801c9d6:	0993      	lsrs	r3, r2, #6
 801c9d8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c9dc:	9201      	str	r2, [sp, #4]
 801c9de:	1e5a      	subs	r2, r3, #1
 801c9e0:	2a02      	cmp	r2, #2
 801c9e2:	bf8d      	iteet	hi
 801c9e4:	787b      	ldrbhi	r3, [r7, #1]
 801c9e6:	3701      	addls	r7, #1
 801c9e8:	b29b      	uxthls	r3, r3
 801c9ea:	3702      	addhi	r7, #2
 801c9ec:	b184      	cbz	r4, 801ca10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c9ee:	429c      	cmp	r4, r3
 801c9f0:	bf95      	itete	ls
 801c9f2:	1b1c      	subls	r4, r3, r4
 801c9f4:	1ae4      	subhi	r4, r4, r3
 801c9f6:	fa1f fa84 	uxthls.w	sl, r4
 801c9fa:	b2a4      	uxthhi	r4, r4
 801c9fc:	bf87      	ittee	hi
 801c9fe:	46c4      	movhi	ip, r8
 801ca00:	f04f 0a00 	movhi.w	sl, #0
 801ca04:	fa1f fc89 	uxthls.w	ip, r9
 801ca08:	2400      	movls	r4, #0
 801ca0a:	4653      	mov	r3, sl
 801ca0c:	46e0      	mov	r8, ip
 801ca0e:	e7dc      	b.n	801c9ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801ca10:	2204      	movs	r2, #4
 801ca12:	4615      	mov	r5, r2
 801ca14:	9905      	ldr	r1, [sp, #20]
 801ca16:	9a01      	ldr	r2, [sp, #4]
 801ca18:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ca1c:	9903      	ldr	r1, [sp, #12]
 801ca1e:	588a      	ldr	r2, [r1, r2]
 801ca20:	4543      	cmp	r3, r8
 801ca22:	bf27      	ittee	cs
 801ca24:	eba3 0a08 	subcs.w	sl, r3, r8
 801ca28:	46c6      	movcs	lr, r8
 801ca2a:	eba8 0c03 	subcc.w	ip, r8, r3
 801ca2e:	469e      	movcc	lr, r3
 801ca30:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801ca34:	bf27      	ittee	cs
 801ca36:	fa1f fa8a 	uxthcs.w	sl, sl
 801ca3a:	46a4      	movcs	ip, r4
 801ca3c:	fa1f fc8c 	uxthcc.w	ip, ip
 801ca40:	46a2      	movcc	sl, r4
 801ca42:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801ca46:	2900      	cmp	r1, #0
 801ca48:	d066      	beq.n	801cb18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801ca4a:	29ff      	cmp	r1, #255	; 0xff
 801ca4c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ca50:	d114      	bne.n	801ca7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ca52:	9d02      	ldr	r5, [sp, #8]
 801ca54:	2dff      	cmp	r5, #255	; 0xff
 801ca56:	d111      	bne.n	801ca7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ca58:	0951      	lsrs	r1, r2, #5
 801ca5a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ca5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ca62:	f026 0607 	bic.w	r6, r6, #7
 801ca66:	430e      	orrs	r6, r1
 801ca68:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ca6c:	4316      	orrs	r6, r2
 801ca6e:	b2b6      	uxth	r6, r6
 801ca70:	4486      	add	lr, r0
 801ca72:	4586      	cmp	lr, r0
 801ca74:	d051      	beq.n	801cb1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ca76:	f820 6b02 	strh.w	r6, [r0], #2
 801ca7a:	e7fa      	b.n	801ca72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801ca7c:	9d02      	ldr	r5, [sp, #8]
 801ca7e:	4369      	muls	r1, r5
 801ca80:	1c4d      	adds	r5, r1, #1
 801ca82:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801ca86:	122d      	asrs	r5, r5, #8
 801ca88:	ea6f 0b05 	mvn.w	fp, r5
 801ca8c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ca90:	b2ad      	uxth	r5, r5
 801ca92:	b2f6      	uxtb	r6, r6
 801ca94:	b2d2      	uxtb	r2, r2
 801ca96:	fb11 f105 	smulbb	r1, r1, r5
 801ca9a:	fb16 f605 	smulbb	r6, r6, r5
 801ca9e:	fb12 f205 	smulbb	r2, r2, r5
 801caa2:	b289      	uxth	r1, r1
 801caa4:	b2b6      	uxth	r6, r6
 801caa6:	b292      	uxth	r2, r2
 801caa8:	9106      	str	r1, [sp, #24]
 801caaa:	9607      	str	r6, [sp, #28]
 801caac:	9208      	str	r2, [sp, #32]
 801caae:	4486      	add	lr, r0
 801cab0:	fa5f fb8b 	uxtb.w	fp, fp
 801cab4:	4586      	cmp	lr, r0
 801cab6:	d030      	beq.n	801cb1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cab8:	8802      	ldrh	r2, [r0, #0]
 801caba:	9906      	ldr	r1, [sp, #24]
 801cabc:	1216      	asrs	r6, r2, #8
 801cabe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cac2:	10d5      	asrs	r5, r2, #3
 801cac4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cac8:	fb06 160b 	mla	r6, r6, fp, r1
 801cacc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cad0:	9907      	ldr	r1, [sp, #28]
 801cad2:	00d2      	lsls	r2, r2, #3
 801cad4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cad8:	fb05 150b 	mla	r5, r5, fp, r1
 801cadc:	b2d2      	uxtb	r2, r2
 801cade:	9908      	ldr	r1, [sp, #32]
 801cae0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cae4:	b2b6      	uxth	r6, r6
 801cae6:	fb02 120b 	mla	r2, r2, fp, r1
 801caea:	b292      	uxth	r2, r2
 801caec:	1c71      	adds	r1, r6, #1
 801caee:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801caf2:	1c51      	adds	r1, r2, #1
 801caf4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801caf8:	b2ad      	uxth	r5, r5
 801cafa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cafe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cb02:	4316      	orrs	r6, r2
 801cb04:	1c6a      	adds	r2, r5, #1
 801cb06:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801cb0a:	096d      	lsrs	r5, r5, #5
 801cb0c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb10:	432e      	orrs	r6, r5
 801cb12:	f820 6b02 	strh.w	r6, [r0], #2
 801cb16:	e7cd      	b.n	801cab4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801cb18:	4470      	add	r0, lr
 801cb1a:	4543      	cmp	r3, r8
 801cb1c:	f4ff af75 	bcc.w	801ca0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cb20:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cb24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb26:	fa1f fc89 	uxth.w	ip, r9
 801cb2a:	eba4 040c 	sub.w	r4, r4, ip
 801cb2e:	881b      	ldrh	r3, [r3, #0]
 801cb30:	b2a4      	uxth	r4, r4
 801cb32:	2c00      	cmp	r4, #0
 801cb34:	eba3 0309 	sub.w	r3, r3, r9
 801cb38:	bf18      	it	ne
 801cb3a:	f04f 0c00 	movne.w	ip, #0
 801cb3e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cb42:	e762      	b.n	801ca0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cb44:	4b03      	ldr	r3, [pc, #12]	; (801cb54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cb46:	6818      	ldr	r0, [r3, #0]
 801cb48:	6803      	ldr	r3, [r0, #0]
 801cb4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb4c:	4798      	blx	r3
 801cb4e:	b00f      	add	sp, #60	; 0x3c
 801cb50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb54:	20012da4 	.word	0x20012da4
 801cb58:	20012d9e 	.word	0x20012d9e

0801cb5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801cb5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb60:	b093      	sub	sp, #76	; 0x4c
 801cb62:	461c      	mov	r4, r3
 801cb64:	9205      	str	r2, [sp, #20]
 801cb66:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cb6a:	9101      	str	r1, [sp, #4]
 801cb6c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cb6e:	9202      	str	r2, [sp, #8]
 801cb70:	2a00      	cmp	r2, #0
 801cb72:	f000 812c 	beq.w	801cdce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cb76:	6820      	ldr	r0, [r4, #0]
 801cb78:	6861      	ldr	r1, [r4, #4]
 801cb7a:	aa0e      	add	r2, sp, #56	; 0x38
 801cb7c:	c203      	stmia	r2!, {r0, r1}
 801cb7e:	6818      	ldr	r0, [r3, #0]
 801cb80:	6859      	ldr	r1, [r3, #4]
 801cb82:	aa10      	add	r2, sp, #64	; 0x40
 801cb84:	c203      	stmia	r2!, {r0, r1}
 801cb86:	a80e      	add	r0, sp, #56	; 0x38
 801cb88:	f7f8 fec6 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb8c:	4621      	mov	r1, r4
 801cb8e:	a810      	add	r0, sp, #64	; 0x40
 801cb90:	f7f8 ff06 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb94:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cb98:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801cb9c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801cba0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cba4:	bfde      	ittt	le
 801cba6:	b2b3      	uxthle	r3, r6
 801cba8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cbac:	fb92 f3f3 	sdivle	r3, r2, r3
 801cbb0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cbb4:	bfc8      	it	gt
 801cbb6:	2301      	movgt	r3, #1
 801cbb8:	fb92 f1f3 	sdiv	r1, r2, r3
 801cbbc:	fa1f fc81 	uxth.w	ip, r1
 801cbc0:	fb0c 2413 	mls	r4, ip, r3, r2
 801cbc4:	fb14 f406 	smulbb	r4, r4, r6
 801cbc8:	441d      	add	r5, r3
 801cbca:	4404      	add	r4, r0
 801cbcc:	4661      	mov	r1, ip
 801cbce:	3d01      	subs	r5, #1
 801cbd0:	b2a4      	uxth	r4, r4
 801cbd2:	fb95 f5f3 	sdiv	r5, r5, r3
 801cbd6:	b131      	cbz	r1, 801cbe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cbd8:	9b05      	ldr	r3, [sp, #20]
 801cbda:	9901      	ldr	r1, [sp, #4]
 801cbdc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cbe0:	ba1b      	rev	r3, r3
 801cbe2:	4419      	add	r1, r3
 801cbe4:	9101      	str	r1, [sp, #4]
 801cbe6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cbea:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cbee:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cbf2:	4418      	add	r0, r3
 801cbf4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cbf8:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cbfc:	441a      	add	r2, r3
 801cbfe:	4b75      	ldr	r3, [pc, #468]	; (801cdd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cc00:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cc04:	6818      	ldr	r0, [r3, #0]
 801cc06:	6803      	ldr	r3, [r0, #0]
 801cc08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc0a:	4798      	blx	r3
 801cc0c:	4972      	ldr	r1, [pc, #456]	; (801cdd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cc0e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cc12:	880b      	ldrh	r3, [r1, #0]
 801cc14:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cc18:	910d      	str	r1, [sp, #52]	; 0x34
 801cc1a:	fb03 c202 	mla	r2, r3, r2, ip
 801cc1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc22:	4373      	muls	r3, r6
 801cc24:	b2ad      	uxth	r5, r5
 801cc26:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cc2a:	00ad      	lsls	r5, r5, #2
 801cc2c:	9308      	str	r3, [sp, #32]
 801cc2e:	1d2b      	adds	r3, r5, #4
 801cc30:	9309      	str	r3, [sp, #36]	; 0x24
 801cc32:	9b02      	ldr	r3, [sp, #8]
 801cc34:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cc38:	9106      	str	r1, [sp, #24]
 801cc3a:	43da      	mvns	r2, r3
 801cc3c:	2c00      	cmp	r4, #0
 801cc3e:	bf0c      	ite	eq
 801cc40:	46dc      	moveq	ip, fp
 801cc42:	f04f 0c00 	movne.w	ip, #0
 801cc46:	2300      	movs	r3, #0
 801cc48:	b2d2      	uxtb	r2, r2
 801cc4a:	fa1f fc8c 	uxth.w	ip, ip
 801cc4e:	9303      	str	r3, [sp, #12]
 801cc50:	9207      	str	r2, [sp, #28]
 801cc52:	9a08      	ldr	r2, [sp, #32]
 801cc54:	4282      	cmp	r2, r0
 801cc56:	f240 80b5 	bls.w	801cdc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cc5a:	b963      	cbnz	r3, 801cc76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cc5c:	9b01      	ldr	r3, [sp, #4]
 801cc5e:	781a      	ldrb	r2, [r3, #0]
 801cc60:	0993      	lsrs	r3, r2, #6
 801cc62:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cc66:	9203      	str	r2, [sp, #12]
 801cc68:	1e5a      	subs	r2, r3, #1
 801cc6a:	2a02      	cmp	r2, #2
 801cc6c:	d815      	bhi.n	801cc9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cc6e:	9a01      	ldr	r2, [sp, #4]
 801cc70:	3201      	adds	r2, #1
 801cc72:	9201      	str	r2, [sp, #4]
 801cc74:	b29b      	uxth	r3, r3
 801cc76:	b1b4      	cbz	r4, 801cca6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cc78:	429c      	cmp	r4, r3
 801cc7a:	bf95      	itete	ls
 801cc7c:	1b1c      	subls	r4, r3, r4
 801cc7e:	1ae4      	subhi	r4, r4, r3
 801cc80:	fa1f f884 	uxthls.w	r8, r4
 801cc84:	b2a4      	uxthhi	r4, r4
 801cc86:	bf87      	ittee	hi
 801cc88:	4666      	movhi	r6, ip
 801cc8a:	f04f 0800 	movhi.w	r8, #0
 801cc8e:	fa1f f68b 	uxthls.w	r6, fp
 801cc92:	2400      	movls	r4, #0
 801cc94:	4643      	mov	r3, r8
 801cc96:	46b4      	mov	ip, r6
 801cc98:	e7db      	b.n	801cc52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cc9a:	9a01      	ldr	r2, [sp, #4]
 801cc9c:	9b01      	ldr	r3, [sp, #4]
 801cc9e:	3202      	adds	r2, #2
 801cca0:	785b      	ldrb	r3, [r3, #1]
 801cca2:	9201      	str	r2, [sp, #4]
 801cca4:	e7e7      	b.n	801cc76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cca6:	2203      	movs	r2, #3
 801cca8:	4615      	mov	r5, r2
 801ccaa:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ccac:	9a03      	ldr	r2, [sp, #12]
 801ccae:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ccb2:	9905      	ldr	r1, [sp, #20]
 801ccb4:	4563      	cmp	r3, ip
 801ccb6:	eb01 0502 	add.w	r5, r1, r2
 801ccba:	9902      	ldr	r1, [sp, #8]
 801ccbc:	bf29      	itett	cs
 801ccbe:	eba3 080c 	subcs.w	r8, r3, ip
 801ccc2:	ebac 0603 	subcc.w	r6, ip, r3
 801ccc6:	fa1f f888 	uxthcs.w	r8, r8
 801ccca:	46e1      	movcs	r9, ip
 801cccc:	bf2f      	iteee	cs
 801ccce:	4626      	movcs	r6, r4
 801ccd0:	b2b6      	uxthcc	r6, r6
 801ccd2:	4699      	movcc	r9, r3
 801ccd4:	46a0      	movcc	r8, r4
 801ccd6:	29ff      	cmp	r1, #255	; 0xff
 801ccd8:	d04a      	beq.n	801cd70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801ccda:	9f06      	ldr	r7, [sp, #24]
 801ccdc:	78a9      	ldrb	r1, [r5, #2]
 801ccde:	9004      	str	r0, [sp, #16]
 801cce0:	4379      	muls	r1, r7
 801cce2:	910a      	str	r1, [sp, #40]	; 0x28
 801cce4:	7869      	ldrb	r1, [r5, #1]
 801cce6:	4379      	muls	r1, r7
 801cce8:	910b      	str	r1, [sp, #44]	; 0x2c
 801ccea:	9905      	ldr	r1, [sp, #20]
 801ccec:	5c8a      	ldrb	r2, [r1, r2]
 801ccee:	437a      	muls	r2, r7
 801ccf0:	920c      	str	r2, [sp, #48]	; 0x30
 801ccf2:	46ca      	mov	sl, r9
 801ccf4:	f1ba 0f00 	cmp.w	sl, #0
 801ccf8:	d03d      	beq.n	801cd76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801ccfa:	9a04      	ldr	r2, [sp, #16]
 801ccfc:	9f07      	ldr	r7, [sp, #28]
 801ccfe:	8812      	ldrh	r2, [r2, #0]
 801cd00:	1215      	asrs	r5, r2, #8
 801cd02:	46be      	mov	lr, r7
 801cd04:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cd08:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cd0a:	10d1      	asrs	r1, r2, #3
 801cd0c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cd10:	fb05 750e 	mla	r5, r5, lr, r7
 801cd14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cd18:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cd1a:	00d2      	lsls	r2, r2, #3
 801cd1c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cd20:	fb01 710e 	mla	r1, r1, lr, r7
 801cd24:	b2d2      	uxtb	r2, r2
 801cd26:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cd28:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cd2c:	b2ad      	uxth	r5, r5
 801cd2e:	fb02 720e 	mla	r2, r2, lr, r7
 801cd32:	b292      	uxth	r2, r2
 801cd34:	f105 0e01 	add.w	lr, r5, #1
 801cd38:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801cd3c:	f102 0e01 	add.w	lr, r2, #1
 801cd40:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801cd44:	b289      	uxth	r1, r1
 801cd46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cd4a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cd4e:	4315      	orrs	r5, r2
 801cd50:	1c4a      	adds	r2, r1, #1
 801cd52:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cd56:	0949      	lsrs	r1, r1, #5
 801cd58:	9a04      	ldr	r2, [sp, #16]
 801cd5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cd5e:	430d      	orrs	r5, r1
 801cd60:	f822 5b02 	strh.w	r5, [r2], #2
 801cd64:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cd68:	9204      	str	r2, [sp, #16]
 801cd6a:	fa1f fa8a 	uxth.w	sl, sl
 801cd6e:	e7c1      	b.n	801ccf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801cd70:	4649      	mov	r1, r9
 801cd72:	4686      	mov	lr, r0
 801cd74:	b999      	cbnz	r1, 801cd9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cd76:	4563      	cmp	r3, ip
 801cd78:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801cd7c:	d38a      	bcc.n	801cc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cd7e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801cd82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cd84:	fa1f f68b 	uxth.w	r6, fp
 801cd88:	1ba4      	subs	r4, r4, r6
 801cd8a:	881b      	ldrh	r3, [r3, #0]
 801cd8c:	b2a4      	uxth	r4, r4
 801cd8e:	2c00      	cmp	r4, #0
 801cd90:	eba3 030b 	sub.w	r3, r3, fp
 801cd94:	bf18      	it	ne
 801cd96:	2600      	movne	r6, #0
 801cd98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cd9c:	e77a      	b.n	801cc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cd9e:	78aa      	ldrb	r2, [r5, #2]
 801cda0:	4f0e      	ldr	r7, [pc, #56]	; (801cddc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801cda2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801cda6:	786a      	ldrb	r2, [r5, #1]
 801cda8:	00d2      	lsls	r2, r2, #3
 801cdaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cdae:	ea4a 0202 	orr.w	r2, sl, r2
 801cdb2:	f895 a000 	ldrb.w	sl, [r5]
 801cdb6:	3901      	subs	r1, #1
 801cdb8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801cdbc:	f82e 2b02 	strh.w	r2, [lr], #2
 801cdc0:	b289      	uxth	r1, r1
 801cdc2:	e7d7      	b.n	801cd74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801cdc4:	4b03      	ldr	r3, [pc, #12]	; (801cdd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cdc6:	6818      	ldr	r0, [r3, #0]
 801cdc8:	6803      	ldr	r3, [r0, #0]
 801cdca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cdcc:	4798      	blx	r3
 801cdce:	b013      	add	sp, #76	; 0x4c
 801cdd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdd4:	20012da4 	.word	0x20012da4
 801cdd8:	20012d9e 	.word	0x20012d9e
 801cddc:	fffff800 	.word	0xfffff800

0801cde0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cde0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cde4:	b09d      	sub	sp, #116	; 0x74
 801cde6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801cdea:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801cdee:	920e      	str	r2, [sp, #56]	; 0x38
 801cdf0:	461c      	mov	r4, r3
 801cdf2:	4683      	mov	fp, r0
 801cdf4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cdf6:	2a00      	cmp	r2, #0
 801cdf8:	f000 81e0 	beq.w	801d1bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801cdfc:	6820      	ldr	r0, [r4, #0]
 801cdfe:	6861      	ldr	r1, [r4, #4]
 801ce00:	aa18      	add	r2, sp, #96	; 0x60
 801ce02:	c203      	stmia	r2!, {r0, r1}
 801ce04:	6818      	ldr	r0, [r3, #0]
 801ce06:	6859      	ldr	r1, [r3, #4]
 801ce08:	aa1a      	add	r2, sp, #104	; 0x68
 801ce0a:	c203      	stmia	r2!, {r0, r1}
 801ce0c:	a818      	add	r0, sp, #96	; 0x60
 801ce0e:	f7f8 fd83 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce12:	4621      	mov	r1, r4
 801ce14:	a81a      	add	r0, sp, #104	; 0x68
 801ce16:	f7f8 fdc3 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce1a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801ce1e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801ce22:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ce26:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ce2a:	bfd7      	itett	le
 801ce2c:	b29a      	uxthle	r2, r3
 801ce2e:	2201      	movgt	r2, #1
 801ce30:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ce34:	fb91 f2f2 	sdivle	r2, r1, r2
 801ce38:	9202      	str	r2, [sp, #8]
 801ce3a:	9802      	ldr	r0, [sp, #8]
 801ce3c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801ce40:	fb92 f0f0 	sdiv	r0, r2, r0
 801ce44:	b280      	uxth	r0, r0
 801ce46:	900f      	str	r0, [sp, #60]	; 0x3c
 801ce48:	9902      	ldr	r1, [sp, #8]
 801ce4a:	9802      	ldr	r0, [sp, #8]
 801ce4c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ce4e:	440c      	add	r4, r1
 801ce50:	fb05 2510 	mls	r5, r5, r0, r2
 801ce54:	fb15 f503 	smulbb	r5, r5, r3
 801ce58:	3c01      	subs	r4, #1
 801ce5a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801ce5e:	fb94 f4f1 	sdiv	r4, r4, r1
 801ce62:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801ce66:	440d      	add	r5, r1
 801ce68:	4419      	add	r1, r3
 801ce6a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801ce6e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801ce72:	441a      	add	r2, r3
 801ce74:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ce78:	9306      	str	r3, [sp, #24]
 801ce7a:	4bb3      	ldr	r3, [pc, #716]	; (801d148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801ce7c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801ce80:	6818      	ldr	r0, [r3, #0]
 801ce82:	6803      	ldr	r3, [r0, #0]
 801ce84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ce86:	4798      	blx	r3
 801ce88:	4bb0      	ldr	r3, [pc, #704]	; (801d14c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801ce8a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801ce8e:	881a      	ldrh	r2, [r3, #0]
 801ce90:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801ce94:	9316      	str	r3, [sp, #88]	; 0x58
 801ce96:	fb02 7101 	mla	r1, r2, r1, r7
 801ce9a:	3401      	adds	r4, #1
 801ce9c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801cea0:	b2a4      	uxth	r4, r4
 801cea2:	4356      	muls	r6, r2
 801cea4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801cea8:	00a4      	lsls	r4, r4, #2
 801ceaa:	920a      	str	r2, [sp, #40]	; 0x28
 801ceac:	1d22      	adds	r2, r4, #4
 801ceae:	b2ad      	uxth	r5, r5
 801ceb0:	9213      	str	r2, [sp, #76]	; 0x4c
 801ceb2:	4ba7      	ldr	r3, [pc, #668]	; (801d150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801ceb4:	9a06      	ldr	r2, [sp, #24]
 801ceb6:	2d00      	cmp	r5, #0
 801ceb8:	bf0c      	ite	eq
 801ceba:	4611      	moveq	r1, r2
 801cebc:	2100      	movne	r1, #0
 801cebe:	2200      	movs	r2, #0
 801cec0:	eba3 030b 	sub.w	r3, r3, fp
 801cec4:	b289      	uxth	r1, r1
 801cec6:	920d      	str	r2, [sp, #52]	; 0x34
 801cec8:	9317      	str	r3, [sp, #92]	; 0x5c
 801ceca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cecc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cece:	fa12 f383 	uxtah	r3, r2, r3
 801ced2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ced4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ced8:	3304      	adds	r3, #4
 801ceda:	9308      	str	r3, [sp, #32]
 801cedc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cede:	4543      	cmp	r3, r8
 801cee0:	f240 8167 	bls.w	801d1b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801cee4:	9a02      	ldr	r2, [sp, #8]
 801cee6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801ceea:	fbb5 f3f3 	udiv	r3, r5, r3
 801ceee:	1ad3      	subs	r3, r2, r3
 801cef0:	b29b      	uxth	r3, r3
 801cef2:	9314      	str	r3, [sp, #80]	; 0x50
 801cef4:	9b08      	ldr	r3, [sp, #32]
 801cef6:	9808      	ldr	r0, [sp, #32]
 801cef8:	785a      	ldrb	r2, [r3, #1]
 801cefa:	789b      	ldrb	r3, [r3, #2]
 801cefc:	7800      	ldrb	r0, [r0, #0]
 801cefe:	9010      	str	r0, [sp, #64]	; 0x40
 801cf00:	021b      	lsls	r3, r3, #8
 801cf02:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801cf06:	9a08      	ldr	r2, [sp, #32]
 801cf08:	78d2      	ldrb	r2, [r2, #3]
 801cf0a:	4313      	orrs	r3, r2
 801cf0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cf0e:	3001      	adds	r0, #1
 801cf10:	441a      	add	r2, r3
 801cf12:	9007      	str	r0, [sp, #28]
 801cf14:	1c50      	adds	r0, r2, #1
 801cf16:	9005      	str	r0, [sp, #20]
 801cf18:	7852      	ldrb	r2, [r2, #1]
 801cf1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cf1c:	0212      	lsls	r2, r2, #8
 801cf1e:	5cc3      	ldrb	r3, [r0, r3]
 801cf20:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801cf24:	431a      	orrs	r2, r3
 801cf26:	b293      	uxth	r3, r2
 801cf28:	930b      	str	r3, [sp, #44]	; 0x2c
 801cf2a:	2300      	movs	r3, #0
 801cf2c:	9309      	str	r3, [sp, #36]	; 0x24
 801cf2e:	2301      	movs	r3, #1
 801cf30:	9301      	str	r3, [sp, #4]
 801cf32:	9304      	str	r3, [sp, #16]
 801cf34:	2300      	movs	r3, #0
 801cf36:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801cf3a:	9303      	str	r3, [sp, #12]
 801cf3c:	f04f 0e01 	mov.w	lr, #1
 801cf40:	2d00      	cmp	r5, #0
 801cf42:	d07c      	beq.n	801d03e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801cf44:	45ae      	cmp	lr, r5
 801cf46:	d26b      	bcs.n	801d020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801cf48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf4a:	eba5 050e 	sub.w	r5, r5, lr
 801cf4e:	4543      	cmp	r3, r8
 801cf50:	b2ad      	uxth	r5, r5
 801cf52:	460c      	mov	r4, r1
 801cf54:	d802      	bhi.n	801cf5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801cf56:	e070      	b.n	801d03a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801cf58:	2b00      	cmp	r3, #0
 801cf5a:	d15c      	bne.n	801d016 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cf5c:	9b05      	ldr	r3, [sp, #20]
 801cf5e:	9a04      	ldr	r2, [sp, #16]
 801cf60:	785b      	ldrb	r3, [r3, #1]
 801cf62:	9904      	ldr	r1, [sp, #16]
 801cf64:	f1c2 0207 	rsb	r2, r2, #7
 801cf68:	4093      	lsls	r3, r2
 801cf6a:	005b      	lsls	r3, r3, #1
 801cf6c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801cf70:	9b05      	ldr	r3, [sp, #20]
 801cf72:	781b      	ldrb	r3, [r3, #0]
 801cf74:	410b      	asrs	r3, r1
 801cf76:	3101      	adds	r1, #1
 801cf78:	b2c9      	uxtb	r1, r1
 801cf7a:	2908      	cmp	r1, #8
 801cf7c:	9104      	str	r1, [sp, #16]
 801cf7e:	9905      	ldr	r1, [sp, #20]
 801cf80:	bf0a      	itet	eq
 801cf82:	3102      	addeq	r1, #2
 801cf84:	3101      	addne	r1, #1
 801cf86:	9105      	streq	r1, [sp, #20]
 801cf88:	b2db      	uxtb	r3, r3
 801cf8a:	bf0a      	itet	eq
 801cf8c:	2100      	moveq	r1, #0
 801cf8e:	9105      	strne	r1, [sp, #20]
 801cf90:	9104      	streq	r1, [sp, #16]
 801cf92:	4313      	orrs	r3, r2
 801cf94:	9910      	ldr	r1, [sp, #64]	; 0x40
 801cf96:	b29a      	uxth	r2, r3
 801cf98:	4291      	cmp	r1, r2
 801cf9a:	d30a      	bcc.n	801cfb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801cf9c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801cfa0:	2301      	movs	r3, #1
 801cfa2:	9907      	ldr	r1, [sp, #28]
 801cfa4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801cfa8:	d30f      	bcc.n	801cfca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801cfaa:	2100      	movs	r1, #0
 801cfac:	9301      	str	r3, [sp, #4]
 801cfae:	9103      	str	r1, [sp, #12]
 801cfb0:	e032      	b.n	801d018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801cfb2:	9b07      	ldr	r3, [sp, #28]
 801cfb4:	429a      	cmp	r2, r3
 801cfb6:	d318      	bcc.n	801cfea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801cfb8:	9b01      	ldr	r3, [sp, #4]
 801cfba:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801cfbe:	445b      	add	r3, fp
 801cfc0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801cfc4:	9b01      	ldr	r3, [sp, #4]
 801cfc6:	3301      	adds	r3, #1
 801cfc8:	b29b      	uxth	r3, r3
 801cfca:	9907      	ldr	r1, [sp, #28]
 801cfcc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801cfd0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801cfd4:	7108      	strb	r0, [r1, #4]
 801cfd6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801cfd8:	80c8      	strh	r0, [r1, #6]
 801cfda:	9801      	ldr	r0, [sp, #4]
 801cfdc:	3001      	adds	r0, #1
 801cfde:	7148      	strb	r0, [r1, #5]
 801cfe0:	9907      	ldr	r1, [sp, #28]
 801cfe2:	3101      	adds	r1, #1
 801cfe4:	b289      	uxth	r1, r1
 801cfe6:	9107      	str	r1, [sp, #28]
 801cfe8:	e7df      	b.n	801cfaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801cfea:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801cfee:	4611      	mov	r1, r2
 801cff0:	795b      	ldrb	r3, [r3, #5]
 801cff2:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801cff6:	4458      	add	r0, fp
 801cff8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801cffa:	4406      	add	r6, r0
 801cffc:	2e00      	cmp	r6, #0
 801cffe:	dd06      	ble.n	801d00e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d000:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d004:	790e      	ldrb	r6, [r1, #4]
 801d006:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d00a:	88c9      	ldrh	r1, [r1, #6]
 801d00c:	e7f4      	b.n	801cff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d00e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d012:	b29b      	uxth	r3, r3
 801d014:	e7c5      	b.n	801cfa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d016:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d018:	920b      	str	r2, [sp, #44]	; 0x2c
 801d01a:	4621      	mov	r1, r4
 801d01c:	469e      	mov	lr, r3
 801d01e:	e78f      	b.n	801cf40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d020:	9a03      	ldr	r2, [sp, #12]
 801d022:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d026:	442a      	add	r2, r5
 801d028:	ebae 0305 	sub.w	r3, lr, r5
 801d02c:	b292      	uxth	r2, r2
 801d02e:	b29b      	uxth	r3, r3
 801d030:	9203      	str	r2, [sp, #12]
 801d032:	2500      	movs	r5, #0
 801d034:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d036:	4542      	cmp	r2, r8
 801d038:	d88e      	bhi.n	801cf58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d03a:	4621      	mov	r1, r4
 801d03c:	e74e      	b.n	801cedc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d03e:	458e      	cmp	lr, r1
 801d040:	bf29      	itett	cs
 801d042:	ebae 0301 	subcs.w	r3, lr, r1
 801d046:	eba1 040e 	subcc.w	r4, r1, lr
 801d04a:	b29b      	uxthcs	r3, r3
 801d04c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d04e:	bf2f      	iteee	cs
 801d050:	462c      	movcs	r4, r5
 801d052:	b2a4      	uxthcc	r4, r4
 801d054:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d058:	462b      	movcc	r3, r5
 801d05a:	f04f 0900 	mov.w	r9, #0
 801d05e:	9a03      	ldr	r2, [sp, #12]
 801d060:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d062:	444a      	add	r2, r9
 801d064:	4548      	cmp	r0, r9
 801d066:	b292      	uxth	r2, r2
 801d068:	d074      	beq.n	801d154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d06a:	445a      	add	r2, fp
 801d06c:	2004      	movs	r0, #4
 801d06e:	4605      	mov	r5, r0
 801d070:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d074:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d076:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d07a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d07c:	5880      	ldr	r0, [r0, r2]
 801d07e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d082:	d014      	beq.n	801d0ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d084:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d088:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d08c:	d112      	bne.n	801d0b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d08e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d090:	2aff      	cmp	r2, #255	; 0xff
 801d092:	d10f      	bne.n	801d0b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d094:	0942      	lsrs	r2, r0, #5
 801d096:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d09a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d09e:	f025 0507 	bic.w	r5, r5, #7
 801d0a2:	4315      	orrs	r5, r2
 801d0a4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d0a8:	4305      	orrs	r5, r0
 801d0aa:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d0ae:	f109 0901 	add.w	r9, r9, #1
 801d0b2:	e7d4      	b.n	801d05e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d0b4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d0b8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d0bc:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d0c0:	9215      	str	r2, [sp, #84]	; 0x54
 801d0c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d0c4:	fb02 fa0a 	mul.w	sl, r2, sl
 801d0c8:	f10a 0201 	add.w	r2, sl, #1
 801d0cc:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d0d0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d0d4:	1212      	asrs	r2, r2, #8
 801d0d6:	fa1f fa82 	uxth.w	sl, r2
 801d0da:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d0de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d0e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d0e6:	43d2      	mvns	r2, r2
 801d0e8:	b2d2      	uxtb	r2, r2
 801d0ea:	fb16 f60a 	smulbb	r6, r6, sl
 801d0ee:	fa5f fc8c 	uxtb.w	ip, ip
 801d0f2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d0f6:	b2c0      	uxtb	r0, r0
 801d0f8:	fb07 6702 	mla	r7, r7, r2, r6
 801d0fc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d100:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d102:	fb10 f00a 	smulbb	r0, r0, sl
 801d106:	fb0c 0002 	mla	r0, ip, r2, r0
 801d10a:	b2ed      	uxtb	r5, r5
 801d10c:	b2bf      	uxth	r7, r7
 801d10e:	fb15 f50a 	smulbb	r5, r5, sl
 801d112:	b280      	uxth	r0, r0
 801d114:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d118:	fb06 5602 	mla	r6, r6, r2, r5
 801d11c:	1c7a      	adds	r2, r7, #1
 801d11e:	1c45      	adds	r5, r0, #1
 801d120:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d124:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d128:	b2b6      	uxth	r6, r6
 801d12a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d12e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d132:	432f      	orrs	r7, r5
 801d134:	1c75      	adds	r5, r6, #1
 801d136:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d13a:	096d      	lsrs	r5, r5, #5
 801d13c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d140:	432f      	orrs	r7, r5
 801d142:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d146:	e7b2      	b.n	801d0ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d148:	20012da4 	.word	0x20012da4
 801d14c:	20012d9e 	.word	0x20012d9e
 801d150:	fffff7fb 	.word	0xfffff7fb
 801d154:	9203      	str	r2, [sp, #12]
 801d156:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d158:	458e      	cmp	lr, r1
 801d15a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d15e:	f4ff af68 	bcc.w	801d032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d162:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d164:	9906      	ldr	r1, [sp, #24]
 801d166:	8812      	ldrh	r2, [r2, #0]
 801d168:	1a52      	subs	r2, r2, r1
 801d16a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d16e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d170:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d172:	3201      	adds	r2, #1
 801d174:	428a      	cmp	r2, r1
 801d176:	9209      	str	r2, [sp, #36]	; 0x24
 801d178:	d111      	bne.n	801d19e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d17a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d17e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d182:	9b06      	ldr	r3, [sp, #24]
 801d184:	eba5 0509 	sub.w	r5, r5, r9
 801d188:	b2ad      	uxth	r5, r5
 801d18a:	2d00      	cmp	r5, #0
 801d18c:	bf08      	it	eq
 801d18e:	4619      	moveq	r1, r3
 801d190:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d192:	bf18      	it	ne
 801d194:	2100      	movne	r1, #0
 801d196:	3301      	adds	r3, #1
 801d198:	930d      	str	r3, [sp, #52]	; 0x34
 801d19a:	b289      	uxth	r1, r1
 801d19c:	e695      	b.n	801ceca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d19e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d1a2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d1a6:	1b2d      	subs	r5, r5, r4
 801d1a8:	b2ad      	uxth	r5, r5
 801d1aa:	2d00      	cmp	r5, #0
 801d1ac:	bf18      	it	ne
 801d1ae:	2400      	movne	r4, #0
 801d1b0:	e740      	b.n	801d034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d1b2:	4b04      	ldr	r3, [pc, #16]	; (801d1c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d1b4:	6818      	ldr	r0, [r3, #0]
 801d1b6:	6803      	ldr	r3, [r0, #0]
 801d1b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d1ba:	4798      	blx	r3
 801d1bc:	b01d      	add	sp, #116	; 0x74
 801d1be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1c2:	bf00      	nop
 801d1c4:	20012da4 	.word	0x20012da4

0801d1c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d1c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1cc:	b09f      	sub	sp, #124	; 0x7c
 801d1ce:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d1d2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d1d6:	920a      	str	r2, [sp, #40]	; 0x28
 801d1d8:	461d      	mov	r5, r3
 801d1da:	4604      	mov	r4, r0
 801d1dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d1de:	2a00      	cmp	r2, #0
 801d1e0:	f000 81fa 	beq.w	801d5d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d1e4:	6828      	ldr	r0, [r5, #0]
 801d1e6:	6869      	ldr	r1, [r5, #4]
 801d1e8:	aa1a      	add	r2, sp, #104	; 0x68
 801d1ea:	c203      	stmia	r2!, {r0, r1}
 801d1ec:	6818      	ldr	r0, [r3, #0]
 801d1ee:	6859      	ldr	r1, [r3, #4]
 801d1f0:	aa1c      	add	r2, sp, #112	; 0x70
 801d1f2:	c203      	stmia	r2!, {r0, r1}
 801d1f4:	a81a      	add	r0, sp, #104	; 0x68
 801d1f6:	f7f8 fb8f 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1fa:	4629      	mov	r1, r5
 801d1fc:	a81c      	add	r0, sp, #112	; 0x70
 801d1fe:	f7f8 fbcf 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d202:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d206:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d20a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d20e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d212:	bfd7      	itett	le
 801d214:	b29a      	uxthle	r2, r3
 801d216:	2201      	movgt	r2, #1
 801d218:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d21c:	fb91 f2f2 	sdivle	r2, r1, r2
 801d220:	9201      	str	r2, [sp, #4]
 801d222:	9801      	ldr	r0, [sp, #4]
 801d224:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d228:	fb92 f0f0 	sdiv	r0, r2, r0
 801d22c:	b280      	uxth	r0, r0
 801d22e:	9010      	str	r0, [sp, #64]	; 0x40
 801d230:	9901      	ldr	r1, [sp, #4]
 801d232:	9801      	ldr	r0, [sp, #4]
 801d234:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d236:	440e      	add	r6, r1
 801d238:	fb05 2510 	mls	r5, r5, r0, r2
 801d23c:	fb15 f503 	smulbb	r5, r5, r3
 801d240:	3e01      	subs	r6, #1
 801d242:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d246:	fb96 f6f1 	sdiv	r6, r6, r1
 801d24a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d24e:	440d      	add	r5, r1
 801d250:	4419      	add	r1, r3
 801d252:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d256:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d25a:	441a      	add	r2, r3
 801d25c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d260:	9304      	str	r3, [sp, #16]
 801d262:	4b96      	ldr	r3, [pc, #600]	; (801d4bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d264:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d268:	6818      	ldr	r0, [r3, #0]
 801d26a:	6803      	ldr	r3, [r0, #0]
 801d26c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d26e:	4798      	blx	r3
 801d270:	4b93      	ldr	r3, [pc, #588]	; (801d4c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d272:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d276:	881a      	ldrh	r2, [r3, #0]
 801d278:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d27c:	9318      	str	r3, [sp, #96]	; 0x60
 801d27e:	fb02 c101 	mla	r1, r2, r1, ip
 801d282:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d286:	4357      	muls	r7, r2
 801d288:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d28c:	3601      	adds	r6, #1
 801d28e:	920b      	str	r2, [sp, #44]	; 0x2c
 801d290:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d292:	4b8c      	ldr	r3, [pc, #560]	; (801d4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d294:	b2b6      	uxth	r6, r6
 801d296:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d29a:	1d32      	adds	r2, r6, #4
 801d29c:	9206      	str	r2, [sp, #24]
 801d29e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d2a0:	43d2      	mvns	r2, r2
 801d2a2:	b2d2      	uxtb	r2, r2
 801d2a4:	b2ad      	uxth	r5, r5
 801d2a6:	9215      	str	r2, [sp, #84]	; 0x54
 801d2a8:	9a04      	ldr	r2, [sp, #16]
 801d2aa:	2d00      	cmp	r5, #0
 801d2ac:	bf0c      	ite	eq
 801d2ae:	4611      	moveq	r1, r2
 801d2b0:	2100      	movne	r1, #0
 801d2b2:	2200      	movs	r2, #0
 801d2b4:	1b1b      	subs	r3, r3, r4
 801d2b6:	b289      	uxth	r1, r1
 801d2b8:	920d      	str	r2, [sp, #52]	; 0x34
 801d2ba:	9319      	str	r3, [sp, #100]	; 0x64
 801d2bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d2be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2c0:	fa12 f383 	uxtah	r3, r2, r3
 801d2c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d2c6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d2ca:	3304      	adds	r3, #4
 801d2cc:	9307      	str	r3, [sp, #28]
 801d2ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d2d0:	455b      	cmp	r3, fp
 801d2d2:	f240 817c 	bls.w	801d5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d2d6:	9a01      	ldr	r2, [sp, #4]
 801d2d8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d2dc:	fbb5 f3f3 	udiv	r3, r5, r3
 801d2e0:	1ad3      	subs	r3, r2, r3
 801d2e2:	b29b      	uxth	r3, r3
 801d2e4:	9316      	str	r3, [sp, #88]	; 0x58
 801d2e6:	9b07      	ldr	r3, [sp, #28]
 801d2e8:	9807      	ldr	r0, [sp, #28]
 801d2ea:	785a      	ldrb	r2, [r3, #1]
 801d2ec:	789b      	ldrb	r3, [r3, #2]
 801d2ee:	7800      	ldrb	r0, [r0, #0]
 801d2f0:	9011      	str	r0, [sp, #68]	; 0x44
 801d2f2:	021b      	lsls	r3, r3, #8
 801d2f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d2f8:	9a07      	ldr	r2, [sp, #28]
 801d2fa:	78d2      	ldrb	r2, [r2, #3]
 801d2fc:	4313      	orrs	r3, r2
 801d2fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d300:	3001      	adds	r0, #1
 801d302:	441a      	add	r2, r3
 801d304:	9005      	str	r0, [sp, #20]
 801d306:	1c50      	adds	r0, r2, #1
 801d308:	9003      	str	r0, [sp, #12]
 801d30a:	7852      	ldrb	r2, [r2, #1]
 801d30c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d30e:	0212      	lsls	r2, r2, #8
 801d310:	5cc3      	ldrb	r3, [r0, r3]
 801d312:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d316:	431a      	orrs	r2, r3
 801d318:	b293      	uxth	r3, r2
 801d31a:	930c      	str	r3, [sp, #48]	; 0x30
 801d31c:	2300      	movs	r3, #0
 801d31e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d322:	9308      	str	r3, [sp, #32]
 801d324:	461a      	mov	r2, r3
 801d326:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d32a:	930e      	str	r3, [sp, #56]	; 0x38
 801d32c:	f04f 0801 	mov.w	r8, #1
 801d330:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d334:	f8cd 8008 	str.w	r8, [sp, #8]
 801d338:	46c4      	mov	ip, r8
 801d33a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d33c:	2d00      	cmp	r5, #0
 801d33e:	d07c      	beq.n	801d43a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d340:	45ac      	cmp	ip, r5
 801d342:	d26c      	bcs.n	801d41e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d344:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d346:	eba5 050c 	sub.w	r5, r5, ip
 801d34a:	455b      	cmp	r3, fp
 801d34c:	b2ad      	uxth	r5, r5
 801d34e:	4608      	mov	r0, r1
 801d350:	d802      	bhi.n	801d358 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d352:	e070      	b.n	801d436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d354:	2b00      	cmp	r3, #0
 801d356:	d15c      	bne.n	801d412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d358:	9b03      	ldr	r3, [sp, #12]
 801d35a:	9a02      	ldr	r2, [sp, #8]
 801d35c:	785b      	ldrb	r3, [r3, #1]
 801d35e:	9902      	ldr	r1, [sp, #8]
 801d360:	f1c2 0207 	rsb	r2, r2, #7
 801d364:	4093      	lsls	r3, r2
 801d366:	005b      	lsls	r3, r3, #1
 801d368:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d36c:	9b03      	ldr	r3, [sp, #12]
 801d36e:	781b      	ldrb	r3, [r3, #0]
 801d370:	410b      	asrs	r3, r1
 801d372:	3101      	adds	r1, #1
 801d374:	b2c9      	uxtb	r1, r1
 801d376:	2908      	cmp	r1, #8
 801d378:	9102      	str	r1, [sp, #8]
 801d37a:	9903      	ldr	r1, [sp, #12]
 801d37c:	bf0a      	itet	eq
 801d37e:	3102      	addeq	r1, #2
 801d380:	3101      	addne	r1, #1
 801d382:	9103      	streq	r1, [sp, #12]
 801d384:	b2db      	uxtb	r3, r3
 801d386:	bf0a      	itet	eq
 801d388:	2100      	moveq	r1, #0
 801d38a:	9103      	strne	r1, [sp, #12]
 801d38c:	9102      	streq	r1, [sp, #8]
 801d38e:	4313      	orrs	r3, r2
 801d390:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d392:	b29a      	uxth	r2, r3
 801d394:	4291      	cmp	r1, r2
 801d396:	d30a      	bcc.n	801d3ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d398:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d39c:	2301      	movs	r3, #1
 801d39e:	9905      	ldr	r1, [sp, #20]
 801d3a0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d3a4:	d30f      	bcc.n	801d3c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d3a6:	2100      	movs	r1, #0
 801d3a8:	4698      	mov	r8, r3
 801d3aa:	9100      	str	r1, [sp, #0]
 801d3ac:	e032      	b.n	801d414 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d3ae:	9b05      	ldr	r3, [sp, #20]
 801d3b0:	429a      	cmp	r2, r3
 801d3b2:	d318      	bcc.n	801d3e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d3b4:	eb04 0308 	add.w	r3, r4, r8
 801d3b8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d3bc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d3c0:	f108 0301 	add.w	r3, r8, #1
 801d3c4:	b29b      	uxth	r3, r3
 801d3c6:	9905      	ldr	r1, [sp, #20]
 801d3c8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d3cc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d3d0:	710e      	strb	r6, [r1, #4]
 801d3d2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d3d4:	80ce      	strh	r6, [r1, #6]
 801d3d6:	f108 0601 	add.w	r6, r8, #1
 801d3da:	714e      	strb	r6, [r1, #5]
 801d3dc:	9905      	ldr	r1, [sp, #20]
 801d3de:	3101      	adds	r1, #1
 801d3e0:	b289      	uxth	r1, r1
 801d3e2:	9105      	str	r1, [sp, #20]
 801d3e4:	e7df      	b.n	801d3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d3e6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d3ea:	4611      	mov	r1, r2
 801d3ec:	795b      	ldrb	r3, [r3, #5]
 801d3ee:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d3f2:	4426      	add	r6, r4
 801d3f4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d3f6:	4437      	add	r7, r6
 801d3f8:	2f00      	cmp	r7, #0
 801d3fa:	dd06      	ble.n	801d40a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d3fc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d400:	790f      	ldrb	r7, [r1, #4]
 801d402:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d406:	88c9      	ldrh	r1, [r1, #6]
 801d408:	e7f4      	b.n	801d3f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d40a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d40e:	b29b      	uxth	r3, r3
 801d410:	e7c5      	b.n	801d39e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d412:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d414:	920c      	str	r2, [sp, #48]	; 0x30
 801d416:	4601      	mov	r1, r0
 801d418:	9a00      	ldr	r2, [sp, #0]
 801d41a:	469c      	mov	ip, r3
 801d41c:	e78e      	b.n	801d33c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d41e:	1957      	adds	r7, r2, r5
 801d420:	ebac 0305 	sub.w	r3, ip, r5
 801d424:	b2ba      	uxth	r2, r7
 801d426:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d42a:	9200      	str	r2, [sp, #0]
 801d42c:	b29b      	uxth	r3, r3
 801d42e:	2500      	movs	r5, #0
 801d430:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d432:	455a      	cmp	r2, fp
 801d434:	d88e      	bhi.n	801d354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d436:	4601      	mov	r1, r0
 801d438:	e749      	b.n	801d2ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d43a:	458c      	cmp	ip, r1
 801d43c:	bf2c      	ite	cs
 801d43e:	4628      	movcs	r0, r5
 801d440:	462b      	movcc	r3, r5
 801d442:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d444:	bf27      	ittee	cs
 801d446:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d448:	ebac 0301 	subcs.w	r3, ip, r1
 801d44c:	eba1 000c 	subcc.w	r0, r1, ip
 801d450:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d454:	bf2c      	ite	cs
 801d456:	b29b      	uxthcs	r3, r3
 801d458:	b280      	uxthcc	r0, r0
 801d45a:	2dff      	cmp	r5, #255	; 0xff
 801d45c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d45e:	eb02 0705 	add.w	r7, r2, r5
 801d462:	b2bd      	uxth	r5, r7
 801d464:	9500      	str	r5, [sp, #0]
 801d466:	d12f      	bne.n	801d4c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d468:	465e      	mov	r6, fp
 801d46a:	9d00      	ldr	r5, [sp, #0]
 801d46c:	42aa      	cmp	r2, r5
 801d46e:	f040 8084 	bne.w	801d57a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d472:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d474:	458c      	cmp	ip, r1
 801d476:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d47a:	d3d8      	bcc.n	801d42e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d47c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d47e:	9904      	ldr	r1, [sp, #16]
 801d480:	8812      	ldrh	r2, [r2, #0]
 801d482:	1a52      	subs	r2, r2, r1
 801d484:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d488:	9a08      	ldr	r2, [sp, #32]
 801d48a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d48c:	3201      	adds	r2, #1
 801d48e:	428a      	cmp	r2, r1
 801d490:	9208      	str	r2, [sp, #32]
 801d492:	f040 8092 	bne.w	801d5ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d496:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d49a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d49e:	9b04      	ldr	r3, [sp, #16]
 801d4a0:	eba5 050c 	sub.w	r5, r5, ip
 801d4a4:	b2ad      	uxth	r5, r5
 801d4a6:	2d00      	cmp	r5, #0
 801d4a8:	bf08      	it	eq
 801d4aa:	4619      	moveq	r1, r3
 801d4ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d4ae:	bf18      	it	ne
 801d4b0:	2100      	movne	r1, #0
 801d4b2:	3301      	adds	r3, #1
 801d4b4:	930d      	str	r3, [sp, #52]	; 0x34
 801d4b6:	b289      	uxth	r1, r1
 801d4b8:	e700      	b.n	801d2bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d4ba:	bf00      	nop
 801d4bc:	20012da4 	.word	0x20012da4
 801d4c0:	20012d9e 	.word	0x20012d9e
 801d4c4:	fffff7fb 	.word	0xfffff7fb
 801d4c8:	46d9      	mov	r9, fp
 801d4ca:	9d00      	ldr	r5, [sp, #0]
 801d4cc:	42aa      	cmp	r2, r5
 801d4ce:	d0d0      	beq.n	801d472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d4d0:	1c55      	adds	r5, r2, #1
 801d4d2:	4422      	add	r2, r4
 801d4d4:	9517      	str	r5, [sp, #92]	; 0x5c
 801d4d6:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d4da:	9a06      	ldr	r2, [sp, #24]
 801d4dc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d4e0:	4472      	add	r2, lr
 801d4e2:	9212      	str	r2, [sp, #72]	; 0x48
 801d4e4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d4e6:	f8b9 2000 	ldrh.w	r2, [r9]
 801d4ea:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d4ee:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d4f0:	1216      	asrs	r6, r2, #8
 801d4f2:	fb1a fa07 	smulbb	sl, sl, r7
 801d4f6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d4fa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d4fc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d500:	fb06 a607 	mla	r6, r6, r7, sl
 801d504:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d506:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d50a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d50c:	10d5      	asrs	r5, r2, #3
 801d50e:	fb1a fa07 	smulbb	sl, sl, r7
 801d512:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d516:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d518:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d51c:	fb05 a507 	mla	r5, r5, r7, sl
 801d520:	9f06      	ldr	r7, [sp, #24]
 801d522:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d526:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d528:	00d2      	lsls	r2, r2, #3
 801d52a:	fb1e fe07 	smulbb	lr, lr, r7
 801d52e:	b2d2      	uxtb	r2, r2
 801d530:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d532:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d536:	b2b6      	uxth	r6, r6
 801d538:	fb02 e207 	mla	r2, r2, r7, lr
 801d53c:	b292      	uxth	r2, r2
 801d53e:	b2ad      	uxth	r5, r5
 801d540:	f106 0a01 	add.w	sl, r6, #1
 801d544:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d548:	f102 0e01 	add.w	lr, r2, #1
 801d54c:	f105 0a01 	add.w	sl, r5, #1
 801d550:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d554:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d558:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d55c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d560:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d564:	ea4e 0606 	orr.w	r6, lr, r6
 801d568:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d56c:	ea46 060a 	orr.w	r6, r6, sl
 801d570:	f829 6b02 	strh.w	r6, [r9], #2
 801d574:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d578:	e7a7      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d57a:	f102 0e01 	add.w	lr, r2, #1
 801d57e:	4422      	add	r2, r4
 801d580:	9f06      	ldr	r7, [sp, #24]
 801d582:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d586:	9a06      	ldr	r2, [sp, #24]
 801d588:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d58c:	eb02 0a05 	add.w	sl, r2, r5
 801d590:	4a13      	ldr	r2, [pc, #76]	; (801d5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d592:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d596:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d59a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d59e:	00d2      	lsls	r2, r2, #3
 801d5a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d5a4:	ea49 0202 	orr.w	r2, r9, r2
 801d5a8:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d5ac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d5b0:	f826 2b02 	strh.w	r2, [r6], #2
 801d5b4:	fa1f f28e 	uxth.w	r2, lr
 801d5b8:	e757      	b.n	801d46a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d5ba:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d5be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d5c2:	1a2d      	subs	r5, r5, r0
 801d5c4:	b2ad      	uxth	r5, r5
 801d5c6:	2d00      	cmp	r5, #0
 801d5c8:	bf18      	it	ne
 801d5ca:	2000      	movne	r0, #0
 801d5cc:	e730      	b.n	801d430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d5ce:	4b05      	ldr	r3, [pc, #20]	; (801d5e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d5d0:	6818      	ldr	r0, [r3, #0]
 801d5d2:	6803      	ldr	r3, [r0, #0]
 801d5d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d5d6:	4798      	blx	r3
 801d5d8:	b01f      	add	sp, #124	; 0x7c
 801d5da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5de:	bf00      	nop
 801d5e0:	fffff800 	.word	0xfffff800
 801d5e4:	20012da4 	.word	0x20012da4

0801d5e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5ec:	b091      	sub	sp, #68	; 0x44
 801d5ee:	469b      	mov	fp, r3
 801d5f0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d5f4:	4616      	mov	r6, r2
 801d5f6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d5fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d5fe:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d602:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d606:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d60a:	4604      	mov	r4, r0
 801d60c:	460d      	mov	r5, r1
 801d60e:	4640      	mov	r0, r8
 801d610:	4659      	mov	r1, fp
 801d612:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d616:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d61a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d61e:	f7f3 fa1d 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 801d622:	4631      	mov	r1, r6
 801d624:	4640      	mov	r0, r8
 801d626:	f7f3 fa19 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 801d62a:	4b74      	ldr	r3, [pc, #464]	; (801d7fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d62c:	8818      	ldrh	r0, [r3, #0]
 801d62e:	4b74      	ldr	r3, [pc, #464]	; (801d800 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d630:	8819      	ldrh	r1, [r3, #0]
 801d632:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d636:	2b00      	cmp	r3, #0
 801d638:	b202      	sxth	r2, r0
 801d63a:	b20e      	sxth	r6, r1
 801d63c:	da07      	bge.n	801d64e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d63e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d642:	4463      	add	r3, ip
 801d644:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d648:	2300      	movs	r3, #0
 801d64a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d64e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d652:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d656:	1ad2      	subs	r2, r2, r3
 801d658:	4594      	cmp	ip, r2
 801d65a:	bfc4      	itt	gt
 801d65c:	1ac2      	subgt	r2, r0, r3
 801d65e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d662:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d666:	2a00      	cmp	r2, #0
 801d668:	da07      	bge.n	801d67a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d66a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d66e:	4462      	add	r2, ip
 801d670:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d674:	2200      	movs	r2, #0
 801d676:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d67a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d67e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d682:	eba6 060a 	sub.w	r6, r6, sl
 801d686:	42b2      	cmp	r2, r6
 801d688:	bfc4      	itt	gt
 801d68a:	eba1 020a 	subgt.w	r2, r1, sl
 801d68e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d692:	4a5c      	ldr	r2, [pc, #368]	; (801d804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d694:	7812      	ldrb	r2, [r2, #0]
 801d696:	b9a2      	cbnz	r2, 801d6c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d698:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d69c:	4286      	cmp	r6, r0
 801d69e:	4640      	mov	r0, r8
 801d6a0:	9303      	str	r3, [sp, #12]
 801d6a2:	bf14      	ite	ne
 801d6a4:	2600      	movne	r6, #0
 801d6a6:	2601      	moveq	r6, #1
 801d6a8:	f7f3 fa1b 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d6ac:	9b03      	ldr	r3, [sp, #12]
 801d6ae:	b160      	cbz	r0, 801d6ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d6b0:	2300      	movs	r3, #0
 801d6b2:	8023      	strh	r3, [r4, #0]
 801d6b4:	8063      	strh	r3, [r4, #2]
 801d6b6:	80a3      	strh	r3, [r4, #4]
 801d6b8:	4620      	mov	r0, r4
 801d6ba:	80e3      	strh	r3, [r4, #6]
 801d6bc:	b011      	add	sp, #68	; 0x44
 801d6be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6c2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d6c6:	428e      	cmp	r6, r1
 801d6c8:	e7e9      	b.n	801d69e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d6ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d6ce:	9205      	str	r2, [sp, #20]
 801d6d0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d6d4:	9206      	str	r2, [sp, #24]
 801d6d6:	f8bb 2000 	ldrh.w	r2, [fp]
 801d6da:	900e      	str	r0, [sp, #56]	; 0x38
 801d6dc:	1a9b      	subs	r3, r3, r2
 801d6de:	b21b      	sxth	r3, r3
 801d6e0:	9303      	str	r3, [sp, #12]
 801d6e2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d6e6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d6ea:	ebaa 0a03 	sub.w	sl, sl, r3
 801d6ee:	fa0f f38a 	sxth.w	r3, sl
 801d6f2:	9304      	str	r3, [sp, #16]
 801d6f4:	9b03      	ldr	r3, [sp, #12]
 801d6f6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d6fa:	9b04      	ldr	r3, [sp, #16]
 801d6fc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d700:	9b05      	ldr	r3, [sp, #20]
 801d702:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d706:	a90e      	add	r1, sp, #56	; 0x38
 801d708:	9b06      	ldr	r3, [sp, #24]
 801d70a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d70e:	a80c      	add	r0, sp, #48	; 0x30
 801d710:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d714:	f7f8 f944 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d718:	4640      	mov	r0, r8
 801d71a:	f7f8 f8fd 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d71e:	a80e      	add	r0, sp, #56	; 0x38
 801d720:	f7f8 f8fa 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d724:	4b38      	ldr	r3, [pc, #224]	; (801d808 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d726:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d72a:	881b      	ldrh	r3, [r3, #0]
 801d72c:	9307      	str	r3, [sp, #28]
 801d72e:	682b      	ldr	r3, [r5, #0]
 801d730:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d80c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d734:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d736:	4628      	mov	r0, r5
 801d738:	4798      	blx	r3
 801d73a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d73e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d742:	4681      	mov	r9, r0
 801d744:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d748:	f8db 0000 	ldr.w	r0, [fp]
 801d74c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d74e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d752:	6803      	ldr	r3, [r0, #0]
 801d754:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d756:	4798      	blx	r3
 801d758:	4607      	mov	r7, r0
 801d75a:	f8db 0000 	ldr.w	r0, [fp]
 801d75e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d762:	6803      	ldr	r3, [r0, #0]
 801d764:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d768:	9109      	str	r1, [sp, #36]	; 0x24
 801d76a:	9208      	str	r2, [sp, #32]
 801d76c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d76e:	4798      	blx	r3
 801d770:	f010 0f01 	tst.w	r0, #1
 801d774:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d778:	d012      	beq.n	801d7a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d77a:	f8db 0000 	ldr.w	r0, [fp]
 801d77e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d782:	6803      	ldr	r3, [r0, #0]
 801d784:	9200      	str	r2, [sp, #0]
 801d786:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d788:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d78c:	462b      	mov	r3, r5
 801d78e:	47b0      	blx	r6
 801d790:	9b03      	ldr	r3, [sp, #12]
 801d792:	8023      	strh	r3, [r4, #0]
 801d794:	9b04      	ldr	r3, [sp, #16]
 801d796:	8063      	strh	r3, [r4, #2]
 801d798:	9b05      	ldr	r3, [sp, #20]
 801d79a:	80a3      	strh	r3, [r4, #4]
 801d79c:	9b06      	ldr	r3, [sp, #24]
 801d79e:	e78b      	b.n	801d6b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d7a0:	fb09 f202 	mul.w	r2, r9, r2
 801d7a4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d7a8:	440f      	add	r7, r1
 801d7aa:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d7ae:	b166      	cbz	r6, 801d7ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d7b0:	9a07      	ldr	r2, [sp, #28]
 801d7b2:	4592      	cmp	sl, r2
 801d7b4:	d109      	bne.n	801d7ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d7b6:	f8db 0000 	ldr.w	r0, [fp]
 801d7ba:	6802      	ldr	r2, [r0, #0]
 801d7bc:	fb09 f303 	mul.w	r3, r9, r3
 801d7c0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d7c2:	4629      	mov	r1, r5
 801d7c4:	463a      	mov	r2, r7
 801d7c6:	47b0      	blx	r6
 801d7c8:	e7e2      	b.n	801d790 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d7ca:	fb0a f303 	mul.w	r3, sl, r3
 801d7ce:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d80c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d7d2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d7d6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d7da:	4545      	cmp	r5, r8
 801d7dc:	d2d8      	bcs.n	801d790 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d7de:	f8db 0000 	ldr.w	r0, [fp]
 801d7e2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d7e6:	6802      	ldr	r2, [r0, #0]
 801d7e8:	4629      	mov	r1, r5
 801d7ea:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d7ee:	005b      	lsls	r3, r3, #1
 801d7f0:	463a      	mov	r2, r7
 801d7f2:	47d0      	blx	sl
 801d7f4:	444f      	add	r7, r9
 801d7f6:	4435      	add	r5, r6
 801d7f8:	e7ef      	b.n	801d7da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d7fa:	bf00      	nop
 801d7fc:	20012d98 	.word	0x20012d98
 801d800:	20012d9a 	.word	0x20012d9a
 801d804:	20012d9c 	.word	0x20012d9c
 801d808:	20012d9e 	.word	0x20012d9e
 801d80c:	20012da4 	.word	0x20012da4

0801d810 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d810:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d812:	4606      	mov	r6, r0
 801d814:	b087      	sub	sp, #28
 801d816:	460c      	mov	r4, r1
 801d818:	4617      	mov	r7, r2
 801d81a:	461d      	mov	r5, r3
 801d81c:	b333      	cbz	r3, 801d86c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d81e:	4608      	mov	r0, r1
 801d820:	f7f3 f95f 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d824:	bb10      	cbnz	r0, 801d86c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d826:	6820      	ldr	r0, [r4, #0]
 801d828:	6861      	ldr	r1, [r4, #4]
 801d82a:	4c1c      	ldr	r4, [pc, #112]	; (801d89c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d82c:	ab04      	add	r3, sp, #16
 801d82e:	c303      	stmia	r3!, {r0, r1}
 801d830:	a804      	add	r0, sp, #16
 801d832:	f7f8 f871 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d836:	6820      	ldr	r0, [r4, #0]
 801d838:	6803      	ldr	r3, [r0, #0]
 801d83a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d83c:	4798      	blx	r3
 801d83e:	2dff      	cmp	r5, #255	; 0xff
 801d840:	d016      	beq.n	801d870 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d842:	f010 0f08 	tst.w	r0, #8
 801d846:	6820      	ldr	r0, [r4, #0]
 801d848:	d015      	beq.n	801d876 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d84a:	2400      	movs	r4, #0
 801d84c:	6801      	ldr	r1, [r0, #0]
 801d84e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d852:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d856:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d85a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d85e:	9401      	str	r4, [sp, #4]
 801d860:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d864:	9400      	str	r4, [sp, #0]
 801d866:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d868:	4639      	mov	r1, r7
 801d86a:	47a0      	blx	r4
 801d86c:	b007      	add	sp, #28
 801d86e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d870:	f010 0f02 	tst.w	r0, #2
 801d874:	e7e7      	b.n	801d846 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d876:	6803      	ldr	r3, [r0, #0]
 801d878:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d87a:	4798      	blx	r3
 801d87c:	4b08      	ldr	r3, [pc, #32]	; (801d8a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d87e:	881a      	ldrh	r2, [r3, #0]
 801d880:	6833      	ldr	r3, [r6, #0]
 801d882:	e9cd 7500 	strd	r7, r5, [sp]
 801d886:	4601      	mov	r1, r0
 801d888:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d88a:	4630      	mov	r0, r6
 801d88c:	ab04      	add	r3, sp, #16
 801d88e:	47a8      	blx	r5
 801d890:	6820      	ldr	r0, [r4, #0]
 801d892:	6803      	ldr	r3, [r0, #0]
 801d894:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d896:	4798      	blx	r3
 801d898:	e7e8      	b.n	801d86c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d89a:	bf00      	nop
 801d89c:	20012da4 	.word	0x20012da4
 801d8a0:	20012d9e 	.word	0x20012d9e

0801d8a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d8a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d8a8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d8ac:	9e08      	ldr	r6, [sp, #32]
 801d8ae:	4688      	mov	r8, r1
 801d8b0:	4614      	mov	r4, r2
 801d8b2:	461d      	mov	r5, r3
 801d8b4:	2f00      	cmp	r7, #0
 801d8b6:	f000 80a9 	beq.w	801da0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d8ba:	4618      	mov	r0, r3
 801d8bc:	f7f3 f911 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d8c0:	2800      	cmp	r0, #0
 801d8c2:	f040 80a3 	bne.w	801da0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d8c6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d8ca:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d8ce:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d8d2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d8d6:	fb04 1303 	mla	r3, r4, r3, r1
 801d8da:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d8de:	4365      	muls	r5, r4
 801d8e0:	2fff      	cmp	r7, #255	; 0xff
 801d8e2:	eba4 0200 	sub.w	r2, r4, r0
 801d8e6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d8ea:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d8ee:	d04a      	beq.n	801d986 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d8f0:	b2bc      	uxth	r4, r7
 801d8f2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d8f6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d8fa:	fa5f f788 	uxtb.w	r7, r8
 801d8fe:	b2f3      	uxtb	r3, r6
 801d900:	0040      	lsls	r0, r0, #1
 801d902:	fb0e fe04 	mul.w	lr, lr, r4
 801d906:	4367      	muls	r7, r4
 801d908:	4363      	muls	r3, r4
 801d90a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d90e:	fa1f fc8c 	uxth.w	ip, ip
 801d912:	42a9      	cmp	r1, r5
 801d914:	d27a      	bcs.n	801da0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d916:	eb01 0900 	add.w	r9, r1, r0
 801d91a:	4549      	cmp	r1, r9
 801d91c:	d231      	bcs.n	801d982 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d91e:	880a      	ldrh	r2, [r1, #0]
 801d920:	1214      	asrs	r4, r2, #8
 801d922:	10d6      	asrs	r6, r2, #3
 801d924:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d928:	00d2      	lsls	r2, r2, #3
 801d92a:	b2d2      	uxtb	r2, r2
 801d92c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d930:	fb14 f40c 	smulbb	r4, r4, ip
 801d934:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d938:	4474      	add	r4, lr
 801d93a:	fb12 f20c 	smulbb	r2, r2, ip
 801d93e:	b2a4      	uxth	r4, r4
 801d940:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d944:	441a      	add	r2, r3
 801d946:	b292      	uxth	r2, r2
 801d948:	f104 0a01 	add.w	sl, r4, #1
 801d94c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d950:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d954:	fb16 f60c 	smulbb	r6, r6, ip
 801d958:	f102 0a01 	add.w	sl, r2, #1
 801d95c:	443e      	add	r6, r7
 801d95e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d962:	b2b6      	uxth	r6, r6
 801d964:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d968:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d96c:	4322      	orrs	r2, r4
 801d96e:	1c74      	adds	r4, r6, #1
 801d970:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d974:	0976      	lsrs	r6, r6, #5
 801d976:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d97a:	4332      	orrs	r2, r6
 801d97c:	f821 2b02 	strh.w	r2, [r1], #2
 801d980:	e7cb      	b.n	801d91a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d982:	4441      	add	r1, r8
 801d984:	e7c5      	b.n	801d912 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d986:	4f22      	ldr	r7, [pc, #136]	; (801da10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d988:	0973      	lsrs	r3, r6, #5
 801d98a:	ea08 0707 	and.w	r7, r8, r7
 801d98e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d992:	433b      	orrs	r3, r7
 801d994:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d998:	4333      	orrs	r3, r6
 801d99a:	07e7      	lsls	r7, r4, #31
 801d99c:	b29b      	uxth	r3, r3
 801d99e:	d50b      	bpl.n	801d9b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d9a0:	0040      	lsls	r0, r0, #1
 801d9a2:	0052      	lsls	r2, r2, #1
 801d9a4:	42a9      	cmp	r1, r5
 801d9a6:	d231      	bcs.n	801da0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9a8:	180c      	adds	r4, r1, r0
 801d9aa:	42a1      	cmp	r1, r4
 801d9ac:	d202      	bcs.n	801d9b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d9ae:	f821 3b02 	strh.w	r3, [r1], #2
 801d9b2:	e7fa      	b.n	801d9aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d9b4:	4411      	add	r1, r2
 801d9b6:	e7f5      	b.n	801d9a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d9b8:	078e      	lsls	r6, r1, #30
 801d9ba:	d008      	beq.n	801d9ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d9bc:	0066      	lsls	r6, r4, #1
 801d9be:	460a      	mov	r2, r1
 801d9c0:	42aa      	cmp	r2, r5
 801d9c2:	d202      	bcs.n	801d9ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d9c4:	8013      	strh	r3, [r2, #0]
 801d9c6:	4432      	add	r2, r6
 801d9c8:	e7fa      	b.n	801d9c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d9ca:	3102      	adds	r1, #2
 801d9cc:	3801      	subs	r0, #1
 801d9ce:	07c2      	lsls	r2, r0, #31
 801d9d0:	d50b      	bpl.n	801d9ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d9d2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801d9d6:	3a01      	subs	r2, #1
 801d9d8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d9dc:	0066      	lsls	r6, r4, #1
 801d9de:	42aa      	cmp	r2, r5
 801d9e0:	d202      	bcs.n	801d9e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d9e2:	8013      	strh	r3, [r2, #0]
 801d9e4:	4432      	add	r2, r6
 801d9e6:	e7fa      	b.n	801d9de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d9e8:	3801      	subs	r0, #1
 801d9ea:	b178      	cbz	r0, 801da0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9ec:	1040      	asrs	r0, r0, #1
 801d9ee:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d9f2:	0080      	lsls	r0, r0, #2
 801d9f4:	0064      	lsls	r4, r4, #1
 801d9f6:	42a9      	cmp	r1, r5
 801d9f8:	d208      	bcs.n	801da0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9fa:	180e      	adds	r6, r1, r0
 801d9fc:	460a      	mov	r2, r1
 801d9fe:	42b2      	cmp	r2, r6
 801da00:	d202      	bcs.n	801da08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801da02:	f842 3b04 	str.w	r3, [r2], #4
 801da06:	e7fa      	b.n	801d9fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801da08:	4421      	add	r1, r4
 801da0a:	e7f4      	b.n	801d9f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801da0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801da10:	00fff800 	.word	0x00fff800

0801da14 <_ZN8touchgfx8LCD16bppC1Ev>:
 801da14:	2200      	movs	r2, #0
 801da16:	4912      	ldr	r1, [pc, #72]	; (801da60 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801da18:	6042      	str	r2, [r0, #4]
 801da1a:	6001      	str	r1, [r0, #0]
 801da1c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801da20:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801da24:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801da28:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801da2c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801da30:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801da34:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801da38:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801da3c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801da40:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801da44:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801da48:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801da4c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801da50:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801da54:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801da58:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801da5c:	4770      	bx	lr
 801da5e:	bf00      	nop
 801da60:	0802f8a8 	.word	0x0802f8a8

0801da64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801da64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da68:	460d      	mov	r5, r1
 801da6a:	b08d      	sub	sp, #52	; 0x34
 801da6c:	4604      	mov	r4, r0
 801da6e:	6808      	ldr	r0, [r1, #0]
 801da70:	6849      	ldr	r1, [r1, #4]
 801da72:	4699      	mov	r9, r3
 801da74:	ab08      	add	r3, sp, #32
 801da76:	c303      	stmia	r3!, {r0, r1}
 801da78:	6810      	ldr	r0, [r2, #0]
 801da7a:	6851      	ldr	r1, [r2, #4]
 801da7c:	ab0a      	add	r3, sp, #40	; 0x28
 801da7e:	c303      	stmia	r3!, {r0, r1}
 801da80:	a808      	add	r0, sp, #32
 801da82:	f7f7 ff49 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da86:	4629      	mov	r1, r5
 801da88:	a80a      	add	r0, sp, #40	; 0x28
 801da8a:	f7f7 ff89 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801da8e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801da92:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801da96:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801da9a:	4d63      	ldr	r5, [pc, #396]	; (801dc28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801da9c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801daa0:	6828      	ldr	r0, [r5, #0]
 801daa2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801daa6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801daaa:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801daae:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801dab2:	440a      	add	r2, r1
 801dab4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801dab8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801dabc:	4413      	add	r3, r2
 801dabe:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801dac2:	6803      	ldr	r3, [r0, #0]
 801dac4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dac6:	4798      	blx	r3
 801dac8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dacc:	d119      	bne.n	801db02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801dace:	f010 0f20 	tst.w	r0, #32
 801dad2:	6828      	ldr	r0, [r5, #0]
 801dad4:	d018      	beq.n	801db08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801dad6:	2500      	movs	r5, #0
 801dad8:	6801      	ldr	r1, [r0, #0]
 801dada:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801dade:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801dae2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801dae6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801daea:	9502      	str	r5, [sp, #8]
 801daec:	b2b6      	uxth	r6, r6
 801daee:	fa1f f588 	uxth.w	r5, r8
 801daf2:	9601      	str	r6, [sp, #4]
 801daf4:	9500      	str	r5, [sp, #0]
 801daf6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801daf8:	4621      	mov	r1, r4
 801dafa:	47a8      	blx	r5
 801dafc:	b00d      	add	sp, #52	; 0x34
 801dafe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db02:	f010 0f40 	tst.w	r0, #64	; 0x40
 801db06:	e7e4      	b.n	801dad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801db08:	6803      	ldr	r3, [r0, #0]
 801db0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db0c:	4798      	blx	r3
 801db0e:	4947      	ldr	r1, [pc, #284]	; (801dc2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801db10:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801db14:	880b      	ldrh	r3, [r1, #0]
 801db16:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801db1a:	fb03 5202 	mla	r2, r3, r2, r5
 801db1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801db22:	4373      	muls	r3, r6
 801db24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801db28:	9307      	str	r3, [sp, #28]
 801db2a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801db2e:	9306      	str	r3, [sp, #24]
 801db30:	468a      	mov	sl, r1
 801db32:	9b07      	ldr	r3, [sp, #28]
 801db34:	4298      	cmp	r0, r3
 801db36:	d270      	bcs.n	801dc1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801db38:	9b06      	ldr	r3, [sp, #24]
 801db3a:	4621      	mov	r1, r4
 801db3c:	eb00 0b03 	add.w	fp, r0, r3
 801db40:	4558      	cmp	r0, fp
 801db42:	d25d      	bcs.n	801dc00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801db44:	f851 4b04 	ldr.w	r4, [r1], #4
 801db48:	0e23      	lsrs	r3, r4, #24
 801db4a:	d014      	beq.n	801db76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801db4c:	2bff      	cmp	r3, #255	; 0xff
 801db4e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801db52:	d112      	bne.n	801db7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801db54:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801db58:	d10f      	bne.n	801db7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801db5a:	0963      	lsrs	r3, r4, #5
 801db5c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801db60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801db64:	f02c 0c07 	bic.w	ip, ip, #7
 801db68:	ea43 0c0c 	orr.w	ip, r3, ip
 801db6c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801db70:	ea4c 0404 	orr.w	r4, ip, r4
 801db74:	8004      	strh	r4, [r0, #0]
 801db76:	3002      	adds	r0, #2
 801db78:	e7e2      	b.n	801db40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801db7a:	fb09 f303 	mul.w	r3, r9, r3
 801db7e:	8807      	ldrh	r7, [r0, #0]
 801db80:	1c5a      	adds	r2, r3, #1
 801db82:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801db86:	1212      	asrs	r2, r2, #8
 801db88:	123e      	asrs	r6, r7, #8
 801db8a:	b293      	uxth	r3, r2
 801db8c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801db90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db94:	43d2      	mvns	r2, r2
 801db96:	b2d2      	uxtb	r2, r2
 801db98:	10fd      	asrs	r5, r7, #3
 801db9a:	fb1e fe03 	smulbb	lr, lr, r3
 801db9e:	00ff      	lsls	r7, r7, #3
 801dba0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dba4:	fb06 e602 	mla	r6, r6, r2, lr
 801dba8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dbac:	b2ff      	uxtb	r7, r7
 801dbae:	fa5f fc8c 	uxtb.w	ip, ip
 801dbb2:	b2e4      	uxtb	r4, r4
 801dbb4:	b2b6      	uxth	r6, r6
 801dbb6:	fb1c fc03 	smulbb	ip, ip, r3
 801dbba:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dbbe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dbc2:	fb14 f403 	smulbb	r4, r4, r3
 801dbc6:	fb05 c502 	mla	r5, r5, r2, ip
 801dbca:	f106 0e01 	add.w	lr, r6, #1
 801dbce:	fb07 4702 	mla	r7, r7, r2, r4
 801dbd2:	b2ad      	uxth	r5, r5
 801dbd4:	b2bf      	uxth	r7, r7
 801dbd6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801dbda:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801dbde:	f105 0c01 	add.w	ip, r5, #1
 801dbe2:	1c7e      	adds	r6, r7, #1
 801dbe4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801dbe8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dbec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801dbf0:	096d      	lsrs	r5, r5, #5
 801dbf2:	ea46 060e 	orr.w	r6, r6, lr
 801dbf6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dbfa:	432e      	orrs	r6, r5
 801dbfc:	8006      	strh	r6, [r0, #0]
 801dbfe:	e7ba      	b.n	801db76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dc00:	f8ba 3000 	ldrh.w	r3, [sl]
 801dc04:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801dc08:	eba3 0308 	sub.w	r3, r3, r8
 801dc0c:	eba4 0408 	sub.w	r4, r4, r8
 801dc10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dc14:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801dc18:	e78b      	b.n	801db32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801dc1a:	4b03      	ldr	r3, [pc, #12]	; (801dc28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dc1c:	6818      	ldr	r0, [r3, #0]
 801dc1e:	6803      	ldr	r3, [r0, #0]
 801dc20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dc22:	4798      	blx	r3
 801dc24:	e76a      	b.n	801dafc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801dc26:	bf00      	nop
 801dc28:	20012da4 	.word	0x20012da4
 801dc2c:	20012d9e 	.word	0x20012d9e

0801dc30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dc30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dc34:	460c      	mov	r4, r1
 801dc36:	b085      	sub	sp, #20
 801dc38:	6810      	ldr	r0, [r2, #0]
 801dc3a:	6851      	ldr	r1, [r2, #4]
 801dc3c:	466d      	mov	r5, sp
 801dc3e:	c503      	stmia	r5!, {r0, r1}
 801dc40:	6818      	ldr	r0, [r3, #0]
 801dc42:	6859      	ldr	r1, [r3, #4]
 801dc44:	4616      	mov	r6, r2
 801dc46:	c503      	stmia	r5!, {r0, r1}
 801dc48:	4668      	mov	r0, sp
 801dc4a:	f7f7 fe65 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc4e:	4631      	mov	r1, r6
 801dc50:	a802      	add	r0, sp, #8
 801dc52:	f7f7 fea5 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc56:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dc5a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dc5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dc62:	4d28      	ldr	r5, [pc, #160]	; (801dd04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801dc64:	4e28      	ldr	r6, [pc, #160]	; (801dd08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801dc66:	6828      	ldr	r0, [r5, #0]
 801dc68:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801dc6c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801dc70:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dc74:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dc78:	f8bd 1000 	ldrh.w	r1, [sp]
 801dc7c:	440a      	add	r2, r1
 801dc7e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801dc82:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801dc86:	4413      	add	r3, r2
 801dc88:	f8ad 300a 	strh.w	r3, [sp, #10]
 801dc8c:	6803      	ldr	r3, [r0, #0]
 801dc8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc90:	4798      	blx	r3
 801dc92:	8833      	ldrh	r3, [r6, #0]
 801dc94:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801dc98:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801dc9c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801dd0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801dca0:	fb03 1202 	mla	r2, r3, r2, r1
 801dca4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dca8:	fb08 f303 	mul.w	r3, r8, r3
 801dcac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dcb0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dcb4:	4298      	cmp	r0, r3
 801dcb6:	d21d      	bcs.n	801dcf4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801dcb8:	eb00 080c 	add.w	r8, r0, ip
 801dcbc:	4540      	cmp	r0, r8
 801dcbe:	d20f      	bcs.n	801dce0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801dcc0:	f854 1b04 	ldr.w	r1, [r4], #4
 801dcc4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dcc8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801dccc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dcd0:	ea42 0209 	orr.w	r2, r2, r9
 801dcd4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dcd8:	430a      	orrs	r2, r1
 801dcda:	f820 2b02 	strh.w	r2, [r0], #2
 801dcde:	e7ed      	b.n	801dcbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801dce0:	8832      	ldrh	r2, [r6, #0]
 801dce2:	1bd2      	subs	r2, r2, r7
 801dce4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dce8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801dcec:	1bd2      	subs	r2, r2, r7
 801dcee:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801dcf2:	e7df      	b.n	801dcb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801dcf4:	6828      	ldr	r0, [r5, #0]
 801dcf6:	6803      	ldr	r3, [r0, #0]
 801dcf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dcfa:	4798      	blx	r3
 801dcfc:	b005      	add	sp, #20
 801dcfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dd02:	bf00      	nop
 801dd04:	20012da4 	.word	0x20012da4
 801dd08:	20012d9e 	.word	0x20012d9e
 801dd0c:	fffff800 	.word	0xfffff800

0801dd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801dd10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dd14:	460e      	mov	r6, r1
 801dd16:	b08e      	sub	sp, #56	; 0x38
 801dd18:	4604      	mov	r4, r0
 801dd1a:	6808      	ldr	r0, [r1, #0]
 801dd1c:	6849      	ldr	r1, [r1, #4]
 801dd1e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801def8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801dd22:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801defc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801dd26:	461d      	mov	r5, r3
 801dd28:	ab0a      	add	r3, sp, #40	; 0x28
 801dd2a:	c303      	stmia	r3!, {r0, r1}
 801dd2c:	6810      	ldr	r0, [r2, #0]
 801dd2e:	6851      	ldr	r1, [r2, #4]
 801dd30:	ab0c      	add	r3, sp, #48	; 0x30
 801dd32:	c303      	stmia	r3!, {r0, r1}
 801dd34:	a80a      	add	r0, sp, #40	; 0x28
 801dd36:	f7f7 fdef 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dd3a:	4631      	mov	r1, r6
 801dd3c:	a80c      	add	r0, sp, #48	; 0x30
 801dd3e:	f7f7 fe2f 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd42:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801dd46:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801dd4a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dd4e:	f8d8 0000 	ldr.w	r0, [r8]
 801dd52:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801dd56:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801dd5a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dd5e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801dd62:	440c      	add	r4, r1
 801dd64:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801dd68:	440a      	add	r2, r1
 801dd6a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801dd6e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801dd72:	4413      	add	r3, r2
 801dd74:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801dd78:	6803      	ldr	r3, [r0, #0]
 801dd7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dd7c:	4798      	blx	r3
 801dd7e:	2dff      	cmp	r5, #255	; 0xff
 801dd80:	d124      	bne.n	801ddcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801dd82:	f010 0f01 	tst.w	r0, #1
 801dd86:	f8d8 0000 	ldr.w	r0, [r8]
 801dd8a:	d022      	beq.n	801ddd2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801dd8c:	2100      	movs	r1, #0
 801dd8e:	f8d0 c000 	ldr.w	ip, [r0]
 801dd92:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801dd96:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801dd9a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801dd9e:	f04f 0e01 	mov.w	lr, #1
 801dda2:	f8cd e018 	str.w	lr, [sp, #24]
 801dda6:	f8b9 e000 	ldrh.w	lr, [r9]
 801ddaa:	9503      	str	r5, [sp, #12]
 801ddac:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ddb0:	b2b6      	uxth	r6, r6
 801ddb2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ddb6:	9102      	str	r1, [sp, #8]
 801ddb8:	b2bf      	uxth	r7, r7
 801ddba:	9601      	str	r6, [sp, #4]
 801ddbc:	9700      	str	r7, [sp, #0]
 801ddbe:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801ddc2:	4621      	mov	r1, r4
 801ddc4:	47a8      	blx	r5
 801ddc6:	b00e      	add	sp, #56	; 0x38
 801ddc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ddcc:	f010 0f04 	tst.w	r0, #4
 801ddd0:	e7d9      	b.n	801dd86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ddd2:	6803      	ldr	r3, [r0, #0]
 801ddd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ddd6:	4798      	blx	r3
 801ddd8:	f8b9 3000 	ldrh.w	r3, [r9]
 801dddc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801dde0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801dde4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801dde8:	fb03 1202 	mla	r2, r3, r2, r1
 801ddec:	ebac 0c07 	sub.w	ip, ip, r7
 801ddf0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ddf4:	435e      	muls	r6, r3
 801ddf6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801ddfa:	2dff      	cmp	r5, #255	; 0xff
 801ddfc:	eba3 0707 	sub.w	r7, r3, r7
 801de00:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801de04:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801de08:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801de0c:	d049      	beq.n	801dea2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801de0e:	43eb      	mvns	r3, r5
 801de10:	fa1f f985 	uxth.w	r9, r5
 801de14:	b2db      	uxtb	r3, r3
 801de16:	42b0      	cmp	r0, r6
 801de18:	d266      	bcs.n	801dee8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801de1a:	eb00 0a0e 	add.w	sl, r0, lr
 801de1e:	4550      	cmp	r0, sl
 801de20:	4621      	mov	r1, r4
 801de22:	f104 0403 	add.w	r4, r4, #3
 801de26:	d25b      	bcs.n	801dee0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801de28:	8802      	ldrh	r2, [r0, #0]
 801de2a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801de2e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801de32:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801de36:	fb11 f109 	smulbb	r1, r1, r9
 801de3a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801de3e:	10d5      	asrs	r5, r2, #3
 801de40:	fb08 1803 	mla	r8, r8, r3, r1
 801de44:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801de48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801de4c:	fb11 f109 	smulbb	r1, r1, r9
 801de50:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801de54:	fb05 1503 	mla	r5, r5, r3, r1
 801de58:	00d2      	lsls	r2, r2, #3
 801de5a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801de5e:	b2d2      	uxtb	r2, r2
 801de60:	fb11 f109 	smulbb	r1, r1, r9
 801de64:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801de68:	fa1f f888 	uxth.w	r8, r8
 801de6c:	fb02 1203 	mla	r2, r2, r3, r1
 801de70:	b292      	uxth	r2, r2
 801de72:	f108 0101 	add.w	r1, r8, #1
 801de76:	b2ad      	uxth	r5, r5
 801de78:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801de7c:	1c51      	adds	r1, r2, #1
 801de7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801de82:	1c69      	adds	r1, r5, #1
 801de84:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801de88:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801de8c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801de90:	096d      	lsrs	r5, r5, #5
 801de92:	ea42 0208 	orr.w	r2, r2, r8
 801de96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de9a:	432a      	orrs	r2, r5
 801de9c:	f820 2b02 	strh.w	r2, [r0], #2
 801dea0:	e7bd      	b.n	801de1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801dea2:	4a14      	ldr	r2, [pc, #80]	; (801def4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801dea4:	42b0      	cmp	r0, r6
 801dea6:	d21f      	bcs.n	801dee8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dea8:	eb00 050e 	add.w	r5, r0, lr
 801deac:	42a8      	cmp	r0, r5
 801deae:	4621      	mov	r1, r4
 801deb0:	f104 0403 	add.w	r4, r4, #3
 801deb4:	d210      	bcs.n	801ded8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801deb6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801deba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801debe:	00db      	lsls	r3, r3, #3
 801dec0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801dec4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dec8:	430b      	orrs	r3, r1
 801deca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801dece:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ded2:	f820 3b02 	strh.w	r3, [r0], #2
 801ded6:	e7e9      	b.n	801deac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ded8:	4438      	add	r0, r7
 801deda:	eb01 040c 	add.w	r4, r1, ip
 801dede:	e7e1      	b.n	801dea4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801dee0:	4438      	add	r0, r7
 801dee2:	eb01 040c 	add.w	r4, r1, ip
 801dee6:	e796      	b.n	801de16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801dee8:	4b03      	ldr	r3, [pc, #12]	; (801def8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801deea:	6818      	ldr	r0, [r3, #0]
 801deec:	6803      	ldr	r3, [r0, #0]
 801deee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801def0:	4798      	blx	r3
 801def2:	e768      	b.n	801ddc6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801def4:	fffff800 	.word	0xfffff800
 801def8:	20012da4 	.word	0x20012da4
 801defc:	20012d9e 	.word	0x20012d9e

0801df00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801df00:	b4f0      	push	{r4, r5, r6, r7}
 801df02:	4616      	mov	r6, r2
 801df04:	2e01      	cmp	r6, #1
 801df06:	461c      	mov	r4, r3
 801df08:	460d      	mov	r5, r1
 801df0a:	9a04      	ldr	r2, [sp, #16]
 801df0c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801df10:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801df14:	d012      	beq.n	801df3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801df16:	d303      	bcc.n	801df20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801df18:	2e02      	cmp	r6, #2
 801df1a:	d00a      	beq.n	801df32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801df1c:	bcf0      	pop	{r4, r5, r6, r7}
 801df1e:	4770      	bx	lr
 801df20:	6805      	ldr	r5, [r0, #0]
 801df22:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801df26:	68ed      	ldr	r5, [r5, #12]
 801df28:	4613      	mov	r3, r2
 801df2a:	46ac      	mov	ip, r5
 801df2c:	4622      	mov	r2, r4
 801df2e:	bcf0      	pop	{r4, r5, r6, r7}
 801df30:	4760      	bx	ip
 801df32:	4621      	mov	r1, r4
 801df34:	4628      	mov	r0, r5
 801df36:	bcf0      	pop	{r4, r5, r6, r7}
 801df38:	f7ff bd94 	b.w	801da64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801df3c:	4621      	mov	r1, r4
 801df3e:	4628      	mov	r0, r5
 801df40:	bcf0      	pop	{r4, r5, r6, r7}
 801df42:	f7ff bee5 	b.w	801dd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801df48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801df48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df4c:	4681      	mov	r9, r0
 801df4e:	b093      	sub	sp, #76	; 0x4c
 801df50:	6810      	ldr	r0, [r2, #0]
 801df52:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801df56:	4f6d      	ldr	r7, [pc, #436]	; (801e10c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801df58:	4688      	mov	r8, r1
 801df5a:	6851      	ldr	r1, [r2, #4]
 801df5c:	ac0e      	add	r4, sp, #56	; 0x38
 801df5e:	c403      	stmia	r4!, {r0, r1}
 801df60:	6818      	ldr	r0, [r3, #0]
 801df62:	6859      	ldr	r1, [r3, #4]
 801df64:	ac10      	add	r4, sp, #64	; 0x40
 801df66:	4616      	mov	r6, r2
 801df68:	c403      	stmia	r4!, {r0, r1}
 801df6a:	a80e      	add	r0, sp, #56	; 0x38
 801df6c:	f7f7 fcd4 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801df70:	4631      	mov	r1, r6
 801df72:	a810      	add	r0, sp, #64	; 0x40
 801df74:	f7f7 fd14 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801df78:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801df7c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801df80:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801df84:	4e62      	ldr	r6, [pc, #392]	; (801e110 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801df86:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801df8a:	6830      	ldr	r0, [r6, #0]
 801df8c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801df90:	fb11 2103 	smlabb	r1, r1, r3, r2
 801df94:	4489      	add	r9, r1
 801df96:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801df9a:	440a      	add	r2, r1
 801df9c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801dfa0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801dfa4:	4413      	add	r3, r2
 801dfa6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801dfaa:	6803      	ldr	r3, [r0, #0]
 801dfac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dfae:	4798      	blx	r3
 801dfb0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801dfb4:	6830      	ldr	r0, [r6, #0]
 801dfb6:	d01d      	beq.n	801dff4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801dfb8:	2200      	movs	r2, #0
 801dfba:	6801      	ldr	r1, [r0, #0]
 801dfbc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801dfc0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801dfc4:	220b      	movs	r2, #11
 801dfc6:	9207      	str	r2, [sp, #28]
 801dfc8:	883a      	ldrh	r2, [r7, #0]
 801dfca:	9206      	str	r2, [sp, #24]
 801dfcc:	2201      	movs	r2, #1
 801dfce:	e9cd a204 	strd	sl, r2, [sp, #16]
 801dfd2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801dfd6:	9203      	str	r2, [sp, #12]
 801dfd8:	b2a4      	uxth	r4, r4
 801dfda:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801dfde:	9200      	str	r2, [sp, #0]
 801dfe0:	b2ad      	uxth	r5, r5
 801dfe2:	9502      	str	r5, [sp, #8]
 801dfe4:	9401      	str	r4, [sp, #4]
 801dfe6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801dfe8:	4642      	mov	r2, r8
 801dfea:	4649      	mov	r1, r9
 801dfec:	47a0      	blx	r4
 801dfee:	b013      	add	sp, #76	; 0x4c
 801dff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dff4:	6803      	ldr	r3, [r0, #0]
 801dff6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dff8:	4798      	blx	r3
 801dffa:	883b      	ldrh	r3, [r7, #0]
 801dffc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e000:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e004:	fb03 1202 	mla	r2, r3, r2, r1
 801e008:	435d      	muls	r5, r3
 801e00a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e00e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e012:	920c      	str	r2, [sp, #48]	; 0x30
 801e014:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e018:	1b12      	subs	r2, r2, r4
 801e01a:	920d      	str	r2, [sp, #52]	; 0x34
 801e01c:	0062      	lsls	r2, r4, #1
 801e01e:	1b1c      	subs	r4, r3, r4
 801e020:	0063      	lsls	r3, r4, #1
 801e022:	920a      	str	r2, [sp, #40]	; 0x28
 801e024:	930b      	str	r3, [sp, #44]	; 0x2c
 801e026:	f04f 0e04 	mov.w	lr, #4
 801e02a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e02c:	4298      	cmp	r0, r3
 801e02e:	d266      	bcs.n	801e0fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e030:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e032:	eb00 0b03 	add.w	fp, r0, r3
 801e036:	4558      	cmp	r0, fp
 801e038:	d25c      	bcs.n	801e0f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e03a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e03e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e042:	f858 2003 	ldr.w	r2, [r8, r3]
 801e046:	0e11      	lsrs	r1, r2, #24
 801e048:	d012      	beq.n	801e070 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e04a:	29ff      	cmp	r1, #255	; 0xff
 801e04c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e050:	d110      	bne.n	801e074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e052:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e056:	d10d      	bne.n	801e074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e058:	0953      	lsrs	r3, r2, #5
 801e05a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e05e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e062:	f027 0707 	bic.w	r7, r7, #7
 801e066:	431f      	orrs	r7, r3
 801e068:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e06c:	433a      	orrs	r2, r7
 801e06e:	8002      	strh	r2, [r0, #0]
 801e070:	3002      	adds	r0, #2
 801e072:	e7e0      	b.n	801e036 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e074:	fb0a f101 	mul.w	r1, sl, r1
 801e078:	8806      	ldrh	r6, [r0, #0]
 801e07a:	1c4b      	adds	r3, r1, #1
 801e07c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e080:	1235      	asrs	r5, r6, #8
 801e082:	10f4      	asrs	r4, r6, #3
 801e084:	121b      	asrs	r3, r3, #8
 801e086:	00f6      	lsls	r6, r6, #3
 801e088:	b299      	uxth	r1, r3
 801e08a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e08e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e092:	b2f6      	uxtb	r6, r6
 801e094:	43db      	mvns	r3, r3
 801e096:	b2d2      	uxtb	r2, r2
 801e098:	b2db      	uxtb	r3, r3
 801e09a:	fb1c fc01 	smulbb	ip, ip, r1
 801e09e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e0a2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e0a6:	fb12 f201 	smulbb	r2, r2, r1
 801e0aa:	fb05 c503 	mla	r5, r5, r3, ip
 801e0ae:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e0b2:	b2ff      	uxtb	r7, r7
 801e0b4:	fb06 2203 	mla	r2, r6, r3, r2
 801e0b8:	b2ad      	uxth	r5, r5
 801e0ba:	fb17 f701 	smulbb	r7, r7, r1
 801e0be:	b292      	uxth	r2, r2
 801e0c0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e0c4:	fb04 7403 	mla	r4, r4, r3, r7
 801e0c8:	f105 0c01 	add.w	ip, r5, #1
 801e0cc:	1c57      	adds	r7, r2, #1
 801e0ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e0d2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e0d6:	b2a4      	uxth	r4, r4
 801e0d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e0dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e0e0:	433d      	orrs	r5, r7
 801e0e2:	1c67      	adds	r7, r4, #1
 801e0e4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e0e8:	0964      	lsrs	r4, r4, #5
 801e0ea:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e0ee:	4325      	orrs	r5, r4
 801e0f0:	8005      	strh	r5, [r0, #0]
 801e0f2:	e7bd      	b.n	801e070 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e0f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e0f6:	4418      	add	r0, r3
 801e0f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e0fa:	4499      	add	r9, r3
 801e0fc:	e795      	b.n	801e02a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e0fe:	4b04      	ldr	r3, [pc, #16]	; (801e110 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e100:	6818      	ldr	r0, [r3, #0]
 801e102:	6803      	ldr	r3, [r0, #0]
 801e104:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e106:	4798      	blx	r3
 801e108:	e771      	b.n	801dfee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e10a:	bf00      	nop
 801e10c:	20012d9e 	.word	0x20012d9e
 801e110:	20012da4 	.word	0x20012da4

0801e114 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e118:	b087      	sub	sp, #28
 801e11a:	4680      	mov	r8, r0
 801e11c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e120:	460d      	mov	r5, r1
 801e122:	4614      	mov	r4, r2
 801e124:	2e00      	cmp	r6, #0
 801e126:	f000 80b9 	beq.w	801e29c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e12a:	6810      	ldr	r0, [r2, #0]
 801e12c:	6851      	ldr	r1, [r2, #4]
 801e12e:	af02      	add	r7, sp, #8
 801e130:	c703      	stmia	r7!, {r0, r1}
 801e132:	6818      	ldr	r0, [r3, #0]
 801e134:	6859      	ldr	r1, [r3, #4]
 801e136:	af04      	add	r7, sp, #16
 801e138:	c703      	stmia	r7!, {r0, r1}
 801e13a:	a802      	add	r0, sp, #8
 801e13c:	f7f7 fbec 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e140:	4621      	mov	r1, r4
 801e142:	a804      	add	r0, sp, #16
 801e144:	f7f7 fc2c 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e148:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e14c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e150:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e154:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e158:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e15c:	eb08 0401 	add.w	r4, r8, r1
 801e160:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e164:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e168:	440a      	add	r2, r1
 801e16a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e16e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e172:	4413      	add	r3, r2
 801e174:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e178:	4b4a      	ldr	r3, [pc, #296]	; (801e2a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e17a:	6818      	ldr	r0, [r3, #0]
 801e17c:	6803      	ldr	r3, [r0, #0]
 801e17e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e180:	4798      	blx	r3
 801e182:	4b49      	ldr	r3, [pc, #292]	; (801e2a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e184:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e188:	881a      	ldrh	r2, [r3, #0]
 801e18a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e18e:	2eff      	cmp	r6, #255	; 0xff
 801e190:	fb02 c101 	mla	r1, r2, r1, ip
 801e194:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e198:	fb02 f207 	mul.w	r2, r2, r7
 801e19c:	f105 0104 	add.w	r1, r5, #4
 801e1a0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e1a4:	461d      	mov	r5, r3
 801e1a6:	d05a      	beq.n	801e25e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e1a8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e1ac:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e1b0:	b2b6      	uxth	r6, r6
 801e1b2:	fa1f fe8e 	uxth.w	lr, lr
 801e1b6:	9301      	str	r3, [sp, #4]
 801e1b8:	4282      	cmp	r2, r0
 801e1ba:	d96a      	bls.n	801e292 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e1bc:	eb00 0b0a 	add.w	fp, r0, sl
 801e1c0:	4583      	cmp	fp, r0
 801e1c2:	d940      	bls.n	801e246 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e1c4:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e1c8:	8805      	ldrh	r5, [r0, #0]
 801e1ca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e1ce:	122f      	asrs	r7, r5, #8
 801e1d0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e1d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e1d8:	fb17 f70e 	smulbb	r7, r7, lr
 801e1dc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e1e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e1e4:	00ed      	lsls	r5, r5, #3
 801e1e6:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e1ea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e1ee:	10df      	asrs	r7, r3, #3
 801e1f0:	b2ed      	uxtb	r5, r5
 801e1f2:	00db      	lsls	r3, r3, #3
 801e1f4:	fa1f fc8c 	uxth.w	ip, ip
 801e1f8:	fb19 f90e 	smulbb	r9, r9, lr
 801e1fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e200:	b2db      	uxtb	r3, r3
 801e202:	fb15 f50e 	smulbb	r5, r5, lr
 801e206:	fb07 9706 	mla	r7, r7, r6, r9
 801e20a:	fb03 5306 	mla	r3, r3, r6, r5
 801e20e:	f10c 0901 	add.w	r9, ip, #1
 801e212:	b29b      	uxth	r3, r3
 801e214:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e218:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e21c:	f103 0c01 	add.w	ip, r3, #1
 801e220:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e224:	b2bf      	uxth	r7, r7
 801e226:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e22a:	ea4c 0c09 	orr.w	ip, ip, r9
 801e22e:	f107 0901 	add.w	r9, r7, #1
 801e232:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e236:	097f      	lsrs	r7, r7, #5
 801e238:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e23c:	ea4c 0c07 	orr.w	ip, ip, r7
 801e240:	f820 cb02 	strh.w	ip, [r0], #2
 801e244:	e7bc      	b.n	801e1c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e246:	9b01      	ldr	r3, [sp, #4]
 801e248:	881b      	ldrh	r3, [r3, #0]
 801e24a:	eba3 0308 	sub.w	r3, r3, r8
 801e24e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e252:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e256:	eba3 0308 	sub.w	r3, r3, r8
 801e25a:	441c      	add	r4, r3
 801e25c:	e7ac      	b.n	801e1b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e25e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e262:	4282      	cmp	r2, r0
 801e264:	d915      	bls.n	801e292 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e266:	eb00 060a 	add.w	r6, r0, sl
 801e26a:	4286      	cmp	r6, r0
 801e26c:	d906      	bls.n	801e27c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e26e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e272:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e276:	f820 3b02 	strh.w	r3, [r0], #2
 801e27a:	e7f6      	b.n	801e26a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e27c:	882b      	ldrh	r3, [r5, #0]
 801e27e:	eba3 0308 	sub.w	r3, r3, r8
 801e282:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e286:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e28a:	eba3 0308 	sub.w	r3, r3, r8
 801e28e:	441c      	add	r4, r3
 801e290:	e7e7      	b.n	801e262 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e292:	4b04      	ldr	r3, [pc, #16]	; (801e2a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e294:	6818      	ldr	r0, [r3, #0]
 801e296:	6803      	ldr	r3, [r0, #0]
 801e298:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e29a:	4798      	blx	r3
 801e29c:	b007      	add	sp, #28
 801e29e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e2a2:	bf00      	nop
 801e2a4:	20012da4 	.word	0x20012da4
 801e2a8:	20012d9e 	.word	0x20012d9e

0801e2ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e2ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2b0:	b091      	sub	sp, #68	; 0x44
 801e2b2:	4680      	mov	r8, r0
 801e2b4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e2b8:	460f      	mov	r7, r1
 801e2ba:	4614      	mov	r4, r2
 801e2bc:	2d00      	cmp	r5, #0
 801e2be:	d051      	beq.n	801e364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e2c0:	6810      	ldr	r0, [r2, #0]
 801e2c2:	6851      	ldr	r1, [r2, #4]
 801e2c4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e4c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e2c8:	ae0c      	add	r6, sp, #48	; 0x30
 801e2ca:	c603      	stmia	r6!, {r0, r1}
 801e2cc:	6818      	ldr	r0, [r3, #0]
 801e2ce:	6859      	ldr	r1, [r3, #4]
 801e2d0:	ae0e      	add	r6, sp, #56	; 0x38
 801e2d2:	c603      	stmia	r6!, {r0, r1}
 801e2d4:	a80c      	add	r0, sp, #48	; 0x30
 801e2d6:	f7f7 fb1f 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2da:	4621      	mov	r1, r4
 801e2dc:	a80e      	add	r0, sp, #56	; 0x38
 801e2de:	f7f7 fb5f 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2e2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e2e6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e2ea:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e2ee:	f8d9 0000 	ldr.w	r0, [r9]
 801e2f2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e2f6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e2fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e2fe:	eb08 0401 	add.w	r4, r8, r1
 801e302:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e306:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e4cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e30a:	440a      	add	r2, r1
 801e30c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e310:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e314:	4413      	add	r3, r2
 801e316:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e31a:	6803      	ldr	r3, [r0, #0]
 801e31c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e31e:	4798      	blx	r3
 801e320:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e324:	f8d9 0000 	ldr.w	r0, [r9]
 801e328:	d01f      	beq.n	801e36a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e32a:	2200      	movs	r2, #0
 801e32c:	6801      	ldr	r1, [r0, #0]
 801e32e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e332:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e336:	220b      	movs	r2, #11
 801e338:	9207      	str	r2, [sp, #28]
 801e33a:	f8b8 2000 	ldrh.w	r2, [r8]
 801e33e:	9206      	str	r2, [sp, #24]
 801e340:	2201      	movs	r2, #1
 801e342:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e346:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e34a:	9203      	str	r2, [sp, #12]
 801e34c:	fa1f f28a 	uxth.w	r2, sl
 801e350:	9202      	str	r2, [sp, #8]
 801e352:	b2b6      	uxth	r6, r6
 801e354:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e358:	9200      	str	r2, [sp, #0]
 801e35a:	9601      	str	r6, [sp, #4]
 801e35c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e35e:	463a      	mov	r2, r7
 801e360:	4621      	mov	r1, r4
 801e362:	47a8      	blx	r5
 801e364:	b011      	add	sp, #68	; 0x44
 801e366:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e36a:	6803      	ldr	r3, [r0, #0]
 801e36c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e36e:	4798      	blx	r3
 801e370:	f8b8 2000 	ldrh.w	r2, [r8]
 801e374:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e378:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e37c:	2dff      	cmp	r5, #255	; 0xff
 801e37e:	fb02 1303 	mla	r3, r2, r3, r1
 801e382:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e386:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e38a:	fb0a fa02 	mul.w	sl, sl, r2
 801e38e:	d062      	beq.n	801e456 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e390:	ea6f 0c05 	mvn.w	ip, r5
 801e394:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e398:	930a      	str	r3, [sp, #40]	; 0x28
 801e39a:	b2ad      	uxth	r5, r5
 801e39c:	fa5f fc8c 	uxtb.w	ip, ip
 801e3a0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e3a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e3a6:	4298      	cmp	r0, r3
 801e3a8:	f080 8085 	bcs.w	801e4b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e3ac:	eb00 0b09 	add.w	fp, r0, r9
 801e3b0:	4558      	cmp	r0, fp
 801e3b2:	d246      	bcs.n	801e442 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e3b4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e3b8:	2303      	movs	r3, #3
 801e3ba:	2204      	movs	r2, #4
 801e3bc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e3c0:	eb07 0a0e 	add.w	sl, r7, lr
 801e3c4:	8803      	ldrh	r3, [r0, #0]
 801e3c6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e3ca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e3ce:	1219      	asrs	r1, r3, #8
 801e3d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e3d4:	fb18 f805 	smulbb	r8, r8, r5
 801e3d8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e3dc:	10da      	asrs	r2, r3, #3
 801e3de:	fb01 810c 	mla	r1, r1, ip, r8
 801e3e2:	00db      	lsls	r3, r3, #3
 801e3e4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e3e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e3ec:	b2db      	uxtb	r3, r3
 801e3ee:	fb18 f805 	smulbb	r8, r8, r5
 801e3f2:	fb1e fe05 	smulbb	lr, lr, r5
 801e3f6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e3fa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e3fe:	b289      	uxth	r1, r1
 801e400:	fb02 820c 	mla	r2, r2, ip, r8
 801e404:	fb03 e30c 	mla	r3, r3, ip, lr
 801e408:	b292      	uxth	r2, r2
 801e40a:	b29b      	uxth	r3, r3
 801e40c:	f101 0801 	add.w	r8, r1, #1
 801e410:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e414:	f103 0e01 	add.w	lr, r3, #1
 801e418:	f102 0801 	add.w	r8, r2, #1
 801e41c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e420:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e424:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e428:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e42c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e430:	ea4e 0101 	orr.w	r1, lr, r1
 801e434:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e438:	ea41 0108 	orr.w	r1, r1, r8
 801e43c:	f820 1b02 	strh.w	r1, [r0], #2
 801e440:	e7b6      	b.n	801e3b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e442:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e444:	881b      	ldrh	r3, [r3, #0]
 801e446:	1b9b      	subs	r3, r3, r6
 801e448:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e44c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e450:	1b9b      	subs	r3, r3, r6
 801e452:	441c      	add	r4, r3
 801e454:	e7a6      	b.n	801e3a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e456:	491b      	ldr	r1, [pc, #108]	; (801e4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e458:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e45c:	2203      	movs	r2, #3
 801e45e:	2504      	movs	r5, #4
 801e460:	4550      	cmp	r0, sl
 801e462:	d228      	bcs.n	801e4b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e464:	eb00 0c09 	add.w	ip, r0, r9
 801e468:	4560      	cmp	r0, ip
 801e46a:	4623      	mov	r3, r4
 801e46c:	d219      	bcs.n	801e4a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e46e:	f893 e000 	ldrb.w	lr, [r3]
 801e472:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e476:	eb07 0b0e 	add.w	fp, r7, lr
 801e47a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e47e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e482:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e486:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e48a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e48e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e492:	ea43 030b 	orr.w	r3, r3, fp
 801e496:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e49a:	3401      	adds	r4, #1
 801e49c:	f820 3b02 	strh.w	r3, [r0], #2
 801e4a0:	e7e2      	b.n	801e468 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e4a2:	f8b8 3000 	ldrh.w	r3, [r8]
 801e4a6:	1b9b      	subs	r3, r3, r6
 801e4a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e4ac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e4b0:	1b9b      	subs	r3, r3, r6
 801e4b2:	441c      	add	r4, r3
 801e4b4:	e7d4      	b.n	801e460 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e4b6:	4b04      	ldr	r3, [pc, #16]	; (801e4c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e4b8:	6818      	ldr	r0, [r3, #0]
 801e4ba:	6803      	ldr	r3, [r0, #0]
 801e4bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e4be:	4798      	blx	r3
 801e4c0:	e750      	b.n	801e364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e4c2:	bf00      	nop
 801e4c4:	fffff800 	.word	0xfffff800
 801e4c8:	20012da4 	.word	0x20012da4
 801e4cc:	20012d9e 	.word	0x20012d9e

0801e4d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e4d0:	b4f0      	push	{r4, r5, r6, r7}
 801e4d2:	460c      	mov	r4, r1
 801e4d4:	4611      	mov	r1, r2
 801e4d6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e4da:	780f      	ldrb	r7, [r1, #0]
 801e4dc:	784e      	ldrb	r6, [r1, #1]
 801e4de:	2f01      	cmp	r7, #1
 801e4e0:	461a      	mov	r2, r3
 801e4e2:	9b04      	ldr	r3, [sp, #16]
 801e4e4:	d036      	beq.n	801e554 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e4e6:	d31e      	bcc.n	801e526 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e4e8:	2f02      	cmp	r7, #2
 801e4ea:	d14a      	bne.n	801e582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e4ec:	2e03      	cmp	r6, #3
 801e4ee:	d848      	bhi.n	801e582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e4f0:	e8df f006 	tbb	[pc, r6]
 801e4f4:	16140702 	.word	0x16140702
 801e4f8:	9504      	str	r5, [sp, #16]
 801e4fa:	4620      	mov	r0, r4
 801e4fc:	bcf0      	pop	{r4, r5, r6, r7}
 801e4fe:	f7ff be09 	b.w	801e114 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e502:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e504:	2800      	cmp	r0, #0
 801e506:	d03c      	beq.n	801e582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e508:	6806      	ldr	r6, [r0, #0]
 801e50a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e50e:	68b5      	ldr	r5, [r6, #8]
 801e510:	4613      	mov	r3, r2
 801e512:	46ac      	mov	ip, r5
 801e514:	460a      	mov	r2, r1
 801e516:	4621      	mov	r1, r4
 801e518:	bcf0      	pop	{r4, r5, r6, r7}
 801e51a:	4760      	bx	ip
 801e51c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e51e:	e7f1      	b.n	801e504 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e520:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e524:	e7ee      	b.n	801e504 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e526:	2e03      	cmp	r6, #3
 801e528:	d82b      	bhi.n	801e582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e52a:	e8df f006 	tbb	[pc, r6]
 801e52e:	0702      	.short	0x0702
 801e530:	100e      	.short	0x100e
 801e532:	9504      	str	r5, [sp, #16]
 801e534:	4620      	mov	r0, r4
 801e536:	bcf0      	pop	{r4, r5, r6, r7}
 801e538:	f7ff bd06 	b.w	801df48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e53c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e53e:	b300      	cbz	r0, 801e582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e540:	6806      	ldr	r6, [r0, #0]
 801e542:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e546:	68f5      	ldr	r5, [r6, #12]
 801e548:	e7e2      	b.n	801e510 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e54a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e54c:	e7f7      	b.n	801e53e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e54e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e552:	e7f4      	b.n	801e53e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e554:	2e03      	cmp	r6, #3
 801e556:	d814      	bhi.n	801e582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e558:	e8df f006 	tbb	[pc, r6]
 801e55c:	100e0702 	.word	0x100e0702
 801e560:	9504      	str	r5, [sp, #16]
 801e562:	4620      	mov	r0, r4
 801e564:	bcf0      	pop	{r4, r5, r6, r7}
 801e566:	f7ff bea1 	b.w	801e2ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e56a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e56c:	b148      	cbz	r0, 801e582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e56e:	6806      	ldr	r6, [r0, #0]
 801e570:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e574:	6935      	ldr	r5, [r6, #16]
 801e576:	e7cb      	b.n	801e510 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e578:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e57a:	e7f7      	b.n	801e56c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e57c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e580:	e7f4      	b.n	801e56c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e582:	bcf0      	pop	{r4, r5, r6, r7}
 801e584:	4770      	bx	lr
	...

0801e588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e58c:	4604      	mov	r4, r0
 801e58e:	b087      	sub	sp, #28
 801e590:	6810      	ldr	r0, [r2, #0]
 801e592:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e596:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e7d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e59a:	460e      	mov	r6, r1
 801e59c:	6851      	ldr	r1, [r2, #4]
 801e59e:	ad02      	add	r5, sp, #8
 801e5a0:	c503      	stmia	r5!, {r0, r1}
 801e5a2:	6818      	ldr	r0, [r3, #0]
 801e5a4:	6859      	ldr	r1, [r3, #4]
 801e5a6:	ad04      	add	r5, sp, #16
 801e5a8:	4617      	mov	r7, r2
 801e5aa:	c503      	stmia	r5!, {r0, r1}
 801e5ac:	a802      	add	r0, sp, #8
 801e5ae:	f7f7 f9b3 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e5b2:	4639      	mov	r1, r7
 801e5b4:	a804      	add	r0, sp, #16
 801e5b6:	f7f7 f9f3 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e5ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e5be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e5c2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e5c6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e5ca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e5ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e5d2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e5d6:	440e      	add	r6, r1
 801e5d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e5dc:	440a      	add	r2, r1
 801e5de:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e5e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e5e6:	4413      	add	r3, r2
 801e5e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e5ec:	4b77      	ldr	r3, [pc, #476]	; (801e7cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e5ee:	6818      	ldr	r0, [r3, #0]
 801e5f0:	6803      	ldr	r3, [r0, #0]
 801e5f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e5f4:	4798      	blx	r3
 801e5f6:	f8b9 b000 	ldrh.w	fp, [r9]
 801e5fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e5fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e602:	fb0b 2303 	mla	r3, fp, r3, r2
 801e606:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e60a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e60e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e612:	fb05 f50b 	mul.w	r5, r5, fp
 801e616:	9300      	str	r3, [sp, #0]
 801e618:	d069      	beq.n	801e6ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e61a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e61e:	4558      	cmp	r0, fp
 801e620:	f080 80cc 	bcs.w	801e7bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e624:	9b00      	ldr	r3, [sp, #0]
 801e626:	18c3      	adds	r3, r0, r3
 801e628:	9301      	str	r3, [sp, #4]
 801e62a:	4631      	mov	r1, r6
 801e62c:	9b01      	ldr	r3, [sp, #4]
 801e62e:	4298      	cmp	r0, r3
 801e630:	d24f      	bcs.n	801e6d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e632:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e636:	2a00      	cmp	r2, #0
 801e638:	d048      	beq.n	801e6cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e63a:	fb0a f202 	mul.w	r2, sl, r2
 801e63e:	1c53      	adds	r3, r2, #1
 801e640:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e644:	121b      	asrs	r3, r3, #8
 801e646:	d041      	beq.n	801e6cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e648:	8802      	ldrh	r2, [r0, #0]
 801e64a:	f8b4 c000 	ldrh.w	ip, [r4]
 801e64e:	b29e      	uxth	r6, r3
 801e650:	1215      	asrs	r5, r2, #8
 801e652:	43db      	mvns	r3, r3
 801e654:	b2db      	uxtb	r3, r3
 801e656:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e65a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e65e:	fb15 f503 	smulbb	r5, r5, r3
 801e662:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e666:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e66a:	00d2      	lsls	r2, r2, #3
 801e66c:	fb07 5706 	mla	r7, r7, r6, r5
 801e670:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e674:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e678:	b2d2      	uxtb	r2, r2
 801e67a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e67e:	b2bf      	uxth	r7, r7
 801e680:	fb1e fe03 	smulbb	lr, lr, r3
 801e684:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e688:	fa5f fc8c 	uxtb.w	ip, ip
 801e68c:	fb12 f203 	smulbb	r2, r2, r3
 801e690:	fb05 e506 	mla	r5, r5, r6, lr
 801e694:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e698:	f107 0e01 	add.w	lr, r7, #1
 801e69c:	fa1f fc8c 	uxth.w	ip, ip
 801e6a0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e6a4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e6a8:	f10c 0701 	add.w	r7, ip, #1
 801e6ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e6b0:	b2ad      	uxth	r5, r5
 801e6b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e6b6:	ea47 070e 	orr.w	r7, r7, lr
 801e6ba:	f105 0e01 	add.w	lr, r5, #1
 801e6be:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e6c2:	096d      	lsrs	r5, r5, #5
 801e6c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e6c8:	432f      	orrs	r7, r5
 801e6ca:	8007      	strh	r7, [r0, #0]
 801e6cc:	3002      	adds	r0, #2
 801e6ce:	3402      	adds	r4, #2
 801e6d0:	e7ac      	b.n	801e62c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e6d2:	f8b9 3000 	ldrh.w	r3, [r9]
 801e6d6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e6da:	eba3 0308 	sub.w	r3, r3, r8
 801e6de:	eba6 0608 	sub.w	r6, r6, r8
 801e6e2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e6e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e6ea:	440e      	add	r6, r1
 801e6ec:	e797      	b.n	801e61e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e6ee:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e6f2:	42a8      	cmp	r0, r5
 801e6f4:	d262      	bcs.n	801e7bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e6f6:	9b00      	ldr	r3, [sp, #0]
 801e6f8:	4631      	mov	r1, r6
 801e6fa:	eb00 0b03 	add.w	fp, r0, r3
 801e6fe:	4558      	cmp	r0, fp
 801e700:	d24e      	bcs.n	801e7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e702:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e706:	b12b      	cbz	r3, 801e714 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e708:	2bff      	cmp	r3, #255	; 0xff
 801e70a:	f8b4 e000 	ldrh.w	lr, [r4]
 801e70e:	d104      	bne.n	801e71a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e710:	f8a0 e000 	strh.w	lr, [r0]
 801e714:	3002      	adds	r0, #2
 801e716:	3402      	adds	r4, #2
 801e718:	e7f1      	b.n	801e6fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e71a:	8802      	ldrh	r2, [r0, #0]
 801e71c:	b29f      	uxth	r7, r3
 801e71e:	1216      	asrs	r6, r2, #8
 801e720:	43db      	mvns	r3, r3
 801e722:	b2db      	uxtb	r3, r3
 801e724:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e728:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e72c:	fb16 f603 	smulbb	r6, r6, r3
 801e730:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e734:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e738:	00d2      	lsls	r2, r2, #3
 801e73a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e73e:	b2d2      	uxtb	r2, r2
 801e740:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e744:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e748:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e74c:	fb1a fa03 	smulbb	sl, sl, r3
 801e750:	fa1f fc8c 	uxth.w	ip, ip
 801e754:	fb12 f303 	smulbb	r3, r2, r3
 801e758:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e75c:	fa5f fe8e 	uxtb.w	lr, lr
 801e760:	fb06 a607 	mla	r6, r6, r7, sl
 801e764:	f10c 0201 	add.w	r2, ip, #1
 801e768:	fb0e 3307 	mla	r3, lr, r7, r3
 801e76c:	b2b6      	uxth	r6, r6
 801e76e:	b29b      	uxth	r3, r3
 801e770:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e774:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e778:	f106 0a01 	add.w	sl, r6, #1
 801e77c:	f103 0c01 	add.w	ip, r3, #1
 801e780:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e784:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e788:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e78c:	0976      	lsrs	r6, r6, #5
 801e78e:	ea4c 0c02 	orr.w	ip, ip, r2
 801e792:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e796:	ea4c 0c06 	orr.w	ip, ip, r6
 801e79a:	f8a0 c000 	strh.w	ip, [r0]
 801e79e:	e7b9      	b.n	801e714 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e7a0:	f8b9 3000 	ldrh.w	r3, [r9]
 801e7a4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e7a8:	eba3 0308 	sub.w	r3, r3, r8
 801e7ac:	eba6 0608 	sub.w	r6, r6, r8
 801e7b0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e7b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e7b8:	440e      	add	r6, r1
 801e7ba:	e79a      	b.n	801e6f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e7bc:	4b03      	ldr	r3, [pc, #12]	; (801e7cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e7be:	6818      	ldr	r0, [r3, #0]
 801e7c0:	6803      	ldr	r3, [r0, #0]
 801e7c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e7c4:	4798      	blx	r3
 801e7c6:	b007      	add	sp, #28
 801e7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7cc:	20012da4 	.word	0x20012da4
 801e7d0:	20012d9e 	.word	0x20012d9e

0801e7d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e7d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7d8:	b089      	sub	sp, #36	; 0x24
 801e7da:	4682      	mov	sl, r0
 801e7dc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e7e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e7e2:	460f      	mov	r7, r1
 801e7e4:	4691      	mov	r9, r2
 801e7e6:	4698      	mov	r8, r3
 801e7e8:	2e00      	cmp	r6, #0
 801e7ea:	d03d      	beq.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e7ec:	4608      	mov	r0, r1
 801e7ee:	f7fa fe59 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e7f2:	4605      	mov	r5, r0
 801e7f4:	4638      	mov	r0, r7
 801e7f6:	f7fa fe89 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e7fa:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e7fe:	4638      	mov	r0, r7
 801e800:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e804:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e808:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e80c:	f7fa ff36 	bl	801967c <_ZNK8touchgfx6Bitmap7getDataEv>
 801e810:	4605      	mov	r5, r0
 801e812:	4638      	mov	r0, r7
 801e814:	f7fa ff62 	bl	80196dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e818:	4681      	mov	r9, r0
 801e81a:	4638      	mov	r0, r7
 801e81c:	f7fa ffb2 	bl	8019784 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e820:	280b      	cmp	r0, #11
 801e822:	d821      	bhi.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e824:	e8df f000 	tbb	[pc, r0]
 801e828:	2006aebe 	.word	0x2006aebe
 801e82c:	20202020 	.word	0x20202020
 801e830:	b5202020 	.word	0xb5202020
 801e834:	4bb0      	ldr	r3, [pc, #704]	; (801eaf8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e836:	6818      	ldr	r0, [r3, #0]
 801e838:	6803      	ldr	r3, [r0, #0]
 801e83a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e83c:	4798      	blx	r3
 801e83e:	2eff      	cmp	r6, #255	; 0xff
 801e840:	d101      	bne.n	801e846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e842:	0683      	lsls	r3, r0, #26
 801e844:	d506      	bpl.n	801e854 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e846:	4633      	mov	r3, r6
 801e848:	4622      	mov	r2, r4
 801e84a:	a902      	add	r1, sp, #8
 801e84c:	4628      	mov	r0, r5
 801e84e:	f7ff f909 	bl	801da64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e852:	e009      	b.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e854:	4638      	mov	r0, r7
 801e856:	f7fa fed9 	bl	801960c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e85a:	b940      	cbnz	r0, 801e86e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e85c:	4623      	mov	r3, r4
 801e85e:	aa02      	add	r2, sp, #8
 801e860:	4629      	mov	r1, r5
 801e862:	4650      	mov	r0, sl
 801e864:	f7ff f9e4 	bl	801dc30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e868:	b009      	add	sp, #36	; 0x24
 801e86a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e86e:	f10d 0818 	add.w	r8, sp, #24
 801e872:	4639      	mov	r1, r7
 801e874:	4640      	mov	r0, r8
 801e876:	f7fa fe7d 	bl	8019574 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e87a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e87e:	af04      	add	r7, sp, #16
 801e880:	e887 0003 	stmia.w	r7, {r0, r1}
 801e884:	4638      	mov	r0, r7
 801e886:	4621      	mov	r1, r4
 801e888:	f7f2 f8e8 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 801e88c:	4638      	mov	r0, r7
 801e88e:	f7f2 f928 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e892:	2800      	cmp	r0, #0
 801e894:	d1d7      	bne.n	801e846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e896:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e89a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e89e:	4293      	cmp	r3, r2
 801e8a0:	dd12      	ble.n	801e8c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e8a2:	1a9b      	subs	r3, r3, r2
 801e8a4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e8a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e8ac:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e8b0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e8b4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e8b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e8bc:	4642      	mov	r2, r8
 801e8be:	4633      	mov	r3, r6
 801e8c0:	a902      	add	r1, sp, #8
 801e8c2:	4628      	mov	r0, r5
 801e8c4:	f7ff f8ce 	bl	801da64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e8c8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e8cc:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e8d0:	4293      	cmp	r3, r2
 801e8d2:	dd12      	ble.n	801e8fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e8d4:	1a9b      	subs	r3, r3, r2
 801e8d6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e8da:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e8de:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e8e2:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e8e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e8ea:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e8ee:	23ff      	movs	r3, #255	; 0xff
 801e8f0:	4642      	mov	r2, r8
 801e8f2:	a902      	add	r1, sp, #8
 801e8f4:	4628      	mov	r0, r5
 801e8f6:	f7ff f8b5 	bl	801da64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e8fa:	463b      	mov	r3, r7
 801e8fc:	aa02      	add	r2, sp, #8
 801e8fe:	4629      	mov	r1, r5
 801e900:	4650      	mov	r0, sl
 801e902:	f7ff f995 	bl	801dc30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e906:	88a2      	ldrh	r2, [r4, #4]
 801e908:	8823      	ldrh	r3, [r4, #0]
 801e90a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e90e:	4413      	add	r3, r2
 801e910:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e914:	440a      	add	r2, r1
 801e916:	b29b      	uxth	r3, r3
 801e918:	b292      	uxth	r2, r2
 801e91a:	b211      	sxth	r1, r2
 801e91c:	b218      	sxth	r0, r3
 801e91e:	4288      	cmp	r0, r1
 801e920:	dd12      	ble.n	801e948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e922:	1a9b      	subs	r3, r3, r2
 801e924:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e928:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e92c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e930:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e934:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e938:	23ff      	movs	r3, #255	; 0xff
 801e93a:	4642      	mov	r2, r8
 801e93c:	a902      	add	r1, sp, #8
 801e93e:	4628      	mov	r0, r5
 801e940:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e944:	f7ff f88e 	bl	801da64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e948:	88e2      	ldrh	r2, [r4, #6]
 801e94a:	8863      	ldrh	r3, [r4, #2]
 801e94c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e950:	4413      	add	r3, r2
 801e952:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e956:	440a      	add	r2, r1
 801e958:	b29b      	uxth	r3, r3
 801e95a:	b292      	uxth	r2, r2
 801e95c:	b211      	sxth	r1, r2
 801e95e:	b218      	sxth	r0, r3
 801e960:	4288      	cmp	r0, r1
 801e962:	dd81      	ble.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e964:	1a9b      	subs	r3, r3, r2
 801e966:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e96a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e96e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e972:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e976:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e97a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e97e:	23ff      	movs	r3, #255	; 0xff
 801e980:	4642      	mov	r2, r8
 801e982:	e762      	b.n	801e84a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801e984:	4633      	mov	r3, r6
 801e986:	4622      	mov	r2, r4
 801e988:	a902      	add	r1, sp, #8
 801e98a:	4628      	mov	r0, r5
 801e98c:	f7ff f9c0 	bl	801dd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e990:	e76a      	b.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e992:	e9cd 4600 	strd	r4, r6, [sp]
 801e996:	ab02      	add	r3, sp, #8
 801e998:	464a      	mov	r2, r9
 801e99a:	4629      	mov	r1, r5
 801e99c:	4650      	mov	r0, sl
 801e99e:	f7ff fd97 	bl	801e4d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e9a2:	e761      	b.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e9a4:	4638      	mov	r0, r7
 801e9a6:	f7fa fe31 	bl	801960c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e9aa:	b950      	cbnz	r0, 801e9c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801e9ac:	e9cd 6000 	strd	r6, r0, [sp]
 801e9b0:	f8da 3000 	ldr.w	r3, [sl]
 801e9b4:	aa02      	add	r2, sp, #8
 801e9b6:	68de      	ldr	r6, [r3, #12]
 801e9b8:	4629      	mov	r1, r5
 801e9ba:	4623      	mov	r3, r4
 801e9bc:	4650      	mov	r0, sl
 801e9be:	47b0      	blx	r6
 801e9c0:	e752      	b.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e9c2:	f10d 0818 	add.w	r8, sp, #24
 801e9c6:	4639      	mov	r1, r7
 801e9c8:	4640      	mov	r0, r8
 801e9ca:	f7fa fdd3 	bl	8019574 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e9ce:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e9d2:	af04      	add	r7, sp, #16
 801e9d4:	e887 0003 	stmia.w	r7, {r0, r1}
 801e9d8:	4638      	mov	r0, r7
 801e9da:	4621      	mov	r1, r4
 801e9dc:	f7f2 f83e 	bl	8010a5c <_ZN8touchgfx4RectaNERKS0_>
 801e9e0:	4638      	mov	r0, r7
 801e9e2:	f7f2 f87e 	bl	8010ae2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e9e6:	b138      	cbz	r0, 801e9f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801e9e8:	9600      	str	r6, [sp, #0]
 801e9ea:	4623      	mov	r3, r4
 801e9ec:	aa02      	add	r2, sp, #8
 801e9ee:	4649      	mov	r1, r9
 801e9f0:	4628      	mov	r0, r5
 801e9f2:	f7ff fdc9 	bl	801e588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e9f6:	e737      	b.n	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e9f8:	e9cd 6000 	strd	r6, r0, [sp]
 801e9fc:	f8da 3000 	ldr.w	r3, [sl]
 801ea00:	aa02      	add	r2, sp, #8
 801ea02:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ea06:	4629      	mov	r1, r5
 801ea08:	463b      	mov	r3, r7
 801ea0a:	4650      	mov	r0, sl
 801ea0c:	47d8      	blx	fp
 801ea0e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ea12:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ea16:	4293      	cmp	r3, r2
 801ea18:	dd13      	ble.n	801ea42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801ea1a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ea1e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ea22:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ea26:	1a9b      	subs	r3, r3, r2
 801ea28:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ea2c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ea30:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ea34:	9600      	str	r6, [sp, #0]
 801ea36:	4643      	mov	r3, r8
 801ea38:	aa02      	add	r2, sp, #8
 801ea3a:	4649      	mov	r1, r9
 801ea3c:	4628      	mov	r0, r5
 801ea3e:	f7ff fda3 	bl	801e588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ea42:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ea46:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ea4a:	4293      	cmp	r3, r2
 801ea4c:	dd13      	ble.n	801ea76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801ea4e:	1a9b      	subs	r3, r3, r2
 801ea50:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ea54:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ea58:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ea5c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ea60:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ea64:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ea68:	9600      	str	r6, [sp, #0]
 801ea6a:	4643      	mov	r3, r8
 801ea6c:	aa02      	add	r2, sp, #8
 801ea6e:	4649      	mov	r1, r9
 801ea70:	4628      	mov	r0, r5
 801ea72:	f7ff fd89 	bl	801e588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ea76:	88a2      	ldrh	r2, [r4, #4]
 801ea78:	8823      	ldrh	r3, [r4, #0]
 801ea7a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ea7e:	4413      	add	r3, r2
 801ea80:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ea84:	440a      	add	r2, r1
 801ea86:	b29b      	uxth	r3, r3
 801ea88:	b292      	uxth	r2, r2
 801ea8a:	b211      	sxth	r1, r2
 801ea8c:	b218      	sxth	r0, r3
 801ea8e:	4288      	cmp	r0, r1
 801ea90:	dd13      	ble.n	801eaba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801ea92:	1a9b      	subs	r3, r3, r2
 801ea94:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ea98:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801ea9c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801eaa0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eaa4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801eaa8:	9600      	str	r6, [sp, #0]
 801eaaa:	4643      	mov	r3, r8
 801eaac:	aa02      	add	r2, sp, #8
 801eaae:	4649      	mov	r1, r9
 801eab0:	4628      	mov	r0, r5
 801eab2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801eab6:	f7ff fd67 	bl	801e588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eaba:	88e2      	ldrh	r2, [r4, #6]
 801eabc:	8863      	ldrh	r3, [r4, #2]
 801eabe:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801eac2:	4413      	add	r3, r2
 801eac4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801eac8:	440a      	add	r2, r1
 801eaca:	b29b      	uxth	r3, r3
 801eacc:	b292      	uxth	r2, r2
 801eace:	b211      	sxth	r1, r2
 801ead0:	b218      	sxth	r0, r3
 801ead2:	4288      	cmp	r0, r1
 801ead4:	f77f aec8 	ble.w	801e868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ead8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801eadc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801eae0:	f8ad 7018 	strh.w	r7, [sp, #24]
 801eae4:	1a9b      	subs	r3, r3, r2
 801eae6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eaea:	f8ad 101a 	strh.w	r1, [sp, #26]
 801eaee:	f8ad 001c 	strh.w	r0, [sp, #28]
 801eaf2:	9600      	str	r6, [sp, #0]
 801eaf4:	4643      	mov	r3, r8
 801eaf6:	e779      	b.n	801e9ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801eaf8:	20012da4 	.word	0x20012da4

0801eafc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801eafc:	b180      	cbz	r0, 801eb20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801eafe:	2903      	cmp	r1, #3
 801eb00:	d81c      	bhi.n	801eb3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801eb02:	e8df f001 	tbb	[pc, r1]
 801eb06:	1d02      	.short	0x1d02
 801eb08:	1f08      	.short	0x1f08
 801eb0a:	4b10      	ldr	r3, [pc, #64]	; (801eb4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801eb0c:	8818      	ldrh	r0, [r3, #0]
 801eb0e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eb12:	4240      	negs	r0, r0
 801eb14:	4770      	bx	lr
 801eb16:	4b0d      	ldr	r3, [pc, #52]	; (801eb4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801eb18:	8818      	ldrh	r0, [r3, #0]
 801eb1a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eb1e:	4770      	bx	lr
 801eb20:	2903      	cmp	r1, #3
 801eb22:	d80b      	bhi.n	801eb3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801eb24:	a301      	add	r3, pc, #4	; (adr r3, 801eb2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801eb26:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801eb2a:	bf00      	nop
 801eb2c:	0801eb41 	.word	0x0801eb41
 801eb30:	0801eb17 	.word	0x0801eb17
 801eb34:	0801eb45 	.word	0x0801eb45
 801eb38:	0801eb0b 	.word	0x0801eb0b
 801eb3c:	2000      	movs	r0, #0
 801eb3e:	4770      	bx	lr
 801eb40:	2001      	movs	r0, #1
 801eb42:	4770      	bx	lr
 801eb44:	f04f 30ff 	mov.w	r0, #4294967295
 801eb48:	4770      	bx	lr
 801eb4a:	bf00      	nop
 801eb4c:	20012d9e 	.word	0x20012d9e

0801eb50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801eb50:	b180      	cbz	r0, 801eb74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801eb52:	2903      	cmp	r1, #3
 801eb54:	d81c      	bhi.n	801eb90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801eb56:	e8df f001 	tbb	[pc, r1]
 801eb5a:	021d      	.short	0x021d
 801eb5c:	071f      	.short	0x071f
 801eb5e:	4b10      	ldr	r3, [pc, #64]	; (801eba0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801eb60:	8818      	ldrh	r0, [r3, #0]
 801eb62:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eb66:	4770      	bx	lr
 801eb68:	4b0d      	ldr	r3, [pc, #52]	; (801eba0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801eb6a:	8818      	ldrh	r0, [r3, #0]
 801eb6c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eb70:	4240      	negs	r0, r0
 801eb72:	4770      	bx	lr
 801eb74:	2903      	cmp	r1, #3
 801eb76:	d80b      	bhi.n	801eb90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801eb78:	a301      	add	r3, pc, #4	; (adr r3, 801eb80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801eb7a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801eb7e:	bf00      	nop
 801eb80:	0801eb5f 	.word	0x0801eb5f
 801eb84:	0801eb99 	.word	0x0801eb99
 801eb88:	0801eb69 	.word	0x0801eb69
 801eb8c:	0801eb95 	.word	0x0801eb95
 801eb90:	2000      	movs	r0, #0
 801eb92:	4770      	bx	lr
 801eb94:	2001      	movs	r0, #1
 801eb96:	4770      	bx	lr
 801eb98:	f04f 30ff 	mov.w	r0, #4294967295
 801eb9c:	4770      	bx	lr
 801eb9e:	bf00      	nop
 801eba0:	20012d9e 	.word	0x20012d9e

0801eba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801eba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eba8:	b099      	sub	sp, #100	; 0x64
 801ebaa:	910b      	str	r1, [sp, #44]	; 0x2c
 801ebac:	a914      	add	r1, sp, #80	; 0x50
 801ebae:	e881 000c 	stmia.w	r1, {r2, r3}
 801ebb2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ebb6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ebba:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ebbe:	9309      	str	r3, [sp, #36]	; 0x24
 801ebc0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ebc4:	9310      	str	r3, [sp, #64]	; 0x40
 801ebc6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ebca:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ebce:	930c      	str	r3, [sp, #48]	; 0x30
 801ebd0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ebd4:	798f      	ldrb	r7, [r1, #6]
 801ebd6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ebda:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ebde:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ebe2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ebe6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ebea:	431f      	orrs	r7, r3
 801ebec:	f000 8195 	beq.w	801ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ebf0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ebf4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ebf8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ebfc:	ea59 0903 	orrs.w	r9, r9, r3
 801ec00:	f000 818b 	beq.w	801ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ec04:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ec08:	b29b      	uxth	r3, r3
 801ec0a:	2d00      	cmp	r5, #0
 801ec0c:	f000 812e 	beq.w	801ee6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ec10:	1aed      	subs	r5, r5, r3
 801ec12:	b2ad      	uxth	r5, r5
 801ec14:	042b      	lsls	r3, r5, #16
 801ec16:	d502      	bpl.n	801ec1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ec18:	1b64      	subs	r4, r4, r5
 801ec1a:	b224      	sxth	r4, r4
 801ec1c:	2500      	movs	r5, #0
 801ec1e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ec22:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ec26:	428c      	cmp	r4, r1
 801ec28:	b28b      	uxth	r3, r1
 801ec2a:	bfbf      	itttt	lt
 801ec2c:	18ed      	addlt	r5, r5, r3
 801ec2e:	1b2c      	sublt	r4, r5, r4
 801ec30:	b2a5      	uxthlt	r5, r4
 801ec32:	460c      	movlt	r4, r1
 801ec34:	8891      	ldrh	r1, [r2, #4]
 801ec36:	440b      	add	r3, r1
 801ec38:	b21b      	sxth	r3, r3
 801ec3a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ec3c:	88d3      	ldrh	r3, [r2, #6]
 801ec3e:	8852      	ldrh	r2, [r2, #2]
 801ec40:	4413      	add	r3, r2
 801ec42:	b21b      	sxth	r3, r3
 801ec44:	930d      	str	r3, [sp, #52]	; 0x34
 801ec46:	4bbe      	ldr	r3, [pc, #760]	; (801ef40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ec48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ec4a:	f893 b000 	ldrb.w	fp, [r3]
 801ec4e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ec52:	f1dc 0300 	rsbs	r3, ip, #0
 801ec56:	eb43 030c 	adc.w	r3, r3, ip
 801ec5a:	930e      	str	r3, [sp, #56]	; 0x38
 801ec5c:	4621      	mov	r1, r4
 801ec5e:	4653      	mov	r3, sl
 801ec60:	a814      	add	r0, sp, #80	; 0x50
 801ec62:	f7f6 fcce 	bl	8015602 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ec66:	4621      	mov	r1, r4
 801ec68:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ec6c:	4653      	mov	r3, sl
 801ec6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ec70:	a814      	add	r0, sp, #80	; 0x50
 801ec72:	f7f6 fce3 	bl	801563c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ec76:	a918      	add	r1, sp, #96	; 0x60
 801ec78:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ec7c:	a817      	add	r0, sp, #92	; 0x5c
 801ec7e:	f7f6 fe09 	bl	8015894 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ec82:	f1ba 0f00 	cmp.w	sl, #0
 801ec86:	f040 80f4 	bne.w	801ee72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ec8a:	f1bb 0f01 	cmp.w	fp, #1
 801ec8e:	f040 80f8 	bne.w	801ee82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801ec92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ec94:	2b00      	cmp	r3, #0
 801ec96:	f040 8145 	bne.w	801ef24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801ec9a:	b2ba      	uxth	r2, r7
 801ec9c:	b905      	cbnz	r5, 801eca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801ec9e:	b16e      	cbz	r6, 801ecbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801eca0:	fb06 5302 	mla	r3, r6, r2, r5
 801eca4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801eca6:	fb08 f303 	mul.w	r3, r8, r3
 801ecaa:	4631      	mov	r1, r6
 801ecac:	f003 0607 	and.w	r6, r3, #7
 801ecb0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ecb4:	9328      	str	r3, [sp, #160]	; 0xa0
 801ecb6:	eba9 0301 	sub.w	r3, r9, r1
 801ecba:	930a      	str	r3, [sp, #40]	; 0x28
 801ecbc:	4651      	mov	r1, sl
 801ecbe:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ecc0:	f7ff ff1c 	bl	801eafc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ecc4:	4681      	mov	r9, r0
 801ecc6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ecc8:	f7ff ff42 	bl	801eb50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801eccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ecce:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ecd0:	eba3 0a01 	sub.w	sl, r3, r1
 801ecd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ecd6:	459a      	cmp	sl, r3
 801ecd8:	bfa8      	it	ge
 801ecda:	469a      	movge	sl, r3
 801ecdc:	f1ba 0f00 	cmp.w	sl, #0
 801ece0:	4683      	mov	fp, r0
 801ece2:	f340 811a 	ble.w	801ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ece6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ece8:	1b64      	subs	r4, r4, r5
 801ecea:	1b1c      	subs	r4, r3, r4
 801ecec:	42bc      	cmp	r4, r7
 801ecee:	bfd4      	ite	le
 801ecf0:	ebc5 0504 	rsble	r5, r5, r4
 801ecf4:	ebc5 0507 	rsbgt	r5, r5, r7
 801ecf8:	2d00      	cmp	r5, #0
 801ecfa:	f340 810e 	ble.w	801ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ecfe:	1b52      	subs	r2, r2, r5
 801ed00:	fb08 f302 	mul.w	r3, r8, r2
 801ed04:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ed08:	2b00      	cmp	r3, #0
 801ed0a:	f040 8116 	bne.w	801ef3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ed0e:	4b8d      	ldr	r3, [pc, #564]	; (801ef44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ed10:	6818      	ldr	r0, [r3, #0]
 801ed12:	6803      	ldr	r3, [r0, #0]
 801ed14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed16:	4798      	blx	r3
 801ed18:	2301      	movs	r3, #1
 801ed1a:	fa03 f308 	lsl.w	r3, r3, r8
 801ed1e:	4a8a      	ldr	r2, [pc, #552]	; (801ef48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ed20:	3b01      	subs	r3, #1
 801ed22:	b2db      	uxtb	r3, r3
 801ed24:	8811      	ldrh	r1, [r2, #0]
 801ed26:	930e      	str	r3, [sp, #56]	; 0x38
 801ed28:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ed2c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ed30:	fb01 2303 	mla	r3, r1, r3, r2
 801ed34:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ed38:	930a      	str	r3, [sp, #40]	; 0x28
 801ed3a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ed3c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ed40:	9313      	str	r3, [sp, #76]	; 0x4c
 801ed42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ed44:	0a19      	lsrs	r1, r3, #8
 801ed46:	b2cb      	uxtb	r3, r1
 801ed48:	9312      	str	r3, [sp, #72]	; 0x48
 801ed4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ed4c:	b2db      	uxtb	r3, r3
 801ed4e:	9311      	str	r3, [sp, #68]	; 0x44
 801ed50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ed52:	095a      	lsrs	r2, r3, #5
 801ed54:	4b7d      	ldr	r3, [pc, #500]	; (801ef4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ed56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed5a:	400b      	ands	r3, r1
 801ed5c:	4313      	orrs	r3, r2
 801ed5e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ed60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ed64:	4313      	orrs	r3, r2
 801ed66:	b29b      	uxth	r3, r3
 801ed68:	9310      	str	r3, [sp, #64]	; 0x40
 801ed6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ed6c:	781a      	ldrb	r2, [r3, #0]
 801ed6e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ed72:	4132      	asrs	r2, r6
 801ed74:	fb05 b919 	mls	r9, r5, r9, fp
 801ed78:	fb03 fb05 	mul.w	fp, r3, r5
 801ed7c:	b2d2      	uxtb	r2, r2
 801ed7e:	930d      	str	r3, [sp, #52]	; 0x34
 801ed80:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ed84:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ed88:	f0c0 80f5 	bcc.w	801ef76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801ed8c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801ed90:	46ae      	mov	lr, r5
 801ed92:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801ed96:	f0c0 80dd 	bcc.w	801ef54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ed9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ed9c:	4013      	ands	r3, r2
 801ed9e:	d055      	beq.n	801ee4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801eda0:	20ff      	movs	r0, #255	; 0xff
 801eda2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801eda4:	fb90 f1f1 	sdiv	r1, r0, r1
 801eda8:	434b      	muls	r3, r1
 801edaa:	2bfe      	cmp	r3, #254	; 0xfe
 801edac:	dd03      	ble.n	801edb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801edae:	990c      	ldr	r1, [sp, #48]	; 0x30
 801edb0:	4281      	cmp	r1, r0
 801edb2:	f000 80cd 	beq.w	801ef50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801edb6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801edb8:	f8bc 4000 	ldrh.w	r4, [ip]
 801edbc:	fb11 f303 	smulbb	r3, r1, r3
 801edc0:	b29b      	uxth	r3, r3
 801edc2:	1c59      	adds	r1, r3, #1
 801edc4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801edc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801edcc:	b29f      	uxth	r7, r3
 801edce:	43db      	mvns	r3, r3
 801edd0:	b2db      	uxtb	r3, r3
 801edd2:	9309      	str	r3, [sp, #36]	; 0x24
 801edd4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801edd6:	1220      	asrs	r0, r4, #8
 801edd8:	fb13 f907 	smulbb	r9, r3, r7
 801eddc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ede0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ede2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ede6:	fb00 9003 	mla	r0, r0, r3, r9
 801edea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801edec:	10e1      	asrs	r1, r4, #3
 801edee:	fb13 f907 	smulbb	r9, r3, r7
 801edf2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801edf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801edf8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801edfc:	fb01 9103 	mla	r1, r1, r3, r9
 801ee00:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ee02:	00e4      	lsls	r4, r4, #3
 801ee04:	fb13 f707 	smulbb	r7, r3, r7
 801ee08:	b2e4      	uxtb	r4, r4
 801ee0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee0c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ee10:	fb04 7403 	mla	r4, r4, r3, r7
 801ee14:	b280      	uxth	r0, r0
 801ee16:	b2a4      	uxth	r4, r4
 801ee18:	1c43      	adds	r3, r0, #1
 801ee1a:	f104 0901 	add.w	r9, r4, #1
 801ee1e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ee22:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ee26:	b289      	uxth	r1, r1
 801ee28:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ee2c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ee30:	ea49 0000 	orr.w	r0, r9, r0
 801ee34:	f101 0901 	add.w	r9, r1, #1
 801ee38:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ee3c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ee40:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ee44:	ea40 0009 	orr.w	r0, r0, r9
 801ee48:	f8ac 0000 	strh.w	r0, [ip]
 801ee4c:	4446      	add	r6, r8
 801ee4e:	b2b6      	uxth	r6, r6
 801ee50:	2e07      	cmp	r6, #7
 801ee52:	bf81      	itttt	hi
 801ee54:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ee56:	785a      	ldrbhi	r2, [r3, #1]
 801ee58:	3301      	addhi	r3, #1
 801ee5a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ee5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ee5e:	bf9a      	itte	ls
 801ee60:	fa42 f208 	asrls.w	r2, r2, r8
 801ee64:	b2d2      	uxtbls	r2, r2
 801ee66:	2600      	movhi	r6, #0
 801ee68:	449c      	add	ip, r3
 801ee6a:	e792      	b.n	801ed92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ee6c:	441c      	add	r4, r3
 801ee6e:	b224      	sxth	r4, r4
 801ee70:	e6d5      	b.n	801ec1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ee72:	f1ba 0f01 	cmp.w	sl, #1
 801ee76:	f47f af0c 	bne.w	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee7a:	f1bb 0f01 	cmp.w	fp, #1
 801ee7e:	f47f af08 	bne.w	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee82:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ef44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ee86:	f8db 0000 	ldr.w	r0, [fp]
 801ee8a:	6803      	ldr	r3, [r0, #0]
 801ee8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee8e:	4798      	blx	r3
 801ee90:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ee94:	465a      	mov	r2, fp
 801ee96:	d006      	beq.n	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ee98:	f1b8 0f04 	cmp.w	r8, #4
 801ee9c:	d140      	bne.n	801ef20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ee9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eea0:	3300      	adds	r3, #0
 801eea2:	bf18      	it	ne
 801eea4:	2301      	movne	r3, #1
 801eea6:	0580      	lsls	r0, r0, #22
 801eea8:	d56e      	bpl.n	801ef88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801eeaa:	f1b8 0f08 	cmp.w	r8, #8
 801eeae:	d16b      	bne.n	801ef88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801eeb0:	2b00      	cmp	r3, #0
 801eeb2:	bf0c      	ite	eq
 801eeb4:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801eeb8:	f44f 7180 	movne.w	r1, #256	; 0x100
 801eebc:	2d00      	cmp	r5, #0
 801eebe:	f47f aee8 	bne.w	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801eec2:	2e00      	cmp	r6, #0
 801eec4:	f47f aee5 	bne.w	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801eec8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801eeca:	19e3      	adds	r3, r4, r7
 801eecc:	4283      	cmp	r3, r0
 801eece:	f73f aee0 	bgt.w	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801eed2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eed4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801eed6:	444b      	add	r3, r9
 801eed8:	4283      	cmp	r3, r0
 801eeda:	f73f aeda 	bgt.w	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801eede:	6810      	ldr	r0, [r2, #0]
 801eee0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801eee4:	6804      	ldr	r4, [r0, #0]
 801eee6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801eeea:	b2bf      	uxth	r7, r7
 801eeec:	f1b8 0f08 	cmp.w	r8, #8
 801eef0:	f04f 0500 	mov.w	r5, #0
 801eef4:	bf18      	it	ne
 801eef6:	3701      	addne	r7, #1
 801eef8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801eefc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eefe:	9104      	str	r1, [sp, #16]
 801ef00:	bf18      	it	ne
 801ef02:	f027 0701 	bicne.w	r7, r7, #1
 801ef06:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ef08:	bf18      	it	ne
 801ef0a:	b2bf      	uxthne	r7, r7
 801ef0c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ef10:	e9cd 7900 	strd	r7, r9, [sp]
 801ef14:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ef16:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ef18:	47a0      	blx	r4
 801ef1a:	b019      	add	sp, #100	; 0x64
 801ef1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef20:	2300      	movs	r3, #0
 801ef22:	e7c0      	b.n	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ef24:	2208      	movs	r2, #8
 801ef26:	fb92 f3f8 	sdiv	r3, r2, r8
 801ef2a:	1e5a      	subs	r2, r3, #1
 801ef2c:	443a      	add	r2, r7
 801ef2e:	fb92 f2f3 	sdiv	r2, r2, r3
 801ef32:	fb12 f203 	smulbb	r2, r2, r3
 801ef36:	b292      	uxth	r2, r2
 801ef38:	e6b0      	b.n	801ec9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801ef3a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ef3c:	e6ec      	b.n	801ed18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801ef3e:	bf00      	nop
 801ef40:	20012d9c 	.word	0x20012d9c
 801ef44:	20012da4 	.word	0x20012da4
 801ef48:	20012d9e 	.word	0x20012d9e
 801ef4c:	00fff800 	.word	0x00fff800
 801ef50:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ef52:	e779      	b.n	801ee48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801ef54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ef56:	b153      	cbz	r3, 801ef6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801ef58:	441e      	add	r6, r3
 801ef5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ef5c:	b2b6      	uxth	r6, r6
 801ef5e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801ef62:	f006 0607 	and.w	r6, r6, #7
 801ef66:	781a      	ldrb	r2, [r3, #0]
 801ef68:	9328      	str	r3, [sp, #160]	; 0xa0
 801ef6a:	4132      	asrs	r2, r6
 801ef6c:	b2d2      	uxtb	r2, r2
 801ef6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ef70:	445b      	add	r3, fp
 801ef72:	930a      	str	r3, [sp, #40]	; 0x28
 801ef74:	e706      	b.n	801ed84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801ef76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ef78:	2b00      	cmp	r3, #0
 801ef7a:	d1ce      	bne.n	801ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ef7c:	4b05      	ldr	r3, [pc, #20]	; (801ef94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801ef7e:	6818      	ldr	r0, [r3, #0]
 801ef80:	6803      	ldr	r3, [r0, #0]
 801ef82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef84:	4798      	blx	r3
 801ef86:	e7c8      	b.n	801ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ef88:	2b00      	cmp	r3, #0
 801ef8a:	f43f ae82 	beq.w	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef8e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ef92:	e793      	b.n	801eebc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ef94:	20012da4 	.word	0x20012da4

0801ef98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ef98:	b538      	push	{r3, r4, r5, lr}
 801ef9a:	4c15      	ldr	r4, [pc, #84]	; (801eff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ef9c:	7823      	ldrb	r3, [r4, #0]
 801ef9e:	f3bf 8f5b 	dmb	ish
 801efa2:	07da      	lsls	r2, r3, #31
 801efa4:	4605      	mov	r5, r0
 801efa6:	d40b      	bmi.n	801efc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801efa8:	4620      	mov	r0, r4
 801efaa:	f00a ff8a 	bl	8029ec2 <__cxa_guard_acquire>
 801efae:	b138      	cbz	r0, 801efc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801efb0:	4620      	mov	r0, r4
 801efb2:	f00a ff92 	bl	8029eda <__cxa_guard_release>
 801efb6:	4a0f      	ldr	r2, [pc, #60]	; (801eff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801efb8:	490f      	ldr	r1, [pc, #60]	; (801eff8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801efba:	4810      	ldr	r0, [pc, #64]	; (801effc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801efbc:	f00a ff7a 	bl	8029eb4 <__aeabi_atexit>
 801efc0:	4c0f      	ldr	r4, [pc, #60]	; (801f000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801efc2:	7823      	ldrb	r3, [r4, #0]
 801efc4:	f3bf 8f5b 	dmb	ish
 801efc8:	07db      	lsls	r3, r3, #31
 801efca:	d40b      	bmi.n	801efe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801efcc:	4620      	mov	r0, r4
 801efce:	f00a ff78 	bl	8029ec2 <__cxa_guard_acquire>
 801efd2:	b138      	cbz	r0, 801efe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801efd4:	4620      	mov	r0, r4
 801efd6:	f00a ff80 	bl	8029eda <__cxa_guard_release>
 801efda:	4a06      	ldr	r2, [pc, #24]	; (801eff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801efdc:	4909      	ldr	r1, [pc, #36]	; (801f004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801efde:	480a      	ldr	r0, [pc, #40]	; (801f008 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801efe0:	f00a ff68 	bl	8029eb4 <__aeabi_atexit>
 801efe4:	4b05      	ldr	r3, [pc, #20]	; (801effc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801efe6:	612b      	str	r3, [r5, #16]
 801efe8:	4b07      	ldr	r3, [pc, #28]	; (801f008 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801efea:	616b      	str	r3, [r5, #20]
 801efec:	bd38      	pop	{r3, r4, r5, pc}
 801efee:	bf00      	nop
 801eff0:	20012e84 	.word	0x20012e84
 801eff4:	20000000 	.word	0x20000000
 801eff8:	0801bd9b 	.word	0x0801bd9b
 801effc:	200000d4 	.word	0x200000d4
 801f000:	20012e88 	.word	0x20012e88
 801f004:	0801bd99 	.word	0x0801bd99
 801f008:	200000d8 	.word	0x200000d8

0801f00c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f00c:	b538      	push	{r3, r4, r5, lr}
 801f00e:	4c15      	ldr	r4, [pc, #84]	; (801f064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f010:	7823      	ldrb	r3, [r4, #0]
 801f012:	f3bf 8f5b 	dmb	ish
 801f016:	07da      	lsls	r2, r3, #31
 801f018:	4605      	mov	r5, r0
 801f01a:	d40b      	bmi.n	801f034 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f01c:	4620      	mov	r0, r4
 801f01e:	f00a ff50 	bl	8029ec2 <__cxa_guard_acquire>
 801f022:	b138      	cbz	r0, 801f034 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f024:	4620      	mov	r0, r4
 801f026:	f00a ff58 	bl	8029eda <__cxa_guard_release>
 801f02a:	4a0f      	ldr	r2, [pc, #60]	; (801f068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f02c:	490f      	ldr	r1, [pc, #60]	; (801f06c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f02e:	4810      	ldr	r0, [pc, #64]	; (801f070 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f030:	f00a ff40 	bl	8029eb4 <__aeabi_atexit>
 801f034:	4c0f      	ldr	r4, [pc, #60]	; (801f074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f036:	7823      	ldrb	r3, [r4, #0]
 801f038:	f3bf 8f5b 	dmb	ish
 801f03c:	07db      	lsls	r3, r3, #31
 801f03e:	d40b      	bmi.n	801f058 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f040:	4620      	mov	r0, r4
 801f042:	f00a ff3e 	bl	8029ec2 <__cxa_guard_acquire>
 801f046:	b138      	cbz	r0, 801f058 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f048:	4620      	mov	r0, r4
 801f04a:	f00a ff46 	bl	8029eda <__cxa_guard_release>
 801f04e:	4a06      	ldr	r2, [pc, #24]	; (801f068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f050:	4909      	ldr	r1, [pc, #36]	; (801f078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f052:	480a      	ldr	r0, [pc, #40]	; (801f07c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f054:	f00a ff2e 	bl	8029eb4 <__aeabi_atexit>
 801f058:	4b05      	ldr	r3, [pc, #20]	; (801f070 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f05a:	60ab      	str	r3, [r5, #8]
 801f05c:	4b07      	ldr	r3, [pc, #28]	; (801f07c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f05e:	60eb      	str	r3, [r5, #12]
 801f060:	bd38      	pop	{r3, r4, r5, pc}
 801f062:	bf00      	nop
 801f064:	20012e5c 	.word	0x20012e5c
 801f068:	20000000 	.word	0x20000000
 801f06c:	0801bd9f 	.word	0x0801bd9f
 801f070:	200000ac 	.word	0x200000ac
 801f074:	20012e60 	.word	0x20012e60
 801f078:	0801bd9d 	.word	0x0801bd9d
 801f07c:	200000b0 	.word	0x200000b0

0801f080 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f080:	b510      	push	{r4, lr}
 801f082:	4604      	mov	r4, r0
 801f084:	f7ff ff88 	bl	801ef98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f088:	4620      	mov	r0, r4
 801f08a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f08e:	f7ff bfbd 	b.w	801f00c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f094:	b538      	push	{r3, r4, r5, lr}
 801f096:	4c15      	ldr	r4, [pc, #84]	; (801f0ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f098:	7823      	ldrb	r3, [r4, #0]
 801f09a:	f3bf 8f5b 	dmb	ish
 801f09e:	07da      	lsls	r2, r3, #31
 801f0a0:	4605      	mov	r5, r0
 801f0a2:	d40b      	bmi.n	801f0bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f0a4:	4620      	mov	r0, r4
 801f0a6:	f00a ff0c 	bl	8029ec2 <__cxa_guard_acquire>
 801f0aa:	b138      	cbz	r0, 801f0bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f0ac:	4620      	mov	r0, r4
 801f0ae:	f00a ff14 	bl	8029eda <__cxa_guard_release>
 801f0b2:	4a0f      	ldr	r2, [pc, #60]	; (801f0f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f0b4:	490f      	ldr	r1, [pc, #60]	; (801f0f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f0b6:	4810      	ldr	r0, [pc, #64]	; (801f0f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f0b8:	f00a fefc 	bl	8029eb4 <__aeabi_atexit>
 801f0bc:	4c0f      	ldr	r4, [pc, #60]	; (801f0fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f0be:	7823      	ldrb	r3, [r4, #0]
 801f0c0:	f3bf 8f5b 	dmb	ish
 801f0c4:	07db      	lsls	r3, r3, #31
 801f0c6:	d40b      	bmi.n	801f0e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f0c8:	4620      	mov	r0, r4
 801f0ca:	f00a fefa 	bl	8029ec2 <__cxa_guard_acquire>
 801f0ce:	b138      	cbz	r0, 801f0e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f0d0:	4620      	mov	r0, r4
 801f0d2:	f00a ff02 	bl	8029eda <__cxa_guard_release>
 801f0d6:	4a06      	ldr	r2, [pc, #24]	; (801f0f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f0d8:	4909      	ldr	r1, [pc, #36]	; (801f100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f0da:	480a      	ldr	r0, [pc, #40]	; (801f104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f0dc:	f00a feea 	bl	8029eb4 <__aeabi_atexit>
 801f0e0:	4b05      	ldr	r3, [pc, #20]	; (801f0f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f0e2:	622b      	str	r3, [r5, #32]
 801f0e4:	4b07      	ldr	r3, [pc, #28]	; (801f104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f0e6:	626b      	str	r3, [r5, #36]	; 0x24
 801f0e8:	bd38      	pop	{r3, r4, r5, pc}
 801f0ea:	bf00      	nop
 801f0ec:	20012e8c 	.word	0x20012e8c
 801f0f0:	20000000 	.word	0x20000000
 801f0f4:	0801bd93 	.word	0x0801bd93
 801f0f8:	200000dc 	.word	0x200000dc
 801f0fc:	20012e90 	.word	0x20012e90
 801f100:	0801bd91 	.word	0x0801bd91
 801f104:	200000e0 	.word	0x200000e0

0801f108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f108:	b538      	push	{r3, r4, r5, lr}
 801f10a:	4c15      	ldr	r4, [pc, #84]	; (801f160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f10c:	7823      	ldrb	r3, [r4, #0]
 801f10e:	f3bf 8f5b 	dmb	ish
 801f112:	07da      	lsls	r2, r3, #31
 801f114:	4605      	mov	r5, r0
 801f116:	d40b      	bmi.n	801f130 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f118:	4620      	mov	r0, r4
 801f11a:	f00a fed2 	bl	8029ec2 <__cxa_guard_acquire>
 801f11e:	b138      	cbz	r0, 801f130 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f120:	4620      	mov	r0, r4
 801f122:	f00a feda 	bl	8029eda <__cxa_guard_release>
 801f126:	4a0f      	ldr	r2, [pc, #60]	; (801f164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f128:	490f      	ldr	r1, [pc, #60]	; (801f168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f12a:	4810      	ldr	r0, [pc, #64]	; (801f16c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f12c:	f00a fec2 	bl	8029eb4 <__aeabi_atexit>
 801f130:	4c0f      	ldr	r4, [pc, #60]	; (801f170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f132:	7823      	ldrb	r3, [r4, #0]
 801f134:	f3bf 8f5b 	dmb	ish
 801f138:	07db      	lsls	r3, r3, #31
 801f13a:	d40b      	bmi.n	801f154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f13c:	4620      	mov	r0, r4
 801f13e:	f00a fec0 	bl	8029ec2 <__cxa_guard_acquire>
 801f142:	b138      	cbz	r0, 801f154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f144:	4620      	mov	r0, r4
 801f146:	f00a fec8 	bl	8029eda <__cxa_guard_release>
 801f14a:	4a06      	ldr	r2, [pc, #24]	; (801f164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f14c:	4909      	ldr	r1, [pc, #36]	; (801f174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f14e:	480a      	ldr	r0, [pc, #40]	; (801f178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f150:	f00a feb0 	bl	8029eb4 <__aeabi_atexit>
 801f154:	4b05      	ldr	r3, [pc, #20]	; (801f16c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f156:	61ab      	str	r3, [r5, #24]
 801f158:	4b07      	ldr	r3, [pc, #28]	; (801f178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f15a:	61eb      	str	r3, [r5, #28]
 801f15c:	bd38      	pop	{r3, r4, r5, pc}
 801f15e:	bf00      	nop
 801f160:	20012e64 	.word	0x20012e64
 801f164:	20000000 	.word	0x20000000
 801f168:	0801bd97 	.word	0x0801bd97
 801f16c:	200000b4 	.word	0x200000b4
 801f170:	20012e68 	.word	0x20012e68
 801f174:	0801bd95 	.word	0x0801bd95
 801f178:	200000b8 	.word	0x200000b8

0801f17c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f17c:	b510      	push	{r4, lr}
 801f17e:	4604      	mov	r4, r0
 801f180:	f7ff ff88 	bl	801f094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f184:	4620      	mov	r0, r4
 801f186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f18a:	f7ff bfbd 	b.w	801f108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f190 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f190:	b538      	push	{r3, r4, r5, lr}
 801f192:	4c15      	ldr	r4, [pc, #84]	; (801f1e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f194:	7823      	ldrb	r3, [r4, #0]
 801f196:	f3bf 8f5b 	dmb	ish
 801f19a:	07da      	lsls	r2, r3, #31
 801f19c:	4605      	mov	r5, r0
 801f19e:	d40b      	bmi.n	801f1b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f1a0:	4620      	mov	r0, r4
 801f1a2:	f00a fe8e 	bl	8029ec2 <__cxa_guard_acquire>
 801f1a6:	b138      	cbz	r0, 801f1b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f1a8:	4620      	mov	r0, r4
 801f1aa:	f00a fe96 	bl	8029eda <__cxa_guard_release>
 801f1ae:	4a0f      	ldr	r2, [pc, #60]	; (801f1ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f1b0:	490f      	ldr	r1, [pc, #60]	; (801f1f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f1b2:	4810      	ldr	r0, [pc, #64]	; (801f1f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f1b4:	f00a fe7e 	bl	8029eb4 <__aeabi_atexit>
 801f1b8:	4c0f      	ldr	r4, [pc, #60]	; (801f1f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f1ba:	7823      	ldrb	r3, [r4, #0]
 801f1bc:	f3bf 8f5b 	dmb	ish
 801f1c0:	07db      	lsls	r3, r3, #31
 801f1c2:	d40b      	bmi.n	801f1dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f1c4:	4620      	mov	r0, r4
 801f1c6:	f00a fe7c 	bl	8029ec2 <__cxa_guard_acquire>
 801f1ca:	b138      	cbz	r0, 801f1dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f1cc:	4620      	mov	r0, r4
 801f1ce:	f00a fe84 	bl	8029eda <__cxa_guard_release>
 801f1d2:	4a06      	ldr	r2, [pc, #24]	; (801f1ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f1d4:	4909      	ldr	r1, [pc, #36]	; (801f1fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f1d6:	480a      	ldr	r0, [pc, #40]	; (801f200 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f1d8:	f00a fe6c 	bl	8029eb4 <__aeabi_atexit>
 801f1dc:	4b05      	ldr	r3, [pc, #20]	; (801f1f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f1de:	632b      	str	r3, [r5, #48]	; 0x30
 801f1e0:	4b07      	ldr	r3, [pc, #28]	; (801f200 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f1e2:	636b      	str	r3, [r5, #52]	; 0x34
 801f1e4:	bd38      	pop	{r3, r4, r5, pc}
 801f1e6:	bf00      	nop
 801f1e8:	20012e9c 	.word	0x20012e9c
 801f1ec:	20000000 	.word	0x20000000
 801f1f0:	0801bd8b 	.word	0x0801bd8b
 801f1f4:	200000ec 	.word	0x200000ec
 801f1f8:	20012ea0 	.word	0x20012ea0
 801f1fc:	0801bd89 	.word	0x0801bd89
 801f200:	200000f0 	.word	0x200000f0

0801f204 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f204:	b538      	push	{r3, r4, r5, lr}
 801f206:	4c15      	ldr	r4, [pc, #84]	; (801f25c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f208:	7823      	ldrb	r3, [r4, #0]
 801f20a:	f3bf 8f5b 	dmb	ish
 801f20e:	07da      	lsls	r2, r3, #31
 801f210:	4605      	mov	r5, r0
 801f212:	d40b      	bmi.n	801f22c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f214:	4620      	mov	r0, r4
 801f216:	f00a fe54 	bl	8029ec2 <__cxa_guard_acquire>
 801f21a:	b138      	cbz	r0, 801f22c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f21c:	4620      	mov	r0, r4
 801f21e:	f00a fe5c 	bl	8029eda <__cxa_guard_release>
 801f222:	4a0f      	ldr	r2, [pc, #60]	; (801f260 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f224:	490f      	ldr	r1, [pc, #60]	; (801f264 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f226:	4810      	ldr	r0, [pc, #64]	; (801f268 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f228:	f00a fe44 	bl	8029eb4 <__aeabi_atexit>
 801f22c:	4c0f      	ldr	r4, [pc, #60]	; (801f26c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f22e:	7823      	ldrb	r3, [r4, #0]
 801f230:	f3bf 8f5b 	dmb	ish
 801f234:	07db      	lsls	r3, r3, #31
 801f236:	d40b      	bmi.n	801f250 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f238:	4620      	mov	r0, r4
 801f23a:	f00a fe42 	bl	8029ec2 <__cxa_guard_acquire>
 801f23e:	b138      	cbz	r0, 801f250 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f240:	4620      	mov	r0, r4
 801f242:	f00a fe4a 	bl	8029eda <__cxa_guard_release>
 801f246:	4a06      	ldr	r2, [pc, #24]	; (801f260 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f248:	4909      	ldr	r1, [pc, #36]	; (801f270 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f24a:	480a      	ldr	r0, [pc, #40]	; (801f274 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f24c:	f00a fe32 	bl	8029eb4 <__aeabi_atexit>
 801f250:	4b05      	ldr	r3, [pc, #20]	; (801f268 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f252:	62ab      	str	r3, [r5, #40]	; 0x28
 801f254:	4b07      	ldr	r3, [pc, #28]	; (801f274 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f256:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f258:	bd38      	pop	{r3, r4, r5, pc}
 801f25a:	bf00      	nop
 801f25c:	20012e6c 	.word	0x20012e6c
 801f260:	20000000 	.word	0x20000000
 801f264:	0801bd8f 	.word	0x0801bd8f
 801f268:	200000bc 	.word	0x200000bc
 801f26c:	20012e70 	.word	0x20012e70
 801f270:	0801bd8d 	.word	0x0801bd8d
 801f274:	200000c0 	.word	0x200000c0

0801f278 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f278:	b510      	push	{r4, lr}
 801f27a:	4604      	mov	r4, r0
 801f27c:	f7ff ff88 	bl	801f190 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f280:	4620      	mov	r0, r4
 801f282:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f286:	f7ff bfbd 	b.w	801f204 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f28c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f28c:	b538      	push	{r3, r4, r5, lr}
 801f28e:	4c15      	ldr	r4, [pc, #84]	; (801f2e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f290:	7823      	ldrb	r3, [r4, #0]
 801f292:	f3bf 8f5b 	dmb	ish
 801f296:	07da      	lsls	r2, r3, #31
 801f298:	4605      	mov	r5, r0
 801f29a:	d40b      	bmi.n	801f2b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f29c:	4620      	mov	r0, r4
 801f29e:	f00a fe10 	bl	8029ec2 <__cxa_guard_acquire>
 801f2a2:	b138      	cbz	r0, 801f2b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f2a4:	4620      	mov	r0, r4
 801f2a6:	f00a fe18 	bl	8029eda <__cxa_guard_release>
 801f2aa:	4a0f      	ldr	r2, [pc, #60]	; (801f2e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f2ac:	490f      	ldr	r1, [pc, #60]	; (801f2ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f2ae:	4810      	ldr	r0, [pc, #64]	; (801f2f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f2b0:	f00a fe00 	bl	8029eb4 <__aeabi_atexit>
 801f2b4:	4c0f      	ldr	r4, [pc, #60]	; (801f2f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f2b6:	7823      	ldrb	r3, [r4, #0]
 801f2b8:	f3bf 8f5b 	dmb	ish
 801f2bc:	07db      	lsls	r3, r3, #31
 801f2be:	d40b      	bmi.n	801f2d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f2c0:	4620      	mov	r0, r4
 801f2c2:	f00a fdfe 	bl	8029ec2 <__cxa_guard_acquire>
 801f2c6:	b138      	cbz	r0, 801f2d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f2c8:	4620      	mov	r0, r4
 801f2ca:	f00a fe06 	bl	8029eda <__cxa_guard_release>
 801f2ce:	4a06      	ldr	r2, [pc, #24]	; (801f2e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f2d0:	4909      	ldr	r1, [pc, #36]	; (801f2f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f2d2:	480a      	ldr	r0, [pc, #40]	; (801f2fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f2d4:	f00a fdee 	bl	8029eb4 <__aeabi_atexit>
 801f2d8:	4b05      	ldr	r3, [pc, #20]	; (801f2f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f2da:	652b      	str	r3, [r5, #80]	; 0x50
 801f2dc:	4b07      	ldr	r3, [pc, #28]	; (801f2fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f2de:	656b      	str	r3, [r5, #84]	; 0x54
 801f2e0:	bd38      	pop	{r3, r4, r5, pc}
 801f2e2:	bf00      	nop
 801f2e4:	20012ea4 	.word	0x20012ea4
 801f2e8:	20000000 	.word	0x20000000
 801f2ec:	0801bd7b 	.word	0x0801bd7b
 801f2f0:	200000f4 	.word	0x200000f4
 801f2f4:	20012ea8 	.word	0x20012ea8
 801f2f8:	0801bd79 	.word	0x0801bd79
 801f2fc:	200000f8 	.word	0x200000f8

0801f300 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f300:	b538      	push	{r3, r4, r5, lr}
 801f302:	4c15      	ldr	r4, [pc, #84]	; (801f358 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f304:	7823      	ldrb	r3, [r4, #0]
 801f306:	f3bf 8f5b 	dmb	ish
 801f30a:	07da      	lsls	r2, r3, #31
 801f30c:	4605      	mov	r5, r0
 801f30e:	d40b      	bmi.n	801f328 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f310:	4620      	mov	r0, r4
 801f312:	f00a fdd6 	bl	8029ec2 <__cxa_guard_acquire>
 801f316:	b138      	cbz	r0, 801f328 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f318:	4620      	mov	r0, r4
 801f31a:	f00a fdde 	bl	8029eda <__cxa_guard_release>
 801f31e:	4a0f      	ldr	r2, [pc, #60]	; (801f35c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f320:	490f      	ldr	r1, [pc, #60]	; (801f360 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f322:	4810      	ldr	r0, [pc, #64]	; (801f364 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f324:	f00a fdc6 	bl	8029eb4 <__aeabi_atexit>
 801f328:	4c0f      	ldr	r4, [pc, #60]	; (801f368 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f32a:	7823      	ldrb	r3, [r4, #0]
 801f32c:	f3bf 8f5b 	dmb	ish
 801f330:	07db      	lsls	r3, r3, #31
 801f332:	d40b      	bmi.n	801f34c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f334:	4620      	mov	r0, r4
 801f336:	f00a fdc4 	bl	8029ec2 <__cxa_guard_acquire>
 801f33a:	b138      	cbz	r0, 801f34c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f33c:	4620      	mov	r0, r4
 801f33e:	f00a fdcc 	bl	8029eda <__cxa_guard_release>
 801f342:	4a06      	ldr	r2, [pc, #24]	; (801f35c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f344:	4909      	ldr	r1, [pc, #36]	; (801f36c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f346:	480a      	ldr	r0, [pc, #40]	; (801f370 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f348:	f00a fdb4 	bl	8029eb4 <__aeabi_atexit>
 801f34c:	4b05      	ldr	r3, [pc, #20]	; (801f364 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f34e:	64ab      	str	r3, [r5, #72]	; 0x48
 801f350:	4b07      	ldr	r3, [pc, #28]	; (801f370 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f352:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f354:	bd38      	pop	{r3, r4, r5, pc}
 801f356:	bf00      	nop
 801f358:	20012eac 	.word	0x20012eac
 801f35c:	20000000 	.word	0x20000000
 801f360:	0801bd7f 	.word	0x0801bd7f
 801f364:	200000fc 	.word	0x200000fc
 801f368:	20012eb0 	.word	0x20012eb0
 801f36c:	0801bd7d 	.word	0x0801bd7d
 801f370:	20000100 	.word	0x20000100

0801f374 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f374:	b538      	push	{r3, r4, r5, lr}
 801f376:	4c15      	ldr	r4, [pc, #84]	; (801f3cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f378:	7823      	ldrb	r3, [r4, #0]
 801f37a:	f3bf 8f5b 	dmb	ish
 801f37e:	07da      	lsls	r2, r3, #31
 801f380:	4605      	mov	r5, r0
 801f382:	d40b      	bmi.n	801f39c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f384:	4620      	mov	r0, r4
 801f386:	f00a fd9c 	bl	8029ec2 <__cxa_guard_acquire>
 801f38a:	b138      	cbz	r0, 801f39c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f38c:	4620      	mov	r0, r4
 801f38e:	f00a fda4 	bl	8029eda <__cxa_guard_release>
 801f392:	4a0f      	ldr	r2, [pc, #60]	; (801f3d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f394:	490f      	ldr	r1, [pc, #60]	; (801f3d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f396:	4810      	ldr	r0, [pc, #64]	; (801f3d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f398:	f00a fd8c 	bl	8029eb4 <__aeabi_atexit>
 801f39c:	4c0f      	ldr	r4, [pc, #60]	; (801f3dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f39e:	7823      	ldrb	r3, [r4, #0]
 801f3a0:	f3bf 8f5b 	dmb	ish
 801f3a4:	07db      	lsls	r3, r3, #31
 801f3a6:	d40b      	bmi.n	801f3c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f3a8:	4620      	mov	r0, r4
 801f3aa:	f00a fd8a 	bl	8029ec2 <__cxa_guard_acquire>
 801f3ae:	b138      	cbz	r0, 801f3c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f3b0:	4620      	mov	r0, r4
 801f3b2:	f00a fd92 	bl	8029eda <__cxa_guard_release>
 801f3b6:	4a06      	ldr	r2, [pc, #24]	; (801f3d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f3b8:	4909      	ldr	r1, [pc, #36]	; (801f3e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f3ba:	480a      	ldr	r0, [pc, #40]	; (801f3e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f3bc:	f00a fd7a 	bl	8029eb4 <__aeabi_atexit>
 801f3c0:	4b05      	ldr	r3, [pc, #20]	; (801f3d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f3c2:	642b      	str	r3, [r5, #64]	; 0x40
 801f3c4:	4b07      	ldr	r3, [pc, #28]	; (801f3e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f3c6:	646b      	str	r3, [r5, #68]	; 0x44
 801f3c8:	bd38      	pop	{r3, r4, r5, pc}
 801f3ca:	bf00      	nop
 801f3cc:	20012e74 	.word	0x20012e74
 801f3d0:	20000000 	.word	0x20000000
 801f3d4:	0801bd83 	.word	0x0801bd83
 801f3d8:	200000c4 	.word	0x200000c4
 801f3dc:	20012e78 	.word	0x20012e78
 801f3e0:	0801bd81 	.word	0x0801bd81
 801f3e4:	200000c8 	.word	0x200000c8

0801f3e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f3e8:	b538      	push	{r3, r4, r5, lr}
 801f3ea:	4c15      	ldr	r4, [pc, #84]	; (801f440 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f3ec:	7823      	ldrb	r3, [r4, #0]
 801f3ee:	f3bf 8f5b 	dmb	ish
 801f3f2:	07da      	lsls	r2, r3, #31
 801f3f4:	4605      	mov	r5, r0
 801f3f6:	d40b      	bmi.n	801f410 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f3f8:	4620      	mov	r0, r4
 801f3fa:	f00a fd62 	bl	8029ec2 <__cxa_guard_acquire>
 801f3fe:	b138      	cbz	r0, 801f410 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f400:	4620      	mov	r0, r4
 801f402:	f00a fd6a 	bl	8029eda <__cxa_guard_release>
 801f406:	4a0f      	ldr	r2, [pc, #60]	; (801f444 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f408:	490f      	ldr	r1, [pc, #60]	; (801f448 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f40a:	4810      	ldr	r0, [pc, #64]	; (801f44c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f40c:	f00a fd52 	bl	8029eb4 <__aeabi_atexit>
 801f410:	4c0f      	ldr	r4, [pc, #60]	; (801f450 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f412:	7823      	ldrb	r3, [r4, #0]
 801f414:	f3bf 8f5b 	dmb	ish
 801f418:	07db      	lsls	r3, r3, #31
 801f41a:	d40b      	bmi.n	801f434 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f41c:	4620      	mov	r0, r4
 801f41e:	f00a fd50 	bl	8029ec2 <__cxa_guard_acquire>
 801f422:	b138      	cbz	r0, 801f434 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f424:	4620      	mov	r0, r4
 801f426:	f00a fd58 	bl	8029eda <__cxa_guard_release>
 801f42a:	4a06      	ldr	r2, [pc, #24]	; (801f444 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f42c:	4909      	ldr	r1, [pc, #36]	; (801f454 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f42e:	480a      	ldr	r0, [pc, #40]	; (801f458 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f430:	f00a fd40 	bl	8029eb4 <__aeabi_atexit>
 801f434:	4b05      	ldr	r3, [pc, #20]	; (801f44c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f436:	63ab      	str	r3, [r5, #56]	; 0x38
 801f438:	4b07      	ldr	r3, [pc, #28]	; (801f458 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f43a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f43c:	bd38      	pop	{r3, r4, r5, pc}
 801f43e:	bf00      	nop
 801f440:	20012e94 	.word	0x20012e94
 801f444:	20000000 	.word	0x20000000
 801f448:	0801bd87 	.word	0x0801bd87
 801f44c:	200000e4 	.word	0x200000e4
 801f450:	20012e98 	.word	0x20012e98
 801f454:	0801bd85 	.word	0x0801bd85
 801f458:	200000e8 	.word	0x200000e8

0801f45c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f45c:	b510      	push	{r4, lr}
 801f45e:	4604      	mov	r4, r0
 801f460:	f7ff ff14 	bl	801f28c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f464:	4620      	mov	r0, r4
 801f466:	f7ff ff85 	bl	801f374 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f46a:	4620      	mov	r0, r4
 801f46c:	f7ff ff48 	bl	801f300 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f470:	4620      	mov	r0, r4
 801f472:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f476:	f7ff bfb7 	b.w	801f3e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f47c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f47c:	b538      	push	{r3, r4, r5, lr}
 801f47e:	4c15      	ldr	r4, [pc, #84]	; (801f4d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f480:	7823      	ldrb	r3, [r4, #0]
 801f482:	f3bf 8f5b 	dmb	ish
 801f486:	07da      	lsls	r2, r3, #31
 801f488:	4605      	mov	r5, r0
 801f48a:	d40b      	bmi.n	801f4a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f48c:	4620      	mov	r0, r4
 801f48e:	f00a fd18 	bl	8029ec2 <__cxa_guard_acquire>
 801f492:	b138      	cbz	r0, 801f4a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f494:	4620      	mov	r0, r4
 801f496:	f00a fd20 	bl	8029eda <__cxa_guard_release>
 801f49a:	4a0f      	ldr	r2, [pc, #60]	; (801f4d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f49c:	490f      	ldr	r1, [pc, #60]	; (801f4dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f49e:	4810      	ldr	r0, [pc, #64]	; (801f4e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f4a0:	f00a fd08 	bl	8029eb4 <__aeabi_atexit>
 801f4a4:	4c0f      	ldr	r4, [pc, #60]	; (801f4e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f4a6:	7823      	ldrb	r3, [r4, #0]
 801f4a8:	f3bf 8f5b 	dmb	ish
 801f4ac:	07db      	lsls	r3, r3, #31
 801f4ae:	d40b      	bmi.n	801f4c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f4b0:	4620      	mov	r0, r4
 801f4b2:	f00a fd06 	bl	8029ec2 <__cxa_guard_acquire>
 801f4b6:	b138      	cbz	r0, 801f4c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f4b8:	4620      	mov	r0, r4
 801f4ba:	f00a fd0e 	bl	8029eda <__cxa_guard_release>
 801f4be:	4a06      	ldr	r2, [pc, #24]	; (801f4d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f4c0:	4909      	ldr	r1, [pc, #36]	; (801f4e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f4c2:	480a      	ldr	r0, [pc, #40]	; (801f4ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f4c4:	f00a fcf6 	bl	8029eb4 <__aeabi_atexit>
 801f4c8:	4b05      	ldr	r3, [pc, #20]	; (801f4e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f4ca:	662b      	str	r3, [r5, #96]	; 0x60
 801f4cc:	4b07      	ldr	r3, [pc, #28]	; (801f4ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f4ce:	666b      	str	r3, [r5, #100]	; 0x64
 801f4d0:	bd38      	pop	{r3, r4, r5, pc}
 801f4d2:	bf00      	nop
 801f4d4:	20012e7c 	.word	0x20012e7c
 801f4d8:	20000000 	.word	0x20000000
 801f4dc:	0801bd73 	.word	0x0801bd73
 801f4e0:	200000cc 	.word	0x200000cc
 801f4e4:	20012e80 	.word	0x20012e80
 801f4e8:	0801bd71 	.word	0x0801bd71
 801f4ec:	200000d0 	.word	0x200000d0

0801f4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f4f0:	b538      	push	{r3, r4, r5, lr}
 801f4f2:	4c15      	ldr	r4, [pc, #84]	; (801f548 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f4f4:	7823      	ldrb	r3, [r4, #0]
 801f4f6:	f3bf 8f5b 	dmb	ish
 801f4fa:	07da      	lsls	r2, r3, #31
 801f4fc:	4605      	mov	r5, r0
 801f4fe:	d40b      	bmi.n	801f518 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f500:	4620      	mov	r0, r4
 801f502:	f00a fcde 	bl	8029ec2 <__cxa_guard_acquire>
 801f506:	b138      	cbz	r0, 801f518 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f508:	4620      	mov	r0, r4
 801f50a:	f00a fce6 	bl	8029eda <__cxa_guard_release>
 801f50e:	4a0f      	ldr	r2, [pc, #60]	; (801f54c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f510:	490f      	ldr	r1, [pc, #60]	; (801f550 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f512:	4810      	ldr	r0, [pc, #64]	; (801f554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f514:	f00a fcce 	bl	8029eb4 <__aeabi_atexit>
 801f518:	4c0f      	ldr	r4, [pc, #60]	; (801f558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f51a:	7823      	ldrb	r3, [r4, #0]
 801f51c:	f3bf 8f5b 	dmb	ish
 801f520:	07db      	lsls	r3, r3, #31
 801f522:	d40b      	bmi.n	801f53c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f524:	4620      	mov	r0, r4
 801f526:	f00a fccc 	bl	8029ec2 <__cxa_guard_acquire>
 801f52a:	b138      	cbz	r0, 801f53c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f52c:	4620      	mov	r0, r4
 801f52e:	f00a fcd4 	bl	8029eda <__cxa_guard_release>
 801f532:	4a06      	ldr	r2, [pc, #24]	; (801f54c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f534:	4909      	ldr	r1, [pc, #36]	; (801f55c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f536:	480a      	ldr	r0, [pc, #40]	; (801f560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f538:	f00a fcbc 	bl	8029eb4 <__aeabi_atexit>
 801f53c:	4b05      	ldr	r3, [pc, #20]	; (801f554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f53e:	65ab      	str	r3, [r5, #88]	; 0x58
 801f540:	4b07      	ldr	r3, [pc, #28]	; (801f560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f542:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f544:	bd38      	pop	{r3, r4, r5, pc}
 801f546:	bf00      	nop
 801f548:	20012e54 	.word	0x20012e54
 801f54c:	20000000 	.word	0x20000000
 801f550:	0801bd77 	.word	0x0801bd77
 801f554:	200000a4 	.word	0x200000a4
 801f558:	20012e58 	.word	0x20012e58
 801f55c:	0801bd75 	.word	0x0801bd75
 801f560:	200000a8 	.word	0x200000a8

0801f564 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f564:	b510      	push	{r4, lr}
 801f566:	4604      	mov	r4, r0
 801f568:	f7ff ff88 	bl	801f47c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f56c:	4620      	mov	r0, r4
 801f56e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f572:	f7ff bfbd 	b.w	801f4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f578 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f578:	b538      	push	{r3, r4, r5, lr}
 801f57a:	4c15      	ldr	r4, [pc, #84]	; (801f5d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f57c:	7823      	ldrb	r3, [r4, #0]
 801f57e:	f3bf 8f5b 	dmb	ish
 801f582:	07da      	lsls	r2, r3, #31
 801f584:	4605      	mov	r5, r0
 801f586:	d40b      	bmi.n	801f5a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f588:	4620      	mov	r0, r4
 801f58a:	f00a fc9a 	bl	8029ec2 <__cxa_guard_acquire>
 801f58e:	b138      	cbz	r0, 801f5a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f590:	4620      	mov	r0, r4
 801f592:	f00a fca2 	bl	8029eda <__cxa_guard_release>
 801f596:	4a0f      	ldr	r2, [pc, #60]	; (801f5d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f598:	490f      	ldr	r1, [pc, #60]	; (801f5d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f59a:	4810      	ldr	r0, [pc, #64]	; (801f5dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f59c:	f00a fc8a 	bl	8029eb4 <__aeabi_atexit>
 801f5a0:	4c0f      	ldr	r4, [pc, #60]	; (801f5e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f5a2:	7823      	ldrb	r3, [r4, #0]
 801f5a4:	f3bf 8f5b 	dmb	ish
 801f5a8:	07db      	lsls	r3, r3, #31
 801f5aa:	d40b      	bmi.n	801f5c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f5ac:	4620      	mov	r0, r4
 801f5ae:	f00a fc88 	bl	8029ec2 <__cxa_guard_acquire>
 801f5b2:	b138      	cbz	r0, 801f5c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f5b4:	4620      	mov	r0, r4
 801f5b6:	f00a fc90 	bl	8029eda <__cxa_guard_release>
 801f5ba:	4a06      	ldr	r2, [pc, #24]	; (801f5d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f5bc:	4909      	ldr	r1, [pc, #36]	; (801f5e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f5be:	480a      	ldr	r0, [pc, #40]	; (801f5e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f5c0:	f00a fc78 	bl	8029eb4 <__aeabi_atexit>
 801f5c4:	4b05      	ldr	r3, [pc, #20]	; (801f5dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f5c6:	672b      	str	r3, [r5, #112]	; 0x70
 801f5c8:	4b07      	ldr	r3, [pc, #28]	; (801f5e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f5ca:	676b      	str	r3, [r5, #116]	; 0x74
 801f5cc:	bd38      	pop	{r3, r4, r5, pc}
 801f5ce:	bf00      	nop
 801f5d0:	20012e4c 	.word	0x20012e4c
 801f5d4:	20000000 	.word	0x20000000
 801f5d8:	0801bd6b 	.word	0x0801bd6b
 801f5dc:	2000009c 	.word	0x2000009c
 801f5e0:	20012e50 	.word	0x20012e50
 801f5e4:	0801bd69 	.word	0x0801bd69
 801f5e8:	200000a0 	.word	0x200000a0

0801f5ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f5ec:	b538      	push	{r3, r4, r5, lr}
 801f5ee:	4c15      	ldr	r4, [pc, #84]	; (801f644 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f5f0:	7823      	ldrb	r3, [r4, #0]
 801f5f2:	f3bf 8f5b 	dmb	ish
 801f5f6:	07da      	lsls	r2, r3, #31
 801f5f8:	4605      	mov	r5, r0
 801f5fa:	d40b      	bmi.n	801f614 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f5fc:	4620      	mov	r0, r4
 801f5fe:	f00a fc60 	bl	8029ec2 <__cxa_guard_acquire>
 801f602:	b138      	cbz	r0, 801f614 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f604:	4620      	mov	r0, r4
 801f606:	f00a fc68 	bl	8029eda <__cxa_guard_release>
 801f60a:	4a0f      	ldr	r2, [pc, #60]	; (801f648 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f60c:	490f      	ldr	r1, [pc, #60]	; (801f64c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f60e:	4810      	ldr	r0, [pc, #64]	; (801f650 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f610:	f00a fc50 	bl	8029eb4 <__aeabi_atexit>
 801f614:	4c0f      	ldr	r4, [pc, #60]	; (801f654 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f616:	7823      	ldrb	r3, [r4, #0]
 801f618:	f3bf 8f5b 	dmb	ish
 801f61c:	07db      	lsls	r3, r3, #31
 801f61e:	d40b      	bmi.n	801f638 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f620:	4620      	mov	r0, r4
 801f622:	f00a fc4e 	bl	8029ec2 <__cxa_guard_acquire>
 801f626:	b138      	cbz	r0, 801f638 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f628:	4620      	mov	r0, r4
 801f62a:	f00a fc56 	bl	8029eda <__cxa_guard_release>
 801f62e:	4a06      	ldr	r2, [pc, #24]	; (801f648 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f630:	4909      	ldr	r1, [pc, #36]	; (801f658 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f632:	480a      	ldr	r0, [pc, #40]	; (801f65c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f634:	f00a fc3e 	bl	8029eb4 <__aeabi_atexit>
 801f638:	4b05      	ldr	r3, [pc, #20]	; (801f650 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f63a:	66ab      	str	r3, [r5, #104]	; 0x68
 801f63c:	4b07      	ldr	r3, [pc, #28]	; (801f65c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f63e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f640:	bd38      	pop	{r3, r4, r5, pc}
 801f642:	bf00      	nop
 801f644:	20012e44 	.word	0x20012e44
 801f648:	20000000 	.word	0x20000000
 801f64c:	0801bd6f 	.word	0x0801bd6f
 801f650:	20000094 	.word	0x20000094
 801f654:	20012e48 	.word	0x20012e48
 801f658:	0801bd6d 	.word	0x0801bd6d
 801f65c:	20000098 	.word	0x20000098

0801f660 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f660:	b510      	push	{r4, lr}
 801f662:	4604      	mov	r4, r0
 801f664:	f7ff ff88 	bl	801f578 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f668:	4620      	mov	r0, r4
 801f66a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f66e:	f7ff bfbd 	b.w	801f5ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f672 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f672:	b510      	push	{r4, lr}
 801f674:	4604      	mov	r4, r0
 801f676:	f7ff fff3 	bl	801f660 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f67a:	4620      	mov	r0, r4
 801f67c:	f7ff ff72 	bl	801f564 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f680:	4620      	mov	r0, r4
 801f682:	f7ff fdf9 	bl	801f278 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f686:	4620      	mov	r0, r4
 801f688:	f7ff fcfa 	bl	801f080 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f68c:	4620      	mov	r0, r4
 801f68e:	f7ff fd75 	bl	801f17c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f692:	4620      	mov	r0, r4
 801f694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f698:	f7ff bee0 	b.w	801f45c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f69c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f69c:	b538      	push	{r3, r4, r5, lr}
 801f69e:	4c0b      	ldr	r4, [pc, #44]	; (801f6cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f6a0:	7823      	ldrb	r3, [r4, #0]
 801f6a2:	f3bf 8f5b 	dmb	ish
 801f6a6:	07db      	lsls	r3, r3, #31
 801f6a8:	4605      	mov	r5, r0
 801f6aa:	d40b      	bmi.n	801f6c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f6ac:	4620      	mov	r0, r4
 801f6ae:	f00a fc08 	bl	8029ec2 <__cxa_guard_acquire>
 801f6b2:	b138      	cbz	r0, 801f6c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f6b4:	4620      	mov	r0, r4
 801f6b6:	f00a fc10 	bl	8029eda <__cxa_guard_release>
 801f6ba:	4a05      	ldr	r2, [pc, #20]	; (801f6d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f6bc:	4905      	ldr	r1, [pc, #20]	; (801f6d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f6be:	4806      	ldr	r0, [pc, #24]	; (801f6d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f6c0:	f00a fbf8 	bl	8029eb4 <__aeabi_atexit>
 801f6c4:	4b04      	ldr	r3, [pc, #16]	; (801f6d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f6c6:	67ab      	str	r3, [r5, #120]	; 0x78
 801f6c8:	bd38      	pop	{r3, r4, r5, pc}
 801f6ca:	bf00      	nop
 801f6cc:	20012e38 	.word	0x20012e38
 801f6d0:	20000000 	.word	0x20000000
 801f6d4:	0801bd67 	.word	0x0801bd67
 801f6d8:	2000008c 	.word	0x2000008c

0801f6dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f6dc:	b538      	push	{r3, r4, r5, lr}
 801f6de:	4c0b      	ldr	r4, [pc, #44]	; (801f70c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f6e0:	7823      	ldrb	r3, [r4, #0]
 801f6e2:	f3bf 8f5b 	dmb	ish
 801f6e6:	07db      	lsls	r3, r3, #31
 801f6e8:	4605      	mov	r5, r0
 801f6ea:	d40b      	bmi.n	801f704 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f6ec:	4620      	mov	r0, r4
 801f6ee:	f00a fbe8 	bl	8029ec2 <__cxa_guard_acquire>
 801f6f2:	b138      	cbz	r0, 801f704 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f6f4:	4620      	mov	r0, r4
 801f6f6:	f00a fbf0 	bl	8029eda <__cxa_guard_release>
 801f6fa:	4a05      	ldr	r2, [pc, #20]	; (801f710 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f6fc:	4905      	ldr	r1, [pc, #20]	; (801f714 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f6fe:	4806      	ldr	r0, [pc, #24]	; (801f718 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f700:	f00a fbd8 	bl	8029eb4 <__aeabi_atexit>
 801f704:	4b04      	ldr	r3, [pc, #16]	; (801f718 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f706:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f708:	bd38      	pop	{r3, r4, r5, pc}
 801f70a:	bf00      	nop
 801f70c:	20012e3c 	.word	0x20012e3c
 801f710:	20000000 	.word	0x20000000
 801f714:	0801bd65 	.word	0x0801bd65
 801f718:	20000090 	.word	0x20000090

0801f71c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f71c:	b570      	push	{r4, r5, r6, lr}
 801f71e:	4d0d      	ldr	r5, [pc, #52]	; (801f754 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f720:	4c0d      	ldr	r4, [pc, #52]	; (801f758 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f722:	782b      	ldrb	r3, [r5, #0]
 801f724:	f3bf 8f5b 	dmb	ish
 801f728:	f013 0f01 	tst.w	r3, #1
 801f72c:	4606      	mov	r6, r0
 801f72e:	d10d      	bne.n	801f74c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f730:	4628      	mov	r0, r5
 801f732:	f00a fbc6 	bl	8029ec2 <__cxa_guard_acquire>
 801f736:	b148      	cbz	r0, 801f74c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f738:	4b08      	ldr	r3, [pc, #32]	; (801f75c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f73a:	6023      	str	r3, [r4, #0]
 801f73c:	4628      	mov	r0, r5
 801f73e:	f00a fbcc 	bl	8029eda <__cxa_guard_release>
 801f742:	4a07      	ldr	r2, [pc, #28]	; (801f760 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f744:	4907      	ldr	r1, [pc, #28]	; (801f764 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f746:	4620      	mov	r0, r4
 801f748:	f00a fbb4 	bl	8029eb4 <__aeabi_atexit>
 801f74c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f750:	bd70      	pop	{r4, r5, r6, pc}
 801f752:	bf00      	nop
 801f754:	20012e40 	.word	0x20012e40
 801f758:	20012eb4 	.word	0x20012eb4
 801f75c:	0802f65c 	.word	0x0802f65c
 801f760:	20000000 	.word	0x20000000
 801f764:	0801bd63 	.word	0x0801bd63

0801f768 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f768:	b510      	push	{r4, lr}
 801f76a:	4604      	mov	r4, r0
 801f76c:	f7ff ff96 	bl	801f69c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f770:	4620      	mov	r0, r4
 801f772:	f7ff ffb3 	bl	801f6dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f776:	4620      	mov	r0, r4
 801f778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f77c:	f7ff bfce 	b.w	801f71c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f780 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f784:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f788:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f78c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f790:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f794:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f798:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f79c:	8808      	ldrh	r0, [r1, #0]
 801f79e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f7a2:	2d00      	cmp	r5, #0
 801f7a4:	eb02 0a0c 	add.w	sl, r2, ip
 801f7a8:	f2c0 80b0 	blt.w	801f90c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f7ac:	45ab      	cmp	fp, r5
 801f7ae:	f340 80ad 	ble.w	801f90c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f7b2:	2c00      	cmp	r4, #0
 801f7b4:	f2c0 80a8 	blt.w	801f908 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f7b8:	45a6      	cmp	lr, r4
 801f7ba:	f340 80a5 	ble.w	801f908 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f7be:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f7c2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f7c6:	1c62      	adds	r2, r4, #1
 801f7c8:	f100 80a3 	bmi.w	801f912 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f7cc:	4596      	cmp	lr, r2
 801f7ce:	f340 80a0 	ble.w	801f912 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f7d2:	f1b9 0f00 	cmp.w	r9, #0
 801f7d6:	f000 809c 	beq.w	801f912 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f7da:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f7de:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f7e2:	3501      	adds	r5, #1
 801f7e4:	f100 8099 	bmi.w	801f91a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f7e8:	45ab      	cmp	fp, r5
 801f7ea:	f340 8096 	ble.w	801f91a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f7ee:	2f00      	cmp	r7, #0
 801f7f0:	f000 8093 	beq.w	801f91a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f7f4:	2c00      	cmp	r4, #0
 801f7f6:	f2c0 808e 	blt.w	801f916 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f7fa:	45a6      	cmp	lr, r4
 801f7fc:	f340 808b 	ble.w	801f916 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f800:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f804:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f808:	3401      	adds	r4, #1
 801f80a:	f100 8089 	bmi.w	801f920 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f80e:	45a6      	cmp	lr, r4
 801f810:	f340 8086 	ble.w	801f920 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f814:	f1b9 0f00 	cmp.w	r9, #0
 801f818:	f000 8082 	beq.w	801f920 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f81c:	44d6      	add	lr, sl
 801f81e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f822:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f826:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f82a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f82e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f832:	fb19 fe07 	smulbb	lr, r9, r7
 801f836:	ea44 0808 	orr.w	r8, r4, r8
 801f83a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f83e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f842:	f1c7 0210 	rsb	r2, r7, #16
 801f846:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f84a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f84e:	ea44 0c0c 	orr.w	ip, r4, ip
 801f852:	eba2 0209 	sub.w	r2, r2, r9
 801f856:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f85a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f85e:	fb04 f40c 	mul.w	r4, r4, ip
 801f862:	fb02 4808 	mla	r8, r2, r8, r4
 801f866:	041a      	lsls	r2, r3, #16
 801f868:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f86c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f870:	4313      	orrs	r3, r2
 801f872:	042a      	lsls	r2, r5, #16
 801f874:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f878:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f87c:	fb0e 8303 	mla	r3, lr, r3, r8
 801f880:	432a      	orrs	r2, r5
 801f882:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f886:	fb07 3202 	mla	r2, r7, r2, r3
 801f88a:	0d53      	lsrs	r3, r2, #21
 801f88c:	0952      	lsrs	r2, r2, #5
 801f88e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f892:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f896:	431a      	orrs	r2, r3
 801f898:	b293      	uxth	r3, r2
 801f89a:	b2b4      	uxth	r4, r6
 801f89c:	1202      	asrs	r2, r0, #8
 801f89e:	43f6      	mvns	r6, r6
 801f8a0:	b2f6      	uxtb	r6, r6
 801f8a2:	121d      	asrs	r5, r3, #8
 801f8a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f8a8:	fb12 f206 	smulbb	r2, r2, r6
 801f8ac:	10c7      	asrs	r7, r0, #3
 801f8ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f8b2:	00c0      	lsls	r0, r0, #3
 801f8b4:	fb05 2504 	mla	r5, r5, r4, r2
 801f8b8:	b2c0      	uxtb	r0, r0
 801f8ba:	10da      	asrs	r2, r3, #3
 801f8bc:	00db      	lsls	r3, r3, #3
 801f8be:	b2db      	uxtb	r3, r3
 801f8c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f8c4:	fb10 f006 	smulbb	r0, r0, r6
 801f8c8:	b2ad      	uxth	r5, r5
 801f8ca:	fb03 0004 	mla	r0, r3, r4, r0
 801f8ce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f8d2:	fb17 f706 	smulbb	r7, r7, r6
 801f8d6:	b280      	uxth	r0, r0
 801f8d8:	1c6b      	adds	r3, r5, #1
 801f8da:	fb02 7204 	mla	r2, r2, r4, r7
 801f8de:	b292      	uxth	r2, r2
 801f8e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f8e4:	1c43      	adds	r3, r0, #1
 801f8e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f8ea:	1c50      	adds	r0, r2, #1
 801f8ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f8f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f8f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f8f8:	0952      	lsrs	r2, r2, #5
 801f8fa:	432b      	orrs	r3, r5
 801f8fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f900:	4313      	orrs	r3, r2
 801f902:	800b      	strh	r3, [r1, #0]
 801f904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f908:	4680      	mov	r8, r0
 801f90a:	e75c      	b.n	801f7c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f90c:	4684      	mov	ip, r0
 801f90e:	4680      	mov	r8, r0
 801f910:	e767      	b.n	801f7e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f912:	4684      	mov	ip, r0
 801f914:	e765      	b.n	801f7e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f916:	4605      	mov	r5, r0
 801f918:	e776      	b.n	801f808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f91a:	4603      	mov	r3, r0
 801f91c:	4605      	mov	r5, r0
 801f91e:	e782      	b.n	801f826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f920:	4603      	mov	r3, r0
 801f922:	e780      	b.n	801f826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f924 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f928:	b099      	sub	sp, #100	; 0x64
 801f92a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f92e:	9215      	str	r2, [sp, #84]	; 0x54
 801f930:	9309      	str	r3, [sp, #36]	; 0x24
 801f932:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f934:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f938:	930d      	str	r3, [sp, #52]	; 0x34
 801f93a:	910c      	str	r1, [sp, #48]	; 0x30
 801f93c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f940:	9016      	str	r0, [sp, #88]	; 0x58
 801f942:	6850      	ldr	r0, [r2, #4]
 801f944:	6812      	ldr	r2, [r2, #0]
 801f946:	fb00 1303 	mla	r3, r0, r3, r1
 801f94a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f94e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f950:	681b      	ldr	r3, [r3, #0]
 801f952:	930b      	str	r3, [sp, #44]	; 0x2c
 801f954:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f956:	685e      	ldr	r6, [r3, #4]
 801f958:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f95a:	43db      	mvns	r3, r3
 801f95c:	b2db      	uxtb	r3, r3
 801f95e:	3604      	adds	r6, #4
 801f960:	930a      	str	r3, [sp, #40]	; 0x28
 801f962:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f964:	2b00      	cmp	r3, #0
 801f966:	dc03      	bgt.n	801f970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f968:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f96a:	2b00      	cmp	r3, #0
 801f96c:	f340 8225 	ble.w	801fdba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f970:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f972:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f976:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f97a:	1e48      	subs	r0, r1, #1
 801f97c:	1e57      	subs	r7, r2, #1
 801f97e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f980:	2b00      	cmp	r3, #0
 801f982:	f340 80e3 	ble.w	801fb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f986:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f98a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f98e:	d406      	bmi.n	801f99e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f990:	4584      	cmp	ip, r0
 801f992:	da04      	bge.n	801f99e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f994:	2b00      	cmp	r3, #0
 801f996:	db02      	blt.n	801f99e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f998:	42bb      	cmp	r3, r7
 801f99a:	f2c0 80d8 	blt.w	801fb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f99e:	f11c 0c01 	adds.w	ip, ip, #1
 801f9a2:	f100 80c9 	bmi.w	801fb38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f9a6:	4561      	cmp	r1, ip
 801f9a8:	f2c0 80c6 	blt.w	801fb38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f9ac:	3301      	adds	r3, #1
 801f9ae:	f100 80c3 	bmi.w	801fb38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f9b2:	429a      	cmp	r2, r3
 801f9b4:	f2c0 80c0 	blt.w	801fb38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f9b8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f9bc:	4647      	mov	r7, r8
 801f9be:	f1bb 0f00 	cmp.w	fp, #0
 801f9c2:	f340 80e3 	ble.w	801fb8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f9c6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f9c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9ca:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f9ce:	689b      	ldr	r3, [r3, #8]
 801f9d0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f9d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f9d8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f9dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f9e0:	f100 8121 	bmi.w	801fc26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f9e4:	f103 39ff 	add.w	r9, r3, #4294967295
 801f9e8:	454a      	cmp	r2, r9
 801f9ea:	f280 811c 	bge.w	801fc26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f9ee:	f1bc 0f00 	cmp.w	ip, #0
 801f9f2:	f2c0 8118 	blt.w	801fc26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f9f6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f9fa:	45cc      	cmp	ip, r9
 801f9fc:	f280 8113 	bge.w	801fc26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa00:	b21b      	sxth	r3, r3
 801fa02:	fb0c 2203 	mla	r2, ip, r3, r2
 801fa06:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa08:	eb04 0902 	add.w	r9, r4, r2
 801fa0c:	5ca2      	ldrb	r2, [r4, r2]
 801fa0e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801fa12:	2800      	cmp	r0, #0
 801fa14:	f000 80fe 	beq.w	801fc14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801fa18:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fa1c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fa20:	9211      	str	r2, [sp, #68]	; 0x44
 801fa22:	b151      	cbz	r1, 801fa3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fa24:	eb09 0203 	add.w	r2, r9, r3
 801fa28:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fa2c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fa30:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa32:	7853      	ldrb	r3, [r2, #1]
 801fa34:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fa38:	9312      	str	r3, [sp, #72]	; 0x48
 801fa3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fa3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fa3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fa42:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fa46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fa4a:	ea4c 0c03 	orr.w	ip, ip, r3
 801fa4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fa50:	041b      	lsls	r3, r3, #16
 801fa52:	fb10 f201 	smulbb	r2, r0, r1
 801fa56:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fa5a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fa5e:	10d2      	asrs	r2, r2, #3
 801fa60:	4323      	orrs	r3, r4
 801fa62:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801fa66:	4353      	muls	r3, r2
 801fa68:	fb09 330c 	mla	r3, r9, ip, r3
 801fa6c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fa70:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fa74:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fa78:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fa7c:	f1c1 0c10 	rsb	ip, r1, #16
 801fa80:	ebac 0c00 	sub.w	ip, ip, r0
 801fa84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fa88:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fa8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fa8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fa90:	0418      	lsls	r0, r3, #16
 801fa92:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fa96:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fa9a:	4318      	orrs	r0, r3
 801fa9c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801faa0:	fb02 c200 	mla	r2, r2, r0, ip
 801faa4:	0d53      	lsrs	r3, r2, #21
 801faa6:	0952      	lsrs	r2, r2, #5
 801faa8:	8838      	ldrh	r0, [r7, #0]
 801faaa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801faae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fab2:	431a      	orrs	r2, r3
 801fab4:	b292      	uxth	r2, r2
 801fab6:	1201      	asrs	r1, r0, #8
 801fab8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fabc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fac0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fac4:	fb11 f104 	smulbb	r1, r1, r4
 801fac8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801facc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fad0:	00c0      	lsls	r0, r0, #3
 801fad2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fad6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fada:	10d1      	asrs	r1, r2, #3
 801fadc:	b2c0      	uxtb	r0, r0
 801fade:	00d2      	lsls	r2, r2, #3
 801fae0:	b2d2      	uxtb	r2, r2
 801fae2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fae6:	fb1e fe04 	smulbb	lr, lr, r4
 801faea:	fb10 f004 	smulbb	r0, r0, r4
 801faee:	fa1f fc8c 	uxth.w	ip, ip
 801faf2:	fb01 e103 	mla	r1, r1, r3, lr
 801faf6:	fb02 0303 	mla	r3, r2, r3, r0
 801fafa:	b29a      	uxth	r2, r3
 801fafc:	f10c 0301 	add.w	r3, ip, #1
 801fb00:	b289      	uxth	r1, r1
 801fb02:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fb06:	1c53      	adds	r3, r2, #1
 801fb08:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb0c:	1c4a      	adds	r2, r1, #1
 801fb0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fb12:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fb16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fb1a:	0949      	lsrs	r1, r1, #5
 801fb1c:	ea43 030c 	orr.w	r3, r3, ip
 801fb20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb24:	430b      	orrs	r3, r1
 801fb26:	803b      	strh	r3, [r7, #0]
 801fb28:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fb2a:	449a      	add	sl, r3
 801fb2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fb2e:	3702      	adds	r7, #2
 801fb30:	441d      	add	r5, r3
 801fb32:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fb36:	e742      	b.n	801f9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fb38:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fb3a:	449a      	add	sl, r3
 801fb3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fb3e:	441d      	add	r5, r3
 801fb40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb42:	3b01      	subs	r3, #1
 801fb44:	9309      	str	r3, [sp, #36]	; 0x24
 801fb46:	f108 0802 	add.w	r8, r8, #2
 801fb4a:	e718      	b.n	801f97e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fb4c:	d023      	beq.n	801fb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fb4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb50:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fb52:	3b01      	subs	r3, #1
 801fb54:	fb00 a003 	mla	r0, r0, r3, sl
 801fb58:	1400      	asrs	r0, r0, #16
 801fb5a:	f53f af2d 	bmi.w	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fb5e:	3901      	subs	r1, #1
 801fb60:	4288      	cmp	r0, r1
 801fb62:	f6bf af29 	bge.w	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fb66:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fb68:	fb01 5303 	mla	r3, r1, r3, r5
 801fb6c:	141b      	asrs	r3, r3, #16
 801fb6e:	f53f af23 	bmi.w	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fb72:	3a01      	subs	r2, #1
 801fb74:	4293      	cmp	r3, r2
 801fb76:	f6bf af1f 	bge.w	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fb7a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fb7e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fb82:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fb86:	f1be 0f00 	cmp.w	lr, #0
 801fb8a:	dc6c      	bgt.n	801fc66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fb8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb8e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fb92:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fb96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb98:	2b00      	cmp	r3, #0
 801fb9a:	f340 810e 	ble.w	801fdba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fb9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fba2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fba6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fbaa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fbac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbb0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbb8:	eef0 6a62 	vmov.f32	s13, s5
 801fbbc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fbc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbc4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fbc8:	ee16 aa90 	vmov	sl, s13
 801fbcc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fbd0:	eef0 6a43 	vmov.f32	s13, s6
 801fbd4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fbd8:	ee12 2a90 	vmov	r2, s5
 801fbdc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbe0:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbe4:	ee13 2a10 	vmov	r2, s6
 801fbe8:	9325      	str	r3, [sp, #148]	; 0x94
 801fbea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fbec:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbf0:	9326      	str	r3, [sp, #152]	; 0x98
 801fbf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fbf4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fbf6:	3b01      	subs	r3, #1
 801fbf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbfc:	930c      	str	r3, [sp, #48]	; 0x30
 801fbfe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fc00:	bf08      	it	eq
 801fc02:	4613      	moveq	r3, r2
 801fc04:	ee16 5a90 	vmov	r5, s13
 801fc08:	9309      	str	r3, [sp, #36]	; 0x24
 801fc0a:	eeb0 3a67 	vmov.f32	s6, s15
 801fc0e:	eef0 2a47 	vmov.f32	s5, s14
 801fc12:	e6a6      	b.n	801f962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fc14:	2900      	cmp	r1, #0
 801fc16:	f43f af10 	beq.w	801fa3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fc1a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fc1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc22:	930f      	str	r3, [sp, #60]	; 0x3c
 801fc24:	e709      	b.n	801fa3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fc26:	f112 0901 	adds.w	r9, r2, #1
 801fc2a:	f53f af7d 	bmi.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fc2e:	454b      	cmp	r3, r9
 801fc30:	f6ff af7a 	blt.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fc34:	f11c 0901 	adds.w	r9, ip, #1
 801fc38:	f53f af76 	bmi.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fc3c:	45ce      	cmp	lr, r9
 801fc3e:	f6ff af73 	blt.w	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fc42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fc44:	9202      	str	r2, [sp, #8]
 801fc46:	b21b      	sxth	r3, r3
 801fc48:	fa0f f28e 	sxth.w	r2, lr
 801fc4c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fc50:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fc54:	9201      	str	r2, [sp, #4]
 801fc56:	9300      	str	r3, [sp, #0]
 801fc58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fc5a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fc5c:	4633      	mov	r3, r6
 801fc5e:	4639      	mov	r1, r7
 801fc60:	f7ff fd8e 	bl	801f780 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fc64:	e760      	b.n	801fb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fc66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fc68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fc6a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fc6e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fc72:	1429      	asrs	r1, r5, #16
 801fc74:	fb03 2101 	mla	r1, r3, r1, r2
 801fc78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fc7a:	440a      	add	r2, r1
 801fc7c:	5c61      	ldrb	r1, [r4, r1]
 801fc7e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fc82:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fc86:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fc8a:	f1bc 0f00 	cmp.w	ip, #0
 801fc8e:	f000 808c 	beq.w	801fdaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fc92:	7857      	ldrb	r7, [r2, #1]
 801fc94:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fc98:	9413      	str	r4, [sp, #76]	; 0x4c
 801fc9a:	b140      	cbz	r0, 801fcae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fc9c:	18d7      	adds	r7, r2, r3
 801fc9e:	5cd3      	ldrb	r3, [r2, r3]
 801fca0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fca4:	9310      	str	r3, [sp, #64]	; 0x40
 801fca6:	787b      	ldrb	r3, [r7, #1]
 801fca8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fcac:	9314      	str	r3, [sp, #80]	; 0x50
 801fcae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fcb0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fcb2:	fb1c f200 	smulbb	r2, ip, r0
 801fcb6:	041f      	lsls	r7, r3, #16
 801fcb8:	10d2      	asrs	r2, r2, #3
 801fcba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fcbe:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fcc2:	431f      	orrs	r7, r3
 801fcc4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fcc8:	9317      	str	r3, [sp, #92]	; 0x5c
 801fcca:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fccc:	041b      	lsls	r3, r3, #16
 801fcce:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fcd2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fcd6:	ea43 030b 	orr.w	r3, r3, fp
 801fcda:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fcdc:	4353      	muls	r3, r2
 801fcde:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fce2:	fb04 3707 	mla	r7, r4, r7, r3
 801fce6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fcea:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fcee:	ea43 0b01 	orr.w	fp, r3, r1
 801fcf2:	f1c0 0110 	rsb	r1, r0, #16
 801fcf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fcf8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fcfa:	eba1 0c0c 	sub.w	ip, r1, ip
 801fcfe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fd02:	fb0c 770b 	mla	r7, ip, fp, r7
 801fd06:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fd0a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fd0e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fd12:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fd16:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fd1a:	fb02 770c 	mla	r7, r2, ip, r7
 801fd1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fd20:	0d79      	lsrs	r1, r7, #21
 801fd22:	097f      	lsrs	r7, r7, #5
 801fd24:	8812      	ldrh	r2, [r2, #0]
 801fd26:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd2a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fd2e:	430f      	orrs	r7, r1
 801fd30:	b2bb      	uxth	r3, r7
 801fd32:	1211      	asrs	r1, r2, #8
 801fd34:	1218      	asrs	r0, r3, #8
 801fd36:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fd3a:	fb11 f104 	smulbb	r1, r1, r4
 801fd3e:	10d7      	asrs	r7, r2, #3
 801fd40:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fd44:	00d2      	lsls	r2, r2, #3
 801fd46:	fb00 1009 	mla	r0, r0, r9, r1
 801fd4a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fd4e:	10d9      	asrs	r1, r3, #3
 801fd50:	b2d2      	uxtb	r2, r2
 801fd52:	00db      	lsls	r3, r3, #3
 801fd54:	fb17 f704 	smulbb	r7, r7, r4
 801fd58:	fb12 f204 	smulbb	r2, r2, r4
 801fd5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fd60:	b2db      	uxtb	r3, r3
 801fd62:	b280      	uxth	r0, r0
 801fd64:	fb01 7109 	mla	r1, r1, r9, r7
 801fd68:	fb03 2309 	mla	r3, r3, r9, r2
 801fd6c:	b29b      	uxth	r3, r3
 801fd6e:	b289      	uxth	r1, r1
 801fd70:	1c42      	adds	r2, r0, #1
 801fd72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fd76:	1c4f      	adds	r7, r1, #1
 801fd78:	1c5a      	adds	r2, r3, #1
 801fd7a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fd7e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801fd82:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fd86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fd8a:	0949      	lsrs	r1, r1, #5
 801fd8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fd8e:	4310      	orrs	r0, r2
 801fd90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd94:	4308      	orrs	r0, r1
 801fd96:	f823 0b02 	strh.w	r0, [r3], #2
 801fd9a:	930e      	str	r3, [sp, #56]	; 0x38
 801fd9c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fd9e:	449a      	add	sl, r3
 801fda0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fda2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fda6:	441d      	add	r5, r3
 801fda8:	e6ed      	b.n	801fb86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801fdaa:	2800      	cmp	r0, #0
 801fdac:	f43f af7f 	beq.w	801fcae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fdb0:	5cd3      	ldrb	r3, [r2, r3]
 801fdb2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fdb6:	9310      	str	r3, [sp, #64]	; 0x40
 801fdb8:	e779      	b.n	801fcae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fdba:	b019      	add	sp, #100	; 0x64
 801fdbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fdc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fdc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fdc4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fdc8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801fdcc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fdd0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801fdd4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fdd8:	8808      	ldrh	r0, [r1, #0]
 801fdda:	fb08 470e 	mla	r7, r8, lr, r4
 801fdde:	f1b8 0f00 	cmp.w	r8, #0
 801fde2:	eb02 0907 	add.w	r9, r2, r7
 801fde6:	db67      	blt.n	801feb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fde8:	45c2      	cmp	sl, r8
 801fdea:	dd65      	ble.n	801feb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fdec:	2c00      	cmp	r4, #0
 801fdee:	db61      	blt.n	801feb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fdf0:	45a6      	cmp	lr, r4
 801fdf2:	dd5f      	ble.n	801feb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fdf4:	5dd2      	ldrb	r2, [r2, r7]
 801fdf6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801fdfa:	1c62      	adds	r2, r4, #1
 801fdfc:	d45f      	bmi.n	801febe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fdfe:	4596      	cmp	lr, r2
 801fe00:	dd5d      	ble.n	801febe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe02:	2d00      	cmp	r5, #0
 801fe04:	d05b      	beq.n	801febe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe06:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fe0a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801fe0e:	f118 0801 	adds.w	r8, r8, #1
 801fe12:	d458      	bmi.n	801fec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fe14:	45c2      	cmp	sl, r8
 801fe16:	dd56      	ble.n	801fec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fe18:	2e00      	cmp	r6, #0
 801fe1a:	d054      	beq.n	801fec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fe1c:	2c00      	cmp	r4, #0
 801fe1e:	db50      	blt.n	801fec2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fe20:	45a6      	cmp	lr, r4
 801fe22:	dd4e      	ble.n	801fec2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fe24:	f819 200e 	ldrb.w	r2, [r9, lr]
 801fe28:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801fe2c:	3401      	adds	r4, #1
 801fe2e:	d407      	bmi.n	801fe40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fe30:	45a6      	cmp	lr, r4
 801fe32:	dd05      	ble.n	801fe40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fe34:	b125      	cbz	r5, 801fe40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fe36:	44ce      	add	lr, r9
 801fe38:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801fe3c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801fe40:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fe44:	fb15 f406 	smulbb	r4, r5, r6
 801fe48:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fe4c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fe50:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fe54:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fe58:	ea43 0c0c 	orr.w	ip, r3, ip
 801fe5c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801fe60:	f1c6 0310 	rsb	r3, r6, #16
 801fe64:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fe68:	1b5b      	subs	r3, r3, r5
 801fe6a:	ea4e 0707 	orr.w	r7, lr, r7
 801fe6e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fe72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801fe76:	437d      	muls	r5, r7
 801fe78:	fb03 5c0c 	mla	ip, r3, ip, r5
 801fe7c:	0403      	lsls	r3, r0, #16
 801fe7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fe82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fe86:	4318      	orrs	r0, r3
 801fe88:	0413      	lsls	r3, r2, #16
 801fe8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fe8e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fe92:	4313      	orrs	r3, r2
 801fe94:	fb04 c000 	mla	r0, r4, r0, ip
 801fe98:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801fe9c:	fb06 0003 	mla	r0, r6, r3, r0
 801fea0:	0d43      	lsrs	r3, r0, #21
 801fea2:	0940      	lsrs	r0, r0, #5
 801fea4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fea8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801feac:	4318      	orrs	r0, r3
 801feae:	8008      	strh	r0, [r1, #0]
 801feb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801feb4:	4684      	mov	ip, r0
 801feb6:	e7a0      	b.n	801fdfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801feb8:	4607      	mov	r7, r0
 801feba:	4684      	mov	ip, r0
 801febc:	e7a7      	b.n	801fe0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801febe:	4607      	mov	r7, r0
 801fec0:	e7a5      	b.n	801fe0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801fec2:	4602      	mov	r2, r0
 801fec4:	e7b2      	b.n	801fe2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801fec6:	4602      	mov	r2, r0
 801fec8:	e7ba      	b.n	801fe40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801feca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801feca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fece:	b093      	sub	sp, #76	; 0x4c
 801fed0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fed4:	920f      	str	r2, [sp, #60]	; 0x3c
 801fed6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fed8:	9108      	str	r1, [sp, #32]
 801feda:	9306      	str	r3, [sp, #24]
 801fedc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fee0:	9010      	str	r0, [sp, #64]	; 0x40
 801fee2:	6850      	ldr	r0, [r2, #4]
 801fee4:	6812      	ldr	r2, [r2, #0]
 801fee6:	fb00 1303 	mla	r3, r0, r3, r1
 801feea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801feee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fef0:	681b      	ldr	r3, [r3, #0]
 801fef2:	9307      	str	r3, [sp, #28]
 801fef4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fef6:	685f      	ldr	r7, [r3, #4]
 801fef8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801fefc:	3704      	adds	r7, #4
 801fefe:	9b08      	ldr	r3, [sp, #32]
 801ff00:	2b00      	cmp	r3, #0
 801ff02:	dc03      	bgt.n	801ff0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ff04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ff06:	2b00      	cmp	r3, #0
 801ff08:	f340 81b2 	ble.w	8020270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ff0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ff12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ff16:	1e48      	subs	r0, r1, #1
 801ff18:	f102 3cff 	add.w	ip, r2, #4294967295
 801ff1c:	9b06      	ldr	r3, [sp, #24]
 801ff1e:	2b00      	cmp	r3, #0
 801ff20:	f340 80a9 	ble.w	8020076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ff24:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ff28:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ff2c:	d406      	bmi.n	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ff2e:	4586      	cmp	lr, r0
 801ff30:	da04      	bge.n	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ff32:	2b00      	cmp	r3, #0
 801ff34:	db02      	blt.n	801ff3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ff36:	4563      	cmp	r3, ip
 801ff38:	f2c0 809e 	blt.w	8020078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ff3c:	f11e 0e01 	adds.w	lr, lr, #1
 801ff40:	f100 808f 	bmi.w	8020062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff44:	4571      	cmp	r1, lr
 801ff46:	f2c0 808c 	blt.w	8020062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff4a:	3301      	adds	r3, #1
 801ff4c:	f100 8089 	bmi.w	8020062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff50:	429a      	cmp	r2, r3
 801ff52:	f2c0 8086 	blt.w	8020062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff56:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ff5a:	46c8      	mov	r8, r9
 801ff5c:	f1bb 0f00 	cmp.w	fp, #0
 801ff60:	f340 80a6 	ble.w	80200b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ff64:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ff66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff68:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ff6c:	689b      	ldr	r3, [r3, #8]
 801ff6e:	1422      	asrs	r2, r4, #16
 801ff70:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ff74:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ff78:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ff7c:	f100 80e3 	bmi.w	8020146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ff80:	f103 3aff 	add.w	sl, r3, #4294967295
 801ff84:	4552      	cmp	r2, sl
 801ff86:	f280 80de 	bge.w	8020146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ff8a:	f1bc 0f00 	cmp.w	ip, #0
 801ff8e:	f2c0 80da 	blt.w	8020146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ff92:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ff96:	45d4      	cmp	ip, sl
 801ff98:	f280 80d5 	bge.w	8020146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ff9c:	b21b      	sxth	r3, r3
 801ff9e:	fb0c 2203 	mla	r2, ip, r3, r2
 801ffa2:	9d07      	ldr	r5, [sp, #28]
 801ffa4:	eb05 0a02 	add.w	sl, r5, r2
 801ffa8:	5caa      	ldrb	r2, [r5, r2]
 801ffaa:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ffae:	2800      	cmp	r0, #0
 801ffb0:	f000 80c0 	beq.w	8020134 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ffb4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ffb8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ffbc:	920b      	str	r2, [sp, #44]	; 0x2c
 801ffbe:	b151      	cbz	r1, 801ffd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ffc0:	eb0a 0203 	add.w	r2, sl, r3
 801ffc4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ffc8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ffcc:	9309      	str	r3, [sp, #36]	; 0x24
 801ffce:	7853      	ldrb	r3, [r2, #1]
 801ffd0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ffd4:	930c      	str	r3, [sp, #48]	; 0x30
 801ffd6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ffd8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ffda:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ffde:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ffe2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ffe6:	ea4c 0c03 	orr.w	ip, ip, r3
 801ffea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ffec:	041b      	lsls	r3, r3, #16
 801ffee:	fb10 f201 	smulbb	r2, r0, r1
 801fff2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fff6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801fffa:	10d2      	asrs	r2, r2, #3
 801fffc:	432b      	orrs	r3, r5
 801fffe:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020002:	4353      	muls	r3, r2
 8020004:	fb0a 330c 	mla	r3, sl, ip, r3
 8020008:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802000c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020010:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020014:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020018:	f1c1 0c10 	rsb	ip, r1, #16
 802001c:	ebac 0c00 	sub.w	ip, ip, r0
 8020020:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020024:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020028:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802002a:	0418      	lsls	r0, r3, #16
 802002c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020030:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020034:	4318      	orrs	r0, r3
 8020036:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802003a:	fb02 c200 	mla	r2, r2, r0, ip
 802003e:	0d53      	lsrs	r3, r2, #21
 8020040:	0952      	lsrs	r2, r2, #5
 8020042:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020046:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802004a:	431a      	orrs	r2, r3
 802004c:	f8a8 2000 	strh.w	r2, [r8]
 8020050:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020052:	441c      	add	r4, r3
 8020054:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020056:	f108 0802 	add.w	r8, r8, #2
 802005a:	441e      	add	r6, r3
 802005c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020060:	e77c      	b.n	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020062:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020064:	441c      	add	r4, r3
 8020066:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020068:	441e      	add	r6, r3
 802006a:	9b06      	ldr	r3, [sp, #24]
 802006c:	3b01      	subs	r3, #1
 802006e:	9306      	str	r3, [sp, #24]
 8020070:	f109 0902 	add.w	r9, r9, #2
 8020074:	e752      	b.n	801ff1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020076:	d020      	beq.n	80200ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020078:	9b06      	ldr	r3, [sp, #24]
 802007a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802007c:	3b01      	subs	r3, #1
 802007e:	fb00 4003 	mla	r0, r0, r3, r4
 8020082:	1400      	asrs	r0, r0, #16
 8020084:	f53f af67 	bmi.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020088:	3901      	subs	r1, #1
 802008a:	4288      	cmp	r0, r1
 802008c:	f6bf af63 	bge.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020090:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020092:	fb01 6303 	mla	r3, r1, r3, r6
 8020096:	141b      	asrs	r3, r3, #16
 8020098:	f53f af5d 	bmi.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802009c:	3a01      	subs	r2, #1
 802009e:	4293      	cmp	r3, r2
 80200a0:	f6bf af59 	bge.w	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80200a4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80200a8:	46ca      	mov	sl, r9
 80200aa:	f1b8 0f00 	cmp.w	r8, #0
 80200ae:	dc67      	bgt.n	8020180 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80200b0:	9b06      	ldr	r3, [sp, #24]
 80200b2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80200b6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80200ba:	9b08      	ldr	r3, [sp, #32]
 80200bc:	2b00      	cmp	r3, #0
 80200be:	f340 80d7 	ble.w	8020270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80200c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80200c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80200ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80200ce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80200d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80200d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80200d8:	eeb0 6a62 	vmov.f32	s12, s5
 80200dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80200e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80200e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80200e8:	ee16 4a10 	vmov	r4, s12
 80200ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80200f0:	eeb0 6a43 	vmov.f32	s12, s6
 80200f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80200f8:	ee12 2a90 	vmov	r2, s5
 80200fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020100:	fb92 f3f3 	sdiv	r3, r2, r3
 8020104:	ee13 2a10 	vmov	r2, s6
 8020108:	931f      	str	r3, [sp, #124]	; 0x7c
 802010a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802010c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020110:	9320      	str	r3, [sp, #128]	; 0x80
 8020112:	9b08      	ldr	r3, [sp, #32]
 8020114:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020116:	3b01      	subs	r3, #1
 8020118:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802011c:	9308      	str	r3, [sp, #32]
 802011e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020120:	bf08      	it	eq
 8020122:	4613      	moveq	r3, r2
 8020124:	ee16 6a10 	vmov	r6, s12
 8020128:	9306      	str	r3, [sp, #24]
 802012a:	eeb0 3a67 	vmov.f32	s6, s15
 802012e:	eef0 2a47 	vmov.f32	s5, s14
 8020132:	e6e4      	b.n	801fefe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020134:	2900      	cmp	r1, #0
 8020136:	f43f af4e 	beq.w	801ffd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802013a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802013e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020142:	9309      	str	r3, [sp, #36]	; 0x24
 8020144:	e747      	b.n	801ffd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020146:	f112 0a01 	adds.w	sl, r2, #1
 802014a:	d481      	bmi.n	8020050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802014c:	4553      	cmp	r3, sl
 802014e:	f6ff af7f 	blt.w	8020050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020152:	f11c 0a01 	adds.w	sl, ip, #1
 8020156:	f53f af7b 	bmi.w	8020050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802015a:	45d6      	cmp	lr, sl
 802015c:	f6ff af78 	blt.w	8020050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020160:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020164:	b21b      	sxth	r3, r3
 8020166:	fa0f f28e 	sxth.w	r2, lr
 802016a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802016e:	9201      	str	r2, [sp, #4]
 8020170:	9300      	str	r3, [sp, #0]
 8020172:	9a07      	ldr	r2, [sp, #28]
 8020174:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020176:	463b      	mov	r3, r7
 8020178:	4641      	mov	r1, r8
 802017a:	f7ff fe21 	bl	801fdc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802017e:	e767      	b.n	8020050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020180:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020182:	9d07      	ldr	r5, [sp, #28]
 8020184:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020188:	1422      	asrs	r2, r4, #16
 802018a:	1431      	asrs	r1, r6, #16
 802018c:	fb03 2101 	mla	r1, r3, r1, r2
 8020190:	9a07      	ldr	r2, [sp, #28]
 8020192:	440a      	add	r2, r1
 8020194:	5c69      	ldrb	r1, [r5, r1]
 8020196:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802019a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802019e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80201a2:	f1be 0f00 	cmp.w	lr, #0
 80201a6:	d05c      	beq.n	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80201a8:	f892 c001 	ldrb.w	ip, [r2, #1]
 80201ac:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80201b0:	950d      	str	r5, [sp, #52]	; 0x34
 80201b2:	b150      	cbz	r0, 80201ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80201b4:	eb02 0c03 	add.w	ip, r2, r3
 80201b8:	5cd3      	ldrb	r3, [r2, r3]
 80201ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80201be:	930a      	str	r3, [sp, #40]	; 0x28
 80201c0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80201c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80201c8:	930e      	str	r3, [sp, #56]	; 0x38
 80201ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80201cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80201ce:	fb1e f200 	smulbb	r2, lr, r0
 80201d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80201d6:	10d2      	asrs	r2, r2, #3
 80201d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80201dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80201e0:	ea4c 0c03 	orr.w	ip, ip, r3
 80201e4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80201e8:	9311      	str	r3, [sp, #68]	; 0x44
 80201ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80201ec:	041b      	lsls	r3, r3, #16
 80201ee:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80201f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80201f6:	ea43 030b 	orr.w	r3, r3, fp
 80201fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80201fc:	4353      	muls	r3, r2
 80201fe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020202:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020206:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802020a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802020e:	ea43 0b01 	orr.w	fp, r3, r1
 8020212:	f1c0 0110 	rsb	r1, r0, #16
 8020216:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020218:	eba1 0e0e 	sub.w	lr, r1, lr
 802021c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020220:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020224:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020228:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 802022c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020230:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020234:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020238:	fb02 cc0e 	mla	ip, r2, lr, ip
 802023c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020240:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020244:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020248:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802024c:	ea43 0c0c 	orr.w	ip, r3, ip
 8020250:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020252:	f82a cb02 	strh.w	ip, [sl], #2
 8020256:	441c      	add	r4, r3
 8020258:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802025a:	f108 38ff 	add.w	r8, r8, #4294967295
 802025e:	441e      	add	r6, r3
 8020260:	e723      	b.n	80200aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020262:	2800      	cmp	r0, #0
 8020264:	d0b1      	beq.n	80201ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020266:	5cd3      	ldrb	r3, [r2, r3]
 8020268:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802026c:	930a      	str	r3, [sp, #40]	; 0x28
 802026e:	e7ac      	b.n	80201ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020270:	b013      	add	sp, #76	; 0x4c
 8020272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020276 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020276:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802027a:	880d      	ldrh	r5, [r1, #0]
 802027c:	b087      	sub	sp, #28
 802027e:	10ef      	asrs	r7, r5, #3
 8020280:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020284:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020288:	00ed      	lsls	r5, r5, #3
 802028a:	9701      	str	r7, [sp, #4]
 802028c:	b2ed      	uxtb	r5, r5
 802028e:	9502      	str	r5, [sp, #8]
 8020290:	9d01      	ldr	r5, [sp, #4]
 8020292:	9103      	str	r1, [sp, #12]
 8020294:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020298:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 802029c:	9902      	ldr	r1, [sp, #8]
 802029e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80202a2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80202a6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80202aa:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80202ae:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80202b2:	022d      	lsls	r5, r5, #8
 80202b4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80202b8:	fb06 0709 	mla	r7, r6, r9, r0
 80202bc:	430d      	orrs	r5, r1
 80202be:	2e00      	cmp	r6, #0
 80202c0:	eb02 0c07 	add.w	ip, r2, r7
 80202c4:	9505      	str	r5, [sp, #20]
 80202c6:	f2c0 80b6 	blt.w	8020436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80202ca:	45b3      	cmp	fp, r6
 80202cc:	f340 80b3 	ble.w	8020436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80202d0:	2800      	cmp	r0, #0
 80202d2:	f2c0 80ae 	blt.w	8020432 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80202d6:	4581      	cmp	r9, r0
 80202d8:	f340 80ab 	ble.w	8020432 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80202dc:	5dd7      	ldrb	r7, [r2, r7]
 80202de:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80202e2:	441f      	add	r7, r3
 80202e4:	1c42      	adds	r2, r0, #1
 80202e6:	f100 80a9 	bmi.w	802043c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80202ea:	4591      	cmp	r9, r2
 80202ec:	f340 80a6 	ble.w	802043c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80202f0:	2c00      	cmp	r4, #0
 80202f2:	f000 80a3 	beq.w	802043c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80202f6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80202fa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80202fe:	441d      	add	r5, r3
 8020300:	3601      	adds	r6, #1
 8020302:	f100 809f 	bmi.w	8020444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020306:	45b3      	cmp	fp, r6
 8020308:	f340 809c 	ble.w	8020444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802030c:	f1be 0f00 	cmp.w	lr, #0
 8020310:	f000 8098 	beq.w	8020444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020314:	2800      	cmp	r0, #0
 8020316:	f2c0 8093 	blt.w	8020440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802031a:	4581      	cmp	r9, r0
 802031c:	f340 8090 	ble.w	8020440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020320:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020324:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020328:	441e      	add	r6, r3
 802032a:	3001      	adds	r0, #1
 802032c:	f100 808d 	bmi.w	802044a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020330:	4581      	cmp	r9, r0
 8020332:	f340 808a 	ble.w	802044a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020336:	2c00      	cmp	r4, #0
 8020338:	f000 8087 	beq.w	802044a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802033c:	44e1      	add	r9, ip
 802033e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020342:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020346:	4413      	add	r3, r2
 8020348:	b2a4      	uxth	r4, r4
 802034a:	fa1f fe8e 	uxth.w	lr, lr
 802034e:	fb04 fb0e 	mul.w	fp, r4, lr
 8020352:	0124      	lsls	r4, r4, #4
 8020354:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020358:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 802035c:	eba4 040b 	sub.w	r4, r4, fp
 8020360:	fa1f f08e 	uxth.w	r0, lr
 8020364:	b2a2      	uxth	r2, r4
 8020366:	78ac      	ldrb	r4, [r5, #2]
 8020368:	f897 c002 	ldrb.w	ip, [r7, #2]
 802036c:	9901      	ldr	r1, [sp, #4]
 802036e:	eba9 0900 	sub.w	r9, r9, r0
 8020372:	fa1f f989 	uxth.w	r9, r9
 8020376:	4354      	muls	r4, r2
 8020378:	fb09 440c 	mla	r4, r9, ip, r4
 802037c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020380:	fb00 440c 	mla	r4, r0, ip, r4
 8020384:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020388:	fa1f fe88 	uxth.w	lr, r8
 802038c:	ea6f 0808 	mvn.w	r8, r8
 8020390:	fa5f f888 	uxtb.w	r8, r8
 8020394:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020398:	fb1a fa08 	smulbb	sl, sl, r8
 802039c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80203a0:	fb0c ac0e 	mla	ip, ip, lr, sl
 80203a4:	f895 a001 	ldrb.w	sl, [r5, #1]
 80203a8:	787c      	ldrb	r4, [r7, #1]
 80203aa:	782d      	ldrb	r5, [r5, #0]
 80203ac:	783f      	ldrb	r7, [r7, #0]
 80203ae:	fb02 fa0a 	mul.w	sl, r2, sl
 80203b2:	fb09 aa04 	mla	sl, r9, r4, sl
 80203b6:	7874      	ldrb	r4, [r6, #1]
 80203b8:	436a      	muls	r2, r5
 80203ba:	7835      	ldrb	r5, [r6, #0]
 80203bc:	fb00 aa04 	mla	sl, r0, r4, sl
 80203c0:	fb09 2207 	mla	r2, r9, r7, r2
 80203c4:	785c      	ldrb	r4, [r3, #1]
 80203c6:	781b      	ldrb	r3, [r3, #0]
 80203c8:	fb00 2005 	mla	r0, r0, r5, r2
 80203cc:	fb0b a404 	mla	r4, fp, r4, sl
 80203d0:	fb0b 0b03 	mla	fp, fp, r3, r0
 80203d4:	9b02      	ldr	r3, [sp, #8]
 80203d6:	fb11 fa08 	smulbb	sl, r1, r8
 80203da:	fa1f fc8c 	uxth.w	ip, ip
 80203de:	fb13 f808 	smulbb	r8, r3, r8
 80203e2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80203e6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80203ea:	fb04 a40e 	mla	r4, r4, lr, sl
 80203ee:	f10c 0301 	add.w	r3, ip, #1
 80203f2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80203f6:	fa1f fe8e 	uxth.w	lr, lr
 80203fa:	b2a4      	uxth	r4, r4
 80203fc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020400:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020404:	f104 0a01 	add.w	sl, r4, #1
 8020408:	f10e 0c01 	add.w	ip, lr, #1
 802040c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020410:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020414:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020418:	0964      	lsrs	r4, r4, #5
 802041a:	ea4c 0c03 	orr.w	ip, ip, r3
 802041e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020422:	9b03      	ldr	r3, [sp, #12]
 8020424:	ea4c 0c04 	orr.w	ip, ip, r4
 8020428:	f8a3 c000 	strh.w	ip, [r3]
 802042c:	b007      	add	sp, #28
 802042e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020432:	af05      	add	r7, sp, #20
 8020434:	e756      	b.n	80202e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020436:	ad05      	add	r5, sp, #20
 8020438:	462f      	mov	r7, r5
 802043a:	e761      	b.n	8020300 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802043c:	ad05      	add	r5, sp, #20
 802043e:	e75f      	b.n	8020300 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020440:	ae05      	add	r6, sp, #20
 8020442:	e772      	b.n	802032a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020444:	ab05      	add	r3, sp, #20
 8020446:	461e      	mov	r6, r3
 8020448:	e77e      	b.n	8020348 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 802044a:	ab05      	add	r3, sp, #20
 802044c:	e77c      	b.n	8020348 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802044e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802044e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020452:	b095      	sub	sp, #84	; 0x54
 8020454:	9212      	str	r2, [sp, #72]	; 0x48
 8020456:	9309      	str	r3, [sp, #36]	; 0x24
 8020458:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802045a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802045e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020460:	910e      	str	r1, [sp, #56]	; 0x38
 8020462:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020466:	9013      	str	r0, [sp, #76]	; 0x4c
 8020468:	6850      	ldr	r0, [r2, #4]
 802046a:	6812      	ldr	r2, [r2, #0]
 802046c:	fb00 1303 	mla	r3, r0, r3, r1
 8020470:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020474:	930a      	str	r3, [sp, #40]	; 0x28
 8020476:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020478:	681b      	ldr	r3, [r3, #0]
 802047a:	930d      	str	r3, [sp, #52]	; 0x34
 802047c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802047e:	685c      	ldr	r4, [r3, #4]
 8020480:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020482:	43db      	mvns	r3, r3
 8020484:	b2db      	uxtb	r3, r3
 8020486:	3404      	adds	r4, #4
 8020488:	930b      	str	r3, [sp, #44]	; 0x2c
 802048a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802048c:	2b00      	cmp	r3, #0
 802048e:	dc03      	bgt.n	8020498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020490:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020492:	2b00      	cmp	r3, #0
 8020494:	f340 8255 	ble.w	8020942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020498:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802049a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802049e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80204a2:	1e48      	subs	r0, r1, #1
 80204a4:	1e55      	subs	r5, r2, #1
 80204a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80204a8:	2b00      	cmp	r3, #0
 80204aa:	f340 80f9 	ble.w	80206a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80204ae:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80204b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80204b2:	1436      	asrs	r6, r6, #16
 80204b4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80204b8:	d406      	bmi.n	80204c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80204ba:	4286      	cmp	r6, r0
 80204bc:	da04      	bge.n	80204c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80204be:	2b00      	cmp	r3, #0
 80204c0:	db02      	blt.n	80204c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80204c2:	42ab      	cmp	r3, r5
 80204c4:	f2c0 80ed 	blt.w	80206a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80204c8:	3601      	adds	r6, #1
 80204ca:	f100 80da 	bmi.w	8020682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80204ce:	42b1      	cmp	r1, r6
 80204d0:	f2c0 80d7 	blt.w	8020682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80204d4:	3301      	adds	r3, #1
 80204d6:	f100 80d4 	bmi.w	8020682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80204da:	429a      	cmp	r2, r3
 80204dc:	f2c0 80d1 	blt.w	8020682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80204e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80204e2:	9311      	str	r3, [sp, #68]	; 0x44
 80204e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80204e6:	930c      	str	r3, [sp, #48]	; 0x30
 80204e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80204ea:	2b00      	cmp	r3, #0
 80204ec:	f340 80fa 	ble.w	80206e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80204f0:	9826      	ldr	r0, [sp, #152]	; 0x98
 80204f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80204f4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80204f6:	68c6      	ldr	r6, [r0, #12]
 80204f8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80204fa:	141d      	asrs	r5, r3, #16
 80204fc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020500:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020502:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020504:	1400      	asrs	r0, r0, #16
 8020506:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802050a:	6892      	ldr	r2, [r2, #8]
 802050c:	f100 813e 	bmi.w	802078c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020510:	1e57      	subs	r7, r2, #1
 8020512:	42b8      	cmp	r0, r7
 8020514:	f280 813a 	bge.w	802078c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020518:	2d00      	cmp	r5, #0
 802051a:	f2c0 8137 	blt.w	802078c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802051e:	1e77      	subs	r7, r6, #1
 8020520:	42bd      	cmp	r5, r7
 8020522:	f280 8133 	bge.w	802078c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020526:	b212      	sxth	r2, r2
 8020528:	fb05 0002 	mla	r0, r5, r2, r0
 802052c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802052e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8020532:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020536:	182e      	adds	r6, r5, r0
 8020538:	eb04 050a 	add.w	r5, r4, sl
 802053c:	2b00      	cmp	r3, #0
 802053e:	f000 8117 	beq.w	8020770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8020542:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020546:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802054a:	44a4      	add	ip, r4
 802054c:	2900      	cmp	r1, #0
 802054e:	f000 8117 	beq.w	8020780 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8020552:	18b0      	adds	r0, r6, r2
 8020554:	5cb2      	ldrb	r2, [r6, r2]
 8020556:	7840      	ldrb	r0, [r0, #1]
 8020558:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802055c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020560:	4422      	add	r2, r4
 8020562:	4420      	add	r0, r4
 8020564:	b29b      	uxth	r3, r3
 8020566:	b289      	uxth	r1, r1
 8020568:	fb03 f901 	mul.w	r9, r3, r1
 802056c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020570:	011b      	lsls	r3, r3, #4
 8020572:	b289      	uxth	r1, r1
 8020574:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020578:	f895 b002 	ldrb.w	fp, [r5, #2]
 802057c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802057e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020582:	f8b6 e000 	ldrh.w	lr, [r6]
 8020586:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 802058a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802058e:	eba3 0309 	sub.w	r3, r3, r9
 8020592:	b29b      	uxth	r3, r3
 8020594:	eba8 0801 	sub.w	r8, r8, r1
 8020598:	fa1f f888 	uxth.w	r8, r8
 802059c:	435f      	muls	r7, r3
 802059e:	fb08 770b 	mla	r7, r8, fp, r7
 80205a2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80205a6:	9310      	str	r3, [sp, #64]	; 0x40
 80205a8:	fb01 770b 	mla	r7, r1, fp, r7
 80205ac:	f890 b002 	ldrb.w	fp, [r0, #2]
 80205b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80205b2:	fb09 770b 	mla	r7, r9, fp, r7
 80205b6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80205ba:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80205be:	fb1b fb03 	smulbb	fp, fp, r3
 80205c2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80205c6:	fb07 b706 	mla	r7, r7, r6, fp
 80205ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80205cc:	f895 b001 	ldrb.w	fp, [r5, #1]
 80205d0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80205d4:	f89c c000 	ldrb.w	ip, [ip]
 80205d8:	435d      	muls	r5, r3
 80205da:	fb08 550b 	mla	r5, r8, fp, r5
 80205de:	f892 b001 	ldrb.w	fp, [r2, #1]
 80205e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80205e4:	fb01 550b 	mla	r5, r1, fp, r5
 80205e8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80205ec:	fb09 550b 	mla	r5, r9, fp, r5
 80205f0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80205f4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80205f8:	fb1b fb03 	smulbb	fp, fp, r3
 80205fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80205fe:	fb03 f30c 	mul.w	r3, r3, ip
 8020602:	f892 c000 	ldrb.w	ip, [r2]
 8020606:	fb08 330a 	mla	r3, r8, sl, r3
 802060a:	fb01 330c 	mla	r3, r1, ip, r3
 802060e:	f890 c000 	ldrb.w	ip, [r0]
 8020612:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020616:	fb09 3c0c 	mla	ip, r9, ip, r3
 802061a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802061c:	fa5f fe8e 	uxtb.w	lr, lr
 8020620:	b2bf      	uxth	r7, r7
 8020622:	fb1e fe03 	smulbb	lr, lr, r3
 8020626:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802062a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802062e:	fb05 b506 	mla	r5, r5, r6, fp
 8020632:	1c7b      	adds	r3, r7, #1
 8020634:	fb0c e606 	mla	r6, ip, r6, lr
 8020638:	b2ad      	uxth	r5, r5
 802063a:	b2b6      	uxth	r6, r6
 802063c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020640:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8020644:	f105 0b01 	add.w	fp, r5, #1
 8020648:	1c77      	adds	r7, r6, #1
 802064a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802064e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020652:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020656:	096d      	lsrs	r5, r5, #5
 8020658:	431f      	orrs	r7, r3
 802065a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802065e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020660:	433d      	orrs	r5, r7
 8020662:	801d      	strh	r5, [r3, #0]
 8020664:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020666:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020668:	3302      	adds	r3, #2
 802066a:	930c      	str	r3, [sp, #48]	; 0x30
 802066c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802066e:	4413      	add	r3, r2
 8020670:	931f      	str	r3, [sp, #124]	; 0x7c
 8020672:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020674:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020676:	4413      	add	r3, r2
 8020678:	9320      	str	r3, [sp, #128]	; 0x80
 802067a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802067c:	3b01      	subs	r3, #1
 802067e:	9311      	str	r3, [sp, #68]	; 0x44
 8020680:	e732      	b.n	80204e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020682:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020684:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020686:	4433      	add	r3, r6
 8020688:	931f      	str	r3, [sp, #124]	; 0x7c
 802068a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 802068c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802068e:	4433      	add	r3, r6
 8020690:	9320      	str	r3, [sp, #128]	; 0x80
 8020692:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020694:	3b01      	subs	r3, #1
 8020696:	9309      	str	r3, [sp, #36]	; 0x24
 8020698:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802069a:	3302      	adds	r3, #2
 802069c:	930a      	str	r3, [sp, #40]	; 0x28
 802069e:	e702      	b.n	80204a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80206a0:	d027      	beq.n	80206f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80206a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206a4:	9821      	ldr	r0, [sp, #132]	; 0x84
 80206a6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80206a8:	3b01      	subs	r3, #1
 80206aa:	fb00 5003 	mla	r0, r0, r3, r5
 80206ae:	1400      	asrs	r0, r0, #16
 80206b0:	f53f af16 	bmi.w	80204e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80206b4:	3901      	subs	r1, #1
 80206b6:	4288      	cmp	r0, r1
 80206b8:	f6bf af12 	bge.w	80204e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80206bc:	9922      	ldr	r1, [sp, #136]	; 0x88
 80206be:	9820      	ldr	r0, [sp, #128]	; 0x80
 80206c0:	fb01 0303 	mla	r3, r1, r3, r0
 80206c4:	141b      	asrs	r3, r3, #16
 80206c6:	f53f af0b 	bmi.w	80204e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80206ca:	3a01      	subs	r2, #1
 80206cc:	4293      	cmp	r3, r2
 80206ce:	f6bf af07 	bge.w	80204e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80206d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206d4:	9311      	str	r3, [sp, #68]	; 0x44
 80206d6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80206da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80206dc:	930c      	str	r3, [sp, #48]	; 0x30
 80206de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80206e0:	2b00      	cmp	r3, #0
 80206e2:	dc70      	bgt.n	80207c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80206e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80206e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80206ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80206f0:	930a      	str	r3, [sp, #40]	; 0x28
 80206f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80206f4:	2b00      	cmp	r3, #0
 80206f6:	f340 8124 	ble.w	8020942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80206fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80206fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020702:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020706:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020708:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802070c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020710:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020714:	eef0 6a62 	vmov.f32	s13, s5
 8020718:	ee61 7a27 	vmul.f32	s15, s2, s15
 802071c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020720:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020724:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020728:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802072c:	eef0 6a43 	vmov.f32	s13, s6
 8020730:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020734:	ee12 2a90 	vmov	r2, s5
 8020738:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802073c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020740:	ee13 2a10 	vmov	r2, s6
 8020744:	9321      	str	r3, [sp, #132]	; 0x84
 8020746:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020748:	fb92 f3f3 	sdiv	r3, r2, r3
 802074c:	9322      	str	r3, [sp, #136]	; 0x88
 802074e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020750:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020752:	3b01      	subs	r3, #1
 8020754:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020758:	930e      	str	r3, [sp, #56]	; 0x38
 802075a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802075c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020760:	bf08      	it	eq
 8020762:	4613      	moveq	r3, r2
 8020764:	9309      	str	r3, [sp, #36]	; 0x24
 8020766:	eeb0 3a67 	vmov.f32	s6, s15
 802076a:	eef0 2a47 	vmov.f32	s5, s14
 802076e:	e68c      	b.n	802048a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020770:	b149      	cbz	r1, 8020786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020772:	5cb2      	ldrb	r2, [r6, r2]
 8020774:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020778:	4422      	add	r2, r4
 802077a:	4628      	mov	r0, r5
 802077c:	46ac      	mov	ip, r5
 802077e:	e6f1      	b.n	8020564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020780:	4628      	mov	r0, r5
 8020782:	462a      	mov	r2, r5
 8020784:	e6ee      	b.n	8020564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020786:	4628      	mov	r0, r5
 8020788:	462a      	mov	r2, r5
 802078a:	e7f7      	b.n	802077c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802078c:	1c47      	adds	r7, r0, #1
 802078e:	f53f af69 	bmi.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020792:	42ba      	cmp	r2, r7
 8020794:	f6ff af66 	blt.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020798:	1c6f      	adds	r7, r5, #1
 802079a:	f53f af63 	bmi.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802079e:	42be      	cmp	r6, r7
 80207a0:	f6ff af60 	blt.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80207a4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80207a6:	9002      	str	r0, [sp, #8]
 80207a8:	b236      	sxth	r6, r6
 80207aa:	b212      	sxth	r2, r2
 80207ac:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80207b0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80207b4:	9200      	str	r2, [sp, #0]
 80207b6:	9601      	str	r6, [sp, #4]
 80207b8:	4623      	mov	r3, r4
 80207ba:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80207be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80207c0:	f7ff fd59 	bl	8020276 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80207c4:	e74e      	b.n	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80207c6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80207c8:	9820      	ldr	r0, [sp, #128]	; 0x80
 80207ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80207cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80207ce:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80207d2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80207d4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80207d8:	142d      	asrs	r5, r5, #16
 80207da:	1400      	asrs	r0, r0, #16
 80207dc:	fb02 5000 	mla	r0, r2, r0, r5
 80207e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80207e2:	f815 9000 	ldrb.w	r9, [r5, r0]
 80207e6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80207ea:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80207ee:	182e      	adds	r6, r5, r0
 80207f0:	eb04 0509 	add.w	r5, r4, r9
 80207f4:	2b00      	cmp	r3, #0
 80207f6:	f000 8096 	beq.w	8020926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80207fa:	7877      	ldrb	r7, [r6, #1]
 80207fc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020800:	4427      	add	r7, r4
 8020802:	2900      	cmp	r1, #0
 8020804:	f000 8097 	beq.w	8020936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020808:	18b0      	adds	r0, r6, r2
 802080a:	5cb2      	ldrb	r2, [r6, r2]
 802080c:	7840      	ldrb	r0, [r0, #1]
 802080e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020812:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020816:	4422      	add	r2, r4
 8020818:	4420      	add	r0, r4
 802081a:	b29b      	uxth	r3, r3
 802081c:	b289      	uxth	r1, r1
 802081e:	fb03 f801 	mul.w	r8, r3, r1
 8020822:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020824:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020828:	f8b6 c000 	ldrh.w	ip, [r6]
 802082c:	78be      	ldrb	r6, [r7, #2]
 802082e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020832:	011b      	lsls	r3, r3, #4
 8020834:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020838:	b289      	uxth	r1, r1
 802083a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802083e:	eba3 0308 	sub.w	r3, r3, r8
 8020842:	b29b      	uxth	r3, r3
 8020844:	ebae 0e01 	sub.w	lr, lr, r1
 8020848:	fa1f fe8e 	uxth.w	lr, lr
 802084c:	435e      	muls	r6, r3
 802084e:	fb0e 660b 	mla	r6, lr, fp, r6
 8020852:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020856:	9310      	str	r3, [sp, #64]	; 0x40
 8020858:	fb01 660b 	mla	r6, r1, fp, r6
 802085c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020860:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020862:	fb08 660b 	mla	r6, r8, fp, r6
 8020866:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802086a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802086e:	fb1b fb03 	smulbb	fp, fp, r3
 8020872:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020876:	fb06 b60a 	mla	r6, r6, sl, fp
 802087a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802087c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020880:	787d      	ldrb	r5, [r7, #1]
 8020882:	783f      	ldrb	r7, [r7, #0]
 8020884:	435d      	muls	r5, r3
 8020886:	fb0e 550b 	mla	r5, lr, fp, r5
 802088a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802088e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020890:	fb01 550b 	mla	r5, r1, fp, r5
 8020894:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020898:	fb08 550b 	mla	r5, r8, fp, r5
 802089c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80208a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80208a4:	fb1b fb03 	smulbb	fp, fp, r3
 80208a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80208aa:	437b      	muls	r3, r7
 80208ac:	7817      	ldrb	r7, [r2, #0]
 80208ae:	fb0e 3309 	mla	r3, lr, r9, r3
 80208b2:	fb01 3307 	mla	r3, r1, r7, r3
 80208b6:	7807      	ldrb	r7, [r0, #0]
 80208b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80208bc:	fb08 3707 	mla	r7, r8, r7, r3
 80208c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80208c2:	fa5f fc8c 	uxtb.w	ip, ip
 80208c6:	fb1c fc03 	smulbb	ip, ip, r3
 80208ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80208ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80208d2:	fb05 b50a 	mla	r5, r5, sl, fp
 80208d6:	fb07 c70a 	mla	r7, r7, sl, ip
 80208da:	b2b6      	uxth	r6, r6
 80208dc:	b2ad      	uxth	r5, r5
 80208de:	b2bf      	uxth	r7, r7
 80208e0:	1c73      	adds	r3, r6, #1
 80208e2:	1c7a      	adds	r2, r7, #1
 80208e4:	f105 0b01 	add.w	fp, r5, #1
 80208e8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80208ec:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80208f0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80208f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80208f8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80208fc:	096d      	lsrs	r5, r5, #5
 80208fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020900:	4316      	orrs	r6, r2
 8020902:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020906:	432e      	orrs	r6, r5
 8020908:	f823 6b02 	strh.w	r6, [r3], #2
 802090c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802090e:	930c      	str	r3, [sp, #48]	; 0x30
 8020910:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020912:	4413      	add	r3, r2
 8020914:	931f      	str	r3, [sp, #124]	; 0x7c
 8020916:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020918:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802091a:	4413      	add	r3, r2
 802091c:	9320      	str	r3, [sp, #128]	; 0x80
 802091e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020920:	3b01      	subs	r3, #1
 8020922:	9311      	str	r3, [sp, #68]	; 0x44
 8020924:	e6db      	b.n	80206de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020926:	b149      	cbz	r1, 802093c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020928:	5cb2      	ldrb	r2, [r6, r2]
 802092a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802092e:	4422      	add	r2, r4
 8020930:	4628      	mov	r0, r5
 8020932:	462f      	mov	r7, r5
 8020934:	e771      	b.n	802081a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020936:	4628      	mov	r0, r5
 8020938:	462a      	mov	r2, r5
 802093a:	e76e      	b.n	802081a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802093c:	4628      	mov	r0, r5
 802093e:	462a      	mov	r2, r5
 8020940:	e7f7      	b.n	8020932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020942:	b015      	add	sp, #84	; 0x54
 8020944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020948 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020948:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802094c:	880f      	ldrh	r7, [r1, #0]
 802094e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020952:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020956:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 802095a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802095e:	023c      	lsls	r4, r7, #8
 8020960:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020964:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020968:	017c      	lsls	r4, r7, #5
 802096a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802096e:	00ff      	lsls	r7, r7, #3
 8020970:	ea4b 0404 	orr.w	r4, fp, r4
 8020974:	b2ff      	uxtb	r7, r7
 8020976:	fb05 ca0e 	mla	sl, r5, lr, ip
 802097a:	4327      	orrs	r7, r4
 802097c:	2d00      	cmp	r5, #0
 802097e:	eb02 080a 	add.w	r8, r2, sl
 8020982:	9701      	str	r7, [sp, #4]
 8020984:	db7e      	blt.n	8020a84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020986:	45a9      	cmp	r9, r5
 8020988:	dd7c      	ble.n	8020a84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802098a:	f1bc 0f00 	cmp.w	ip, #0
 802098e:	db77      	blt.n	8020a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020990:	45e6      	cmp	lr, ip
 8020992:	dd75      	ble.n	8020a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020994:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020998:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802099c:	441f      	add	r7, r3
 802099e:	f11c 0201 	adds.w	r2, ip, #1
 80209a2:	d472      	bmi.n	8020a8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80209a4:	4596      	cmp	lr, r2
 80209a6:	dd70      	ble.n	8020a8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80209a8:	2800      	cmp	r0, #0
 80209aa:	d06e      	beq.n	8020a8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80209ac:	f898 4001 	ldrb.w	r4, [r8, #1]
 80209b0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80209b4:	441c      	add	r4, r3
 80209b6:	3501      	adds	r5, #1
 80209b8:	d46b      	bmi.n	8020a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80209ba:	45a9      	cmp	r9, r5
 80209bc:	dd69      	ble.n	8020a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80209be:	2e00      	cmp	r6, #0
 80209c0:	d067      	beq.n	8020a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80209c2:	f1bc 0f00 	cmp.w	ip, #0
 80209c6:	db62      	blt.n	8020a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80209c8:	45e6      	cmp	lr, ip
 80209ca:	dd60      	ble.n	8020a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80209cc:	f818 500e 	ldrb.w	r5, [r8, lr]
 80209d0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80209d4:	441d      	add	r5, r3
 80209d6:	f11c 0201 	adds.w	r2, ip, #1
 80209da:	d45d      	bmi.n	8020a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80209dc:	4596      	cmp	lr, r2
 80209de:	dd5b      	ble.n	8020a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80209e0:	2800      	cmp	r0, #0
 80209e2:	d059      	beq.n	8020a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80209e4:	44c6      	add	lr, r8
 80209e6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80209ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80209ee:	4413      	add	r3, r2
 80209f0:	b280      	uxth	r0, r0
 80209f2:	b2b2      	uxth	r2, r6
 80209f4:	fb00 f602 	mul.w	r6, r0, r2
 80209f8:	0100      	lsls	r0, r0, #4
 80209fa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80209fe:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020a02:	1b80      	subs	r0, r0, r6
 8020a04:	fa1f fc82 	uxth.w	ip, r2
 8020a08:	b282      	uxth	r2, r0
 8020a0a:	78a0      	ldrb	r0, [r4, #2]
 8020a0c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020a10:	f897 9000 	ldrb.w	r9, [r7]
 8020a14:	787f      	ldrb	r7, [r7, #1]
 8020a16:	eba8 080c 	sub.w	r8, r8, ip
 8020a1a:	fa1f f888 	uxth.w	r8, r8
 8020a1e:	4350      	muls	r0, r2
 8020a20:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020a24:	78a8      	ldrb	r0, [r5, #2]
 8020a26:	fb0c e000 	mla	r0, ip, r0, lr
 8020a2a:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020a2e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020a32:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020a36:	f894 e000 	ldrb.w	lr, [r4]
 8020a3a:	fb02 fe0e 	mul.w	lr, r2, lr
 8020a3e:	fb08 e909 	mla	r9, r8, r9, lr
 8020a42:	f895 e000 	ldrb.w	lr, [r5]
 8020a46:	fb0c 990e 	mla	r9, ip, lr, r9
 8020a4a:	f893 e000 	ldrb.w	lr, [r3]
 8020a4e:	785b      	ldrb	r3, [r3, #1]
 8020a50:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020a54:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020a58:	ea4e 0e00 	orr.w	lr, lr, r0
 8020a5c:	7860      	ldrb	r0, [r4, #1]
 8020a5e:	4350      	muls	r0, r2
 8020a60:	786a      	ldrb	r2, [r5, #1]
 8020a62:	fb08 0007 	mla	r0, r8, r7, r0
 8020a66:	fb0c 0202 	mla	r2, ip, r2, r0
 8020a6a:	fb06 2303 	mla	r3, r6, r3, r2
 8020a6e:	095b      	lsrs	r3, r3, #5
 8020a70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a74:	ea4e 0303 	orr.w	r3, lr, r3
 8020a78:	800b      	strh	r3, [r1, #0]
 8020a7a:	b003      	add	sp, #12
 8020a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a80:	af01      	add	r7, sp, #4
 8020a82:	e78c      	b.n	802099e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020a84:	ac01      	add	r4, sp, #4
 8020a86:	4627      	mov	r7, r4
 8020a88:	e795      	b.n	80209b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020a8a:	ac01      	add	r4, sp, #4
 8020a8c:	e793      	b.n	80209b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020a8e:	ad01      	add	r5, sp, #4
 8020a90:	e7a1      	b.n	80209d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020a92:	ab01      	add	r3, sp, #4
 8020a94:	461d      	mov	r5, r3
 8020a96:	e7ab      	b.n	80209f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020a98:	ab01      	add	r3, sp, #4
 8020a9a:	e7a9      	b.n	80209f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020aa0:	b08f      	sub	sp, #60	; 0x3c
 8020aa2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020aa6:	920c      	str	r2, [sp, #48]	; 0x30
 8020aa8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020aaa:	910a      	str	r1, [sp, #40]	; 0x28
 8020aac:	9306      	str	r3, [sp, #24]
 8020aae:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020ab2:	900d      	str	r0, [sp, #52]	; 0x34
 8020ab4:	6850      	ldr	r0, [r2, #4]
 8020ab6:	6812      	ldr	r2, [r2, #0]
 8020ab8:	fb00 1303 	mla	r3, r0, r3, r1
 8020abc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020ac0:	9307      	str	r3, [sp, #28]
 8020ac2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020ac4:	681b      	ldr	r3, [r3, #0]
 8020ac6:	9308      	str	r3, [sp, #32]
 8020ac8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020aca:	685c      	ldr	r4, [r3, #4]
 8020acc:	3404      	adds	r4, #4
 8020ace:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ad0:	2b00      	cmp	r3, #0
 8020ad2:	dc03      	bgt.n	8020adc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020ad4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ad6:	2b00      	cmp	r3, #0
 8020ad8:	f340 81d6 	ble.w	8020e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020adc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020ade:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ae2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020ae6:	1e48      	subs	r0, r1, #1
 8020ae8:	1e56      	subs	r6, r2, #1
 8020aea:	9b06      	ldr	r3, [sp, #24]
 8020aec:	2b00      	cmp	r3, #0
 8020aee:	f340 80b7 	ble.w	8020c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020af2:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020af6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020afa:	d406      	bmi.n	8020b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020afc:	4287      	cmp	r7, r0
 8020afe:	da04      	bge.n	8020b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b00:	2b00      	cmp	r3, #0
 8020b02:	db02      	blt.n	8020b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b04:	42b3      	cmp	r3, r6
 8020b06:	f2c0 80ac 	blt.w	8020c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020b0a:	3701      	adds	r7, #1
 8020b0c:	f100 809d 	bmi.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020b10:	42b9      	cmp	r1, r7
 8020b12:	f2c0 809a 	blt.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020b16:	3301      	adds	r3, #1
 8020b18:	f100 8097 	bmi.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020b1c:	429a      	cmp	r2, r3
 8020b1e:	f2c0 8094 	blt.w	8020c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020b22:	9b06      	ldr	r3, [sp, #24]
 8020b24:	930b      	str	r3, [sp, #44]	; 0x2c
 8020b26:	9b07      	ldr	r3, [sp, #28]
 8020b28:	9309      	str	r3, [sp, #36]	; 0x24
 8020b2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020b2c:	2b00      	cmp	r3, #0
 8020b2e:	f340 80b5 	ble.w	8020c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020b32:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020b34:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020b36:	68c7      	ldr	r7, [r0, #12]
 8020b38:	6892      	ldr	r2, [r2, #8]
 8020b3a:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020b3e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020b42:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020b46:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020b4a:	f100 80fb 	bmi.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020b4e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020b52:	4560      	cmp	r0, ip
 8020b54:	f280 80f6 	bge.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020b58:	2e00      	cmp	r6, #0
 8020b5a:	f2c0 80f3 	blt.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020b5e:	f107 3cff 	add.w	ip, r7, #4294967295
 8020b62:	4566      	cmp	r6, ip
 8020b64:	f280 80ee 	bge.w	8020d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020b68:	b212      	sxth	r2, r2
 8020b6a:	fb06 0002 	mla	r0, r6, r2, r0
 8020b6e:	9e08      	ldr	r6, [sp, #32]
 8020b70:	1837      	adds	r7, r6, r0
 8020b72:	5c30      	ldrb	r0, [r6, r0]
 8020b74:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020b78:	eb04 0c08 	add.w	ip, r4, r8
 8020b7c:	2b00      	cmp	r3, #0
 8020b7e:	f000 80d3 	beq.w	8020d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020b82:	787e      	ldrb	r6, [r7, #1]
 8020b84:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020b88:	4426      	add	r6, r4
 8020b8a:	2900      	cmp	r1, #0
 8020b8c:	f000 80d4 	beq.w	8020d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020b90:	18b8      	adds	r0, r7, r2
 8020b92:	5cba      	ldrb	r2, [r7, r2]
 8020b94:	7840      	ldrb	r0, [r0, #1]
 8020b96:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020b9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020b9e:	4422      	add	r2, r4
 8020ba0:	4420      	add	r0, r4
 8020ba2:	b29b      	uxth	r3, r3
 8020ba4:	b289      	uxth	r1, r1
 8020ba6:	fb03 f901 	mul.w	r9, r3, r1
 8020baa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020bae:	011b      	lsls	r3, r3, #4
 8020bb0:	b289      	uxth	r1, r1
 8020bb2:	78b7      	ldrb	r7, [r6, #2]
 8020bb4:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020bb8:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020bbc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020bc0:	eba3 0309 	sub.w	r3, r3, r9
 8020bc4:	b29b      	uxth	r3, r3
 8020bc6:	ebae 0e01 	sub.w	lr, lr, r1
 8020bca:	fa1f fe8e 	uxth.w	lr, lr
 8020bce:	435f      	muls	r7, r3
 8020bd0:	fb0e 770a 	mla	r7, lr, sl, r7
 8020bd4:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020bd8:	fb01 770a 	mla	r7, r1, sl, r7
 8020bdc:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020be0:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020be4:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020be8:	f896 8000 	ldrb.w	r8, [r6]
 8020bec:	7876      	ldrb	r6, [r6, #1]
 8020bee:	fb03 f808 	mul.w	r8, r3, r8
 8020bf2:	fb0e 8807 	mla	r8, lr, r7, r8
 8020bf6:	7817      	ldrb	r7, [r2, #0]
 8020bf8:	fb01 8807 	mla	r8, r1, r7, r8
 8020bfc:	7807      	ldrb	r7, [r0, #0]
 8020bfe:	fb09 8707 	mla	r7, r9, r7, r8
 8020c02:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020c06:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020c0a:	ea47 070a 	orr.w	r7, r7, sl
 8020c0e:	4373      	muls	r3, r6
 8020c10:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020c14:	fb0e 330c 	mla	r3, lr, ip, r3
 8020c18:	fb01 310a 	mla	r1, r1, sl, r3
 8020c1c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c22:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020c26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020c2a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020c2e:	ea47 070a 	orr.w	r7, r7, sl
 8020c32:	801f      	strh	r7, [r3, #0]
 8020c34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c36:	3302      	adds	r3, #2
 8020c38:	9309      	str	r3, [sp, #36]	; 0x24
 8020c3a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020c3c:	449b      	add	fp, r3
 8020c3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c40:	441d      	add	r5, r3
 8020c42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020c44:	3b01      	subs	r3, #1
 8020c46:	930b      	str	r3, [sp, #44]	; 0x2c
 8020c48:	e76f      	b.n	8020b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020c4a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020c4c:	449b      	add	fp, r3
 8020c4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c50:	441d      	add	r5, r3
 8020c52:	9b06      	ldr	r3, [sp, #24]
 8020c54:	3b01      	subs	r3, #1
 8020c56:	9306      	str	r3, [sp, #24]
 8020c58:	9b07      	ldr	r3, [sp, #28]
 8020c5a:	3302      	adds	r3, #2
 8020c5c:	9307      	str	r3, [sp, #28]
 8020c5e:	e744      	b.n	8020aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020c60:	d023      	beq.n	8020caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020c62:	9b06      	ldr	r3, [sp, #24]
 8020c64:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020c66:	3b01      	subs	r3, #1
 8020c68:	fb00 b003 	mla	r0, r0, r3, fp
 8020c6c:	1400      	asrs	r0, r0, #16
 8020c6e:	f53f af58 	bmi.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020c72:	3901      	subs	r1, #1
 8020c74:	4288      	cmp	r0, r1
 8020c76:	f6bf af54 	bge.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020c7a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020c7c:	fb01 5303 	mla	r3, r1, r3, r5
 8020c80:	141b      	asrs	r3, r3, #16
 8020c82:	f53f af4e 	bmi.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020c86:	3a01      	subs	r2, #1
 8020c88:	4293      	cmp	r3, r2
 8020c8a:	f6bf af4a 	bge.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020c8e:	9b06      	ldr	r3, [sp, #24]
 8020c90:	9309      	str	r3, [sp, #36]	; 0x24
 8020c92:	9b07      	ldr	r3, [sp, #28]
 8020c94:	930b      	str	r3, [sp, #44]	; 0x2c
 8020c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c98:	2b00      	cmp	r3, #0
 8020c9a:	dc70      	bgt.n	8020d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020c9c:	9b06      	ldr	r3, [sp, #24]
 8020c9e:	9a07      	ldr	r2, [sp, #28]
 8020ca0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020ca4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020ca8:	9307      	str	r3, [sp, #28]
 8020caa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020cac:	2b00      	cmp	r3, #0
 8020cae:	f340 80eb 	ble.w	8020e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020cb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cb6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020cba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cbe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020cc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020ccc:	eef0 6a62 	vmov.f32	s13, s5
 8020cd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020cd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cdc:	ee16 ba90 	vmov	fp, s13
 8020ce0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ce4:	eef0 6a43 	vmov.f32	s13, s6
 8020ce8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020cec:	ee12 2a90 	vmov	r2, s5
 8020cf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cf4:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cf8:	ee13 2a10 	vmov	r2, s6
 8020cfc:	931b      	str	r3, [sp, #108]	; 0x6c
 8020cfe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d00:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d04:	931c      	str	r3, [sp, #112]	; 0x70
 8020d06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020d0a:	3b01      	subs	r3, #1
 8020d0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d10:	930a      	str	r3, [sp, #40]	; 0x28
 8020d12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d14:	bf08      	it	eq
 8020d16:	4613      	moveq	r3, r2
 8020d18:	ee16 5a90 	vmov	r5, s13
 8020d1c:	9306      	str	r3, [sp, #24]
 8020d1e:	eeb0 3a67 	vmov.f32	s6, s15
 8020d22:	eef0 2a47 	vmov.f32	s5, s14
 8020d26:	e6d2      	b.n	8020ace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020d28:	b149      	cbz	r1, 8020d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020d2a:	5cba      	ldrb	r2, [r7, r2]
 8020d2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020d30:	4422      	add	r2, r4
 8020d32:	4660      	mov	r0, ip
 8020d34:	4666      	mov	r6, ip
 8020d36:	e734      	b.n	8020ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020d38:	4660      	mov	r0, ip
 8020d3a:	4662      	mov	r2, ip
 8020d3c:	e731      	b.n	8020ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020d3e:	4660      	mov	r0, ip
 8020d40:	4662      	mov	r2, ip
 8020d42:	e7f7      	b.n	8020d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020d44:	f110 0c01 	adds.w	ip, r0, #1
 8020d48:	f53f af74 	bmi.w	8020c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020d4c:	4562      	cmp	r2, ip
 8020d4e:	f6ff af71 	blt.w	8020c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020d52:	f116 0c01 	adds.w	ip, r6, #1
 8020d56:	f53f af6d 	bmi.w	8020c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020d5a:	4567      	cmp	r7, ip
 8020d5c:	f6ff af6a 	blt.w	8020c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020d60:	b23f      	sxth	r7, r7
 8020d62:	b212      	sxth	r2, r2
 8020d64:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020d68:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020d6c:	9200      	str	r2, [sp, #0]
 8020d6e:	9701      	str	r7, [sp, #4]
 8020d70:	4623      	mov	r3, r4
 8020d72:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020d76:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020d78:	f7ff fde6 	bl	8020948 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020d7c:	e75a      	b.n	8020c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020d7e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020d80:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020d84:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020d88:	1428      	asrs	r0, r5, #16
 8020d8a:	fb02 6000 	mla	r0, r2, r0, r6
 8020d8e:	9e08      	ldr	r6, [sp, #32]
 8020d90:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020d94:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020d98:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020d9c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020da0:	1837      	adds	r7, r6, r0
 8020da2:	eb04 0c08 	add.w	ip, r4, r8
 8020da6:	2b00      	cmp	r3, #0
 8020da8:	d060      	beq.n	8020e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020daa:	787e      	ldrb	r6, [r7, #1]
 8020dac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020db0:	4426      	add	r6, r4
 8020db2:	2900      	cmp	r1, #0
 8020db4:	d062      	beq.n	8020e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020db6:	18b8      	adds	r0, r7, r2
 8020db8:	5cba      	ldrb	r2, [r7, r2]
 8020dba:	7840      	ldrb	r0, [r0, #1]
 8020dbc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020dc0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020dc4:	4422      	add	r2, r4
 8020dc6:	4420      	add	r0, r4
 8020dc8:	b29b      	uxth	r3, r3
 8020dca:	b289      	uxth	r1, r1
 8020dcc:	fb03 f901 	mul.w	r9, r3, r1
 8020dd0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020dd4:	011b      	lsls	r3, r3, #4
 8020dd6:	b289      	uxth	r1, r1
 8020dd8:	78b7      	ldrb	r7, [r6, #2]
 8020dda:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020dde:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020de2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020de6:	eba3 0309 	sub.w	r3, r3, r9
 8020dea:	b29b      	uxth	r3, r3
 8020dec:	ebae 0e01 	sub.w	lr, lr, r1
 8020df0:	fa1f fe8e 	uxth.w	lr, lr
 8020df4:	435f      	muls	r7, r3
 8020df6:	fb0e 770a 	mla	r7, lr, sl, r7
 8020dfa:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020dfe:	fb01 770a 	mla	r7, r1, sl, r7
 8020e02:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020e06:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020e0a:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020e0e:	f896 8000 	ldrb.w	r8, [r6]
 8020e12:	7876      	ldrb	r6, [r6, #1]
 8020e14:	fb03 f808 	mul.w	r8, r3, r8
 8020e18:	fb0e 8807 	mla	r8, lr, r7, r8
 8020e1c:	7817      	ldrb	r7, [r2, #0]
 8020e1e:	fb01 8807 	mla	r8, r1, r7, r8
 8020e22:	7807      	ldrb	r7, [r0, #0]
 8020e24:	fb09 8707 	mla	r7, r9, r7, r8
 8020e28:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020e2c:	4373      	muls	r3, r6
 8020e2e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020e32:	7856      	ldrb	r6, [r2, #1]
 8020e34:	ea47 070a 	orr.w	r7, r7, sl
 8020e38:	fb0e 330c 	mla	r3, lr, ip, r3
 8020e3c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020e40:	fb01 3306 	mla	r3, r1, r6, r3
 8020e44:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020e48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020e4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020e52:	ea47 070a 	orr.w	r7, r7, sl
 8020e56:	f823 7b02 	strh.w	r7, [r3], #2
 8020e5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8020e5c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020e5e:	449b      	add	fp, r3
 8020e60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020e62:	441d      	add	r5, r3
 8020e64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e66:	3b01      	subs	r3, #1
 8020e68:	9309      	str	r3, [sp, #36]	; 0x24
 8020e6a:	e714      	b.n	8020c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020e6c:	b149      	cbz	r1, 8020e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020e6e:	5cba      	ldrb	r2, [r7, r2]
 8020e70:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020e74:	4422      	add	r2, r4
 8020e76:	4660      	mov	r0, ip
 8020e78:	4666      	mov	r6, ip
 8020e7a:	e7a5      	b.n	8020dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020e7c:	4660      	mov	r0, ip
 8020e7e:	4662      	mov	r2, ip
 8020e80:	e7a2      	b.n	8020dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020e82:	4660      	mov	r0, ip
 8020e84:	4662      	mov	r2, ip
 8020e86:	e7f7      	b.n	8020e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020e88:	b00f      	add	sp, #60	; 0x3c
 8020e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020e8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e92:	b085      	sub	sp, #20
 8020e94:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020e98:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020e9c:	9102      	str	r1, [sp, #8]
 8020e9e:	2c00      	cmp	r4, #0
 8020ea0:	fb04 710c 	mla	r1, r4, ip, r7
 8020ea4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020ea8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020eac:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020eb0:	eb02 0e01 	add.w	lr, r2, r1
 8020eb4:	f2c0 8122 	blt.w	80210fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020eb8:	45a0      	cmp	r8, r4
 8020eba:	f340 811f 	ble.w	80210fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020ebe:	2f00      	cmp	r7, #0
 8020ec0:	f2c0 811a 	blt.w	80210f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020ec4:	45bc      	cmp	ip, r7
 8020ec6:	f340 8117 	ble.w	80210f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020eca:	5c52      	ldrb	r2, [r2, r1]
 8020ecc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020ed0:	1c7a      	adds	r2, r7, #1
 8020ed2:	f100 8116 	bmi.w	8021102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020ed6:	4594      	cmp	ip, r2
 8020ed8:	f340 8113 	ble.w	8021102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020edc:	2e00      	cmp	r6, #0
 8020ede:	f000 8112 	beq.w	8021106 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020ee2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020ee6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020eea:	3401      	adds	r4, #1
 8020eec:	f100 810f 	bmi.w	802110e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020ef0:	45a0      	cmp	r8, r4
 8020ef2:	f340 810c 	ble.w	802110e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020ef6:	2800      	cmp	r0, #0
 8020ef8:	f000 810c 	beq.w	8021114 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020efc:	2f00      	cmp	r7, #0
 8020efe:	f2c0 8104 	blt.w	802110a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020f02:	45bc      	cmp	ip, r7
 8020f04:	f340 8101 	ble.w	802110a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020f08:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020f0c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020f10:	3701      	adds	r7, #1
 8020f12:	f100 8102 	bmi.w	802111a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020f16:	45bc      	cmp	ip, r7
 8020f18:	f340 80ff 	ble.w	802111a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020f1c:	2e00      	cmp	r6, #0
 8020f1e:	f000 80fe 	beq.w	802111e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020f22:	44f4      	add	ip, lr
 8020f24:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020f28:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020f2c:	b2b6      	uxth	r6, r6
 8020f2e:	b280      	uxth	r0, r0
 8020f30:	fb00 fe06 	mul.w	lr, r0, r6
 8020f34:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020f38:	0136      	lsls	r6, r6, #4
 8020f3a:	eba6 070e 	sub.w	r7, r6, lr
 8020f3e:	b280      	uxth	r0, r0
 8020f40:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020f44:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020f48:	b2bf      	uxth	r7, r7
 8020f4a:	1a1b      	subs	r3, r3, r0
 8020f4c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020f50:	b29b      	uxth	r3, r3
 8020f52:	fb0a f607 	mul.w	r6, sl, r7
 8020f56:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020f5a:	fb0b 6603 	mla	r6, fp, r3, r6
 8020f5e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020f62:	fb00 6609 	mla	r6, r0, r9, r6
 8020f66:	fb0e 6608 	mla	r6, lr, r8, r6
 8020f6a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020f6e:	9600      	str	r6, [sp, #0]
 8020f70:	2e00      	cmp	r6, #0
 8020f72:	f000 80be 	beq.w	80210f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020f76:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020f7a:	fb0b fc0c 	mul.w	ip, fp, ip
 8020f7e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020f82:	fb0b f505 	mul.w	r5, fp, r5
 8020f86:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020f8a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020f8e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f92:	44dc      	add	ip, fp
 8020f94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f98:	9501      	str	r5, [sp, #4]
 8020f9a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020f9e:	9503      	str	r5, [sp, #12]
 8020fa0:	9d01      	ldr	r5, [sp, #4]
 8020fa2:	9e02      	ldr	r6, [sp, #8]
 8020fa4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020fa8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020fac:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020fb0:	fb0a fc0c 	mul.w	ip, sl, ip
 8020fb4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020fb8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020fbc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020fc0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020fc4:	4465      	add	r5, ip
 8020fc6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020fca:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020fce:	fb09 fc0c 	mul.w	ip, r9, ip
 8020fd2:	fb09 f904 	mul.w	r9, r9, r4
 8020fd6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8020fda:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020fde:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020fe2:	fb08 f404 	mul.w	r4, r8, r4
 8020fe6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020fea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020fee:	fb08 f802 	mul.w	r8, r8, r2
 8020ff2:	fb0a fa01 	mul.w	sl, sl, r1
 8020ff6:	0a22      	lsrs	r2, r4, #8
 8020ff8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020ffc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021000:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021004:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021008:	4414      	add	r4, r2
 802100a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802100e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021012:	0a2d      	lsrs	r5, r5, #8
 8021014:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021018:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802101c:	9a03      	ldr	r2, [sp, #12]
 802101e:	8836      	ldrh	r6, [r6, #0]
 8021020:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021024:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021028:	437d      	muls	r5, r7
 802102a:	4461      	add	r1, ip
 802102c:	0a24      	lsrs	r4, r4, #8
 802102e:	fb02 5503 	mla	r5, r2, r3, r5
 8021032:	0a09      	lsrs	r1, r1, #8
 8021034:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021038:	fb04 540e 	mla	r4, r4, lr, r5
 802103c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021040:	fb01 4100 	mla	r1, r1, r0, r4
 8021044:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021048:	0a09      	lsrs	r1, r1, #8
 802104a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802104e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021052:	fb07 f70a 	mul.w	r7, r7, sl
 8021056:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802105a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802105e:	fb03 7101 	mla	r1, r3, r1, r7
 8021062:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021066:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802106a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802106e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021072:	fb00 e101 	mla	r1, r0, r1, lr
 8021076:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802107a:	9a00      	ldr	r2, [sp, #0]
 802107c:	b287      	uxth	r7, r0
 802107e:	437a      	muls	r2, r7
 8021080:	0a09      	lsrs	r1, r1, #8
 8021082:	1c53      	adds	r3, r2, #1
 8021084:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021088:	4321      	orrs	r1, r4
 802108a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802108e:	1235      	asrs	r5, r6, #8
 8021090:	0c0a      	lsrs	r2, r1, #16
 8021092:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021096:	b2db      	uxtb	r3, r3
 8021098:	fb12 f207 	smulbb	r2, r2, r7
 802109c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80210a0:	fb05 2503 	mla	r5, r5, r3, r2
 80210a4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80210a8:	10f2      	asrs	r2, r6, #3
 80210aa:	b2c8      	uxtb	r0, r1
 80210ac:	00f6      	lsls	r6, r6, #3
 80210ae:	fb14 f407 	smulbb	r4, r4, r7
 80210b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80210b6:	b2f6      	uxtb	r6, r6
 80210b8:	fb10 f007 	smulbb	r0, r0, r7
 80210bc:	fb02 4203 	mla	r2, r2, r3, r4
 80210c0:	b2ad      	uxth	r5, r5
 80210c2:	fb06 0303 	mla	r3, r6, r3, r0
 80210c6:	b299      	uxth	r1, r3
 80210c8:	b294      	uxth	r4, r2
 80210ca:	1c6b      	adds	r3, r5, #1
 80210cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80210d0:	1c62      	adds	r2, r4, #1
 80210d2:	1c4b      	adds	r3, r1, #1
 80210d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80210d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80210dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80210e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80210e4:	0952      	lsrs	r2, r2, #5
 80210e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80210ea:	432b      	orrs	r3, r5
 80210ec:	4313      	orrs	r3, r2
 80210ee:	9a02      	ldr	r2, [sp, #8]
 80210f0:	8013      	strh	r3, [r2, #0]
 80210f2:	b005      	add	sp, #20
 80210f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210f8:	2500      	movs	r5, #0
 80210fa:	e6e9      	b.n	8020ed0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80210fc:	2100      	movs	r1, #0
 80210fe:	460d      	mov	r5, r1
 8021100:	e6f3      	b.n	8020eea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021102:	2100      	movs	r1, #0
 8021104:	e6f1      	b.n	8020eea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021106:	4631      	mov	r1, r6
 8021108:	e6ef      	b.n	8020eea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802110a:	2400      	movs	r4, #0
 802110c:	e700      	b.n	8020f10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802110e:	2200      	movs	r2, #0
 8021110:	4614      	mov	r4, r2
 8021112:	e70b      	b.n	8020f2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021114:	4602      	mov	r2, r0
 8021116:	4604      	mov	r4, r0
 8021118:	e708      	b.n	8020f2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802111a:	2200      	movs	r2, #0
 802111c:	e706      	b.n	8020f2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802111e:	4632      	mov	r2, r6
 8021120:	e704      	b.n	8020f2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021122 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021122:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021126:	b09f      	sub	sp, #124	; 0x7c
 8021128:	921b      	str	r2, [sp, #108]	; 0x6c
 802112a:	9309      	str	r3, [sp, #36]	; 0x24
 802112c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802112e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021132:	931c      	str	r3, [sp, #112]	; 0x70
 8021134:	9119      	str	r1, [sp, #100]	; 0x64
 8021136:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802113a:	901d      	str	r0, [sp, #116]	; 0x74
 802113c:	6850      	ldr	r0, [r2, #4]
 802113e:	6812      	ldr	r2, [r2, #0]
 8021140:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021142:	fb00 1303 	mla	r3, r0, r3, r1
 8021146:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802114a:	930c      	str	r3, [sp, #48]	; 0x30
 802114c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802114e:	681b      	ldr	r3, [r3, #0]
 8021150:	9312      	str	r3, [sp, #72]	; 0x48
 8021152:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021154:	685e      	ldr	r6, [r3, #4]
 8021156:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802115a:	930d      	str	r3, [sp, #52]	; 0x34
 802115c:	3604      	adds	r6, #4
 802115e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021160:	2b00      	cmp	r3, #0
 8021162:	dc03      	bgt.n	802116c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021164:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021166:	2b00      	cmp	r3, #0
 8021168:	f340 8388 	ble.w	802187c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802116c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802116e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021172:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021176:	1e48      	subs	r0, r1, #1
 8021178:	1e57      	subs	r7, r2, #1
 802117a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802117c:	2b00      	cmp	r3, #0
 802117e:	f340 8195 	ble.w	80214ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021182:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021184:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021188:	ea4f 4325 	mov.w	r3, r5, asr #16
 802118c:	d406      	bmi.n	802119c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802118e:	4584      	cmp	ip, r0
 8021190:	da04      	bge.n	802119c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021192:	2b00      	cmp	r3, #0
 8021194:	db02      	blt.n	802119c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021196:	42bb      	cmp	r3, r7
 8021198:	f2c0 8189 	blt.w	80214ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802119c:	f11c 0c01 	adds.w	ip, ip, #1
 80211a0:	f100 8177 	bmi.w	8021492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80211a4:	4561      	cmp	r1, ip
 80211a6:	f2c0 8174 	blt.w	8021492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80211aa:	3301      	adds	r3, #1
 80211ac:	f100 8171 	bmi.w	8021492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80211b0:	429a      	cmp	r2, r3
 80211b2:	f2c0 816e 	blt.w	8021492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80211b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80211b8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80211ba:	931a      	str	r3, [sp, #104]	; 0x68
 80211bc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80211be:	2b00      	cmp	r3, #0
 80211c0:	f340 8193 	ble.w	80214ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80211c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80211c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80211ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80211cc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80211d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80211d2:	141b      	asrs	r3, r3, #16
 80211d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80211d8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80211dc:	f100 81d6 	bmi.w	802158c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80211e0:	f100 38ff 	add.w	r8, r0, #4294967295
 80211e4:	4543      	cmp	r3, r8
 80211e6:	f280 81d1 	bge.w	802158c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80211ea:	f1bc 0f00 	cmp.w	ip, #0
 80211ee:	f2c0 81cd 	blt.w	802158c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80211f2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80211f6:	45c4      	cmp	ip, r8
 80211f8:	f280 81c8 	bge.w	802158c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80211fc:	b200      	sxth	r0, r0
 80211fe:	fb0c 3300 	mla	r3, ip, r0, r3
 8021202:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021204:	eb04 0803 	add.w	r8, r4, r3
 8021208:	5ce3      	ldrb	r3, [r4, r3]
 802120a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802120e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021212:	2a00      	cmp	r2, #0
 8021214:	f000 81af 	beq.w	8021576 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021218:	f898 c001 	ldrb.w	ip, [r8, #1]
 802121c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021220:	940e      	str	r4, [sp, #56]	; 0x38
 8021222:	0e24      	lsrs	r4, r4, #24
 8021224:	9415      	str	r4, [sp, #84]	; 0x54
 8021226:	b179      	cbz	r1, 8021248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021228:	eb08 0c00 	add.w	ip, r8, r0
 802122c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021230:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021234:	900a      	str	r0, [sp, #40]	; 0x28
 8021236:	0e00      	lsrs	r0, r0, #24
 8021238:	9013      	str	r0, [sp, #76]	; 0x4c
 802123a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802123e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021242:	900f      	str	r0, [sp, #60]	; 0x3c
 8021244:	0e00      	lsrs	r0, r0, #24
 8021246:	9016      	str	r0, [sp, #88]	; 0x58
 8021248:	b292      	uxth	r2, r2
 802124a:	b289      	uxth	r1, r1
 802124c:	fb02 f901 	mul.w	r9, r2, r1
 8021250:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021254:	0112      	lsls	r2, r2, #4
 8021256:	eba2 0809 	sub.w	r8, r2, r9
 802125a:	b289      	uxth	r1, r1
 802125c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021260:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021262:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021264:	fa1f f888 	uxth.w	r8, r8
 8021268:	1a52      	subs	r2, r2, r1
 802126a:	b292      	uxth	r2, r2
 802126c:	fb08 f000 	mul.w	r0, r8, r0
 8021270:	fb02 000e 	mla	r0, r2, lr, r0
 8021274:	fb01 0004 	mla	r0, r1, r4, r0
 8021278:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802127a:	fb09 0004 	mla	r0, r9, r4, r0
 802127e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021282:	2800      	cmp	r0, #0
 8021284:	f000 80fa 	beq.w	802147c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021288:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802128c:	d01b      	beq.n	80212c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802128e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021292:	fb0e fa0a 	mul.w	sl, lr, sl
 8021296:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802129a:	fb0e fe03 	mul.w	lr, lr, r3
 802129e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80212a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80212a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80212aa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80212ae:	4453      	add	r3, sl
 80212b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80212b4:	0a1b      	lsrs	r3, r3, #8
 80212b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80212be:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80212c2:	ea43 030c 	orr.w	r3, r3, ip
 80212c6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80212c8:	2cff      	cmp	r4, #255	; 0xff
 80212ca:	d021      	beq.n	8021310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80212cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80212ce:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80212d2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80212d4:	fb04 fb0b 	mul.w	fp, r4, fp
 80212d8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80212da:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80212de:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80212e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80212e4:	fb04 fa0a 	mul.w	sl, r4, sl
 80212e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80212ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80212f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80212f4:	44de      	add	lr, fp
 80212f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80212fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021302:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021306:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802130a:	ea4e 040a 	orr.w	r4, lr, sl
 802130e:	940e      	str	r4, [sp, #56]	; 0x38
 8021310:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021312:	2cff      	cmp	r4, #255	; 0xff
 8021314:	d021      	beq.n	802135a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021316:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021318:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802131c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802131e:	fb04 fb0b 	mul.w	fp, r4, fp
 8021322:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021324:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021328:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802132a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802132e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021332:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021336:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802133a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802133e:	44de      	add	lr, fp
 8021340:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021344:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021348:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802134c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021350:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021354:	ea4e 040a 	orr.w	r4, lr, sl
 8021358:	940a      	str	r4, [sp, #40]	; 0x28
 802135a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802135c:	2cff      	cmp	r4, #255	; 0xff
 802135e:	d021      	beq.n	80213a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021360:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021362:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021366:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021368:	fb04 fb0b 	mul.w	fp, r4, fp
 802136c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802136e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021372:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021374:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021378:	fb04 fa0a 	mul.w	sl, r4, sl
 802137c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021380:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021384:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021388:	44de      	add	lr, fp
 802138a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802138e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021392:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021396:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802139a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802139e:	ea4e 040a 	orr.w	r4, lr, sl
 80213a2:	940f      	str	r4, [sp, #60]	; 0x3c
 80213a4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80213a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80213aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80213ac:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80213b0:	fb08 fc0c 	mul.w	ip, r8, ip
 80213b4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80213b8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80213bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80213be:	fb01 cc0e 	mla	ip, r1, lr, ip
 80213c2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80213c6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80213c8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80213cc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80213d0:	fb08 f80e 	mul.w	r8, r8, lr
 80213d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80213d8:	fb02 8303 	mla	r3, r2, r3, r8
 80213dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80213de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80213e0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80213e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80213e6:	fb01 330a 	mla	r3, r1, sl, r3
 80213ea:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80213ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80213f0:	fb09 3901 	mla	r9, r9, r1, r3
 80213f4:	4342      	muls	r2, r0
 80213f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80213fe:	883b      	ldrh	r3, [r7, #0]
 8021400:	1c50      	adds	r0, r2, #1
 8021402:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021406:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802140a:	ea4c 0c09 	orr.w	ip, ip, r9
 802140e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021412:	1219      	asrs	r1, r3, #8
 8021414:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021418:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802141c:	b2c0      	uxtb	r0, r0
 802141e:	fb12 f204 	smulbb	r2, r2, r4
 8021422:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021426:	fb01 2100 	mla	r1, r1, r0, r2
 802142a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802142e:	10da      	asrs	r2, r3, #3
 8021430:	fa5f fc8c 	uxtb.w	ip, ip
 8021434:	00db      	lsls	r3, r3, #3
 8021436:	fb1c fc04 	smulbb	ip, ip, r4
 802143a:	b2db      	uxtb	r3, r3
 802143c:	b289      	uxth	r1, r1
 802143e:	fb03 c300 	mla	r3, r3, r0, ip
 8021442:	fa1f fc83 	uxth.w	ip, r3
 8021446:	1c4b      	adds	r3, r1, #1
 8021448:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802144c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021450:	fb1e fe04 	smulbb	lr, lr, r4
 8021454:	f10c 0301 	add.w	r3, ip, #1
 8021458:	fb02 e200 	mla	r2, r2, r0, lr
 802145c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021460:	b292      	uxth	r2, r2
 8021462:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021466:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802146a:	430b      	orrs	r3, r1
 802146c:	1c51      	adds	r1, r2, #1
 802146e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021472:	0952      	lsrs	r2, r2, #5
 8021474:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021478:	4313      	orrs	r3, r2
 802147a:	803b      	strh	r3, [r7, #0]
 802147c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802147e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021480:	441a      	add	r2, r3
 8021482:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021484:	9229      	str	r2, [sp, #164]	; 0xa4
 8021486:	441d      	add	r5, r3
 8021488:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802148a:	3b01      	subs	r3, #1
 802148c:	3702      	adds	r7, #2
 802148e:	931a      	str	r3, [sp, #104]	; 0x68
 8021490:	e694      	b.n	80211bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021492:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021494:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021496:	441c      	add	r4, r3
 8021498:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802149a:	9429      	str	r4, [sp, #164]	; 0xa4
 802149c:	441d      	add	r5, r3
 802149e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214a0:	3b01      	subs	r3, #1
 80214a2:	9309      	str	r3, [sp, #36]	; 0x24
 80214a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80214a6:	3302      	adds	r3, #2
 80214a8:	930c      	str	r3, [sp, #48]	; 0x30
 80214aa:	e666      	b.n	802117a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80214ac:	d024      	beq.n	80214f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80214ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214b0:	982b      	ldr	r0, [sp, #172]	; 0xac
 80214b2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80214b4:	3b01      	subs	r3, #1
 80214b6:	fb00 4003 	mla	r0, r0, r3, r4
 80214ba:	1400      	asrs	r0, r0, #16
 80214bc:	f53f ae7b 	bmi.w	80211b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80214c0:	3901      	subs	r1, #1
 80214c2:	4288      	cmp	r0, r1
 80214c4:	f6bf ae77 	bge.w	80211b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80214c8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80214ca:	fb01 5303 	mla	r3, r1, r3, r5
 80214ce:	141b      	asrs	r3, r3, #16
 80214d0:	f53f ae71 	bmi.w	80211b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80214d4:	3a01      	subs	r2, #1
 80214d6:	4293      	cmp	r3, r2
 80214d8:	f6bf ae6d 	bge.w	80211b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80214dc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80214e0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80214e4:	f1bb 0f00 	cmp.w	fp, #0
 80214e8:	dc70      	bgt.n	80215cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80214ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214ec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80214f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80214f2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80214f6:	930c      	str	r3, [sp, #48]	; 0x30
 80214f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80214fa:	2b00      	cmp	r3, #0
 80214fc:	f340 81be 	ble.w	802187c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021500:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021504:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021508:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802150c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802150e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021512:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021516:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802151a:	eef0 6a62 	vmov.f32	s13, s5
 802151e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021522:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021526:	ee77 2a62 	vsub.f32	s5, s14, s5
 802152a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802152e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021532:	eef0 6a43 	vmov.f32	s13, s6
 8021536:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802153a:	ee12 2a90 	vmov	r2, s5
 802153e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021542:	fb92 f3f3 	sdiv	r3, r2, r3
 8021546:	ee13 2a10 	vmov	r2, s6
 802154a:	932b      	str	r3, [sp, #172]	; 0xac
 802154c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802154e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021552:	932c      	str	r3, [sp, #176]	; 0xb0
 8021554:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021556:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021558:	3b01      	subs	r3, #1
 802155a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802155e:	9319      	str	r3, [sp, #100]	; 0x64
 8021560:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021562:	bf08      	it	eq
 8021564:	4613      	moveq	r3, r2
 8021566:	ee16 5a90 	vmov	r5, s13
 802156a:	9309      	str	r3, [sp, #36]	; 0x24
 802156c:	eeb0 3a67 	vmov.f32	s6, s15
 8021570:	eef0 2a47 	vmov.f32	s5, s14
 8021574:	e5f3      	b.n	802115e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021576:	2900      	cmp	r1, #0
 8021578:	f43f ae66 	beq.w	8021248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802157c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021580:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021584:	900a      	str	r0, [sp, #40]	; 0x28
 8021586:	0e00      	lsrs	r0, r0, #24
 8021588:	9013      	str	r0, [sp, #76]	; 0x4c
 802158a:	e65d      	b.n	8021248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802158c:	f113 0801 	adds.w	r8, r3, #1
 8021590:	f53f af74 	bmi.w	802147c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021594:	4540      	cmp	r0, r8
 8021596:	f6ff af71 	blt.w	802147c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802159a:	f11c 0801 	adds.w	r8, ip, #1
 802159e:	f53f af6d 	bmi.w	802147c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80215a2:	45c6      	cmp	lr, r8
 80215a4:	f6ff af6a 	blt.w	802147c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80215a8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80215aa:	9302      	str	r3, [sp, #8]
 80215ac:	b200      	sxth	r0, r0
 80215ae:	fa0f f38e 	sxth.w	r3, lr
 80215b2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80215b6:	e9cd c203 	strd	ip, r2, [sp, #12]
 80215ba:	9301      	str	r3, [sp, #4]
 80215bc:	9000      	str	r0, [sp, #0]
 80215be:	4633      	mov	r3, r6
 80215c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80215c2:	981d      	ldr	r0, [sp, #116]	; 0x74
 80215c4:	4639      	mov	r1, r7
 80215c6:	f7ff fc62 	bl	8020e8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80215ca:	e757      	b.n	802147c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80215cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80215ce:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80215d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80215d4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80215d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80215da:	1427      	asrs	r7, r4, #16
 80215dc:	142b      	asrs	r3, r5, #16
 80215de:	fb01 7303 	mla	r3, r1, r3, r7
 80215e2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80215e4:	18e7      	adds	r7, r4, r3
 80215e6:	5ce3      	ldrb	r3, [r4, r3]
 80215e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80215ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80215f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80215f4:	2a00      	cmp	r2, #0
 80215f6:	f000 8137 	beq.w	8021868 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80215fa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80215fe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021602:	9410      	str	r4, [sp, #64]	; 0x40
 8021604:	0e24      	lsrs	r4, r4, #24
 8021606:	9417      	str	r4, [sp, #92]	; 0x5c
 8021608:	b170      	cbz	r0, 8021628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802160a:	eb07 0e01 	add.w	lr, r7, r1
 802160e:	5c79      	ldrb	r1, [r7, r1]
 8021610:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021614:	910b      	str	r1, [sp, #44]	; 0x2c
 8021616:	0e09      	lsrs	r1, r1, #24
 8021618:	9114      	str	r1, [sp, #80]	; 0x50
 802161a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802161e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021622:	9111      	str	r1, [sp, #68]	; 0x44
 8021624:	0e09      	lsrs	r1, r1, #24
 8021626:	9118      	str	r1, [sp, #96]	; 0x60
 8021628:	b292      	uxth	r2, r2
 802162a:	b280      	uxth	r0, r0
 802162c:	fb02 f800 	mul.w	r8, r2, r0
 8021630:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021634:	0112      	lsls	r2, r2, #4
 8021636:	eba2 0e08 	sub.w	lr, r2, r8
 802163a:	b280      	uxth	r0, r0
 802163c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021640:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8021642:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021644:	fa1f fe8e 	uxth.w	lr, lr
 8021648:	1a12      	subs	r2, r2, r0
 802164a:	b292      	uxth	r2, r2
 802164c:	fb0e f101 	mul.w	r1, lr, r1
 8021650:	fb02 110c 	mla	r1, r2, ip, r1
 8021654:	fb00 1104 	mla	r1, r0, r4, r1
 8021658:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802165a:	fb08 1104 	mla	r1, r8, r4, r1
 802165e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021662:	2900      	cmp	r1, #0
 8021664:	f000 80f5 	beq.w	8021852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021668:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802166c:	d019      	beq.n	80216a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802166e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021672:	fb0c fa0a 	mul.w	sl, ip, sl
 8021676:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802167a:	fb0c fc03 	mul.w	ip, ip, r3
 802167e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021682:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021686:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802168a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802168e:	4453      	add	r3, sl
 8021690:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021694:	0a1b      	lsrs	r3, r3, #8
 8021696:	0a3f      	lsrs	r7, r7, #8
 8021698:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802169c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80216a0:	433b      	orrs	r3, r7
 80216a2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80216a4:	2cff      	cmp	r4, #255	; 0xff
 80216a6:	d020      	beq.n	80216ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80216a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80216aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80216ae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80216b0:	4367      	muls	r7, r4
 80216b2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80216b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80216b8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80216ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80216be:	fb04 fa0a 	mul.w	sl, r4, sl
 80216c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80216c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80216ca:	44bc      	add	ip, r7
 80216cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80216d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80216d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80216e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80216e4:	ea4c 040a 	orr.w	r4, ip, sl
 80216e8:	9410      	str	r4, [sp, #64]	; 0x40
 80216ea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80216ec:	2cff      	cmp	r4, #255	; 0xff
 80216ee:	d020      	beq.n	8021732 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80216f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80216f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80216f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80216f8:	4367      	muls	r7, r4
 80216fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80216fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021700:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021702:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021706:	fb04 fa0a 	mul.w	sl, r4, sl
 802170a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802170e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021712:	44bc      	add	ip, r7
 8021714:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021718:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802171c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021720:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021724:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021728:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802172c:	ea4c 040a 	orr.w	r4, ip, sl
 8021730:	940b      	str	r4, [sp, #44]	; 0x2c
 8021732:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021734:	2cff      	cmp	r4, #255	; 0xff
 8021736:	d020      	beq.n	802177a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021738:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802173a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802173e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021740:	4367      	muls	r7, r4
 8021742:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021744:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021748:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802174a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802174e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021752:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021756:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802175a:	44bc      	add	ip, r7
 802175c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021760:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021764:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021768:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802176c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021770:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021774:	ea4c 040a 	orr.w	r4, ip, sl
 8021778:	9411      	str	r4, [sp, #68]	; 0x44
 802177a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802177c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021780:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021782:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021786:	fb0e f707 	mul.w	r7, lr, r7
 802178a:	fb02 770c 	mla	r7, r2, ip, r7
 802178e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021792:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021794:	fb00 770c 	mla	r7, r0, ip, r7
 8021798:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802179c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802179e:	fb08 770c 	mla	r7, r8, ip, r7
 80217a2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80217a6:	fb0e fe0c 	mul.w	lr, lr, ip
 80217aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80217ae:	fb02 e303 	mla	r3, r2, r3, lr
 80217b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80217b4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80217b6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80217ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80217bc:	fb00 330a 	mla	r3, r0, sl, r3
 80217c0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80217c4:	fb08 3c0c 	mla	ip, r8, ip, r3
 80217c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80217ca:	f8b9 0000 	ldrh.w	r0, [r9]
 80217ce:	434b      	muls	r3, r1
 80217d0:	0a3f      	lsrs	r7, r7, #8
 80217d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80217da:	1c59      	adds	r1, r3, #1
 80217dc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80217e0:	ea47 070c 	orr.w	r7, r7, ip
 80217e4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80217e8:	1202      	asrs	r2, r0, #8
 80217ea:	0c3b      	lsrs	r3, r7, #16
 80217ec:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80217f0:	b2c9      	uxtb	r1, r1
 80217f2:	fb13 f304 	smulbb	r3, r3, r4
 80217f6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80217fa:	fb02 3201 	mla	r2, r2, r1, r3
 80217fe:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021802:	10c3      	asrs	r3, r0, #3
 8021804:	b2ff      	uxtb	r7, r7
 8021806:	00c0      	lsls	r0, r0, #3
 8021808:	b292      	uxth	r2, r2
 802180a:	fb1c fc04 	smulbb	ip, ip, r4
 802180e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021812:	b2c0      	uxtb	r0, r0
 8021814:	fb17 f704 	smulbb	r7, r7, r4
 8021818:	fb03 c301 	mla	r3, r3, r1, ip
 802181c:	fb00 7001 	mla	r0, r0, r1, r7
 8021820:	f102 0c01 	add.w	ip, r2, #1
 8021824:	b280      	uxth	r0, r0
 8021826:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802182a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802182e:	1c42      	adds	r2, r0, #1
 8021830:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021834:	b29b      	uxth	r3, r3
 8021836:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802183a:	ea42 020c 	orr.w	r2, r2, ip
 802183e:	f103 0c01 	add.w	ip, r3, #1
 8021842:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021846:	095b      	lsrs	r3, r3, #5
 8021848:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802184c:	431a      	orrs	r2, r3
 802184e:	f8a9 2000 	strh.w	r2, [r9]
 8021852:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021854:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021856:	441a      	add	r2, r3
 8021858:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802185a:	9229      	str	r2, [sp, #164]	; 0xa4
 802185c:	f109 0902 	add.w	r9, r9, #2
 8021860:	441d      	add	r5, r3
 8021862:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021866:	e63d      	b.n	80214e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021868:	2800      	cmp	r0, #0
 802186a:	f43f aedd 	beq.w	8021628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802186e:	5c79      	ldrb	r1, [r7, r1]
 8021870:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021874:	910b      	str	r1, [sp, #44]	; 0x2c
 8021876:	0e09      	lsrs	r1, r1, #24
 8021878:	9114      	str	r1, [sp, #80]	; 0x50
 802187a:	e6d5      	b.n	8021628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802187c:	b01f      	add	sp, #124	; 0x7c
 802187e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021882 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021882:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021886:	b089      	sub	sp, #36	; 0x24
 8021888:	9101      	str	r1, [sp, #4]
 802188a:	9801      	ldr	r0, [sp, #4]
 802188c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021890:	8800      	ldrh	r0, [r0, #0]
 8021892:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021896:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802189a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802189e:	1206      	asrs	r6, r0, #8
 80218a0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80218a4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80218a8:	9602      	str	r6, [sp, #8]
 80218aa:	10c6      	asrs	r6, r0, #3
 80218ac:	00c0      	lsls	r0, r0, #3
 80218ae:	b2c0      	uxtb	r0, r0
 80218b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80218b4:	9004      	str	r0, [sp, #16]
 80218b6:	2f00      	cmp	r7, #0
 80218b8:	fb07 100c 	mla	r0, r7, ip, r1
 80218bc:	9603      	str	r6, [sp, #12]
 80218be:	eb02 0e00 	add.w	lr, r2, r0
 80218c2:	f2c0 810a 	blt.w	8021ada <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80218c6:	45b8      	cmp	r8, r7
 80218c8:	f340 8107 	ble.w	8021ada <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80218cc:	2900      	cmp	r1, #0
 80218ce:	f2c0 8102 	blt.w	8021ad6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80218d2:	458c      	cmp	ip, r1
 80218d4:	f340 80ff 	ble.w	8021ad6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80218d8:	5c12      	ldrb	r2, [r2, r0]
 80218da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80218de:	1c4a      	adds	r2, r1, #1
 80218e0:	f100 80fe 	bmi.w	8021ae0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80218e4:	4594      	cmp	ip, r2
 80218e6:	f340 80fb 	ble.w	8021ae0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80218ea:	2d00      	cmp	r5, #0
 80218ec:	f000 80fa 	beq.w	8021ae4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80218f0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80218f4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80218f8:	3701      	adds	r7, #1
 80218fa:	f100 80f7 	bmi.w	8021aec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80218fe:	45b8      	cmp	r8, r7
 8021900:	f340 80f4 	ble.w	8021aec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021904:	2c00      	cmp	r4, #0
 8021906:	f000 80f4 	beq.w	8021af2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802190a:	2900      	cmp	r1, #0
 802190c:	eb0e 020c 	add.w	r2, lr, ip
 8021910:	f2c0 80ea 	blt.w	8021ae8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021914:	458c      	cmp	ip, r1
 8021916:	f340 80e7 	ble.w	8021ae8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802191a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802191e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021922:	3101      	adds	r1, #1
 8021924:	f100 80e8 	bmi.w	8021af8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021928:	458c      	cmp	ip, r1
 802192a:	f340 80e5 	ble.w	8021af8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802192e:	2d00      	cmp	r5, #0
 8021930:	f000 80e4 	beq.w	8021afc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021934:	7852      	ldrb	r2, [r2, #1]
 8021936:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802193a:	0e0b      	lsrs	r3, r1, #24
 802193c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021940:	9300      	str	r3, [sp, #0]
 8021942:	b2a4      	uxth	r4, r4
 8021944:	b2ab      	uxth	r3, r5
 8021946:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 802194a:	fb03 f904 	mul.w	r9, r3, r4
 802194e:	fb0a f505 	mul.w	r5, sl, r5
 8021952:	011b      	lsls	r3, r3, #4
 8021954:	eba3 0e09 	sub.w	lr, r3, r9
 8021958:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 802195c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021960:	0a28      	lsrs	r0, r5, #8
 8021962:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021966:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802196a:	4405      	add	r5, r0
 802196c:	0a2d      	lsrs	r5, r5, #8
 802196e:	fb0a f303 	mul.w	r3, sl, r3
 8021972:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021976:	9005      	str	r0, [sp, #20]
 8021978:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802197c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021980:	0a1b      	lsrs	r3, r3, #8
 8021982:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021986:	9306      	str	r3, [sp, #24]
 8021988:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 802198c:	fb0b f303 	mul.w	r3, fp, r3
 8021990:	0a1d      	lsrs	r5, r3, #8
 8021992:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021996:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802199a:	fb0b f606 	mul.w	r6, fp, r6
 802199e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80219a2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80219a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80219aa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80219ae:	fb08 f707 	mul.w	r7, r8, r7
 80219b2:	441d      	add	r5, r3
 80219b4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80219b8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80219bc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80219c0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80219c4:	fb08 fc0c 	mul.w	ip, r8, ip
 80219c8:	0a1b      	lsrs	r3, r3, #8
 80219ca:	9307      	str	r3, [sp, #28]
 80219cc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80219d0:	0e0b      	lsrs	r3, r1, #24
 80219d2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80219d6:	435f      	muls	r7, r3
 80219d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80219dc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80219e0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80219e4:	4460      	add	r0, ip
 80219e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80219ea:	b2a4      	uxth	r4, r4
 80219ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80219f0:	0a2d      	lsrs	r5, r5, #8
 80219f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80219f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80219fa:	fa1f fe8e 	uxth.w	lr, lr
 80219fe:	4359      	muls	r1, r3
 8021a00:	1b12      	subs	r2, r2, r4
 8021a02:	9b05      	ldr	r3, [sp, #20]
 8021a04:	44bc      	add	ip, r7
 8021a06:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021a0a:	b292      	uxth	r2, r2
 8021a0c:	fb05 f50e 	mul.w	r5, r5, lr
 8021a10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a14:	fb03 5502 	mla	r5, r3, r2, r5
 8021a18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a1c:	9b06      	ldr	r3, [sp, #24]
 8021a1e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021a22:	0a36      	lsrs	r6, r6, #8
 8021a24:	0a00      	lsrs	r0, r0, #8
 8021a26:	fb0c 5509 	mla	r5, ip, r9, r5
 8021a2a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021a2e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021a32:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021a36:	fb00 5504 	mla	r5, r0, r4, r5
 8021a3a:	fb0e f606 	mul.w	r6, lr, r6
 8021a3e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021a42:	0a09      	lsrs	r1, r1, #8
 8021a44:	9b07      	ldr	r3, [sp, #28]
 8021a46:	fb02 6000 	mla	r0, r2, r0, r6
 8021a4a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021a4e:	fb09 0001 	mla	r0, r9, r1, r0
 8021a52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021a56:	fb0e fe0b 	mul.w	lr, lr, fp
 8021a5a:	fb04 0003 	mla	r0, r4, r3, r0
 8021a5e:	fb02 e20a 	mla	r2, r2, sl, lr
 8021a62:	9b00      	ldr	r3, [sp, #0]
 8021a64:	fb04 2408 	mla	r4, r4, r8, r2
 8021a68:	fb09 4903 	mla	r9, r9, r3, r4
 8021a6c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021a70:	9b02      	ldr	r3, [sp, #8]
 8021a72:	9a04      	ldr	r2, [sp, #16]
 8021a74:	fa5f f989 	uxtb.w	r9, r9
 8021a78:	fb03 f109 	mul.w	r1, r3, r9
 8021a7c:	9b03      	ldr	r3, [sp, #12]
 8021a7e:	0a2d      	lsrs	r5, r5, #8
 8021a80:	0a00      	lsrs	r0, r0, #8
 8021a82:	fb03 f309 	mul.w	r3, r3, r9
 8021a86:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021a8a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021a8e:	4305      	orrs	r5, r0
 8021a90:	fb02 f909 	mul.w	r9, r2, r9
 8021a94:	1c58      	adds	r0, r3, #1
 8021a96:	1c4a      	adds	r2, r1, #1
 8021a98:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021a9c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021aa0:	0a2b      	lsrs	r3, r5, #8
 8021aa2:	0c2a      	lsrs	r2, r5, #16
 8021aa4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021aa8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021aac:	00db      	lsls	r3, r3, #3
 8021aae:	0212      	lsls	r2, r2, #8
 8021ab0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021ab4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ab8:	4313      	orrs	r3, r2
 8021aba:	f109 0201 	add.w	r2, r9, #1
 8021abe:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021ac2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021ac6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021aca:	431d      	orrs	r5, r3
 8021acc:	9b01      	ldr	r3, [sp, #4]
 8021ace:	801d      	strh	r5, [r3, #0]
 8021ad0:	b009      	add	sp, #36	; 0x24
 8021ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ad6:	2000      	movs	r0, #0
 8021ad8:	e701      	b.n	80218de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021ada:	2600      	movs	r6, #0
 8021adc:	4630      	mov	r0, r6
 8021ade:	e70b      	b.n	80218f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021ae0:	2600      	movs	r6, #0
 8021ae2:	e709      	b.n	80218f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021ae4:	462e      	mov	r6, r5
 8021ae6:	e707      	b.n	80218f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021ae8:	2700      	movs	r7, #0
 8021aea:	e71a      	b.n	8021922 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021aec:	2100      	movs	r1, #0
 8021aee:	460f      	mov	r7, r1
 8021af0:	e723      	b.n	802193a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021af2:	4621      	mov	r1, r4
 8021af4:	4627      	mov	r7, r4
 8021af6:	e720      	b.n	802193a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021af8:	2100      	movs	r1, #0
 8021afa:	e71e      	b.n	802193a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021afc:	4629      	mov	r1, r5
 8021afe:	e71c      	b.n	802193a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b04:	b09b      	sub	sp, #108	; 0x6c
 8021b06:	9218      	str	r2, [sp, #96]	; 0x60
 8021b08:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021b0a:	9116      	str	r1, [sp, #88]	; 0x58
 8021b0c:	9307      	str	r3, [sp, #28]
 8021b0e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021b12:	9019      	str	r0, [sp, #100]	; 0x64
 8021b14:	6850      	ldr	r0, [r2, #4]
 8021b16:	6812      	ldr	r2, [r2, #0]
 8021b18:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021b1a:	fb00 1303 	mla	r3, r0, r3, r1
 8021b1e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021b22:	930a      	str	r3, [sp, #40]	; 0x28
 8021b24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021b26:	681b      	ldr	r3, [r3, #0]
 8021b28:	930f      	str	r3, [sp, #60]	; 0x3c
 8021b2a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021b2c:	685e      	ldr	r6, [r3, #4]
 8021b2e:	3604      	adds	r6, #4
 8021b30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021b32:	2b00      	cmp	r3, #0
 8021b34:	dc03      	bgt.n	8021b3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021b36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021b38:	2b00      	cmp	r3, #0
 8021b3a:	f340 8373 	ble.w	8022224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021b3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021b40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021b44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021b48:	1e48      	subs	r0, r1, #1
 8021b4a:	1e57      	subs	r7, r2, #1
 8021b4c:	9b07      	ldr	r3, [sp, #28]
 8021b4e:	2b00      	cmp	r3, #0
 8021b50:	f340 8190 	ble.w	8021e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021b54:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021b56:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021b5a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021b5e:	d406      	bmi.n	8021b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021b60:	4584      	cmp	ip, r0
 8021b62:	da04      	bge.n	8021b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021b64:	2b00      	cmp	r3, #0
 8021b66:	db02      	blt.n	8021b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021b68:	42bb      	cmp	r3, r7
 8021b6a:	f2c0 8184 	blt.w	8021e76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021b6e:	f11c 0c01 	adds.w	ip, ip, #1
 8021b72:	f100 8172 	bmi.w	8021e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021b76:	4561      	cmp	r1, ip
 8021b78:	f2c0 816f 	blt.w	8021e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021b7c:	3301      	adds	r3, #1
 8021b7e:	f100 816c 	bmi.w	8021e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021b82:	429a      	cmp	r2, r3
 8021b84:	f2c0 8169 	blt.w	8021e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021b88:	9b07      	ldr	r3, [sp, #28]
 8021b8a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021b8c:	9317      	str	r3, [sp, #92]	; 0x5c
 8021b8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021b90:	2b00      	cmp	r3, #0
 8021b92:	f340 818e 	ble.w	8021eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021b96:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021b98:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021b9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021b9e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021ba2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021ba4:	141b      	asrs	r3, r3, #16
 8021ba6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021baa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021bae:	f100 81d1 	bmi.w	8021f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021bb2:	f101 38ff 	add.w	r8, r1, #4294967295
 8021bb6:	4543      	cmp	r3, r8
 8021bb8:	f280 81cc 	bge.w	8021f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021bbc:	f1bc 0f00 	cmp.w	ip, #0
 8021bc0:	f2c0 81c8 	blt.w	8021f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021bc4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021bc8:	45c4      	cmp	ip, r8
 8021bca:	f280 81c3 	bge.w	8021f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021bce:	b209      	sxth	r1, r1
 8021bd0:	fb0c 3301 	mla	r3, ip, r1, r3
 8021bd4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021bd6:	eb04 0803 	add.w	r8, r4, r3
 8021bda:	5ce3      	ldrb	r3, [r4, r3]
 8021bdc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021be0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021be4:	2a00      	cmp	r2, #0
 8021be6:	f000 81aa 	beq.w	8021f3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021bea:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021bee:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021bf2:	940b      	str	r4, [sp, #44]	; 0x2c
 8021bf4:	0e24      	lsrs	r4, r4, #24
 8021bf6:	9412      	str	r4, [sp, #72]	; 0x48
 8021bf8:	b178      	cbz	r0, 8021c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021bfa:	eb08 0c01 	add.w	ip, r8, r1
 8021bfe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021c02:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021c06:	9108      	str	r1, [sp, #32]
 8021c08:	0e09      	lsrs	r1, r1, #24
 8021c0a:	9110      	str	r1, [sp, #64]	; 0x40
 8021c0c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021c10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021c14:	910c      	str	r1, [sp, #48]	; 0x30
 8021c16:	0e09      	lsrs	r1, r1, #24
 8021c18:	9113      	str	r1, [sp, #76]	; 0x4c
 8021c1a:	b292      	uxth	r2, r2
 8021c1c:	b280      	uxth	r0, r0
 8021c1e:	fb02 f900 	mul.w	r9, r2, r0
 8021c22:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021c26:	0112      	lsls	r2, r2, #4
 8021c28:	eba2 0809 	sub.w	r8, r2, r9
 8021c2c:	b280      	uxth	r0, r0
 8021c2e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021c32:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021c34:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021c36:	fa1f f888 	uxth.w	r8, r8
 8021c3a:	1a12      	subs	r2, r2, r0
 8021c3c:	b292      	uxth	r2, r2
 8021c3e:	fb08 f101 	mul.w	r1, r8, r1
 8021c42:	fb02 110e 	mla	r1, r2, lr, r1
 8021c46:	fb00 1104 	mla	r1, r0, r4, r1
 8021c4a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021c4c:	fb09 1104 	mla	r1, r9, r4, r1
 8021c50:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021c54:	2900      	cmp	r1, #0
 8021c56:	f000 80f5 	beq.w	8021e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021c5a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021c5e:	d01b      	beq.n	8021c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021c60:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021c64:	fb0e fa0a 	mul.w	sl, lr, sl
 8021c68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021c6c:	fb0e fe03 	mul.w	lr, lr, r3
 8021c70:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021c74:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021c78:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021c7c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021c80:	4453      	add	r3, sl
 8021c82:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021c86:	0a1b      	lsrs	r3, r3, #8
 8021c88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021c90:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021c94:	ea43 030c 	orr.w	r3, r3, ip
 8021c98:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c9a:	2cff      	cmp	r4, #255	; 0xff
 8021c9c:	d021      	beq.n	8021ce2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021c9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ca0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021ca4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021ca6:	fb04 fb0b 	mul.w	fp, r4, fp
 8021caa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021cac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021cb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021cb2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021cb6:	fb04 fa0a 	mul.w	sl, r4, sl
 8021cba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021cbe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021cc2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021cc6:	44de      	add	lr, fp
 8021cc8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021ccc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021cd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021cd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021cd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021cdc:	ea4e 040a 	orr.w	r4, lr, sl
 8021ce0:	940b      	str	r4, [sp, #44]	; 0x2c
 8021ce2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021ce4:	2cff      	cmp	r4, #255	; 0xff
 8021ce6:	d021      	beq.n	8021d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021ce8:	9c08      	ldr	r4, [sp, #32]
 8021cea:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021cee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021cf0:	fb04 fb0b 	mul.w	fp, r4, fp
 8021cf4:	9c08      	ldr	r4, [sp, #32]
 8021cf6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021cfa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021cfc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021d00:	fb04 fa0a 	mul.w	sl, r4, sl
 8021d04:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d08:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d0c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021d10:	44de      	add	lr, fp
 8021d12:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021d16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021d1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021d1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021d26:	ea4e 040a 	orr.w	r4, lr, sl
 8021d2a:	9408      	str	r4, [sp, #32]
 8021d2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021d2e:	2cff      	cmp	r4, #255	; 0xff
 8021d30:	d021      	beq.n	8021d76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021d32:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021d34:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021d38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021d3a:	fb04 fb0b 	mul.w	fp, r4, fp
 8021d3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021d40:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021d44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021d46:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021d4a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021d4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d52:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d56:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021d5a:	44de      	add	lr, fp
 8021d5c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021d60:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021d64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021d68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021d70:	ea4e 040a 	orr.w	r4, lr, sl
 8021d74:	940c      	str	r4, [sp, #48]	; 0x30
 8021d76:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d78:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021d7c:	9c08      	ldr	r4, [sp, #32]
 8021d7e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021d82:	fb08 fc0c 	mul.w	ip, r8, ip
 8021d86:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021d8a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021d8e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021d90:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021d94:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021d98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d9a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021d9e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021da2:	fb08 f80e 	mul.w	r8, r8, lr
 8021da6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021daa:	fb02 8303 	mla	r3, r2, r3, r8
 8021dae:	9a08      	ldr	r2, [sp, #32]
 8021db0:	f8b7 8000 	ldrh.w	r8, [r7]
 8021db4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021db8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021dba:	fb00 330a 	mla	r3, r0, sl, r3
 8021dbe:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021dc2:	fb09 3900 	mla	r9, r9, r0, r3
 8021dc6:	43c9      	mvns	r1, r1
 8021dc8:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021dcc:	fa5f fe81 	uxtb.w	lr, r1
 8021dd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021dd4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021dd8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021ddc:	fb02 f20e 	mul.w	r2, r2, lr
 8021de0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021de4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021de8:	ea4c 0c09 	orr.w	ip, ip, r9
 8021dec:	1c53      	adds	r3, r2, #1
 8021dee:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021df2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021df6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021dfa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021dfe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021e02:	4a63      	ldr	r2, [pc, #396]	; (8021f90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021e04:	fb00 f00e 	mul.w	r0, r0, lr
 8021e08:	b2db      	uxtb	r3, r3
 8021e0a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021e0e:	1c43      	adds	r3, r0, #1
 8021e10:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021e14:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021e18:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021e1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021e20:	b2c9      	uxtb	r1, r1
 8021e22:	00db      	lsls	r3, r3, #3
 8021e24:	fb01 f10e 	mul.w	r1, r1, lr
 8021e28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e2c:	4313      	orrs	r3, r2
 8021e2e:	1c4a      	adds	r2, r1, #1
 8021e30:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021e34:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021e38:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021e3c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021e40:	f8a7 c000 	strh.w	ip, [r7]
 8021e44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021e46:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021e48:	441a      	add	r2, r3
 8021e4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e4c:	9225      	str	r2, [sp, #148]	; 0x94
 8021e4e:	441d      	add	r5, r3
 8021e50:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021e52:	3b01      	subs	r3, #1
 8021e54:	3702      	adds	r7, #2
 8021e56:	9317      	str	r3, [sp, #92]	; 0x5c
 8021e58:	e699      	b.n	8021b8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021e5a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021e5c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021e5e:	441c      	add	r4, r3
 8021e60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e62:	9425      	str	r4, [sp, #148]	; 0x94
 8021e64:	441d      	add	r5, r3
 8021e66:	9b07      	ldr	r3, [sp, #28]
 8021e68:	3b01      	subs	r3, #1
 8021e6a:	9307      	str	r3, [sp, #28]
 8021e6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021e6e:	3302      	adds	r3, #2
 8021e70:	930a      	str	r3, [sp, #40]	; 0x28
 8021e72:	e66b      	b.n	8021b4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021e74:	d024      	beq.n	8021ec0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021e76:	9b07      	ldr	r3, [sp, #28]
 8021e78:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021e7a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021e7c:	3b01      	subs	r3, #1
 8021e7e:	fb00 4003 	mla	r0, r0, r3, r4
 8021e82:	1400      	asrs	r0, r0, #16
 8021e84:	f53f ae80 	bmi.w	8021b88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e88:	3901      	subs	r1, #1
 8021e8a:	4288      	cmp	r0, r1
 8021e8c:	f6bf ae7c 	bge.w	8021b88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e90:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021e92:	fb01 5303 	mla	r3, r1, r3, r5
 8021e96:	141b      	asrs	r3, r3, #16
 8021e98:	f53f ae76 	bmi.w	8021b88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021e9c:	3a01      	subs	r2, #1
 8021e9e:	4293      	cmp	r3, r2
 8021ea0:	f6bf ae72 	bge.w	8021b88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021ea4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021ea8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021eac:	f1bb 0f00 	cmp.w	fp, #0
 8021eb0:	dc70      	bgt.n	8021f94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021eb2:	9b07      	ldr	r3, [sp, #28]
 8021eb4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021eb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021eba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021ebe:	930a      	str	r3, [sp, #40]	; 0x28
 8021ec0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021ec2:	2b00      	cmp	r3, #0
 8021ec4:	f340 81ae 	ble.w	8022224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021ec8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021ecc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021ed0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021ed4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ed6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021eda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021ede:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021ee2:	eef0 6a62 	vmov.f32	s13, s5
 8021ee6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021eea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021eee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021ef2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021ef6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021efa:	eef0 6a43 	vmov.f32	s13, s6
 8021efe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f02:	ee12 2a90 	vmov	r2, s5
 8021f06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f0e:	ee13 2a10 	vmov	r2, s6
 8021f12:	9327      	str	r3, [sp, #156]	; 0x9c
 8021f14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f16:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f1a:	9328      	str	r3, [sp, #160]	; 0xa0
 8021f1c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021f1e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021f20:	3b01      	subs	r3, #1
 8021f22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f26:	9316      	str	r3, [sp, #88]	; 0x58
 8021f28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f2a:	bf08      	it	eq
 8021f2c:	4613      	moveq	r3, r2
 8021f2e:	ee16 5a90 	vmov	r5, s13
 8021f32:	9307      	str	r3, [sp, #28]
 8021f34:	eeb0 3a67 	vmov.f32	s6, s15
 8021f38:	eef0 2a47 	vmov.f32	s5, s14
 8021f3c:	e5f8      	b.n	8021b30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021f3e:	2800      	cmp	r0, #0
 8021f40:	f43f ae6b 	beq.w	8021c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021f44:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021f48:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f4c:	9108      	str	r1, [sp, #32]
 8021f4e:	0e09      	lsrs	r1, r1, #24
 8021f50:	9110      	str	r1, [sp, #64]	; 0x40
 8021f52:	e662      	b.n	8021c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021f54:	f113 0801 	adds.w	r8, r3, #1
 8021f58:	f53f af74 	bmi.w	8021e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021f5c:	4541      	cmp	r1, r8
 8021f5e:	f6ff af71 	blt.w	8021e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021f62:	f11c 0801 	adds.w	r8, ip, #1
 8021f66:	f53f af6d 	bmi.w	8021e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021f6a:	45c6      	cmp	lr, r8
 8021f6c:	f6ff af6a 	blt.w	8021e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021f70:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021f74:	b209      	sxth	r1, r1
 8021f76:	fa0f f38e 	sxth.w	r3, lr
 8021f7a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021f7e:	9301      	str	r3, [sp, #4]
 8021f80:	9100      	str	r1, [sp, #0]
 8021f82:	4633      	mov	r3, r6
 8021f84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021f86:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021f88:	4639      	mov	r1, r7
 8021f8a:	f7ff fc7a 	bl	8021882 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021f8e:	e759      	b.n	8021e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021f90:	fffff800 	.word	0xfffff800
 8021f94:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021f96:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021f98:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021f9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021f9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021fa2:	1427      	asrs	r7, r4, #16
 8021fa4:	142b      	asrs	r3, r5, #16
 8021fa6:	fb01 7303 	mla	r3, r1, r3, r7
 8021faa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021fac:	18e7      	adds	r7, r4, r3
 8021fae:	5ce3      	ldrb	r3, [r4, r3]
 8021fb0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021fb4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021fb8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021fbc:	2a00      	cmp	r2, #0
 8021fbe:	f000 8127 	beq.w	8022210 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021fc2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021fc6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021fca:	940d      	str	r4, [sp, #52]	; 0x34
 8021fcc:	0e24      	lsrs	r4, r4, #24
 8021fce:	9414      	str	r4, [sp, #80]	; 0x50
 8021fd0:	b170      	cbz	r0, 8021ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021fd2:	eb07 0e01 	add.w	lr, r7, r1
 8021fd6:	5c79      	ldrb	r1, [r7, r1]
 8021fd8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021fdc:	9109      	str	r1, [sp, #36]	; 0x24
 8021fde:	0e09      	lsrs	r1, r1, #24
 8021fe0:	9111      	str	r1, [sp, #68]	; 0x44
 8021fe2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021fe6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021fea:	910e      	str	r1, [sp, #56]	; 0x38
 8021fec:	0e09      	lsrs	r1, r1, #24
 8021fee:	9115      	str	r1, [sp, #84]	; 0x54
 8021ff0:	b292      	uxth	r2, r2
 8021ff2:	b280      	uxth	r0, r0
 8021ff4:	fb02 f800 	mul.w	r8, r2, r0
 8021ff8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021ffc:	0112      	lsls	r2, r2, #4
 8021ffe:	eba2 0e08 	sub.w	lr, r2, r8
 8022002:	b280      	uxth	r0, r0
 8022004:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022008:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802200a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802200c:	fa1f fe8e 	uxth.w	lr, lr
 8022010:	1a09      	subs	r1, r1, r0
 8022012:	b289      	uxth	r1, r1
 8022014:	fb0e f202 	mul.w	r2, lr, r2
 8022018:	fb01 220c 	mla	r2, r1, ip, r2
 802201c:	fb00 2204 	mla	r2, r0, r4, r2
 8022020:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022022:	fb08 2204 	mla	r2, r8, r4, r2
 8022026:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802202a:	2a00      	cmp	r2, #0
 802202c:	f000 80e5 	beq.w	80221fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8022030:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022034:	d019      	beq.n	802206a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022036:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802203a:	fb0c fa0a 	mul.w	sl, ip, sl
 802203e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022042:	fb0c fc03 	mul.w	ip, ip, r3
 8022046:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802204a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802204e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022052:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022056:	4453      	add	r3, sl
 8022058:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802205c:	0a1b      	lsrs	r3, r3, #8
 802205e:	0a3f      	lsrs	r7, r7, #8
 8022060:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022064:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022068:	433b      	orrs	r3, r7
 802206a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802206c:	2cff      	cmp	r4, #255	; 0xff
 802206e:	d020      	beq.n	80220b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022070:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022072:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022076:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022078:	4367      	muls	r7, r4
 802207a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802207c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022080:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022082:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022086:	fb04 fa0a 	mul.w	sl, r4, sl
 802208a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802208e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022092:	44bc      	add	ip, r7
 8022094:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022098:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802209c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220ac:	ea4c 040a 	orr.w	r4, ip, sl
 80220b0:	940d      	str	r4, [sp, #52]	; 0x34
 80220b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80220b4:	2cff      	cmp	r4, #255	; 0xff
 80220b6:	d020      	beq.n	80220fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80220b8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80220ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80220be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80220c0:	4367      	muls	r7, r4
 80220c2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80220c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80220c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80220ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80220ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80220d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80220d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220da:	44bc      	add	ip, r7
 80220dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80220e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80220e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220f4:	ea4c 040a 	orr.w	r4, ip, sl
 80220f8:	9409      	str	r4, [sp, #36]	; 0x24
 80220fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80220fc:	2cff      	cmp	r4, #255	; 0xff
 80220fe:	d020      	beq.n	8022142 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022100:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022102:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022106:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022108:	4367      	muls	r7, r4
 802210a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802210c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022110:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022112:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022116:	fb04 fa0a 	mul.w	sl, r4, sl
 802211a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802211e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022122:	44bc      	add	ip, r7
 8022124:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022128:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802212c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022130:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022134:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022138:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802213c:	ea4c 040a 	orr.w	r4, ip, sl
 8022140:	940e      	str	r4, [sp, #56]	; 0x38
 8022142:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022144:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022148:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802214a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802214e:	fb0e f707 	mul.w	r7, lr, r7
 8022152:	fb01 770c 	mla	r7, r1, ip, r7
 8022156:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802215a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802215c:	fb00 770c 	mla	r7, r0, ip, r7
 8022160:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022164:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022166:	fb08 770c 	mla	r7, r8, ip, r7
 802216a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802216e:	fb0e fe0c 	mul.w	lr, lr, ip
 8022172:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022176:	fb01 e303 	mla	r3, r1, r3, lr
 802217a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802217c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022180:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022182:	fb00 330a 	mla	r3, r0, sl, r3
 8022186:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802218a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802218e:	f8b9 3000 	ldrh.w	r3, [r9]
 8022192:	43d2      	mvns	r2, r2
 8022194:	1218      	asrs	r0, r3, #8
 8022196:	b2d2      	uxtb	r2, r2
 8022198:	10d9      	asrs	r1, r3, #3
 802219a:	0a3f      	lsrs	r7, r7, #8
 802219c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80221a4:	00db      	lsls	r3, r3, #3
 80221a6:	4350      	muls	r0, r2
 80221a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80221ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80221b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80221b4:	b2db      	uxtb	r3, r3
 80221b6:	ea47 070c 	orr.w	r7, r7, ip
 80221ba:	4351      	muls	r1, r2
 80221bc:	4353      	muls	r3, r2
 80221be:	1c42      	adds	r2, r0, #1
 80221c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80221c4:	0c3a      	lsrs	r2, r7, #16
 80221c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80221ca:	4a18      	ldr	r2, [pc, #96]	; (802222c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80221cc:	b2c0      	uxtb	r0, r0
 80221ce:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80221d2:	1c4a      	adds	r2, r1, #1
 80221d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80221d8:	0a3a      	lsrs	r2, r7, #8
 80221da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80221de:	00c9      	lsls	r1, r1, #3
 80221e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80221e4:	4301      	orrs	r1, r0
 80221e6:	1c58      	adds	r0, r3, #1
 80221e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80221ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80221f0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80221f4:	4308      	orrs	r0, r1
 80221f6:	f8a9 0000 	strh.w	r0, [r9]
 80221fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80221fc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80221fe:	441a      	add	r2, r3
 8022200:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022202:	9225      	str	r2, [sp, #148]	; 0x94
 8022204:	f109 0902 	add.w	r9, r9, #2
 8022208:	441d      	add	r5, r3
 802220a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802220e:	e64d      	b.n	8021eac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022210:	2800      	cmp	r0, #0
 8022212:	f43f aeed 	beq.w	8021ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022216:	5c79      	ldrb	r1, [r7, r1]
 8022218:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802221c:	9109      	str	r1, [sp, #36]	; 0x24
 802221e:	0e09      	lsrs	r1, r1, #24
 8022220:	9111      	str	r1, [sp, #68]	; 0x44
 8022222:	e6e5      	b.n	8021ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022224:	b01b      	add	sp, #108	; 0x6c
 8022226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802222a:	bf00      	nop
 802222c:	fffff800 	.word	0xfffff800

08022230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022234:	b085      	sub	sp, #20
 8022236:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802223a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802223e:	9103      	str	r1, [sp, #12]
 8022240:	fb00 7406 	mla	r4, r0, r6, r7
 8022244:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022248:	2800      	cmp	r0, #0
 802224a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802224e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022252:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022256:	9501      	str	r5, [sp, #4]
 8022258:	eb03 0904 	add.w	r9, r3, r4
 802225c:	f2c0 8150 	blt.w	8022500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022260:	4583      	cmp	fp, r0
 8022262:	f340 814d 	ble.w	8022500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022266:	2f00      	cmp	r7, #0
 8022268:	f2c0 8146 	blt.w	80224f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802226c:	42be      	cmp	r6, r7
 802226e:	f340 8143 	ble.w	80224f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022272:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022276:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802227a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802227e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022282:	4355      	muls	r5, r2
 8022284:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022288:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802228c:	fb0c f203 	mul.w	r2, ip, r3
 8022290:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022294:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022298:	441d      	add	r5, r3
 802229a:	f102 0320 	add.w	r3, r2, #32
 802229e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80222a2:	0a1b      	lsrs	r3, r3, #8
 80222a4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80222a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80222ac:	431c      	orrs	r4, r3
 80222ae:	1c7b      	adds	r3, r7, #1
 80222b0:	f100 812b 	bmi.w	802250a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80222b4:	429e      	cmp	r6, r3
 80222b6:	f340 8128 	ble.w	802250a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80222ba:	2900      	cmp	r1, #0
 80222bc:	f000 8128 	beq.w	8022510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80222c0:	9a01      	ldr	r2, [sp, #4]
 80222c2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80222c6:	8855      	ldrh	r5, [r2, #2]
 80222c8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80222cc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80222d0:	fb08 f802 	mul.w	r8, r8, r2
 80222d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80222d8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80222dc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80222e0:	435d      	muls	r5, r3
 80222e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80222e6:	44d0      	add	r8, sl
 80222e8:	f105 0a20 	add.w	sl, r5, #32
 80222ec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80222f0:	0a2d      	lsrs	r5, r5, #8
 80222f2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80222f6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80222fa:	432a      	orrs	r2, r5
 80222fc:	3001      	adds	r0, #1
 80222fe:	f100 810d 	bmi.w	802251c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022302:	4583      	cmp	fp, r0
 8022304:	f340 810a 	ble.w	802251c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022308:	f1be 0f00 	cmp.w	lr, #0
 802230c:	f000 810b 	beq.w	8022526 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022310:	2f00      	cmp	r7, #0
 8022312:	f2c0 8100 	blt.w	8022516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022316:	42be      	cmp	r6, r7
 8022318:	f340 80fd 	ble.w	8022516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802231c:	9801      	ldr	r0, [sp, #4]
 802231e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022322:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022326:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802232a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802232e:	fb0a fa00 	mul.w	sl, sl, r0
 8022332:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022336:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802233a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802233e:	fb05 f808 	mul.w	r8, r5, r8
 8022342:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022346:	4482      	add	sl, r0
 8022348:	f108 0020 	add.w	r0, r8, #32
 802234c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022350:	0a00      	lsrs	r0, r0, #8
 8022352:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022356:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802235a:	ea4b 0b00 	orr.w	fp, fp, r0
 802235e:	3701      	adds	r7, #1
 8022360:	f100 80e6 	bmi.w	8022530 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022364:	42be      	cmp	r6, r7
 8022366:	f340 80e3 	ble.w	8022530 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802236a:	2900      	cmp	r1, #0
 802236c:	f000 80e3 	beq.w	8022536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022370:	3601      	adds	r6, #1
 8022372:	9801      	ldr	r0, [sp, #4]
 8022374:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022378:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802237c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022380:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022384:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022388:	fb09 f906 	mul.w	r9, r9, r6
 802238c:	fb07 f800 	mul.w	r8, r7, r0
 8022390:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022394:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022398:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802239c:	44d1      	add	r9, sl
 802239e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80223a2:	f108 0020 	add.w	r0, r8, #32
 80223a6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80223aa:	0a00      	lsrs	r0, r0, #8
 80223ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223b0:	4330      	orrs	r0, r6
 80223b2:	b28e      	uxth	r6, r1
 80223b4:	fa1f f98e 	uxth.w	r9, lr
 80223b8:	fb06 f809 	mul.w	r8, r6, r9
 80223bc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80223c0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80223c4:	0136      	lsls	r6, r6, #4
 80223c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80223ca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80223ce:	9601      	str	r6, [sp, #4]
 80223d0:	ea4a 0404 	orr.w	r4, sl, r4
 80223d4:	fa1f f689 	uxth.w	r6, r9
 80223d8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80223dc:	fb11 f90e 	smulbb	r9, r1, lr
 80223e0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80223e4:	9602      	str	r6, [sp, #8]
 80223e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80223ea:	4626      	mov	r6, r4
 80223ec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80223f0:	f1ce 0410 	rsb	r4, lr, #16
 80223f4:	1a64      	subs	r4, r4, r1
 80223f6:	ea4a 0202 	orr.w	r2, sl, r2
 80223fa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80223fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022402:	434a      	muls	r2, r1
 8022404:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022408:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802240c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022410:	fb04 2406 	mla	r4, r4, r6, r2
 8022414:	ea4a 0000 	orr.w	r0, sl, r0
 8022418:	fb09 4200 	mla	r2, r9, r0, r4
 802241c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022420:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022424:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022428:	ea44 0b0b 	orr.w	fp, r4, fp
 802242c:	9c01      	ldr	r4, [sp, #4]
 802242e:	9e02      	ldr	r6, [sp, #8]
 8022430:	9903      	ldr	r1, [sp, #12]
 8022432:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022436:	1ba4      	subs	r4, r4, r6
 8022438:	9e01      	ldr	r6, [sp, #4]
 802243a:	8808      	ldrh	r0, [r1, #0]
 802243c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8022440:	eba6 0608 	sub.w	r6, r6, r8
 8022444:	b2b6      	uxth	r6, r6
 8022446:	b2a4      	uxth	r4, r4
 8022448:	4373      	muls	r3, r6
 802244a:	fb0c 3304 	mla	r3, ip, r4, r3
 802244e:	9c02      	ldr	r4, [sp, #8]
 8022450:	fb04 3505 	mla	r5, r4, r5, r3
 8022454:	fb08 5707 	mla	r7, r8, r7, r5
 8022458:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802245c:	b289      	uxth	r1, r1
 802245e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022462:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022466:	434f      	muls	r7, r1
 8022468:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802246c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022470:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022474:	1c7b      	adds	r3, r7, #1
 8022476:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802247a:	ea42 0e0e 	orr.w	lr, r2, lr
 802247e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022482:	fa1f f28e 	uxth.w	r2, lr
 8022486:	1203      	asrs	r3, r0, #8
 8022488:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802248c:	b2ff      	uxtb	r7, r7
 802248e:	1215      	asrs	r5, r2, #8
 8022490:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022494:	fb13 f307 	smulbb	r3, r3, r7
 8022498:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802249c:	fb05 3501 	mla	r5, r5, r1, r3
 80224a0:	10c3      	asrs	r3, r0, #3
 80224a2:	10d4      	asrs	r4, r2, #3
 80224a4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80224a8:	fb13 f307 	smulbb	r3, r3, r7
 80224ac:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80224b0:	fb04 3401 	mla	r4, r4, r1, r3
 80224b4:	00c3      	lsls	r3, r0, #3
 80224b6:	00d2      	lsls	r2, r2, #3
 80224b8:	b2db      	uxtb	r3, r3
 80224ba:	fb13 f307 	smulbb	r3, r3, r7
 80224be:	b2d2      	uxtb	r2, r2
 80224c0:	fb02 3101 	mla	r1, r2, r1, r3
 80224c4:	b2ad      	uxth	r5, r5
 80224c6:	b289      	uxth	r1, r1
 80224c8:	b2a4      	uxth	r4, r4
 80224ca:	1c6b      	adds	r3, r5, #1
 80224cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80224d0:	1c62      	adds	r2, r4, #1
 80224d2:	1c4b      	adds	r3, r1, #1
 80224d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80224d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80224dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80224e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80224e4:	0964      	lsrs	r4, r4, #5
 80224e6:	432b      	orrs	r3, r5
 80224e8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80224ec:	9a03      	ldr	r2, [sp, #12]
 80224ee:	4323      	orrs	r3, r4
 80224f0:	8013      	strh	r3, [r2, #0]
 80224f2:	b005      	add	sp, #20
 80224f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224f8:	f04f 0c00 	mov.w	ip, #0
 80224fc:	4664      	mov	r4, ip
 80224fe:	e6d6      	b.n	80222ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022500:	2300      	movs	r3, #0
 8022502:	469c      	mov	ip, r3
 8022504:	461a      	mov	r2, r3
 8022506:	461c      	mov	r4, r3
 8022508:	e6f8      	b.n	80222fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802250a:	2300      	movs	r3, #0
 802250c:	461a      	mov	r2, r3
 802250e:	e6f5      	b.n	80222fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022510:	460b      	mov	r3, r1
 8022512:	460a      	mov	r2, r1
 8022514:	e6f2      	b.n	80222fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022516:	2500      	movs	r5, #0
 8022518:	46ab      	mov	fp, r5
 802251a:	e720      	b.n	802235e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 802251c:	2700      	movs	r7, #0
 802251e:	463d      	mov	r5, r7
 8022520:	4638      	mov	r0, r7
 8022522:	46bb      	mov	fp, r7
 8022524:	e745      	b.n	80223b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022526:	4677      	mov	r7, lr
 8022528:	4675      	mov	r5, lr
 802252a:	4670      	mov	r0, lr
 802252c:	46f3      	mov	fp, lr
 802252e:	e740      	b.n	80223b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022530:	2700      	movs	r7, #0
 8022532:	4638      	mov	r0, r7
 8022534:	e73d      	b.n	80223b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022536:	460f      	mov	r7, r1
 8022538:	4608      	mov	r0, r1
 802253a:	e73a      	b.n	80223b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0802253c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802253c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022540:	b097      	sub	sp, #92	; 0x5c
 8022542:	9214      	str	r2, [sp, #80]	; 0x50
 8022544:	9308      	str	r3, [sp, #32]
 8022546:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022548:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802254c:	9312      	str	r3, [sp, #72]	; 0x48
 802254e:	9111      	str	r1, [sp, #68]	; 0x44
 8022550:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022554:	9015      	str	r0, [sp, #84]	; 0x54
 8022556:	6850      	ldr	r0, [r2, #4]
 8022558:	6812      	ldr	r2, [r2, #0]
 802255a:	fb00 1303 	mla	r3, r0, r3, r1
 802255e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022562:	9309      	str	r3, [sp, #36]	; 0x24
 8022564:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022566:	681b      	ldr	r3, [r3, #0]
 8022568:	930b      	str	r3, [sp, #44]	; 0x2c
 802256a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802256c:	685b      	ldr	r3, [r3, #4]
 802256e:	930c      	str	r3, [sp, #48]	; 0x30
 8022570:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022574:	930a      	str	r3, [sp, #40]	; 0x28
 8022576:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022578:	2b00      	cmp	r3, #0
 802257a:	dc03      	bgt.n	8022584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802257c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802257e:	2b00      	cmp	r3, #0
 8022580:	f340 83cb 	ble.w	8022d1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022584:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022586:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802258a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802258e:	1e48      	subs	r0, r1, #1
 8022590:	1e55      	subs	r5, r2, #1
 8022592:	9b08      	ldr	r3, [sp, #32]
 8022594:	2b00      	cmp	r3, #0
 8022596:	f340 81a3 	ble.w	80228e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802259a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802259c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802259e:	1436      	asrs	r6, r6, #16
 80225a0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80225a4:	d406      	bmi.n	80225b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80225a6:	4286      	cmp	r6, r0
 80225a8:	da04      	bge.n	80225b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80225aa:	2b00      	cmp	r3, #0
 80225ac:	db02      	blt.n	80225b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80225ae:	42ab      	cmp	r3, r5
 80225b0:	f2c0 8197 	blt.w	80228e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80225b4:	3601      	adds	r6, #1
 80225b6:	f100 8184 	bmi.w	80228c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80225ba:	42b1      	cmp	r1, r6
 80225bc:	f2c0 8181 	blt.w	80228c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80225c0:	3301      	adds	r3, #1
 80225c2:	f100 817e 	bmi.w	80228c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80225c6:	429a      	cmp	r2, r3
 80225c8:	f2c0 817b 	blt.w	80228c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80225cc:	9b08      	ldr	r3, [sp, #32]
 80225ce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80225d0:	9313      	str	r3, [sp, #76]	; 0x4c
 80225d2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80225d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80225d8:	2b00      	cmp	r3, #0
 80225da:	f340 81a4 	ble.w	8022926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80225de:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80225e0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80225e2:	1418      	asrs	r0, r3, #16
 80225e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80225e6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80225ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80225ec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80225f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225f2:	142d      	asrs	r5, r5, #16
 80225f4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80225f8:	f100 81f8 	bmi.w	80229ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80225fc:	f102 3eff 	add.w	lr, r2, #4294967295
 8022600:	4575      	cmp	r5, lr
 8022602:	f280 81f3 	bge.w	80229ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022606:	2800      	cmp	r0, #0
 8022608:	f2c0 81f0 	blt.w	80229ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802260c:	f103 3eff 	add.w	lr, r3, #4294967295
 8022610:	4570      	cmp	r0, lr
 8022612:	f280 81eb 	bge.w	80229ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022616:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022618:	b212      	sxth	r2, r2
 802261a:	fb00 5002 	mla	r0, r0, r2, r5
 802261e:	fa1f fe81 	uxth.w	lr, r1
 8022622:	eb03 0a00 	add.w	sl, r3, r0
 8022626:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802262a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802262e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022632:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022636:	b29b      	uxth	r3, r3
 8022638:	f1bc 0f00 	cmp.w	ip, #0
 802263c:	f000 81b9 	beq.w	80229b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8022640:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022644:	940d      	str	r4, [sp, #52]	; 0x34
 8022646:	eb0a 0b02 	add.w	fp, sl, r2
 802264a:	fa1f fa8c 	uxth.w	sl, ip
 802264e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022652:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022656:	fa1f fa8a 	uxth.w	sl, sl
 802265a:	eba5 050e 	sub.w	r5, r5, lr
 802265e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022662:	940e      	str	r4, [sp, #56]	; 0x38
 8022664:	eba3 030a 	sub.w	r3, r3, sl
 8022668:	b2ad      	uxth	r5, r5
 802266a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802266c:	b29b      	uxth	r3, r3
 802266e:	fb08 f505 	mul.w	r5, r8, r5
 8022672:	fb09 5303 	mla	r3, r9, r3, r5
 8022676:	fb0a 3304 	mla	r3, sl, r4, r3
 802267a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802267c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022680:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022684:	2b00      	cmp	r3, #0
 8022686:	f000 810f 	beq.w	80228a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802268a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802268c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022690:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022694:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022698:	f000 8190 	beq.w	80229bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802269c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80226a0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80226a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226a8:	fb09 f000 	mul.w	r0, r9, r0
 80226ac:	fb0a fe0e 	mul.w	lr, sl, lr
 80226b0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80226b4:	f100 0b20 	add.w	fp, r0, #32
 80226b8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80226bc:	44ce      	add	lr, r9
 80226be:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80226c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80226c6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80226ca:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80226ce:	ea4e 0909 	orr.w	r9, lr, r9
 80226d2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80226d6:	8868      	ldrh	r0, [r5, #2]
 80226d8:	d019      	beq.n	802270e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80226da:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80226de:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80226e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226e6:	fb08 f800 	mul.w	r8, r8, r0
 80226ea:	fb0a fe0e 	mul.w	lr, sl, lr
 80226ee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80226f2:	f108 0b20 	add.w	fp, r8, #32
 80226f6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80226fa:	4486      	add	lr, r0
 80226fc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022700:	0a00      	lsrs	r0, r0, #8
 8022702:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022706:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802270a:	ea4e 0000 	orr.w	r0, lr, r0
 802270e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022712:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022716:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802271a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802271e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022722:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022726:	ea4e 0909 	orr.w	r9, lr, r9
 802272a:	ea4a 0000 	orr.w	r0, sl, r0
 802272e:	f1bc 0f00 	cmp.w	ip, #0
 8022732:	f000 8145 	beq.w	80229c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022736:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802273a:	3a01      	subs	r2, #1
 802273c:	0052      	lsls	r2, r2, #1
 802273e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022740:	3202      	adds	r2, #2
 8022742:	2cff      	cmp	r4, #255	; 0xff
 8022744:	eb05 0e02 	add.w	lr, r5, r2
 8022748:	5aaa      	ldrh	r2, [r5, r2]
 802274a:	d018      	beq.n	802277e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802274c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022750:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022754:	fb04 fa02 	mul.w	sl, r4, r2
 8022758:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802275c:	fb08 f805 	mul.w	r8, r8, r5
 8022760:	f10a 0520 	add.w	r5, sl, #32
 8022764:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022768:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802276c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022770:	4442      	add	r2, r8
 8022772:	0a2d      	lsrs	r5, r5, #8
 8022774:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022778:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802277c:	432a      	orrs	r2, r5
 802277e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022780:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022784:	2cff      	cmp	r4, #255	; 0xff
 8022786:	d01a      	beq.n	80227be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022788:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802278c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022790:	fb04 fa05 	mul.w	sl, r4, r5
 8022794:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022798:	fb08 f80e 	mul.w	r8, r8, lr
 802279c:	f10a 0e20 	add.w	lr, sl, #32
 80227a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80227a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80227a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80227ac:	4445      	add	r5, r8
 80227ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80227b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80227b6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80227ba:	ea45 050e 	orr.w	r5, r5, lr
 80227be:	fb1c fe01 	smulbb	lr, ip, r1
 80227c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80227c6:	f1cc 0810 	rsb	r8, ip, #16
 80227ca:	eba8 0801 	sub.w	r8, r8, r1
 80227ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80227d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80227d6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80227da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80227de:	4341      	muls	r1, r0
 80227e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80227e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80227e8:	ea4a 0202 	orr.w	r2, sl, r2
 80227ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80227f0:	fb09 1108 	mla	r1, r9, r8, r1
 80227f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80227f8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80227fc:	fb0c 1102 	mla	r1, ip, r2, r1
 8022800:	ea4b 0505 	orr.w	r5, fp, r5
 8022804:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022808:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802280c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022810:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022814:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022818:	ea42 0e0e 	orr.w	lr, r2, lr
 802281c:	fa1f f28e 	uxth.w	r2, lr
 8022820:	2bff      	cmp	r3, #255	; 0xff
 8022822:	d103      	bne.n	802282c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022824:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022826:	29ff      	cmp	r1, #255	; 0xff
 8022828:	f000 80de 	beq.w	80229e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 802282c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802282e:	8838      	ldrh	r0, [r7, #0]
 8022830:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022832:	434b      	muls	r3, r1
 8022834:	f103 0c01 	add.w	ip, r3, #1
 8022838:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 802283c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022840:	fa5f fc83 	uxtb.w	ip, r3
 8022844:	1203      	asrs	r3, r0, #8
 8022846:	1215      	asrs	r5, r2, #8
 8022848:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802284c:	fb13 f30c 	smulbb	r3, r3, ip
 8022850:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022854:	fb05 3501 	mla	r5, r5, r1, r3
 8022858:	10c3      	asrs	r3, r0, #3
 802285a:	10d1      	asrs	r1, r2, #3
 802285c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022860:	fb13 f30c 	smulbb	r3, r3, ip
 8022864:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022868:	fb01 3104 	mla	r1, r1, r4, r3
 802286c:	00c3      	lsls	r3, r0, #3
 802286e:	00d2      	lsls	r2, r2, #3
 8022870:	b2db      	uxtb	r3, r3
 8022872:	b2d2      	uxtb	r2, r2
 8022874:	fb13 f30c 	smulbb	r3, r3, ip
 8022878:	b2ad      	uxth	r5, r5
 802287a:	fb02 3304 	mla	r3, r2, r4, r3
 802287e:	b29a      	uxth	r2, r3
 8022880:	1c6b      	adds	r3, r5, #1
 8022882:	b289      	uxth	r1, r1
 8022884:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022888:	1c53      	adds	r3, r2, #1
 802288a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802288e:	1c4a      	adds	r2, r1, #1
 8022890:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022894:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022898:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802289c:	0949      	lsrs	r1, r1, #5
 802289e:	432b      	orrs	r3, r5
 80228a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228a4:	430b      	orrs	r3, r1
 80228a6:	803b      	strh	r3, [r7, #0]
 80228a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80228aa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80228ac:	4413      	add	r3, r2
 80228ae:	9321      	str	r3, [sp, #132]	; 0x84
 80228b0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80228b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228b4:	441a      	add	r2, r3
 80228b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80228b8:	9222      	str	r2, [sp, #136]	; 0x88
 80228ba:	3b01      	subs	r3, #1
 80228bc:	3702      	adds	r7, #2
 80228be:	9313      	str	r3, [sp, #76]	; 0x4c
 80228c0:	e689      	b.n	80225d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80228c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80228c4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80228c6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80228c8:	4433      	add	r3, r6
 80228ca:	9321      	str	r3, [sp, #132]	; 0x84
 80228cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228ce:	441c      	add	r4, r3
 80228d0:	9b08      	ldr	r3, [sp, #32]
 80228d2:	9422      	str	r4, [sp, #136]	; 0x88
 80228d4:	3b01      	subs	r3, #1
 80228d6:	9308      	str	r3, [sp, #32]
 80228d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228da:	3302      	adds	r3, #2
 80228dc:	9309      	str	r3, [sp, #36]	; 0x24
 80228de:	e658      	b.n	8022592 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80228e0:	d028      	beq.n	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80228e2:	9b08      	ldr	r3, [sp, #32]
 80228e4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80228e6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80228e8:	3b01      	subs	r3, #1
 80228ea:	fb00 5003 	mla	r0, r0, r3, r5
 80228ee:	1400      	asrs	r0, r0, #16
 80228f0:	f53f ae6c 	bmi.w	80225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80228f4:	3901      	subs	r1, #1
 80228f6:	4288      	cmp	r0, r1
 80228f8:	f6bf ae68 	bge.w	80225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80228fc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80228fe:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022900:	fb01 0303 	mla	r3, r1, r3, r0
 8022904:	141b      	asrs	r3, r3, #16
 8022906:	f53f ae61 	bmi.w	80225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802290a:	3a01      	subs	r2, #1
 802290c:	4293      	cmp	r3, r2
 802290e:	f6bf ae5d 	bge.w	80225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022912:	9b08      	ldr	r3, [sp, #32]
 8022914:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022918:	9313      	str	r3, [sp, #76]	; 0x4c
 802291a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802291e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022920:	2b00      	cmp	r3, #0
 8022922:	f300 8082 	bgt.w	8022a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022926:	9b08      	ldr	r3, [sp, #32]
 8022928:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802292c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802292e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022932:	9309      	str	r3, [sp, #36]	; 0x24
 8022934:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022936:	2b00      	cmp	r3, #0
 8022938:	f340 81ef 	ble.w	8022d1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802293c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022940:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022944:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022948:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802294a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802294e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022952:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022956:	eef0 6a62 	vmov.f32	s13, s5
 802295a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802295e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022962:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022966:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802296a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802296e:	eef0 6a43 	vmov.f32	s13, s6
 8022972:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022976:	ee12 2a90 	vmov	r2, s5
 802297a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802297e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022982:	ee13 2a10 	vmov	r2, s6
 8022986:	9323      	str	r3, [sp, #140]	; 0x8c
 8022988:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802298a:	fb92 f3f3 	sdiv	r3, r2, r3
 802298e:	9324      	str	r3, [sp, #144]	; 0x90
 8022990:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022992:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022994:	3b01      	subs	r3, #1
 8022996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802299a:	9311      	str	r3, [sp, #68]	; 0x44
 802299c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802299e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80229a2:	bf08      	it	eq
 80229a4:	4613      	moveq	r3, r2
 80229a6:	9308      	str	r3, [sp, #32]
 80229a8:	eeb0 3a67 	vmov.f32	s6, s15
 80229ac:	eef0 2a47 	vmov.f32	s5, s14
 80229b0:	e5e1      	b.n	8022576 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80229b2:	fb08 f505 	mul.w	r5, r8, r5
 80229b6:	fb09 5303 	mla	r3, r9, r3, r5
 80229ba:	e661      	b.n	8022680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80229bc:	4681      	mov	r9, r0
 80229be:	e688      	b.n	80226d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80229c0:	f1c1 0210 	rsb	r2, r1, #16
 80229c4:	4341      	muls	r1, r0
 80229c6:	fb09 1902 	mla	r9, r9, r2, r1
 80229ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80229ce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80229d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80229d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80229da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80229de:	ea42 0909 	orr.w	r9, r2, r9
 80229e2:	fa1f f289 	uxth.w	r2, r9
 80229e6:	e71b      	b.n	8022820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80229e8:	803a      	strh	r2, [r7, #0]
 80229ea:	e75d      	b.n	80228a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80229ec:	f115 0e01 	adds.w	lr, r5, #1
 80229f0:	f53f af5a 	bmi.w	80228a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80229f4:	4572      	cmp	r2, lr
 80229f6:	f6ff af57 	blt.w	80228a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80229fa:	f110 0e01 	adds.w	lr, r0, #1
 80229fe:	f53f af53 	bmi.w	80228a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a02:	4573      	cmp	r3, lr
 8022a04:	f6ff af50 	blt.w	80228a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a08:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022a0a:	9502      	str	r5, [sp, #8]
 8022a0c:	b21b      	sxth	r3, r3
 8022a0e:	b212      	sxth	r2, r2
 8022a10:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022a14:	9301      	str	r3, [sp, #4]
 8022a16:	9200      	str	r2, [sp, #0]
 8022a18:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022a1c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022a20:	4639      	mov	r1, r7
 8022a22:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022a24:	f7ff fc04 	bl	8022230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022a28:	e73e      	b.n	80228a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a2a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022a2c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022a30:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022a32:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022a36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022a38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022a3c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022a3e:	141f      	asrs	r7, r3, #16
 8022a40:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022a42:	141b      	asrs	r3, r3, #16
 8022a44:	fb01 3707 	mla	r7, r1, r7, r3
 8022a48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a4a:	fa1f fc82 	uxth.w	ip, r2
 8022a4e:	eb03 0a07 	add.w	sl, r3, r7
 8022a52:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022a56:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022a5a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022a5e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022a62:	b29b      	uxth	r3, r3
 8022a64:	2d00      	cmp	r5, #0
 8022a66:	f000 813d 	beq.w	8022ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022a6a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022a6e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022a70:	eb0a 0b01 	add.w	fp, sl, r1
 8022a74:	fa1f fa85 	uxth.w	sl, r5
 8022a78:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a7c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022a80:	fa1f fa8a 	uxth.w	sl, sl
 8022a84:	eba0 000c 	sub.w	r0, r0, ip
 8022a88:	eba3 030a 	sub.w	r3, r3, sl
 8022a8c:	b280      	uxth	r0, r0
 8022a8e:	fb08 f000 	mul.w	r0, r8, r0
 8022a92:	b29b      	uxth	r3, r3
 8022a94:	fb09 0303 	mla	r3, r9, r3, r0
 8022a98:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022a9a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022a9e:	9410      	str	r4, [sp, #64]	; 0x40
 8022aa0:	fb0a 3300 	mla	r3, sl, r0, r3
 8022aa4:	fb0c 3304 	mla	r3, ip, r4, r3
 8022aa8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022aac:	2b00      	cmp	r3, #0
 8022aae:	f000 810b 	beq.w	8022cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022ab2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022ab4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022ab6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022aba:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022abe:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022ac2:	f000 8114 	beq.w	8022cee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022ac6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022aca:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022ace:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ad2:	fb09 f707 	mul.w	r7, r9, r7
 8022ad6:	fb0a fc0c 	mul.w	ip, sl, ip
 8022ada:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022ade:	f107 0b20 	add.w	fp, r7, #32
 8022ae2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022ae6:	44cc      	add	ip, r9
 8022ae8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022aec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022af0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022af4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022af8:	ea4c 0909 	orr.w	r9, ip, r9
 8022afc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022b00:	8847      	ldrh	r7, [r0, #2]
 8022b02:	d019      	beq.n	8022b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022b04:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022b08:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022b0c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022b10:	fb08 f807 	mul.w	r8, r8, r7
 8022b14:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b18:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022b1c:	f108 0b20 	add.w	fp, r8, #32
 8022b20:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022b24:	44bc      	add	ip, r7
 8022b26:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022b2a:	0a3f      	lsrs	r7, r7, #8
 8022b2c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022b30:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022b34:	ea4c 0707 	orr.w	r7, ip, r7
 8022b38:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022b3c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022b40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022b44:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022b48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022b4c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022b50:	ea4c 0909 	orr.w	r9, ip, r9
 8022b54:	ea4a 0707 	orr.w	r7, sl, r7
 8022b58:	2d00      	cmp	r5, #0
 8022b5a:	f000 80ca 	beq.w	8022cf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022b5e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022b62:	3901      	subs	r1, #1
 8022b64:	0049      	lsls	r1, r1, #1
 8022b66:	3102      	adds	r1, #2
 8022b68:	eb00 0c01 	add.w	ip, r0, r1
 8022b6c:	5a41      	ldrh	r1, [r0, r1]
 8022b6e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022b70:	28ff      	cmp	r0, #255	; 0xff
 8022b72:	d019      	beq.n	8022ba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022b74:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022b76:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022b7a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b7e:	fb04 fa01 	mul.w	sl, r4, r1
 8022b82:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022b86:	fb08 f800 	mul.w	r8, r8, r0
 8022b8a:	f10a 0020 	add.w	r0, sl, #32
 8022b8e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022b92:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022b96:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b9a:	4441      	add	r1, r8
 8022b9c:	0a00      	lsrs	r0, r0, #8
 8022b9e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022ba2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022ba6:	4301      	orrs	r1, r0
 8022ba8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022baa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022bae:	2cff      	cmp	r4, #255	; 0xff
 8022bb0:	d01a      	beq.n	8022be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022bb2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022bb6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022bba:	fb04 fa00 	mul.w	sl, r4, r0
 8022bbe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022bc2:	fb08 f80c 	mul.w	r8, r8, ip
 8022bc6:	f10a 0c20 	add.w	ip, sl, #32
 8022bca:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022bce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022bd2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022bd6:	4440      	add	r0, r8
 8022bd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022bdc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022be0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022be4:	ea40 000c 	orr.w	r0, r0, ip
 8022be8:	fb15 fc02 	smulbb	ip, r5, r2
 8022bec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022bf0:	f1c5 0810 	rsb	r8, r5, #16
 8022bf4:	eba8 0802 	sub.w	r8, r8, r2
 8022bf8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022bfc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022c00:	437a      	muls	r2, r7
 8022c02:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022c06:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022c0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c0e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022c12:	fb09 2208 	mla	r2, r9, r8, r2
 8022c16:	ea4a 0101 	orr.w	r1, sl, r1
 8022c1a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022c1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022c22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c26:	fb05 2201 	mla	r2, r5, r1, r2
 8022c2a:	ea4b 0000 	orr.w	r0, fp, r0
 8022c2e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022c32:	0d57      	lsrs	r7, r2, #21
 8022c34:	0952      	lsrs	r2, r2, #5
 8022c36:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022c3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c3e:	433a      	orrs	r2, r7
 8022c40:	2bff      	cmp	r3, #255	; 0xff
 8022c42:	b292      	uxth	r2, r2
 8022c44:	d102      	bne.n	8022c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022c46:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022c48:	29ff      	cmp	r1, #255	; 0xff
 8022c4a:	d063      	beq.n	8022d14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022c4c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022c4e:	f8be 1000 	ldrh.w	r1, [lr]
 8022c52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022c54:	4343      	muls	r3, r0
 8022c56:	1c58      	adds	r0, r3, #1
 8022c58:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022c5c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022c60:	1208      	asrs	r0, r1, #8
 8022c62:	b2db      	uxtb	r3, r3
 8022c64:	1215      	asrs	r5, r2, #8
 8022c66:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022c6a:	fb10 f003 	smulbb	r0, r0, r3
 8022c6e:	10cf      	asrs	r7, r1, #3
 8022c70:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022c74:	00c9      	lsls	r1, r1, #3
 8022c76:	fb05 0504 	mla	r5, r5, r4, r0
 8022c7a:	b2c9      	uxtb	r1, r1
 8022c7c:	10d0      	asrs	r0, r2, #3
 8022c7e:	00d2      	lsls	r2, r2, #3
 8022c80:	fb11 f103 	smulbb	r1, r1, r3
 8022c84:	b2d2      	uxtb	r2, r2
 8022c86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022c8a:	fb02 1204 	mla	r2, r2, r4, r1
 8022c8e:	fb17 f703 	smulbb	r7, r7, r3
 8022c92:	b2ad      	uxth	r5, r5
 8022c94:	b292      	uxth	r2, r2
 8022c96:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022c9a:	fb00 7004 	mla	r0, r0, r4, r7
 8022c9e:	1c6b      	adds	r3, r5, #1
 8022ca0:	1c57      	adds	r7, r2, #1
 8022ca2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022ca6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022caa:	b280      	uxth	r0, r0
 8022cac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022cb0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022cb4:	433d      	orrs	r5, r7
 8022cb6:	1c47      	adds	r7, r0, #1
 8022cb8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022cbc:	097f      	lsrs	r7, r7, #5
 8022cbe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022cc2:	433d      	orrs	r5, r7
 8022cc4:	f8ae 5000 	strh.w	r5, [lr]
 8022cc8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022cca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022ccc:	4413      	add	r3, r2
 8022cce:	9321      	str	r3, [sp, #132]	; 0x84
 8022cd0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022cd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022cd4:	441a      	add	r2, r3
 8022cd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022cd8:	9222      	str	r2, [sp, #136]	; 0x88
 8022cda:	3b01      	subs	r3, #1
 8022cdc:	f10e 0e02 	add.w	lr, lr, #2
 8022ce0:	9313      	str	r3, [sp, #76]	; 0x4c
 8022ce2:	e61c      	b.n	802291e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022ce4:	fb08 f000 	mul.w	r0, r8, r0
 8022ce8:	fb09 0303 	mla	r3, r9, r3, r0
 8022cec:	e6dc      	b.n	8022aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022cee:	46b9      	mov	r9, r7
 8022cf0:	e704      	b.n	8022afc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022cf2:	f1c2 0110 	rsb	r1, r2, #16
 8022cf6:	437a      	muls	r2, r7
 8022cf8:	fb09 2901 	mla	r9, r9, r1, r2
 8022cfc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022d00:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022d04:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022d08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d0c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d10:	4302      	orrs	r2, r0
 8022d12:	e795      	b.n	8022c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022d14:	f8ae 2000 	strh.w	r2, [lr]
 8022d18:	e7d6      	b.n	8022cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022d1a:	b017      	add	sp, #92	; 0x5c
 8022d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022d20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d24:	b085      	sub	sp, #20
 8022d26:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022d2a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022d2e:	9103      	str	r1, [sp, #12]
 8022d30:	fb00 7406 	mla	r4, r0, r6, r7
 8022d34:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022d38:	2800      	cmp	r0, #0
 8022d3a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022d3e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022d42:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022d46:	9501      	str	r5, [sp, #4]
 8022d48:	eb02 0904 	add.w	r9, r2, r4
 8022d4c:	f2c0 8141 	blt.w	8022fd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022d50:	4583      	cmp	fp, r0
 8022d52:	f340 813e 	ble.w	8022fd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022d56:	2f00      	cmp	r7, #0
 8022d58:	f2c0 8137 	blt.w	8022fca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022d5c:	42be      	cmp	r6, r7
 8022d5e:	f340 8134 	ble.w	8022fca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022d62:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022d66:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022d6a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022d6e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022d72:	4355      	muls	r5, r2
 8022d74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d78:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022d7c:	fb0c f203 	mul.w	r2, ip, r3
 8022d80:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022d84:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022d88:	441d      	add	r5, r3
 8022d8a:	f102 0320 	add.w	r3, r2, #32
 8022d8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022d92:	0a1b      	lsrs	r3, r3, #8
 8022d94:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022d98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d9c:	431c      	orrs	r4, r3
 8022d9e:	1c7b      	adds	r3, r7, #1
 8022da0:	f100 811c 	bmi.w	8022fdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022da4:	429e      	cmp	r6, r3
 8022da6:	f340 8119 	ble.w	8022fdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022daa:	2900      	cmp	r1, #0
 8022dac:	f000 8119 	beq.w	8022fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022db0:	9a01      	ldr	r2, [sp, #4]
 8022db2:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022db6:	8855      	ldrh	r5, [r2, #2]
 8022db8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022dbc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022dc0:	fb08 f802 	mul.w	r8, r8, r2
 8022dc4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022dc8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022dcc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022dd0:	435d      	muls	r5, r3
 8022dd2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022dd6:	44d0      	add	r8, sl
 8022dd8:	f105 0a20 	add.w	sl, r5, #32
 8022ddc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022de0:	0a2d      	lsrs	r5, r5, #8
 8022de2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022de6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022dea:	432a      	orrs	r2, r5
 8022dec:	3001      	adds	r0, #1
 8022dee:	f100 80fe 	bmi.w	8022fee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022df2:	4583      	cmp	fp, r0
 8022df4:	f340 80fb 	ble.w	8022fee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022df8:	f1be 0f00 	cmp.w	lr, #0
 8022dfc:	f000 80fc 	beq.w	8022ff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022e00:	2f00      	cmp	r7, #0
 8022e02:	f2c0 80f1 	blt.w	8022fe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022e06:	42be      	cmp	r6, r7
 8022e08:	f340 80ee 	ble.w	8022fe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022e0c:	9801      	ldr	r0, [sp, #4]
 8022e0e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022e12:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022e16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022e1a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022e1e:	fb0a fa00 	mul.w	sl, sl, r0
 8022e22:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022e26:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022e2a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022e2e:	fb05 f808 	mul.w	r8, r5, r8
 8022e32:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022e36:	4482      	add	sl, r0
 8022e38:	f108 0020 	add.w	r0, r8, #32
 8022e3c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022e40:	0a00      	lsrs	r0, r0, #8
 8022e42:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022e46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e4a:	ea4b 0b00 	orr.w	fp, fp, r0
 8022e4e:	3701      	adds	r7, #1
 8022e50:	f100 80d7 	bmi.w	8023002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022e54:	42be      	cmp	r6, r7
 8022e56:	f340 80d4 	ble.w	8023002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022e5a:	2900      	cmp	r1, #0
 8022e5c:	f000 80d4 	beq.w	8023008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022e60:	3601      	adds	r6, #1
 8022e62:	9801      	ldr	r0, [sp, #4]
 8022e64:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022e68:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022e6c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022e70:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022e74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e78:	fb09 f906 	mul.w	r9, r9, r6
 8022e7c:	fb07 f800 	mul.w	r8, r7, r0
 8022e80:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022e84:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022e88:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022e8c:	44d1      	add	r9, sl
 8022e8e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022e92:	f108 0020 	add.w	r0, r8, #32
 8022e96:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022e9a:	0a00      	lsrs	r0, r0, #8
 8022e9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022ea0:	4330      	orrs	r0, r6
 8022ea2:	b28e      	uxth	r6, r1
 8022ea4:	fa1f f98e 	uxth.w	r9, lr
 8022ea8:	fb06 f809 	mul.w	r8, r6, r9
 8022eac:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022eb0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022eb4:	0136      	lsls	r6, r6, #4
 8022eb6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022eba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022ebe:	9601      	str	r6, [sp, #4]
 8022ec0:	ea4a 0404 	orr.w	r4, sl, r4
 8022ec4:	fa1f f689 	uxth.w	r6, r9
 8022ec8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022ecc:	fb11 f90e 	smulbb	r9, r1, lr
 8022ed0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022ed4:	9602      	str	r6, [sp, #8]
 8022ed6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022eda:	4626      	mov	r6, r4
 8022edc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ee0:	f1ce 0410 	rsb	r4, lr, #16
 8022ee4:	1a64      	subs	r4, r4, r1
 8022ee6:	ea4a 0202 	orr.w	r2, sl, r2
 8022eea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022eee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022ef2:	434a      	muls	r2, r1
 8022ef4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022ef8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022efc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f00:	fb04 2406 	mla	r4, r4, r6, r2
 8022f04:	ea4a 0000 	orr.w	r0, sl, r0
 8022f08:	fb09 4200 	mla	r2, r9, r0, r4
 8022f0c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022f10:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022f14:	9801      	ldr	r0, [sp, #4]
 8022f16:	9903      	ldr	r1, [sp, #12]
 8022f18:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022f1c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022f20:	9c02      	ldr	r4, [sp, #8]
 8022f22:	8809      	ldrh	r1, [r1, #0]
 8022f24:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022f28:	1b00      	subs	r0, r0, r4
 8022f2a:	9c01      	ldr	r4, [sp, #4]
 8022f2c:	eba4 0608 	sub.w	r6, r4, r8
 8022f30:	b2b6      	uxth	r6, r6
 8022f32:	b280      	uxth	r0, r0
 8022f34:	4373      	muls	r3, r6
 8022f36:	fb0c 3300 	mla	r3, ip, r0, r3
 8022f3a:	9802      	ldr	r0, [sp, #8]
 8022f3c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022f40:	fb00 3505 	mla	r5, r0, r5, r3
 8022f44:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022f48:	fb08 5707 	mla	r7, r8, r7, r5
 8022f4c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022f50:	120b      	asrs	r3, r1, #8
 8022f52:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022f56:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022f5a:	b2ff      	uxtb	r7, r7
 8022f5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022f60:	10c8      	asrs	r0, r1, #3
 8022f62:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022f66:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022f6a:	00c9      	lsls	r1, r1, #3
 8022f6c:	437b      	muls	r3, r7
 8022f6e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022f72:	b2c9      	uxtb	r1, r1
 8022f74:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022f78:	fa1f f28e 	uxth.w	r2, lr
 8022f7c:	4378      	muls	r0, r7
 8022f7e:	434f      	muls	r7, r1
 8022f80:	1c59      	adds	r1, r3, #1
 8022f82:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022f86:	1213      	asrs	r3, r2, #8
 8022f88:	f023 0307 	bic.w	r3, r3, #7
 8022f8c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022f90:	1c41      	adds	r1, r0, #1
 8022f92:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022f96:	10d1      	asrs	r1, r2, #3
 8022f98:	f021 0103 	bic.w	r1, r1, #3
 8022f9c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022fa0:	021b      	lsls	r3, r3, #8
 8022fa2:	00c9      	lsls	r1, r1, #3
 8022fa4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022fa8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022fac:	430b      	orrs	r3, r1
 8022fae:	1c79      	adds	r1, r7, #1
 8022fb0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022fb4:	00d2      	lsls	r2, r2, #3
 8022fb6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8022fba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022fbe:	431a      	orrs	r2, r3
 8022fc0:	9b03      	ldr	r3, [sp, #12]
 8022fc2:	801a      	strh	r2, [r3, #0]
 8022fc4:	b005      	add	sp, #20
 8022fc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022fca:	f04f 0c00 	mov.w	ip, #0
 8022fce:	4664      	mov	r4, ip
 8022fd0:	e6e5      	b.n	8022d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8022fd2:	2300      	movs	r3, #0
 8022fd4:	469c      	mov	ip, r3
 8022fd6:	461a      	mov	r2, r3
 8022fd8:	461c      	mov	r4, r3
 8022fda:	e707      	b.n	8022dec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022fdc:	2300      	movs	r3, #0
 8022fde:	461a      	mov	r2, r3
 8022fe0:	e704      	b.n	8022dec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022fe2:	460b      	mov	r3, r1
 8022fe4:	460a      	mov	r2, r1
 8022fe6:	e701      	b.n	8022dec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022fe8:	2500      	movs	r5, #0
 8022fea:	46ab      	mov	fp, r5
 8022fec:	e72f      	b.n	8022e4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022fee:	2700      	movs	r7, #0
 8022ff0:	463d      	mov	r5, r7
 8022ff2:	4638      	mov	r0, r7
 8022ff4:	46bb      	mov	fp, r7
 8022ff6:	e754      	b.n	8022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022ff8:	4677      	mov	r7, lr
 8022ffa:	4675      	mov	r5, lr
 8022ffc:	4670      	mov	r0, lr
 8022ffe:	46f3      	mov	fp, lr
 8023000:	e74f      	b.n	8022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023002:	2700      	movs	r7, #0
 8023004:	4638      	mov	r0, r7
 8023006:	e74c      	b.n	8022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023008:	460f      	mov	r7, r1
 802300a:	4608      	mov	r0, r1
 802300c:	e749      	b.n	8022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023014:	b093      	sub	sp, #76	; 0x4c
 8023016:	9210      	str	r2, [sp, #64]	; 0x40
 8023018:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802301a:	910e      	str	r1, [sp, #56]	; 0x38
 802301c:	9306      	str	r3, [sp, #24]
 802301e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023022:	9011      	str	r0, [sp, #68]	; 0x44
 8023024:	6850      	ldr	r0, [r2, #4]
 8023026:	6812      	ldr	r2, [r2, #0]
 8023028:	fb00 1303 	mla	r3, r0, r3, r1
 802302c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023030:	9307      	str	r3, [sp, #28]
 8023032:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023034:	681b      	ldr	r3, [r3, #0]
 8023036:	9308      	str	r3, [sp, #32]
 8023038:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802303a:	685b      	ldr	r3, [r3, #4]
 802303c:	9309      	str	r3, [sp, #36]	; 0x24
 802303e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023040:	2b00      	cmp	r3, #0
 8023042:	dc03      	bgt.n	802304c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023044:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023046:	2b00      	cmp	r3, #0
 8023048:	f340 83b4 	ble.w	80237b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802304c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802304e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023052:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023056:	1e48      	subs	r0, r1, #1
 8023058:	1e55      	subs	r5, r2, #1
 802305a:	9b06      	ldr	r3, [sp, #24]
 802305c:	2b00      	cmp	r3, #0
 802305e:	f340 8163 	ble.w	8023328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023062:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023064:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023066:	1436      	asrs	r6, r6, #16
 8023068:	ea4f 4323 	mov.w	r3, r3, asr #16
 802306c:	d406      	bmi.n	802307c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802306e:	4286      	cmp	r6, r0
 8023070:	da04      	bge.n	802307c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023072:	2b00      	cmp	r3, #0
 8023074:	db02      	blt.n	802307c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023076:	42ab      	cmp	r3, r5
 8023078:	f2c0 8157 	blt.w	802332a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802307c:	3601      	adds	r6, #1
 802307e:	f100 8144 	bmi.w	802330a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023082:	42b1      	cmp	r1, r6
 8023084:	f2c0 8141 	blt.w	802330a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023088:	3301      	adds	r3, #1
 802308a:	f100 813e 	bmi.w	802330a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802308e:	429a      	cmp	r2, r3
 8023090:	f2c0 813b 	blt.w	802330a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023094:	9b06      	ldr	r3, [sp, #24]
 8023096:	9f07      	ldr	r7, [sp, #28]
 8023098:	930f      	str	r3, [sp, #60]	; 0x3c
 802309a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802309e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80230a0:	2b00      	cmp	r3, #0
 80230a2:	f340 8164 	ble.w	802336e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80230a6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80230a8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80230aa:	1418      	asrs	r0, r3, #16
 80230ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80230ae:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80230b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80230b4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80230b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230ba:	142d      	asrs	r5, r5, #16
 80230bc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80230c0:	f100 81ee 	bmi.w	80234a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80230c4:	f102 3eff 	add.w	lr, r2, #4294967295
 80230c8:	4575      	cmp	r5, lr
 80230ca:	f280 81e9 	bge.w	80234a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80230ce:	2800      	cmp	r0, #0
 80230d0:	f2c0 81e6 	blt.w	80234a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80230d4:	f103 3eff 	add.w	lr, r3, #4294967295
 80230d8:	4570      	cmp	r0, lr
 80230da:	f280 81e1 	bge.w	80234a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80230de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80230e0:	b212      	sxth	r2, r2
 80230e2:	fb00 5002 	mla	r0, r0, r2, r5
 80230e6:	fa1f fe81 	uxth.w	lr, r1
 80230ea:	eb03 0a00 	add.w	sl, r3, r0
 80230ee:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80230f2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80230f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80230fa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80230fe:	b29b      	uxth	r3, r3
 8023100:	f1bc 0f00 	cmp.w	ip, #0
 8023104:	f000 8179 	beq.w	80233fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023108:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802310c:	940a      	str	r4, [sp, #40]	; 0x28
 802310e:	eb0a 0b02 	add.w	fp, sl, r2
 8023112:	fa1f fa8c 	uxth.w	sl, ip
 8023116:	fb0a fe0e 	mul.w	lr, sl, lr
 802311a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802311e:	fa1f fa8a 	uxth.w	sl, sl
 8023122:	eba5 050e 	sub.w	r5, r5, lr
 8023126:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802312a:	940b      	str	r4, [sp, #44]	; 0x2c
 802312c:	eba3 030a 	sub.w	r3, r3, sl
 8023130:	b2ad      	uxth	r5, r5
 8023132:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023134:	b29b      	uxth	r3, r3
 8023136:	fb08 f505 	mul.w	r5, r8, r5
 802313a:	fb09 5303 	mla	r3, r9, r3, r5
 802313e:	fb0a 3304 	mla	r3, sl, r4, r3
 8023142:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023144:	fb0e 3304 	mla	r3, lr, r4, r3
 8023148:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802314c:	2b00      	cmp	r3, #0
 802314e:	f000 80cf 	beq.w	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023152:	9c08      	ldr	r4, [sp, #32]
 8023154:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023158:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802315c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023160:	f000 8150 	beq.w	8023404 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023164:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023168:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802316c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023170:	fb09 f000 	mul.w	r0, r9, r0
 8023174:	fb0a fe0e 	mul.w	lr, sl, lr
 8023178:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802317c:	f100 0b20 	add.w	fp, r0, #32
 8023180:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023184:	44ce      	add	lr, r9
 8023186:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802318a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802318e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023192:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023196:	ea4e 0909 	orr.w	r9, lr, r9
 802319a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802319e:	8868      	ldrh	r0, [r5, #2]
 80231a0:	d019      	beq.n	80231d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80231a2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80231a6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80231aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231ae:	fb08 f800 	mul.w	r8, r8, r0
 80231b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80231b6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80231ba:	f108 0b20 	add.w	fp, r8, #32
 80231be:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80231c2:	4486      	add	lr, r0
 80231c4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80231c8:	0a00      	lsrs	r0, r0, #8
 80231ca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80231ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231d2:	ea4e 0000 	orr.w	r0, lr, r0
 80231d6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80231da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80231de:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80231e2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80231e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80231ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80231ee:	ea4e 0909 	orr.w	r9, lr, r9
 80231f2:	ea4a 0000 	orr.w	r0, sl, r0
 80231f6:	f1bc 0f00 	cmp.w	ip, #0
 80231fa:	f000 8105 	beq.w	8023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80231fe:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023202:	3a01      	subs	r2, #1
 8023204:	0052      	lsls	r2, r2, #1
 8023206:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023208:	3202      	adds	r2, #2
 802320a:	2cff      	cmp	r4, #255	; 0xff
 802320c:	eb05 0e02 	add.w	lr, r5, r2
 8023210:	5aaa      	ldrh	r2, [r5, r2]
 8023212:	d018      	beq.n	8023246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023214:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023218:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802321c:	fb04 fa02 	mul.w	sl, r4, r2
 8023220:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023224:	fb08 f805 	mul.w	r8, r8, r5
 8023228:	f10a 0520 	add.w	r5, sl, #32
 802322c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023230:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023234:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023238:	4442      	add	r2, r8
 802323a:	0a2d      	lsrs	r5, r5, #8
 802323c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023240:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023244:	432a      	orrs	r2, r5
 8023246:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023248:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802324c:	2cff      	cmp	r4, #255	; 0xff
 802324e:	d01a      	beq.n	8023286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023250:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023254:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023258:	fb04 fa05 	mul.w	sl, r4, r5
 802325c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023260:	fb08 f80e 	mul.w	r8, r8, lr
 8023264:	f10a 0e20 	add.w	lr, sl, #32
 8023268:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802326c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023270:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023274:	4445      	add	r5, r8
 8023276:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802327a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802327e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023282:	ea45 050e 	orr.w	r5, r5, lr
 8023286:	fb1c fe01 	smulbb	lr, ip, r1
 802328a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802328e:	f1cc 0810 	rsb	r8, ip, #16
 8023292:	eba8 0801 	sub.w	r8, r8, r1
 8023296:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802329a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802329e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80232a2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80232a6:	4341      	muls	r1, r0
 80232a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80232ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80232b0:	ea4a 0202 	orr.w	r2, sl, r2
 80232b4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80232b8:	fb09 1108 	mla	r1, r9, r8, r1
 80232bc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80232c0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80232c4:	fb0c 1102 	mla	r1, ip, r2, r1
 80232c8:	ea4b 0505 	orr.w	r5, fp, r5
 80232cc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80232d0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80232d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80232d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80232e0:	ea42 0e0e 	orr.w	lr, r2, lr
 80232e4:	fa1f f28e 	uxth.w	r2, lr
 80232e8:	2bff      	cmp	r3, #255	; 0xff
 80232ea:	f040 80a1 	bne.w	8023430 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80232ee:	803a      	strh	r2, [r7, #0]
 80232f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80232f2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80232f4:	4413      	add	r3, r2
 80232f6:	931d      	str	r3, [sp, #116]	; 0x74
 80232f8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80232fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80232fc:	441a      	add	r2, r3
 80232fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023300:	921e      	str	r2, [sp, #120]	; 0x78
 8023302:	3b01      	subs	r3, #1
 8023304:	3702      	adds	r7, #2
 8023306:	930f      	str	r3, [sp, #60]	; 0x3c
 8023308:	e6c9      	b.n	802309e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802330a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802330c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802330e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023310:	4433      	add	r3, r6
 8023312:	931d      	str	r3, [sp, #116]	; 0x74
 8023314:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023316:	441c      	add	r4, r3
 8023318:	9b06      	ldr	r3, [sp, #24]
 802331a:	941e      	str	r4, [sp, #120]	; 0x78
 802331c:	3b01      	subs	r3, #1
 802331e:	9306      	str	r3, [sp, #24]
 8023320:	9b07      	ldr	r3, [sp, #28]
 8023322:	3302      	adds	r3, #2
 8023324:	9307      	str	r3, [sp, #28]
 8023326:	e698      	b.n	802305a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023328:	d028      	beq.n	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802332a:	9b06      	ldr	r3, [sp, #24]
 802332c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802332e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023330:	3b01      	subs	r3, #1
 8023332:	fb00 5003 	mla	r0, r0, r3, r5
 8023336:	1400      	asrs	r0, r0, #16
 8023338:	f53f aeac 	bmi.w	8023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802333c:	3901      	subs	r1, #1
 802333e:	4288      	cmp	r0, r1
 8023340:	f6bf aea8 	bge.w	8023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023344:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023346:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023348:	fb01 0303 	mla	r3, r1, r3, r0
 802334c:	141b      	asrs	r3, r3, #16
 802334e:	f53f aea1 	bmi.w	8023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023352:	3a01      	subs	r2, #1
 8023354:	4293      	cmp	r3, r2
 8023356:	f6bf ae9d 	bge.w	8023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802335a:	9b06      	ldr	r3, [sp, #24]
 802335c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023360:	930f      	str	r3, [sp, #60]	; 0x3c
 8023362:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023366:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023368:	2b00      	cmp	r3, #0
 802336a:	f300 80b6 	bgt.w	80234da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802336e:	9b06      	ldr	r3, [sp, #24]
 8023370:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023374:	9b07      	ldr	r3, [sp, #28]
 8023376:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802337a:	9307      	str	r3, [sp, #28]
 802337c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802337e:	2b00      	cmp	r3, #0
 8023380:	f340 8218 	ble.w	80237b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023384:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023388:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802338c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023390:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023392:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023396:	ee31 1a05 	vadd.f32	s2, s2, s10
 802339a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802339e:	eef0 6a62 	vmov.f32	s13, s5
 80233a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80233a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80233aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80233ae:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80233b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80233b6:	eef0 6a43 	vmov.f32	s13, s6
 80233ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80233be:	ee12 2a90 	vmov	r2, s5
 80233c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80233c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80233ca:	ee13 2a10 	vmov	r2, s6
 80233ce:	931f      	str	r3, [sp, #124]	; 0x7c
 80233d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80233d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80233d6:	9320      	str	r3, [sp, #128]	; 0x80
 80233d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80233da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80233dc:	3b01      	subs	r3, #1
 80233de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80233e2:	930e      	str	r3, [sp, #56]	; 0x38
 80233e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80233e6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80233ea:	bf08      	it	eq
 80233ec:	4613      	moveq	r3, r2
 80233ee:	9306      	str	r3, [sp, #24]
 80233f0:	eeb0 3a67 	vmov.f32	s6, s15
 80233f4:	eef0 2a47 	vmov.f32	s5, s14
 80233f8:	e621      	b.n	802303e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80233fa:	fb08 f505 	mul.w	r5, r8, r5
 80233fe:	fb09 5303 	mla	r3, r9, r3, r5
 8023402:	e6a1      	b.n	8023148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023404:	4681      	mov	r9, r0
 8023406:	e6c8      	b.n	802319a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023408:	f1c1 0210 	rsb	r2, r1, #16
 802340c:	4341      	muls	r1, r0
 802340e:	fb09 1902 	mla	r9, r9, r2, r1
 8023412:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023416:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802341a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802341e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023422:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023426:	ea42 0909 	orr.w	r9, r2, r9
 802342a:	fa1f f289 	uxth.w	r2, r9
 802342e:	e75b      	b.n	80232e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023430:	f8b7 c000 	ldrh.w	ip, [r7]
 8023434:	43db      	mvns	r3, r3
 8023436:	ea4f 202c 	mov.w	r0, ip, asr #8
 802343a:	fa5f fe83 	uxtb.w	lr, r3
 802343e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023442:	fb00 f00e 	mul.w	r0, r0, lr
 8023446:	1c41      	adds	r1, r0, #1
 8023448:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802344c:	1211      	asrs	r1, r2, #8
 802344e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023452:	f021 0107 	bic.w	r1, r1, #7
 8023456:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802345a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802345e:	48d7      	ldr	r0, [pc, #860]	; (80237bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023460:	fb05 f50e 	mul.w	r5, r5, lr
 8023464:	b2c9      	uxtb	r1, r1
 8023466:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802346a:	1c69      	adds	r1, r5, #1
 802346c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023470:	10d1      	asrs	r1, r2, #3
 8023472:	f021 0103 	bic.w	r1, r1, #3
 8023476:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802347a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802347e:	b2db      	uxtb	r3, r3
 8023480:	00c9      	lsls	r1, r1, #3
 8023482:	fb03 f30e 	mul.w	r3, r3, lr
 8023486:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802348a:	4301      	orrs	r1, r0
 802348c:	1c58      	adds	r0, r3, #1
 802348e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023492:	00d2      	lsls	r2, r2, #3
 8023494:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023498:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802349c:	430a      	orrs	r2, r1
 802349e:	e726      	b.n	80232ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80234a0:	f115 0e01 	adds.w	lr, r5, #1
 80234a4:	f53f af24 	bmi.w	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80234a8:	4572      	cmp	r2, lr
 80234aa:	f6ff af21 	blt.w	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80234ae:	f110 0e01 	adds.w	lr, r0, #1
 80234b2:	f53f af1d 	bmi.w	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80234b6:	4573      	cmp	r3, lr
 80234b8:	f6ff af1a 	blt.w	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80234bc:	b21b      	sxth	r3, r3
 80234be:	b212      	sxth	r2, r2
 80234c0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80234c4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80234c8:	9301      	str	r3, [sp, #4]
 80234ca:	9200      	str	r2, [sp, #0]
 80234cc:	4639      	mov	r1, r7
 80234ce:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80234d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80234d4:	f7ff fc24 	bl	8022d20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80234d8:	e70a      	b.n	80232f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80234da:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80234dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80234e0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80234e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80234e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80234ec:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234ee:	141f      	asrs	r7, r3, #16
 80234f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80234f2:	141b      	asrs	r3, r3, #16
 80234f4:	fb01 3707 	mla	r7, r1, r7, r3
 80234f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80234fa:	fa1f fc82 	uxth.w	ip, r2
 80234fe:	eb03 0a07 	add.w	sl, r3, r7
 8023502:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023506:	f813 9007 	ldrb.w	r9, [r3, r7]
 802350a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802350e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023512:	b29b      	uxth	r3, r3
 8023514:	2d00      	cmp	r5, #0
 8023516:	f000 80fe 	beq.w	8023716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802351a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802351e:	940c      	str	r4, [sp, #48]	; 0x30
 8023520:	eb0a 0b01 	add.w	fp, sl, r1
 8023524:	fa1f fa85 	uxth.w	sl, r5
 8023528:	fb0a fc0c 	mul.w	ip, sl, ip
 802352c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023530:	fa1f fa8a 	uxth.w	sl, sl
 8023534:	eba0 000c 	sub.w	r0, r0, ip
 8023538:	eba3 030a 	sub.w	r3, r3, sl
 802353c:	b280      	uxth	r0, r0
 802353e:	fb08 f000 	mul.w	r0, r8, r0
 8023542:	b29b      	uxth	r3, r3
 8023544:	fb09 0303 	mla	r3, r9, r3, r0
 8023548:	980c      	ldr	r0, [sp, #48]	; 0x30
 802354a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802354e:	940d      	str	r4, [sp, #52]	; 0x34
 8023550:	fb0a 3300 	mla	r3, sl, r0, r3
 8023554:	fb0c 3304 	mla	r3, ip, r4, r3
 8023558:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802355c:	2b00      	cmp	r3, #0
 802355e:	f000 80cc 	beq.w	80236fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023562:	9808      	ldr	r0, [sp, #32]
 8023564:	9c08      	ldr	r4, [sp, #32]
 8023566:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802356a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802356e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023572:	f000 80d5 	beq.w	8023720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023576:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802357a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802357e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023582:	fb09 f707 	mul.w	r7, r9, r7
 8023586:	fb0a fc0c 	mul.w	ip, sl, ip
 802358a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802358e:	f107 0b20 	add.w	fp, r7, #32
 8023592:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023596:	44cc      	add	ip, r9
 8023598:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802359c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80235a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80235a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80235a8:	ea4c 0909 	orr.w	r9, ip, r9
 80235ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80235b0:	8847      	ldrh	r7, [r0, #2]
 80235b2:	d019      	beq.n	80235e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80235b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80235b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80235bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80235c0:	fb08 f807 	mul.w	r8, r8, r7
 80235c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80235c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80235cc:	f108 0b20 	add.w	fp, r8, #32
 80235d0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80235d4:	44bc      	add	ip, r7
 80235d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80235da:	0a3f      	lsrs	r7, r7, #8
 80235dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80235e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80235e4:	ea4c 0707 	orr.w	r7, ip, r7
 80235e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80235ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80235f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80235f4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80235f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80235fc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023600:	ea4c 0909 	orr.w	r9, ip, r9
 8023604:	ea4a 0707 	orr.w	r7, sl, r7
 8023608:	2d00      	cmp	r5, #0
 802360a:	f000 808b 	beq.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802360e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023612:	3901      	subs	r1, #1
 8023614:	0049      	lsls	r1, r1, #1
 8023616:	3102      	adds	r1, #2
 8023618:	eb00 0c01 	add.w	ip, r0, r1
 802361c:	5a41      	ldrh	r1, [r0, r1]
 802361e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023620:	28ff      	cmp	r0, #255	; 0xff
 8023622:	d019      	beq.n	8023658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023624:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023626:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802362a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802362e:	fb04 fa01 	mul.w	sl, r4, r1
 8023632:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023636:	fb08 f800 	mul.w	r8, r8, r0
 802363a:	f10a 0020 	add.w	r0, sl, #32
 802363e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023642:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023646:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802364a:	4441      	add	r1, r8
 802364c:	0a00      	lsrs	r0, r0, #8
 802364e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023652:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023656:	4301      	orrs	r1, r0
 8023658:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802365a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802365e:	2cff      	cmp	r4, #255	; 0xff
 8023660:	d01a      	beq.n	8023698 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8023662:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023666:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802366a:	fb04 fa00 	mul.w	sl, r4, r0
 802366e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023672:	fb08 f80c 	mul.w	r8, r8, ip
 8023676:	f10a 0c20 	add.w	ip, sl, #32
 802367a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802367e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023682:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023686:	4440      	add	r0, r8
 8023688:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802368c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023690:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023694:	ea40 000c 	orr.w	r0, r0, ip
 8023698:	fb15 fc02 	smulbb	ip, r5, r2
 802369c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80236a0:	f1c5 0810 	rsb	r8, r5, #16
 80236a4:	eba8 0802 	sub.w	r8, r8, r2
 80236a8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80236ac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80236b0:	437a      	muls	r2, r7
 80236b2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80236b6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80236ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80236be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80236c2:	fb09 2208 	mla	r2, r9, r8, r2
 80236c6:	ea4a 0101 	orr.w	r1, sl, r1
 80236ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80236ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80236d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80236d6:	fb05 2201 	mla	r2, r5, r1, r2
 80236da:	ea4b 0000 	orr.w	r0, fp, r0
 80236de:	fb0c 2200 	mla	r2, ip, r0, r2
 80236e2:	0d57      	lsrs	r7, r2, #21
 80236e4:	0952      	lsrs	r2, r2, #5
 80236e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80236ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80236ee:	433a      	orrs	r2, r7
 80236f0:	2bff      	cmp	r3, #255	; 0xff
 80236f2:	b292      	uxth	r2, r2
 80236f4:	d127      	bne.n	8023746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80236f6:	f8ae 2000 	strh.w	r2, [lr]
 80236fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80236fc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80236fe:	4413      	add	r3, r2
 8023700:	931d      	str	r3, [sp, #116]	; 0x74
 8023702:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023704:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023706:	441a      	add	r2, r3
 8023708:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802370a:	921e      	str	r2, [sp, #120]	; 0x78
 802370c:	3b01      	subs	r3, #1
 802370e:	f10e 0e02 	add.w	lr, lr, #2
 8023712:	930f      	str	r3, [sp, #60]	; 0x3c
 8023714:	e627      	b.n	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023716:	fb08 f000 	mul.w	r0, r8, r0
 802371a:	fb09 0303 	mla	r3, r9, r3, r0
 802371e:	e71b      	b.n	8023558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023720:	46b9      	mov	r9, r7
 8023722:	e743      	b.n	80235ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023724:	f1c2 0110 	rsb	r1, r2, #16
 8023728:	437a      	muls	r2, r7
 802372a:	fb09 2901 	mla	r9, r9, r1, r2
 802372e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023732:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023736:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802373a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802373e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023742:	4302      	orrs	r2, r0
 8023744:	e7d4      	b.n	80236f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8023746:	f8be 7000 	ldrh.w	r7, [lr]
 802374a:	4c1c      	ldr	r4, [pc, #112]	; (80237bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802374c:	43db      	mvns	r3, r3
 802374e:	1238      	asrs	r0, r7, #8
 8023750:	fa5f fc83 	uxtb.w	ip, r3
 8023754:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023758:	10fd      	asrs	r5, r7, #3
 802375a:	fb00 f00c 	mul.w	r0, r0, ip
 802375e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023762:	fb05 f10c 	mul.w	r1, r5, ip
 8023766:	1c45      	adds	r5, r0, #1
 8023768:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802376c:	1215      	asrs	r5, r2, #8
 802376e:	f025 0507 	bic.w	r5, r5, #7
 8023772:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023776:	1c4d      	adds	r5, r1, #1
 8023778:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802377c:	10d1      	asrs	r1, r2, #3
 802377e:	f021 0103 	bic.w	r1, r1, #3
 8023782:	00fb      	lsls	r3, r7, #3
 8023784:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023788:	b2db      	uxtb	r3, r3
 802378a:	b2c0      	uxtb	r0, r0
 802378c:	00c9      	lsls	r1, r1, #3
 802378e:	fb03 f30c 	mul.w	r3, r3, ip
 8023792:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023796:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802379a:	4308      	orrs	r0, r1
 802379c:	1c59      	adds	r1, r3, #1
 802379e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80237a2:	00d2      	lsls	r2, r2, #3
 80237a4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80237a8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80237ac:	4318      	orrs	r0, r3
 80237ae:	f8ae 0000 	strh.w	r0, [lr]
 80237b2:	e7a2      	b.n	80236fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80237b4:	b013      	add	sp, #76	; 0x4c
 80237b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80237ba:	bf00      	nop
 80237bc:	fffff800 	.word	0xfffff800

080237c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80237c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80237c4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80237c8:	fb05 4c03 	mla	ip, r5, r3, r4
 80237cc:	2d00      	cmp	r5, #0
 80237ce:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80237d2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80237d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80237da:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80237de:	8808      	ldrh	r0, [r1, #0]
 80237e0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80237e4:	f2c0 80a7 	blt.w	8023936 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80237e8:	45aa      	cmp	sl, r5
 80237ea:	f340 80a4 	ble.w	8023936 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80237ee:	2c00      	cmp	r4, #0
 80237f0:	f2c0 809f 	blt.w	8023932 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80237f4:	42a3      	cmp	r3, r4
 80237f6:	f340 809c 	ble.w	8023932 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80237fa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80237fe:	1c62      	adds	r2, r4, #1
 8023800:	f100 809c 	bmi.w	802393c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023804:	4293      	cmp	r3, r2
 8023806:	f340 8099 	ble.w	802393c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802380a:	f1b9 0f00 	cmp.w	r9, #0
 802380e:	f000 8095 	beq.w	802393c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023812:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023816:	3501      	adds	r5, #1
 8023818:	f100 8094 	bmi.w	8023944 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802381c:	45aa      	cmp	sl, r5
 802381e:	f340 8091 	ble.w	8023944 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023822:	2f00      	cmp	r7, #0
 8023824:	f000 808e 	beq.w	8023944 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023828:	2c00      	cmp	r4, #0
 802382a:	f2c0 8089 	blt.w	8023940 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802382e:	42a3      	cmp	r3, r4
 8023830:	f340 8086 	ble.w	8023940 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023834:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023838:	3401      	adds	r4, #1
 802383a:	f100 8086 	bmi.w	802394a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802383e:	42a3      	cmp	r3, r4
 8023840:	f340 8083 	ble.w	802394a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023844:	f1b9 0f00 	cmp.w	r9, #0
 8023848:	d07f      	beq.n	802394a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802384a:	3301      	adds	r3, #1
 802384c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023850:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023854:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023858:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802385c:	fb19 fe07 	smulbb	lr, r9, r7
 8023860:	ea44 0808 	orr.w	r8, r4, r8
 8023864:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023868:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802386c:	f1c7 0210 	rsb	r2, r7, #16
 8023870:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023874:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023878:	ea44 0c0c 	orr.w	ip, r4, ip
 802387c:	eba2 0209 	sub.w	r2, r2, r9
 8023880:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023884:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023888:	fb04 f40c 	mul.w	r4, r4, ip
 802388c:	fb02 4808 	mla	r8, r2, r8, r4
 8023890:	041a      	lsls	r2, r3, #16
 8023892:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023896:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802389a:	4313      	orrs	r3, r2
 802389c:	042a      	lsls	r2, r5, #16
 802389e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80238a2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80238a6:	fb0e 8303 	mla	r3, lr, r3, r8
 80238aa:	432a      	orrs	r2, r5
 80238ac:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80238b0:	fb07 3202 	mla	r2, r7, r2, r3
 80238b4:	0d53      	lsrs	r3, r2, #21
 80238b6:	0952      	lsrs	r2, r2, #5
 80238b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80238bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80238c0:	431a      	orrs	r2, r3
 80238c2:	b293      	uxth	r3, r2
 80238c4:	b2b4      	uxth	r4, r6
 80238c6:	1202      	asrs	r2, r0, #8
 80238c8:	43f6      	mvns	r6, r6
 80238ca:	b2f6      	uxtb	r6, r6
 80238cc:	121d      	asrs	r5, r3, #8
 80238ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80238d2:	fb12 f206 	smulbb	r2, r2, r6
 80238d6:	10c7      	asrs	r7, r0, #3
 80238d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80238dc:	00c0      	lsls	r0, r0, #3
 80238de:	fb05 2504 	mla	r5, r5, r4, r2
 80238e2:	b2c0      	uxtb	r0, r0
 80238e4:	10da      	asrs	r2, r3, #3
 80238e6:	00db      	lsls	r3, r3, #3
 80238e8:	b2db      	uxtb	r3, r3
 80238ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80238ee:	fb10 f006 	smulbb	r0, r0, r6
 80238f2:	b2ad      	uxth	r5, r5
 80238f4:	fb03 0004 	mla	r0, r3, r4, r0
 80238f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80238fc:	fb17 f706 	smulbb	r7, r7, r6
 8023900:	b280      	uxth	r0, r0
 8023902:	1c6b      	adds	r3, r5, #1
 8023904:	fb02 7204 	mla	r2, r2, r4, r7
 8023908:	b292      	uxth	r2, r2
 802390a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802390e:	1c43      	adds	r3, r0, #1
 8023910:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023914:	1c50      	adds	r0, r2, #1
 8023916:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802391a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802391e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023922:	0952      	lsrs	r2, r2, #5
 8023924:	432b      	orrs	r3, r5
 8023926:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802392a:	4313      	orrs	r3, r2
 802392c:	800b      	strh	r3, [r1, #0]
 802392e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023932:	4680      	mov	r8, r0
 8023934:	e763      	b.n	80237fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023936:	4684      	mov	ip, r0
 8023938:	4680      	mov	r8, r0
 802393a:	e76c      	b.n	8023816 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802393c:	4684      	mov	ip, r0
 802393e:	e76a      	b.n	8023816 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023940:	4605      	mov	r5, r0
 8023942:	e779      	b.n	8023838 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023944:	4603      	mov	r3, r0
 8023946:	4605      	mov	r5, r0
 8023948:	e782      	b.n	8023850 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802394a:	4603      	mov	r3, r0
 802394c:	e780      	b.n	8023850 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802394e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802394e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023952:	b093      	sub	sp, #76	; 0x4c
 8023954:	461d      	mov	r5, r3
 8023956:	9210      	str	r2, [sp, #64]	; 0x40
 8023958:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802395a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802395e:	920b      	str	r2, [sp, #44]	; 0x2c
 8023960:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023964:	910a      	str	r1, [sp, #40]	; 0x28
 8023966:	6859      	ldr	r1, [r3, #4]
 8023968:	681b      	ldr	r3, [r3, #0]
 802396a:	9011      	str	r0, [sp, #68]	; 0x44
 802396c:	fb01 2707 	mla	r7, r1, r7, r2
 8023970:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023974:	9307      	str	r3, [sp, #28]
 8023976:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023978:	681b      	ldr	r3, [r3, #0]
 802397a:	9309      	str	r3, [sp, #36]	; 0x24
 802397c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802397e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023982:	43db      	mvns	r3, r3
 8023984:	b2db      	uxtb	r3, r3
 8023986:	9308      	str	r3, [sp, #32]
 8023988:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802398a:	2b00      	cmp	r3, #0
 802398c:	dc03      	bgt.n	8023996 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802398e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023990:	2b00      	cmp	r3, #0
 8023992:	f340 8203 	ble.w	8023d9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023996:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023998:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802399c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80239a0:	1e48      	subs	r0, r1, #1
 80239a2:	f102 3cff 	add.w	ip, r2, #4294967295
 80239a6:	2d00      	cmp	r5, #0
 80239a8:	f340 80da 	ble.w	8023b60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80239ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80239b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80239b4:	d406      	bmi.n	80239c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80239b6:	4586      	cmp	lr, r0
 80239b8:	da04      	bge.n	80239c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80239ba:	2b00      	cmp	r3, #0
 80239bc:	db02      	blt.n	80239c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80239be:	4563      	cmp	r3, ip
 80239c0:	f2c0 80cf 	blt.w	8023b62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80239c4:	f11e 0e01 	adds.w	lr, lr, #1
 80239c8:	f100 80c1 	bmi.w	8023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80239cc:	4571      	cmp	r1, lr
 80239ce:	f2c0 80be 	blt.w	8023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80239d2:	3301      	adds	r3, #1
 80239d4:	f100 80bb 	bmi.w	8023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80239d8:	429a      	cmp	r2, r3
 80239da:	f2c0 80b8 	blt.w	8023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80239de:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80239e2:	46a9      	mov	r9, r5
 80239e4:	f1b9 0f00 	cmp.w	r9, #0
 80239e8:	f340 80d8 	ble.w	8023b9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80239ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80239ee:	1421      	asrs	r1, r4, #16
 80239f0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80239f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80239f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80239fc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023a00:	f100 8111 	bmi.w	8023c26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a04:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023a08:	4551      	cmp	r1, sl
 8023a0a:	f280 810c 	bge.w	8023c26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a0e:	2800      	cmp	r0, #0
 8023a10:	f2c0 8109 	blt.w	8023c26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a14:	f103 3aff 	add.w	sl, r3, #4294967295
 8023a18:	4550      	cmp	r0, sl
 8023a1a:	f280 8104 	bge.w	8023c26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a1e:	fa0f f38e 	sxth.w	r3, lr
 8023a22:	fb00 1103 	mla	r1, r0, r3, r1
 8023a26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023a28:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023a2c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023a30:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023a34:	f1bc 0f00 	cmp.w	ip, #0
 8023a38:	d007      	beq.n	8023a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023a3a:	005b      	lsls	r3, r3, #1
 8023a3c:	eb0a 0003 	add.w	r0, sl, r3
 8023a40:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023a44:	930c      	str	r3, [sp, #48]	; 0x30
 8023a46:	8843      	ldrh	r3, [r0, #2]
 8023a48:	930d      	str	r3, [sp, #52]	; 0x34
 8023a4a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023a4e:	fb12 f30c 	smulbb	r3, r2, ip
 8023a52:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023a56:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023a5a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023a5e:	10db      	asrs	r3, r3, #3
 8023a60:	ea40 000e 	orr.w	r0, r0, lr
 8023a64:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a68:	f1cc 0e10 	rsb	lr, ip, #16
 8023a6c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023a70:	ebae 0e02 	sub.w	lr, lr, r2
 8023a74:	ea4a 0101 	orr.w	r1, sl, r1
 8023a78:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023a7c:	4351      	muls	r1, r2
 8023a7e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023a80:	9f08      	ldr	r7, [sp, #32]
 8023a82:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023a86:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023a8a:	0410      	lsls	r0, r2, #16
 8023a8c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023a90:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023a94:	4310      	orrs	r0, r2
 8023a96:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023a98:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023a9a:	0412      	lsls	r2, r2, #16
 8023a9c:	fb03 e000 	mla	r0, r3, r0, lr
 8023aa0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023aa4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023aa8:	ea42 020e 	orr.w	r2, r2, lr
 8023aac:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023ab0:	fb03 0302 	mla	r3, r3, r2, r0
 8023ab4:	0d5a      	lsrs	r2, r3, #21
 8023ab6:	095b      	lsrs	r3, r3, #5
 8023ab8:	f8b8 0000 	ldrh.w	r0, [r8]
 8023abc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ac0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023ac4:	4313      	orrs	r3, r2
 8023ac6:	b29b      	uxth	r3, r3
 8023ac8:	1201      	asrs	r1, r0, #8
 8023aca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023ace:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023ad2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023ad6:	fb11 f107 	smulbb	r1, r1, r7
 8023ada:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023ade:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023ae2:	00c0      	lsls	r0, r0, #3
 8023ae4:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023ae8:	b2c0      	uxtb	r0, r0
 8023aea:	10d9      	asrs	r1, r3, #3
 8023aec:	00db      	lsls	r3, r3, #3
 8023aee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023af2:	b2db      	uxtb	r3, r3
 8023af4:	fb10 f007 	smulbb	r0, r0, r7
 8023af8:	fa1f fc8c 	uxth.w	ip, ip
 8023afc:	fb03 0302 	mla	r3, r3, r2, r0
 8023b00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023b04:	fb1e fe07 	smulbb	lr, lr, r7
 8023b08:	fb01 e102 	mla	r1, r1, r2, lr
 8023b0c:	b29a      	uxth	r2, r3
 8023b0e:	f10c 0301 	add.w	r3, ip, #1
 8023b12:	b289      	uxth	r1, r1
 8023b14:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023b18:	1c53      	adds	r3, r2, #1
 8023b1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023b1e:	1c4a      	adds	r2, r1, #1
 8023b20:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023b24:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023b28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023b2c:	0949      	lsrs	r1, r1, #5
 8023b2e:	ea43 030c 	orr.w	r3, r3, ip
 8023b32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023b36:	430b      	orrs	r3, r1
 8023b38:	f8a8 3000 	strh.w	r3, [r8]
 8023b3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023b3e:	441c      	add	r4, r3
 8023b40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b42:	f108 0802 	add.w	r8, r8, #2
 8023b46:	441e      	add	r6, r3
 8023b48:	f109 39ff 	add.w	r9, r9, #4294967295
 8023b4c:	e74a      	b.n	80239e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023b4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023b50:	441c      	add	r4, r3
 8023b52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b54:	441e      	add	r6, r3
 8023b56:	9b07      	ldr	r3, [sp, #28]
 8023b58:	3302      	adds	r3, #2
 8023b5a:	3d01      	subs	r5, #1
 8023b5c:	9307      	str	r3, [sp, #28]
 8023b5e:	e722      	b.n	80239a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023b60:	d022      	beq.n	8023ba8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023b62:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023b64:	1e6b      	subs	r3, r5, #1
 8023b66:	fb00 4003 	mla	r0, r0, r3, r4
 8023b6a:	1400      	asrs	r0, r0, #16
 8023b6c:	f53f af37 	bmi.w	80239de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b70:	3901      	subs	r1, #1
 8023b72:	4288      	cmp	r0, r1
 8023b74:	f6bf af33 	bge.w	80239de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b78:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023b7a:	fb01 6303 	mla	r3, r1, r3, r6
 8023b7e:	141b      	asrs	r3, r3, #16
 8023b80:	f53f af2d 	bmi.w	80239de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b84:	3a01      	subs	r2, #1
 8023b86:	4293      	cmp	r3, r2
 8023b88:	f6bf af29 	bge.w	80239de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b8c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023b90:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023b94:	46a8      	mov	r8, r5
 8023b96:	f1b8 0f00 	cmp.w	r8, #0
 8023b9a:	dc5e      	bgt.n	8023c5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023b9c:	9b07      	ldr	r3, [sp, #28]
 8023b9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023ba2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023ba6:	9307      	str	r3, [sp, #28]
 8023ba8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023baa:	2b00      	cmp	r3, #0
 8023bac:	f340 80f6 	ble.w	8023d9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023bb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023bb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023bb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023bbc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023bbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023bc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023bc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023bca:	eef0 6a62 	vmov.f32	s13, s5
 8023bce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023bd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023bda:	ee16 4a90 	vmov	r4, s13
 8023bde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023be2:	eef0 6a43 	vmov.f32	s13, s6
 8023be6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023bea:	ee12 2a90 	vmov	r2, s5
 8023bee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023bf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bf6:	ee13 2a10 	vmov	r2, s6
 8023bfa:	931f      	str	r3, [sp, #124]	; 0x7c
 8023bfc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023bfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c02:	9320      	str	r3, [sp, #128]	; 0x80
 8023c04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023c06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023c08:	3b01      	subs	r3, #1
 8023c0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c0e:	930a      	str	r3, [sp, #40]	; 0x28
 8023c10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c12:	ee16 6a90 	vmov	r6, s13
 8023c16:	bf14      	ite	ne
 8023c18:	461d      	movne	r5, r3
 8023c1a:	4615      	moveq	r5, r2
 8023c1c:	eeb0 3a67 	vmov.f32	s6, s15
 8023c20:	eef0 2a47 	vmov.f32	s5, s14
 8023c24:	e6b0      	b.n	8023988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023c26:	f111 0a01 	adds.w	sl, r1, #1
 8023c2a:	d487      	bmi.n	8023b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023c2c:	45d6      	cmp	lr, sl
 8023c2e:	db85      	blt.n	8023b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023c30:	f110 0a01 	adds.w	sl, r0, #1
 8023c34:	d482      	bmi.n	8023b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023c36:	4553      	cmp	r3, sl
 8023c38:	db80      	blt.n	8023b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023c3a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023c3c:	9101      	str	r1, [sp, #4]
 8023c3e:	b21b      	sxth	r3, r3
 8023c40:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023c44:	9300      	str	r3, [sp, #0]
 8023c46:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023c4a:	fa0f f38e 	sxth.w	r3, lr
 8023c4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023c50:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023c52:	4641      	mov	r1, r8
 8023c54:	f7ff fdb4 	bl	80237c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023c58:	e770      	b.n	8023b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023c5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c5c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023c5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c62:	1430      	asrs	r0, r6, #16
 8023c64:	1423      	asrs	r3, r4, #16
 8023c66:	fb01 3000 	mla	r0, r1, r0, r3
 8023c6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c6c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023c70:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023c74:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023c78:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023c7c:	8858      	ldrh	r0, [r3, #2]
 8023c7e:	f1be 0f00 	cmp.w	lr, #0
 8023c82:	d00b      	beq.n	8023c9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023c84:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023c88:	3901      	subs	r1, #1
 8023c8a:	0049      	lsls	r1, r1, #1
 8023c8c:	3102      	adds	r1, #2
 8023c8e:	eb03 0b01 	add.w	fp, r3, r1
 8023c92:	5a5b      	ldrh	r3, [r3, r1]
 8023c94:	930e      	str	r3, [sp, #56]	; 0x38
 8023c96:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023c9a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023c9c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023ca0:	fb12 f30e 	smulbb	r3, r2, lr
 8023ca4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023ca8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023cac:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023cb0:	10db      	asrs	r3, r3, #3
 8023cb2:	ea41 010c 	orr.w	r1, r1, ip
 8023cb6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023cba:	f1ce 0c10 	rsb	ip, lr, #16
 8023cbe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023cc2:	ebac 0c02 	sub.w	ip, ip, r2
 8023cc6:	ea4b 0000 	orr.w	r0, fp, r0
 8023cca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023cce:	4350      	muls	r0, r2
 8023cd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023cd2:	9f08      	ldr	r7, [sp, #32]
 8023cd4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023cd8:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023cdc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023ce0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023ce4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023ce6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023ce8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023cec:	0412      	lsls	r2, r2, #16
 8023cee:	ea4b 0101 	orr.w	r1, fp, r1
 8023cf2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023cf6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023cfa:	fb03 c101 	mla	r1, r3, r1, ip
 8023cfe:	4302      	orrs	r2, r0
 8023d00:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023d04:	fb03 1202 	mla	r2, r3, r2, r1
 8023d08:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023d0c:	0952      	lsrs	r2, r2, #5
 8023d0e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023d12:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023d16:	f8b9 2000 	ldrh.w	r2, [r9]
 8023d1a:	ea4b 0303 	orr.w	r3, fp, r3
 8023d1e:	b29b      	uxth	r3, r3
 8023d20:	1211      	asrs	r1, r2, #8
 8023d22:	1218      	asrs	r0, r3, #8
 8023d24:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023d28:	fb11 f107 	smulbb	r1, r1, r7
 8023d2c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023d30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023d34:	00d2      	lsls	r2, r2, #3
 8023d36:	fb00 100a 	mla	r0, r0, sl, r1
 8023d3a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023d3e:	10d9      	asrs	r1, r3, #3
 8023d40:	b2d2      	uxtb	r2, r2
 8023d42:	00db      	lsls	r3, r3, #3
 8023d44:	fb1c fc07 	smulbb	ip, ip, r7
 8023d48:	fb12 f207 	smulbb	r2, r2, r7
 8023d4c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023d50:	b2db      	uxtb	r3, r3
 8023d52:	b280      	uxth	r0, r0
 8023d54:	fb01 c10a 	mla	r1, r1, sl, ip
 8023d58:	fb03 230a 	mla	r3, r3, sl, r2
 8023d5c:	b29b      	uxth	r3, r3
 8023d5e:	b289      	uxth	r1, r1
 8023d60:	1c42      	adds	r2, r0, #1
 8023d62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023d66:	f101 0c01 	add.w	ip, r1, #1
 8023d6a:	1c5a      	adds	r2, r3, #1
 8023d6c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023d70:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023d74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023d76:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023d7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023d7e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023d82:	4310      	orrs	r0, r2
 8023d84:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023d88:	441c      	add	r4, r3
 8023d8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d8c:	ea40 000c 	orr.w	r0, r0, ip
 8023d90:	f829 0b02 	strh.w	r0, [r9], #2
 8023d94:	441e      	add	r6, r3
 8023d96:	f108 38ff 	add.w	r8, r8, #4294967295
 8023d9a:	e6fc      	b.n	8023b96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023d9c:	b013      	add	sp, #76	; 0x4c
 8023d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023da2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023da2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023da6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023daa:	fb0e 4703 	mla	r7, lr, r3, r4
 8023dae:	f1be 0f00 	cmp.w	lr, #0
 8023db2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023db6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023dba:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023dbe:	8808      	ldrh	r0, [r1, #0]
 8023dc0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023dc4:	db60      	blt.n	8023e88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023dc6:	45f1      	cmp	r9, lr
 8023dc8:	dd5e      	ble.n	8023e88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023dca:	2c00      	cmp	r4, #0
 8023dcc:	db5a      	blt.n	8023e84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023dce:	42a3      	cmp	r3, r4
 8023dd0:	dd58      	ble.n	8023e84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023dd2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023dd6:	1c62      	adds	r2, r4, #1
 8023dd8:	d459      	bmi.n	8023e8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023dda:	4293      	cmp	r3, r2
 8023ddc:	dd57      	ble.n	8023e8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023dde:	2d00      	cmp	r5, #0
 8023de0:	d055      	beq.n	8023e8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023de2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023de6:	f11e 0e01 	adds.w	lr, lr, #1
 8023dea:	d454      	bmi.n	8023e96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023dec:	45f1      	cmp	r9, lr
 8023dee:	dd52      	ble.n	8023e96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023df0:	2e00      	cmp	r6, #0
 8023df2:	d050      	beq.n	8023e96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023df4:	2c00      	cmp	r4, #0
 8023df6:	db4c      	blt.n	8023e92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023df8:	42a3      	cmp	r3, r4
 8023dfa:	dd4a      	ble.n	8023e92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023dfc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023e00:	3401      	adds	r4, #1
 8023e02:	d405      	bmi.n	8023e10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e04:	42a3      	cmp	r3, r4
 8023e06:	dd03      	ble.n	8023e10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e08:	b115      	cbz	r5, 8023e10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e0a:	3301      	adds	r3, #1
 8023e0c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023e10:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023e14:	fb15 f406 	smulbb	r4, r5, r6
 8023e18:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023e1c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023e20:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023e24:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023e28:	ea43 0c0c 	orr.w	ip, r3, ip
 8023e2c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023e30:	f1c6 0310 	rsb	r3, r6, #16
 8023e34:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023e38:	1b5b      	subs	r3, r3, r5
 8023e3a:	ea4e 0707 	orr.w	r7, lr, r7
 8023e3e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023e42:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023e46:	437d      	muls	r5, r7
 8023e48:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023e4c:	0403      	lsls	r3, r0, #16
 8023e4e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023e52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023e56:	4318      	orrs	r0, r3
 8023e58:	0413      	lsls	r3, r2, #16
 8023e5a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023e5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023e62:	4313      	orrs	r3, r2
 8023e64:	fb04 c000 	mla	r0, r4, r0, ip
 8023e68:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023e6c:	fb06 0003 	mla	r0, r6, r3, r0
 8023e70:	0d43      	lsrs	r3, r0, #21
 8023e72:	0940      	lsrs	r0, r0, #5
 8023e74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023e7c:	4318      	orrs	r0, r3
 8023e7e:	8008      	strh	r0, [r1, #0]
 8023e80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023e84:	4684      	mov	ip, r0
 8023e86:	e7a6      	b.n	8023dd6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023e88:	4607      	mov	r7, r0
 8023e8a:	4684      	mov	ip, r0
 8023e8c:	e7ab      	b.n	8023de6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023e8e:	4607      	mov	r7, r0
 8023e90:	e7a9      	b.n	8023de6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023e92:	4602      	mov	r2, r0
 8023e94:	e7b4      	b.n	8023e00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023e96:	4602      	mov	r2, r0
 8023e98:	e7ba      	b.n	8023e10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023e9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023e9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023e9e:	b08f      	sub	sp, #60	; 0x3c
 8023ea0:	461d      	mov	r5, r3
 8023ea2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023ea4:	920c      	str	r2, [sp, #48]	; 0x30
 8023ea6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023eaa:	9107      	str	r1, [sp, #28]
 8023eac:	6859      	ldr	r1, [r3, #4]
 8023eae:	681b      	ldr	r3, [r3, #0]
 8023eb0:	900d      	str	r0, [sp, #52]	; 0x34
 8023eb2:	fb01 2707 	mla	r7, r1, r7, r2
 8023eb6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023eba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ebc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023ec0:	f8d3 8000 	ldr.w	r8, [r3]
 8023ec4:	9b07      	ldr	r3, [sp, #28]
 8023ec6:	2b00      	cmp	r3, #0
 8023ec8:	dc03      	bgt.n	8023ed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023eca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023ecc:	2b00      	cmp	r3, #0
 8023ece:	f340 8181 	ble.w	80241d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023ed2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ed4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ed8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023edc:	1e48      	subs	r0, r1, #1
 8023ede:	f102 3cff 	add.w	ip, r2, #4294967295
 8023ee2:	2d00      	cmp	r5, #0
 8023ee4:	f340 809b 	ble.w	802401e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023ee8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023eec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023ef0:	d406      	bmi.n	8023f00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023ef2:	4586      	cmp	lr, r0
 8023ef4:	da04      	bge.n	8023f00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023ef6:	2b00      	cmp	r3, #0
 8023ef8:	db02      	blt.n	8023f00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023efa:	4563      	cmp	r3, ip
 8023efc:	f2c0 8090 	blt.w	8024020 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023f00:	f11e 0e01 	adds.w	lr, lr, #1
 8023f04:	f100 8084 	bmi.w	8024010 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f08:	4571      	cmp	r1, lr
 8023f0a:	f2c0 8081 	blt.w	8024010 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f0e:	3301      	adds	r3, #1
 8023f10:	d47e      	bmi.n	8024010 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f12:	429a      	cmp	r2, r3
 8023f14:	db7c      	blt.n	8024010 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f16:	46aa      	mov	sl, r5
 8023f18:	46b9      	mov	r9, r7
 8023f1a:	f1ba 0f00 	cmp.w	sl, #0
 8023f1e:	f340 8099 	ble.w	8024054 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023f22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f24:	1421      	asrs	r1, r4, #16
 8023f26:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023f2a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023f2e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023f32:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023f36:	f100 80d0 	bmi.w	80240da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023f3a:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023f3e:	4559      	cmp	r1, fp
 8023f40:	f280 80cb 	bge.w	80240da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023f44:	2800      	cmp	r0, #0
 8023f46:	f2c0 80c8 	blt.w	80240da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023f4a:	f103 3bff 	add.w	fp, r3, #4294967295
 8023f4e:	4558      	cmp	r0, fp
 8023f50:	f280 80c3 	bge.w	80240da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023f54:	fa0f fe8e 	sxth.w	lr, lr
 8023f58:	fb00 110e 	mla	r1, r0, lr, r1
 8023f5c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023f60:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023f64:	8841      	ldrh	r1, [r0, #2]
 8023f66:	f1bc 0f00 	cmp.w	ip, #0
 8023f6a:	d00b      	beq.n	8023f84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023f6c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023f70:	3b01      	subs	r3, #1
 8023f72:	005b      	lsls	r3, r3, #1
 8023f74:	3302      	adds	r3, #2
 8023f76:	eb00 0e03 	add.w	lr, r0, r3
 8023f7a:	5ac3      	ldrh	r3, [r0, r3]
 8023f7c:	9308      	str	r3, [sp, #32]
 8023f7e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023f82:	9309      	str	r3, [sp, #36]	; 0x24
 8023f84:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023f88:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023f8c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023f90:	ea40 000b 	orr.w	r0, r0, fp
 8023f94:	fb12 f30c 	smulbb	r3, r2, ip
 8023f98:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023f9c:	10db      	asrs	r3, r3, #3
 8023f9e:	f1cc 0e10 	rsb	lr, ip, #16
 8023fa2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023fa6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023faa:	ebae 0e02 	sub.w	lr, lr, r2
 8023fae:	ea4b 0101 	orr.w	r1, fp, r1
 8023fb2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023fb6:	4351      	muls	r1, r2
 8023fb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023fba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023fbe:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023fc2:	0410      	lsls	r0, r2, #16
 8023fc4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023fc8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023fcc:	4310      	orrs	r0, r2
 8023fce:	9a08      	ldr	r2, [sp, #32]
 8023fd0:	9908      	ldr	r1, [sp, #32]
 8023fd2:	0412      	lsls	r2, r2, #16
 8023fd4:	fb03 e000 	mla	r0, r3, r0, lr
 8023fd8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023fdc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023fe0:	ea42 020e 	orr.w	r2, r2, lr
 8023fe4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023fe8:	fb03 0302 	mla	r3, r3, r2, r0
 8023fec:	0d5a      	lsrs	r2, r3, #21
 8023fee:	095b      	lsrs	r3, r3, #5
 8023ff0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ff4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023ff8:	4313      	orrs	r3, r2
 8023ffa:	f8a9 3000 	strh.w	r3, [r9]
 8023ffe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024000:	441c      	add	r4, r3
 8024002:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024004:	f109 0902 	add.w	r9, r9, #2
 8024008:	441e      	add	r6, r3
 802400a:	f10a 3aff 	add.w	sl, sl, #4294967295
 802400e:	e784      	b.n	8023f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024010:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024012:	441c      	add	r4, r3
 8024014:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024016:	3d01      	subs	r5, #1
 8024018:	441e      	add	r6, r3
 802401a:	3702      	adds	r7, #2
 802401c:	e761      	b.n	8023ee2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802401e:	d01d      	beq.n	802405c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024020:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024022:	1e6b      	subs	r3, r5, #1
 8024024:	fb00 4003 	mla	r0, r0, r3, r4
 8024028:	1400      	asrs	r0, r0, #16
 802402a:	f53f af74 	bmi.w	8023f16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802402e:	3901      	subs	r1, #1
 8024030:	4288      	cmp	r0, r1
 8024032:	f6bf af70 	bge.w	8023f16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024036:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024038:	fb01 6303 	mla	r3, r1, r3, r6
 802403c:	141b      	asrs	r3, r3, #16
 802403e:	f53f af6a 	bmi.w	8023f16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024042:	3a01      	subs	r2, #1
 8024044:	4293      	cmp	r3, r2
 8024046:	f6bf af66 	bge.w	8023f16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802404a:	46a9      	mov	r9, r5
 802404c:	46ba      	mov	sl, r7
 802404e:	f1b9 0f00 	cmp.w	r9, #0
 8024052:	dc5a      	bgt.n	802410a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024054:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024058:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802405c:	9b07      	ldr	r3, [sp, #28]
 802405e:	2b00      	cmp	r3, #0
 8024060:	f340 80b8 	ble.w	80241d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024064:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024068:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802406c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024070:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024072:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024076:	ee31 1a05 	vadd.f32	s2, s2, s10
 802407a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802407e:	eef0 6a62 	vmov.f32	s13, s5
 8024082:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024086:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802408a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802408e:	ee16 4a90 	vmov	r4, s13
 8024092:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024096:	eef0 6a43 	vmov.f32	s13, s6
 802409a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802409e:	ee12 2a90 	vmov	r2, s5
 80240a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80240a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80240aa:	ee13 2a10 	vmov	r2, s6
 80240ae:	931b      	str	r3, [sp, #108]	; 0x6c
 80240b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80240b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80240b6:	931c      	str	r3, [sp, #112]	; 0x70
 80240b8:	9b07      	ldr	r3, [sp, #28]
 80240ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80240bc:	3b01      	subs	r3, #1
 80240be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80240c2:	9307      	str	r3, [sp, #28]
 80240c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80240c6:	ee16 6a90 	vmov	r6, s13
 80240ca:	bf14      	ite	ne
 80240cc:	461d      	movne	r5, r3
 80240ce:	4615      	moveq	r5, r2
 80240d0:	eeb0 3a67 	vmov.f32	s6, s15
 80240d4:	eef0 2a47 	vmov.f32	s5, s14
 80240d8:	e6f4      	b.n	8023ec4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80240da:	f111 0b01 	adds.w	fp, r1, #1
 80240de:	d48e      	bmi.n	8023ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80240e0:	45de      	cmp	lr, fp
 80240e2:	db8c      	blt.n	8023ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80240e4:	f110 0b01 	adds.w	fp, r0, #1
 80240e8:	d489      	bmi.n	8023ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80240ea:	455b      	cmp	r3, fp
 80240ec:	db87      	blt.n	8023ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80240ee:	b21b      	sxth	r3, r3
 80240f0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80240f4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80240f8:	9300      	str	r3, [sp, #0]
 80240fa:	4642      	mov	r2, r8
 80240fc:	fa0f f38e 	sxth.w	r3, lr
 8024100:	4649      	mov	r1, r9
 8024102:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024104:	f7ff fe4d 	bl	8023da2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024108:	e779      	b.n	8023ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802410a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802410c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024110:	1420      	asrs	r0, r4, #16
 8024112:	1431      	asrs	r1, r6, #16
 8024114:	fb03 0101 	mla	r1, r3, r1, r0
 8024118:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802411c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024120:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024124:	8841      	ldrh	r1, [r0, #2]
 8024126:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802412a:	f1be 0f00 	cmp.w	lr, #0
 802412e:	d00b      	beq.n	8024148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024130:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024134:	3b01      	subs	r3, #1
 8024136:	005b      	lsls	r3, r3, #1
 8024138:	3302      	adds	r3, #2
 802413a:	eb00 0b03 	add.w	fp, r0, r3
 802413e:	5ac3      	ldrh	r3, [r0, r3]
 8024140:	930a      	str	r3, [sp, #40]	; 0x28
 8024142:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024146:	930b      	str	r3, [sp, #44]	; 0x2c
 8024148:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802414c:	fb12 f30e 	smulbb	r3, r2, lr
 8024150:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024154:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024158:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802415c:	10db      	asrs	r3, r3, #3
 802415e:	ea40 000c 	orr.w	r0, r0, ip
 8024162:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024166:	f1ce 0c10 	rsb	ip, lr, #16
 802416a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802416e:	ebac 0c02 	sub.w	ip, ip, r2
 8024172:	ea4b 0101 	orr.w	r1, fp, r1
 8024176:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802417a:	4351      	muls	r1, r2
 802417c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802417e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024182:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024186:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802418a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802418e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024190:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024192:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024196:	0412      	lsls	r2, r2, #16
 8024198:	ea4b 0000 	orr.w	r0, fp, r0
 802419c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80241a0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80241a4:	fb03 c000 	mla	r0, r3, r0, ip
 80241a8:	ea42 0b0b 	orr.w	fp, r2, fp
 80241ac:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80241b0:	fb03 000b 	mla	r0, r3, fp, r0
 80241b4:	0d43      	lsrs	r3, r0, #21
 80241b6:	0940      	lsrs	r0, r0, #5
 80241b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80241bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80241c0:	4318      	orrs	r0, r3
 80241c2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80241c4:	f82a 0b02 	strh.w	r0, [sl], #2
 80241c8:	441c      	add	r4, r3
 80241ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80241cc:	f109 39ff 	add.w	r9, r9, #4294967295
 80241d0:	441e      	add	r6, r3
 80241d2:	e73c      	b.n	802404e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80241d4:	b00f      	add	sp, #60	; 0x3c
 80241d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080241da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80241da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80241de:	b085      	sub	sp, #20
 80241e0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80241e4:	9102      	str	r1, [sp, #8]
 80241e6:	2c00      	cmp	r4, #0
 80241e8:	fb04 7103 	mla	r1, r4, r3, r7
 80241ec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80241f0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80241f4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80241f8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80241fc:	f2c0 811b 	blt.w	8024436 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024200:	45a6      	cmp	lr, r4
 8024202:	f340 8118 	ble.w	8024436 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024206:	2f00      	cmp	r7, #0
 8024208:	f2c0 8113 	blt.w	8024432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802420c:	42bb      	cmp	r3, r7
 802420e:	f340 8110 	ble.w	8024432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024212:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024216:	1c7a      	adds	r2, r7, #1
 8024218:	f100 8110 	bmi.w	802443c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802421c:	4293      	cmp	r3, r2
 802421e:	f340 810d 	ble.w	802443c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024222:	2e00      	cmp	r6, #0
 8024224:	f000 810c 	beq.w	8024440 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024228:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802422c:	3401      	adds	r4, #1
 802422e:	f100 810b 	bmi.w	8024448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024232:	45a6      	cmp	lr, r4
 8024234:	f340 8108 	ble.w	8024448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024238:	2800      	cmp	r0, #0
 802423a:	f000 8108 	beq.w	802444e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802423e:	2f00      	cmp	r7, #0
 8024240:	f2c0 8100 	blt.w	8024444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024244:	42bb      	cmp	r3, r7
 8024246:	f340 80fd 	ble.w	8024444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802424a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802424e:	3701      	adds	r7, #1
 8024250:	f100 8100 	bmi.w	8024454 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024254:	42bb      	cmp	r3, r7
 8024256:	f340 80fd 	ble.w	8024454 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802425a:	2e00      	cmp	r6, #0
 802425c:	f000 80fc 	beq.w	8024458 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024260:	3301      	adds	r3, #1
 8024262:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024266:	b2b6      	uxth	r6, r6
 8024268:	b280      	uxth	r0, r0
 802426a:	fb00 fe06 	mul.w	lr, r0, r6
 802426e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024272:	0136      	lsls	r6, r6, #4
 8024274:	eba6 070e 	sub.w	r7, r6, lr
 8024278:	b280      	uxth	r0, r0
 802427a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802427e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024282:	b2bf      	uxth	r7, r7
 8024284:	1a1b      	subs	r3, r3, r0
 8024286:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802428a:	b29b      	uxth	r3, r3
 802428c:	fb0a f607 	mul.w	r6, sl, r7
 8024290:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024294:	fb0b 6603 	mla	r6, fp, r3, r6
 8024298:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802429c:	fb00 6609 	mla	r6, r0, r9, r6
 80242a0:	fb0e 6608 	mla	r6, lr, r8, r6
 80242a4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80242a8:	9600      	str	r6, [sp, #0]
 80242aa:	2e00      	cmp	r6, #0
 80242ac:	f000 80be 	beq.w	802442c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80242b0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80242b4:	fb0b fc0c 	mul.w	ip, fp, ip
 80242b8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80242bc:	fb0b f505 	mul.w	r5, fp, r5
 80242c0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80242c4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80242c8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80242cc:	44dc      	add	ip, fp
 80242ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242d2:	9501      	str	r5, [sp, #4]
 80242d4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80242d8:	9503      	str	r5, [sp, #12]
 80242da:	9d01      	ldr	r5, [sp, #4]
 80242dc:	9e02      	ldr	r6, [sp, #8]
 80242de:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80242e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80242e6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80242ea:	fb0a fc0c 	mul.w	ip, sl, ip
 80242ee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80242f2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80242f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80242fa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80242fe:	4465      	add	r5, ip
 8024300:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024304:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024308:	fb09 fc0c 	mul.w	ip, r9, ip
 802430c:	fb09 f904 	mul.w	r9, r9, r4
 8024310:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024314:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024318:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802431c:	fb08 f404 	mul.w	r4, r8, r4
 8024320:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024324:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024328:	fb08 f802 	mul.w	r8, r8, r2
 802432c:	fb0a fa01 	mul.w	sl, sl, r1
 8024330:	0a22      	lsrs	r2, r4, #8
 8024332:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024336:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802433a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802433e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024342:	4414      	add	r4, r2
 8024344:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024348:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802434c:	0a2d      	lsrs	r5, r5, #8
 802434e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024352:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024356:	9a03      	ldr	r2, [sp, #12]
 8024358:	8836      	ldrh	r6, [r6, #0]
 802435a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802435e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024362:	437d      	muls	r5, r7
 8024364:	4461      	add	r1, ip
 8024366:	0a24      	lsrs	r4, r4, #8
 8024368:	fb02 5503 	mla	r5, r2, r3, r5
 802436c:	0a09      	lsrs	r1, r1, #8
 802436e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024372:	fb04 540e 	mla	r4, r4, lr, r5
 8024376:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802437a:	fb01 4100 	mla	r1, r1, r0, r4
 802437e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024382:	0a09      	lsrs	r1, r1, #8
 8024384:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024388:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802438c:	fb07 f70a 	mul.w	r7, r7, sl
 8024390:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024394:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024398:	fb03 7101 	mla	r1, r3, r1, r7
 802439c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80243a0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80243a4:	fb0e 1e08 	mla	lr, lr, r8, r1
 80243a8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80243ac:	fb00 e101 	mla	r1, r0, r1, lr
 80243b0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80243b4:	9a00      	ldr	r2, [sp, #0]
 80243b6:	b287      	uxth	r7, r0
 80243b8:	437a      	muls	r2, r7
 80243ba:	0a09      	lsrs	r1, r1, #8
 80243bc:	1c53      	adds	r3, r2, #1
 80243be:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80243c2:	4321      	orrs	r1, r4
 80243c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80243c8:	1235      	asrs	r5, r6, #8
 80243ca:	0c0a      	lsrs	r2, r1, #16
 80243cc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80243d0:	b2db      	uxtb	r3, r3
 80243d2:	fb12 f207 	smulbb	r2, r2, r7
 80243d6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80243da:	fb05 2503 	mla	r5, r5, r3, r2
 80243de:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80243e2:	10f2      	asrs	r2, r6, #3
 80243e4:	b2c8      	uxtb	r0, r1
 80243e6:	00f6      	lsls	r6, r6, #3
 80243e8:	fb14 f407 	smulbb	r4, r4, r7
 80243ec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80243f0:	b2f6      	uxtb	r6, r6
 80243f2:	fb10 f007 	smulbb	r0, r0, r7
 80243f6:	fb02 4203 	mla	r2, r2, r3, r4
 80243fa:	b2ad      	uxth	r5, r5
 80243fc:	fb06 0303 	mla	r3, r6, r3, r0
 8024400:	b299      	uxth	r1, r3
 8024402:	b294      	uxth	r4, r2
 8024404:	1c6b      	adds	r3, r5, #1
 8024406:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802440a:	1c62      	adds	r2, r4, #1
 802440c:	1c4b      	adds	r3, r1, #1
 802440e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024412:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024416:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802441a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802441e:	0952      	lsrs	r2, r2, #5
 8024420:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024424:	432b      	orrs	r3, r5
 8024426:	4313      	orrs	r3, r2
 8024428:	9a02      	ldr	r2, [sp, #8]
 802442a:	8013      	strh	r3, [r2, #0]
 802442c:	b005      	add	sp, #20
 802442e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024432:	2500      	movs	r5, #0
 8024434:	e6ef      	b.n	8024216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024436:	2100      	movs	r1, #0
 8024438:	460d      	mov	r5, r1
 802443a:	e6f7      	b.n	802422c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802443c:	2100      	movs	r1, #0
 802443e:	e6f5      	b.n	802422c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024440:	4631      	mov	r1, r6
 8024442:	e6f3      	b.n	802422c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024444:	2400      	movs	r4, #0
 8024446:	e702      	b.n	802424e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024448:	2200      	movs	r2, #0
 802444a:	4614      	mov	r4, r2
 802444c:	e70b      	b.n	8024266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802444e:	4602      	mov	r2, r0
 8024450:	4604      	mov	r4, r0
 8024452:	e708      	b.n	8024266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024454:	2200      	movs	r2, #0
 8024456:	e706      	b.n	8024266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024458:	4632      	mov	r2, r6
 802445a:	e704      	b.n	8024266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802445c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802445c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024460:	b09d      	sub	sp, #116	; 0x74
 8024462:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024466:	9219      	str	r2, [sp, #100]	; 0x64
 8024468:	9307      	str	r3, [sp, #28]
 802446a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802446c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024470:	931a      	str	r3, [sp, #104]	; 0x68
 8024472:	9117      	str	r1, [sp, #92]	; 0x5c
 8024474:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024478:	901b      	str	r0, [sp, #108]	; 0x6c
 802447a:	6850      	ldr	r0, [r2, #4]
 802447c:	6812      	ldr	r2, [r2, #0]
 802447e:	fb00 1303 	mla	r3, r0, r3, r1
 8024482:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024486:	930a      	str	r3, [sp, #40]	; 0x28
 8024488:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802448a:	681b      	ldr	r3, [r3, #0]
 802448c:	9310      	str	r3, [sp, #64]	; 0x40
 802448e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024492:	930b      	str	r3, [sp, #44]	; 0x2c
 8024494:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024496:	2b00      	cmp	r3, #0
 8024498:	dc03      	bgt.n	80244a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802449a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802449c:	2b00      	cmp	r3, #0
 802449e:	f340 8375 	ble.w	8024b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80244a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80244a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80244ac:	1e48      	subs	r0, r1, #1
 80244ae:	1e57      	subs	r7, r2, #1
 80244b0:	9b07      	ldr	r3, [sp, #28]
 80244b2:	2b00      	cmp	r3, #0
 80244b4:	f340 818e 	ble.w	80247d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80244b8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80244bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80244c0:	d406      	bmi.n	80244d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80244c2:	4584      	cmp	ip, r0
 80244c4:	da04      	bge.n	80244d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80244c6:	2b00      	cmp	r3, #0
 80244c8:	db02      	blt.n	80244d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80244ca:	42bb      	cmp	r3, r7
 80244cc:	f2c0 8183 	blt.w	80247d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80244d0:	f11c 0c01 	adds.w	ip, ip, #1
 80244d4:	f100 8173 	bmi.w	80247be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80244d8:	4561      	cmp	r1, ip
 80244da:	f2c0 8170 	blt.w	80247be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80244de:	3301      	adds	r3, #1
 80244e0:	f100 816d 	bmi.w	80247be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80244e4:	429a      	cmp	r2, r3
 80244e6:	f2c0 816a 	blt.w	80247be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80244ea:	9b07      	ldr	r3, [sp, #28]
 80244ec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80244ee:	9318      	str	r3, [sp, #96]	; 0x60
 80244f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80244f2:	2b00      	cmp	r3, #0
 80244f4:	f340 818c 	ble.w	8024810 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80244f8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80244fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80244fc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024500:	689b      	ldr	r3, [r3, #8]
 8024502:	1422      	asrs	r2, r4, #16
 8024504:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024508:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802450c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024510:	f100 81cd 	bmi.w	80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024514:	f103 38ff 	add.w	r8, r3, #4294967295
 8024518:	4542      	cmp	r2, r8
 802451a:	f280 81c8 	bge.w	80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802451e:	f1bc 0f00 	cmp.w	ip, #0
 8024522:	f2c0 81c4 	blt.w	80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024526:	f10e 38ff 	add.w	r8, lr, #4294967295
 802452a:	45c4      	cmp	ip, r8
 802452c:	f280 81bf 	bge.w	80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024530:	b21b      	sxth	r3, r3
 8024532:	fb0c 2203 	mla	r2, ip, r3, r2
 8024536:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024538:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802453c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024540:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024544:	2800      	cmp	r0, #0
 8024546:	f000 81a9 	beq.w	802489c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802454a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802454e:	950c      	str	r5, [sp, #48]	; 0x30
 8024550:	0e2d      	lsrs	r5, r5, #24
 8024552:	9513      	str	r5, [sp, #76]	; 0x4c
 8024554:	b181      	cbz	r1, 8024578 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024556:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802455a:	3b01      	subs	r3, #1
 802455c:	009b      	lsls	r3, r3, #2
 802455e:	3304      	adds	r3, #4
 8024560:	eb08 0c03 	add.w	ip, r8, r3
 8024564:	f858 3003 	ldr.w	r3, [r8, r3]
 8024568:	9308      	str	r3, [sp, #32]
 802456a:	0e1b      	lsrs	r3, r3, #24
 802456c:	9311      	str	r3, [sp, #68]	; 0x44
 802456e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024572:	930d      	str	r3, [sp, #52]	; 0x34
 8024574:	0e1b      	lsrs	r3, r3, #24
 8024576:	9314      	str	r3, [sp, #80]	; 0x50
 8024578:	b280      	uxth	r0, r0
 802457a:	b289      	uxth	r1, r1
 802457c:	fb00 f901 	mul.w	r9, r0, r1
 8024580:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024584:	0100      	lsls	r0, r0, #4
 8024586:	eba0 0809 	sub.w	r8, r0, r9
 802458a:	b289      	uxth	r1, r1
 802458c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024590:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024592:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024594:	fa1f f888 	uxth.w	r8, r8
 8024598:	1a5b      	subs	r3, r3, r1
 802459a:	b29b      	uxth	r3, r3
 802459c:	fb08 f000 	mul.w	r0, r8, r0
 80245a0:	fb03 000e 	mla	r0, r3, lr, r0
 80245a4:	fb01 0005 	mla	r0, r1, r5, r0
 80245a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80245aa:	fb09 0005 	mla	r0, r9, r5, r0
 80245ae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80245b2:	2800      	cmp	r0, #0
 80245b4:	f000 80fa 	beq.w	80247ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80245b8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80245bc:	d01b      	beq.n	80245f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80245be:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80245c2:	fb0e fa0a 	mul.w	sl, lr, sl
 80245c6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80245ca:	fb0e fe02 	mul.w	lr, lr, r2
 80245ce:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80245d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80245d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80245da:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80245de:	4452      	add	r2, sl
 80245e0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80245e4:	0a12      	lsrs	r2, r2, #8
 80245e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80245ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80245f2:	ea42 020c 	orr.w	r2, r2, ip
 80245f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80245f8:	2dff      	cmp	r5, #255	; 0xff
 80245fa:	d021      	beq.n	8024640 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80245fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80245fe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024602:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024604:	fb05 fb0b 	mul.w	fp, r5, fp
 8024608:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802460a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802460e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024610:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024614:	fb05 fa0a 	mul.w	sl, r5, sl
 8024618:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802461c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024620:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024624:	44de      	add	lr, fp
 8024626:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802462a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802462e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024632:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024636:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802463a:	ea4e 050a 	orr.w	r5, lr, sl
 802463e:	950c      	str	r5, [sp, #48]	; 0x30
 8024640:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024642:	2dff      	cmp	r5, #255	; 0xff
 8024644:	d021      	beq.n	802468a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8024646:	9d08      	ldr	r5, [sp, #32]
 8024648:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802464c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802464e:	fb05 fb0b 	mul.w	fp, r5, fp
 8024652:	9d08      	ldr	r5, [sp, #32]
 8024654:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024658:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802465a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802465e:	fb05 fa0a 	mul.w	sl, r5, sl
 8024662:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024666:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802466a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802466e:	44de      	add	lr, fp
 8024670:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024674:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024678:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802467c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024680:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024684:	ea4e 050a 	orr.w	r5, lr, sl
 8024688:	9508      	str	r5, [sp, #32]
 802468a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802468c:	2dff      	cmp	r5, #255	; 0xff
 802468e:	d021      	beq.n	80246d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024690:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024692:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024696:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024698:	fb05 fb0b 	mul.w	fp, r5, fp
 802469c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802469e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80246a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80246a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246a8:	fb05 fa0a 	mul.w	sl, r5, sl
 80246ac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246b0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246b4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246b8:	44de      	add	lr, fp
 80246ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80246be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80246c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80246ce:	ea4e 050a 	orr.w	r5, lr, sl
 80246d2:	950d      	str	r5, [sp, #52]	; 0x34
 80246d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80246d6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80246da:	9d08      	ldr	r5, [sp, #32]
 80246dc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80246e0:	fb08 fc0c 	mul.w	ip, r8, ip
 80246e4:	fb03 cc0e 	mla	ip, r3, lr, ip
 80246e8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80246ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80246ee:	fb01 cc0e 	mla	ip, r1, lr, ip
 80246f2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80246f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80246f8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80246fc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024700:	fb08 f80e 	mul.w	r8, r8, lr
 8024704:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024708:	fb03 8202 	mla	r2, r3, r2, r8
 802470c:	9b08      	ldr	r3, [sp, #32]
 802470e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024710:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024714:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024716:	fb01 220a 	mla	r2, r1, sl, r2
 802471a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802471e:	fb09 2901 	mla	r9, r9, r1, r2
 8024722:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024724:	883b      	ldrh	r3, [r7, #0]
 8024726:	4342      	muls	r2, r0
 8024728:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802472c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024730:	1c50      	adds	r0, r2, #1
 8024732:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024736:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802473a:	ea4c 0c09 	orr.w	ip, ip, r9
 802473e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024742:	1219      	asrs	r1, r3, #8
 8024744:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024748:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802474c:	b2c0      	uxtb	r0, r0
 802474e:	fb12 f205 	smulbb	r2, r2, r5
 8024752:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024756:	fb01 2100 	mla	r1, r1, r0, r2
 802475a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802475e:	10da      	asrs	r2, r3, #3
 8024760:	fa5f fc8c 	uxtb.w	ip, ip
 8024764:	00db      	lsls	r3, r3, #3
 8024766:	fb1c fc05 	smulbb	ip, ip, r5
 802476a:	b2db      	uxtb	r3, r3
 802476c:	b289      	uxth	r1, r1
 802476e:	fb03 c300 	mla	r3, r3, r0, ip
 8024772:	fa1f fc83 	uxth.w	ip, r3
 8024776:	1c4b      	adds	r3, r1, #1
 8024778:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802477c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024780:	fb1e fe05 	smulbb	lr, lr, r5
 8024784:	f10c 0301 	add.w	r3, ip, #1
 8024788:	fb02 e200 	mla	r2, r2, r0, lr
 802478c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024790:	b292      	uxth	r2, r2
 8024792:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024796:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802479a:	430b      	orrs	r3, r1
 802479c:	1c51      	adds	r1, r2, #1
 802479e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80247a2:	0952      	lsrs	r2, r2, #5
 80247a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80247a8:	4313      	orrs	r3, r2
 80247aa:	803b      	strh	r3, [r7, #0]
 80247ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80247ae:	441c      	add	r4, r3
 80247b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80247b2:	441e      	add	r6, r3
 80247b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80247b6:	3b01      	subs	r3, #1
 80247b8:	3702      	adds	r7, #2
 80247ba:	9318      	str	r3, [sp, #96]	; 0x60
 80247bc:	e698      	b.n	80244f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80247be:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80247c0:	441c      	add	r4, r3
 80247c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80247c4:	441e      	add	r6, r3
 80247c6:	9b07      	ldr	r3, [sp, #28]
 80247c8:	3b01      	subs	r3, #1
 80247ca:	9307      	str	r3, [sp, #28]
 80247cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80247ce:	3302      	adds	r3, #2
 80247d0:	930a      	str	r3, [sp, #40]	; 0x28
 80247d2:	e66d      	b.n	80244b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80247d4:	d023      	beq.n	802481e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80247d6:	9b07      	ldr	r3, [sp, #28]
 80247d8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80247da:	3b01      	subs	r3, #1
 80247dc:	fb00 4003 	mla	r0, r0, r3, r4
 80247e0:	1400      	asrs	r0, r0, #16
 80247e2:	f53f ae82 	bmi.w	80244ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80247e6:	3901      	subs	r1, #1
 80247e8:	4288      	cmp	r0, r1
 80247ea:	f6bf ae7e 	bge.w	80244ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80247ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80247f0:	fb01 6303 	mla	r3, r1, r3, r6
 80247f4:	141b      	asrs	r3, r3, #16
 80247f6:	f53f ae78 	bmi.w	80244ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80247fa:	3a01      	subs	r2, #1
 80247fc:	4293      	cmp	r3, r2
 80247fe:	f6bf ae74 	bge.w	80244ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024802:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024806:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802480a:	f1bb 0f00 	cmp.w	fp, #0
 802480e:	dc6c      	bgt.n	80248ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024810:	9b07      	ldr	r3, [sp, #28]
 8024812:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024816:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024818:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802481c:	930a      	str	r3, [sp, #40]	; 0x28
 802481e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024820:	2b00      	cmp	r3, #0
 8024822:	f340 81b3 	ble.w	8024b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024826:	ee30 0a04 	vadd.f32	s0, s0, s8
 802482a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802482e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024832:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024834:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024838:	ee31 1a05 	vadd.f32	s2, s2, s10
 802483c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024840:	eef0 6a62 	vmov.f32	s13, s5
 8024844:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024848:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802484c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024850:	ee16 4a90 	vmov	r4, s13
 8024854:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024858:	eef0 6a43 	vmov.f32	s13, s6
 802485c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024860:	ee12 2a90 	vmov	r2, s5
 8024864:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024868:	fb92 f3f3 	sdiv	r3, r2, r3
 802486c:	ee13 2a10 	vmov	r2, s6
 8024870:	9329      	str	r3, [sp, #164]	; 0xa4
 8024872:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024874:	fb92 f3f3 	sdiv	r3, r2, r3
 8024878:	932a      	str	r3, [sp, #168]	; 0xa8
 802487a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802487c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802487e:	3b01      	subs	r3, #1
 8024880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024884:	9317      	str	r3, [sp, #92]	; 0x5c
 8024886:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024888:	bf08      	it	eq
 802488a:	4613      	moveq	r3, r2
 802488c:	ee16 6a90 	vmov	r6, s13
 8024890:	9307      	str	r3, [sp, #28]
 8024892:	eeb0 3a67 	vmov.f32	s6, s15
 8024896:	eef0 2a47 	vmov.f32	s5, s14
 802489a:	e5fb      	b.n	8024494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802489c:	2900      	cmp	r1, #0
 802489e:	f43f ae6b 	beq.w	8024578 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80248a2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80248a6:	9308      	str	r3, [sp, #32]
 80248a8:	0e1b      	lsrs	r3, r3, #24
 80248aa:	9311      	str	r3, [sp, #68]	; 0x44
 80248ac:	e664      	b.n	8024578 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80248ae:	f112 0801 	adds.w	r8, r2, #1
 80248b2:	f53f af7b 	bmi.w	80247ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80248b6:	4543      	cmp	r3, r8
 80248b8:	f6ff af78 	blt.w	80247ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80248bc:	f11c 0801 	adds.w	r8, ip, #1
 80248c0:	f53f af74 	bmi.w	80247ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80248c4:	45c6      	cmp	lr, r8
 80248c6:	f6ff af71 	blt.w	80247ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80248ca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80248cc:	9201      	str	r2, [sp, #4]
 80248ce:	fa0f f28e 	sxth.w	r2, lr
 80248d2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80248d6:	e9cd c002 	strd	ip, r0, [sp, #8]
 80248da:	9200      	str	r2, [sp, #0]
 80248dc:	b21b      	sxth	r3, r3
 80248de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80248e0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80248e2:	4639      	mov	r1, r7
 80248e4:	f7ff fc79 	bl	80241da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80248e8:	e760      	b.n	80247ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80248ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80248ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80248ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248f2:	1427      	asrs	r7, r4, #16
 80248f4:	1433      	asrs	r3, r6, #16
 80248f6:	fb01 7303 	mla	r3, r1, r3, r7
 80248fa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80248fe:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024902:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024906:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802490a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802490e:	2a00      	cmp	r2, #0
 8024910:	f000 8133 	beq.w	8024b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024914:	687d      	ldr	r5, [r7, #4]
 8024916:	950e      	str	r5, [sp, #56]	; 0x38
 8024918:	0e2d      	lsrs	r5, r5, #24
 802491a:	9515      	str	r5, [sp, #84]	; 0x54
 802491c:	b178      	cbz	r0, 802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802491e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024922:	3901      	subs	r1, #1
 8024924:	0089      	lsls	r1, r1, #2
 8024926:	3104      	adds	r1, #4
 8024928:	eb07 0e01 	add.w	lr, r7, r1
 802492c:	5879      	ldr	r1, [r7, r1]
 802492e:	9109      	str	r1, [sp, #36]	; 0x24
 8024930:	0e09      	lsrs	r1, r1, #24
 8024932:	9112      	str	r1, [sp, #72]	; 0x48
 8024934:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024938:	910f      	str	r1, [sp, #60]	; 0x3c
 802493a:	0e09      	lsrs	r1, r1, #24
 802493c:	9116      	str	r1, [sp, #88]	; 0x58
 802493e:	b292      	uxth	r2, r2
 8024940:	b280      	uxth	r0, r0
 8024942:	fb02 f800 	mul.w	r8, r2, r0
 8024946:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802494a:	0112      	lsls	r2, r2, #4
 802494c:	eba2 0e08 	sub.w	lr, r2, r8
 8024950:	b280      	uxth	r0, r0
 8024952:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024956:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024958:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802495a:	fa1f fe8e 	uxth.w	lr, lr
 802495e:	1a12      	subs	r2, r2, r0
 8024960:	b292      	uxth	r2, r2
 8024962:	fb0e f101 	mul.w	r1, lr, r1
 8024966:	fb02 110c 	mla	r1, r2, ip, r1
 802496a:	fb00 1105 	mla	r1, r0, r5, r1
 802496e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024970:	fb08 1105 	mla	r1, r8, r5, r1
 8024974:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024978:	2900      	cmp	r1, #0
 802497a:	f000 80f5 	beq.w	8024b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802497e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024982:	d019      	beq.n	80249b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024984:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024988:	fb0c fa0a 	mul.w	sl, ip, sl
 802498c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024990:	fb0c fc03 	mul.w	ip, ip, r3
 8024994:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024998:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802499c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80249a0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80249a4:	4453      	add	r3, sl
 80249a6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80249aa:	0a1b      	lsrs	r3, r3, #8
 80249ac:	0a3f      	lsrs	r7, r7, #8
 80249ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80249b2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80249b6:	433b      	orrs	r3, r7
 80249b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80249ba:	2dff      	cmp	r5, #255	; 0xff
 80249bc:	d020      	beq.n	8024a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80249be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80249c0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80249c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80249c6:	436f      	muls	r7, r5
 80249c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80249ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80249ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80249d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80249d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80249d8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80249dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249e0:	44bc      	add	ip, r7
 80249e2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80249e6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80249ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80249fa:	ea4c 050a 	orr.w	r5, ip, sl
 80249fe:	950e      	str	r5, [sp, #56]	; 0x38
 8024a00:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a02:	2dff      	cmp	r5, #255	; 0xff
 8024a04:	d020      	beq.n	8024a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024a06:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a08:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a0c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a0e:	436f      	muls	r7, r5
 8024a10:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a12:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024a16:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024a20:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a28:	44bc      	add	ip, r7
 8024a2a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a2e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a42:	ea4c 050a 	orr.w	r5, ip, sl
 8024a46:	9509      	str	r5, [sp, #36]	; 0x24
 8024a48:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024a4a:	2dff      	cmp	r5, #255	; 0xff
 8024a4c:	d020      	beq.n	8024a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024a4e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024a50:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a54:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024a56:	436f      	muls	r7, r5
 8024a58:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024a5a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024a5e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024a60:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a64:	fb05 fa0a 	mul.w	sl, r5, sl
 8024a68:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a70:	44bc      	add	ip, r7
 8024a72:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a76:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a8a:	ea4c 050a 	orr.w	r5, ip, sl
 8024a8e:	950f      	str	r5, [sp, #60]	; 0x3c
 8024a90:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a92:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a96:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a98:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024a9c:	fb0e f707 	mul.w	r7, lr, r7
 8024aa0:	fb02 770c 	mla	r7, r2, ip, r7
 8024aa4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024aa8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024aaa:	fb00 770c 	mla	r7, r0, ip, r7
 8024aae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024ab2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024ab4:	fb08 770c 	mla	r7, r8, ip, r7
 8024ab8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024abc:	fb0e fe0c 	mul.w	lr, lr, ip
 8024ac0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ac4:	fb02 e303 	mla	r3, r2, r3, lr
 8024ac8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024aca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024acc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024ad0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024ad2:	fb00 330a 	mla	r3, r0, sl, r3
 8024ad6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024ada:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024ade:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024ae0:	f8b9 0000 	ldrh.w	r0, [r9]
 8024ae4:	4359      	muls	r1, r3
 8024ae6:	0a3f      	lsrs	r7, r7, #8
 8024ae8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024aec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024af0:	1c4b      	adds	r3, r1, #1
 8024af2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024af6:	ea47 070c 	orr.w	r7, r7, ip
 8024afa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024afe:	1202      	asrs	r2, r0, #8
 8024b00:	0c3b      	lsrs	r3, r7, #16
 8024b02:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024b06:	b2c9      	uxtb	r1, r1
 8024b08:	fb13 f305 	smulbb	r3, r3, r5
 8024b0c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024b10:	fb02 3201 	mla	r2, r2, r1, r3
 8024b14:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024b18:	10c3      	asrs	r3, r0, #3
 8024b1a:	b2ff      	uxtb	r7, r7
 8024b1c:	00c0      	lsls	r0, r0, #3
 8024b1e:	b2c0      	uxtb	r0, r0
 8024b20:	fb17 f705 	smulbb	r7, r7, r5
 8024b24:	fb00 7001 	mla	r0, r0, r1, r7
 8024b28:	b292      	uxth	r2, r2
 8024b2a:	fb1c fc05 	smulbb	ip, ip, r5
 8024b2e:	b280      	uxth	r0, r0
 8024b30:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024b34:	fb03 c301 	mla	r3, r3, r1, ip
 8024b38:	1c51      	adds	r1, r2, #1
 8024b3a:	f100 0c01 	add.w	ip, r0, #1
 8024b3e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024b42:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024b46:	b29b      	uxth	r3, r3
 8024b48:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024b4c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024b50:	ea4c 0202 	orr.w	r2, ip, r2
 8024b54:	f103 0c01 	add.w	ip, r3, #1
 8024b58:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024b5c:	095b      	lsrs	r3, r3, #5
 8024b5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024b62:	431a      	orrs	r2, r3
 8024b64:	f8a9 2000 	strh.w	r2, [r9]
 8024b68:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024b6a:	441c      	add	r4, r3
 8024b6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024b6e:	f109 0902 	add.w	r9, r9, #2
 8024b72:	441e      	add	r6, r3
 8024b74:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024b78:	e647      	b.n	802480a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024b7a:	2800      	cmp	r0, #0
 8024b7c:	f43f aedf 	beq.w	802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024b80:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024b84:	9109      	str	r1, [sp, #36]	; 0x24
 8024b86:	0e09      	lsrs	r1, r1, #24
 8024b88:	9112      	str	r1, [sp, #72]	; 0x48
 8024b8a:	e6d8      	b.n	802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024b8c:	b01d      	add	sp, #116	; 0x74
 8024b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024b92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024b92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b96:	b085      	sub	sp, #20
 8024b98:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024b9c:	9102      	str	r1, [sp, #8]
 8024b9e:	2c00      	cmp	r4, #0
 8024ba0:	fb04 7103 	mla	r1, r4, r3, r7
 8024ba4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024ba8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024bac:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024bb0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024bb4:	f2c0 810c 	blt.w	8024dd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024bb8:	45a6      	cmp	lr, r4
 8024bba:	f340 8109 	ble.w	8024dd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024bbe:	2f00      	cmp	r7, #0
 8024bc0:	f2c0 8104 	blt.w	8024dcc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024bc4:	42bb      	cmp	r3, r7
 8024bc6:	f340 8101 	ble.w	8024dcc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024bca:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024bce:	1c7a      	adds	r2, r7, #1
 8024bd0:	f100 8101 	bmi.w	8024dd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024bd4:	4293      	cmp	r3, r2
 8024bd6:	f340 80fe 	ble.w	8024dd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024bda:	2e00      	cmp	r6, #0
 8024bdc:	f000 80fd 	beq.w	8024dda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024be0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024be4:	3401      	adds	r4, #1
 8024be6:	f100 80fc 	bmi.w	8024de2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024bea:	45a6      	cmp	lr, r4
 8024bec:	f340 80f9 	ble.w	8024de2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024bf0:	2800      	cmp	r0, #0
 8024bf2:	f000 80f9 	beq.w	8024de8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024bf6:	2f00      	cmp	r7, #0
 8024bf8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024bfc:	f2c0 80ef 	blt.w	8024dde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024c00:	42bb      	cmp	r3, r7
 8024c02:	f340 80ec 	ble.w	8024dde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024c06:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024c0a:	3701      	adds	r7, #1
 8024c0c:	f100 80ef 	bmi.w	8024dee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024c10:	42bb      	cmp	r3, r7
 8024c12:	f340 80ec 	ble.w	8024dee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024c16:	2e00      	cmp	r6, #0
 8024c18:	f000 80eb 	beq.w	8024df2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024c1c:	6852      	ldr	r2, [r2, #4]
 8024c1e:	b2b6      	uxth	r6, r6
 8024c20:	b280      	uxth	r0, r0
 8024c22:	fb00 fe06 	mul.w	lr, r0, r6
 8024c26:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024c2a:	0136      	lsls	r6, r6, #4
 8024c2c:	eba6 070e 	sub.w	r7, r6, lr
 8024c30:	b280      	uxth	r0, r0
 8024c32:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024c36:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024c3a:	b2bf      	uxth	r7, r7
 8024c3c:	1a1b      	subs	r3, r3, r0
 8024c3e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024c42:	b29b      	uxth	r3, r3
 8024c44:	fb07 f60a 	mul.w	r6, r7, sl
 8024c48:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024c4c:	fb0b 6603 	mla	r6, fp, r3, r6
 8024c50:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024c54:	fb00 6609 	mla	r6, r0, r9, r6
 8024c58:	fb0e 6608 	mla	r6, lr, r8, r6
 8024c5c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024c60:	9600      	str	r6, [sp, #0]
 8024c62:	2e00      	cmp	r6, #0
 8024c64:	f000 80af 	beq.w	8024dc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024c68:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024c6c:	fb0b fc0c 	mul.w	ip, fp, ip
 8024c70:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024c74:	fb0b f505 	mul.w	r5, fp, r5
 8024c78:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024c7c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024c80:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024c84:	44dc      	add	ip, fp
 8024c86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c8a:	9501      	str	r5, [sp, #4]
 8024c8c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024c90:	9503      	str	r5, [sp, #12]
 8024c92:	9d01      	ldr	r5, [sp, #4]
 8024c94:	9e02      	ldr	r6, [sp, #8]
 8024c96:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024c9a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024c9e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024ca2:	fb0a fc0c 	mul.w	ip, sl, ip
 8024ca6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024caa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024cae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024cb2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024cb6:	4465      	add	r5, ip
 8024cb8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024cbc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024cc0:	fb09 fc0c 	mul.w	ip, r9, ip
 8024cc4:	fb09 f904 	mul.w	r9, r9, r4
 8024cc8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024ccc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024cd0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024cd4:	fb08 f404 	mul.w	r4, r8, r4
 8024cd8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024cdc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024ce0:	fb08 f802 	mul.w	r8, r8, r2
 8024ce4:	fb0a fa01 	mul.w	sl, sl, r1
 8024ce8:	0a22      	lsrs	r2, r4, #8
 8024cea:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024cee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024cf2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024cf6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024cfa:	4414      	add	r4, r2
 8024cfc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024d00:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024d04:	0a2d      	lsrs	r5, r5, #8
 8024d06:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024d0a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024d0e:	9a03      	ldr	r2, [sp, #12]
 8024d10:	8836      	ldrh	r6, [r6, #0]
 8024d12:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024d16:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024d1a:	437d      	muls	r5, r7
 8024d1c:	4461      	add	r1, ip
 8024d1e:	0a24      	lsrs	r4, r4, #8
 8024d20:	fb02 5503 	mla	r5, r2, r3, r5
 8024d24:	0a09      	lsrs	r1, r1, #8
 8024d26:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024d2a:	fb04 540e 	mla	r4, r4, lr, r5
 8024d2e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024d32:	fb01 4100 	mla	r1, r1, r0, r4
 8024d36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d3a:	0a09      	lsrs	r1, r1, #8
 8024d3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d40:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024d44:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024d48:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024d4c:	fb07 f70a 	mul.w	r7, r7, sl
 8024d50:	fb03 7101 	mla	r1, r3, r1, r7
 8024d54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024d58:	9b00      	ldr	r3, [sp, #0]
 8024d5a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024d5e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024d62:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024d66:	fb00 e101 	mla	r1, r0, r1, lr
 8024d6a:	43da      	mvns	r2, r3
 8024d6c:	1233      	asrs	r3, r6, #8
 8024d6e:	b2d2      	uxtb	r2, r2
 8024d70:	10f0      	asrs	r0, r6, #3
 8024d72:	0a09      	lsrs	r1, r1, #8
 8024d74:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024d78:	00f6      	lsls	r6, r6, #3
 8024d7a:	4353      	muls	r3, r2
 8024d7c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024d80:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024d84:	b2f6      	uxtb	r6, r6
 8024d86:	4321      	orrs	r1, r4
 8024d88:	4350      	muls	r0, r2
 8024d8a:	4356      	muls	r6, r2
 8024d8c:	1c5a      	adds	r2, r3, #1
 8024d8e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024d92:	0c0b      	lsrs	r3, r1, #16
 8024d94:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d98:	1c42      	adds	r2, r0, #1
 8024d9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024d9e:	0a0a      	lsrs	r2, r1, #8
 8024da0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024da4:	021b      	lsls	r3, r3, #8
 8024da6:	00d2      	lsls	r2, r2, #3
 8024da8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024dac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024db0:	4313      	orrs	r3, r2
 8024db2:	1c72      	adds	r2, r6, #1
 8024db4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024db8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024dbc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024dc0:	4319      	orrs	r1, r3
 8024dc2:	9b02      	ldr	r3, [sp, #8]
 8024dc4:	8019      	strh	r1, [r3, #0]
 8024dc6:	b005      	add	sp, #20
 8024dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024dcc:	2500      	movs	r5, #0
 8024dce:	e6fe      	b.n	8024bce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024dd0:	2100      	movs	r1, #0
 8024dd2:	460d      	mov	r5, r1
 8024dd4:	e706      	b.n	8024be4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024dd6:	2100      	movs	r1, #0
 8024dd8:	e704      	b.n	8024be4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024dda:	4631      	mov	r1, r6
 8024ddc:	e702      	b.n	8024be4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024dde:	2400      	movs	r4, #0
 8024de0:	e713      	b.n	8024c0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024de2:	2200      	movs	r2, #0
 8024de4:	4614      	mov	r4, r2
 8024de6:	e71a      	b.n	8024c1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024de8:	4602      	mov	r2, r0
 8024dea:	4604      	mov	r4, r0
 8024dec:	e717      	b.n	8024c1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024dee:	2200      	movs	r2, #0
 8024df0:	e715      	b.n	8024c1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024df2:	4632      	mov	r2, r6
 8024df4:	e713      	b.n	8024c1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024df8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024dfc:	b09b      	sub	sp, #108	; 0x6c
 8024dfe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024e02:	9218      	str	r2, [sp, #96]	; 0x60
 8024e04:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024e06:	9116      	str	r1, [sp, #88]	; 0x58
 8024e08:	9307      	str	r3, [sp, #28]
 8024e0a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024e0e:	9019      	str	r0, [sp, #100]	; 0x64
 8024e10:	6850      	ldr	r0, [r2, #4]
 8024e12:	6812      	ldr	r2, [r2, #0]
 8024e14:	fb00 1303 	mla	r3, r0, r3, r1
 8024e18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024e1c:	930a      	str	r3, [sp, #40]	; 0x28
 8024e1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e20:	681b      	ldr	r3, [r3, #0]
 8024e22:	930f      	str	r3, [sp, #60]	; 0x3c
 8024e24:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024e26:	2b00      	cmp	r3, #0
 8024e28:	dc03      	bgt.n	8024e32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024e2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024e2c:	2b00      	cmp	r3, #0
 8024e2e:	f340 8386 	ble.w	802553e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024e32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024e3c:	1e48      	subs	r0, r1, #1
 8024e3e:	1e57      	subs	r7, r2, #1
 8024e40:	9b07      	ldr	r3, [sp, #28]
 8024e42:	2b00      	cmp	r3, #0
 8024e44:	f340 8166 	ble.w	8025114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024e48:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024e4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024e50:	d406      	bmi.n	8024e60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024e52:	4584      	cmp	ip, r0
 8024e54:	da04      	bge.n	8024e60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024e56:	2b00      	cmp	r3, #0
 8024e58:	db02      	blt.n	8024e60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024e5a:	42bb      	cmp	r3, r7
 8024e5c:	f2c0 815b 	blt.w	8025116 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024e60:	f11c 0c01 	adds.w	ip, ip, #1
 8024e64:	f100 814b 	bmi.w	80250fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024e68:	4561      	cmp	r1, ip
 8024e6a:	f2c0 8148 	blt.w	80250fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024e6e:	3301      	adds	r3, #1
 8024e70:	f100 8145 	bmi.w	80250fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024e74:	429a      	cmp	r2, r3
 8024e76:	f2c0 8142 	blt.w	80250fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024e7a:	9b07      	ldr	r3, [sp, #28]
 8024e7c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024e7e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024e80:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024e82:	2b00      	cmp	r3, #0
 8024e84:	f340 8165 	ble.w	8025152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024e88:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024e8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e8c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024e90:	689b      	ldr	r3, [r3, #8]
 8024e92:	1422      	asrs	r2, r4, #16
 8024e94:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024e98:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024e9c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024ea0:	f100 81d5 	bmi.w	802524e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024ea4:	f103 38ff 	add.w	r8, r3, #4294967295
 8024ea8:	4542      	cmp	r2, r8
 8024eaa:	f280 81d0 	bge.w	802524e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024eae:	f1bc 0f00 	cmp.w	ip, #0
 8024eb2:	f2c0 81cc 	blt.w	802524e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024eb6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024eba:	45c4      	cmp	ip, r8
 8024ebc:	f280 81c7 	bge.w	802524e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024ec0:	b21b      	sxth	r3, r3
 8024ec2:	fb0c 2203 	mla	r2, ip, r3, r2
 8024ec6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024ec8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024ecc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024ed0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024ed4:	2900      	cmp	r1, #0
 8024ed6:	f000 8182 	beq.w	80251de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024eda:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024ede:	950b      	str	r5, [sp, #44]	; 0x2c
 8024ee0:	0e2d      	lsrs	r5, r5, #24
 8024ee2:	9512      	str	r5, [sp, #72]	; 0x48
 8024ee4:	b180      	cbz	r0, 8024f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024ee6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024eea:	3b01      	subs	r3, #1
 8024eec:	009b      	lsls	r3, r3, #2
 8024eee:	3304      	adds	r3, #4
 8024ef0:	eb08 0c03 	add.w	ip, r8, r3
 8024ef4:	f858 3003 	ldr.w	r3, [r8, r3]
 8024ef8:	9308      	str	r3, [sp, #32]
 8024efa:	0e1b      	lsrs	r3, r3, #24
 8024efc:	9310      	str	r3, [sp, #64]	; 0x40
 8024efe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024f02:	930c      	str	r3, [sp, #48]	; 0x30
 8024f04:	0e1b      	lsrs	r3, r3, #24
 8024f06:	9313      	str	r3, [sp, #76]	; 0x4c
 8024f08:	b289      	uxth	r1, r1
 8024f0a:	b280      	uxth	r0, r0
 8024f0c:	fb01 f900 	mul.w	r9, r1, r0
 8024f10:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024f14:	0109      	lsls	r1, r1, #4
 8024f16:	eba1 0809 	sub.w	r8, r1, r9
 8024f1a:	b280      	uxth	r0, r0
 8024f1c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024f20:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024f22:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024f24:	fa1f f888 	uxth.w	r8, r8
 8024f28:	1a09      	subs	r1, r1, r0
 8024f2a:	b289      	uxth	r1, r1
 8024f2c:	fb08 f303 	mul.w	r3, r8, r3
 8024f30:	fb01 330e 	mla	r3, r1, lr, r3
 8024f34:	fb00 3305 	mla	r3, r0, r5, r3
 8024f38:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024f3a:	fb09 3305 	mla	r3, r9, r5, r3
 8024f3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f42:	2b00      	cmp	r3, #0
 8024f44:	f000 80d2 	beq.w	80250ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024f48:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024f4c:	d01b      	beq.n	8024f86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024f4e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024f52:	fb0e fa0a 	mul.w	sl, lr, sl
 8024f56:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024f5a:	fb0e fe02 	mul.w	lr, lr, r2
 8024f5e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024f62:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024f66:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024f6a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024f6e:	4452      	add	r2, sl
 8024f70:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024f74:	0a12      	lsrs	r2, r2, #8
 8024f76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f7a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024f7e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024f82:	ea42 020c 	orr.w	r2, r2, ip
 8024f86:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024f88:	2dff      	cmp	r5, #255	; 0xff
 8024f8a:	d021      	beq.n	8024fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8024f8c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f8e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024f92:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024f94:	fb05 fb0b 	mul.w	fp, r5, fp
 8024f98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f9a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024f9e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024fa0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024fa4:	fb05 fa0a 	mul.w	sl, r5, sl
 8024fa8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024fac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024fb0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024fb4:	44de      	add	lr, fp
 8024fb6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024fba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024fbe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fc2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024fc6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024fca:	ea4e 050a 	orr.w	r5, lr, sl
 8024fce:	950b      	str	r5, [sp, #44]	; 0x2c
 8024fd0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024fd2:	2dff      	cmp	r5, #255	; 0xff
 8024fd4:	d021      	beq.n	802501a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024fd6:	9d08      	ldr	r5, [sp, #32]
 8024fd8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024fdc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024fde:	fb05 fb0b 	mul.w	fp, r5, fp
 8024fe2:	9d08      	ldr	r5, [sp, #32]
 8024fe4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024fe8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024fea:	fb05 fa0e 	mul.w	sl, r5, lr
 8024fee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024ff2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ff6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024ffa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024ffe:	44de      	add	lr, fp
 8025000:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025004:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025008:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802500c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025010:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025014:	ea4e 050a 	orr.w	r5, lr, sl
 8025018:	9508      	str	r5, [sp, #32]
 802501a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802501c:	2dff      	cmp	r5, #255	; 0xff
 802501e:	d021      	beq.n	8025064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025020:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025022:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025026:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025028:	fb05 fb0b 	mul.w	fp, r5, fp
 802502c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802502e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025032:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025034:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025038:	fb05 fa0a 	mul.w	sl, r5, sl
 802503c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025040:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025044:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025048:	44de      	add	lr, fp
 802504a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802504e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025052:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025056:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802505a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802505e:	ea4e 050a 	orr.w	r5, lr, sl
 8025062:	950c      	str	r5, [sp, #48]	; 0x30
 8025064:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025066:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802506a:	9d08      	ldr	r5, [sp, #32]
 802506c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025070:	fb08 fc0c 	mul.w	ip, r8, ip
 8025074:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025078:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802507c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802507e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025082:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025086:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025088:	fb09 cc0e 	mla	ip, r9, lr, ip
 802508c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025090:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025094:	fb08 f80e 	mul.w	r8, r8, lr
 8025098:	fb01 8202 	mla	r2, r1, r2, r8
 802509c:	9908      	ldr	r1, [sp, #32]
 802509e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80250a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80250a4:	fb00 220a 	mla	r2, r0, sl, r2
 80250a8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80250ac:	fb09 2900 	mla	r9, r9, r0, r2
 80250b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80250b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80250b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80250bc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80250c0:	ea4c 0c09 	orr.w	ip, ip, r9
 80250c4:	2bff      	cmp	r3, #255	; 0xff
 80250c6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80250ca:	f040 8091 	bne.w	80251f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80250ce:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80250d2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80250d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80250da:	f022 0207 	bic.w	r2, r2, #7
 80250de:	431a      	orrs	r2, r3
 80250e0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80250e4:	ea4c 0c02 	orr.w	ip, ip, r2
 80250e8:	f8a7 c000 	strh.w	ip, [r7]
 80250ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80250ee:	441c      	add	r4, r3
 80250f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80250f2:	441e      	add	r6, r3
 80250f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80250f6:	3b01      	subs	r3, #1
 80250f8:	3702      	adds	r7, #2
 80250fa:	9317      	str	r3, [sp, #92]	; 0x5c
 80250fc:	e6c0      	b.n	8024e80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80250fe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025100:	441c      	add	r4, r3
 8025102:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025104:	441e      	add	r6, r3
 8025106:	9b07      	ldr	r3, [sp, #28]
 8025108:	3b01      	subs	r3, #1
 802510a:	9307      	str	r3, [sp, #28]
 802510c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802510e:	3302      	adds	r3, #2
 8025110:	930a      	str	r3, [sp, #40]	; 0x28
 8025112:	e695      	b.n	8024e40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025114:	d024      	beq.n	8025160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025116:	9b07      	ldr	r3, [sp, #28]
 8025118:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802511a:	3b01      	subs	r3, #1
 802511c:	fb00 4003 	mla	r0, r0, r3, r4
 8025120:	1400      	asrs	r0, r0, #16
 8025122:	f53f aeaa 	bmi.w	8024e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025126:	3901      	subs	r1, #1
 8025128:	4288      	cmp	r0, r1
 802512a:	f6bf aea6 	bge.w	8024e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802512e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025130:	fb01 6303 	mla	r3, r1, r3, r6
 8025134:	141b      	asrs	r3, r3, #16
 8025136:	f53f aea0 	bmi.w	8024e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802513a:	3a01      	subs	r2, #1
 802513c:	4293      	cmp	r3, r2
 802513e:	f6bf ae9c 	bge.w	8024e7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025142:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025146:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802514a:	f1bb 0f00 	cmp.w	fp, #0
 802514e:	f300 809a 	bgt.w	8025286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025152:	9b07      	ldr	r3, [sp, #28]
 8025154:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025158:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802515a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802515e:	930a      	str	r3, [sp, #40]	; 0x28
 8025160:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025162:	2b00      	cmp	r3, #0
 8025164:	f340 81eb 	ble.w	802553e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025168:	ee30 0a04 	vadd.f32	s0, s0, s8
 802516c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025170:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025174:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025176:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802517a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802517e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025182:	eef0 6a62 	vmov.f32	s13, s5
 8025186:	ee61 7a27 	vmul.f32	s15, s2, s15
 802518a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802518e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025192:	ee16 4a90 	vmov	r4, s13
 8025196:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802519a:	eef0 6a43 	vmov.f32	s13, s6
 802519e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80251a2:	ee12 2a90 	vmov	r2, s5
 80251a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80251aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80251ae:	ee13 2a10 	vmov	r2, s6
 80251b2:	9327      	str	r3, [sp, #156]	; 0x9c
 80251b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80251b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80251ba:	9328      	str	r3, [sp, #160]	; 0xa0
 80251bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80251be:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80251c0:	3b01      	subs	r3, #1
 80251c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80251c6:	9316      	str	r3, [sp, #88]	; 0x58
 80251c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80251ca:	bf08      	it	eq
 80251cc:	4613      	moveq	r3, r2
 80251ce:	ee16 6a90 	vmov	r6, s13
 80251d2:	9307      	str	r3, [sp, #28]
 80251d4:	eeb0 3a67 	vmov.f32	s6, s15
 80251d8:	eef0 2a47 	vmov.f32	s5, s14
 80251dc:	e622      	b.n	8024e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80251de:	2800      	cmp	r0, #0
 80251e0:	f43f ae92 	beq.w	8024f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80251e4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80251e8:	9308      	str	r3, [sp, #32]
 80251ea:	0e1b      	lsrs	r3, r3, #24
 80251ec:	9310      	str	r3, [sp, #64]	; 0x40
 80251ee:	e68b      	b.n	8024f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80251f0:	8839      	ldrh	r1, [r7, #0]
 80251f2:	4dd4      	ldr	r5, [pc, #848]	; (8025544 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80251f4:	43db      	mvns	r3, r3
 80251f6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80251fa:	fa5f f883 	uxtb.w	r8, r3
 80251fe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025202:	fb0e fe08 	mul.w	lr, lr, r8
 8025206:	10c8      	asrs	r0, r1, #3
 8025208:	00cb      	lsls	r3, r1, #3
 802520a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802520e:	f10e 0101 	add.w	r1, lr, #1
 8025212:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025216:	fb00 f008 	mul.w	r0, r0, r8
 802521a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802521e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025222:	f100 0e01 	add.w	lr, r0, #1
 8025226:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802522a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802522e:	b2db      	uxtb	r3, r3
 8025230:	b2c9      	uxtb	r1, r1
 8025232:	00d2      	lsls	r2, r2, #3
 8025234:	fb03 f308 	mul.w	r3, r3, r8
 8025238:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802523c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025240:	430a      	orrs	r2, r1
 8025242:	1c59      	adds	r1, r3, #1
 8025244:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025248:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802524c:	e748      	b.n	80250e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802524e:	f112 0801 	adds.w	r8, r2, #1
 8025252:	f53f af4b 	bmi.w	80250ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025256:	4543      	cmp	r3, r8
 8025258:	f6ff af48 	blt.w	80250ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802525c:	f11c 0801 	adds.w	r8, ip, #1
 8025260:	f53f af44 	bmi.w	80250ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025264:	45c6      	cmp	lr, r8
 8025266:	f6ff af41 	blt.w	80250ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802526a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802526e:	fa0f f28e 	sxth.w	r2, lr
 8025272:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025276:	9200      	str	r2, [sp, #0]
 8025278:	b21b      	sxth	r3, r3
 802527a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802527c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802527e:	4639      	mov	r1, r7
 8025280:	f7ff fc87 	bl	8024b92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025284:	e732      	b.n	80250ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025286:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025288:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802528a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802528e:	1421      	asrs	r1, r4, #16
 8025290:	1433      	asrs	r3, r6, #16
 8025292:	fb07 1303 	mla	r3, r7, r3, r1
 8025296:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025298:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802529c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80252a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80252a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80252a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80252ac:	2a00      	cmp	r2, #0
 80252ae:	f000 8107 	beq.w	80254c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80252b2:	684d      	ldr	r5, [r1, #4]
 80252b4:	950d      	str	r5, [sp, #52]	; 0x34
 80252b6:	0e2d      	lsrs	r5, r5, #24
 80252b8:	9514      	str	r5, [sp, #80]	; 0x50
 80252ba:	b178      	cbz	r0, 80252dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80252bc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80252c0:	3f01      	subs	r7, #1
 80252c2:	00bf      	lsls	r7, r7, #2
 80252c4:	3704      	adds	r7, #4
 80252c6:	eb01 0e07 	add.w	lr, r1, r7
 80252ca:	59c9      	ldr	r1, [r1, r7]
 80252cc:	9109      	str	r1, [sp, #36]	; 0x24
 80252ce:	0e09      	lsrs	r1, r1, #24
 80252d0:	9111      	str	r1, [sp, #68]	; 0x44
 80252d2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80252d6:	910e      	str	r1, [sp, #56]	; 0x38
 80252d8:	0e09      	lsrs	r1, r1, #24
 80252da:	9115      	str	r1, [sp, #84]	; 0x54
 80252dc:	b292      	uxth	r2, r2
 80252de:	b280      	uxth	r0, r0
 80252e0:	fb02 f900 	mul.w	r9, r2, r0
 80252e4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80252e8:	0112      	lsls	r2, r2, #4
 80252ea:	eba2 0e09 	sub.w	lr, r2, r9
 80252ee:	b280      	uxth	r0, r0
 80252f0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80252f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80252f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80252f8:	fa1f fe8e 	uxth.w	lr, lr
 80252fc:	1a09      	subs	r1, r1, r0
 80252fe:	b289      	uxth	r1, r1
 8025300:	fb0e f202 	mul.w	r2, lr, r2
 8025304:	fb01 220c 	mla	r2, r1, ip, r2
 8025308:	fb00 2205 	mla	r2, r0, r5, r2
 802530c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802530e:	fb09 2205 	mla	r2, r9, r5, r2
 8025312:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025316:	2a00      	cmp	r2, #0
 8025318:	f000 80c9 	beq.w	80254ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802531c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025320:	d019      	beq.n	8025356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025322:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025326:	fb0c fa0a 	mul.w	sl, ip, sl
 802532a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802532e:	fb0c fc03 	mul.w	ip, ip, r3
 8025332:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025336:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802533a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802533e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025342:	4453      	add	r3, sl
 8025344:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025348:	0a1b      	lsrs	r3, r3, #8
 802534a:	0a3f      	lsrs	r7, r7, #8
 802534c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025350:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025354:	433b      	orrs	r3, r7
 8025356:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025358:	2dff      	cmp	r5, #255	; 0xff
 802535a:	d020      	beq.n	802539e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802535c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802535e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025362:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025364:	436f      	muls	r7, r5
 8025366:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025368:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802536c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802536e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025372:	fb05 fa0a 	mul.w	sl, r5, sl
 8025376:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802537a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802537e:	44bc      	add	ip, r7
 8025380:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025384:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025388:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802538c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025390:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025394:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025398:	ea4c 050a 	orr.w	r5, ip, sl
 802539c:	950d      	str	r5, [sp, #52]	; 0x34
 802539e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80253a0:	2dff      	cmp	r5, #255	; 0xff
 80253a2:	d020      	beq.n	80253e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80253a4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80253a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80253aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80253ac:	436f      	muls	r7, r5
 80253ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80253b0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80253b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80253b6:	fb05 fa0c 	mul.w	sl, r5, ip
 80253ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80253be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80253c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80253c6:	44bc      	add	ip, r7
 80253c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80253cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80253d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80253d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80253d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80253dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80253e0:	ea4c 050a 	orr.w	r5, ip, sl
 80253e4:	9509      	str	r5, [sp, #36]	; 0x24
 80253e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80253e8:	2dff      	cmp	r5, #255	; 0xff
 80253ea:	d020      	beq.n	802542e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80253ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80253ee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80253f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80253f4:	436f      	muls	r7, r5
 80253f6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80253f8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80253fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80253fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025402:	fb05 fa0a 	mul.w	sl, r5, sl
 8025406:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802540a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802540e:	44bc      	add	ip, r7
 8025410:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025414:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025418:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802541c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025420:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025424:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025428:	ea4c 050a 	orr.w	r5, ip, sl
 802542c:	950e      	str	r5, [sp, #56]	; 0x38
 802542e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025430:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025434:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025436:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802543a:	fb0e f707 	mul.w	r7, lr, r7
 802543e:	fb01 770c 	mla	r7, r1, ip, r7
 8025442:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025446:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025448:	fb00 770c 	mla	r7, r0, ip, r7
 802544c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025450:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025452:	fb09 770c 	mla	r7, r9, ip, r7
 8025456:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802545a:	fb0e fe0c 	mul.w	lr, lr, ip
 802545e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025462:	fb01 e303 	mla	r3, r1, r3, lr
 8025466:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025468:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802546c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802546e:	fb00 330a 	mla	r3, r0, sl, r3
 8025472:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025476:	fb09 3c0c 	mla	ip, r9, ip, r3
 802547a:	0a3f      	lsrs	r7, r7, #8
 802547c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025480:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025484:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025488:	ea47 070c 	orr.w	r7, r7, ip
 802548c:	2aff      	cmp	r2, #255	; 0xff
 802548e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025492:	d11e      	bne.n	80254d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025494:	097a      	lsrs	r2, r7, #5
 8025496:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802549a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802549e:	f023 0307 	bic.w	r3, r3, #7
 80254a2:	4313      	orrs	r3, r2
 80254a4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80254a8:	431f      	orrs	r7, r3
 80254aa:	f8a8 7000 	strh.w	r7, [r8]
 80254ae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80254b0:	441c      	add	r4, r3
 80254b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80254b4:	f108 0802 	add.w	r8, r8, #2
 80254b8:	441e      	add	r6, r3
 80254ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 80254be:	e644      	b.n	802514a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80254c0:	2800      	cmp	r0, #0
 80254c2:	f43f af0b 	beq.w	80252dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80254c6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80254ca:	9109      	str	r1, [sp, #36]	; 0x24
 80254cc:	0e09      	lsrs	r1, r1, #24
 80254ce:	9111      	str	r1, [sp, #68]	; 0x44
 80254d0:	e704      	b.n	80252dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80254d2:	f8b8 1000 	ldrh.w	r1, [r8]
 80254d6:	43d2      	mvns	r2, r2
 80254d8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80254dc:	fa5f fe82 	uxtb.w	lr, r2
 80254e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80254e4:	fb0c fc0e 	mul.w	ip, ip, lr
 80254e8:	10c8      	asrs	r0, r1, #3
 80254ea:	00ca      	lsls	r2, r1, #3
 80254ec:	f10c 0101 	add.w	r1, ip, #1
 80254f0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80254f4:	0c39      	lsrs	r1, r7, #16
 80254f6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80254fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80254fe:	4911      	ldr	r1, [pc, #68]	; (8025544 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025500:	fb00 f00e 	mul.w	r0, r0, lr
 8025504:	fa5f fc8c 	uxtb.w	ip, ip
 8025508:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802550c:	b2d2      	uxtb	r2, r2
 802550e:	1c41      	adds	r1, r0, #1
 8025510:	fb02 f20e 	mul.w	r2, r2, lr
 8025514:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025518:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802551c:	1c51      	adds	r1, r2, #1
 802551e:	00c0      	lsls	r0, r0, #3
 8025520:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025524:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025528:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802552c:	ea4c 0c00 	orr.w	ip, ip, r0
 8025530:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025534:	ea47 0c0c 	orr.w	ip, r7, ip
 8025538:	f8a8 c000 	strh.w	ip, [r8]
 802553c:	e7b7      	b.n	80254ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802553e:	b01b      	add	sp, #108	; 0x6c
 8025540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025544:	fffff800 	.word	0xfffff800

08025548 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025548:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802554c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025550:	2d00      	cmp	r5, #0
 8025552:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025556:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802555a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802555e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025562:	fb05 0e03 	mla	lr, r5, r3, r0
 8025566:	f2c0 808c 	blt.w	8025682 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802556a:	45a9      	cmp	r9, r5
 802556c:	f340 8089 	ble.w	8025682 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025570:	2800      	cmp	r0, #0
 8025572:	f2c0 8084 	blt.w	802567e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025576:	4580      	cmp	r8, r0
 8025578:	f340 8081 	ble.w	802567e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802557c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025580:	f01e 0f01 	tst.w	lr, #1
 8025584:	5d16      	ldrb	r6, [r2, r4]
 8025586:	bf0c      	ite	eq
 8025588:	f006 060f 	andeq.w	r6, r6, #15
 802558c:	1136      	asrne	r6, r6, #4
 802558e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025592:	b2f6      	uxtb	r6, r6
 8025594:	1c44      	adds	r4, r0, #1
 8025596:	d477      	bmi.n	8025688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025598:	45a0      	cmp	r8, r4
 802559a:	dd75      	ble.n	8025688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802559c:	2f00      	cmp	r7, #0
 802559e:	d075      	beq.n	802568c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80255a0:	f10e 0a01 	add.w	sl, lr, #1
 80255a4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80255a8:	f01a 0f01 	tst.w	sl, #1
 80255ac:	5d14      	ldrb	r4, [r2, r4]
 80255ae:	bf0c      	ite	eq
 80255b0:	f004 040f 	andeq.w	r4, r4, #15
 80255b4:	1124      	asrne	r4, r4, #4
 80255b6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80255ba:	b2e4      	uxtb	r4, r4
 80255bc:	3501      	adds	r5, #1
 80255be:	d469      	bmi.n	8025694 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80255c0:	45a9      	cmp	r9, r5
 80255c2:	dd67      	ble.n	8025694 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80255c4:	f1bc 0f00 	cmp.w	ip, #0
 80255c8:	d067      	beq.n	802569a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80255ca:	2800      	cmp	r0, #0
 80255cc:	db60      	blt.n	8025690 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80255ce:	4580      	cmp	r8, r0
 80255d0:	dd5e      	ble.n	8025690 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80255d2:	eb03 090e 	add.w	r9, r3, lr
 80255d6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80255da:	f019 0f01 	tst.w	r9, #1
 80255de:	5d55      	ldrb	r5, [r2, r5]
 80255e0:	bf0c      	ite	eq
 80255e2:	f005 050f 	andeq.w	r5, r5, #15
 80255e6:	112d      	asrne	r5, r5, #4
 80255e8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80255ec:	b2ed      	uxtb	r5, r5
 80255ee:	3001      	adds	r0, #1
 80255f0:	d456      	bmi.n	80256a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80255f2:	4580      	cmp	r8, r0
 80255f4:	dd54      	ble.n	80256a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80255f6:	2f00      	cmp	r7, #0
 80255f8:	d054      	beq.n	80256a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80255fa:	3301      	adds	r3, #1
 80255fc:	449e      	add	lr, r3
 80255fe:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025602:	f01e 0f01 	tst.w	lr, #1
 8025606:	5cd0      	ldrb	r0, [r2, r3]
 8025608:	bf0c      	ite	eq
 802560a:	f000 000f 	andeq.w	r0, r0, #15
 802560e:	1100      	asrne	r0, r0, #4
 8025610:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025614:	b2c3      	uxtb	r3, r0
 8025616:	b2ba      	uxth	r2, r7
 8025618:	fa1f fc8c 	uxth.w	ip, ip
 802561c:	fb02 f00c 	mul.w	r0, r2, ip
 8025620:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025624:	0112      	lsls	r2, r2, #4
 8025626:	fa1f fc8c 	uxth.w	ip, ip
 802562a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802562e:	1a12      	subs	r2, r2, r0
 8025630:	eba7 070c 	sub.w	r7, r7, ip
 8025634:	b292      	uxth	r2, r2
 8025636:	b2bf      	uxth	r7, r7
 8025638:	4362      	muls	r2, r4
 802563a:	fb06 2207 	mla	r2, r6, r7, r2
 802563e:	fb0c 2505 	mla	r5, ip, r5, r2
 8025642:	fb00 5303 	mla	r3, r0, r3, r5
 8025646:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802564a:	b1b3      	cbz	r3, 802567a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802564c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8025650:	435a      	muls	r2, r3
 8025652:	1c53      	adds	r3, r2, #1
 8025654:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025658:	4a2d      	ldr	r2, [pc, #180]	; (8025710 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802565a:	121b      	asrs	r3, r3, #8
 802565c:	6812      	ldr	r2, [r2, #0]
 802565e:	2bff      	cmp	r3, #255	; 0xff
 8025660:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025664:	d120      	bne.n	80256a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025666:	4b2b      	ldr	r3, [pc, #172]	; (8025714 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025668:	0950      	lsrs	r0, r2, #5
 802566a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802566e:	4033      	ands	r3, r6
 8025670:	4318      	orrs	r0, r3
 8025672:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025676:	4302      	orrs	r2, r0
 8025678:	800a      	strh	r2, [r1, #0]
 802567a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802567e:	2600      	movs	r6, #0
 8025680:	e788      	b.n	8025594 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8025682:	2400      	movs	r4, #0
 8025684:	4626      	mov	r6, r4
 8025686:	e799      	b.n	80255bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025688:	2400      	movs	r4, #0
 802568a:	e797      	b.n	80255bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802568c:	463c      	mov	r4, r7
 802568e:	e795      	b.n	80255bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025690:	2500      	movs	r5, #0
 8025692:	e7ac      	b.n	80255ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025694:	2300      	movs	r3, #0
 8025696:	461d      	mov	r5, r3
 8025698:	e7bd      	b.n	8025616 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802569a:	4663      	mov	r3, ip
 802569c:	4665      	mov	r5, ip
 802569e:	e7ba      	b.n	8025616 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80256a0:	2300      	movs	r3, #0
 80256a2:	e7b8      	b.n	8025616 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80256a4:	463b      	mov	r3, r7
 80256a6:	e7b6      	b.n	8025616 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80256a8:	880d      	ldrh	r5, [r1, #0]
 80256aa:	b29f      	uxth	r7, r3
 80256ac:	122c      	asrs	r4, r5, #8
 80256ae:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80256b2:	43db      	mvns	r3, r3
 80256b4:	b2db      	uxtb	r3, r3
 80256b6:	fb10 f007 	smulbb	r0, r0, r7
 80256ba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80256be:	fb04 0403 	mla	r4, r4, r3, r0
 80256c2:	b2f6      	uxtb	r6, r6
 80256c4:	10e8      	asrs	r0, r5, #3
 80256c6:	b2d2      	uxtb	r2, r2
 80256c8:	00ed      	lsls	r5, r5, #3
 80256ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80256ce:	fb12 f207 	smulbb	r2, r2, r7
 80256d2:	fb16 f607 	smulbb	r6, r6, r7
 80256d6:	b2ed      	uxtb	r5, r5
 80256d8:	b2a4      	uxth	r4, r4
 80256da:	fb00 6603 	mla	r6, r0, r3, r6
 80256de:	fb05 2303 	mla	r3, r5, r3, r2
 80256e2:	b29a      	uxth	r2, r3
 80256e4:	1c63      	adds	r3, r4, #1
 80256e6:	b2b0      	uxth	r0, r6
 80256e8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80256ec:	1c53      	adds	r3, r2, #1
 80256ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80256f2:	1c42      	adds	r2, r0, #1
 80256f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80256f8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80256fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025700:	0940      	lsrs	r0, r0, #5
 8025702:	4323      	orrs	r3, r4
 8025704:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025708:	4303      	orrs	r3, r0
 802570a:	800b      	strh	r3, [r1, #0]
 802570c:	e7b5      	b.n	802567a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802570e:	bf00      	nop
 8025710:	20012db4 	.word	0x20012db4
 8025714:	00fff800 	.word	0x00fff800

08025718 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802571c:	b097      	sub	sp, #92	; 0x5c
 802571e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025722:	9214      	str	r2, [sp, #80]	; 0x50
 8025724:	9309      	str	r3, [sp, #36]	; 0x24
 8025726:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025728:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802572c:	910d      	str	r1, [sp, #52]	; 0x34
 802572e:	930f      	str	r3, [sp, #60]	; 0x3c
 8025730:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025734:	9015      	str	r0, [sp, #84]	; 0x54
 8025736:	6850      	ldr	r0, [r2, #4]
 8025738:	6812      	ldr	r2, [r2, #0]
 802573a:	fb00 1303 	mla	r3, r0, r3, r1
 802573e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025742:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025744:	689b      	ldr	r3, [r3, #8]
 8025746:	3301      	adds	r3, #1
 8025748:	f023 0301 	bic.w	r3, r3, #1
 802574c:	930a      	str	r3, [sp, #40]	; 0x28
 802574e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025750:	681f      	ldr	r7, [r3, #0]
 8025752:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025754:	2b00      	cmp	r3, #0
 8025756:	dc03      	bgt.n	8025760 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025758:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802575a:	2b00      	cmp	r3, #0
 802575c:	f340 8287 	ble.w	8025c6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025760:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025762:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025766:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802576a:	1e48      	subs	r0, r1, #1
 802576c:	f102 3cff 	add.w	ip, r2, #4294967295
 8025770:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025772:	2b00      	cmp	r3, #0
 8025774:	f340 80c4 	ble.w	8025900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025778:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802577c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025780:	d406      	bmi.n	8025790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025782:	4586      	cmp	lr, r0
 8025784:	da04      	bge.n	8025790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025786:	2b00      	cmp	r3, #0
 8025788:	db02      	blt.n	8025790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802578a:	4563      	cmp	r3, ip
 802578c:	f2c0 80b9 	blt.w	8025902 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025790:	f11e 0e01 	adds.w	lr, lr, #1
 8025794:	f100 80aa 	bmi.w	80258ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025798:	4571      	cmp	r1, lr
 802579a:	f2c0 80a7 	blt.w	80258ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802579e:	3301      	adds	r3, #1
 80257a0:	f100 80a4 	bmi.w	80258ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80257a4:	429a      	cmp	r2, r3
 80257a6:	f2c0 80a1 	blt.w	80258ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80257aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257ac:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80257b0:	930e      	str	r3, [sp, #56]	; 0x38
 80257b2:	46c8      	mov	r8, r9
 80257b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80257b6:	2b00      	cmp	r3, #0
 80257b8:	f340 80c3 	ble.w	8025942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80257bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257be:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80257c2:	1423      	asrs	r3, r4, #16
 80257c4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80257c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80257cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80257d0:	f100 814d 	bmi.w	8025a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80257d4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80257d8:	455b      	cmp	r3, fp
 80257da:	f280 8148 	bge.w	8025a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80257de:	2800      	cmp	r0, #0
 80257e0:	f2c0 8145 	blt.w	8025a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80257e4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80257e8:	4558      	cmp	r0, fp
 80257ea:	f280 8140 	bge.w	8025a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80257ee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80257f0:	fb00 3305 	mla	r3, r0, r5, r3
 80257f4:	0858      	lsrs	r0, r3, #1
 80257f6:	07dd      	lsls	r5, r3, #31
 80257f8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80257fc:	bf54      	ite	pl
 80257fe:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025802:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025806:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802580a:	fa5f fc8c 	uxtb.w	ip, ip
 802580e:	2a00      	cmp	r2, #0
 8025810:	f000 80db 	beq.w	80259ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025814:	1c58      	adds	r0, r3, #1
 8025816:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802581a:	07c0      	lsls	r0, r0, #31
 802581c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025820:	bf54      	ite	pl
 8025822:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025826:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802582a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802582e:	fa5f f08e 	uxtb.w	r0, lr
 8025832:	9010      	str	r0, [sp, #64]	; 0x40
 8025834:	b1c9      	cbz	r1, 802586a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025836:	4453      	add	r3, sl
 8025838:	0858      	lsrs	r0, r3, #1
 802583a:	07dd      	lsls	r5, r3, #31
 802583c:	5c38      	ldrb	r0, [r7, r0]
 802583e:	bf54      	ite	pl
 8025840:	f000 000f 	andpl.w	r0, r0, #15
 8025844:	1100      	asrmi	r0, r0, #4
 8025846:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802584a:	3301      	adds	r3, #1
 802584c:	b2c0      	uxtb	r0, r0
 802584e:	900b      	str	r0, [sp, #44]	; 0x2c
 8025850:	0858      	lsrs	r0, r3, #1
 8025852:	07dd      	lsls	r5, r3, #31
 8025854:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025858:	bf54      	ite	pl
 802585a:	f00e 030f 	andpl.w	r3, lr, #15
 802585e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025862:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025866:	b2db      	uxtb	r3, r3
 8025868:	9311      	str	r3, [sp, #68]	; 0x44
 802586a:	b292      	uxth	r2, r2
 802586c:	b289      	uxth	r1, r1
 802586e:	fb02 f301 	mul.w	r3, r2, r1
 8025872:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025876:	0112      	lsls	r2, r2, #4
 8025878:	b289      	uxth	r1, r1
 802587a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802587e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025880:	1ad2      	subs	r2, r2, r3
 8025882:	1a40      	subs	r0, r0, r1
 8025884:	b292      	uxth	r2, r2
 8025886:	436a      	muls	r2, r5
 8025888:	b280      	uxth	r0, r0
 802588a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802588e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025890:	fb01 c102 	mla	r1, r1, r2, ip
 8025894:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025896:	fb03 1302 	mla	r3, r3, r2, r1
 802589a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802589e:	b1db      	cbz	r3, 80258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80258a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80258a2:	4353      	muls	r3, r2
 80258a4:	1c5a      	adds	r2, r3, #1
 80258a6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80258aa:	4ac6      	ldr	r2, [pc, #792]	; (8025bc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80258ac:	121b      	asrs	r3, r3, #8
 80258ae:	6812      	ldr	r2, [r2, #0]
 80258b0:	2bff      	cmp	r3, #255	; 0xff
 80258b2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80258b6:	f040 8099 	bne.w	80259ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80258ba:	0953      	lsrs	r3, r2, #5
 80258bc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80258c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80258c4:	f02c 0c07 	bic.w	ip, ip, #7
 80258c8:	ea43 0c0c 	orr.w	ip, r3, ip
 80258cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80258d0:	ea4c 0202 	orr.w	r2, ip, r2
 80258d4:	f8a8 2000 	strh.w	r2, [r8]
 80258d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80258da:	441c      	add	r4, r3
 80258dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80258de:	441e      	add	r6, r3
 80258e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80258e2:	3b01      	subs	r3, #1
 80258e4:	f108 0802 	add.w	r8, r8, #2
 80258e8:	930e      	str	r3, [sp, #56]	; 0x38
 80258ea:	e763      	b.n	80257b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80258ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80258ee:	441c      	add	r4, r3
 80258f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80258f2:	441e      	add	r6, r3
 80258f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80258f6:	3b01      	subs	r3, #1
 80258f8:	9309      	str	r3, [sp, #36]	; 0x24
 80258fa:	f109 0902 	add.w	r9, r9, #2
 80258fe:	e737      	b.n	8025770 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025900:	d024      	beq.n	802594c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025902:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025904:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025906:	3b01      	subs	r3, #1
 8025908:	fb00 4003 	mla	r0, r0, r3, r4
 802590c:	1400      	asrs	r0, r0, #16
 802590e:	f53f af4c 	bmi.w	80257aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025912:	3901      	subs	r1, #1
 8025914:	4288      	cmp	r0, r1
 8025916:	f6bf af48 	bge.w	80257aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802591a:	9924      	ldr	r1, [sp, #144]	; 0x90
 802591c:	fb01 6303 	mla	r3, r1, r3, r6
 8025920:	141b      	asrs	r3, r3, #16
 8025922:	f53f af42 	bmi.w	80257aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025926:	3a01      	subs	r2, #1
 8025928:	4293      	cmp	r3, r2
 802592a:	f6bf af3e 	bge.w	80257aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802592e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025932:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025936:	930e      	str	r3, [sp, #56]	; 0x38
 8025938:	46c8      	mov	r8, r9
 802593a:	f1bb 0f00 	cmp.w	fp, #0
 802593e:	f300 80b7 	bgt.w	8025ab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025942:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025944:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025948:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802594c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802594e:	2b00      	cmp	r3, #0
 8025950:	f340 818d 	ble.w	8025c6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025954:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025958:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802595c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025960:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025962:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025966:	ee31 1a05 	vadd.f32	s2, s2, s10
 802596a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802596e:	eef0 6a62 	vmov.f32	s13, s5
 8025972:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025976:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802597a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802597e:	ee16 4a90 	vmov	r4, s13
 8025982:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025986:	eef0 6a43 	vmov.f32	s13, s6
 802598a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802598e:	ee12 2a90 	vmov	r2, s5
 8025992:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025996:	fb92 f3f3 	sdiv	r3, r2, r3
 802599a:	ee13 2a10 	vmov	r2, s6
 802599e:	9323      	str	r3, [sp, #140]	; 0x8c
 80259a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80259a6:	9324      	str	r3, [sp, #144]	; 0x90
 80259a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80259aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80259ac:	3b01      	subs	r3, #1
 80259ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80259b2:	930d      	str	r3, [sp, #52]	; 0x34
 80259b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259b6:	bf08      	it	eq
 80259b8:	4613      	moveq	r3, r2
 80259ba:	ee16 6a90 	vmov	r6, s13
 80259be:	9309      	str	r3, [sp, #36]	; 0x24
 80259c0:	eeb0 3a67 	vmov.f32	s6, s15
 80259c4:	eef0 2a47 	vmov.f32	s5, s14
 80259c8:	e6c3      	b.n	8025752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80259ca:	2900      	cmp	r1, #0
 80259cc:	f43f af4d 	beq.w	802586a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80259d0:	eb0a 0003 	add.w	r0, sl, r3
 80259d4:	0843      	lsrs	r3, r0, #1
 80259d6:	07c0      	lsls	r0, r0, #31
 80259d8:	5cfb      	ldrb	r3, [r7, r3]
 80259da:	bf54      	ite	pl
 80259dc:	f003 030f 	andpl.w	r3, r3, #15
 80259e0:	111b      	asrmi	r3, r3, #4
 80259e2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80259e6:	b2db      	uxtb	r3, r3
 80259e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80259ea:	e73e      	b.n	802586a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80259ec:	f8b8 e000 	ldrh.w	lr, [r8]
 80259f0:	fa1f fb83 	uxth.w	fp, r3
 80259f4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80259f8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80259fc:	43db      	mvns	r3, r3
 80259fe:	b2db      	uxtb	r3, r3
 8025a00:	fb11 f10b 	smulbb	r1, r1, fp
 8025a04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025a08:	fb00 1003 	mla	r0, r0, r3, r1
 8025a0c:	fa5f fc8c 	uxtb.w	ip, ip
 8025a10:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025a14:	b2d2      	uxtb	r2, r2
 8025a16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025a1a:	b280      	uxth	r0, r0
 8025a1c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025a20:	fb1c fc0b 	smulbb	ip, ip, fp
 8025a24:	fa5f fe8e 	uxtb.w	lr, lr
 8025a28:	fb12 fb0b 	smulbb	fp, r2, fp
 8025a2c:	fb01 cc03 	mla	ip, r1, r3, ip
 8025a30:	fb0e bb03 	mla	fp, lr, r3, fp
 8025a34:	1c43      	adds	r3, r0, #1
 8025a36:	fa1f fc8c 	uxth.w	ip, ip
 8025a3a:	fa1f fb8b 	uxth.w	fp, fp
 8025a3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025a42:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025a46:	f10c 0101 	add.w	r1, ip, #1
 8025a4a:	f10b 0001 	add.w	r0, fp, #1
 8025a4e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025a52:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025a56:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025a5a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025a5e:	4318      	orrs	r0, r3
 8025a60:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025a64:	ea40 000c 	orr.w	r0, r0, ip
 8025a68:	f8a8 0000 	strh.w	r0, [r8]
 8025a6c:	e734      	b.n	80258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025a6e:	f113 0b01 	adds.w	fp, r3, #1
 8025a72:	f53f af31 	bmi.w	80258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025a76:	45dc      	cmp	ip, fp
 8025a78:	f6ff af2e 	blt.w	80258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025a7c:	f110 0b01 	adds.w	fp, r0, #1
 8025a80:	f53f af2a 	bmi.w	80258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025a84:	45de      	cmp	lr, fp
 8025a86:	f6ff af27 	blt.w	80258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025a8a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025a8c:	9302      	str	r3, [sp, #8]
 8025a8e:	fa0f f38e 	sxth.w	r3, lr
 8025a92:	9301      	str	r3, [sp, #4]
 8025a94:	fa0f f38c 	sxth.w	r3, ip
 8025a98:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025a9c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025aa0:	9300      	str	r3, [sp, #0]
 8025aa2:	463a      	mov	r2, r7
 8025aa4:	4653      	mov	r3, sl
 8025aa6:	4641      	mov	r1, r8
 8025aa8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025aaa:	f7ff fd4d 	bl	8025548 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025aae:	e713      	b.n	80258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025ab0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025ab2:	1422      	asrs	r2, r4, #16
 8025ab4:	1433      	asrs	r3, r6, #16
 8025ab6:	fb05 2303 	mla	r3, r5, r3, r2
 8025aba:	085a      	lsrs	r2, r3, #1
 8025abc:	07dd      	lsls	r5, r3, #31
 8025abe:	5cba      	ldrb	r2, [r7, r2]
 8025ac0:	bf54      	ite	pl
 8025ac2:	f002 020f 	andpl.w	r2, r2, #15
 8025ac6:	1112      	asrmi	r2, r2, #4
 8025ac8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025acc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025ad0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025ad4:	b2d2      	uxtb	r2, r2
 8025ad6:	2900      	cmp	r1, #0
 8025ad8:	d076      	beq.n	8025bc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025ada:	f103 0e01 	add.w	lr, r3, #1
 8025ade:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025ae2:	f01e 0f01 	tst.w	lr, #1
 8025ae6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025aea:	bf0c      	ite	eq
 8025aec:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025af0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025af4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025af8:	fa5f f58c 	uxtb.w	r5, ip
 8025afc:	9512      	str	r5, [sp, #72]	; 0x48
 8025afe:	b300      	cbz	r0, 8025b42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025b00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b02:	442b      	add	r3, r5
 8025b04:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025b08:	07dd      	lsls	r5, r3, #31
 8025b0a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025b0e:	bf54      	ite	pl
 8025b10:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025b14:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025b18:	3301      	adds	r3, #1
 8025b1a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025b1e:	fa5f f58c 	uxtb.w	r5, ip
 8025b22:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025b26:	950c      	str	r5, [sp, #48]	; 0x30
 8025b28:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025b2c:	07dd      	lsls	r5, r3, #31
 8025b2e:	bf54      	ite	pl
 8025b30:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025b34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025b38:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025b3c:	fa5f f38c 	uxtb.w	r3, ip
 8025b40:	9313      	str	r3, [sp, #76]	; 0x4c
 8025b42:	b289      	uxth	r1, r1
 8025b44:	b280      	uxth	r0, r0
 8025b46:	fb01 f300 	mul.w	r3, r1, r0
 8025b4a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025b4e:	0109      	lsls	r1, r1, #4
 8025b50:	b280      	uxth	r0, r0
 8025b52:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025b56:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025b58:	1ac9      	subs	r1, r1, r3
 8025b5a:	ebac 0c00 	sub.w	ip, ip, r0
 8025b5e:	b289      	uxth	r1, r1
 8025b60:	4369      	muls	r1, r5
 8025b62:	fa1f fc8c 	uxth.w	ip, ip
 8025b66:	fb02 120c 	mla	r2, r2, ip, r1
 8025b6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025b6c:	fb00 2001 	mla	r0, r0, r1, r2
 8025b70:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025b72:	fb03 0302 	mla	r3, r3, r2, r0
 8025b76:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025b7a:	b1d3      	cbz	r3, 8025bb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025b7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025b7e:	4353      	muls	r3, r2
 8025b80:	1c5a      	adds	r2, r3, #1
 8025b82:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025b86:	4a0f      	ldr	r2, [pc, #60]	; (8025bc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025b88:	121b      	asrs	r3, r3, #8
 8025b8a:	6812      	ldr	r2, [r2, #0]
 8025b8c:	2bff      	cmp	r3, #255	; 0xff
 8025b8e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025b92:	d12d      	bne.n	8025bf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025b94:	0953      	lsrs	r3, r2, #5
 8025b96:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025b9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b9e:	f02c 0c07 	bic.w	ip, ip, #7
 8025ba2:	ea43 0c0c 	orr.w	ip, r3, ip
 8025ba6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025baa:	ea4c 0202 	orr.w	r2, ip, r2
 8025bae:	f8a8 2000 	strh.w	r2, [r8]
 8025bb2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025bb4:	441c      	add	r4, r3
 8025bb6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025bb8:	f108 0802 	add.w	r8, r8, #2
 8025bbc:	441e      	add	r6, r3
 8025bbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025bc2:	e6ba      	b.n	802593a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025bc4:	20012db4 	.word	0x20012db4
 8025bc8:	2800      	cmp	r0, #0
 8025bca:	d0ba      	beq.n	8025b42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025bcc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025bce:	442b      	add	r3, r5
 8025bd0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025bd4:	07db      	lsls	r3, r3, #31
 8025bd6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025bda:	bf54      	ite	pl
 8025bdc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025be0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025be4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025be8:	fa5f f38c 	uxtb.w	r3, ip
 8025bec:	930c      	str	r3, [sp, #48]	; 0x30
 8025bee:	e7a8      	b.n	8025b42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025bf0:	f8b8 e000 	ldrh.w	lr, [r8]
 8025bf4:	fa1f fa83 	uxth.w	sl, r3
 8025bf8:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025bfc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025c00:	43db      	mvns	r3, r3
 8025c02:	b2db      	uxtb	r3, r3
 8025c04:	fb11 f10a 	smulbb	r1, r1, sl
 8025c08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025c0c:	fb00 1003 	mla	r0, r0, r3, r1
 8025c10:	b2d2      	uxtb	r2, r2
 8025c12:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025c16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025c1a:	fa5f fe8e 	uxtb.w	lr, lr
 8025c1e:	fb12 f20a 	smulbb	r2, r2, sl
 8025c22:	fb0e 2203 	mla	r2, lr, r3, r2
 8025c26:	fa5f fc8c 	uxtb.w	ip, ip
 8025c2a:	b280      	uxth	r0, r0
 8025c2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025c30:	b292      	uxth	r2, r2
 8025c32:	fb1c fc0a 	smulbb	ip, ip, sl
 8025c36:	fb01 cc03 	mla	ip, r1, r3, ip
 8025c3a:	1c43      	adds	r3, r0, #1
 8025c3c:	1c51      	adds	r1, r2, #1
 8025c3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025c42:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025c46:	fa1f fc8c 	uxth.w	ip, ip
 8025c4a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025c4e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025c52:	4308      	orrs	r0, r1
 8025c54:	f10c 0101 	add.w	r1, ip, #1
 8025c58:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025c5c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025c60:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025c64:	ea40 000c 	orr.w	r0, r0, ip
 8025c68:	f8a8 0000 	strh.w	r0, [r8]
 8025c6c:	e7a1      	b.n	8025bb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025c6e:	b017      	add	sp, #92	; 0x5c
 8025c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025c74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025c78:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025c7c:	2d00      	cmp	r5, #0
 8025c7e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025c82:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025c86:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025c8a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025c8e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025c92:	f2c0 80b0 	blt.w	8025df6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025c96:	45a9      	cmp	r9, r5
 8025c98:	f340 80ad 	ble.w	8025df6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025c9c:	2800      	cmp	r0, #0
 8025c9e:	f2c0 80a8 	blt.w	8025df2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025ca2:	4580      	cmp	r8, r0
 8025ca4:	f340 80a5 	ble.w	8025df2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025ca8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025cac:	f01e 0f01 	tst.w	lr, #1
 8025cb0:	5d16      	ldrb	r6, [r2, r4]
 8025cb2:	bf0c      	ite	eq
 8025cb4:	f006 060f 	andeq.w	r6, r6, #15
 8025cb8:	1136      	asrne	r6, r6, #4
 8025cba:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025cbe:	b2f6      	uxtb	r6, r6
 8025cc0:	1c44      	adds	r4, r0, #1
 8025cc2:	f100 809b 	bmi.w	8025dfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025cc6:	45a0      	cmp	r8, r4
 8025cc8:	f340 8098 	ble.w	8025dfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025ccc:	2f00      	cmp	r7, #0
 8025cce:	f000 8097 	beq.w	8025e00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025cd2:	f10e 0a01 	add.w	sl, lr, #1
 8025cd6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025cda:	f01a 0f01 	tst.w	sl, #1
 8025cde:	5d14      	ldrb	r4, [r2, r4]
 8025ce0:	bf0c      	ite	eq
 8025ce2:	f004 040f 	andeq.w	r4, r4, #15
 8025ce6:	1124      	asrne	r4, r4, #4
 8025ce8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025cec:	b2e4      	uxtb	r4, r4
 8025cee:	3501      	adds	r5, #1
 8025cf0:	f100 808a 	bmi.w	8025e08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025cf4:	45a9      	cmp	r9, r5
 8025cf6:	f340 8087 	ble.w	8025e08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025cfa:	f1bc 0f00 	cmp.w	ip, #0
 8025cfe:	f000 8086 	beq.w	8025e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025d02:	2800      	cmp	r0, #0
 8025d04:	db7e      	blt.n	8025e04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025d06:	4580      	cmp	r8, r0
 8025d08:	dd7c      	ble.n	8025e04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025d0a:	eb03 090e 	add.w	r9, r3, lr
 8025d0e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025d12:	f019 0f01 	tst.w	r9, #1
 8025d16:	5d55      	ldrb	r5, [r2, r5]
 8025d18:	bf0c      	ite	eq
 8025d1a:	f005 050f 	andeq.w	r5, r5, #15
 8025d1e:	112d      	asrne	r5, r5, #4
 8025d20:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025d24:	b2ed      	uxtb	r5, r5
 8025d26:	3001      	adds	r0, #1
 8025d28:	d474      	bmi.n	8025e14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025d2a:	4580      	cmp	r8, r0
 8025d2c:	dd72      	ble.n	8025e14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025d2e:	2f00      	cmp	r7, #0
 8025d30:	d072      	beq.n	8025e18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025d32:	3301      	adds	r3, #1
 8025d34:	449e      	add	lr, r3
 8025d36:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025d3a:	f01e 0f01 	tst.w	lr, #1
 8025d3e:	5cd0      	ldrb	r0, [r2, r3]
 8025d40:	bf0c      	ite	eq
 8025d42:	f000 000f 	andeq.w	r0, r0, #15
 8025d46:	1100      	asrne	r0, r0, #4
 8025d48:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025d4c:	b2c3      	uxtb	r3, r0
 8025d4e:	b2ba      	uxth	r2, r7
 8025d50:	fa1f fc8c 	uxth.w	ip, ip
 8025d54:	fb02 f00c 	mul.w	r0, r2, ip
 8025d58:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025d5c:	0112      	lsls	r2, r2, #4
 8025d5e:	fa1f fc8c 	uxth.w	ip, ip
 8025d62:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025d66:	1a12      	subs	r2, r2, r0
 8025d68:	eba7 070c 	sub.w	r7, r7, ip
 8025d6c:	b292      	uxth	r2, r2
 8025d6e:	b2bf      	uxth	r7, r7
 8025d70:	4362      	muls	r2, r4
 8025d72:	fb06 2207 	mla	r2, r6, r7, r2
 8025d76:	fb0c 2505 	mla	r5, ip, r5, r2
 8025d7a:	fb00 5303 	mla	r3, r0, r3, r5
 8025d7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025d82:	b3a3      	cbz	r3, 8025dee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025d84:	4a25      	ldr	r2, [pc, #148]	; (8025e1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025d86:	880e      	ldrh	r6, [r1, #0]
 8025d88:	6815      	ldr	r5, [r2, #0]
 8025d8a:	1234      	asrs	r4, r6, #8
 8025d8c:	b29a      	uxth	r2, r3
 8025d8e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025d92:	43db      	mvns	r3, r3
 8025d94:	b2db      	uxtb	r3, r3
 8025d96:	fb10 f002 	smulbb	r0, r0, r2
 8025d9a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025d9e:	fb04 0403 	mla	r4, r4, r3, r0
 8025da2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025da6:	10f0      	asrs	r0, r6, #3
 8025da8:	b2ed      	uxtb	r5, r5
 8025daa:	00f6      	lsls	r6, r6, #3
 8025dac:	fb17 f702 	smulbb	r7, r7, r2
 8025db0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025db4:	fb15 f202 	smulbb	r2, r5, r2
 8025db8:	b2f6      	uxtb	r6, r6
 8025dba:	b2a4      	uxth	r4, r4
 8025dbc:	fb00 7003 	mla	r0, r0, r3, r7
 8025dc0:	fb06 2303 	mla	r3, r6, r3, r2
 8025dc4:	b29a      	uxth	r2, r3
 8025dc6:	1c63      	adds	r3, r4, #1
 8025dc8:	b280      	uxth	r0, r0
 8025dca:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025dce:	1c53      	adds	r3, r2, #1
 8025dd0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025dd4:	1c42      	adds	r2, r0, #1
 8025dd6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025dda:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025dde:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025de2:	0940      	lsrs	r0, r0, #5
 8025de4:	4323      	orrs	r3, r4
 8025de6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025dea:	4303      	orrs	r3, r0
 8025dec:	800b      	strh	r3, [r1, #0]
 8025dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025df2:	2600      	movs	r6, #0
 8025df4:	e764      	b.n	8025cc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025df6:	2400      	movs	r4, #0
 8025df8:	4626      	mov	r6, r4
 8025dfa:	e778      	b.n	8025cee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025dfc:	2400      	movs	r4, #0
 8025dfe:	e776      	b.n	8025cee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e00:	463c      	mov	r4, r7
 8025e02:	e774      	b.n	8025cee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e04:	2500      	movs	r5, #0
 8025e06:	e78e      	b.n	8025d26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025e08:	2300      	movs	r3, #0
 8025e0a:	461d      	mov	r5, r3
 8025e0c:	e79f      	b.n	8025d4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025e0e:	4663      	mov	r3, ip
 8025e10:	4665      	mov	r5, ip
 8025e12:	e79c      	b.n	8025d4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025e14:	2300      	movs	r3, #0
 8025e16:	e79a      	b.n	8025d4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025e18:	463b      	mov	r3, r7
 8025e1a:	e798      	b.n	8025d4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025e1c:	20012db4 	.word	0x20012db4

08025e20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e24:	b093      	sub	sp, #76	; 0x4c
 8025e26:	461d      	mov	r5, r3
 8025e28:	920c      	str	r2, [sp, #48]	; 0x30
 8025e2a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025e2c:	9107      	str	r1, [sp, #28]
 8025e2e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025e32:	9011      	str	r0, [sp, #68]	; 0x44
 8025e34:	6850      	ldr	r0, [r2, #4]
 8025e36:	6812      	ldr	r2, [r2, #0]
 8025e38:	fb00 1303 	mla	r3, r0, r3, r1
 8025e3c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025e40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e42:	689b      	ldr	r3, [r3, #8]
 8025e44:	3301      	adds	r3, #1
 8025e46:	f023 0301 	bic.w	r3, r3, #1
 8025e4a:	9306      	str	r3, [sp, #24]
 8025e4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e4e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025e52:	681f      	ldr	r7, [r3, #0]
 8025e54:	9b07      	ldr	r3, [sp, #28]
 8025e56:	2b00      	cmp	r3, #0
 8025e58:	dc03      	bgt.n	8025e62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025e5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025e5c:	2b00      	cmp	r3, #0
 8025e5e:	f340 8267 	ble.w	8026330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025e62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025e68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025e6c:	1e48      	subs	r0, r1, #1
 8025e6e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025e72:	2d00      	cmp	r5, #0
 8025e74:	f340 80b8 	ble.w	8025fe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025e78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025e7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025e80:	d406      	bmi.n	8025e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025e82:	4586      	cmp	lr, r0
 8025e84:	da04      	bge.n	8025e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025e86:	2b00      	cmp	r3, #0
 8025e88:	db02      	blt.n	8025e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025e8a:	4563      	cmp	r3, ip
 8025e8c:	f2c0 80ad 	blt.w	8025fea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025e90:	f11e 0e01 	adds.w	lr, lr, #1
 8025e94:	f100 80a0 	bmi.w	8025fd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025e98:	4571      	cmp	r1, lr
 8025e9a:	f2c0 809d 	blt.w	8025fd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025e9e:	3301      	adds	r3, #1
 8025ea0:	f100 809a 	bmi.w	8025fd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025ea4:	429a      	cmp	r2, r3
 8025ea6:	f2c0 8097 	blt.w	8025fd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025eaa:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025eae:	9509      	str	r5, [sp, #36]	; 0x24
 8025eb0:	46c8      	mov	r8, r9
 8025eb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025eb4:	2b00      	cmp	r3, #0
 8025eb6:	f340 80b6 	ble.w	8026026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025eba:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025ebe:	9308      	str	r3, [sp, #32]
 8025ec0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ec2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025ec6:	1423      	asrs	r3, r4, #16
 8025ec8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025ecc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025ed0:	f100 813e 	bmi.w	8026150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025ed4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025ed8:	455b      	cmp	r3, fp
 8025eda:	f280 8139 	bge.w	8026150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025ede:	2800      	cmp	r0, #0
 8025ee0:	f2c0 8136 	blt.w	8026150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025ee4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025ee8:	4558      	cmp	r0, fp
 8025eea:	f280 8131 	bge.w	8026150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025eee:	9a06      	ldr	r2, [sp, #24]
 8025ef0:	fb00 3302 	mla	r3, r0, r2, r3
 8025ef4:	0858      	lsrs	r0, r3, #1
 8025ef6:	07da      	lsls	r2, r3, #31
 8025ef8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025efc:	9a08      	ldr	r2, [sp, #32]
 8025efe:	bf54      	ite	pl
 8025f00:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025f04:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025f08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025f0c:	fa5f fc8c 	uxtb.w	ip, ip
 8025f10:	2a00      	cmp	r2, #0
 8025f12:	f000 80cb 	beq.w	80260ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025f16:	1c58      	adds	r0, r3, #1
 8025f18:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025f1c:	07c0      	lsls	r0, r0, #31
 8025f1e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025f22:	bf54      	ite	pl
 8025f24:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025f28:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025f2c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025f30:	fa5f fe8e 	uxtb.w	lr, lr
 8025f34:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025f38:	b1b9      	cbz	r1, 8025f6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025f3a:	4453      	add	r3, sl
 8025f3c:	0858      	lsrs	r0, r3, #1
 8025f3e:	07da      	lsls	r2, r3, #31
 8025f40:	5c38      	ldrb	r0, [r7, r0]
 8025f42:	bf54      	ite	pl
 8025f44:	f000 000f 	andpl.w	r0, r0, #15
 8025f48:	1100      	asrmi	r0, r0, #4
 8025f4a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025f4e:	b2c0      	uxtb	r0, r0
 8025f50:	900a      	str	r0, [sp, #40]	; 0x28
 8025f52:	1c58      	adds	r0, r3, #1
 8025f54:	0843      	lsrs	r3, r0, #1
 8025f56:	07c2      	lsls	r2, r0, #31
 8025f58:	5cfb      	ldrb	r3, [r7, r3]
 8025f5a:	bf54      	ite	pl
 8025f5c:	f003 030f 	andpl.w	r3, r3, #15
 8025f60:	111b      	asrmi	r3, r3, #4
 8025f62:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025f66:	b2db      	uxtb	r3, r3
 8025f68:	930e      	str	r3, [sp, #56]	; 0x38
 8025f6a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025f6e:	b289      	uxth	r1, r1
 8025f70:	fb02 f301 	mul.w	r3, r2, r1
 8025f74:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025f78:	0112      	lsls	r2, r2, #4
 8025f7a:	b289      	uxth	r1, r1
 8025f7c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025f80:	1a40      	subs	r0, r0, r1
 8025f82:	fa1f fe80 	uxth.w	lr, r0
 8025f86:	1ad2      	subs	r2, r2, r3
 8025f88:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025f8a:	b292      	uxth	r2, r2
 8025f8c:	4342      	muls	r2, r0
 8025f8e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025f92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025f94:	fb01 c102 	mla	r1, r1, r2, ip
 8025f98:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025f9a:	fb03 1302 	mla	r3, r3, r2, r1
 8025f9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025fa2:	2bff      	cmp	r3, #255	; 0xff
 8025fa4:	f040 8093 	bne.w	80260ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025fa8:	4bbe      	ldr	r3, [pc, #760]	; (80262a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025faa:	681a      	ldr	r2, [r3, #0]
 8025fac:	4bbe      	ldr	r3, [pc, #760]	; (80262a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025fae:	0951      	lsrs	r1, r2, #5
 8025fb0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025fb4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025fb8:	430b      	orrs	r3, r1
 8025fba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025fbe:	4313      	orrs	r3, r2
 8025fc0:	f8a8 3000 	strh.w	r3, [r8]
 8025fc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025fc6:	441c      	add	r4, r3
 8025fc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025fca:	441e      	add	r6, r3
 8025fcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025fce:	3b01      	subs	r3, #1
 8025fd0:	f108 0802 	add.w	r8, r8, #2
 8025fd4:	9309      	str	r3, [sp, #36]	; 0x24
 8025fd6:	e76c      	b.n	8025eb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025fd8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025fda:	441c      	add	r4, r3
 8025fdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025fde:	3d01      	subs	r5, #1
 8025fe0:	441e      	add	r6, r3
 8025fe2:	f109 0902 	add.w	r9, r9, #2
 8025fe6:	e744      	b.n	8025e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025fe8:	d021      	beq.n	802602e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025fea:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025fec:	1e6b      	subs	r3, r5, #1
 8025fee:	fb00 4003 	mla	r0, r0, r3, r4
 8025ff2:	1400      	asrs	r0, r0, #16
 8025ff4:	f53f af59 	bmi.w	8025eaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025ff8:	3901      	subs	r1, #1
 8025ffa:	4288      	cmp	r0, r1
 8025ffc:	f6bf af55 	bge.w	8025eaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026000:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026002:	fb01 6303 	mla	r3, r1, r3, r6
 8026006:	141b      	asrs	r3, r3, #16
 8026008:	f53f af4f 	bmi.w	8025eaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802600c:	3a01      	subs	r2, #1
 802600e:	4293      	cmp	r3, r2
 8026010:	f6bf af4b 	bge.w	8025eaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026014:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026018:	9308      	str	r3, [sp, #32]
 802601a:	46a8      	mov	r8, r5
 802601c:	46ce      	mov	lr, r9
 802601e:	f1b8 0f00 	cmp.w	r8, #0
 8026022:	f300 80b5 	bgt.w	8026190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026026:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802602a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802602e:	9b07      	ldr	r3, [sp, #28]
 8026030:	2b00      	cmp	r3, #0
 8026032:	f340 817d 	ble.w	8026330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026036:	ee30 0a04 	vadd.f32	s0, s0, s8
 802603a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802603e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026042:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026044:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026048:	ee31 1a05 	vadd.f32	s2, s2, s10
 802604c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026050:	eef0 6a62 	vmov.f32	s13, s5
 8026054:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026058:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802605c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026060:	ee16 4a90 	vmov	r4, s13
 8026064:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026068:	eef0 6a43 	vmov.f32	s13, s6
 802606c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026070:	ee12 2a90 	vmov	r2, s5
 8026074:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026078:	fb92 f3f3 	sdiv	r3, r2, r3
 802607c:	ee13 2a10 	vmov	r2, s6
 8026080:	931f      	str	r3, [sp, #124]	; 0x7c
 8026082:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026084:	fb92 f3f3 	sdiv	r3, r2, r3
 8026088:	9320      	str	r3, [sp, #128]	; 0x80
 802608a:	9b07      	ldr	r3, [sp, #28]
 802608c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802608e:	3b01      	subs	r3, #1
 8026090:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026094:	9307      	str	r3, [sp, #28]
 8026096:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026098:	ee16 6a90 	vmov	r6, s13
 802609c:	bf14      	ite	ne
 802609e:	461d      	movne	r5, r3
 80260a0:	4615      	moveq	r5, r2
 80260a2:	eeb0 3a67 	vmov.f32	s6, s15
 80260a6:	eef0 2a47 	vmov.f32	s5, s14
 80260aa:	e6d3      	b.n	8025e54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80260ac:	2900      	cmp	r1, #0
 80260ae:	f43f af5c 	beq.w	8025f6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80260b2:	eb0a 0003 	add.w	r0, sl, r3
 80260b6:	0843      	lsrs	r3, r0, #1
 80260b8:	07c0      	lsls	r0, r0, #31
 80260ba:	5cfb      	ldrb	r3, [r7, r3]
 80260bc:	bf54      	ite	pl
 80260be:	f003 030f 	andpl.w	r3, r3, #15
 80260c2:	111b      	asrmi	r3, r3, #4
 80260c4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80260c8:	b2db      	uxtb	r3, r3
 80260ca:	930a      	str	r3, [sp, #40]	; 0x28
 80260cc:	e74d      	b.n	8025f6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80260ce:	2b00      	cmp	r3, #0
 80260d0:	f43f af78 	beq.w	8025fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80260d4:	4a73      	ldr	r2, [pc, #460]	; (80262a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80260d6:	f8b8 c000 	ldrh.w	ip, [r8]
 80260da:	6810      	ldr	r0, [r2, #0]
 80260dc:	fa1f fe83 	uxth.w	lr, r3
 80260e0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80260e4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80260e8:	43db      	mvns	r3, r3
 80260ea:	b2db      	uxtb	r3, r3
 80260ec:	fb12 f20e 	smulbb	r2, r2, lr
 80260f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80260f4:	fb01 2103 	mla	r1, r1, r3, r2
 80260f8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80260fc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026100:	b2c0      	uxtb	r0, r0
 8026102:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026106:	fb1b fb0e 	smulbb	fp, fp, lr
 802610a:	b289      	uxth	r1, r1
 802610c:	fb10 fe0e 	smulbb	lr, r0, lr
 8026110:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026114:	fa5f fc8c 	uxtb.w	ip, ip
 8026118:	fb02 b203 	mla	r2, r2, r3, fp
 802611c:	1c48      	adds	r0, r1, #1
 802611e:	fb0c e303 	mla	r3, ip, r3, lr
 8026122:	b292      	uxth	r2, r2
 8026124:	b29b      	uxth	r3, r3
 8026126:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802612a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802612e:	f102 0b01 	add.w	fp, r2, #1
 8026132:	1c59      	adds	r1, r3, #1
 8026134:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026138:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802613c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026140:	0952      	lsrs	r2, r2, #5
 8026142:	4301      	orrs	r1, r0
 8026144:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026148:	4311      	orrs	r1, r2
 802614a:	f8a8 1000 	strh.w	r1, [r8]
 802614e:	e739      	b.n	8025fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026150:	f113 0b01 	adds.w	fp, r3, #1
 8026154:	f53f af36 	bmi.w	8025fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026158:	45dc      	cmp	ip, fp
 802615a:	f6ff af33 	blt.w	8025fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802615e:	f110 0b01 	adds.w	fp, r0, #1
 8026162:	f53f af2f 	bmi.w	8025fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026166:	45de      	cmp	lr, fp
 8026168:	f6ff af2c 	blt.w	8025fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802616c:	9a08      	ldr	r2, [sp, #32]
 802616e:	9302      	str	r3, [sp, #8]
 8026170:	fa0f f38e 	sxth.w	r3, lr
 8026174:	9301      	str	r3, [sp, #4]
 8026176:	fa0f f38c 	sxth.w	r3, ip
 802617a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802617e:	9105      	str	r1, [sp, #20]
 8026180:	9300      	str	r3, [sp, #0]
 8026182:	463a      	mov	r2, r7
 8026184:	4653      	mov	r3, sl
 8026186:	4641      	mov	r1, r8
 8026188:	9811      	ldr	r0, [sp, #68]	; 0x44
 802618a:	f7ff fd73 	bl	8025c74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802618e:	e719      	b.n	8025fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026190:	9906      	ldr	r1, [sp, #24]
 8026192:	1422      	asrs	r2, r4, #16
 8026194:	1433      	asrs	r3, r6, #16
 8026196:	fb01 2303 	mla	r3, r1, r3, r2
 802619a:	085a      	lsrs	r2, r3, #1
 802619c:	07d9      	lsls	r1, r3, #31
 802619e:	5cba      	ldrb	r2, [r7, r2]
 80261a0:	bf54      	ite	pl
 80261a2:	f002 020f 	andpl.w	r2, r2, #15
 80261a6:	1112      	asrmi	r2, r2, #4
 80261a8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80261ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80261b0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80261b4:	b2d2      	uxtb	r2, r2
 80261b6:	2800      	cmp	r0, #0
 80261b8:	d062      	beq.n	8026280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80261ba:	f103 0a01 	add.w	sl, r3, #1
 80261be:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80261c2:	f01a 0f01 	tst.w	sl, #1
 80261c6:	5c79      	ldrb	r1, [r7, r1]
 80261c8:	bf0c      	ite	eq
 80261ca:	f001 010f 	andeq.w	r1, r1, #15
 80261ce:	1109      	asrne	r1, r1, #4
 80261d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80261d4:	b2c9      	uxtb	r1, r1
 80261d6:	910f      	str	r1, [sp, #60]	; 0x3c
 80261d8:	f1bc 0f00 	cmp.w	ip, #0
 80261dc:	d019      	beq.n	8026212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80261de:	9908      	ldr	r1, [sp, #32]
 80261e0:	440b      	add	r3, r1
 80261e2:	0859      	lsrs	r1, r3, #1
 80261e4:	f013 0f01 	tst.w	r3, #1
 80261e8:	5c79      	ldrb	r1, [r7, r1]
 80261ea:	bf0c      	ite	eq
 80261ec:	f001 010f 	andeq.w	r1, r1, #15
 80261f0:	1109      	asrne	r1, r1, #4
 80261f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80261f6:	b2c9      	uxtb	r1, r1
 80261f8:	3301      	adds	r3, #1
 80261fa:	910b      	str	r1, [sp, #44]	; 0x2c
 80261fc:	0859      	lsrs	r1, r3, #1
 80261fe:	07db      	lsls	r3, r3, #31
 8026200:	5c79      	ldrb	r1, [r7, r1]
 8026202:	bf54      	ite	pl
 8026204:	f001 010f 	andpl.w	r1, r1, #15
 8026208:	1109      	asrmi	r1, r1, #4
 802620a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802620e:	b2c9      	uxtb	r1, r1
 8026210:	9110      	str	r1, [sp, #64]	; 0x40
 8026212:	b280      	uxth	r0, r0
 8026214:	fa1f fc8c 	uxth.w	ip, ip
 8026218:	fb00 f30c 	mul.w	r3, r0, ip
 802621c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026220:	0100      	lsls	r0, r0, #4
 8026222:	fa1f fc8c 	uxth.w	ip, ip
 8026226:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802622a:	eba1 010c 	sub.w	r1, r1, ip
 802622e:	fa1f fa81 	uxth.w	sl, r1
 8026232:	1ac0      	subs	r0, r0, r3
 8026234:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026236:	b280      	uxth	r0, r0
 8026238:	4348      	muls	r0, r1
 802623a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802623c:	fb02 020a 	mla	r2, r2, sl, r0
 8026240:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026244:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026246:	fb03 c302 	mla	r3, r3, r2, ip
 802624a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802624e:	2bff      	cmp	r3, #255	; 0xff
 8026250:	d12c      	bne.n	80262ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026252:	4b14      	ldr	r3, [pc, #80]	; (80262a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026254:	681a      	ldr	r2, [r3, #0]
 8026256:	4b14      	ldr	r3, [pc, #80]	; (80262a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026258:	0951      	lsrs	r1, r2, #5
 802625a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802625e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026262:	430b      	orrs	r3, r1
 8026264:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026268:	4313      	orrs	r3, r2
 802626a:	f8ae 3000 	strh.w	r3, [lr]
 802626e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026270:	441c      	add	r4, r3
 8026272:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026274:	f10e 0e02 	add.w	lr, lr, #2
 8026278:	441e      	add	r6, r3
 802627a:	f108 38ff 	add.w	r8, r8, #4294967295
 802627e:	e6ce      	b.n	802601e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026280:	f1bc 0f00 	cmp.w	ip, #0
 8026284:	d0c5      	beq.n	8026212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026286:	9908      	ldr	r1, [sp, #32]
 8026288:	440b      	add	r3, r1
 802628a:	0859      	lsrs	r1, r3, #1
 802628c:	07db      	lsls	r3, r3, #31
 802628e:	5c79      	ldrb	r1, [r7, r1]
 8026290:	bf54      	ite	pl
 8026292:	f001 010f 	andpl.w	r1, r1, #15
 8026296:	1109      	asrmi	r1, r1, #4
 8026298:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802629c:	b2c9      	uxtb	r1, r1
 802629e:	910b      	str	r1, [sp, #44]	; 0x2c
 80262a0:	e7b7      	b.n	8026212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80262a2:	bf00      	nop
 80262a4:	20012db4 	.word	0x20012db4
 80262a8:	fffff800 	.word	0xfffff800
 80262ac:	2b00      	cmp	r3, #0
 80262ae:	d0de      	beq.n	802626e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80262b0:	4a21      	ldr	r2, [pc, #132]	; (8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80262b2:	f8be c000 	ldrh.w	ip, [lr]
 80262b6:	6810      	ldr	r0, [r2, #0]
 80262b8:	fa1f fa83 	uxth.w	sl, r3
 80262bc:	ea4f 212c 	mov.w	r1, ip, asr #8
 80262c0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80262c4:	43db      	mvns	r3, r3
 80262c6:	b2db      	uxtb	r3, r3
 80262c8:	fb12 f20a 	smulbb	r2, r2, sl
 80262cc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80262d0:	fb01 2103 	mla	r1, r1, r3, r2
 80262d4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80262d8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80262dc:	b2c0      	uxtb	r0, r0
 80262de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80262e2:	fa5f fc8c 	uxtb.w	ip, ip
 80262e6:	fb10 f00a 	smulbb	r0, r0, sl
 80262ea:	fb0c 0003 	mla	r0, ip, r3, r0
 80262ee:	b289      	uxth	r1, r1
 80262f0:	fb1b fb0a 	smulbb	fp, fp, sl
 80262f4:	b280      	uxth	r0, r0
 80262f6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80262fa:	fb02 b203 	mla	r2, r2, r3, fp
 80262fe:	1c4b      	adds	r3, r1, #1
 8026300:	f100 0b01 	add.w	fp, r0, #1
 8026304:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026308:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802630c:	b292      	uxth	r2, r2
 802630e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026312:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026316:	ea4b 0101 	orr.w	r1, fp, r1
 802631a:	f102 0b01 	add.w	fp, r2, #1
 802631e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026322:	0952      	lsrs	r2, r2, #5
 8026324:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026328:	4311      	orrs	r1, r2
 802632a:	f8ae 1000 	strh.w	r1, [lr]
 802632e:	e79e      	b.n	802626e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026330:	b013      	add	sp, #76	; 0x4c
 8026332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026336:	bf00      	nop
 8026338:	20012db4 	.word	0x20012db4

0802633c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802633c:	b570      	push	{r4, r5, r6, lr}
 802633e:	1208      	asrs	r0, r1, #8
 8026340:	b29e      	uxth	r6, r3
 8026342:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026346:	1213      	asrs	r3, r2, #8
 8026348:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802634c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026350:	fb13 f305 	smulbb	r3, r3, r5
 8026354:	fb10 f006 	smulbb	r0, r0, r6
 8026358:	4418      	add	r0, r3
 802635a:	10cc      	asrs	r4, r1, #3
 802635c:	10d3      	asrs	r3, r2, #3
 802635e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026362:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026366:	fb13 f305 	smulbb	r3, r3, r5
 802636a:	fb14 f406 	smulbb	r4, r4, r6
 802636e:	00c9      	lsls	r1, r1, #3
 8026370:	00d2      	lsls	r2, r2, #3
 8026372:	441c      	add	r4, r3
 8026374:	b2d2      	uxtb	r2, r2
 8026376:	b2cb      	uxtb	r3, r1
 8026378:	fb12 f205 	smulbb	r2, r2, r5
 802637c:	b280      	uxth	r0, r0
 802637e:	fb13 f306 	smulbb	r3, r3, r6
 8026382:	4413      	add	r3, r2
 8026384:	1c42      	adds	r2, r0, #1
 8026386:	b29b      	uxth	r3, r3
 8026388:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802638c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026390:	1c58      	adds	r0, r3, #1
 8026392:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026396:	b2a4      	uxth	r4, r4
 8026398:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802639c:	4310      	orrs	r0, r2
 802639e:	1c62      	adds	r2, r4, #1
 80263a0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80263a4:	0964      	lsrs	r4, r4, #5
 80263a6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80263aa:	4320      	orrs	r0, r4
 80263ac:	bd70      	pop	{r4, r5, r6, pc}
	...

080263b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80263b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80263b4:	b08f      	sub	sp, #60	; 0x3c
 80263b6:	461c      	mov	r4, r3
 80263b8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80263bc:	9004      	str	r0, [sp, #16]
 80263be:	460d      	mov	r5, r1
 80263c0:	4616      	mov	r6, r2
 80263c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80263c4:	2f00      	cmp	r7, #0
 80263c6:	f000 80f6 	beq.w	80265b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80263ca:	6820      	ldr	r0, [r4, #0]
 80263cc:	6861      	ldr	r1, [r4, #4]
 80263ce:	aa0a      	add	r2, sp, #40	; 0x28
 80263d0:	c203      	stmia	r2!, {r0, r1}
 80263d2:	6818      	ldr	r0, [r3, #0]
 80263d4:	6859      	ldr	r1, [r3, #4]
 80263d6:	aa0c      	add	r2, sp, #48	; 0x30
 80263d8:	c203      	stmia	r2!, {r0, r1}
 80263da:	a80a      	add	r0, sp, #40	; 0x28
 80263dc:	f7ef fa9c 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80263e0:	4621      	mov	r1, r4
 80263e2:	a80c      	add	r0, sp, #48	; 0x30
 80263e4:	f7ef fadc 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80263e8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80263ec:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80263f0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80263f4:	f002 0301 	and.w	r3, r2, #1
 80263f8:	9306      	str	r3, [sp, #24]
 80263fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80263fe:	f003 0101 	and.w	r1, r3, #1
 8026402:	9105      	str	r1, [sp, #20]
 8026404:	9805      	ldr	r0, [sp, #20]
 8026406:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802640a:	4403      	add	r3, r0
 802640c:	fb01 2303 	mla	r3, r1, r3, r2
 8026410:	f04f 0802 	mov.w	r8, #2
 8026414:	fb93 f3f8 	sdiv	r3, r3, r8
 8026418:	441d      	add	r5, r3
 802641a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802641e:	441a      	add	r2, r3
 8026420:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026424:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026428:	4419      	add	r1, r3
 802642a:	4b64      	ldr	r3, [pc, #400]	; (80265bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802642c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026430:	6818      	ldr	r0, [r3, #0]
 8026432:	6803      	ldr	r3, [r0, #0]
 8026434:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026436:	4798      	blx	r3
 8026438:	4a61      	ldr	r2, [pc, #388]	; (80265c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802643a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802643e:	8813      	ldrh	r3, [r2, #0]
 8026440:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026444:	2fff      	cmp	r7, #255	; 0xff
 8026446:	fb03 a404 	mla	r4, r3, r4, sl
 802644a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802644e:	f106 0604 	add.w	r6, r6, #4
 8026452:	4611      	mov	r1, r2
 8026454:	fb03 fb0b 	mul.w	fp, r3, fp
 8026458:	d06b      	beq.n	8026532 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802645a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802645e:	9303      	str	r3, [sp, #12]
 8026460:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026464:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026468:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802646c:	9b07      	ldr	r3, [sp, #28]
 802646e:	42a3      	cmp	r3, r4
 8026470:	f240 809c 	bls.w	80265ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026474:	9b06      	ldr	r3, [sp, #24]
 8026476:	2b00      	cmp	r3, #0
 8026478:	d039      	beq.n	80264ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802647a:	782b      	ldrb	r3, [r5, #0]
 802647c:	8822      	ldrh	r2, [r4, #0]
 802647e:	9804      	ldr	r0, [sp, #16]
 8026480:	f003 030f 	and.w	r3, r3, #15
 8026484:	f105 0801 	add.w	r8, r5, #1
 8026488:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802648c:	9b03      	ldr	r3, [sp, #12]
 802648e:	9300      	str	r3, [sp, #0]
 8026490:	463b      	mov	r3, r7
 8026492:	f7ff ff53 	bl	802633c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026496:	f824 0b02 	strh.w	r0, [r4], #2
 802649a:	f109 3bff 	add.w	fp, r9, #4294967295
 802649e:	f1bb 0f01 	cmp.w	fp, #1
 80264a2:	46a2      	mov	sl, r4
 80264a4:	f104 0404 	add.w	r4, r4, #4
 80264a8:	dd24      	ble.n	80264f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80264aa:	f898 3000 	ldrb.w	r3, [r8]
 80264ae:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80264b2:	9804      	ldr	r0, [sp, #16]
 80264b4:	091b      	lsrs	r3, r3, #4
 80264b6:	f1ab 0b02 	sub.w	fp, fp, #2
 80264ba:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80264be:	9b03      	ldr	r3, [sp, #12]
 80264c0:	9300      	str	r3, [sp, #0]
 80264c2:	463b      	mov	r3, r7
 80264c4:	f7ff ff3a 	bl	802633c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80264c8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80264cc:	f818 3b01 	ldrb.w	r3, [r8], #1
 80264d0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80264d4:	9804      	ldr	r0, [sp, #16]
 80264d6:	f003 030f 	and.w	r3, r3, #15
 80264da:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80264de:	9b03      	ldr	r3, [sp, #12]
 80264e0:	9300      	str	r3, [sp, #0]
 80264e2:	463b      	mov	r3, r7
 80264e4:	f7ff ff2a 	bl	802633c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80264e8:	f824 0c02 	strh.w	r0, [r4, #-2]
 80264ec:	e7d7      	b.n	802649e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80264ee:	46a8      	mov	r8, r5
 80264f0:	46cb      	mov	fp, r9
 80264f2:	e7d4      	b.n	802649e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80264f4:	d10e      	bne.n	8026514 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80264f6:	f898 3000 	ldrb.w	r3, [r8]
 80264fa:	f8ba 2000 	ldrh.w	r2, [sl]
 80264fe:	9804      	ldr	r0, [sp, #16]
 8026500:	091b      	lsrs	r3, r3, #4
 8026502:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026506:	9b03      	ldr	r3, [sp, #12]
 8026508:	9300      	str	r3, [sp, #0]
 802650a:	463b      	mov	r3, r7
 802650c:	f7ff ff16 	bl	802633c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026510:	f82a 0b02 	strh.w	r0, [sl], #2
 8026514:	9b08      	ldr	r3, [sp, #32]
 8026516:	9a05      	ldr	r2, [sp, #20]
 8026518:	881c      	ldrh	r4, [r3, #0]
 802651a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802651e:	eba4 0409 	sub.w	r4, r4, r9
 8026522:	4413      	add	r3, r2
 8026524:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026528:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802652a:	fb93 f3f2 	sdiv	r3, r3, r2
 802652e:	441d      	add	r5, r3
 8026530:	e79c      	b.n	802646c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8026532:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026536:	45a3      	cmp	fp, r4
 8026538:	d938      	bls.n	80265ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802653a:	9b06      	ldr	r3, [sp, #24]
 802653c:	b1f3      	cbz	r3, 802657c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802653e:	782b      	ldrb	r3, [r5, #0]
 8026540:	f003 030f 	and.w	r3, r3, #15
 8026544:	1c6a      	adds	r2, r5, #1
 8026546:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802654a:	8023      	strh	r3, [r4, #0]
 802654c:	f109 30ff 	add.w	r0, r9, #4294967295
 8026550:	3402      	adds	r4, #2
 8026552:	2801      	cmp	r0, #1
 8026554:	4623      	mov	r3, r4
 8026556:	f104 0404 	add.w	r4, r4, #4
 802655a:	dd12      	ble.n	8026582 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802655c:	7813      	ldrb	r3, [r2, #0]
 802655e:	091b      	lsrs	r3, r3, #4
 8026560:	3802      	subs	r0, #2
 8026562:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026566:	f824 3c04 	strh.w	r3, [r4, #-4]
 802656a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802656e:	f003 030f 	and.w	r3, r3, #15
 8026572:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026576:	f824 3c02 	strh.w	r3, [r4, #-2]
 802657a:	e7ea      	b.n	8026552 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802657c:	462a      	mov	r2, r5
 802657e:	4648      	mov	r0, r9
 8026580:	e7e7      	b.n	8026552 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026582:	d106      	bne.n	8026592 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026584:	7812      	ldrb	r2, [r2, #0]
 8026586:	0912      	lsrs	r2, r2, #4
 8026588:	3302      	adds	r3, #2
 802658a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802658e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026592:	880c      	ldrh	r4, [r1, #0]
 8026594:	9a05      	ldr	r2, [sp, #20]
 8026596:	eba4 0409 	sub.w	r4, r4, r9
 802659a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802659e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80265a2:	4413      	add	r3, r2
 80265a4:	fb93 f3f8 	sdiv	r3, r3, r8
 80265a8:	441d      	add	r5, r3
 80265aa:	e7c4      	b.n	8026536 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80265ac:	4b03      	ldr	r3, [pc, #12]	; (80265bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80265ae:	6818      	ldr	r0, [r3, #0]
 80265b0:	6803      	ldr	r3, [r0, #0]
 80265b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80265b4:	4798      	blx	r3
 80265b6:	b00f      	add	sp, #60	; 0x3c
 80265b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80265bc:	20012da4 	.word	0x20012da4
 80265c0:	20012d9e 	.word	0x20012d9e

080265c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80265c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80265c6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80265ca:	2dff      	cmp	r5, #255	; 0xff
 80265cc:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80265d0:	d10c      	bne.n	80265ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80265d2:	2bff      	cmp	r3, #255	; 0xff
 80265d4:	d10a      	bne.n	80265ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80265d6:	4b25      	ldr	r3, [pc, #148]	; (802666c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80265d8:	0948      	lsrs	r0, r1, #5
 80265da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265de:	403b      	ands	r3, r7
 80265e0:	4318      	orrs	r0, r3
 80265e2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80265e6:	4308      	orrs	r0, r1
 80265e8:	b280      	uxth	r0, r0
 80265ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80265ec:	fb15 f503 	smulbb	r5, r5, r3
 80265f0:	b2ab      	uxth	r3, r5
 80265f2:	1c5d      	adds	r5, r3, #1
 80265f4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80265f8:	1214      	asrs	r4, r2, #8
 80265fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80265fe:	fa1f fc85 	uxth.w	ip, r5
 8026602:	10d6      	asrs	r6, r2, #3
 8026604:	00d0      	lsls	r0, r2, #3
 8026606:	43ed      	mvns	r5, r5
 8026608:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802660c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026610:	b2eb      	uxtb	r3, r5
 8026612:	b2c0      	uxtb	r0, r0
 8026614:	fb12 f20c 	smulbb	r2, r2, ip
 8026618:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802661c:	fb04 2403 	mla	r4, r4, r3, r2
 8026620:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026624:	b2c8      	uxtb	r0, r1
 8026626:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802662a:	b2fd      	uxtb	r5, r7
 802662c:	fb10 f00c 	smulbb	r0, r0, ip
 8026630:	b2a4      	uxth	r4, r4
 8026632:	fb02 0003 	mla	r0, r2, r3, r0
 8026636:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802663a:	fb15 f50c 	smulbb	r5, r5, ip
 802663e:	fb06 5503 	mla	r5, r6, r3, r5
 8026642:	b283      	uxth	r3, r0
 8026644:	1c60      	adds	r0, r4, #1
 8026646:	b2ad      	uxth	r5, r5
 8026648:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802664c:	1c58      	adds	r0, r3, #1
 802664e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026652:	1c6b      	adds	r3, r5, #1
 8026654:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026658:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802665c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026660:	096d      	lsrs	r5, r5, #5
 8026662:	4320      	orrs	r0, r4
 8026664:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026668:	4328      	orrs	r0, r5
 802666a:	e7be      	b.n	80265ea <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802666c:	00fff800 	.word	0x00fff800

08026670 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026674:	461c      	mov	r4, r3
 8026676:	b08d      	sub	sp, #52	; 0x34
 8026678:	460d      	mov	r5, r1
 802667a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802667c:	6861      	ldr	r1, [r4, #4]
 802667e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8026682:	4680      	mov	r8, r0
 8026684:	6820      	ldr	r0, [r4, #0]
 8026686:	4616      	mov	r6, r2
 8026688:	aa08      	add	r2, sp, #32
 802668a:	c203      	stmia	r2!, {r0, r1}
 802668c:	6818      	ldr	r0, [r3, #0]
 802668e:	6859      	ldr	r1, [r3, #4]
 8026690:	aa0a      	add	r2, sp, #40	; 0x28
 8026692:	c203      	stmia	r2!, {r0, r1}
 8026694:	a808      	add	r0, sp, #32
 8026696:	f7ef f93f 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802669a:	4621      	mov	r1, r4
 802669c:	a80a      	add	r0, sp, #40	; 0x28
 802669e:	f7ef f97f 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80266a2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80266a6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80266aa:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80266ae:	f002 0301 	and.w	r3, r2, #1
 80266b2:	9303      	str	r3, [sp, #12]
 80266b4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80266b8:	f003 0101 	and.w	r1, r3, #1
 80266bc:	9102      	str	r1, [sp, #8]
 80266be:	9802      	ldr	r0, [sp, #8]
 80266c0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80266c4:	4403      	add	r3, r0
 80266c6:	fb01 2303 	mla	r3, r1, r3, r2
 80266ca:	f04f 0a02 	mov.w	sl, #2
 80266ce:	fb93 f3fa 	sdiv	r3, r3, sl
 80266d2:	441d      	add	r5, r3
 80266d4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80266d8:	441a      	add	r2, r3
 80266da:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80266de:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80266e2:	4a3f      	ldr	r2, [pc, #252]	; (80267e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80266e4:	9205      	str	r2, [sp, #20]
 80266e6:	4419      	add	r1, r3
 80266e8:	6810      	ldr	r0, [r2, #0]
 80266ea:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80266ee:	6803      	ldr	r3, [r0, #0]
 80266f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80266f2:	4798      	blx	r3
 80266f4:	4b3b      	ldr	r3, [pc, #236]	; (80267e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80266f6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80266fa:	8819      	ldrh	r1, [r3, #0]
 80266fc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026700:	fb01 c404 	mla	r4, r1, r4, ip
 8026704:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026708:	434f      	muls	r7, r1
 802670a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802670e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026712:	3604      	adds	r6, #4
 8026714:	9204      	str	r2, [sp, #16]
 8026716:	9b04      	ldr	r3, [sp, #16]
 8026718:	429c      	cmp	r4, r3
 802671a:	d258      	bcs.n	80267ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802671c:	9b03      	ldr	r3, [sp, #12]
 802671e:	2b00      	cmp	r3, #0
 8026720:	d034      	beq.n	802678c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026722:	782b      	ldrb	r3, [r5, #0]
 8026724:	f003 030f 	and.w	r3, r3, #15
 8026728:	1c6f      	adds	r7, r5, #1
 802672a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802672e:	0e0b      	lsrs	r3, r1, #24
 8026730:	d006      	beq.n	8026740 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026732:	8822      	ldrh	r2, [r4, #0]
 8026734:	9300      	str	r3, [sp, #0]
 8026736:	4640      	mov	r0, r8
 8026738:	464b      	mov	r3, r9
 802673a:	f7ff ff43 	bl	80265c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802673e:	8020      	strh	r0, [r4, #0]
 8026740:	3402      	adds	r4, #2
 8026742:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026746:	f1ba 0f01 	cmp.w	sl, #1
 802674a:	dd22      	ble.n	8026792 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802674c:	783b      	ldrb	r3, [r7, #0]
 802674e:	091b      	lsrs	r3, r3, #4
 8026750:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026754:	0e0b      	lsrs	r3, r1, #24
 8026756:	d006      	beq.n	8026766 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026758:	8822      	ldrh	r2, [r4, #0]
 802675a:	9300      	str	r3, [sp, #0]
 802675c:	4640      	mov	r0, r8
 802675e:	464b      	mov	r3, r9
 8026760:	f7ff ff30 	bl	80265c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026764:	8020      	strh	r0, [r4, #0]
 8026766:	f817 3b01 	ldrb.w	r3, [r7], #1
 802676a:	f003 030f 	and.w	r3, r3, #15
 802676e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026772:	0e0b      	lsrs	r3, r1, #24
 8026774:	d006      	beq.n	8026784 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026776:	8862      	ldrh	r2, [r4, #2]
 8026778:	9300      	str	r3, [sp, #0]
 802677a:	4640      	mov	r0, r8
 802677c:	464b      	mov	r3, r9
 802677e:	f7ff ff21 	bl	80265c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026782:	8060      	strh	r0, [r4, #2]
 8026784:	3404      	adds	r4, #4
 8026786:	f1aa 0a02 	sub.w	sl, sl, #2
 802678a:	e7dc      	b.n	8026746 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802678c:	462f      	mov	r7, r5
 802678e:	46da      	mov	sl, fp
 8026790:	e7d9      	b.n	8026746 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026792:	d10d      	bne.n	80267b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026794:	783b      	ldrb	r3, [r7, #0]
 8026796:	091b      	lsrs	r3, r3, #4
 8026798:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802679c:	0e0b      	lsrs	r3, r1, #24
 802679e:	d006      	beq.n	80267ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80267a0:	8822      	ldrh	r2, [r4, #0]
 80267a2:	9300      	str	r3, [sp, #0]
 80267a4:	4640      	mov	r0, r8
 80267a6:	464b      	mov	r3, r9
 80267a8:	f7ff ff0c 	bl	80265c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80267ac:	8020      	strh	r0, [r4, #0]
 80267ae:	3402      	adds	r4, #2
 80267b0:	9b06      	ldr	r3, [sp, #24]
 80267b2:	9a02      	ldr	r2, [sp, #8]
 80267b4:	881b      	ldrh	r3, [r3, #0]
 80267b6:	eba3 030b 	sub.w	r3, r3, fp
 80267ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80267be:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80267c2:	4413      	add	r3, r2
 80267c4:	9a07      	ldr	r2, [sp, #28]
 80267c6:	fb93 f3f2 	sdiv	r3, r3, r2
 80267ca:	441d      	add	r5, r3
 80267cc:	e7a3      	b.n	8026716 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80267ce:	9b05      	ldr	r3, [sp, #20]
 80267d0:	6818      	ldr	r0, [r3, #0]
 80267d2:	6803      	ldr	r3, [r0, #0]
 80267d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80267d6:	4798      	blx	r3
 80267d8:	b00d      	add	sp, #52	; 0x34
 80267da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80267de:	bf00      	nop
 80267e0:	20012da4 	.word	0x20012da4
 80267e4:	20012d9e 	.word	0x20012d9e

080267e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80267e8:	b570      	push	{r4, r5, r6, lr}
 80267ea:	1214      	asrs	r4, r2, #8
 80267ec:	788d      	ldrb	r5, [r1, #2]
 80267ee:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80267f2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80267f6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80267fa:	fb15 f503 	smulbb	r5, r5, r3
 80267fe:	fb04 5506 	mla	r5, r4, r6, r5
 8026802:	10d0      	asrs	r0, r2, #3
 8026804:	784c      	ldrb	r4, [r1, #1]
 8026806:	7809      	ldrb	r1, [r1, #0]
 8026808:	00d2      	lsls	r2, r2, #3
 802680a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802680e:	b2d2      	uxtb	r2, r2
 8026810:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026814:	fb14 f403 	smulbb	r4, r4, r3
 8026818:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802681c:	fb11 f303 	smulbb	r3, r1, r3
 8026820:	fb00 4406 	mla	r4, r0, r6, r4
 8026824:	fb02 3306 	mla	r3, r2, r6, r3
 8026828:	b2ad      	uxth	r5, r5
 802682a:	b29b      	uxth	r3, r3
 802682c:	b2a4      	uxth	r4, r4
 802682e:	1c68      	adds	r0, r5, #1
 8026830:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026834:	1c62      	adds	r2, r4, #1
 8026836:	1c58      	adds	r0, r3, #1
 8026838:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802683c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026840:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026844:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026848:	0964      	lsrs	r4, r4, #5
 802684a:	4328      	orrs	r0, r5
 802684c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026850:	4320      	orrs	r0, r4
 8026852:	bd70      	pop	{r4, r5, r6, pc}

08026854 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026858:	b08f      	sub	sp, #60	; 0x3c
 802685a:	461c      	mov	r4, r3
 802685c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026860:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026862:	4682      	mov	sl, r0
 8026864:	460e      	mov	r6, r1
 8026866:	4615      	mov	r5, r2
 8026868:	2f00      	cmp	r7, #0
 802686a:	f000 8142 	beq.w	8026af2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802686e:	6820      	ldr	r0, [r4, #0]
 8026870:	6861      	ldr	r1, [r4, #4]
 8026872:	aa0a      	add	r2, sp, #40	; 0x28
 8026874:	c203      	stmia	r2!, {r0, r1}
 8026876:	6818      	ldr	r0, [r3, #0]
 8026878:	6859      	ldr	r1, [r3, #4]
 802687a:	aa0c      	add	r2, sp, #48	; 0x30
 802687c:	c203      	stmia	r2!, {r0, r1}
 802687e:	a80a      	add	r0, sp, #40	; 0x28
 8026880:	f7ef f84a 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026884:	4621      	mov	r1, r4
 8026886:	a80c      	add	r0, sp, #48	; 0x30
 8026888:	f7ef f88a 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802688c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026890:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026894:	f002 0301 	and.w	r3, r2, #1
 8026898:	9306      	str	r3, [sp, #24]
 802689a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802689e:	f003 0101 	and.w	r1, r3, #1
 80268a2:	9105      	str	r1, [sp, #20]
 80268a4:	9805      	ldr	r0, [sp, #20]
 80268a6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80268aa:	4403      	add	r3, r0
 80268ac:	fb01 2303 	mla	r3, r1, r3, r2
 80268b0:	f04f 0802 	mov.w	r8, #2
 80268b4:	fb93 f3f8 	sdiv	r3, r3, r8
 80268b8:	441e      	add	r6, r3
 80268ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80268be:	441a      	add	r2, r3
 80268c0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80268c4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80268c8:	4419      	add	r1, r3
 80268ca:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80268ce:	9303      	str	r3, [sp, #12]
 80268d0:	4b89      	ldr	r3, [pc, #548]	; (8026af8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80268d2:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80268d6:	6818      	ldr	r0, [r3, #0]
 80268d8:	6803      	ldr	r3, [r0, #0]
 80268da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80268dc:	4798      	blx	r3
 80268de:	4a87      	ldr	r2, [pc, #540]	; (8026afc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80268e0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80268e4:	8813      	ldrh	r3, [r2, #0]
 80268e6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80268ea:	2fff      	cmp	r7, #255	; 0xff
 80268ec:	fb03 9404 	mla	r4, r3, r4, r9
 80268f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80268f4:	f105 0504 	add.w	r5, r5, #4
 80268f8:	4694      	mov	ip, r2
 80268fa:	fb03 f30b 	mul.w	r3, r3, fp
 80268fe:	d071      	beq.n	80269e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026900:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026904:	43f9      	mvns	r1, r7
 8026906:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802690a:	b2c9      	uxtb	r1, r1
 802690c:	9104      	str	r1, [sp, #16]
 802690e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026912:	9b07      	ldr	r3, [sp, #28]
 8026914:	42a3      	cmp	r3, r4
 8026916:	f240 80e7 	bls.w	8026ae8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802691a:	9b06      	ldr	r3, [sp, #24]
 802691c:	2b00      	cmp	r3, #0
 802691e:	d03d      	beq.n	802699c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026920:	7831      	ldrb	r1, [r6, #0]
 8026922:	9b04      	ldr	r3, [sp, #16]
 8026924:	8822      	ldrh	r2, [r4, #0]
 8026926:	9300      	str	r3, [sp, #0]
 8026928:	f001 010f 	and.w	r1, r1, #15
 802692c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026930:	463b      	mov	r3, r7
 8026932:	4429      	add	r1, r5
 8026934:	4650      	mov	r0, sl
 8026936:	f7ff ff57 	bl	80267e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802693a:	9b03      	ldr	r3, [sp, #12]
 802693c:	f824 0b02 	strh.w	r0, [r4], #2
 8026940:	f106 0801 	add.w	r8, r6, #1
 8026944:	f103 3bff 	add.w	fp, r3, #4294967295
 8026948:	f1bb 0f01 	cmp.w	fp, #1
 802694c:	46a1      	mov	r9, r4
 802694e:	f104 0404 	add.w	r4, r4, #4
 8026952:	dd27      	ble.n	80269a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026954:	f898 1000 	ldrb.w	r1, [r8]
 8026958:	9b04      	ldr	r3, [sp, #16]
 802695a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802695e:	9300      	str	r3, [sp, #0]
 8026960:	0909      	lsrs	r1, r1, #4
 8026962:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026966:	463b      	mov	r3, r7
 8026968:	4429      	add	r1, r5
 802696a:	4650      	mov	r0, sl
 802696c:	f7ff ff3c 	bl	80267e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026970:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026974:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026978:	9b04      	ldr	r3, [sp, #16]
 802697a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802697e:	9300      	str	r3, [sp, #0]
 8026980:	f001 010f 	and.w	r1, r1, #15
 8026984:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026988:	463b      	mov	r3, r7
 802698a:	4429      	add	r1, r5
 802698c:	4650      	mov	r0, sl
 802698e:	f7ff ff2b 	bl	80267e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026992:	f1ab 0b02 	sub.w	fp, fp, #2
 8026996:	f824 0c02 	strh.w	r0, [r4, #-2]
 802699a:	e7d5      	b.n	8026948 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802699c:	46b0      	mov	r8, r6
 802699e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80269a2:	e7d1      	b.n	8026948 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80269a4:	d10f      	bne.n	80269c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80269a6:	f898 1000 	ldrb.w	r1, [r8]
 80269aa:	9b04      	ldr	r3, [sp, #16]
 80269ac:	f8b9 2000 	ldrh.w	r2, [r9]
 80269b0:	9300      	str	r3, [sp, #0]
 80269b2:	0909      	lsrs	r1, r1, #4
 80269b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80269b8:	463b      	mov	r3, r7
 80269ba:	4429      	add	r1, r5
 80269bc:	4650      	mov	r0, sl
 80269be:	f7ff ff13 	bl	80267e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80269c2:	f829 0b02 	strh.w	r0, [r9], #2
 80269c6:	9b08      	ldr	r3, [sp, #32]
 80269c8:	9a05      	ldr	r2, [sp, #20]
 80269ca:	881c      	ldrh	r4, [r3, #0]
 80269cc:	9b03      	ldr	r3, [sp, #12]
 80269ce:	1ae4      	subs	r4, r4, r3
 80269d0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80269d4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80269d8:	4413      	add	r3, r2
 80269da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80269dc:	fb93 f3f2 	sdiv	r3, r3, r2
 80269e0:	441e      	add	r6, r3
 80269e2:	e796      	b.n	8026912 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80269e4:	4f46      	ldr	r7, [pc, #280]	; (8026b00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80269e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80269ea:	42a3      	cmp	r3, r4
 80269ec:	d97c      	bls.n	8026ae8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80269ee:	9a06      	ldr	r2, [sp, #24]
 80269f0:	2a00      	cmp	r2, #0
 80269f2:	d054      	beq.n	8026a9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80269f4:	7830      	ldrb	r0, [r6, #0]
 80269f6:	f000 000f 	and.w	r0, r0, #15
 80269fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80269fe:	eb05 0e00 	add.w	lr, r5, r0
 8026a02:	5c28      	ldrb	r0, [r5, r0]
 8026a04:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026a08:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026a0c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026a10:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026a14:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026a18:	ea42 020e 	orr.w	r2, r2, lr
 8026a1c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026a20:	f824 2b02 	strh.w	r2, [r4], #2
 8026a24:	9a03      	ldr	r2, [sp, #12]
 8026a26:	1c71      	adds	r1, r6, #1
 8026a28:	f102 3eff 	add.w	lr, r2, #4294967295
 8026a2c:	f1be 0f01 	cmp.w	lr, #1
 8026a30:	4620      	mov	r0, r4
 8026a32:	f104 0404 	add.w	r4, r4, #4
 8026a36:	dd36      	ble.n	8026aa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026a38:	7808      	ldrb	r0, [r1, #0]
 8026a3a:	0900      	lsrs	r0, r0, #4
 8026a3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026a40:	eb05 0a00 	add.w	sl, r5, r0
 8026a44:	f1ae 0e02 	sub.w	lr, lr, #2
 8026a48:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026a4c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026a50:	00d2      	lsls	r2, r2, #3
 8026a52:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026a56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026a5a:	ea49 0202 	orr.w	r2, r9, r2
 8026a5e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026a62:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026a66:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026a6a:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026a6e:	f000 000f 	and.w	r0, r0, #15
 8026a72:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026a76:	eb05 0a00 	add.w	sl, r5, r0
 8026a7a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026a7e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026a82:	00d2      	lsls	r2, r2, #3
 8026a84:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026a88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026a8c:	ea49 0202 	orr.w	r2, r9, r2
 8026a90:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026a94:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026a98:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026a9c:	e7c6      	b.n	8026a2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026a9e:	4631      	mov	r1, r6
 8026aa0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026aa4:	e7c2      	b.n	8026a2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026aa6:	d111      	bne.n	8026acc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026aa8:	7809      	ldrb	r1, [r1, #0]
 8026aaa:	0909      	lsrs	r1, r1, #4
 8026aac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026ab0:	186c      	adds	r4, r5, r1
 8026ab2:	5c69      	ldrb	r1, [r5, r1]
 8026ab4:	78a2      	ldrb	r2, [r4, #2]
 8026ab6:	7864      	ldrb	r4, [r4, #1]
 8026ab8:	00e4      	lsls	r4, r4, #3
 8026aba:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026abe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026ac2:	4322      	orrs	r2, r4
 8026ac4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026ac8:	f820 2b02 	strh.w	r2, [r0], #2
 8026acc:	9a03      	ldr	r2, [sp, #12]
 8026ace:	f8bc 4000 	ldrh.w	r4, [ip]
 8026ad2:	9905      	ldr	r1, [sp, #20]
 8026ad4:	1aa4      	subs	r4, r4, r2
 8026ad6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026ada:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026ade:	440a      	add	r2, r1
 8026ae0:	fb92 f2f8 	sdiv	r2, r2, r8
 8026ae4:	4416      	add	r6, r2
 8026ae6:	e780      	b.n	80269ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026ae8:	4b03      	ldr	r3, [pc, #12]	; (8026af8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026aea:	6818      	ldr	r0, [r3, #0]
 8026aec:	6803      	ldr	r3, [r0, #0]
 8026aee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026af0:	4798      	blx	r3
 8026af2:	b00f      	add	sp, #60	; 0x3c
 8026af4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026af8:	20012da4 	.word	0x20012da4
 8026afc:	20012d9e 	.word	0x20012d9e
 8026b00:	fffff800 	.word	0xfffff800

08026b04 <CRC_Lock>:
 8026b04:	b530      	push	{r4, r5, lr}
 8026b06:	4a20      	ldr	r2, [pc, #128]	; (8026b88 <CRC_Lock+0x84>)
 8026b08:	6813      	ldr	r3, [r2, #0]
 8026b0a:	f023 0301 	bic.w	r3, r3, #1
 8026b0e:	6013      	str	r3, [r2, #0]
 8026b10:	4b1e      	ldr	r3, [pc, #120]	; (8026b8c <CRC_Lock+0x88>)
 8026b12:	681a      	ldr	r2, [r3, #0]
 8026b14:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026b18:	4022      	ands	r2, r4
 8026b1a:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026b1e:	42aa      	cmp	r2, r5
 8026b20:	d005      	beq.n	8026b2e <CRC_Lock+0x2a>
 8026b22:	681b      	ldr	r3, [r3, #0]
 8026b24:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026b28:	4023      	ands	r3, r4
 8026b2a:	4293      	cmp	r3, r2
 8026b2c:	d124      	bne.n	8026b78 <CRC_Lock+0x74>
 8026b2e:	4b18      	ldr	r3, [pc, #96]	; (8026b90 <CRC_Lock+0x8c>)
 8026b30:	681b      	ldr	r3, [r3, #0]
 8026b32:	bb0b      	cbnz	r3, 8026b78 <CRC_Lock+0x74>
 8026b34:	4b17      	ldr	r3, [pc, #92]	; (8026b94 <CRC_Lock+0x90>)
 8026b36:	681a      	ldr	r2, [r3, #0]
 8026b38:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026b3c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026b40:	d00d      	beq.n	8026b5e <CRC_Lock+0x5a>
 8026b42:	681a      	ldr	r2, [r3, #0]
 8026b44:	f240 4483 	movw	r4, #1155	; 0x483
 8026b48:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026b4c:	42a2      	cmp	r2, r4
 8026b4e:	d006      	beq.n	8026b5e <CRC_Lock+0x5a>
 8026b50:	681b      	ldr	r3, [r3, #0]
 8026b52:	f240 4285 	movw	r2, #1157	; 0x485
 8026b56:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026b5a:	4293      	cmp	r3, r2
 8026b5c:	d10c      	bne.n	8026b78 <CRC_Lock+0x74>
 8026b5e:	4b0e      	ldr	r3, [pc, #56]	; (8026b98 <CRC_Lock+0x94>)
 8026b60:	2201      	movs	r2, #1
 8026b62:	601a      	str	r2, [r3, #0]
 8026b64:	681a      	ldr	r2, [r3, #0]
 8026b66:	2a00      	cmp	r2, #0
 8026b68:	d1fc      	bne.n	8026b64 <CRC_Lock+0x60>
 8026b6a:	4b0c      	ldr	r3, [pc, #48]	; (8026b9c <CRC_Lock+0x98>)
 8026b6c:	6018      	str	r0, [r3, #0]
 8026b6e:	6818      	ldr	r0, [r3, #0]
 8026b70:	1a43      	subs	r3, r0, r1
 8026b72:	4258      	negs	r0, r3
 8026b74:	4158      	adcs	r0, r3
 8026b76:	bd30      	pop	{r4, r5, pc}
 8026b78:	4b09      	ldr	r3, [pc, #36]	; (8026ba0 <CRC_Lock+0x9c>)
 8026b7a:	2201      	movs	r2, #1
 8026b7c:	601a      	str	r2, [r3, #0]
 8026b7e:	681a      	ldr	r2, [r3, #0]
 8026b80:	2a00      	cmp	r2, #0
 8026b82:	d1fc      	bne.n	8026b7e <CRC_Lock+0x7a>
 8026b84:	4b07      	ldr	r3, [pc, #28]	; (8026ba4 <CRC_Lock+0xa0>)
 8026b86:	e7f1      	b.n	8026b6c <CRC_Lock+0x68>
 8026b88:	e0002000 	.word	0xe0002000
 8026b8c:	e000ed00 	.word	0xe000ed00
 8026b90:	e0042000 	.word	0xe0042000
 8026b94:	5c001000 	.word	0x5c001000
 8026b98:	58024c08 	.word	0x58024c08
 8026b9c:	58024c00 	.word	0x58024c00
 8026ba0:	40023008 	.word	0x40023008
 8026ba4:	40023000 	.word	0x40023000

08026ba8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026ba8:	6101      	str	r1, [r0, #16]
 8026baa:	4770      	bx	lr

08026bac <_ZN8touchgfx8Gestures4tickEv>:
 8026bac:	7b83      	ldrb	r3, [r0, #14]
 8026bae:	b14b      	cbz	r3, 8026bc4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026bb0:	8903      	ldrh	r3, [r0, #8]
 8026bb2:	3301      	adds	r3, #1
 8026bb4:	b29b      	uxth	r3, r3
 8026bb6:	2b07      	cmp	r3, #7
 8026bb8:	8103      	strh	r3, [r0, #8]
 8026bba:	bf81      	itttt	hi
 8026bbc:	2300      	movhi	r3, #0
 8026bbe:	8143      	strhhi	r3, [r0, #10]
 8026bc0:	8183      	strhhi	r3, [r0, #12]
 8026bc2:	7383      	strbhi	r3, [r0, #14]
 8026bc4:	4770      	bx	lr
	...

08026bc8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026bc8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026bcc:	4698      	mov	r8, r3
 8026bce:	8883      	ldrh	r3, [r0, #4]
 8026bd0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026bd4:	eba8 0303 	sub.w	r3, r8, r3
 8026bd8:	b21b      	sxth	r3, r3
 8026bda:	4604      	mov	r4, r0
 8026bdc:	2b00      	cmp	r3, #0
 8026bde:	4617      	mov	r7, r2
 8026be0:	4a18      	ldr	r2, [pc, #96]	; (8026c44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026be2:	9200      	str	r2, [sp, #0]
 8026be4:	bfb8      	it	lt
 8026be6:	425b      	neglt	r3, r3
 8026be8:	8aa2      	ldrh	r2, [r4, #20]
 8026bea:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026bee:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026bf2:	b21b      	sxth	r3, r3
 8026bf4:	460e      	mov	r6, r1
 8026bf6:	4293      	cmp	r3, r2
 8026bf8:	88c1      	ldrh	r1, [r0, #6]
 8026bfa:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026bfe:	f04f 0000 	mov.w	r0, #0
 8026c02:	f88d 0004 	strb.w	r0, [sp, #4]
 8026c06:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026c0a:	dc07      	bgt.n	8026c1c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026c0c:	1a69      	subs	r1, r5, r1
 8026c0e:	b209      	sxth	r1, r1
 8026c10:	2900      	cmp	r1, #0
 8026c12:	bfb8      	it	lt
 8026c14:	4249      	neglt	r1, r1
 8026c16:	b209      	sxth	r1, r1
 8026c18:	428a      	cmp	r2, r1
 8026c1a:	da10      	bge.n	8026c3e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026c1c:	6920      	ldr	r0, [r4, #16]
 8026c1e:	6803      	ldr	r3, [r0, #0]
 8026c20:	4669      	mov	r1, sp
 8026c22:	685b      	ldr	r3, [r3, #4]
 8026c24:	4798      	blx	r3
 8026c26:	eba8 0606 	sub.w	r6, r8, r6
 8026c2a:	2300      	movs	r3, #0
 8026c2c:	1bef      	subs	r7, r5, r7
 8026c2e:	2001      	movs	r0, #1
 8026c30:	8123      	strh	r3, [r4, #8]
 8026c32:	8166      	strh	r6, [r4, #10]
 8026c34:	81a7      	strh	r7, [r4, #12]
 8026c36:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026c3a:	80e5      	strh	r5, [r4, #6]
 8026c3c:	73a0      	strb	r0, [r4, #14]
 8026c3e:	b004      	add	sp, #16
 8026c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026c44:	0802f5c8 	.word	0x0802f5c8

08026c48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026c48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026c4a:	461e      	mov	r6, r3
 8026c4c:	1e4b      	subs	r3, r1, #1
 8026c4e:	2b01      	cmp	r3, #1
 8026c50:	b085      	sub	sp, #20
 8026c52:	4604      	mov	r4, r0
 8026c54:	460d      	mov	r5, r1
 8026c56:	4617      	mov	r7, r2
 8026c58:	d84b      	bhi.n	8026cf2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026c5a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026c5e:	1cd3      	adds	r3, r2, #3
 8026c60:	b29b      	uxth	r3, r3
 8026c62:	2b06      	cmp	r3, #6
 8026c64:	d916      	bls.n	8026c94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026c66:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026d08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026c6a:	f8cd c004 	str.w	ip, [sp, #4]
 8026c6e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026c72:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026c76:	6900      	ldr	r0, [r0, #16]
 8026c78:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026c7c:	f04f 0c00 	mov.w	ip, #0
 8026c80:	f88d c008 	strb.w	ip, [sp, #8]
 8026c84:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026c88:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026c8c:	6803      	ldr	r3, [r0, #0]
 8026c8e:	a901      	add	r1, sp, #4
 8026c90:	689b      	ldr	r3, [r3, #8]
 8026c92:	4798      	blx	r3
 8026c94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026c98:	1cd3      	adds	r3, r2, #3
 8026c9a:	b29b      	uxth	r3, r3
 8026c9c:	2b06      	cmp	r3, #6
 8026c9e:	d916      	bls.n	8026cce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026ca0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026d08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026ca4:	f8cd c004 	str.w	ip, [sp, #4]
 8026ca8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026cac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026cb0:	6920      	ldr	r0, [r4, #16]
 8026cb2:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026cb6:	f04f 0c01 	mov.w	ip, #1
 8026cba:	f88d c008 	strb.w	ip, [sp, #8]
 8026cbe:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026cc2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026cc6:	6803      	ldr	r3, [r0, #0]
 8026cc8:	a901      	add	r1, sp, #4
 8026cca:	689b      	ldr	r3, [r3, #8]
 8026ccc:	4798      	blx	r3
 8026cce:	4b0d      	ldr	r3, [pc, #52]	; (8026d04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026cd0:	9301      	str	r3, [sp, #4]
 8026cd2:	6920      	ldr	r0, [r4, #16]
 8026cd4:	f88d 5008 	strb.w	r5, [sp, #8]
 8026cd8:	2300      	movs	r3, #0
 8026cda:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026cde:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026ce2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026ce6:	6803      	ldr	r3, [r0, #0]
 8026ce8:	a901      	add	r1, sp, #4
 8026cea:	681b      	ldr	r3, [r3, #0]
 8026cec:	4798      	blx	r3
 8026cee:	b005      	add	sp, #20
 8026cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026cf2:	2900      	cmp	r1, #0
 8026cf4:	d1eb      	bne.n	8026cce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026cf6:	80a2      	strh	r2, [r4, #4]
 8026cf8:	80c6      	strh	r6, [r0, #6]
 8026cfa:	60a1      	str	r1, [r4, #8]
 8026cfc:	81a1      	strh	r1, [r4, #12]
 8026cfe:	73a1      	strb	r1, [r4, #14]
 8026d00:	e7e5      	b.n	8026cce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026d02:	bf00      	nop
 8026d04:	0802f5b4 	.word	0x0802f5b4
 8026d08:	0802f5dc 	.word	0x0802f5dc

08026d0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026d0c:	10c9      	asrs	r1, r1, #3
 8026d0e:	2900      	cmp	r1, #0
 8026d10:	bfb8      	it	lt
 8026d12:	4249      	neglt	r1, r1
 8026d14:	2801      	cmp	r0, #1
 8026d16:	d108      	bne.n	8026d2a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026d18:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026d1c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026d20:	4601      	mov	r1, r0
 8026d22:	dd02      	ble.n	8026d2a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026d24:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026d28:	4770      	bx	lr
 8026d2a:	29ff      	cmp	r1, #255	; 0xff
 8026d2c:	bfa8      	it	ge
 8026d2e:	21ff      	movge	r1, #255	; 0xff
 8026d30:	4608      	mov	r0, r1
 8026d32:	4770      	bx	lr

08026d34 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026d34:	b410      	push	{r4}
 8026d36:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026d3a:	429c      	cmp	r4, r3
 8026d3c:	d803      	bhi.n	8026d46 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026d3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026d42:	f7ed b8ef 	b.w	8013f24 <_ZN8touchgfx7Outline6lineToEii>
 8026d46:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026d4a:	4770      	bx	lr

08026d4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d50:	b08b      	sub	sp, #44	; 0x2c
 8026d52:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026d56:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026d5a:	9308      	str	r3, [sp, #32]
 8026d5c:	4606      	mov	r6, r0
 8026d5e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026d62:	9309      	str	r3, [sp, #36]	; 0x24
 8026d64:	468a      	mov	sl, r1
 8026d66:	f7ed fa4a 	bl	80141fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026d6a:	68b5      	ldr	r5, [r6, #8]
 8026d6c:	4604      	mov	r4, r0
 8026d6e:	2d00      	cmp	r5, #0
 8026d70:	d044      	beq.n	8026dfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026d72:	6873      	ldr	r3, [r6, #4]
 8026d74:	42ab      	cmp	r3, r5
 8026d76:	d33d      	bcc.n	8026df4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026d78:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026d7c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026d80:	eb02 0b03 	add.w	fp, r2, r3
 8026d84:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026d88:	fb02 1203 	mla	r2, r2, r3, r1
 8026d8c:	9205      	str	r2, [sp, #20]
 8026d8e:	1e6a      	subs	r2, r5, #1
 8026d90:	9204      	str	r2, [sp, #16]
 8026d92:	f04f 0800 	mov.w	r8, #0
 8026d96:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026d9a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026d9e:	454b      	cmp	r3, r9
 8026da0:	463a      	mov	r2, r7
 8026da2:	d008      	beq.n	8026db6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026da4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026da8:	eb03 0b09 	add.w	fp, r3, r9
 8026dac:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026db0:	fb03 1309 	mla	r3, r3, r9, r1
 8026db4:	9305      	str	r3, [sp, #20]
 8026db6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026dba:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026dbe:	4498      	add	r8, r3
 8026dc0:	9b04      	ldr	r3, [sp, #16]
 8026dc2:	3b01      	subs	r3, #1
 8026dc4:	9304      	str	r3, [sp, #16]
 8026dc6:	9b04      	ldr	r3, [sp, #16]
 8026dc8:	3301      	adds	r3, #1
 8026dca:	d015      	beq.n	8026df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026dcc:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026dd0:	42bb      	cmp	r3, r7
 8026dd2:	d117      	bne.n	8026e04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026dd4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026dd8:	9b04      	ldr	r3, [sp, #16]
 8026dda:	4548      	cmp	r0, r9
 8026ddc:	f103 33ff 	add.w	r3, r3, #4294967295
 8026de0:	d17f      	bne.n	8026ee2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026de2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026de6:	4401      	add	r1, r0
 8026de8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026dec:	4480      	add	r8, r0
 8026dee:	e7e9      	b.n	8026dc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026df0:	461f      	mov	r7, r3
 8026df2:	e044      	b.n	8026e7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026df4:	2000      	movs	r0, #0
 8026df6:	e002      	b.n	8026dfe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026df8:	2900      	cmp	r1, #0
 8026dfa:	d16f      	bne.n	8026edc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026dfc:	2001      	movs	r0, #1
 8026dfe:	b00b      	add	sp, #44	; 0x2c
 8026e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e04:	2900      	cmp	r1, #0
 8026e06:	d030      	beq.n	8026e6a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026e08:	2f00      	cmp	r7, #0
 8026e0a:	db29      	blt.n	8026e60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026e0c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026e10:	42bb      	cmp	r3, r7
 8026e12:	dd25      	ble.n	8026e60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026e14:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026e18:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026e1c:	f7ff ff76 	bl	8026d0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026e20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026e22:	fb10 f003 	smulbb	r0, r0, r3
 8026e26:	b280      	uxth	r0, r0
 8026e28:	1c41      	adds	r1, r0, #1
 8026e2a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026e2e:	1209      	asrs	r1, r1, #8
 8026e30:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026e34:	d014      	beq.n	8026e60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026e36:	9808      	ldr	r0, [sp, #32]
 8026e38:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026e3a:	b2c9      	uxtb	r1, r1
 8026e3c:	b2ba      	uxth	r2, r7
 8026e3e:	9102      	str	r1, [sp, #8]
 8026e40:	2101      	movs	r1, #1
 8026e42:	4413      	add	r3, r2
 8026e44:	9101      	str	r1, [sp, #4]
 8026e46:	4402      	add	r2, r0
 8026e48:	fa0f f18b 	sxth.w	r1, fp
 8026e4c:	f8da 0000 	ldr.w	r0, [sl]
 8026e50:	9100      	str	r1, [sp, #0]
 8026e52:	6941      	ldr	r1, [r0, #20]
 8026e54:	b21b      	sxth	r3, r3
 8026e56:	460d      	mov	r5, r1
 8026e58:	b212      	sxth	r2, r2
 8026e5a:	9905      	ldr	r1, [sp, #20]
 8026e5c:	4650      	mov	r0, sl
 8026e5e:	47a8      	blx	r5
 8026e60:	9b04      	ldr	r3, [sp, #16]
 8026e62:	3301      	adds	r3, #1
 8026e64:	f107 0201 	add.w	r2, r7, #1
 8026e68:	d0c8      	beq.n	8026dfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026e6a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026e6e:	1abb      	subs	r3, r7, r2
 8026e70:	2b00      	cmp	r3, #0
 8026e72:	dd31      	ble.n	8026ed8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026e74:	2a00      	cmp	r2, #0
 8026e76:	dabb      	bge.n	8026df0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026e78:	2f00      	cmp	r7, #0
 8026e7a:	dd2d      	ble.n	8026ed8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026e7c:	2200      	movs	r2, #0
 8026e7e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026e82:	19d1      	adds	r1, r2, r7
 8026e84:	4299      	cmp	r1, r3
 8026e86:	db02      	blt.n	8026e8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026e88:	1a9f      	subs	r7, r3, r2
 8026e8a:	2f00      	cmp	r7, #0
 8026e8c:	dd24      	ble.n	8026ed8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026e8e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026e92:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026e96:	f7ff ff39 	bl	8026d0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026e9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026e9c:	fb10 f003 	smulbb	r0, r0, r3
 8026ea0:	b280      	uxth	r0, r0
 8026ea2:	1c41      	adds	r1, r0, #1
 8026ea4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026ea8:	1209      	asrs	r1, r1, #8
 8026eaa:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026eae:	d013      	beq.n	8026ed8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026eb0:	9808      	ldr	r0, [sp, #32]
 8026eb2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026eb4:	b292      	uxth	r2, r2
 8026eb6:	b2c9      	uxtb	r1, r1
 8026eb8:	4413      	add	r3, r2
 8026eba:	9102      	str	r1, [sp, #8]
 8026ebc:	4402      	add	r2, r0
 8026ebe:	b23f      	sxth	r7, r7
 8026ec0:	f8da 0000 	ldr.w	r0, [sl]
 8026ec4:	9701      	str	r7, [sp, #4]
 8026ec6:	fa0f f18b 	sxth.w	r1, fp
 8026eca:	9100      	str	r1, [sp, #0]
 8026ecc:	6947      	ldr	r7, [r0, #20]
 8026ece:	9905      	ldr	r1, [sp, #20]
 8026ed0:	b21b      	sxth	r3, r3
 8026ed2:	b212      	sxth	r2, r2
 8026ed4:	4650      	mov	r0, sl
 8026ed6:	47b8      	blx	r7
 8026ed8:	464b      	mov	r3, r9
 8026eda:	e75c      	b.n	8026d96 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026edc:	2f00      	cmp	r7, #0
 8026ede:	da95      	bge.n	8026e0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026ee0:	e78c      	b.n	8026dfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026ee2:	2900      	cmp	r1, #0
 8026ee4:	d0f8      	beq.n	8026ed8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026ee6:	e78f      	b.n	8026e08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026ee8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026ee8:	4b4b      	ldr	r3, [pc, #300]	; (8027018 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026eea:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026eee:	2500      	movs	r5, #0
 8026ef0:	f100 0620 	add.w	r6, r0, #32
 8026ef4:	4604      	mov	r4, r0
 8026ef6:	e9c0 3100 	strd	r3, r1, [r0]
 8026efa:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026efe:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026f02:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026f06:	f100 0718 	add.w	r7, r0, #24
 8026f0a:	4630      	mov	r0, r6
 8026f0c:	4690      	mov	r8, r2
 8026f0e:	f7ec fb41 	bl	8013594 <_ZN8touchgfx7OutlineC1Ev>
 8026f12:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026f16:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026f1a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026f1e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026f22:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026f26:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026f2a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026f2e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026f32:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026f36:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026f3a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026f3e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026f42:	9500      	str	r5, [sp, #0]
 8026f44:	4410      	add	r0, r2
 8026f46:	b280      	uxth	r0, r0
 8026f48:	fa0f fa80 	sxth.w	sl, r0
 8026f4c:	45aa      	cmp	sl, r5
 8026f4e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026f52:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026f56:	dd5c      	ble.n	8027012 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026f58:	4591      	cmp	r9, r2
 8026f5a:	dd5a      	ble.n	8027012 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026f5c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026f60:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026f64:	440b      	add	r3, r1
 8026f66:	b29b      	uxth	r3, r3
 8026f68:	b21d      	sxth	r5, r3
 8026f6a:	2d00      	cmp	r5, #0
 8026f6c:	dd51      	ble.n	8027012 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026f6e:	458e      	cmp	lr, r1
 8026f70:	dd4f      	ble.n	8027012 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026f72:	45d1      	cmp	r9, sl
 8026f74:	bfb8      	it	lt
 8026f76:	fa1f f089 	uxthlt.w	r0, r9
 8026f7a:	45ae      	cmp	lr, r5
 8026f7c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026f80:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026f84:	bfb8      	it	lt
 8026f86:	fa1f f38e 	uxthlt.w	r3, lr
 8026f8a:	1a80      	subs	r0, r0, r2
 8026f8c:	1a5b      	subs	r3, r3, r1
 8026f8e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026f92:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026f96:	f8ad 2000 	strh.w	r2, [sp]
 8026f9a:	f8ad 1002 	strh.w	r1, [sp, #2]
 8026f9e:	466d      	mov	r5, sp
 8026fa0:	e895 0003 	ldmia.w	r5, {r0, r1}
 8026fa4:	e887 0003 	stmia.w	r7, {r0, r1}
 8026fa8:	f8dc 3000 	ldr.w	r3, [ip]
 8026fac:	4660      	mov	r0, ip
 8026fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026fb0:	4639      	mov	r1, r7
 8026fb2:	4798      	blx	r3
 8026fb4:	6861      	ldr	r1, [r4, #4]
 8026fb6:	4628      	mov	r0, r5
 8026fb8:	3104      	adds	r1, #4
 8026fba:	f7ee fcf1 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026fbe:	4638      	mov	r0, r7
 8026fc0:	f7ee fcaa 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026fc4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026fc8:	f8bd 2000 	ldrh.w	r2, [sp]
 8026fcc:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8026fd0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8026fd4:	4630      	mov	r0, r6
 8026fd6:	f7ec fac1 	bl	801355c <_ZN8touchgfx7Outline5resetEv>
 8026fda:	f9bd 3000 	ldrsh.w	r3, [sp]
 8026fde:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8026fe2:	015b      	lsls	r3, r3, #5
 8026fe4:	60a3      	str	r3, [r4, #8]
 8026fe6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026fea:	015b      	lsls	r3, r3, #5
 8026fec:	60e3      	str	r3, [r4, #12]
 8026fee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8026ff2:	015b      	lsls	r3, r3, #5
 8026ff4:	6123      	str	r3, [r4, #16]
 8026ff6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026ffa:	015b      	lsls	r3, r3, #5
 8026ffc:	6163      	str	r3, [r4, #20]
 8026ffe:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027002:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027006:	4620      	mov	r0, r4
 8027008:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802700c:	b002      	add	sp, #8
 802700e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027012:	2300      	movs	r3, #0
 8027014:	9301      	str	r3, [sp, #4]
 8027016:	e7c2      	b.n	8026f9e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8027018:	0802f900 	.word	0x0802f900

0802701c <_ZN8touchgfx6Canvas5closeEv>:
 802701c:	b538      	push	{r3, r4, r5, lr}
 802701e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027022:	4604      	mov	r4, r0
 8027024:	b193      	cbz	r3, 802704c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027026:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802702a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802702e:	4213      	tst	r3, r2
 8027030:	d10c      	bne.n	802704c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027032:	f100 0520 	add.w	r5, r0, #32
 8027036:	b123      	cbz	r3, 8027042 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027038:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802703c:	4628      	mov	r0, r5
 802703e:	f7ff fe79 	bl	8026d34 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027042:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8027046:	4628      	mov	r0, r5
 8027048:	f7ff fe74 	bl	8026d34 <_ZN8touchgfx10Rasterizer6lineToEii>
 802704c:	2300      	movs	r3, #0
 802704e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027052:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8027056:	4298      	cmp	r0, r3
 8027058:	bf34      	ite	cc
 802705a:	2000      	movcc	r0, #0
 802705c:	2001      	movcs	r0, #1
 802705e:	bd38      	pop	{r3, r4, r5, pc}

08027060 <_ZN8touchgfx6Canvas6renderEh>:
 8027060:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027064:	4604      	mov	r4, r0
 8027066:	6840      	ldr	r0, [r0, #4]
 8027068:	6803      	ldr	r3, [r0, #0]
 802706a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802706c:	460d      	mov	r5, r1
 802706e:	4798      	blx	r3
 8027070:	fb10 f105 	smulbb	r1, r0, r5
 8027074:	b289      	uxth	r1, r1
 8027076:	1c4d      	adds	r5, r1, #1
 8027078:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802707c:	122d      	asrs	r5, r5, #8
 802707e:	f000 809d 	beq.w	80271bc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027082:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8027086:	2b00      	cmp	r3, #0
 8027088:	f000 8098 	beq.w	80271bc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802708c:	4620      	mov	r0, r4
 802708e:	f7ff ffc5 	bl	802701c <_ZN8touchgfx6Canvas5closeEv>
 8027092:	4607      	mov	r7, r0
 8027094:	2800      	cmp	r0, #0
 8027096:	d048      	beq.n	802712a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027098:	6863      	ldr	r3, [r4, #4]
 802709a:	4e49      	ldr	r6, [pc, #292]	; (80271c0 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802709c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802709e:	6837      	ldr	r7, [r6, #0]
 80270a0:	6803      	ldr	r3, [r0, #0]
 80270a2:	689b      	ldr	r3, [r3, #8]
 80270a4:	4798      	blx	r3
 80270a6:	4601      	mov	r1, r0
 80270a8:	4638      	mov	r0, r7
 80270aa:	f7ea fbc5 	bl	8011838 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80270ae:	4607      	mov	r7, r0
 80270b0:	f7dd fba4 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 80270b4:	6803      	ldr	r3, [r0, #0]
 80270b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80270b8:	4798      	blx	r3
 80270ba:	4680      	mov	r8, r0
 80270bc:	f7dd fb9e 	bl	80047fc <_ZN8touchgfx3HAL3lcdEv>
 80270c0:	6803      	ldr	r3, [r0, #0]
 80270c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80270c4:	4798      	blx	r3
 80270c6:	280b      	cmp	r0, #11
 80270c8:	d85d      	bhi.n	8027186 <_ZN8touchgfx6Canvas6renderEh+0x126>
 80270ca:	e8df f000 	tbb	[pc, r0]
 80270ce:	5e53      	.short	0x5e53
 80270d0:	325c066e 	.word	0x325c066e
 80270d4:	67676742 	.word	0x67676742
 80270d8:	6767      	.short	0x6767
 80270da:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80270de:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80270e2:	2208      	movs	r2, #8
 80270e4:	fb91 f2f2 	sdiv	r2, r1, r2
 80270e8:	fb08 2303 	mla	r3, r8, r3, r2
 80270ec:	441f      	add	r7, r3
 80270ee:	424b      	negs	r3, r1
 80270f0:	f003 0307 	and.w	r3, r3, #7
 80270f4:	f001 0107 	and.w	r1, r1, #7
 80270f8:	bf58      	it	pl
 80270fa:	4259      	negpl	r1, r3
 80270fc:	b2c9      	uxtb	r1, r1
 80270fe:	b2ed      	uxtb	r5, r5
 8027100:	e9cd 1500 	strd	r1, r5, [sp]
 8027104:	6860      	ldr	r0, [r4, #4]
 8027106:	463a      	mov	r2, r7
 8027108:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802710a:	fa0f f388 	sxth.w	r3, r8
 802710e:	f104 0020 	add.w	r0, r4, #32
 8027112:	f7ff fe1b 	bl	8026d4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027116:	6863      	ldr	r3, [r4, #4]
 8027118:	4607      	mov	r7, r0
 802711a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802711c:	6803      	ldr	r3, [r0, #0]
 802711e:	691b      	ldr	r3, [r3, #16]
 8027120:	4798      	blx	r3
 8027122:	6830      	ldr	r0, [r6, #0]
 8027124:	6803      	ldr	r3, [r0, #0]
 8027126:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027128:	4798      	blx	r3
 802712a:	4638      	mov	r0, r7
 802712c:	b002      	add	sp, #8
 802712e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027132:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027136:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802713a:	2204      	movs	r2, #4
 802713c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027140:	fb08 2303 	mla	r3, r8, r3, r2
 8027144:	441f      	add	r7, r3
 8027146:	424b      	negs	r3, r1
 8027148:	f003 0303 	and.w	r3, r3, #3
 802714c:	f001 0103 	and.w	r1, r1, #3
 8027150:	e7d2      	b.n	80270f8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027152:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027156:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802715a:	2900      	cmp	r1, #0
 802715c:	f04f 0202 	mov.w	r2, #2
 8027160:	fb91 f2f2 	sdiv	r2, r1, r2
 8027164:	f001 0101 	and.w	r1, r1, #1
 8027168:	fb08 2303 	mla	r3, r8, r3, r2
 802716c:	441f      	add	r7, r3
 802716e:	bfb8      	it	lt
 8027170:	4249      	neglt	r1, r1
 8027172:	e7c3      	b.n	80270fc <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027174:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027178:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802717c:	fb08 f303 	mul.w	r3, r8, r3
 8027180:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027184:	441f      	add	r7, r3
 8027186:	2100      	movs	r1, #0
 8027188:	e7b9      	b.n	80270fe <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802718a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802718e:	fb08 f203 	mul.w	r2, r8, r3
 8027192:	8b23      	ldrh	r3, [r4, #24]
 8027194:	2103      	movs	r1, #3
 8027196:	fb13 2301 	smlabb	r3, r3, r1, r2
 802719a:	e7f3      	b.n	8027184 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802719c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80271a0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80271a4:	fb08 2303 	mla	r3, r8, r3, r2
 80271a8:	e7ec      	b.n	8027184 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80271aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80271ae:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80271b2:	fb08 f303 	mul.w	r3, r8, r3
 80271b6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80271ba:	e7e3      	b.n	8027184 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80271bc:	2701      	movs	r7, #1
 80271be:	e7b4      	b.n	802712a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80271c0:	20012da4 	.word	0x20012da4

080271c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80271c4:	b510      	push	{r4, lr}
 80271c6:	4b07      	ldr	r3, [pc, #28]	; (80271e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80271c8:	781b      	ldrb	r3, [r3, #0]
 80271ca:	2b01      	cmp	r3, #1
 80271cc:	d108      	bne.n	80271e0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80271ce:	6843      	ldr	r3, [r0, #4]
 80271d0:	6814      	ldr	r4, [r2, #0]
 80271d2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80271d6:	680b      	ldr	r3, [r1, #0]
 80271d8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80271dc:	6013      	str	r3, [r2, #0]
 80271de:	600c      	str	r4, [r1, #0]
 80271e0:	bd10      	pop	{r4, pc}
 80271e2:	bf00      	nop
 80271e4:	20012d9c 	.word	0x20012d9c

080271e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80271e8:	b513      	push	{r0, r1, r4, lr}
 80271ea:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80271ee:	4604      	mov	r4, r0
 80271f0:	e9cd 2100 	strd	r2, r1, [sp]
 80271f4:	b9a3      	cbnz	r3, 8027220 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80271f6:	466a      	mov	r2, sp
 80271f8:	a901      	add	r1, sp, #4
 80271fa:	4620      	mov	r0, r4
 80271fc:	f7ff ffe2 	bl	80271c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027200:	68a3      	ldr	r3, [r4, #8]
 8027202:	9901      	ldr	r1, [sp, #4]
 8027204:	9a00      	ldr	r2, [sp, #0]
 8027206:	1ac9      	subs	r1, r1, r3
 8027208:	68e3      	ldr	r3, [r4, #12]
 802720a:	9101      	str	r1, [sp, #4]
 802720c:	1ad2      	subs	r2, r2, r3
 802720e:	2a00      	cmp	r2, #0
 8027210:	9200      	str	r2, [sp, #0]
 8027212:	da0b      	bge.n	802722c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027214:	2301      	movs	r3, #1
 8027216:	2900      	cmp	r1, #0
 8027218:	da0e      	bge.n	8027238 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802721a:	f043 0304 	orr.w	r3, r3, #4
 802721e:	e013      	b.n	8027248 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027220:	f7ff fefc 	bl	802701c <_ZN8touchgfx6Canvas5closeEv>
 8027224:	2800      	cmp	r0, #0
 8027226:	d1e6      	bne.n	80271f6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027228:	b002      	add	sp, #8
 802722a:	bd10      	pop	{r4, pc}
 802722c:	6963      	ldr	r3, [r4, #20]
 802722e:	429a      	cmp	r2, r3
 8027230:	bfac      	ite	ge
 8027232:	2302      	movge	r3, #2
 8027234:	2300      	movlt	r3, #0
 8027236:	e7ee      	b.n	8027216 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027238:	6920      	ldr	r0, [r4, #16]
 802723a:	4281      	cmp	r1, r0
 802723c:	bfac      	ite	ge
 802723e:	2008      	movge	r0, #8
 8027240:	2000      	movlt	r0, #0
 8027242:	4318      	orrs	r0, r3
 8027244:	b2c3      	uxtb	r3, r0
 8027246:	b158      	cbz	r0, 8027260 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027248:	2200      	movs	r2, #0
 802724a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802724e:	9901      	ldr	r1, [sp, #4]
 8027250:	9a00      	ldr	r2, [sp, #0]
 8027252:	66a1      	str	r1, [r4, #104]	; 0x68
 8027254:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027256:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802725a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802725e:	e7e3      	b.n	8027228 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027260:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027264:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027268:	4298      	cmp	r0, r3
 802726a:	d803      	bhi.n	8027274 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802726c:	f104 0020 	add.w	r0, r4, #32
 8027270:	f7ec fe72 	bl	8013f58 <_ZN8touchgfx7Outline6moveToEii>
 8027274:	2301      	movs	r3, #1
 8027276:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802727a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802727e:	2300      	movs	r3, #0
 8027280:	e7e5      	b.n	802724e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027282:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027284:	ab02      	add	r3, sp, #8
 8027286:	4604      	mov	r4, r0
 8027288:	f843 2d08 	str.w	r2, [r3, #-8]!
 802728c:	9101      	str	r1, [sp, #4]
 802728e:	461a      	mov	r2, r3
 8027290:	a901      	add	r1, sp, #4
 8027292:	f7ff ff97 	bl	80271c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027296:	68a3      	ldr	r3, [r4, #8]
 8027298:	9901      	ldr	r1, [sp, #4]
 802729a:	9a00      	ldr	r2, [sp, #0]
 802729c:	1ac9      	subs	r1, r1, r3
 802729e:	68e3      	ldr	r3, [r4, #12]
 80272a0:	9101      	str	r1, [sp, #4]
 80272a2:	1ad2      	subs	r2, r2, r3
 80272a4:	2a00      	cmp	r2, #0
 80272a6:	9200      	str	r2, [sp, #0]
 80272a8:	db1c      	blt.n	80272e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80272aa:	6963      	ldr	r3, [r4, #20]
 80272ac:	429a      	cmp	r2, r3
 80272ae:	bfac      	ite	ge
 80272b0:	2002      	movge	r0, #2
 80272b2:	2000      	movlt	r0, #0
 80272b4:	2900      	cmp	r1, #0
 80272b6:	db17      	blt.n	80272e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80272b8:	6923      	ldr	r3, [r4, #16]
 80272ba:	4299      	cmp	r1, r3
 80272bc:	bfac      	ite	ge
 80272be:	2308      	movge	r3, #8
 80272c0:	2300      	movlt	r3, #0
 80272c2:	4303      	orrs	r3, r0
 80272c4:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80272c8:	b2dd      	uxtb	r5, r3
 80272ca:	b978      	cbnz	r0, 80272ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80272cc:	f104 0020 	add.w	r0, r4, #32
 80272d0:	f7ff fd30 	bl	8026d34 <_ZN8touchgfx10Rasterizer6lineToEii>
 80272d4:	9b01      	ldr	r3, [sp, #4]
 80272d6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80272d8:	9b00      	ldr	r3, [sp, #0]
 80272da:	6623      	str	r3, [r4, #96]	; 0x60
 80272dc:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80272e0:	b002      	add	sp, #8
 80272e2:	bd70      	pop	{r4, r5, r6, pc}
 80272e4:	2001      	movs	r0, #1
 80272e6:	e7e5      	b.n	80272b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80272e8:	2304      	movs	r3, #4
 80272ea:	e7ea      	b.n	80272c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80272ec:	b113      	cbz	r3, 80272f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80272ee:	ea10 0305 	ands.w	r3, r0, r5
 80272f2:	d11c      	bne.n	802732e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80272f4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80272f8:	f104 0620 	add.w	r6, r4, #32
 80272fc:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027300:	b98b      	cbnz	r3, 8027326 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027302:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027306:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802730a:	4298      	cmp	r0, r3
 802730c:	d802      	bhi.n	8027314 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802730e:	4630      	mov	r0, r6
 8027310:	f7ec fe22 	bl	8013f58 <_ZN8touchgfx7Outline6moveToEii>
 8027314:	2301      	movs	r3, #1
 8027316:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802731a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802731e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027322:	4630      	mov	r0, r6
 8027324:	e7d4      	b.n	80272d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027326:	4630      	mov	r0, r6
 8027328:	f7ff fd04 	bl	8026d34 <_ZN8touchgfx10Rasterizer6lineToEii>
 802732c:	e7f7      	b.n	802731e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802732e:	461d      	mov	r5, r3
 8027330:	e7d0      	b.n	80272d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027334 <_ZN8touchgfx6CanvasD1Ev>:
 8027334:	b510      	push	{r4, lr}
 8027336:	4b04      	ldr	r3, [pc, #16]	; (8027348 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027338:	4604      	mov	r4, r0
 802733a:	f840 3b20 	str.w	r3, [r0], #32
 802733e:	f7ec f905 	bl	801354c <_ZN8touchgfx7OutlineD1Ev>
 8027342:	4620      	mov	r0, r4
 8027344:	bd10      	pop	{r4, pc}
 8027346:	bf00      	nop
 8027348:	0802f900 	.word	0x0802f900

0802734c <_ZN8touchgfx6CanvasD0Ev>:
 802734c:	b510      	push	{r4, lr}
 802734e:	4604      	mov	r4, r0
 8027350:	f7ff fff0 	bl	8027334 <_ZN8touchgfx6CanvasD1Ev>
 8027354:	4620      	mov	r0, r4
 8027356:	2170      	movs	r1, #112	; 0x70
 8027358:	f002 fdb1 	bl	8029ebe <_ZdlPvj>
 802735c:	4620      	mov	r0, r4
 802735e:	bd10      	pop	{r4, pc}

08027360 <_ZN8touchgfx6CircleD1Ev>:
 8027360:	4770      	bx	lr

08027362 <_ZN8touchgfx6CircleD0Ev>:
 8027362:	b510      	push	{r4, lr}
 8027364:	2148      	movs	r1, #72	; 0x48
 8027366:	4604      	mov	r4, r0
 8027368:	f002 fda9 	bl	8029ebe <_ZdlPvj>
 802736c:	4620      	mov	r0, r4
 802736e:	bd10      	pop	{r4, pc}

08027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027370:	b508      	push	{r3, lr}
 8027372:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027376:	f7ea fdb5 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802737a:	bd08      	pop	{r3, pc}

0802737c <_ZN8touchgfx6CircleC1Ev>:
 802737c:	b510      	push	{r4, lr}
 802737e:	4604      	mov	r4, r0
 8027380:	f7ea fc4c 	bl	8011c1c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027384:	4b08      	ldr	r3, [pc, #32]	; (80273a8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027386:	6023      	str	r3, [r4, #0]
 8027388:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802738c:	2300      	movs	r3, #0
 802738e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027392:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027396:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802739a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802739e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80273a2:	60a3      	str	r3, [r4, #8]
 80273a4:	4620      	mov	r0, r4
 80273a6:	bd10      	pop	{r4, pc}
 80273a8:	0802f914 	.word	0x0802f914

080273ac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80273ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80273b0:	428a      	cmp	r2, r1
 80273b2:	4680      	mov	r8, r0
 80273b4:	4610      	mov	r0, r2
 80273b6:	4699      	mov	r9, r3
 80273b8:	bfa6      	itte	ge
 80273ba:	460a      	movge	r2, r1
 80273bc:	4603      	movge	r3, r0
 80273be:	460b      	movlt	r3, r1
 80273c0:	1a99      	subs	r1, r3, r2
 80273c2:	b085      	sub	sp, #20
 80273c4:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80273c8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80273cc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80273ce:	bfa4      	itt	ge
 80273d0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80273d4:	2200      	movge	r2, #0
 80273d6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80273da:	9300      	str	r3, [sp, #0]
 80273dc:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80273e0:	f102 0b01 	add.w	fp, r2, #1
 80273e4:	2c00      	cmp	r4, #0
 80273e6:	f040 80af 	bne.w	8027548 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80273ea:	4610      	mov	r0, r2
 80273ec:	9201      	str	r2, [sp, #4]
 80273ee:	f7ea fd79 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80273f2:	a903      	add	r1, sp, #12
 80273f4:	9003      	str	r0, [sp, #12]
 80273f6:	4650      	mov	r0, sl
 80273f8:	f7ea fc3c 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273fc:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027400:	9a01      	ldr	r2, [sp, #4]
 8027402:	4408      	add	r0, r1
 8027404:	f8d9 1000 	ldr.w	r1, [r9]
 8027408:	4281      	cmp	r1, r0
 802740a:	bfc8      	it	gt
 802740c:	f8c9 0000 	strgt.w	r0, [r9]
 8027410:	6839      	ldr	r1, [r7, #0]
 8027412:	4288      	cmp	r0, r1
 8027414:	bfc8      	it	gt
 8027416:	6038      	strgt	r0, [r7, #0]
 8027418:	4610      	mov	r0, r2
 802741a:	f7ff ffa9 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802741e:	a903      	add	r1, sp, #12
 8027420:	9003      	str	r0, [sp, #12]
 8027422:	4650      	mov	r0, sl
 8027424:	f7ea fc26 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027428:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802742c:	1a10      	subs	r0, r2, r0
 802742e:	6832      	ldr	r2, [r6, #0]
 8027430:	4282      	cmp	r2, r0
 8027432:	bfc8      	it	gt
 8027434:	6030      	strgt	r0, [r6, #0]
 8027436:	682a      	ldr	r2, [r5, #0]
 8027438:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802743c:	4290      	cmp	r0, r2
 802743e:	fb9b f2f1 	sdiv	r2, fp, r1
 8027442:	fb01 b212 	mls	r2, r1, r2, fp
 8027446:	eba1 0202 	sub.w	r2, r1, r2
 802744a:	bfc8      	it	gt
 802744c:	6028      	strgt	r0, [r5, #0]
 802744e:	fb92 f0f1 	sdiv	r0, r2, r1
 8027452:	fb01 2210 	mls	r2, r1, r0, r2
 8027456:	4493      	add	fp, r2
 8027458:	9b00      	ldr	r3, [sp, #0]
 802745a:	455b      	cmp	r3, fp
 802745c:	db2a      	blt.n	80274b4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802745e:	4658      	mov	r0, fp
 8027460:	f7ea fd40 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027464:	a903      	add	r1, sp, #12
 8027466:	9003      	str	r0, [sp, #12]
 8027468:	4650      	mov	r0, sl
 802746a:	f7ea fc03 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802746e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027472:	4410      	add	r0, r2
 8027474:	f8d9 2000 	ldr.w	r2, [r9]
 8027478:	4282      	cmp	r2, r0
 802747a:	bfc8      	it	gt
 802747c:	f8c9 0000 	strgt.w	r0, [r9]
 8027480:	683a      	ldr	r2, [r7, #0]
 8027482:	4290      	cmp	r0, r2
 8027484:	bfc8      	it	gt
 8027486:	6038      	strgt	r0, [r7, #0]
 8027488:	4658      	mov	r0, fp
 802748a:	f7ff ff71 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802748e:	a903      	add	r1, sp, #12
 8027490:	9003      	str	r0, [sp, #12]
 8027492:	4650      	mov	r0, sl
 8027494:	f7ea fbee 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027498:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802749c:	1a10      	subs	r0, r2, r0
 802749e:	6832      	ldr	r2, [r6, #0]
 80274a0:	4282      	cmp	r2, r0
 80274a2:	bfc8      	it	gt
 80274a4:	6030      	strgt	r0, [r6, #0]
 80274a6:	682a      	ldr	r2, [r5, #0]
 80274a8:	4290      	cmp	r0, r2
 80274aa:	bfc8      	it	gt
 80274ac:	6028      	strgt	r0, [r5, #0]
 80274ae:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80274b2:	e7d1      	b.n	8027458 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80274b4:	9b00      	ldr	r3, [sp, #0]
 80274b6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80274ba:	455b      	cmp	r3, fp
 80274bc:	dd27      	ble.n	802750e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80274be:	4618      	mov	r0, r3
 80274c0:	f7ea fd10 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80274c4:	a903      	add	r1, sp, #12
 80274c6:	9003      	str	r0, [sp, #12]
 80274c8:	4650      	mov	r0, sl
 80274ca:	f7ea fbd3 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274ce:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80274d2:	4410      	add	r0, r2
 80274d4:	f8d9 2000 	ldr.w	r2, [r9]
 80274d8:	4282      	cmp	r2, r0
 80274da:	bfc8      	it	gt
 80274dc:	f8c9 0000 	strgt.w	r0, [r9]
 80274e0:	683a      	ldr	r2, [r7, #0]
 80274e2:	4290      	cmp	r0, r2
 80274e4:	bfc8      	it	gt
 80274e6:	6038      	strgt	r0, [r7, #0]
 80274e8:	9800      	ldr	r0, [sp, #0]
 80274ea:	f7ff ff41 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80274ee:	a903      	add	r1, sp, #12
 80274f0:	9003      	str	r0, [sp, #12]
 80274f2:	4650      	mov	r0, sl
 80274f4:	f7ea fbbe 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274f8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80274fc:	1a10      	subs	r0, r2, r0
 80274fe:	6832      	ldr	r2, [r6, #0]
 8027500:	4282      	cmp	r2, r0
 8027502:	bfc8      	it	gt
 8027504:	6030      	strgt	r0, [r6, #0]
 8027506:	682a      	ldr	r2, [r5, #0]
 8027508:	4290      	cmp	r0, r2
 802750a:	bfc8      	it	gt
 802750c:	6028      	strgt	r0, [r5, #0]
 802750e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027512:	f8d9 1000 	ldr.w	r1, [r9]
 8027516:	4291      	cmp	r1, r2
 8027518:	bfc8      	it	gt
 802751a:	f8c9 2000 	strgt.w	r2, [r9]
 802751e:	683a      	ldr	r2, [r7, #0]
 8027520:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027524:	429a      	cmp	r2, r3
 8027526:	bfb8      	it	lt
 8027528:	603b      	strlt	r3, [r7, #0]
 802752a:	6832      	ldr	r2, [r6, #0]
 802752c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027530:	429a      	cmp	r2, r3
 8027532:	bfc8      	it	gt
 8027534:	6033      	strgt	r3, [r6, #0]
 8027536:	682a      	ldr	r2, [r5, #0]
 8027538:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802753c:	429a      	cmp	r2, r3
 802753e:	da00      	bge.n	8027542 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027540:	602b      	str	r3, [r5, #0]
 8027542:	b005      	add	sp, #20
 8027544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027548:	2002      	movs	r0, #2
 802754a:	3401      	adds	r4, #1
 802754c:	fb94 f4f0 	sdiv	r4, r4, r0
 8027550:	4610      	mov	r0, r2
 8027552:	9201      	str	r2, [sp, #4]
 8027554:	f7ea fcc6 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027558:	a903      	add	r1, sp, #12
 802755a:	9003      	str	r0, [sp, #12]
 802755c:	4650      	mov	r0, sl
 802755e:	f7ea fb89 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027562:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027566:	9a01      	ldr	r2, [sp, #4]
 8027568:	4408      	add	r0, r1
 802756a:	f8d9 1000 	ldr.w	r1, [r9]
 802756e:	1b03      	subs	r3, r0, r4
 8027570:	4299      	cmp	r1, r3
 8027572:	bfc8      	it	gt
 8027574:	f8c9 3000 	strgt.w	r3, [r9]
 8027578:	6839      	ldr	r1, [r7, #0]
 802757a:	428b      	cmp	r3, r1
 802757c:	bfc8      	it	gt
 802757e:	603b      	strgt	r3, [r7, #0]
 8027580:	f8d9 1000 	ldr.w	r1, [r9]
 8027584:	4420      	add	r0, r4
 8027586:	4281      	cmp	r1, r0
 8027588:	bfc8      	it	gt
 802758a:	f8c9 0000 	strgt.w	r0, [r9]
 802758e:	6839      	ldr	r1, [r7, #0]
 8027590:	4288      	cmp	r0, r1
 8027592:	bfc8      	it	gt
 8027594:	6038      	strgt	r0, [r7, #0]
 8027596:	4610      	mov	r0, r2
 8027598:	f7ff feea 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802759c:	a903      	add	r1, sp, #12
 802759e:	9003      	str	r0, [sp, #12]
 80275a0:	4650      	mov	r0, sl
 80275a2:	f7ea fb67 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275a6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80275aa:	1a10      	subs	r0, r2, r0
 80275ac:	6832      	ldr	r2, [r6, #0]
 80275ae:	1b01      	subs	r1, r0, r4
 80275b0:	428a      	cmp	r2, r1
 80275b2:	bfc8      	it	gt
 80275b4:	6031      	strgt	r1, [r6, #0]
 80275b6:	682a      	ldr	r2, [r5, #0]
 80275b8:	4291      	cmp	r1, r2
 80275ba:	bfc8      	it	gt
 80275bc:	6029      	strgt	r1, [r5, #0]
 80275be:	6832      	ldr	r2, [r6, #0]
 80275c0:	4420      	add	r0, r4
 80275c2:	4282      	cmp	r2, r0
 80275c4:	bfc8      	it	gt
 80275c6:	6030      	strgt	r0, [r6, #0]
 80275c8:	682a      	ldr	r2, [r5, #0]
 80275ca:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80275ce:	4290      	cmp	r0, r2
 80275d0:	fb9b f2f1 	sdiv	r2, fp, r1
 80275d4:	fb01 b212 	mls	r2, r1, r2, fp
 80275d8:	eba1 0202 	sub.w	r2, r1, r2
 80275dc:	bfc8      	it	gt
 80275de:	6028      	strgt	r0, [r5, #0]
 80275e0:	fb92 f0f1 	sdiv	r0, r2, r1
 80275e4:	fb01 2210 	mls	r2, r1, r0, r2
 80275e8:	4493      	add	fp, r2
 80275ea:	9b00      	ldr	r3, [sp, #0]
 80275ec:	455b      	cmp	r3, fp
 80275ee:	db40      	blt.n	8027672 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80275f0:	4658      	mov	r0, fp
 80275f2:	f7ea fc77 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80275f6:	a903      	add	r1, sp, #12
 80275f8:	9003      	str	r0, [sp, #12]
 80275fa:	4650      	mov	r0, sl
 80275fc:	f7ea fb3a 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027600:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027604:	4410      	add	r0, r2
 8027606:	f8d9 2000 	ldr.w	r2, [r9]
 802760a:	1b01      	subs	r1, r0, r4
 802760c:	428a      	cmp	r2, r1
 802760e:	bfc8      	it	gt
 8027610:	f8c9 1000 	strgt.w	r1, [r9]
 8027614:	683a      	ldr	r2, [r7, #0]
 8027616:	4291      	cmp	r1, r2
 8027618:	bfc8      	it	gt
 802761a:	6039      	strgt	r1, [r7, #0]
 802761c:	f8d9 2000 	ldr.w	r2, [r9]
 8027620:	4420      	add	r0, r4
 8027622:	4282      	cmp	r2, r0
 8027624:	bfc8      	it	gt
 8027626:	f8c9 0000 	strgt.w	r0, [r9]
 802762a:	683a      	ldr	r2, [r7, #0]
 802762c:	4290      	cmp	r0, r2
 802762e:	bfc8      	it	gt
 8027630:	6038      	strgt	r0, [r7, #0]
 8027632:	4658      	mov	r0, fp
 8027634:	f7ff fe9c 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027638:	a903      	add	r1, sp, #12
 802763a:	9003      	str	r0, [sp, #12]
 802763c:	4650      	mov	r0, sl
 802763e:	f7ea fb19 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027642:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027646:	1a10      	subs	r0, r2, r0
 8027648:	6832      	ldr	r2, [r6, #0]
 802764a:	1b01      	subs	r1, r0, r4
 802764c:	428a      	cmp	r2, r1
 802764e:	bfc8      	it	gt
 8027650:	6031      	strgt	r1, [r6, #0]
 8027652:	682a      	ldr	r2, [r5, #0]
 8027654:	4291      	cmp	r1, r2
 8027656:	bfc8      	it	gt
 8027658:	6029      	strgt	r1, [r5, #0]
 802765a:	6832      	ldr	r2, [r6, #0]
 802765c:	4420      	add	r0, r4
 802765e:	4282      	cmp	r2, r0
 8027660:	bfc8      	it	gt
 8027662:	6030      	strgt	r0, [r6, #0]
 8027664:	682a      	ldr	r2, [r5, #0]
 8027666:	4290      	cmp	r0, r2
 8027668:	bfc8      	it	gt
 802766a:	6028      	strgt	r0, [r5, #0]
 802766c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027670:	e7bb      	b.n	80275ea <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8027672:	9b00      	ldr	r3, [sp, #0]
 8027674:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027678:	455b      	cmp	r3, fp
 802767a:	f77f af62 	ble.w	8027542 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802767e:	4618      	mov	r0, r3
 8027680:	f7ea fc30 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027684:	a903      	add	r1, sp, #12
 8027686:	9003      	str	r0, [sp, #12]
 8027688:	4650      	mov	r0, sl
 802768a:	f7ea faf3 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802768e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027692:	4410      	add	r0, r2
 8027694:	f8d9 2000 	ldr.w	r2, [r9]
 8027698:	1b01      	subs	r1, r0, r4
 802769a:	428a      	cmp	r2, r1
 802769c:	bfc8      	it	gt
 802769e:	f8c9 1000 	strgt.w	r1, [r9]
 80276a2:	683a      	ldr	r2, [r7, #0]
 80276a4:	4291      	cmp	r1, r2
 80276a6:	bfc8      	it	gt
 80276a8:	6039      	strgt	r1, [r7, #0]
 80276aa:	f8d9 2000 	ldr.w	r2, [r9]
 80276ae:	4420      	add	r0, r4
 80276b0:	4282      	cmp	r2, r0
 80276b2:	bfc8      	it	gt
 80276b4:	f8c9 0000 	strgt.w	r0, [r9]
 80276b8:	683b      	ldr	r3, [r7, #0]
 80276ba:	4298      	cmp	r0, r3
 80276bc:	bfc8      	it	gt
 80276be:	6038      	strgt	r0, [r7, #0]
 80276c0:	9800      	ldr	r0, [sp, #0]
 80276c2:	f7ff fe55 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80276c6:	a903      	add	r1, sp, #12
 80276c8:	9003      	str	r0, [sp, #12]
 80276ca:	4650      	mov	r0, sl
 80276cc:	f7ea fad2 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80276d0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80276d4:	6832      	ldr	r2, [r6, #0]
 80276d6:	1a18      	subs	r0, r3, r0
 80276d8:	1b03      	subs	r3, r0, r4
 80276da:	429a      	cmp	r2, r3
 80276dc:	bfc8      	it	gt
 80276de:	6033      	strgt	r3, [r6, #0]
 80276e0:	682a      	ldr	r2, [r5, #0]
 80276e2:	4293      	cmp	r3, r2
 80276e4:	bfc8      	it	gt
 80276e6:	602b      	strgt	r3, [r5, #0]
 80276e8:	6833      	ldr	r3, [r6, #0]
 80276ea:	4404      	add	r4, r0
 80276ec:	42a3      	cmp	r3, r4
 80276ee:	bfc8      	it	gt
 80276f0:	6034      	strgt	r4, [r6, #0]
 80276f2:	682b      	ldr	r3, [r5, #0]
 80276f4:	429c      	cmp	r4, r3
 80276f6:	bfc8      	it	gt
 80276f8:	602c      	strgt	r4, [r5, #0]
 80276fa:	e722      	b.n	8027542 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080276fc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80276fc:	b530      	push	{r4, r5, lr}
 80276fe:	4604      	mov	r4, r0
 8027700:	4608      	mov	r0, r1
 8027702:	4611      	mov	r1, r2
 8027704:	461a      	mov	r2, r3
 8027706:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802770a:	b089      	sub	sp, #36	; 0x24
 802770c:	015b      	lsls	r3, r3, #5
 802770e:	9304      	str	r3, [sp, #16]
 8027710:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027714:	2500      	movs	r5, #0
 8027716:	015b      	lsls	r3, r3, #5
 8027718:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802771c:	ab07      	add	r3, sp, #28
 802771e:	9302      	str	r3, [sp, #8]
 8027720:	ab06      	add	r3, sp, #24
 8027722:	9301      	str	r3, [sp, #4]
 8027724:	ab05      	add	r3, sp, #20
 8027726:	9300      	str	r3, [sp, #0]
 8027728:	ab04      	add	r3, sp, #16
 802772a:	9505      	str	r5, [sp, #20]
 802772c:	f7ff fe3e 	bl	80273ac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8027730:	2520      	movs	r5, #32
 8027732:	9a04      	ldr	r2, [sp, #16]
 8027734:	9805      	ldr	r0, [sp, #20]
 8027736:	fb92 f2f5 	sdiv	r2, r2, r5
 802773a:	fb90 f0f5 	sdiv	r0, r0, r5
 802773e:	b292      	uxth	r2, r2
 8027740:	3002      	adds	r0, #2
 8027742:	1a80      	subs	r0, r0, r2
 8027744:	9b06      	ldr	r3, [sp, #24]
 8027746:	9907      	ldr	r1, [sp, #28]
 8027748:	fb93 f3f5 	sdiv	r3, r3, r5
 802774c:	fb91 f1f5 	sdiv	r1, r1, r5
 8027750:	b29b      	uxth	r3, r3
 8027752:	3102      	adds	r1, #2
 8027754:	1ac9      	subs	r1, r1, r3
 8027756:	3a01      	subs	r2, #1
 8027758:	3b01      	subs	r3, #1
 802775a:	80a0      	strh	r0, [r4, #4]
 802775c:	4620      	mov	r0, r4
 802775e:	8022      	strh	r2, [r4, #0]
 8027760:	8063      	strh	r3, [r4, #2]
 8027762:	80e1      	strh	r1, [r4, #6]
 8027764:	b009      	add	sp, #36	; 0x24
 8027766:	bd30      	pop	{r4, r5, pc}

08027768 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8027768:	b510      	push	{r4, lr}
 802776a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802776e:	4604      	mov	r4, r0
 8027770:	f7ff ffc4 	bl	80276fc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027774:	4620      	mov	r0, r4
 8027776:	bd10      	pop	{r4, pc}

08027778 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802777a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802777e:	4606      	mov	r6, r0
 8027780:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027784:	6813      	ldr	r3, [r2, #0]
 8027786:	42a5      	cmp	r5, r4
 8027788:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802778c:	da2b      	bge.n	80277e6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802778e:	42a3      	cmp	r3, r4
 8027790:	dd14      	ble.n	80277bc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8027792:	b168      	cbz	r0, 80277b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027794:	4267      	negs	r7, r4
 8027796:	fb97 f2f0 	sdiv	r2, r7, r0
 802779a:	fb00 7212 	mls	r2, r0, r2, r7
 802779e:	1a82      	subs	r2, r0, r2
 80277a0:	fb92 f7f0 	sdiv	r7, r2, r0
 80277a4:	fb00 2017 	mls	r0, r0, r7, r2
 80277a8:	1a24      	subs	r4, r4, r0
 80277aa:	42ac      	cmp	r4, r5
 80277ac:	bfb8      	it	lt
 80277ae:	462c      	movlt	r4, r5
 80277b0:	4630      	mov	r0, r6
 80277b2:	4622      	mov	r2, r4
 80277b4:	f7ff ffa2 	bl	80276fc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80277b8:	4630      	mov	r0, r6
 80277ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80277bc:	42ab      	cmp	r3, r5
 80277be:	dd0e      	ble.n	80277de <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80277c0:	b168      	cbz	r0, 80277de <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80277c2:	425f      	negs	r7, r3
 80277c4:	fb97 f2f0 	sdiv	r2, r7, r0
 80277c8:	fb00 7212 	mls	r2, r0, r2, r7
 80277cc:	1a82      	subs	r2, r0, r2
 80277ce:	fb92 f7f0 	sdiv	r7, r2, r0
 80277d2:	fb00 2017 	mls	r0, r0, r7, r2
 80277d6:	1a1b      	subs	r3, r3, r0
 80277d8:	42ab      	cmp	r3, r5
 80277da:	bfb8      	it	lt
 80277dc:	462b      	movlt	r3, r5
 80277de:	4622      	mov	r2, r4
 80277e0:	461c      	mov	r4, r3
 80277e2:	4613      	mov	r3, r2
 80277e4:	e7e4      	b.n	80277b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80277e6:	42a3      	cmp	r3, r4
 80277e8:	da10      	bge.n	802780c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80277ea:	b148      	cbz	r0, 8027800 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80277ec:	fb94 f2f0 	sdiv	r2, r4, r0
 80277f0:	fb00 4212 	mls	r2, r0, r2, r4
 80277f4:	1a82      	subs	r2, r0, r2
 80277f6:	fb92 f7f0 	sdiv	r7, r2, r0
 80277fa:	fb00 2017 	mls	r0, r0, r7, r2
 80277fe:	4404      	add	r4, r0
 8027800:	42a5      	cmp	r5, r4
 8027802:	bfa8      	it	ge
 8027804:	4625      	movge	r5, r4
 8027806:	461c      	mov	r4, r3
 8027808:	462b      	mov	r3, r5
 802780a:	e7d1      	b.n	80277b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802780c:	42ab      	cmp	r3, r5
 802780e:	dacf      	bge.n	80277b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027810:	2800      	cmp	r0, #0
 8027812:	d0cd      	beq.n	80277b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027814:	fb93 f2f0 	sdiv	r2, r3, r0
 8027818:	fb00 3212 	mls	r2, r0, r2, r3
 802781c:	1a82      	subs	r2, r0, r2
 802781e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027822:	fb00 2017 	mls	r0, r0, r7, r2
 8027826:	4403      	add	r3, r0
 8027828:	42ab      	cmp	r3, r5
 802782a:	bfa8      	it	ge
 802782c:	462b      	movge	r3, r5
 802782e:	e7bf      	b.n	80277b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08027830 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8027830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027834:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8027838:	42ae      	cmp	r6, r5
 802783a:	bfa2      	ittt	ge
 802783c:	4633      	movge	r3, r6
 802783e:	462e      	movge	r6, r5
 8027840:	461d      	movge	r5, r3
 8027842:	1bab      	subs	r3, r5, r6
 8027844:	468b      	mov	fp, r1
 8027846:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8027848:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802784c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8027850:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027854:	f04f 0220 	mov.w	r2, #32
 8027858:	b0ab      	sub	sp, #172	; 0xac
 802785a:	4604      	mov	r4, r0
 802785c:	bfa4      	itt	ge
 802785e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8027862:	2600      	movge	r6, #0
 8027864:	fb99 f9f2 	sdiv	r9, r9, r2
 8027868:	fb9a faf2 	sdiv	sl, sl, r2
 802786c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802786e:	2900      	cmp	r1, #0
 8027870:	f000 80f5 	beq.w	8027a5e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027874:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027878:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802787c:	eba9 0700 	sub.w	r7, r9, r0
 8027880:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027884:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027888:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802788c:	ebaa 0802 	sub.w	r8, sl, r2
 8027890:	4407      	add	r7, r0
 8027892:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027896:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802789a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802789e:	b23f      	sxth	r7, r7
 80278a0:	4490      	add	r8, r2
 80278a2:	eba9 0707 	sub.w	r7, r9, r7
 80278a6:	fa0f f888 	sxth.w	r8, r8
 80278aa:	ebaa 0808 	sub.w	r8, sl, r8
 80278ae:	2f00      	cmp	r7, #0
 80278b0:	bfb8      	it	lt
 80278b2:	427f      	neglt	r7, r7
 80278b4:	f1b8 0f00 	cmp.w	r8, #0
 80278b8:	bfb8      	it	lt
 80278ba:	f1c8 0800 	rsblt	r8, r8, #0
 80278be:	45bc      	cmp	ip, r7
 80278c0:	bfcc      	ite	gt
 80278c2:	f10c 0701 	addgt.w	r7, ip, #1
 80278c6:	3701      	addle	r7, #1
 80278c8:	4540      	cmp	r0, r8
 80278ca:	bfc8      	it	gt
 80278cc:	f100 0801 	addgt.w	r8, r0, #1
 80278d0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80278d4:	f100 0001 	add.w	r0, r0, #1
 80278d8:	ea4f 0060 	mov.w	r0, r0, asr #1
 80278dc:	f04f 0202 	mov.w	r2, #2
 80278e0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80278e4:	fb91 f1f2 	sdiv	r1, r1, r2
 80278e8:	eba3 0301 	sub.w	r3, r3, r1
 80278ec:	bfd8      	it	le
 80278ee:	f108 0801 	addle.w	r8, r8, #1
 80278f2:	9201      	str	r2, [sp, #4]
 80278f4:	930d      	str	r3, [sp, #52]	; 0x34
 80278f6:	f7ea fad5 	bl	8011ea4 <_ZN8touchgfx7CWRUtil4sineEi>
 80278fa:	a92a      	add	r1, sp, #168	; 0xa8
 80278fc:	fb08 f808 	mul.w	r8, r8, r8
 8027900:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027904:	a80d      	add	r0, sp, #52	; 0x34
 8027906:	f7ea f9b5 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802790a:	fb07 8707 	mla	r7, r7, r7, r8
 802790e:	f04f 0c20 	mov.w	ip, #32
 8027912:	fb90 f0fc 	sdiv	r0, r0, ip
 8027916:	4340      	muls	r0, r0
 8027918:	4287      	cmp	r7, r0
 802791a:	9a01      	ldr	r2, [sp, #4]
 802791c:	da04      	bge.n	8027928 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802791e:	2401      	movs	r4, #1
 8027920:	4620      	mov	r0, r4
 8027922:	b02b      	add	sp, #172	; 0xac
 8027924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027928:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802792a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802792c:	fb91 f3f2 	sdiv	r3, r1, r2
 8027930:	4403      	add	r3, r0
 8027932:	fb93 f3fc 	sdiv	r3, r3, ip
 8027936:	f9bb 1000 	ldrsh.w	r1, [fp]
 802793a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802793e:	440a      	add	r2, r1
 8027940:	b212      	sxth	r2, r2
 8027942:	454a      	cmp	r2, r9
 8027944:	bfa8      	it	ge
 8027946:	464a      	movge	r2, r9
 8027948:	428a      	cmp	r2, r1
 802794a:	bfac      	ite	ge
 802794c:	eba9 0902 	subge.w	r9, r9, r2
 8027950:	eba9 0901 	sublt.w	r9, r9, r1
 8027954:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027958:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802795c:	440a      	add	r2, r1
 802795e:	b212      	sxth	r2, r2
 8027960:	4552      	cmp	r2, sl
 8027962:	bfa8      	it	ge
 8027964:	4652      	movge	r2, sl
 8027966:	428a      	cmp	r2, r1
 8027968:	bfac      	ite	ge
 802796a:	ebaa 0a02 	subge.w	sl, sl, r2
 802796e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027972:	3301      	adds	r3, #1
 8027974:	fb0a fa0a 	mul.w	sl, sl, sl
 8027978:	fb09 a909 	mla	r9, r9, r9, sl
 802797c:	435b      	muls	r3, r3
 802797e:	4599      	cmp	r9, r3
 8027980:	dccd      	bgt.n	802791e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027982:	465a      	mov	r2, fp
 8027984:	4621      	mov	r1, r4
 8027986:	a80e      	add	r0, sp, #56	; 0x38
 8027988:	f7ff faae 	bl	8026ee8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802798c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802798e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027990:	9209      	str	r2, [sp, #36]	; 0x24
 8027992:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027996:	930a      	str	r3, [sp, #40]	; 0x28
 8027998:	dd07      	ble.n	80279aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802799a:	2102      	movs	r1, #2
 802799c:	fb93 f3f1 	sdiv	r3, r3, r1
 80279a0:	4413      	add	r3, r2
 80279a2:	930a      	str	r3, [sp, #40]	; 0x28
 80279a4:	fb93 f3f1 	sdiv	r3, r3, r1
 80279a8:	9309      	str	r3, [sp, #36]	; 0x24
 80279aa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80279ae:	4630      	mov	r0, r6
 80279b0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80279b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80279b6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80279ba:	f7ea fa93 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80279be:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80279c2:	f04f 0a02 	mov.w	sl, #2
 80279c6:	f849 0d74 	str.w	r0, [r9, #-116]!
 80279ca:	a80b      	add	r0, sp, #44	; 0x2c
 80279cc:	4649      	mov	r1, r9
 80279ce:	f7ea f951 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279d2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80279d4:	fb90 f0fa 	sdiv	r0, r0, sl
 80279d8:	eb00 0b03 	add.w	fp, r0, r3
 80279dc:	4630      	mov	r0, r6
 80279de:	f7ff fcc7 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80279e2:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80279e6:	017f      	lsls	r7, r7, #5
 80279e8:	f848 0d78 	str.w	r0, [r8, #-120]!
 80279ec:	a80b      	add	r0, sp, #44	; 0x2c
 80279ee:	4641      	mov	r1, r8
 80279f0:	f7ea f940 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279f4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80279f6:	fb90 f0fa 	sdiv	r0, r0, sl
 80279fa:	4659      	mov	r1, fp
 80279fc:	1a12      	subs	r2, r2, r0
 80279fe:	a80e      	add	r0, sp, #56	; 0x38
 8027a00:	f7ff fbf2 	bl	80271e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027a04:	f106 0a20 	add.w	sl, r6, #32
 8027a08:	bb67      	cbnz	r7, 8027a64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8027a0a:	46b3      	mov	fp, r6
 8027a0c:	45aa      	cmp	sl, r5
 8027a0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027a10:	dc33      	bgt.n	8027a7a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027a12:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027a14:	4650      	mov	r0, sl
 8027a16:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8027a1a:	920b      	str	r2, [sp, #44]	; 0x2c
 8027a1c:	f7ea fa62 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a20:	4641      	mov	r1, r8
 8027a22:	900c      	str	r0, [sp, #48]	; 0x30
 8027a24:	a80b      	add	r0, sp, #44	; 0x2c
 8027a26:	f7ea f925 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a2a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8027a2c:	2302      	movs	r3, #2
 8027a2e:	fb90 f0f3 	sdiv	r0, r0, r3
 8027a32:	eb00 0b02 	add.w	fp, r0, r2
 8027a36:	4650      	mov	r0, sl
 8027a38:	f7ff fc9a 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a3c:	4649      	mov	r1, r9
 8027a3e:	900d      	str	r0, [sp, #52]	; 0x34
 8027a40:	a80b      	add	r0, sp, #44	; 0x2c
 8027a42:	f7ea f917 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a46:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027a48:	2302      	movs	r3, #2
 8027a4a:	4659      	mov	r1, fp
 8027a4c:	fb90 f0f3 	sdiv	r0, r0, r3
 8027a50:	1a12      	subs	r2, r2, r0
 8027a52:	a80e      	add	r0, sp, #56	; 0x38
 8027a54:	46d3      	mov	fp, sl
 8027a56:	f7ff fc14 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027a5a:	44ba      	add	sl, r7
 8027a5c:	e7d6      	b.n	8027a0c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8027a5e:	fb93 f3f2 	sdiv	r3, r3, r2
 8027a62:	e768      	b.n	8027936 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027a64:	fb9a f2f7 	sdiv	r2, sl, r7
 8027a68:	fb07 a212 	mls	r2, r7, r2, sl
 8027a6c:	1aba      	subs	r2, r7, r2
 8027a6e:	fb92 f1f7 	sdiv	r1, r2, r7
 8027a72:	fb07 2211 	mls	r2, r7, r1, r2
 8027a76:	4492      	add	sl, r2
 8027a78:	e7c7      	b.n	8027a0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8027a7a:	45ab      	cmp	fp, r5
 8027a7c:	da23      	bge.n	8027ac6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8027a7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027a80:	4628      	mov	r0, r5
 8027a82:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027a86:	920b      	str	r2, [sp, #44]	; 0x2c
 8027a88:	f7ea fa2c 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a8c:	4641      	mov	r1, r8
 8027a8e:	900c      	str	r0, [sp, #48]	; 0x30
 8027a90:	a80b      	add	r0, sp, #44	; 0x2c
 8027a92:	f7ea f8ef 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a96:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027a98:	f04f 0a02 	mov.w	sl, #2
 8027a9c:	fb90 f0fa 	sdiv	r0, r0, sl
 8027aa0:	4403      	add	r3, r0
 8027aa2:	4628      	mov	r0, r5
 8027aa4:	9301      	str	r3, [sp, #4]
 8027aa6:	f7ff fc63 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027aaa:	4649      	mov	r1, r9
 8027aac:	900d      	str	r0, [sp, #52]	; 0x34
 8027aae:	a80b      	add	r0, sp, #44	; 0x2c
 8027ab0:	f7ea f8e0 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ab4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027ab6:	9b01      	ldr	r3, [sp, #4]
 8027ab8:	fb90 f0fa 	sdiv	r0, r0, sl
 8027abc:	4619      	mov	r1, r3
 8027abe:	1a12      	subs	r2, r2, r0
 8027ac0:	a80e      	add	r0, sp, #56	; 0x38
 8027ac2:	f7ff fbde 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027ac6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027ac8:	b99b      	cbnz	r3, 8027af2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027aca:	1bad      	subs	r5, r5, r6
 8027acc:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027ad0:	da04      	bge.n	8027adc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027ad2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027ad6:	a80e      	add	r0, sp, #56	; 0x38
 8027ad8:	f7ff fbd3 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027adc:	21ff      	movs	r1, #255	; 0xff
 8027ade:	a80e      	add	r0, sp, #56	; 0x38
 8027ae0:	f7ff fabe 	bl	8027060 <_ZN8touchgfx6Canvas6renderEh>
 8027ae4:	4604      	mov	r4, r0
 8027ae6:	4b8a      	ldr	r3, [pc, #552]	; (8027d10 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027ae8:	930e      	str	r3, [sp, #56]	; 0x38
 8027aea:	a816      	add	r0, sp, #88	; 0x58
 8027aec:	f7eb fd2e 	bl	801354c <_ZN8touchgfx7OutlineD1Ev>
 8027af0:	e716      	b.n	8027920 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027af2:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027af6:	429a      	cmp	r2, r3
 8027af8:	f0c0 8107 	bcc.w	8027d0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027afc:	1bab      	subs	r3, r5, r6
 8027afe:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027b02:	9301      	str	r3, [sp, #4]
 8027b04:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027b08:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027b0c:	da43      	bge.n	8027b96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027b0e:	4628      	mov	r0, r5
 8027b10:	f7ea f9e8 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b14:	4649      	mov	r1, r9
 8027b16:	900d      	str	r0, [sp, #52]	; 0x34
 8027b18:	a809      	add	r0, sp, #36	; 0x24
 8027b1a:	f7ea f8ab 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b20:	18c3      	adds	r3, r0, r3
 8027b22:	4628      	mov	r0, r5
 8027b24:	9303      	str	r3, [sp, #12]
 8027b26:	f7ff fc23 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b2a:	4649      	mov	r1, r9
 8027b2c:	900d      	str	r0, [sp, #52]	; 0x34
 8027b2e:	a809      	add	r0, sp, #36	; 0x24
 8027b30:	f7ea f8a0 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b34:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027b36:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027b3a:	1a1b      	subs	r3, r3, r0
 8027b3c:	9302      	str	r3, [sp, #8]
 8027b3e:	9204      	str	r2, [sp, #16]
 8027b40:	eb0a 0305 	add.w	r3, sl, r5
 8027b44:	9a04      	ldr	r2, [sp, #16]
 8027b46:	4293      	cmp	r3, r2
 8027b48:	da25      	bge.n	8027b96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027b4a:	4618      	mov	r0, r3
 8027b4c:	9306      	str	r3, [sp, #24]
 8027b4e:	f7ea f9c9 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b52:	4649      	mov	r1, r9
 8027b54:	900d      	str	r0, [sp, #52]	; 0x34
 8027b56:	a80a      	add	r0, sp, #40	; 0x28
 8027b58:	f7ea f88c 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b5c:	9b03      	ldr	r3, [sp, #12]
 8027b5e:	2202      	movs	r2, #2
 8027b60:	fb90 f0f2 	sdiv	r0, r0, r2
 8027b64:	18c3      	adds	r3, r0, r3
 8027b66:	9305      	str	r3, [sp, #20]
 8027b68:	9b06      	ldr	r3, [sp, #24]
 8027b6a:	9207      	str	r2, [sp, #28]
 8027b6c:	4618      	mov	r0, r3
 8027b6e:	f7ff fbff 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b72:	a92a      	add	r1, sp, #168	; 0xa8
 8027b74:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027b78:	a80a      	add	r0, sp, #40	; 0x28
 8027b7a:	f7ea f87b 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b7e:	9b02      	ldr	r3, [sp, #8]
 8027b80:	9a07      	ldr	r2, [sp, #28]
 8027b82:	9905      	ldr	r1, [sp, #20]
 8027b84:	fb90 f2f2 	sdiv	r2, r0, r2
 8027b88:	a80e      	add	r0, sp, #56	; 0x38
 8027b8a:	1a9a      	subs	r2, r3, r2
 8027b8c:	f7ff fb79 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b90:	9b06      	ldr	r3, [sp, #24]
 8027b92:	4453      	add	r3, sl
 8027b94:	e7d6      	b.n	8027b44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027b96:	45ab      	cmp	fp, r5
 8027b98:	da25      	bge.n	8027be6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027b9a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027b9e:	4628      	mov	r0, r5
 8027ba0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027ba4:	930b      	str	r3, [sp, #44]	; 0x2c
 8027ba6:	f7ea f99d 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027baa:	4641      	mov	r1, r8
 8027bac:	900c      	str	r0, [sp, #48]	; 0x30
 8027bae:	a80b      	add	r0, sp, #44	; 0x2c
 8027bb0:	f7ea f860 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bb4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027bb6:	2202      	movs	r2, #2
 8027bb8:	fb90 f0f2 	sdiv	r0, r0, r2
 8027bbc:	eb00 0903 	add.w	r9, r0, r3
 8027bc0:	4628      	mov	r0, r5
 8027bc2:	9202      	str	r2, [sp, #8]
 8027bc4:	f7ff fbd4 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bc8:	a92a      	add	r1, sp, #168	; 0xa8
 8027bca:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027bce:	a80b      	add	r0, sp, #44	; 0x2c
 8027bd0:	f7ea f850 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bd4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027bd6:	9a02      	ldr	r2, [sp, #8]
 8027bd8:	fb90 f2f2 	sdiv	r2, r0, r2
 8027bdc:	4649      	mov	r1, r9
 8027bde:	1a9a      	subs	r2, r3, r2
 8027be0:	a80e      	add	r0, sp, #56	; 0x38
 8027be2:	f7ff fb4e 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027be6:	46d9      	mov	r9, fp
 8027be8:	2502      	movs	r5, #2
 8027bea:	45b1      	cmp	r9, r6
 8027bec:	db25      	blt.n	8027c3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027bee:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027bf2:	4648      	mov	r0, r9
 8027bf4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027bf8:	930b      	str	r3, [sp, #44]	; 0x2c
 8027bfa:	f7ea f973 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bfe:	4641      	mov	r1, r8
 8027c00:	900c      	str	r0, [sp, #48]	; 0x30
 8027c02:	a80b      	add	r0, sp, #44	; 0x2c
 8027c04:	f7ea f836 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c0a:	fb90 f0f5 	sdiv	r0, r0, r5
 8027c0e:	eb00 0b03 	add.w	fp, r0, r3
 8027c12:	4648      	mov	r0, r9
 8027c14:	f7ff fbac 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c18:	a90d      	add	r1, sp, #52	; 0x34
 8027c1a:	900d      	str	r0, [sp, #52]	; 0x34
 8027c1c:	a80b      	add	r0, sp, #44	; 0x2c
 8027c1e:	f7ea f829 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c22:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027c24:	fb90 f0f5 	sdiv	r0, r0, r5
 8027c28:	4659      	mov	r1, fp
 8027c2a:	1a12      	subs	r2, r2, r0
 8027c2c:	a80e      	add	r0, sp, #56	; 0x38
 8027c2e:	46cb      	mov	fp, r9
 8027c30:	f7ff fb27 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c34:	eba9 0907 	sub.w	r9, r9, r7
 8027c38:	e7d7      	b.n	8027bea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027c3a:	455e      	cmp	r6, fp
 8027c3c:	da22      	bge.n	8027c84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027c3e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027c42:	4630      	mov	r0, r6
 8027c44:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027c48:	930b      	str	r3, [sp, #44]	; 0x2c
 8027c4a:	f7ea f94b 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c4e:	4641      	mov	r1, r8
 8027c50:	900c      	str	r0, [sp, #48]	; 0x30
 8027c52:	a80b      	add	r0, sp, #44	; 0x2c
 8027c54:	f7ea f80e 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c58:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027c5a:	2502      	movs	r5, #2
 8027c5c:	fb90 f0f5 	sdiv	r0, r0, r5
 8027c60:	4407      	add	r7, r0
 8027c62:	4630      	mov	r0, r6
 8027c64:	f7ff fb84 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c68:	a92a      	add	r1, sp, #168	; 0xa8
 8027c6a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027c6e:	a80b      	add	r0, sp, #44	; 0x2c
 8027c70:	f7ea f800 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c74:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027c76:	fb90 f0f5 	sdiv	r0, r0, r5
 8027c7a:	4639      	mov	r1, r7
 8027c7c:	1a12      	subs	r2, r2, r0
 8027c7e:	a80e      	add	r0, sp, #56	; 0x38
 8027c80:	f7ff faff 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c84:	9b01      	ldr	r3, [sp, #4]
 8027c86:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027c8a:	f6bf af27 	bge.w	8027adc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027c8e:	4630      	mov	r0, r6
 8027c90:	f7ea f928 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c94:	ad2a      	add	r5, sp, #168	; 0xa8
 8027c96:	f04f 0b02 	mov.w	fp, #2
 8027c9a:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027c9e:	a809      	add	r0, sp, #36	; 0x24
 8027ca0:	4629      	mov	r1, r5
 8027ca2:	f7e9 ffe7 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ca6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027ca8:	eb00 0903 	add.w	r9, r0, r3
 8027cac:	4630      	mov	r0, r6
 8027cae:	f7ff fb5f 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027cb2:	4629      	mov	r1, r5
 8027cb4:	900d      	str	r0, [sp, #52]	; 0x34
 8027cb6:	a809      	add	r0, sp, #36	; 0x24
 8027cb8:	f7e9 ffdc 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cbc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027cbe:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027cc2:	eba3 0800 	sub.w	r8, r3, r0
 8027cc6:	4454      	add	r4, sl
 8027cc8:	42a6      	cmp	r6, r4
 8027cca:	f77f af07 	ble.w	8027adc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027cce:	4620      	mov	r0, r4
 8027cd0:	f7ea f908 	bl	8011ee4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027cd4:	4629      	mov	r1, r5
 8027cd6:	900d      	str	r0, [sp, #52]	; 0x34
 8027cd8:	a80a      	add	r0, sp, #40	; 0x28
 8027cda:	f7e9 ffcb 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cde:	fb90 f0fb 	sdiv	r0, r0, fp
 8027ce2:	eb00 0709 	add.w	r7, r0, r9
 8027ce6:	4620      	mov	r0, r4
 8027ce8:	f7ff fb42 	bl	8027370 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027cec:	a90c      	add	r1, sp, #48	; 0x30
 8027cee:	900c      	str	r0, [sp, #48]	; 0x30
 8027cf0:	a80a      	add	r0, sp, #40	; 0x28
 8027cf2:	f7e9 ffbf 	bl	8011c74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cf6:	4639      	mov	r1, r7
 8027cf8:	fb90 f2fb 	sdiv	r2, r0, fp
 8027cfc:	a80e      	add	r0, sp, #56	; 0x38
 8027cfe:	eba8 0202 	sub.w	r2, r8, r2
 8027d02:	f7ff fabe 	bl	8027282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d06:	4454      	add	r4, sl
 8027d08:	e7de      	b.n	8027cc8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027d0a:	2400      	movs	r4, #0
 8027d0c:	e6eb      	b.n	8027ae6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027d0e:	bf00      	nop
 8027d10:	0802f900 	.word	0x0802f900

08027d14 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027d14:	b570      	push	{r4, r5, r6, lr}
 8027d16:	790b      	ldrb	r3, [r1, #4]
 8027d18:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027d1c:	2b00      	cmp	r3, #0
 8027d1e:	bf0c      	ite	eq
 8027d20:	2301      	moveq	r3, #1
 8027d22:	2300      	movne	r3, #0
 8027d24:	4604      	mov	r4, r0
 8027d26:	460e      	mov	r6, r1
 8027d28:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027d2c:	d109      	bne.n	8027d42 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027d2e:	b14d      	cbz	r5, 8027d44 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027d30:	7933      	ldrb	r3, [r6, #4]
 8027d32:	2b01      	cmp	r3, #1
 8027d34:	d10c      	bne.n	8027d50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027d36:	6823      	ldr	r3, [r4, #0]
 8027d38:	4620      	mov	r0, r4
 8027d3a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027d3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027d40:	4718      	bx	r3
 8027d42:	b12d      	cbz	r5, 8027d50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027d44:	6823      	ldr	r3, [r4, #0]
 8027d46:	4620      	mov	r0, r4
 8027d48:	695b      	ldr	r3, [r3, #20]
 8027d4a:	4798      	blx	r3
 8027d4c:	2d00      	cmp	r5, #0
 8027d4e:	d1ef      	bne.n	8027d30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027d50:	bd70      	pop	{r4, r5, r6, pc}

08027d52 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027d52:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027d56:	4770      	bx	lr

08027d58 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027d58:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027d5c:	4770      	bx	lr

08027d5e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027d5e:	6802      	ldr	r2, [r0, #0]
 8027d60:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027d64:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027d66:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027d6a:	4710      	bx	r2

08027d6c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027d6c:	6802      	ldr	r2, [r0, #0]
 8027d6e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027d72:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027d74:	eef0 0a40 	vmov.f32	s1, s0
 8027d78:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027d7c:	4710      	bx	r2

08027d7e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027d7e:	6802      	ldr	r2, [r0, #0]
 8027d80:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027d84:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027d86:	eeb0 1a40 	vmov.f32	s2, s0
 8027d8a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027d8e:	4710      	bx	r2

08027d90 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027d90:	6802      	ldr	r2, [r0, #0]
 8027d92:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027d96:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027d98:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027d9c:	4710      	bx	r2

08027d9e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027d9e:	6802      	ldr	r2, [r0, #0]
 8027da0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027da4:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027da6:	eef0 0a40 	vmov.f32	s1, s0
 8027daa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027dae:	4710      	bx	r2

08027db0 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027db0:	6802      	ldr	r2, [r0, #0]
 8027db2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027db6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027db8:	eeb0 1a40 	vmov.f32	s2, s0
 8027dbc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027dc0:	4710      	bx	r2

08027dc2 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027dc2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027dc6:	4770      	bx	lr

08027dc8 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027dc8:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027dcc:	4770      	bx	lr

08027dce <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027dce:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027dd2:	4770      	bx	lr

08027dd4 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027dd4:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027dd8:	4770      	bx	lr

08027dda <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027dda:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027dde:	4770      	bx	lr

08027de0 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027de0:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027de4:	4770      	bx	lr

08027de6 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027de6:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027dea:	4770      	bx	lr

08027dec <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027dec:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027df0:	4770      	bx	lr

08027df2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027df2:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027df6:	4770      	bx	lr

08027df8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027df8:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027dfc:	4770      	bx	lr

08027dfe <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027dfe:	ee07 2a90 	vmov	s15, r2
 8027e02:	6803      	ldr	r3, [r0, #0]
 8027e04:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027e08:	ee07 1a90 	vmov	s15, r1
 8027e0c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027e10:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027e14:	4718      	bx	r3

08027e16 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027e16:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027e1a:	4770      	bx	lr

08027e1c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027e1c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027e20:	4770      	bx	lr

08027e22 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027e22:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027e26:	4770      	bx	lr

08027e28 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027e28:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027e2c:	4770      	bx	lr

08027e2e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027e2e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027e32:	4770      	bx	lr

08027e34 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027e34:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027e38:	4770      	bx	lr

08027e3a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027e3a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027e3e:	4770      	bx	lr

08027e40 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027e40:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027e44:	4770      	bx	lr

08027e46 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027e46:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027e4a:	4770      	bx	lr

08027e4c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027e4c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027e50:	4770      	bx	lr

08027e52 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027e52:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027e56:	4770      	bx	lr

08027e58 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027e58:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027e5c:	4770      	bx	lr

08027e5e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027e5e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027e62:	4770      	bx	lr

08027e64 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027e64:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027e68:	4770      	bx	lr

08027e6a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027e6a:	b510      	push	{r4, lr}
 8027e6c:	ed2d 8b04 	vpush	{d8-d9}
 8027e70:	6803      	ldr	r3, [r0, #0]
 8027e72:	4604      	mov	r4, r0
 8027e74:	699b      	ldr	r3, [r3, #24]
 8027e76:	eeb0 8a40 	vmov.f32	s16, s0
 8027e7a:	eef0 8a60 	vmov.f32	s17, s1
 8027e7e:	eeb0 9a41 	vmov.f32	s18, s2
 8027e82:	4798      	blx	r3
 8027e84:	6823      	ldr	r3, [r4, #0]
 8027e86:	4620      	mov	r0, r4
 8027e88:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027e8a:	eeb0 1a49 	vmov.f32	s2, s18
 8027e8e:	eef0 0a68 	vmov.f32	s1, s17
 8027e92:	eeb0 0a48 	vmov.f32	s0, s16
 8027e96:	4798      	blx	r3
 8027e98:	ecbd 8b04 	vpop	{d8-d9}
 8027e9c:	6823      	ldr	r3, [r4, #0]
 8027e9e:	4620      	mov	r0, r4
 8027ea0:	699b      	ldr	r3, [r3, #24]
 8027ea2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027ea6:	4718      	bx	r3

08027ea8 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027ea8:	b510      	push	{r4, lr}
 8027eaa:	ed2d 8b02 	vpush	{d8}
 8027eae:	6803      	ldr	r3, [r0, #0]
 8027eb0:	4604      	mov	r4, r0
 8027eb2:	699b      	ldr	r3, [r3, #24]
 8027eb4:	eeb0 8a40 	vmov.f32	s16, s0
 8027eb8:	4798      	blx	r3
 8027eba:	6823      	ldr	r3, [r4, #0]
 8027ebc:	4620      	mov	r0, r4
 8027ebe:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027ec2:	eeb0 0a48 	vmov.f32	s0, s16
 8027ec6:	4798      	blx	r3
 8027ec8:	ecbd 8b02 	vpop	{d8}
 8027ecc:	6823      	ldr	r3, [r4, #0]
 8027ece:	4620      	mov	r0, r4
 8027ed0:	699b      	ldr	r3, [r3, #24]
 8027ed2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027ed6:	4718      	bx	r3

08027ed8 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027ed8:	2200      	movs	r2, #0
 8027eda:	8002      	strh	r2, [r0, #0]
 8027edc:	8042      	strh	r2, [r0, #2]
 8027ede:	8082      	strh	r2, [r0, #4]
 8027ee0:	80c2      	strh	r2, [r0, #6]
 8027ee2:	4770      	bx	lr

08027ee4 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027ee4:	4770      	bx	lr

08027ee6 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027ee6:	b510      	push	{r4, lr}
 8027ee8:	2190      	movs	r1, #144	; 0x90
 8027eea:	4604      	mov	r4, r0
 8027eec:	f001 ffe7 	bl	8029ebe <_ZdlPvj>
 8027ef0:	4620      	mov	r0, r4
 8027ef2:	bd10      	pop	{r4, pc}

08027ef4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8027ef4:	b538      	push	{r3, r4, r5, lr}
 8027ef6:	2500      	movs	r5, #0
 8027ef8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8027efc:	2301      	movs	r3, #1
 8027efe:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027f02:	4b1f      	ldr	r3, [pc, #124]	; (8027f80 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027f04:	8085      	strh	r5, [r0, #4]
 8027f06:	80c5      	strh	r5, [r0, #6]
 8027f08:	8105      	strh	r5, [r0, #8]
 8027f0a:	8145      	strh	r5, [r0, #10]
 8027f0c:	8185      	strh	r5, [r0, #12]
 8027f0e:	81c5      	strh	r5, [r0, #14]
 8027f10:	8205      	strh	r5, [r0, #16]
 8027f12:	8245      	strh	r5, [r0, #18]
 8027f14:	61c5      	str	r5, [r0, #28]
 8027f16:	8405      	strh	r5, [r0, #32]
 8027f18:	8445      	strh	r5, [r0, #34]	; 0x22
 8027f1a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8027f1e:	6003      	str	r3, [r0, #0]
 8027f20:	880b      	ldrh	r3, [r1, #0]
 8027f22:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027f24:	23ff      	movs	r3, #255	; 0xff
 8027f26:	4604      	mov	r4, r0
 8027f28:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8027f2c:	f7eb f99f 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027f30:	4b14      	ldr	r3, [pc, #80]	; (8027f84 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027f32:	6023      	str	r3, [r4, #0]
 8027f34:	2300      	movs	r3, #0
 8027f36:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8027f3a:	4913      	ldr	r1, [pc, #76]	; (8027f88 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8027f3c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027f3e:	6323      	str	r3, [r4, #48]	; 0x30
 8027f40:	6363      	str	r3, [r4, #52]	; 0x34
 8027f42:	63a3      	str	r3, [r4, #56]	; 0x38
 8027f44:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027f46:	6463      	str	r3, [r4, #68]	; 0x44
 8027f48:	64a3      	str	r3, [r4, #72]	; 0x48
 8027f4a:	6523      	str	r3, [r4, #80]	; 0x50
 8027f4c:	6563      	str	r3, [r4, #84]	; 0x54
 8027f4e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027f50:	6623      	str	r3, [r4, #96]	; 0x60
 8027f52:	66a3      	str	r3, [r4, #104]	; 0x68
 8027f54:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027f56:	6763      	str	r3, [r4, #116]	; 0x74
 8027f58:	67a3      	str	r3, [r4, #120]	; 0x78
 8027f5a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8027f5e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027f62:	230c      	movs	r3, #12
 8027f64:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027f68:	6422      	str	r2, [r4, #64]	; 0x40
 8027f6a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8027f6c:	65a1      	str	r1, [r4, #88]	; 0x58
 8027f6e:	6662      	str	r2, [r4, #100]	; 0x64
 8027f70:	6722      	str	r2, [r4, #112]	; 0x70
 8027f72:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027f74:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027f78:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8027f7c:	4620      	mov	r0, r4
 8027f7e:	bd38      	pop	{r3, r4, r5, pc}
 8027f80:	0802f3a8 	.word	0x0802f3a8
 8027f84:	0802f98c 	.word	0x0802f98c
 8027f88:	447a0000 	.word	0x447a0000

08027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8027f8c:	b570      	push	{r4, r5, r6, lr}
 8027f8e:	ed2d 8b04 	vpush	{d8-d9}
 8027f92:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027f96:	add0      	add	r5, sp, #832	; 0x340
 8027f98:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8027f9a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8027f9e:	4604      	mov	r4, r0
 8027fa0:	4628      	mov	r0, r5
 8027fa2:	f7f1 fa7f 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027fa6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8027fa8:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8027fac:	4606      	mov	r6, r0
 8027fae:	4628      	mov	r0, r5
 8027fb0:	f7f1 faac 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027fb4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8027fb8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8027fbc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8027fbe:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8027fc2:	9312      	str	r3, [sp, #72]	; 0x48
 8027fc4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027fc8:	1c72      	adds	r2, r6, #1
 8027fca:	3001      	adds	r0, #1
 8027fcc:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8027fd0:	ee07 2a90 	vmov	s15, r2
 8027fd4:	ee06 0a90 	vmov	s13, r0
 8027fd8:	ee36 6a47 	vsub.f32	s12, s12, s14
 8027fdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027fe0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8027fe4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8027fe8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8027fec:	9316      	str	r3, [sp, #88]	; 0x58
 8027fee:	931a      	str	r3, [sp, #104]	; 0x68
 8027ff0:	931e      	str	r3, [sp, #120]	; 0x78
 8027ff2:	2300      	movs	r3, #0
 8027ff4:	9320      	str	r3, [sp, #128]	; 0x80
 8027ff6:	9321      	str	r3, [sp, #132]	; 0x84
 8027ff8:	9322      	str	r3, [sp, #136]	; 0x88
 8027ffa:	9324      	str	r3, [sp, #144]	; 0x90
 8027ffc:	9325      	str	r3, [sp, #148]	; 0x94
 8027ffe:	9326      	str	r3, [sp, #152]	; 0x98
 8028000:	9328      	str	r3, [sp, #160]	; 0xa0
 8028002:	9329      	str	r3, [sp, #164]	; 0xa4
 8028004:	932a      	str	r3, [sp, #168]	; 0xa8
 8028006:	932c      	str	r3, [sp, #176]	; 0xb0
 8028008:	932d      	str	r3, [sp, #180]	; 0xb4
 802800a:	932e      	str	r3, [sp, #184]	; 0xb8
 802800c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8028010:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028014:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028018:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802801c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8028020:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028024:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8028028:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802802c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8028030:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028034:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028038:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802803c:	a830      	add	r0, sp, #192	; 0xc0
 802803e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8028042:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8028046:	f000 fc43 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802804a:	eeb1 0a49 	vneg.f32	s0, s18
 802804e:	a830      	add	r0, sp, #192	; 0xc0
 8028050:	f000 fd12 	bl	8028a78 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028054:	eeb1 0a68 	vneg.f32	s0, s17
 8028058:	f000 fd1c 	bl	8028a94 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802805c:	eeb1 0a48 	vneg.f32	s0, s16
 8028060:	f000 fd27 	bl	8028ab2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028064:	a840      	add	r0, sp, #256	; 0x100
 8028066:	f000 fc33 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802806a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802806e:	a840      	add	r0, sp, #256	; 0x100
 8028070:	f000 fc86 	bl	8028980 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028074:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028078:	f000 fcac 	bl	80289d4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802807c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8028080:	f000 fcd1 	bl	8028a26 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028084:	a850      	add	r0, sp, #320	; 0x140
 8028086:	f000 fc23 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802808a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802808e:	a850      	add	r0, sp, #320	; 0x140
 8028090:	f000 fd1e 	bl	8028ad0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028094:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028098:	f000 fd26 	bl	8028ae8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802809c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80280a0:	f000 fd2f 	bl	8028b02 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80280a4:	a860      	add	r0, sp, #384	; 0x180
 80280a6:	f000 fc13 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80280aa:	eeb0 0a49 	vmov.f32	s0, s18
 80280ae:	a860      	add	r0, sp, #384	; 0x180
 80280b0:	f000 fce2 	bl	8028a78 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80280b4:	eeb0 0a68 	vmov.f32	s0, s17
 80280b8:	f000 fcec 	bl	8028a94 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80280bc:	eeb0 0a48 	vmov.f32	s0, s16
 80280c0:	f000 fcf7 	bl	8028ab2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80280c4:	aa50      	add	r2, sp, #320	; 0x140
 80280c6:	a960      	add	r1, sp, #384	; 0x180
 80280c8:	a8b0      	add	r0, sp, #704	; 0x2c0
 80280ca:	f000 fc1b 	bl	8028904 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80280ce:	4628      	mov	r0, r5
 80280d0:	aa40      	add	r2, sp, #256	; 0x100
 80280d2:	a9b0      	add	r1, sp, #704	; 0x2c0
 80280d4:	f000 fc16 	bl	8028904 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80280d8:	4629      	mov	r1, r5
 80280da:	aa30      	add	r2, sp, #192	; 0xc0
 80280dc:	a870      	add	r0, sp, #448	; 0x1c0
 80280de:	f000 fc11 	bl	8028904 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80280e2:	a880      	add	r0, sp, #512	; 0x200
 80280e4:	f000 fbf4 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80280e8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80280ec:	a880      	add	r0, sp, #512	; 0x200
 80280ee:	eeb1 0a40 	vneg.f32	s0, s0
 80280f2:	f000 fcc1 	bl	8028a78 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80280f6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80280fa:	a880      	add	r0, sp, #512	; 0x200
 80280fc:	eeb1 0a40 	vneg.f32	s0, s0
 8028100:	f000 fcc8 	bl	8028a94 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028104:	a890      	add	r0, sp, #576	; 0x240
 8028106:	f000 fbe3 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802810a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802810e:	a890      	add	r0, sp, #576	; 0x240
 8028110:	f000 fc26 	bl	8028960 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028114:	a8a0      	add	r0, sp, #640	; 0x280
 8028116:	f000 fbdb 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802811a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802811e:	a8a0      	add	r0, sp, #640	; 0x280
 8028120:	f000 fcaa 	bl	8028a78 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028124:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028128:	f000 fcb4 	bl	8028a94 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802812c:	aa90      	add	r2, sp, #576	; 0x240
 802812e:	a9a0      	add	r1, sp, #640	; 0x280
 8028130:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028132:	f000 fbe7 	bl	8028904 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028136:	4628      	mov	r0, r5
 8028138:	aa80      	add	r2, sp, #512	; 0x200
 802813a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802813c:	f000 fbe2 	bl	8028904 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028140:	4629      	mov	r1, r5
 8028142:	aa70      	add	r2, sp, #448	; 0x1c0
 8028144:	4668      	mov	r0, sp
 8028146:	466d      	mov	r5, sp
 8028148:	f000 fbdc 	bl	8028904 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802814c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802814e:	ae70      	add	r6, sp, #448	; 0x1c0
 8028150:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028152:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028154:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028156:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028158:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802815a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802815e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028162:	2500      	movs	r5, #0
 8028164:	0129      	lsls	r1, r5, #4
 8028166:	ab20      	add	r3, sp, #128	; 0x80
 8028168:	185e      	adds	r6, r3, r1
 802816a:	ab10      	add	r3, sp, #64	; 0x40
 802816c:	4419      	add	r1, r3
 802816e:	a870      	add	r0, sp, #448	; 0x1c0
 8028170:	f000 fb7e 	bl	8028870 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028174:	3501      	adds	r5, #1
 8028176:	2d04      	cmp	r5, #4
 8028178:	ed86 0a00 	vstr	s0, [r6]
 802817c:	edc6 0a01 	vstr	s1, [r6, #4]
 8028180:	ed86 1a02 	vstr	s2, [r6, #8]
 8028184:	edc6 1a03 	vstr	s3, [r6, #12]
 8028188:	d1ec      	bne.n	8028164 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802818a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802818e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028192:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028196:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802819a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802819e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80281a2:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80281a6:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80281aa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80281ae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80281b2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80281b6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80281ba:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80281be:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80281c2:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80281c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80281ca:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80281ce:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80281d2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80281d6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80281da:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80281de:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80281e2:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80281e6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80281ea:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80281ee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80281f2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80281f6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80281fa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80281fe:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028202:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028206:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802820a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802820e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028212:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028216:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802821a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802821e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028222:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028226:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802822a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802822e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028232:	ecbd 8b04 	vpop	{d8-d9}
 8028236:	bd70      	pop	{r4, r5, r6, pc}

08028238 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028238:	b510      	push	{r4, lr}
 802823a:	4604      	mov	r4, r0
 802823c:	f7eb f817 	bl	801326e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028240:	4620      	mov	r0, r4
 8028242:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028246:	f7ff bea1 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802824a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802824a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802824e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028252:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028256:	f7ff be99 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802825a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802825a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802825e:	f7ff be95 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028262 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028262:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028266:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802826a:	f7ff be8f 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802826e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802826e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028272:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028276:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802827a:	bfd8      	it	le
 802827c:	eeb0 0a67 	vmovle.f32	s0, s15
 8028280:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028284:	f7ff be82 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028288 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028288:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802828c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028290:	f7ff be7c 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028294 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028294:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028298:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802829c:	f7ff be76 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282a0 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80282a0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80282a4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80282a8:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80282ac:	f7ff be6e 	b.w	8027f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282b0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80282b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80282b4:	ed2d 8b04 	vpush	{d8-d9}
 80282b8:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80282bc:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80282c0:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80282c4:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80282c8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80282cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282d0:	bf54      	ite	pl
 80282d2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80282d6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80282da:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80282de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282e2:	bfd8      	it	le
 80282e4:	eeb0 0a49 	vmovle.f32	s0, s18
 80282e8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80282ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282f0:	bfd8      	it	le
 80282f2:	eeb0 0a68 	vmovle.f32	s0, s17
 80282f6:	460c      	mov	r4, r1
 80282f8:	4607      	mov	r7, r0
 80282fa:	f001 ffd3 	bl	802a2a4 <floorf>
 80282fe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028306:	bf58      	it	pl
 8028308:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802830c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028310:	bf56      	itet	pl
 8028312:	ee10 3a10 	vmovpl	r3, s0
 8028316:	2600      	movmi	r6, #0
 8028318:	b21e      	sxthpl	r6, r3
 802831a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802831e:	bfd8      	it	le
 8028320:	eeb0 8a69 	vmovle.f32	s16, s19
 8028324:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802832c:	bf58      	it	pl
 802832e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028332:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802833a:	bf54      	ite	pl
 802833c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028340:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028344:	f001 ff6c 	bl	802a220 <ceilf>
 8028348:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802834c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028350:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028354:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028358:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802835c:	ee07 8a90 	vmov	s15, r8
 8028360:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028364:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028368:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802836c:	bfd8      	it	le
 802836e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028372:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028376:	bfdc      	itt	le
 8028378:	ee10 3a10 	vmovle	r3, s0
 802837c:	fa0f f883 	sxthle.w	r8, r3
 8028380:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028384:	bf54      	ite	pl
 8028386:	eeb0 0a69 	vmovpl.f32	s0, s19
 802838a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802838e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028396:	bfd8      	it	le
 8028398:	eeb0 0a49 	vmovle.f32	s0, s18
 802839c:	eef4 8ac0 	vcmpe.f32	s17, s0
 80283a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283a4:	bfd8      	it	le
 80283a6:	eeb0 0a68 	vmovle.f32	s0, s17
 80283aa:	f001 ff7b 	bl	802a2a4 <floorf>
 80283ae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80283b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283b6:	bf58      	it	pl
 80283b8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80283bc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80283c0:	bf56      	itet	pl
 80283c2:	ee10 3a10 	vmovpl	r3, s0
 80283c6:	2500      	movmi	r5, #0
 80283c8:	b21d      	sxthpl	r5, r3
 80283ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283ce:	bfd8      	it	le
 80283d0:	eeb0 8a69 	vmovle.f32	s16, s19
 80283d4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80283d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283dc:	bf58      	it	pl
 80283de:	eeb0 8a49 	vmovpl.f32	s16, s18
 80283e2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80283e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283ea:	bf54      	ite	pl
 80283ec:	eeb0 0a68 	vmovpl.f32	s0, s17
 80283f0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80283f4:	f001 ff14 	bl	802a220 <ceilf>
 80283f8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80283fc:	803e      	strh	r6, [r7, #0]
 80283fe:	ee07 3a90 	vmov	s15, r3
 8028402:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028406:	807d      	strh	r5, [r7, #2]
 8028408:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802840c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028410:	bfd8      	it	le
 8028412:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028416:	eba8 0606 	sub.w	r6, r8, r6
 802841a:	bfdc      	itt	le
 802841c:	ee10 3a10 	vmovle	r3, s0
 8028420:	b21b      	sxthle	r3, r3
 8028422:	1b5d      	subs	r5, r3, r5
 8028424:	80be      	strh	r6, [r7, #4]
 8028426:	80fd      	strh	r5, [r7, #6]
 8028428:	ecbd 8b04 	vpop	{d8-d9}
 802842c:	4638      	mov	r0, r7
 802842e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028432 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028432:	b513      	push	{r0, r1, r4, lr}
 8028434:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028438:	4604      	mov	r4, r0
 802843a:	b143      	cbz	r3, 802844e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802843c:	4601      	mov	r1, r0
 802843e:	4668      	mov	r0, sp
 8028440:	f7ff ff36 	bl	80282b0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028444:	6823      	ldr	r3, [r4, #0]
 8028446:	4669      	mov	r1, sp
 8028448:	691b      	ldr	r3, [r3, #16]
 802844a:	4620      	mov	r0, r4
 802844c:	4798      	blx	r3
 802844e:	b002      	add	sp, #8
 8028450:	bd10      	pop	{r4, pc}

08028452 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8028452:	4603      	mov	r3, r0
 8028454:	3026      	adds	r0, #38	; 0x26
 8028456:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802845a:	b90b      	cbnz	r3, 8028460 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802845c:	f7ee be38 	b.w	80170d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028460:	f7ee be46 	b.w	80170f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028464 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028468:	ed2d 8b04 	vpush	{d8-d9}
 802846c:	4604      	mov	r4, r0
 802846e:	469b      	mov	fp, r3
 8028470:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028474:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028478:	f9b1 6000 	ldrsh.w	r6, [r1]
 802847c:	8888      	ldrh	r0, [r1, #4]
 802847e:	b0b3      	sub	sp, #204	; 0xcc
 8028480:	4430      	add	r0, r6
 8028482:	b280      	uxth	r0, r0
 8028484:	9206      	str	r2, [sp, #24]
 8028486:	fa0f fe80 	sxth.w	lr, r0
 802848a:	2200      	movs	r2, #0
 802848c:	4596      	cmp	lr, r2
 802848e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028492:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028496:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802849a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802849c:	9211      	str	r2, [sp, #68]	; 0x44
 802849e:	f340 8129 	ble.w	80286f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80284a2:	45b4      	cmp	ip, r6
 80284a4:	f340 8126 	ble.w	80286f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80284a8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80284ac:	88ca      	ldrh	r2, [r1, #6]
 80284ae:	442a      	add	r2, r5
 80284b0:	b292      	uxth	r2, r2
 80284b2:	b211      	sxth	r1, r2
 80284b4:	2900      	cmp	r1, #0
 80284b6:	f340 811d 	ble.w	80286f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80284ba:	42ab      	cmp	r3, r5
 80284bc:	f340 811a 	ble.w	80286f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80284c0:	45f4      	cmp	ip, lr
 80284c2:	bfb8      	it	lt
 80284c4:	fa1f f08c 	uxthlt.w	r0, ip
 80284c8:	428b      	cmp	r3, r1
 80284ca:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80284ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80284d2:	bfb8      	it	lt
 80284d4:	b29a      	uxthlt	r2, r3
 80284d6:	1b80      	subs	r0, r0, r6
 80284d8:	1b52      	subs	r2, r2, r5
 80284da:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80284de:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80284e2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80284e6:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80284ea:	ab11      	add	r3, sp, #68	; 0x44
 80284ec:	e893 0003 	ldmia.w	r3, {r0, r1}
 80284f0:	6822      	ldr	r2, [r4, #0]
 80284f2:	9307      	str	r3, [sp, #28]
 80284f4:	ad13      	add	r5, sp, #76	; 0x4c
 80284f6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80284f8:	e885 0003 	stmia.w	r5, {r0, r1}
 80284fc:	4629      	mov	r1, r5
 80284fe:	4620      	mov	r0, r4
 8028500:	4790      	blx	r2
 8028502:	4621      	mov	r1, r4
 8028504:	a815      	add	r0, sp, #84	; 0x54
 8028506:	f7ee fd3f 	bl	8016f88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802850a:	a815      	add	r0, sp, #84	; 0x54
 802850c:	f7ed fa04 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028510:	9b07      	ldr	r3, [sp, #28]
 8028512:	1d26      	adds	r6, r4, #4
 8028514:	4618      	mov	r0, r3
 8028516:	4631      	mov	r1, r6
 8028518:	f7ed fa42 	bl	80159a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802851c:	4628      	mov	r0, r5
 802851e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028522:	f7ed f9f9 	bl	8015918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028526:	4628      	mov	r0, r5
 8028528:	f7f1 f8a8 	bl	801967c <_ZNK8touchgfx6Bitmap7getDataEv>
 802852c:	9007      	str	r0, [sp, #28]
 802852e:	2800      	cmp	r0, #0
 8028530:	f000 80db 	beq.w	80286ea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8028534:	f8db 2000 	ldr.w	r2, [fp]
 8028538:	9209      	str	r2, [sp, #36]	; 0x24
 802853a:	f8db 2004 	ldr.w	r2, [fp, #4]
 802853e:	920a      	str	r2, [sp, #40]	; 0x28
 8028540:	f8db 2008 	ldr.w	r2, [fp, #8]
 8028544:	920b      	str	r2, [sp, #44]	; 0x2c
 8028546:	f8db 200c 	ldr.w	r2, [fp, #12]
 802854a:	920c      	str	r2, [sp, #48]	; 0x30
 802854c:	f8da 2000 	ldr.w	r2, [sl]
 8028550:	920d      	str	r2, [sp, #52]	; 0x34
 8028552:	f8da 2004 	ldr.w	r2, [sl, #4]
 8028556:	920e      	str	r2, [sp, #56]	; 0x38
 8028558:	f8da 2008 	ldr.w	r2, [sl, #8]
 802855c:	920f      	str	r2, [sp, #60]	; 0x3c
 802855e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8028562:	9210      	str	r2, [sp, #64]	; 0x40
 8028564:	a90d      	add	r1, sp, #52	; 0x34
 8028566:	4632      	mov	r2, r6
 8028568:	a809      	add	r0, sp, #36	; 0x24
 802856a:	f7ed f9fd 	bl	8015968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802856e:	4632      	mov	r2, r6
 8028570:	a90e      	add	r1, sp, #56	; 0x38
 8028572:	a80a      	add	r0, sp, #40	; 0x28
 8028574:	f7ed f9f8 	bl	8015968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028578:	4632      	mov	r2, r6
 802857a:	a90f      	add	r1, sp, #60	; 0x3c
 802857c:	a80b      	add	r0, sp, #44	; 0x2c
 802857e:	f7ed f9f3 	bl	8015968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028582:	4632      	mov	r2, r6
 8028584:	a910      	add	r1, sp, #64	; 0x40
 8028586:	a80c      	add	r0, sp, #48	; 0x30
 8028588:	f7ed f9ee 	bl	8015968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802858c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028590:	edd7 4a00 	vldr	s9, [r7]
 8028594:	edd7 5a01 	vldr	s11, [r7, #4]
 8028598:	ed98 4a00 	vldr	s8, [r8]
 802859c:	ed98 5a01 	vldr	s10, [r8, #4]
 80285a0:	ed99 9a00 	vldr	s18, [r9]
 80285a4:	ed99 8a01 	vldr	s16, [r9, #4]
 80285a8:	edd9 8a02 	vldr	s17, [r9, #8]
 80285ac:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80285b0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80285b4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80285b8:	eef0 6a67 	vmov.f32	s13, s15
 80285bc:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80285c0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80285c4:	eeb0 7a67 	vmov.f32	s14, s15
 80285c8:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80285cc:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80285d0:	eeb0 6a67 	vmov.f32	s12, s15
 80285d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80285d8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80285dc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80285e0:	ee16 6a10 	vmov	r6, s12
 80285e4:	eeb0 6a67 	vmov.f32	s12, s15
 80285e8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80285ec:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80285f0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80285f4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80285f8:	68ff      	ldr	r7, [r7, #12]
 80285fa:	9624      	str	r6, [sp, #144]	; 0x90
 80285fc:	ee16 0a10 	vmov	r0, s12
 8028600:	eeb0 6a67 	vmov.f32	s12, s15
 8028604:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028608:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802860c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028610:	ee16 1a10 	vmov	r1, s12
 8028614:	eeb0 6a67 	vmov.f32	s12, s15
 8028618:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802861c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028620:	ee16 2a10 	vmov	r2, s12
 8028624:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8028628:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802862c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8028630:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8028634:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028638:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802863c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8028640:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8028644:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8028648:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802864c:	922d      	str	r2, [sp, #180]	; 0xb4
 802864e:	4a2b      	ldr	r2, [pc, #172]	; (80286fc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8028650:	9b06      	ldr	r3, [sp, #24]
 8028652:	8812      	ldrh	r2, [r2, #0]
 8028654:	9317      	str	r3, [sp, #92]	; 0x5c
 8028656:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802865a:	9b07      	ldr	r3, [sp, #28]
 802865c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8028660:	4628      	mov	r0, r5
 8028662:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8028666:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802866a:	9218      	str	r2, [sp, #96]	; 0x60
 802866c:	9319      	str	r3, [sp, #100]	; 0x64
 802866e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8028672:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8028676:	9731      	str	r7, [sp, #196]	; 0xc4
 8028678:	f7f1 f830 	bl	80196dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802867c:	901a      	str	r0, [sp, #104]	; 0x68
 802867e:	4628      	mov	r0, r5
 8028680:	f7f0 ff10 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028684:	901b      	str	r0, [sp, #108]	; 0x6c
 8028686:	4628      	mov	r0, r5
 8028688:	f7f0 ff40 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 802868c:	901c      	str	r0, [sp, #112]	; 0x70
 802868e:	4628      	mov	r0, r5
 8028690:	f7f0 ff08 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028694:	eeb4 9a48 	vcmp.f32	s18, s16
 8028698:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802869c:	901d      	str	r0, [sp, #116]	; 0x74
 802869e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80286a2:	d107      	bne.n	80286b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80286a4:	eeb4 8a68 	vcmp.f32	s16, s17
 80286a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80286b0:	bf08      	it	eq
 80286b2:	461e      	moveq	r6, r3
 80286b4:	4b12      	ldr	r3, [pc, #72]	; (8028700 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80286b6:	681b      	ldr	r3, [r3, #0]
 80286b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80286bc:	b10a      	cbz	r2, 80286c2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80286be:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80286c0:	b905      	cbnz	r5, 80286c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80286c2:	689d      	ldr	r5, [r3, #8]
 80286c4:	682b      	ldr	r3, [r5, #0]
 80286c6:	4620      	mov	r0, r4
 80286c8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80286ca:	f7ff fec2 	bl	8028452 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80286ce:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80286d2:	9604      	str	r6, [sp, #16]
 80286d4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80286d8:	ab13      	add	r3, sp, #76	; 0x4c
 80286da:	9301      	str	r3, [sp, #4]
 80286dc:	ab15      	add	r3, sp, #84	; 0x54
 80286de:	9300      	str	r3, [sp, #0]
 80286e0:	aa1e      	add	r2, sp, #120	; 0x78
 80286e2:	ab19      	add	r3, sp, #100	; 0x64
 80286e4:	a917      	add	r1, sp, #92	; 0x5c
 80286e6:	4628      	mov	r0, r5
 80286e8:	47b8      	blx	r7
 80286ea:	b033      	add	sp, #204	; 0xcc
 80286ec:	ecbd 8b04 	vpop	{d8-d9}
 80286f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80286f4:	2300      	movs	r3, #0
 80286f6:	9312      	str	r3, [sp, #72]	; 0x48
 80286f8:	e6f7      	b.n	80284ea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80286fa:	bf00      	nop
 80286fc:	20012d9e 	.word	0x20012d9e
 8028700:	20012da4 	.word	0x20012da4

08028704 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028708:	ed2d 8b02 	vpush	{d8}
 802870c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028710:	b098      	sub	sp, #96	; 0x60
 8028712:	4604      	mov	r4, r0
 8028714:	4688      	mov	r8, r1
 8028716:	2b00      	cmp	r3, #0
 8028718:	d077      	beq.n	802880a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802871a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802871e:	4628      	mov	r0, r5
 8028720:	f7f0 fec0 	bl	80194a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028724:	ee07 0a90 	vmov	s15, r0
 8028728:	4628      	mov	r0, r5
 802872a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802872e:	f7f0 feed 	bl	801950c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028732:	4b4e      	ldr	r3, [pc, #312]	; (802886c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8028734:	781b      	ldrb	r3, [r3, #0]
 8028736:	ee07 0a90 	vmov	s15, r0
 802873a:	2b01      	cmp	r3, #1
 802873c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8028740:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8028744:	d066      	beq.n	8028814 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8028746:	eeb0 6a47 	vmov.f32	s12, s14
 802874a:	ee17 3a10 	vmov	r3, s14
 802874e:	eeb0 4a48 	vmov.f32	s8, s16
 8028752:	eeb0 7a48 	vmov.f32	s14, s16
 8028756:	eef0 4a67 	vmov.f32	s9, s15
 802875a:	eeb0 8a67 	vmov.f32	s16, s15
 802875e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8028762:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8028766:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802876a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802876e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028772:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028776:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028778:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802877a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802877c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8028780:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028784:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028788:	ee73 1a65 	vsub.f32	s3, s6, s11
 802878c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8028790:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028794:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028798:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802879c:	eee1 6a21 	vfma.f32	s13, s2, s3
 80287a0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80287a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80287a8:	dd3d      	ble.n	8028826 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80287aa:	ed8d 5a04 	vstr	s10, [sp, #16]
 80287ae:	ed8d 2a05 	vstr	s4, [sp, #20]
 80287b2:	edcd 2a06 	vstr	s5, [sp, #24]
 80287b6:	f8cd c01c 	str.w	ip, [sp, #28]
 80287ba:	edcd 5a08 	vstr	s11, [sp, #32]
 80287be:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80287c2:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80287c6:	970b      	str	r7, [sp, #44]	; 0x2c
 80287c8:	960c      	str	r6, [sp, #48]	; 0x30
 80287ca:	950d      	str	r5, [sp, #52]	; 0x34
 80287cc:	920e      	str	r2, [sp, #56]	; 0x38
 80287ce:	900f      	str	r0, [sp, #60]	; 0x3c
 80287d0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80287d4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80287d8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80287dc:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80287e0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80287e4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80287e8:	9316      	str	r3, [sp, #88]	; 0x58
 80287ea:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80287ee:	ab14      	add	r3, sp, #80	; 0x50
 80287f0:	9303      	str	r3, [sp, #12]
 80287f2:	ab10      	add	r3, sp, #64	; 0x40
 80287f4:	9302      	str	r3, [sp, #8]
 80287f6:	ab0c      	add	r3, sp, #48	; 0x30
 80287f8:	9301      	str	r3, [sp, #4]
 80287fa:	ab08      	add	r3, sp, #32
 80287fc:	9300      	str	r3, [sp, #0]
 80287fe:	2200      	movs	r2, #0
 8028800:	ab04      	add	r3, sp, #16
 8028802:	4641      	mov	r1, r8
 8028804:	4620      	mov	r0, r4
 8028806:	f7ff fe2d 	bl	8028464 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802880a:	b018      	add	sp, #96	; 0x60
 802880c:	ecbd 8b02 	vpop	{d8}
 8028810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028814:	eeb0 6a48 	vmov.f32	s12, s16
 8028818:	eef0 4a47 	vmov.f32	s9, s14
 802881c:	ee17 3a90 	vmov	r3, s15
 8028820:	eeb0 4a67 	vmov.f32	s8, s15
 8028824:	e79b      	b.n	802875e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028826:	ed8d 5a05 	vstr	s10, [sp, #20]
 802882a:	ed8d 2a04 	vstr	s4, [sp, #16]
 802882e:	f8cd c018 	str.w	ip, [sp, #24]
 8028832:	edcd 2a07 	vstr	s5, [sp, #28]
 8028836:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802883a:	ed8d 3a08 	vstr	s6, [sp, #32]
 802883e:	970a      	str	r7, [sp, #40]	; 0x28
 8028840:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8028844:	960d      	str	r6, [sp, #52]	; 0x34
 8028846:	950c      	str	r5, [sp, #48]	; 0x30
 8028848:	900e      	str	r0, [sp, #56]	; 0x38
 802884a:	920f      	str	r2, [sp, #60]	; 0x3c
 802884c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8028850:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8028854:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8028858:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802885c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8028860:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028864:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028868:	9317      	str	r3, [sp, #92]	; 0x5c
 802886a:	e7c0      	b.n	80287ee <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802886c:	20012d9c 	.word	0x20012d9c

08028870 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028870:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028872:	b08d      	sub	sp, #52	; 0x34
 8028874:	2300      	movs	r3, #0
 8028876:	9304      	str	r3, [sp, #16]
 8028878:	9305      	str	r3, [sp, #20]
 802887a:	9306      	str	r3, [sp, #24]
 802887c:	aa04      	add	r2, sp, #16
 802887e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8028882:	9307      	str	r3, [sp, #28]
 8028884:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028888:	4613      	mov	r3, r2
 802888a:	f101 0710 	add.w	r7, r1, #16
 802888e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80288cc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028892:	460c      	mov	r4, r1
 8028894:	4605      	mov	r5, r0
 8028896:	ecb4 7a01 	vldmia	r4!, {s14}
 802889a:	ecf5 6a01 	vldmia	r5!, {s13}
 802889e:	42bc      	cmp	r4, r7
 80288a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80288a4:	d1f7      	bne.n	8028896 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80288a6:	3010      	adds	r0, #16
 80288a8:	42b0      	cmp	r0, r6
 80288aa:	ece2 7a01 	vstmia	r2!, {s15}
 80288ae:	d1ee      	bne.n	802888e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80288b0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80288b2:	ac0c      	add	r4, sp, #48	; 0x30
 80288b4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80288b8:	ed9d 0a08 	vldr	s0, [sp, #32]
 80288bc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80288c0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80288c4:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80288c8:	b00d      	add	sp, #52	; 0x34
 80288ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80288cc:	00000000 	.word	0x00000000

080288d0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80288d0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028900 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80288d4:	2300      	movs	r3, #0
 80288d6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80288da:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80288de:	2200      	movs	r2, #0
 80288e0:	4293      	cmp	r3, r2
 80288e2:	f102 0201 	add.w	r2, r2, #1
 80288e6:	bf14      	ite	ne
 80288e8:	eef0 6a47 	vmovne.f32	s13, s14
 80288ec:	eef0 6a67 	vmoveq.f32	s13, s15
 80288f0:	2a04      	cmp	r2, #4
 80288f2:	ece1 6a01 	vstmia	r1!, {s13}
 80288f6:	d1f3      	bne.n	80288e0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80288f8:	3301      	adds	r3, #1
 80288fa:	2b04      	cmp	r3, #4
 80288fc:	d1ed      	bne.n	80288da <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80288fe:	4770      	bx	lr
 8028900:	00000000 	.word	0x00000000

08028904 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028908:	460c      	mov	r4, r1
 802890a:	4605      	mov	r5, r0
 802890c:	4690      	mov	r8, r2
 802890e:	f7ff ffdf 	bl	80288d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028912:	4628      	mov	r0, r5
 8028914:	4621      	mov	r1, r4
 8028916:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802891a:	2300      	movs	r3, #0
 802891c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802895c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028920:	eb08 0603 	add.w	r6, r8, r3
 8028924:	460f      	mov	r7, r1
 8028926:	2400      	movs	r4, #0
 8028928:	4632      	mov	r2, r6
 802892a:	ecf7 6a01 	vldmia	r7!, {s13}
 802892e:	ed92 7a00 	vldr	s14, [r2]
 8028932:	3401      	adds	r4, #1
 8028934:	2c04      	cmp	r4, #4
 8028936:	f106 0610 	add.w	r6, r6, #16
 802893a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802893e:	d1f3      	bne.n	8028928 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028940:	18c2      	adds	r2, r0, r3
 8028942:	3304      	adds	r3, #4
 8028944:	2b10      	cmp	r3, #16
 8028946:	edc2 7a00 	vstr	s15, [r2]
 802894a:	d1e7      	bne.n	802891c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802894c:	3110      	adds	r1, #16
 802894e:	4561      	cmp	r1, ip
 8028950:	f100 0010 	add.w	r0, r0, #16
 8028954:	d1e1      	bne.n	802891a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028956:	4628      	mov	r0, r5
 8028958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802895c:	00000000 	.word	0x00000000

08028960 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028960:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028964:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028968:	f100 0320 	add.w	r3, r0, #32
 802896c:	3030      	adds	r0, #48	; 0x30
 802896e:	ecf3 7a01 	vldmia	r3!, {s15}
 8028972:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028976:	4283      	cmp	r3, r0
 8028978:	edc3 7a03 	vstr	s15, [r3, #12]
 802897c:	d1f7      	bne.n	802896e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802897e:	4770      	bx	lr

08028980 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028980:	b510      	push	{r4, lr}
 8028982:	ed2d 8b02 	vpush	{d8}
 8028986:	4604      	mov	r4, r0
 8028988:	eef0 8a40 	vmov.f32	s17, s0
 802898c:	f001 fbfe 	bl	802a18c <sinf>
 8028990:	eeb0 8a40 	vmov.f32	s16, s0
 8028994:	eeb0 0a68 	vmov.f32	s0, s17
 8028998:	f001 fbac 	bl	802a0f4 <cosf>
 802899c:	f104 0310 	add.w	r3, r4, #16
 80289a0:	f104 0220 	add.w	r2, r4, #32
 80289a4:	eeb1 6a48 	vneg.f32	s12, s16
 80289a8:	edd3 7a04 	vldr	s15, [r3, #16]
 80289ac:	edd3 6a00 	vldr	s13, [r3]
 80289b0:	ee26 7a27 	vmul.f32	s14, s12, s15
 80289b4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80289b8:	eea6 7a80 	vfma.f32	s14, s13, s0
 80289bc:	eee6 7a88 	vfma.f32	s15, s13, s16
 80289c0:	eca3 7a01 	vstmia	r3!, {s14}
 80289c4:	429a      	cmp	r2, r3
 80289c6:	edc3 7a03 	vstr	s15, [r3, #12]
 80289ca:	d1ed      	bne.n	80289a8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 80289cc:	ecbd 8b02 	vpop	{d8}
 80289d0:	4620      	mov	r0, r4
 80289d2:	bd10      	pop	{r4, pc}

080289d4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80289d4:	b510      	push	{r4, lr}
 80289d6:	ed2d 8b02 	vpush	{d8}
 80289da:	4604      	mov	r4, r0
 80289dc:	eef0 8a40 	vmov.f32	s17, s0
 80289e0:	f001 fbd4 	bl	802a18c <sinf>
 80289e4:	eeb0 8a40 	vmov.f32	s16, s0
 80289e8:	eeb0 0a68 	vmov.f32	s0, s17
 80289ec:	f001 fb82 	bl	802a0f4 <cosf>
 80289f0:	4623      	mov	r3, r4
 80289f2:	f104 0210 	add.w	r2, r4, #16
 80289f6:	eeb1 6a48 	vneg.f32	s12, s16
 80289fa:	edd3 7a08 	vldr	s15, [r3, #32]
 80289fe:	edd3 6a00 	vldr	s13, [r3]
 8028a02:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028a06:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a0a:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028a0e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028a12:	eca3 7a01 	vstmia	r3!, {s14}
 8028a16:	429a      	cmp	r2, r3
 8028a18:	edc3 7a07 	vstr	s15, [r3, #28]
 8028a1c:	d1ed      	bne.n	80289fa <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8028a1e:	ecbd 8b02 	vpop	{d8}
 8028a22:	4620      	mov	r0, r4
 8028a24:	bd10      	pop	{r4, pc}

08028a26 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028a26:	b510      	push	{r4, lr}
 8028a28:	ed2d 8b02 	vpush	{d8}
 8028a2c:	4604      	mov	r4, r0
 8028a2e:	eef0 8a40 	vmov.f32	s17, s0
 8028a32:	f001 fbab 	bl	802a18c <sinf>
 8028a36:	eeb0 8a40 	vmov.f32	s16, s0
 8028a3a:	eeb0 0a68 	vmov.f32	s0, s17
 8028a3e:	f001 fb59 	bl	802a0f4 <cosf>
 8028a42:	4623      	mov	r3, r4
 8028a44:	f104 0210 	add.w	r2, r4, #16
 8028a48:	eeb1 6a48 	vneg.f32	s12, s16
 8028a4c:	edd3 7a04 	vldr	s15, [r3, #16]
 8028a50:	edd3 6a00 	vldr	s13, [r3]
 8028a54:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028a58:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a5c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028a60:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028a64:	eca3 7a01 	vstmia	r3!, {s14}
 8028a68:	429a      	cmp	r2, r3
 8028a6a:	edc3 7a03 	vstr	s15, [r3, #12]
 8028a6e:	d1ed      	bne.n	8028a4c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028a70:	ecbd 8b02 	vpop	{d8}
 8028a74:	4620      	mov	r0, r4
 8028a76:	bd10      	pop	{r4, pc}

08028a78 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028a78:	4603      	mov	r3, r0
 8028a7a:	f100 0210 	add.w	r2, r0, #16
 8028a7e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028a82:	edd3 7a00 	vldr	s15, [r3]
 8028a86:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028a8a:	ece3 7a01 	vstmia	r3!, {s15}
 8028a8e:	4293      	cmp	r3, r2
 8028a90:	d1f5      	bne.n	8028a7e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028a92:	4770      	bx	lr

08028a94 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028a94:	f100 0310 	add.w	r3, r0, #16
 8028a98:	f100 0220 	add.w	r2, r0, #32
 8028a9c:	ed93 7a08 	vldr	s14, [r3, #32]
 8028aa0:	edd3 7a00 	vldr	s15, [r3]
 8028aa4:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028aa8:	ece3 7a01 	vstmia	r3!, {s15}
 8028aac:	4293      	cmp	r3, r2
 8028aae:	d1f5      	bne.n	8028a9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028ab0:	4770      	bx	lr

08028ab2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028ab2:	f100 0320 	add.w	r3, r0, #32
 8028ab6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028aba:	ed93 7a04 	vldr	s14, [r3, #16]
 8028abe:	edd3 7a00 	vldr	s15, [r3]
 8028ac2:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028ac6:	ece3 7a01 	vstmia	r3!, {s15}
 8028aca:	4293      	cmp	r3, r2
 8028acc:	d1f5      	bne.n	8028aba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028ace:	4770      	bx	lr

08028ad0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028ad0:	4603      	mov	r3, r0
 8028ad2:	f100 0210 	add.w	r2, r0, #16
 8028ad6:	edd3 7a00 	vldr	s15, [r3]
 8028ada:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028ade:	ece3 7a01 	vstmia	r3!, {s15}
 8028ae2:	4293      	cmp	r3, r2
 8028ae4:	d1f7      	bne.n	8028ad6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028ae6:	4770      	bx	lr

08028ae8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028ae8:	f100 0310 	add.w	r3, r0, #16
 8028aec:	f100 0220 	add.w	r2, r0, #32
 8028af0:	edd3 7a00 	vldr	s15, [r3]
 8028af4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028af8:	ece3 7a01 	vstmia	r3!, {s15}
 8028afc:	4293      	cmp	r3, r2
 8028afe:	d1f7      	bne.n	8028af0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028b00:	4770      	bx	lr

08028b02 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028b02:	f100 0320 	add.w	r3, r0, #32
 8028b06:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028b0a:	edd3 7a00 	vldr	s15, [r3]
 8028b0e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b12:	ece3 7a01 	vstmia	r3!, {s15}
 8028b16:	4293      	cmp	r3, r2
 8028b18:	d1f7      	bne.n	8028b0a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028b1a:	4770      	bx	lr

08028b1c <arm_std_f32>:
 8028b1c:	2901      	cmp	r1, #1
 8028b1e:	d065      	beq.n	8028bec <arm_std_f32+0xd0>
 8028b20:	b530      	push	{r4, r5, lr}
 8028b22:	eddf 6a37 	vldr	s13, [pc, #220]	; 8028c00 <arm_std_f32+0xe4>
 8028b26:	088d      	lsrs	r5, r1, #2
 8028b28:	b083      	sub	sp, #12
 8028b2a:	eef0 7a66 	vmov.f32	s15, s13
 8028b2e:	d028      	beq.n	8028b82 <arm_std_f32+0x66>
 8028b30:	f100 0310 	add.w	r3, r0, #16
 8028b34:	462c      	mov	r4, r5
 8028b36:	ed13 7a04 	vldr	s14, [r3, #-16]
 8028b3a:	ed53 4a03 	vldr	s9, [r3, #-12]
 8028b3e:	ed13 5a02 	vldr	s10, [r3, #-8]
 8028b42:	ed13 6a01 	vldr	s12, [r3, #-4]
 8028b46:	ee27 0a07 	vmul.f32	s0, s14, s14
 8028b4a:	ee64 5aa4 	vmul.f32	s11, s9, s9
 8028b4e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8028b52:	ee70 6a26 	vadd.f32	s13, s0, s13
 8028b56:	ee77 7a24 	vadd.f32	s15, s14, s9
 8028b5a:	ee75 6aa6 	vadd.f32	s13, s11, s13
 8028b5e:	ee25 7a05 	vmul.f32	s14, s10, s10
 8028b62:	ee77 7a85 	vadd.f32	s15, s15, s10
 8028b66:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028b6a:	ee26 7a06 	vmul.f32	s14, s12, s12
 8028b6e:	3c01      	subs	r4, #1
 8028b70:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028b74:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028b78:	f103 0310 	add.w	r3, r3, #16
 8028b7c:	d1db      	bne.n	8028b36 <arm_std_f32+0x1a>
 8028b7e:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 8028b82:	f011 0303 	ands.w	r3, r1, #3
 8028b86:	d009      	beq.n	8028b9c <arm_std_f32+0x80>
 8028b88:	ecb0 7a01 	vldmia	r0!, {s14}
 8028b8c:	ee27 6a07 	vmul.f32	s12, s14, s14
 8028b90:	3b01      	subs	r3, #1
 8028b92:	ee77 7a87 	vadd.f32	s15, s15, s14
 8028b96:	ee76 6a86 	vadd.f32	s13, s13, s12
 8028b9a:	d1f5      	bne.n	8028b88 <arm_std_f32+0x6c>
 8028b9c:	ee07 1a10 	vmov	s14, r1
 8028ba0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8028ba4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8028ba8:	eec7 7a87 	vdiv.f32	s15, s15, s14
 8028bac:	ee37 0a40 	vsub.f32	s0, s14, s0
 8028bb0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028bb4:	ee87 7a00 	vdiv.f32	s14, s14, s0
 8028bb8:	eec6 6a80 	vdiv.f32	s13, s13, s0
 8028bbc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8028bc0:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8028bc4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028bc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028bcc:	da03      	bge.n	8028bd6 <arm_std_f32+0xba>
 8028bce:	2300      	movs	r3, #0
 8028bd0:	6013      	str	r3, [r2, #0]
 8028bd2:	b003      	add	sp, #12
 8028bd4:	bd30      	pop	{r4, r5, pc}
 8028bd6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028bda:	eeb4 0a40 	vcmp.f32	s0, s0
 8028bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028be2:	d106      	bne.n	8028bf2 <arm_std_f32+0xd6>
 8028be4:	ed82 0a00 	vstr	s0, [r2]
 8028be8:	b003      	add	sp, #12
 8028bea:	bd30      	pop	{r4, r5, pc}
 8028bec:	2300      	movs	r3, #0
 8028bee:	6013      	str	r3, [r2, #0]
 8028bf0:	4770      	bx	lr
 8028bf2:	eeb0 0a67 	vmov.f32	s0, s15
 8028bf6:	9201      	str	r2, [sp, #4]
 8028bf8:	f001 f98a 	bl	8029f10 <sqrtf>
 8028bfc:	9a01      	ldr	r2, [sp, #4]
 8028bfe:	e7f1      	b.n	8028be4 <arm_std_f32+0xc8>
 8028c00:	00000000 	.word	0x00000000

08028c04 <arm_mean_f32>:
 8028c04:	b430      	push	{r4, r5}
 8028c06:	088d      	lsrs	r5, r1, #2
 8028c08:	eddf 7a17 	vldr	s15, [pc, #92]	; 8028c68 <arm_mean_f32+0x64>
 8028c0c:	d018      	beq.n	8028c40 <arm_mean_f32+0x3c>
 8028c0e:	f100 0310 	add.w	r3, r0, #16
 8028c12:	462c      	mov	r4, r5
 8028c14:	ed13 7a04 	vldr	s14, [r3, #-16]
 8028c18:	ed53 5a03 	vldr	s11, [r3, #-12]
 8028c1c:	ed13 6a02 	vldr	s12, [r3, #-8]
 8028c20:	ed53 6a01 	vldr	s13, [r3, #-4]
 8028c24:	ee37 7a87 	vadd.f32	s14, s15, s14
 8028c28:	3c01      	subs	r4, #1
 8028c2a:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028c2e:	f103 0310 	add.w	r3, r3, #16
 8028c32:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028c36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028c3a:	d1eb      	bne.n	8028c14 <arm_mean_f32+0x10>
 8028c3c:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 8028c40:	f011 0303 	ands.w	r3, r1, #3
 8028c44:	d005      	beq.n	8028c52 <arm_mean_f32+0x4e>
 8028c46:	ecb0 7a01 	vldmia	r0!, {s14}
 8028c4a:	3b01      	subs	r3, #1
 8028c4c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8028c50:	d1f9      	bne.n	8028c46 <arm_mean_f32+0x42>
 8028c52:	ee07 1a10 	vmov	s14, r1
 8028c56:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8028c5a:	bc30      	pop	{r4, r5}
 8028c5c:	eec7 7a87 	vdiv.f32	s15, s15, s14
 8028c60:	edc2 7a00 	vstr	s15, [r2]
 8028c64:	4770      	bx	lr
 8028c66:	bf00      	nop
 8028c68:	00000000 	.word	0x00000000

08028c6c <arm_max_f32>:
 8028c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028c70:	1e4f      	subs	r7, r1, #1
 8028c72:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028c76:	f100 0e04 	add.w	lr, r0, #4
 8028c7a:	edd0 7a00 	vldr	s15, [r0]
 8028c7e:	d058      	beq.n	8028d32 <arm_max_f32+0xc6>
 8028c80:	3014      	adds	r0, #20
 8028c82:	46c4      	mov	ip, r8
 8028c84:	2604      	movs	r6, #4
 8028c86:	2400      	movs	r4, #0
 8028c88:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028c8c:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028c90:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028c94:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028c98:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ca0:	bfc8      	it	gt
 8028ca2:	eef0 7a46 	vmovgt.f32	s15, s12
 8028ca6:	f1a6 0503 	sub.w	r5, r6, #3
 8028caa:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028cae:	bfc8      	it	gt
 8028cb0:	462c      	movgt	r4, r5
 8028cb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028cb6:	bf48      	it	mi
 8028cb8:	eef0 7a66 	vmovmi.f32	s15, s13
 8028cbc:	f1a6 0502 	sub.w	r5, r6, #2
 8028cc0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028cc4:	bf48      	it	mi
 8028cc6:	462c      	movmi	r4, r5
 8028cc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ccc:	bf48      	it	mi
 8028cce:	eef0 7a47 	vmovmi.f32	s15, s14
 8028cd2:	f106 35ff 	add.w	r5, r6, #4294967295
 8028cd6:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028cda:	bf48      	it	mi
 8028cdc:	462c      	movmi	r4, r5
 8028cde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ce2:	bf48      	it	mi
 8028ce4:	4634      	movmi	r4, r6
 8028ce6:	bf48      	it	mi
 8028ce8:	eef0 7a65 	vmovmi.f32	s15, s11
 8028cec:	f1bc 0c01 	subs.w	ip, ip, #1
 8028cf0:	f106 0604 	add.w	r6, r6, #4
 8028cf4:	f100 0010 	add.w	r0, r0, #16
 8028cf8:	d1c6      	bne.n	8028c88 <arm_max_f32+0x1c>
 8028cfa:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028cfe:	f017 0003 	ands.w	r0, r7, #3
 8028d02:	d018      	beq.n	8028d36 <arm_max_f32+0xca>
 8028d04:	1a08      	subs	r0, r1, r0
 8028d06:	ecbe 7a01 	vldmia	lr!, {s14}
 8028d0a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028d0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d12:	bfc8      	it	gt
 8028d14:	4604      	movgt	r4, r0
 8028d16:	f100 0001 	add.w	r0, r0, #1
 8028d1a:	bfd8      	it	le
 8028d1c:	eeb0 7a67 	vmovle.f32	s14, s15
 8028d20:	4288      	cmp	r0, r1
 8028d22:	eef0 7a47 	vmov.f32	s15, s14
 8028d26:	d1ee      	bne.n	8028d06 <arm_max_f32+0x9a>
 8028d28:	ed82 7a00 	vstr	s14, [r2]
 8028d2c:	601c      	str	r4, [r3, #0]
 8028d2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028d32:	4644      	mov	r4, r8
 8028d34:	e7e3      	b.n	8028cfe <arm_max_f32+0x92>
 8028d36:	eeb0 7a67 	vmov.f32	s14, s15
 8028d3a:	e7f5      	b.n	8028d28 <arm_max_f32+0xbc>

08028d3c <arm_rfft_fast_init_f32>:
 8028d3c:	084b      	lsrs	r3, r1, #1
 8028d3e:	2b80      	cmp	r3, #128	; 0x80
 8028d40:	b410      	push	{r4}
 8028d42:	8201      	strh	r1, [r0, #16]
 8028d44:	8003      	strh	r3, [r0, #0]
 8028d46:	d047      	beq.n	8028dd8 <arm_rfft_fast_init_f32+0x9c>
 8028d48:	d917      	bls.n	8028d7a <arm_rfft_fast_init_f32+0x3e>
 8028d4a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028d4e:	d03d      	beq.n	8028dcc <arm_rfft_fast_init_f32+0x90>
 8028d50:	d929      	bls.n	8028da6 <arm_rfft_fast_init_f32+0x6a>
 8028d52:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028d56:	d020      	beq.n	8028d9a <arm_rfft_fast_init_f32+0x5e>
 8028d58:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028d5c:	d113      	bne.n	8028d86 <arm_rfft_fast_init_f32+0x4a>
 8028d5e:	4921      	ldr	r1, [pc, #132]	; (8028de4 <arm_rfft_fast_init_f32+0xa8>)
 8028d60:	4a21      	ldr	r2, [pc, #132]	; (8028de8 <arm_rfft_fast_init_f32+0xac>)
 8028d62:	4b22      	ldr	r3, [pc, #136]	; (8028dec <arm_rfft_fast_init_f32+0xb0>)
 8028d64:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028d68:	8184      	strh	r4, [r0, #12]
 8028d6a:	6081      	str	r1, [r0, #8]
 8028d6c:	6042      	str	r2, [r0, #4]
 8028d6e:	6143      	str	r3, [r0, #20]
 8028d70:	2000      	movs	r0, #0
 8028d72:	b240      	sxtb	r0, r0
 8028d74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028d78:	4770      	bx	lr
 8028d7a:	2b20      	cmp	r3, #32
 8028d7c:	d01c      	beq.n	8028db8 <arm_rfft_fast_init_f32+0x7c>
 8028d7e:	2b40      	cmp	r3, #64	; 0x40
 8028d80:	d006      	beq.n	8028d90 <arm_rfft_fast_init_f32+0x54>
 8028d82:	2b10      	cmp	r3, #16
 8028d84:	d01d      	beq.n	8028dc2 <arm_rfft_fast_init_f32+0x86>
 8028d86:	20ff      	movs	r0, #255	; 0xff
 8028d88:	b240      	sxtb	r0, r0
 8028d8a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028d8e:	4770      	bx	lr
 8028d90:	2438      	movs	r4, #56	; 0x38
 8028d92:	4917      	ldr	r1, [pc, #92]	; (8028df0 <arm_rfft_fast_init_f32+0xb4>)
 8028d94:	4a17      	ldr	r2, [pc, #92]	; (8028df4 <arm_rfft_fast_init_f32+0xb8>)
 8028d96:	4b18      	ldr	r3, [pc, #96]	; (8028df8 <arm_rfft_fast_init_f32+0xbc>)
 8028d98:	e7e6      	b.n	8028d68 <arm_rfft_fast_init_f32+0x2c>
 8028d9a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028d9e:	4917      	ldr	r1, [pc, #92]	; (8028dfc <arm_rfft_fast_init_f32+0xc0>)
 8028da0:	4a17      	ldr	r2, [pc, #92]	; (8028e00 <arm_rfft_fast_init_f32+0xc4>)
 8028da2:	4b18      	ldr	r3, [pc, #96]	; (8028e04 <arm_rfft_fast_init_f32+0xc8>)
 8028da4:	e7e0      	b.n	8028d68 <arm_rfft_fast_init_f32+0x2c>
 8028da6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028daa:	d1ec      	bne.n	8028d86 <arm_rfft_fast_init_f32+0x4a>
 8028dac:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028db0:	4915      	ldr	r1, [pc, #84]	; (8028e08 <arm_rfft_fast_init_f32+0xcc>)
 8028db2:	4a16      	ldr	r2, [pc, #88]	; (8028e0c <arm_rfft_fast_init_f32+0xd0>)
 8028db4:	4b16      	ldr	r3, [pc, #88]	; (8028e10 <arm_rfft_fast_init_f32+0xd4>)
 8028db6:	e7d7      	b.n	8028d68 <arm_rfft_fast_init_f32+0x2c>
 8028db8:	2430      	movs	r4, #48	; 0x30
 8028dba:	4916      	ldr	r1, [pc, #88]	; (8028e14 <arm_rfft_fast_init_f32+0xd8>)
 8028dbc:	4a16      	ldr	r2, [pc, #88]	; (8028e18 <arm_rfft_fast_init_f32+0xdc>)
 8028dbe:	4b17      	ldr	r3, [pc, #92]	; (8028e1c <arm_rfft_fast_init_f32+0xe0>)
 8028dc0:	e7d2      	b.n	8028d68 <arm_rfft_fast_init_f32+0x2c>
 8028dc2:	2414      	movs	r4, #20
 8028dc4:	4916      	ldr	r1, [pc, #88]	; (8028e20 <arm_rfft_fast_init_f32+0xe4>)
 8028dc6:	4a17      	ldr	r2, [pc, #92]	; (8028e24 <arm_rfft_fast_init_f32+0xe8>)
 8028dc8:	4b17      	ldr	r3, [pc, #92]	; (8028e28 <arm_rfft_fast_init_f32+0xec>)
 8028dca:	e7cd      	b.n	8028d68 <arm_rfft_fast_init_f32+0x2c>
 8028dcc:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028dd0:	4916      	ldr	r1, [pc, #88]	; (8028e2c <arm_rfft_fast_init_f32+0xf0>)
 8028dd2:	4a17      	ldr	r2, [pc, #92]	; (8028e30 <arm_rfft_fast_init_f32+0xf4>)
 8028dd4:	4b17      	ldr	r3, [pc, #92]	; (8028e34 <arm_rfft_fast_init_f32+0xf8>)
 8028dd6:	e7c7      	b.n	8028d68 <arm_rfft_fast_init_f32+0x2c>
 8028dd8:	24d0      	movs	r4, #208	; 0xd0
 8028dda:	4917      	ldr	r1, [pc, #92]	; (8028e38 <arm_rfft_fast_init_f32+0xfc>)
 8028ddc:	4a17      	ldr	r2, [pc, #92]	; (8028e3c <arm_rfft_fast_init_f32+0x100>)
 8028dde:	4b18      	ldr	r3, [pc, #96]	; (8028e40 <arm_rfft_fast_init_f32+0x104>)
 8028de0:	e7c2      	b.n	8028d68 <arm_rfft_fast_init_f32+0x2c>
 8028de2:	bf00      	nop
 8028de4:	0803e8a0 	.word	0x0803e8a0
 8028de8:	0802fa98 	.word	0x0802fa98
 8028dec:	08035c08 	.word	0x08035c08
 8028df0:	08033b98 	.word	0x08033b98
 8028df4:	08040660 	.word	0x08040660
 8028df8:	08042b50 	.word	0x08042b50
 8028dfc:	0803c588 	.word	0x0803c588
 8028e00:	0803a488 	.word	0x0803a488
 8028e04:	08033c08 	.word	0x08033c08
 8028e08:	080427e0 	.word	0x080427e0
 8028e0c:	08039c08 	.word	0x08039c08
 8028e10:	08040860 	.word	0x08040860
 8028e14:	0803d440 	.word	0x0803d440
 8028e18:	0803c488 	.word	0x0803c488
 8028e1c:	08033a98 	.word	0x08033a98
 8028e20:	0803d398 	.word	0x0803d398
 8028e24:	0803a408 	.word	0x0803a408
 8028e28:	0803d3c0 	.word	0x0803d3c0
 8028e2c:	08041060 	.word	0x08041060
 8028e30:	0803d8a0 	.word	0x0803d8a0
 8028e34:	080413e0 	.word	0x080413e0
 8028e38:	08042d50 	.word	0x08042d50
 8028e3c:	0803d4a0 	.word	0x0803d4a0
 8028e40:	080423e0 	.word	0x080423e0

08028e44 <arm_rfft_fast_f32>:
 8028e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028e48:	8a06      	ldrh	r6, [r0, #16]
 8028e4a:	0876      	lsrs	r6, r6, #1
 8028e4c:	4607      	mov	r7, r0
 8028e4e:	4615      	mov	r5, r2
 8028e50:	8006      	strh	r6, [r0, #0]
 8028e52:	460c      	mov	r4, r1
 8028e54:	2b00      	cmp	r3, #0
 8028e56:	d15c      	bne.n	8028f12 <arm_rfft_fast_f32+0xce>
 8028e58:	461a      	mov	r2, r3
 8028e5a:	2301      	movs	r3, #1
 8028e5c:	f000 fbe6 	bl	802962c <arm_cfft_f32>
 8028e60:	edd4 7a00 	vldr	s15, [r4]
 8028e64:	ed94 7a01 	vldr	s14, [r4, #4]
 8028e68:	883e      	ldrh	r6, [r7, #0]
 8028e6a:	6978      	ldr	r0, [r7, #20]
 8028e6c:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028e70:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028e74:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028e78:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028e7c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028e80:	3e01      	subs	r6, #1
 8028e82:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028e86:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028e8a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028e8e:	ed85 7a00 	vstr	s14, [r5]
 8028e92:	edc5 7a01 	vstr	s15, [r5, #4]
 8028e96:	3010      	adds	r0, #16
 8028e98:	f105 0210 	add.w	r2, r5, #16
 8028e9c:	3b08      	subs	r3, #8
 8028e9e:	f104 0110 	add.w	r1, r4, #16
 8028ea2:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028ea6:	ed93 5a02 	vldr	s10, [r3, #8]
 8028eaa:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028eae:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028eb2:	edd3 5a03 	vldr	s11, [r3, #12]
 8028eb6:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028eba:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028ebe:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028ec2:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028ec6:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028eca:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028ece:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028ed2:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028ed6:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028eda:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028ede:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028ee2:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028ee6:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028eea:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028eee:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028ef2:	3e01      	subs	r6, #1
 8028ef4:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028ef8:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028efc:	f1a3 0308 	sub.w	r3, r3, #8
 8028f00:	f101 0108 	add.w	r1, r1, #8
 8028f04:	f100 0008 	add.w	r0, r0, #8
 8028f08:	f102 0208 	add.w	r2, r2, #8
 8028f0c:	d1c9      	bne.n	8028ea2 <arm_rfft_fast_f32+0x5e>
 8028f0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028f12:	edd1 7a00 	vldr	s15, [r1]
 8028f16:	edd1 6a01 	vldr	s13, [r1, #4]
 8028f1a:	6941      	ldr	r1, [r0, #20]
 8028f1c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028f20:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028f24:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028f28:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028f2c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028f30:	3e01      	subs	r6, #1
 8028f32:	ed82 7a00 	vstr	s14, [r2]
 8028f36:	edc2 7a01 	vstr	s15, [r2, #4]
 8028f3a:	00f0      	lsls	r0, r6, #3
 8028f3c:	b3ee      	cbz	r6, 8028fba <arm_rfft_fast_f32+0x176>
 8028f3e:	3808      	subs	r0, #8
 8028f40:	f101 0e10 	add.w	lr, r1, #16
 8028f44:	4420      	add	r0, r4
 8028f46:	f104 0110 	add.w	r1, r4, #16
 8028f4a:	f102 0c10 	add.w	ip, r2, #16
 8028f4e:	ed90 7a02 	vldr	s14, [r0, #8]
 8028f52:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028f56:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028f5a:	ed90 4a03 	vldr	s8, [r0, #12]
 8028f5e:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028f62:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028f66:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028f6a:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028f6e:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028f72:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028f76:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028f7a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028f7e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028f82:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028f86:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028f8a:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028f8e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028f92:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028f96:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028f9a:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028f9e:	3e01      	subs	r6, #1
 8028fa0:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028fa4:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028fa8:	f1a0 0008 	sub.w	r0, r0, #8
 8028fac:	f101 0108 	add.w	r1, r1, #8
 8028fb0:	f10e 0e08 	add.w	lr, lr, #8
 8028fb4:	f10c 0c08 	add.w	ip, ip, #8
 8028fb8:	d1c9      	bne.n	8028f4e <arm_rfft_fast_f32+0x10a>
 8028fba:	4638      	mov	r0, r7
 8028fbc:	4629      	mov	r1, r5
 8028fbe:	461a      	mov	r2, r3
 8028fc0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028fc4:	2301      	movs	r3, #1
 8028fc6:	f000 bb31 	b.w	802962c <arm_cfft_f32>
 8028fca:	bf00      	nop

08028fcc <arm_cfft_radix8by2_f32>:
 8028fcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028fd0:	ed2d 8b08 	vpush	{d8-d11}
 8028fd4:	f8b0 e000 	ldrh.w	lr, [r0]
 8028fd8:	6842      	ldr	r2, [r0, #4]
 8028fda:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028fde:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028fe2:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028fe6:	4607      	mov	r7, r0
 8028fe8:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8028fec:	f000 80af 	beq.w	802914e <arm_cfft_radix8by2_f32+0x182>
 8028ff0:	3310      	adds	r3, #16
 8028ff2:	18ce      	adds	r6, r1, r3
 8028ff4:	3210      	adds	r2, #16
 8028ff6:	4443      	add	r3, r8
 8028ff8:	f101 0510 	add.w	r5, r1, #16
 8028ffc:	f108 0410 	add.w	r4, r8, #16
 8029000:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029004:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029008:	ed53 3a03 	vldr	s7, [r3, #-12]
 802900c:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029010:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029014:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029018:	ed14 0a02 	vldr	s0, [r4, #-8]
 802901c:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029020:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029024:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029028:	ed15 7a01 	vldr	s14, [r5, #-4]
 802902c:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029030:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029034:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029038:	ed16 1a01 	vldr	s2, [r6, #-4]
 802903c:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029040:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029044:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029048:	ee37 aa27 	vadd.f32	s20, s14, s15
 802904c:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029050:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029054:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029058:	ee74 aa80 	vadd.f32	s21, s9, s0
 802905c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029060:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029064:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029068:	ed45 aa02 	vstr	s21, [r5, #-8]
 802906c:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029070:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029074:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029078:	ed06 9a03 	vstr	s18, [r6, #-12]
 802907c:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029080:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029084:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029088:	ed12 6a03 	vldr	s12, [r2, #-12]
 802908c:	ed52 2a04 	vldr	s5, [r2, #-16]
 8029090:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029094:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029098:	ee26 8a86 	vmul.f32	s16, s13, s12
 802909c:	ee24 2a06 	vmul.f32	s4, s8, s12
 80290a0:	ee63 1a22 	vmul.f32	s3, s6, s5
 80290a4:	ee24 4a22 	vmul.f32	s8, s8, s5
 80290a8:	ee23 3a06 	vmul.f32	s6, s6, s12
 80290ac:	ee66 6aa2 	vmul.f32	s13, s13, s5
 80290b0:	ee23 6a86 	vmul.f32	s12, s7, s12
 80290b4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80290b8:	ee36 6a04 	vadd.f32	s12, s12, s8
 80290bc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80290c0:	ee72 3a63 	vsub.f32	s7, s4, s7
 80290c4:	ee71 2a88 	vadd.f32	s5, s3, s16
 80290c8:	ed44 6a03 	vstr	s13, [r4, #-12]
 80290cc:	ed44 2a04 	vstr	s5, [r4, #-16]
 80290d0:	ed43 3a04 	vstr	s7, [r3, #-16]
 80290d4:	ed03 6a03 	vstr	s12, [r3, #-12]
 80290d8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80290dc:	ee75 6ae0 	vsub.f32	s13, s11, s1
 80290e0:	ed12 7a01 	vldr	s14, [r2, #-4]
 80290e4:	ed52 5a02 	vldr	s11, [r2, #-8]
 80290e8:	ee35 6a41 	vsub.f32	s12, s10, s2
 80290ec:	ee74 4ac0 	vsub.f32	s9, s9, s0
 80290f0:	ee67 3a87 	vmul.f32	s7, s15, s14
 80290f4:	ee26 5a87 	vmul.f32	s10, s13, s14
 80290f8:	ee24 4aa5 	vmul.f32	s8, s9, s11
 80290fc:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8029100:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029104:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029108:	ee26 7a07 	vmul.f32	s14, s12, s14
 802910c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8029110:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029114:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029118:	ee35 6a46 	vsub.f32	s12, s10, s12
 802911c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8029120:	f1be 0e01 	subs.w	lr, lr, #1
 8029124:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029128:	f105 0510 	add.w	r5, r5, #16
 802912c:	ed44 7a01 	vstr	s15, [r4, #-4]
 8029130:	f106 0610 	add.w	r6, r6, #16
 8029134:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029138:	ed03 7a01 	vstr	s14, [r3, #-4]
 802913c:	f102 0210 	add.w	r2, r2, #16
 8029140:	f104 0410 	add.w	r4, r4, #16
 8029144:	f103 0310 	add.w	r3, r3, #16
 8029148:	f47f af5a 	bne.w	8029000 <arm_cfft_radix8by2_f32+0x34>
 802914c:	687a      	ldr	r2, [r7, #4]
 802914e:	fa1f f48c 	uxth.w	r4, ip
 8029152:	4608      	mov	r0, r1
 8029154:	2302      	movs	r3, #2
 8029156:	4621      	mov	r1, r4
 8029158:	f000 fbca 	bl	80298f0 <arm_radix8_butterfly_f32>
 802915c:	ecbd 8b08 	vpop	{d8-d11}
 8029160:	4640      	mov	r0, r8
 8029162:	4621      	mov	r1, r4
 8029164:	687a      	ldr	r2, [r7, #4]
 8029166:	2302      	movs	r3, #2
 8029168:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802916c:	f000 bbc0 	b.w	80298f0 <arm_radix8_butterfly_f32>

08029170 <arm_cfft_radix8by4_f32>:
 8029170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029174:	ed2d 8b0a 	vpush	{d8-d12}
 8029178:	8802      	ldrh	r2, [r0, #0]
 802917a:	ed91 6a00 	vldr	s12, [r1]
 802917e:	b08f      	sub	sp, #60	; 0x3c
 8029180:	460f      	mov	r7, r1
 8029182:	0852      	lsrs	r2, r2, #1
 8029184:	0093      	lsls	r3, r2, #2
 8029186:	900c      	str	r0, [sp, #48]	; 0x30
 8029188:	9103      	str	r1, [sp, #12]
 802918a:	6841      	ldr	r1, [r0, #4]
 802918c:	ed97 7a01 	vldr	s14, [r7, #4]
 8029190:	4638      	mov	r0, r7
 8029192:	4418      	add	r0, r3
 8029194:	4606      	mov	r6, r0
 8029196:	9009      	str	r0, [sp, #36]	; 0x24
 8029198:	4418      	add	r0, r3
 802919a:	edd0 6a00 	vldr	s13, [r0]
 802919e:	edd6 3a00 	vldr	s7, [r6]
 80291a2:	edd6 2a01 	vldr	s5, [r6, #4]
 80291a6:	edd0 7a01 	vldr	s15, [r0, #4]
 80291aa:	900a      	str	r0, [sp, #40]	; 0x28
 80291ac:	ee76 5a26 	vadd.f32	s11, s12, s13
 80291b0:	4604      	mov	r4, r0
 80291b2:	4625      	mov	r5, r4
 80291b4:	441c      	add	r4, r3
 80291b6:	ed94 4a00 	vldr	s8, [r4]
 80291ba:	ed94 5a01 	vldr	s10, [r4, #4]
 80291be:	9401      	str	r4, [sp, #4]
 80291c0:	ee75 4aa3 	vadd.f32	s9, s11, s7
 80291c4:	4630      	mov	r0, r6
 80291c6:	ee74 4a24 	vadd.f32	s9, s8, s9
 80291ca:	463e      	mov	r6, r7
 80291cc:	ee14 ea90 	vmov	lr, s9
 80291d0:	ee76 6a66 	vsub.f32	s13, s12, s13
 80291d4:	f846 eb08 	str.w	lr, [r6], #8
 80291d8:	ee37 6a27 	vadd.f32	s12, s14, s15
 80291dc:	edd0 4a01 	vldr	s9, [r0, #4]
 80291e0:	9604      	str	r6, [sp, #16]
 80291e2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80291e6:	9e01      	ldr	r6, [sp, #4]
 80291e8:	ee32 3aa6 	vadd.f32	s6, s5, s13
 80291ec:	ed96 2a01 	vldr	s4, [r6, #4]
 80291f0:	ee36 7a24 	vadd.f32	s14, s12, s9
 80291f4:	ee75 5ae3 	vsub.f32	s11, s11, s7
 80291f8:	ee77 4ae3 	vsub.f32	s9, s15, s7
 80291fc:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029200:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029204:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029208:	ee73 3a45 	vsub.f32	s7, s6, s10
 802920c:	4604      	mov	r4, r0
 802920e:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029212:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029216:	46a3      	mov	fp, r4
 8029218:	ee37 7a02 	vadd.f32	s14, s14, s4
 802921c:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029220:	ee13 8a90 	vmov	r8, s7
 8029224:	46a4      	mov	ip, r4
 8029226:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802922a:	ed87 7a01 	vstr	s14, [r7, #4]
 802922e:	f84b 8b08 	str.w	r8, [fp], #8
 8029232:	f1ac 0704 	sub.w	r7, ip, #4
 8029236:	ed8c 5a01 	vstr	s10, [ip, #4]
 802923a:	f101 0c08 	add.w	ip, r1, #8
 802923e:	462c      	mov	r4, r5
 8029240:	f8cd c014 	str.w	ip, [sp, #20]
 8029244:	ee15 ca90 	vmov	ip, s11
 8029248:	f844 cb08 	str.w	ip, [r4], #8
 802924c:	9407      	str	r4, [sp, #28]
 802924e:	f101 0410 	add.w	r4, r1, #16
 8029252:	ed85 6a01 	vstr	s12, [r5, #4]
 8029256:	0852      	lsrs	r2, r2, #1
 8029258:	9402      	str	r4, [sp, #8]
 802925a:	462c      	mov	r4, r5
 802925c:	f101 0518 	add.w	r5, r1, #24
 8029260:	920b      	str	r2, [sp, #44]	; 0x2c
 8029262:	46b2      	mov	sl, r6
 8029264:	9506      	str	r5, [sp, #24]
 8029266:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802926a:	3a02      	subs	r2, #2
 802926c:	ee16 5a90 	vmov	r5, s13
 8029270:	46b6      	mov	lr, r6
 8029272:	4630      	mov	r0, r6
 8029274:	0852      	lsrs	r2, r2, #1
 8029276:	f84a 5b08 	str.w	r5, [sl], #8
 802927a:	f1a0 0604 	sub.w	r6, r0, #4
 802927e:	edce 7a01 	vstr	s15, [lr, #4]
 8029282:	9208      	str	r2, [sp, #32]
 8029284:	f000 8130 	beq.w	80294e8 <arm_cfft_radix8by4_f32+0x378>
 8029288:	4691      	mov	r9, r2
 802928a:	9a03      	ldr	r2, [sp, #12]
 802928c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8029290:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029294:	3b08      	subs	r3, #8
 8029296:	f102 0510 	add.w	r5, r2, #16
 802929a:	f101 0c20 	add.w	ip, r1, #32
 802929e:	f1a4 020c 	sub.w	r2, r4, #12
 80292a2:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 80292a6:	4433      	add	r3, r6
 80292a8:	3410      	adds	r4, #16
 80292aa:	4650      	mov	r0, sl
 80292ac:	4659      	mov	r1, fp
 80292ae:	ed55 3a02 	vldr	s7, [r5, #-8]
 80292b2:	ed14 5a02 	vldr	s10, [r4, #-8]
 80292b6:	ed91 7a00 	vldr	s14, [r1]
 80292ba:	edd0 7a00 	vldr	s15, [r0]
 80292be:	ed15 4a01 	vldr	s8, [r5, #-4]
 80292c2:	ed54 5a01 	vldr	s11, [r4, #-4]
 80292c6:	edd0 6a01 	vldr	s13, [r0, #4]
 80292ca:	ed91 6a01 	vldr	s12, [r1, #4]
 80292ce:	ee33 8a85 	vadd.f32	s16, s7, s10
 80292d2:	ee34 0a25 	vadd.f32	s0, s8, s11
 80292d6:	ee78 4a07 	vadd.f32	s9, s16, s14
 80292da:	ee74 5a65 	vsub.f32	s11, s8, s11
 80292de:	ee77 4aa4 	vadd.f32	s9, s15, s9
 80292e2:	ee33 5ac5 	vsub.f32	s10, s7, s10
 80292e6:	ed45 4a02 	vstr	s9, [r5, #-8]
 80292ea:	edd1 4a01 	vldr	s9, [r1, #4]
 80292ee:	ed90 4a01 	vldr	s8, [r0, #4]
 80292f2:	ee70 4a24 	vadd.f32	s9, s0, s9
 80292f6:	ee76 aa05 	vadd.f32	s21, s12, s10
 80292fa:	ee74 4a84 	vadd.f32	s9, s9, s8
 80292fe:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029302:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029306:	edd6 1a00 	vldr	s3, [r6]
 802930a:	edd7 0a00 	vldr	s1, [r7]
 802930e:	ed92 4a02 	vldr	s8, [r2, #8]
 8029312:	edd3 3a02 	vldr	s7, [r3, #8]
 8029316:	ed93 2a01 	vldr	s4, [r3, #4]
 802931a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802931e:	edd2 2a01 	vldr	s5, [r2, #4]
 8029322:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029326:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802932a:	ee39 3a81 	vadd.f32	s6, s19, s2
 802932e:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029332:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029336:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802933a:	ee7a aae6 	vsub.f32	s21, s21, s13
 802933e:	ee18 aa90 	vmov	sl, s17
 8029342:	f847 a908 	str.w	sl, [r7], #-8
 8029346:	edd2 8a01 	vldr	s17, [r2, #4]
 802934a:	ed93 9a01 	vldr	s18, [r3, #4]
 802934e:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029352:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029356:	ee78 8a89 	vadd.f32	s17, s17, s18
 802935a:	ee74 0a63 	vsub.f32	s1, s8, s7
 802935e:	edc7 8a01 	vstr	s17, [r7, #4]
 8029362:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029366:	ed58 8a01 	vldr	s17, [r8, #-4]
 802936a:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802936e:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029372:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029376:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802937a:	ee30 9a81 	vadd.f32	s18, s1, s2
 802937e:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029382:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029386:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802938a:	ee69 baa8 	vmul.f32	s23, s19, s17
 802938e:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029392:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029396:	ee69 8a28 	vmul.f32	s17, s18, s17
 802939a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802939e:	ee1c aa10 	vmov	sl, s24
 80293a2:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80293a6:	f841 ab08 	str.w	sl, [r1], #8
 80293aa:	ee3a aa6a 	vsub.f32	s20, s20, s21
 80293ae:	ee3b bacb 	vsub.f32	s22, s23, s22
 80293b2:	ee34 4ac4 	vsub.f32	s8, s9, s8
 80293b6:	ee33 3a62 	vsub.f32	s6, s6, s5
 80293ba:	ed01 aa01 	vstr	s20, [r1, #-4]
 80293be:	edc2 8a01 	vstr	s17, [r2, #4]
 80293c2:	ed82 ba02 	vstr	s22, [r2, #8]
 80293c6:	ed5c 4a04 	vldr	s9, [ip, #-16]
 80293ca:	ee74 3a63 	vsub.f32	s7, s8, s7
 80293ce:	ee38 8a47 	vsub.f32	s16, s16, s14
 80293d2:	ed1c 4a03 	vldr	s8, [ip, #-12]
 80293d6:	ee30 0a46 	vsub.f32	s0, s0, s12
 80293da:	ee33 3a42 	vsub.f32	s6, s6, s4
 80293de:	ee38 8a67 	vsub.f32	s16, s16, s15
 80293e2:	ee30 0a66 	vsub.f32	s0, s0, s13
 80293e6:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 80293ea:	ee63 8a04 	vmul.f32	s17, s6, s8
 80293ee:	ee28 aa24 	vmul.f32	s20, s16, s9
 80293f2:	ee60 9a04 	vmul.f32	s19, s0, s8
 80293f6:	ee28 8a04 	vmul.f32	s16, s16, s8
 80293fa:	ee20 0a24 	vmul.f32	s0, s0, s9
 80293fe:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029402:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029406:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802940a:	ee14 aa10 	vmov	sl, s8
 802940e:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029412:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029416:	ed44 9a02 	vstr	s19, [r4, #-8]
 802941a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802941e:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029422:	f846 a908 	str.w	sl, [r6], #-8
 8029426:	ee35 6a46 	vsub.f32	s12, s10, s12
 802942a:	ee35 7a87 	vadd.f32	s14, s11, s14
 802942e:	edc6 3a01 	vstr	s7, [r6, #4]
 8029432:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029436:	ee77 7a67 	vsub.f32	s15, s14, s15
 802943a:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802943e:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029442:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029446:	ee26 5a87 	vmul.f32	s10, s13, s14
 802944a:	ee72 2a62 	vsub.f32	s5, s4, s5
 802944e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029452:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029456:	ee75 5a25 	vadd.f32	s11, s10, s11
 802945a:	ee62 0a86 	vmul.f32	s1, s5, s12
 802945e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029462:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029466:	ee21 6a06 	vmul.f32	s12, s2, s12
 802946a:	ee62 2a87 	vmul.f32	s5, s5, s14
 802946e:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029472:	ee15 aa90 	vmov	sl, s11
 8029476:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802947a:	f840 ab08 	str.w	sl, [r0], #8
 802947e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029482:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029486:	f1b9 0901 	subs.w	r9, r9, #1
 802948a:	ed40 7a01 	vstr	s15, [r0, #-4]
 802948e:	f105 0508 	add.w	r5, r5, #8
 8029492:	ed83 1a02 	vstr	s2, [r3, #8]
 8029496:	edc3 2a01 	vstr	s5, [r3, #4]
 802949a:	f108 0808 	add.w	r8, r8, #8
 802949e:	f1a2 0208 	sub.w	r2, r2, #8
 80294a2:	f10c 0c10 	add.w	ip, ip, #16
 80294a6:	f104 0408 	add.w	r4, r4, #8
 80294aa:	f10e 0e18 	add.w	lr, lr, #24
 80294ae:	f1a3 0308 	sub.w	r3, r3, #8
 80294b2:	f47f aefc 	bne.w	80292ae <arm_cfft_radix8by4_f32+0x13e>
 80294b6:	9908      	ldr	r1, [sp, #32]
 80294b8:	9802      	ldr	r0, [sp, #8]
 80294ba:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 80294be:	00cb      	lsls	r3, r1, #3
 80294c0:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 80294c4:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80294c8:	9102      	str	r1, [sp, #8]
 80294ca:	9904      	ldr	r1, [sp, #16]
 80294cc:	4419      	add	r1, r3
 80294ce:	9104      	str	r1, [sp, #16]
 80294d0:	9905      	ldr	r1, [sp, #20]
 80294d2:	4419      	add	r1, r3
 80294d4:	9105      	str	r1, [sp, #20]
 80294d6:	9907      	ldr	r1, [sp, #28]
 80294d8:	449b      	add	fp, r3
 80294da:	4419      	add	r1, r3
 80294dc:	449a      	add	sl, r3
 80294de:	9b06      	ldr	r3, [sp, #24]
 80294e0:	9107      	str	r1, [sp, #28]
 80294e2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80294e6:	9306      	str	r3, [sp, #24]
 80294e8:	9a04      	ldr	r2, [sp, #16]
 80294ea:	9807      	ldr	r0, [sp, #28]
 80294ec:	edd2 3a00 	vldr	s7, [r2]
 80294f0:	ed90 4a00 	vldr	s8, [r0]
 80294f4:	eddb 7a00 	vldr	s15, [fp]
 80294f8:	ed9a 3a00 	vldr	s6, [sl]
 80294fc:	edd2 4a01 	vldr	s9, [r2, #4]
 8029500:	ed90 7a01 	vldr	s14, [r0, #4]
 8029504:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029508:	edda 5a01 	vldr	s11, [sl, #4]
 802950c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029510:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029512:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029516:	ee34 6a87 	vadd.f32	s12, s9, s14
 802951a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802951e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029522:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029526:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802952a:	ed82 5a00 	vstr	s10, [r2]
 802952e:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029532:	edda 4a01 	vldr	s9, [sl, #4]
 8029536:	ee36 5a05 	vadd.f32	s10, s12, s10
 802953a:	ee72 3a04 	vadd.f32	s7, s4, s8
 802953e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029542:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029546:	ed82 5a01 	vstr	s10, [r2, #4]
 802954a:	9a05      	ldr	r2, [sp, #20]
 802954c:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029550:	edd2 1a00 	vldr	s3, [r2]
 8029554:	edd2 2a01 	vldr	s5, [r2, #4]
 8029558:	9a02      	ldr	r2, [sp, #8]
 802955a:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802955e:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029562:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029566:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802956a:	ee65 2a22 	vmul.f32	s5, s10, s5
 802956e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029572:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029576:	ee35 5a63 	vsub.f32	s10, s10, s7
 802957a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802957e:	edcb 2a00 	vstr	s5, [fp]
 8029582:	ed8b 5a01 	vstr	s10, [fp, #4]
 8029586:	edd2 3a01 	vldr	s7, [r2, #4]
 802958a:	ed92 5a00 	vldr	s10, [r2]
 802958e:	9a06      	ldr	r2, [sp, #24]
 8029590:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029594:	ee36 6a65 	vsub.f32	s12, s12, s11
 8029598:	ee66 4a85 	vmul.f32	s9, s13, s10
 802959c:	ee26 5a05 	vmul.f32	s10, s12, s10
 80295a0:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80295a4:	ee26 6a23 	vmul.f32	s12, s12, s7
 80295a8:	ee75 6a66 	vsub.f32	s13, s10, s13
 80295ac:	ee34 6a86 	vadd.f32	s12, s9, s12
 80295b0:	ee34 4a42 	vsub.f32	s8, s8, s4
 80295b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80295b8:	edc0 6a01 	vstr	s13, [r0, #4]
 80295bc:	ed80 6a00 	vstr	s12, [r0]
 80295c0:	ed92 6a01 	vldr	s12, [r2, #4]
 80295c4:	9803      	ldr	r0, [sp, #12]
 80295c6:	ee77 7a43 	vsub.f32	s15, s14, s6
 80295ca:	ee75 5a84 	vadd.f32	s11, s11, s8
 80295ce:	ed92 7a00 	vldr	s14, [r2]
 80295d2:	ee65 6a87 	vmul.f32	s13, s11, s14
 80295d6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80295da:	ee65 5a86 	vmul.f32	s11, s11, s12
 80295de:	ee67 7a86 	vmul.f32	s15, s15, s12
 80295e2:	ee77 5a65 	vsub.f32	s11, s14, s11
 80295e6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80295ea:	edca 5a01 	vstr	s11, [sl, #4]
 80295ee:	edca 7a00 	vstr	s15, [sl]
 80295f2:	6872      	ldr	r2, [r6, #4]
 80295f4:	4621      	mov	r1, r4
 80295f6:	2304      	movs	r3, #4
 80295f8:	f000 f97a 	bl	80298f0 <arm_radix8_butterfly_f32>
 80295fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80295fe:	6872      	ldr	r2, [r6, #4]
 8029600:	4621      	mov	r1, r4
 8029602:	2304      	movs	r3, #4
 8029604:	f000 f974 	bl	80298f0 <arm_radix8_butterfly_f32>
 8029608:	980a      	ldr	r0, [sp, #40]	; 0x28
 802960a:	6872      	ldr	r2, [r6, #4]
 802960c:	4621      	mov	r1, r4
 802960e:	2304      	movs	r3, #4
 8029610:	f000 f96e 	bl	80298f0 <arm_radix8_butterfly_f32>
 8029614:	9801      	ldr	r0, [sp, #4]
 8029616:	6872      	ldr	r2, [r6, #4]
 8029618:	4621      	mov	r1, r4
 802961a:	2304      	movs	r3, #4
 802961c:	b00f      	add	sp, #60	; 0x3c
 802961e:	ecbd 8b0a 	vpop	{d8-d12}
 8029622:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029626:	f000 b963 	b.w	80298f0 <arm_radix8_butterfly_f32>
 802962a:	bf00      	nop

0802962c <arm_cfft_f32>:
 802962c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029630:	2a01      	cmp	r2, #1
 8029632:	4606      	mov	r6, r0
 8029634:	4617      	mov	r7, r2
 8029636:	460c      	mov	r4, r1
 8029638:	4698      	mov	r8, r3
 802963a:	8805      	ldrh	r5, [r0, #0]
 802963c:	d054      	beq.n	80296e8 <arm_cfft_f32+0xbc>
 802963e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029642:	d04c      	beq.n	80296de <arm_cfft_f32+0xb2>
 8029644:	d916      	bls.n	8029674 <arm_cfft_f32+0x48>
 8029646:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802964a:	d01a      	beq.n	8029682 <arm_cfft_f32+0x56>
 802964c:	d95c      	bls.n	8029708 <arm_cfft_f32+0xdc>
 802964e:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029652:	d044      	beq.n	80296de <arm_cfft_f32+0xb2>
 8029654:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029658:	d105      	bne.n	8029666 <arm_cfft_f32+0x3a>
 802965a:	4620      	mov	r0, r4
 802965c:	4629      	mov	r1, r5
 802965e:	6872      	ldr	r2, [r6, #4]
 8029660:	2301      	movs	r3, #1
 8029662:	f000 f945 	bl	80298f0 <arm_radix8_butterfly_f32>
 8029666:	f1b8 0f00 	cmp.w	r8, #0
 802966a:	d111      	bne.n	8029690 <arm_cfft_f32+0x64>
 802966c:	2f01      	cmp	r7, #1
 802966e:	d016      	beq.n	802969e <arm_cfft_f32+0x72>
 8029670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029674:	2d20      	cmp	r5, #32
 8029676:	d032      	beq.n	80296de <arm_cfft_f32+0xb2>
 8029678:	d94a      	bls.n	8029710 <arm_cfft_f32+0xe4>
 802967a:	2d40      	cmp	r5, #64	; 0x40
 802967c:	d0ed      	beq.n	802965a <arm_cfft_f32+0x2e>
 802967e:	2d80      	cmp	r5, #128	; 0x80
 8029680:	d1f1      	bne.n	8029666 <arm_cfft_f32+0x3a>
 8029682:	4630      	mov	r0, r6
 8029684:	4621      	mov	r1, r4
 8029686:	f7ff fca1 	bl	8028fcc <arm_cfft_radix8by2_f32>
 802968a:	f1b8 0f00 	cmp.w	r8, #0
 802968e:	d0ed      	beq.n	802966c <arm_cfft_f32+0x40>
 8029690:	4620      	mov	r0, r4
 8029692:	89b1      	ldrh	r1, [r6, #12]
 8029694:	68b2      	ldr	r2, [r6, #8]
 8029696:	f7d6 fdab 	bl	80001f0 <arm_bitreversal_32>
 802969a:	2f01      	cmp	r7, #1
 802969c:	d1e8      	bne.n	8029670 <arm_cfft_f32+0x44>
 802969e:	ee07 5a90 	vmov	s15, r5
 80296a2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80296a6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80296aa:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 80296ae:	2d00      	cmp	r5, #0
 80296b0:	d0de      	beq.n	8029670 <arm_cfft_f32+0x44>
 80296b2:	f104 0108 	add.w	r1, r4, #8
 80296b6:	2300      	movs	r3, #0
 80296b8:	3301      	adds	r3, #1
 80296ba:	429d      	cmp	r5, r3
 80296bc:	f101 0108 	add.w	r1, r1, #8
 80296c0:	ed11 7a04 	vldr	s14, [r1, #-16]
 80296c4:	ed51 7a03 	vldr	s15, [r1, #-12]
 80296c8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80296cc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80296d0:	ed01 7a04 	vstr	s14, [r1, #-16]
 80296d4:	ed41 7a03 	vstr	s15, [r1, #-12]
 80296d8:	d1ee      	bne.n	80296b8 <arm_cfft_f32+0x8c>
 80296da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80296de:	4630      	mov	r0, r6
 80296e0:	4621      	mov	r1, r4
 80296e2:	f7ff fd45 	bl	8029170 <arm_cfft_radix8by4_f32>
 80296e6:	e7be      	b.n	8029666 <arm_cfft_f32+0x3a>
 80296e8:	b1ad      	cbz	r5, 8029716 <arm_cfft_f32+0xea>
 80296ea:	f101 030c 	add.w	r3, r1, #12
 80296ee:	2200      	movs	r2, #0
 80296f0:	ed53 7a02 	vldr	s15, [r3, #-8]
 80296f4:	3201      	adds	r2, #1
 80296f6:	eef1 7a67 	vneg.f32	s15, s15
 80296fa:	4295      	cmp	r5, r2
 80296fc:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029700:	f103 0308 	add.w	r3, r3, #8
 8029704:	d1f4      	bne.n	80296f0 <arm_cfft_f32+0xc4>
 8029706:	e79a      	b.n	802963e <arm_cfft_f32+0x12>
 8029708:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802970c:	d0a5      	beq.n	802965a <arm_cfft_f32+0x2e>
 802970e:	e7aa      	b.n	8029666 <arm_cfft_f32+0x3a>
 8029710:	2d10      	cmp	r5, #16
 8029712:	d0b6      	beq.n	8029682 <arm_cfft_f32+0x56>
 8029714:	e7a7      	b.n	8029666 <arm_cfft_f32+0x3a>
 8029716:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802971a:	d894      	bhi.n	8029646 <arm_cfft_f32+0x1a>
 802971c:	e7aa      	b.n	8029674 <arm_cfft_f32+0x48>
 802971e:	bf00      	nop

08029720 <arm_cmplx_mag_f32>:
 8029720:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029724:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029728:	b084      	sub	sp, #16
 802972a:	d07f      	beq.n	802982c <arm_cmplx_mag_f32+0x10c>
 802972c:	2700      	movs	r7, #0
 802972e:	f100 0420 	add.w	r4, r0, #32
 8029732:	f101 0510 	add.w	r5, r1, #16
 8029736:	4646      	mov	r6, r8
 8029738:	e05a      	b.n	80297f0 <arm_cmplx_mag_f32+0xd0>
 802973a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802973e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029746:	f040 80a4 	bne.w	8029892 <arm_cmplx_mag_f32+0x172>
 802974a:	ed05 0a04 	vstr	s0, [r5, #-16]
 802974e:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029752:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029756:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802975a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802975e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029762:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802976a:	f2c0 808f 	blt.w	802988c <arm_cmplx_mag_f32+0x16c>
 802976e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029772:	eeb4 0a40 	vcmp.f32	s0, s0
 8029776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802977a:	f040 80af 	bne.w	80298dc <arm_cmplx_mag_f32+0x1bc>
 802977e:	ed05 0a03 	vstr	s0, [r5, #-12]
 8029782:	ed54 7a04 	vldr	s15, [r4, #-16]
 8029786:	ed14 0a03 	vldr	s0, [r4, #-12]
 802978a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802978e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029792:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029796:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802979a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802979e:	db72      	blt.n	8029886 <arm_cmplx_mag_f32+0x166>
 80297a0:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80297a4:	eeb4 0a40 	vcmp.f32	s0, s0
 80297a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297ac:	f040 808c 	bne.w	80298c8 <arm_cmplx_mag_f32+0x1a8>
 80297b0:	ed05 0a02 	vstr	s0, [r5, #-8]
 80297b4:	ed54 7a02 	vldr	s15, [r4, #-8]
 80297b8:	ed14 0a01 	vldr	s0, [r4, #-4]
 80297bc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80297c0:	ee20 0a00 	vmul.f32	s0, s0, s0
 80297c4:	ee77 7a80 	vadd.f32	s15, s15, s0
 80297c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80297cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297d0:	db20      	blt.n	8029814 <arm_cmplx_mag_f32+0xf4>
 80297d2:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80297d6:	eeb4 0a40 	vcmp.f32	s0, s0
 80297da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297de:	d169      	bne.n	80298b4 <arm_cmplx_mag_f32+0x194>
 80297e0:	3e01      	subs	r6, #1
 80297e2:	ed05 0a01 	vstr	s0, [r5, #-4]
 80297e6:	f104 0420 	add.w	r4, r4, #32
 80297ea:	f105 0510 	add.w	r5, r5, #16
 80297ee:	d019      	beq.n	8029824 <arm_cmplx_mag_f32+0x104>
 80297f0:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 80297f4:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 80297f8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80297fc:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029800:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029804:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802980c:	da95      	bge.n	802973a <arm_cmplx_mag_f32+0x1a>
 802980e:	f845 7c10 	str.w	r7, [r5, #-16]
 8029812:	e79c      	b.n	802974e <arm_cmplx_mag_f32+0x2e>
 8029814:	3e01      	subs	r6, #1
 8029816:	f845 7c04 	str.w	r7, [r5, #-4]
 802981a:	f104 0420 	add.w	r4, r4, #32
 802981e:	f105 0510 	add.w	r5, r5, #16
 8029822:	d1e5      	bne.n	80297f0 <arm_cmplx_mag_f32+0xd0>
 8029824:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029828:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802982c:	f012 0503 	ands.w	r5, r2, #3
 8029830:	d026      	beq.n	8029880 <arm_cmplx_mag_f32+0x160>
 8029832:	2600      	movs	r6, #0
 8029834:	f100 0408 	add.w	r4, r0, #8
 8029838:	e00c      	b.n	8029854 <arm_cmplx_mag_f32+0x134>
 802983a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802983e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029846:	d12e      	bne.n	80298a6 <arm_cmplx_mag_f32+0x186>
 8029848:	3d01      	subs	r5, #1
 802984a:	ed01 0a01 	vstr	s0, [r1, #-4]
 802984e:	f104 0408 	add.w	r4, r4, #8
 8029852:	d015      	beq.n	8029880 <arm_cmplx_mag_f32+0x160>
 8029854:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029858:	ed14 0a01 	vldr	s0, [r4, #-4]
 802985c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029860:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029864:	3104      	adds	r1, #4
 8029866:	ee77 7a80 	vadd.f32	s15, s15, s0
 802986a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802986e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029872:	dae2      	bge.n	802983a <arm_cmplx_mag_f32+0x11a>
 8029874:	3d01      	subs	r5, #1
 8029876:	f841 6c04 	str.w	r6, [r1, #-4]
 802987a:	f104 0408 	add.w	r4, r4, #8
 802987e:	d1e9      	bne.n	8029854 <arm_cmplx_mag_f32+0x134>
 8029880:	b004      	add	sp, #16
 8029882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029886:	f845 7c08 	str.w	r7, [r5, #-8]
 802988a:	e793      	b.n	80297b4 <arm_cmplx_mag_f32+0x94>
 802988c:	f845 7c0c 	str.w	r7, [r5, #-12]
 8029890:	e777      	b.n	8029782 <arm_cmplx_mag_f32+0x62>
 8029892:	eeb0 0a67 	vmov.f32	s0, s15
 8029896:	9203      	str	r2, [sp, #12]
 8029898:	9102      	str	r1, [sp, #8]
 802989a:	9001      	str	r0, [sp, #4]
 802989c:	f000 fb38 	bl	8029f10 <sqrtf>
 80298a0:	a801      	add	r0, sp, #4
 80298a2:	c807      	ldmia	r0, {r0, r1, r2}
 80298a4:	e751      	b.n	802974a <arm_cmplx_mag_f32+0x2a>
 80298a6:	eeb0 0a67 	vmov.f32	s0, s15
 80298aa:	9101      	str	r1, [sp, #4]
 80298ac:	f000 fb30 	bl	8029f10 <sqrtf>
 80298b0:	9901      	ldr	r1, [sp, #4]
 80298b2:	e7c9      	b.n	8029848 <arm_cmplx_mag_f32+0x128>
 80298b4:	eeb0 0a67 	vmov.f32	s0, s15
 80298b8:	9203      	str	r2, [sp, #12]
 80298ba:	9102      	str	r1, [sp, #8]
 80298bc:	9001      	str	r0, [sp, #4]
 80298be:	f000 fb27 	bl	8029f10 <sqrtf>
 80298c2:	a801      	add	r0, sp, #4
 80298c4:	c807      	ldmia	r0, {r0, r1, r2}
 80298c6:	e78b      	b.n	80297e0 <arm_cmplx_mag_f32+0xc0>
 80298c8:	eeb0 0a67 	vmov.f32	s0, s15
 80298cc:	9203      	str	r2, [sp, #12]
 80298ce:	9102      	str	r1, [sp, #8]
 80298d0:	9001      	str	r0, [sp, #4]
 80298d2:	f000 fb1d 	bl	8029f10 <sqrtf>
 80298d6:	a801      	add	r0, sp, #4
 80298d8:	c807      	ldmia	r0, {r0, r1, r2}
 80298da:	e769      	b.n	80297b0 <arm_cmplx_mag_f32+0x90>
 80298dc:	eeb0 0a67 	vmov.f32	s0, s15
 80298e0:	9203      	str	r2, [sp, #12]
 80298e2:	9102      	str	r1, [sp, #8]
 80298e4:	9001      	str	r0, [sp, #4]
 80298e6:	f000 fb13 	bl	8029f10 <sqrtf>
 80298ea:	a801      	add	r0, sp, #4
 80298ec:	c807      	ldmia	r0, {r0, r1, r2}
 80298ee:	e746      	b.n	802977e <arm_cmplx_mag_f32+0x5e>

080298f0 <arm_radix8_butterfly_f32>:
 80298f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80298f4:	ed2d 8b10 	vpush	{d8-d15}
 80298f8:	b09d      	sub	sp, #116	; 0x74
 80298fa:	461c      	mov	r4, r3
 80298fc:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029c20 <arm_radix8_butterfly_f32+0x330>
 8029900:	921a      	str	r2, [sp, #104]	; 0x68
 8029902:	1d03      	adds	r3, r0, #4
 8029904:	4682      	mov	sl, r0
 8029906:	4689      	mov	r9, r1
 8029908:	468b      	mov	fp, r1
 802990a:	931b      	str	r3, [sp, #108]	; 0x6c
 802990c:	9400      	str	r4, [sp, #0]
 802990e:	469e      	mov	lr, r3
 8029910:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8029914:	005a      	lsls	r2, r3, #1
 8029916:	18d6      	adds	r6, r2, r3
 8029918:	18f5      	adds	r5, r6, r3
 802991a:	9203      	str	r2, [sp, #12]
 802991c:	195a      	adds	r2, r3, r5
 802991e:	18d0      	adds	r0, r2, r3
 8029920:	00df      	lsls	r7, r3, #3
 8029922:	1819      	adds	r1, r3, r0
 8029924:	463c      	mov	r4, r7
 8029926:	9701      	str	r7, [sp, #4]
 8029928:	4457      	add	r7, sl
 802992a:	930c      	str	r3, [sp, #48]	; 0x30
 802992c:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8029930:	011b      	lsls	r3, r3, #4
 8029932:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8029936:	eb07 0c04 	add.w	ip, r7, r4
 802993a:	9c00      	ldr	r4, [sp, #0]
 802993c:	9302      	str	r3, [sp, #8]
 802993e:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8029942:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029946:	3204      	adds	r2, #4
 8029948:	3104      	adds	r1, #4
 802994a:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802994e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8029952:	f04f 0800 	mov.w	r8, #0
 8029956:	eddc 7a00 	vldr	s15, [ip]
 802995a:	edd7 6a00 	vldr	s13, [r7]
 802995e:	edd6 3a00 	vldr	s7, [r6]
 8029962:	ed5e aa01 	vldr	s21, [lr, #-4]
 8029966:	edd5 4a00 	vldr	s9, [r5]
 802996a:	ed90 2a00 	vldr	s4, [r0]
 802996e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029972:	ed51 0a01 	vldr	s1, [r1, #-4]
 8029976:	ee77 8a82 	vadd.f32	s17, s15, s4
 802997a:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802997e:	ee76 1a87 	vadd.f32	s3, s13, s14
 8029982:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8029986:	ee31 6a84 	vadd.f32	s12, s3, s8
 802998a:	ee33 5a28 	vadd.f32	s10, s6, s17
 802998e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8029992:	ee75 6a06 	vadd.f32	s13, s10, s12
 8029996:	ee35 5a46 	vsub.f32	s10, s10, s12
 802999a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802999e:	ed85 5a00 	vstr	s10, [r5]
 80299a2:	ed96 1a01 	vldr	s2, [r6, #4]
 80299a6:	edd7 5a01 	vldr	s11, [r7, #4]
 80299aa:	ed92 aa00 	vldr	s20, [r2]
 80299ae:	ed91 6a00 	vldr	s12, [r1]
 80299b2:	ed9e 9a00 	vldr	s18, [lr]
 80299b6:	ed95 5a01 	vldr	s10, [r5, #4]
 80299ba:	eddc 6a01 	vldr	s13, [ip, #4]
 80299be:	edd0 9a01 	vldr	s19, [r0, #4]
 80299c2:	ee73 0ae0 	vsub.f32	s1, s7, s1
 80299c6:	ee71 2a46 	vsub.f32	s5, s2, s12
 80299ca:	ee75 3aca 	vsub.f32	s7, s11, s20
 80299ce:	ee37 0a60 	vsub.f32	s0, s14, s1
 80299d2:	ee33 8aa2 	vadd.f32	s16, s7, s5
 80299d6:	ee37 7a20 	vadd.f32	s14, s14, s1
 80299da:	ee73 2ae2 	vsub.f32	s5, s7, s5
 80299de:	ee37 2ac2 	vsub.f32	s4, s15, s4
 80299e2:	ee79 3a05 	vadd.f32	s7, s18, s10
 80299e6:	ee60 0a0b 	vmul.f32	s1, s0, s22
 80299ea:	ee39 5a45 	vsub.f32	s10, s18, s10
 80299ee:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 80299f2:	ee36 9aa9 	vadd.f32	s18, s13, s19
 80299f6:	ee75 5a8a 	vadd.f32	s11, s11, s20
 80299fa:	ee31 6a06 	vadd.f32	s12, s2, s12
 80299fe:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8029a02:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029a06:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8029a0a:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8029a0e:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029a12:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029a16:	ee75 8a86 	vadd.f32	s17, s11, s12
 8029a1a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8029a1e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029a22:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029a26:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8029a2a:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8029a2e:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029a32:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029a36:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8029a3a:	ee75 4a22 	vadd.f32	s9, s10, s5
 8029a3e:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029a42:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029a46:	ee33 8a06 	vadd.f32	s16, s6, s12
 8029a4a:	ee75 2a87 	vadd.f32	s5, s11, s14
 8029a4e:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029a52:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029a56:	ee74 0a61 	vsub.f32	s1, s8, s3
 8029a5a:	ee33 2a80 	vadd.f32	s4, s7, s0
 8029a5e:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029a62:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029a66:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029a6a:	ee31 1a68 	vsub.f32	s2, s2, s17
 8029a6e:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029a72:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029a76:	ee74 4a85 	vadd.f32	s9, s9, s10
 8029a7a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8029a7e:	44d8      	add	r8, fp
 8029a80:	45c1      	cmp	r9, r8
 8029a82:	ed8e 9a00 	vstr	s18, [lr]
 8029a86:	ed85 1a01 	vstr	s2, [r5, #4]
 8029a8a:	449e      	add	lr, r3
 8029a8c:	ed8c 8a00 	vstr	s16, [ip]
 8029a90:	441d      	add	r5, r3
 8029a92:	ed80 6a00 	vstr	s12, [r0]
 8029a96:	edcc 0a01 	vstr	s1, [ip, #4]
 8029a9a:	ed80 4a01 	vstr	s8, [r0, #4]
 8029a9e:	449c      	add	ip, r3
 8029aa0:	ed87 2a00 	vstr	s4, [r7]
 8029aa4:	4418      	add	r0, r3
 8029aa6:	ed41 3a01 	vstr	s7, [r1, #-4]
 8029aaa:	ed42 2a01 	vstr	s5, [r2, #-4]
 8029aae:	ed86 7a00 	vstr	s14, [r6]
 8029ab2:	ed87 3a01 	vstr	s6, [r7, #4]
 8029ab6:	edc1 4a00 	vstr	s9, [r1]
 8029aba:	441f      	add	r7, r3
 8029abc:	edc2 5a00 	vstr	s11, [r2]
 8029ac0:	4419      	add	r1, r3
 8029ac2:	edc6 6a01 	vstr	s13, [r6, #4]
 8029ac6:	441a      	add	r2, r3
 8029ac8:	441e      	add	r6, r3
 8029aca:	f63f af44 	bhi.w	8029956 <arm_radix8_butterfly_f32+0x66>
 8029ace:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029ad0:	2907      	cmp	r1, #7
 8029ad2:	4620      	mov	r0, r4
 8029ad4:	f240 81e9 	bls.w	8029eaa <arm_radix8_butterfly_f32+0x5ba>
 8029ad8:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8029adc:	193e      	adds	r6, r7, r4
 8029ade:	1935      	adds	r5, r6, r4
 8029ae0:	9c03      	ldr	r4, [sp, #12]
 8029ae2:	9000      	str	r0, [sp, #0]
 8029ae4:	4622      	mov	r2, r4
 8029ae6:	3201      	adds	r2, #1
 8029ae8:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8029aec:	9900      	ldr	r1, [sp, #0]
 8029aee:	1828      	adds	r0, r5, r0
 8029af0:	eb00 0e01 	add.w	lr, r0, r1
 8029af4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029af6:	440a      	add	r2, r1
 8029af8:	eb04 0c01 	add.w	ip, r4, r1
 8029afc:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029b00:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029b04:	9a00      	ldr	r2, [sp, #0]
 8029b06:	940f      	str	r4, [sp, #60]	; 0x3c
 8029b08:	00ed      	lsls	r5, r5, #3
 8029b0a:	9511      	str	r5, [sp, #68]	; 0x44
 8029b0c:	00d5      	lsls	r5, r2, #3
 8029b0e:	950d      	str	r5, [sp, #52]	; 0x34
 8029b10:	9d01      	ldr	r5, [sp, #4]
 8029b12:	3508      	adds	r5, #8
 8029b14:	9516      	str	r5, [sp, #88]	; 0x58
 8029b16:	9d02      	ldr	r5, [sp, #8]
 8029b18:	3508      	adds	r5, #8
 8029b1a:	0114      	lsls	r4, r2, #4
 8029b1c:	9517      	str	r5, [sp, #92]	; 0x5c
 8029b1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029b20:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029b22:	940e      	str	r4, [sp, #56]	; 0x38
 8029b24:	00c0      	lsls	r0, r0, #3
 8029b26:	9010      	str	r0, [sp, #64]	; 0x40
 8029b28:	18aa      	adds	r2, r5, r2
 8029b2a:	9207      	str	r2, [sp, #28]
 8029b2c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029b2e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029b30:	18aa      	adds	r2, r5, r2
 8029b32:	9208      	str	r2, [sp, #32]
 8029b34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029b36:	18aa      	adds	r2, r5, r2
 8029b38:	9209      	str	r2, [sp, #36]	; 0x24
 8029b3a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8029b3e:	f10e 0204 	add.w	r2, lr, #4
 8029b42:	920a      	str	r2, [sp, #40]	; 0x28
 8029b44:	00c9      	lsls	r1, r1, #3
 8029b46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029b48:	310c      	adds	r1, #12
 8029b4a:	00f6      	lsls	r6, r6, #3
 8029b4c:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029b50:	9114      	str	r1, [sp, #80]	; 0x50
 8029b52:	18a9      	adds	r1, r5, r2
 8029b54:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029b56:	9612      	str	r6, [sp, #72]	; 0x48
 8029b58:	00ff      	lsls	r7, r7, #3
 8029b5a:	19ae      	adds	r6, r5, r6
 8029b5c:	3008      	adds	r0, #8
 8029b5e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029b62:	9606      	str	r6, [sp, #24]
 8029b64:	9019      	str	r0, [sp, #100]	; 0x64
 8029b66:	18aa      	adds	r2, r5, r2
 8029b68:	0164      	lsls	r4, r4, #5
 8029b6a:	19ee      	adds	r6, r5, r7
 8029b6c:	f10c 000c 	add.w	r0, ip, #12
 8029b70:	9713      	str	r7, [sp, #76]	; 0x4c
 8029b72:	9604      	str	r6, [sp, #16]
 8029b74:	9015      	str	r0, [sp, #84]	; 0x54
 8029b76:	9103      	str	r1, [sp, #12]
 8029b78:	9205      	str	r2, [sp, #20]
 8029b7a:	f104 0208 	add.w	r2, r4, #8
 8029b7e:	9218      	str	r2, [sp, #96]	; 0x60
 8029b80:	f04f 0801 	mov.w	r8, #1
 8029b84:	2200      	movs	r2, #0
 8029b86:	f102 0108 	add.w	r1, r2, #8
 8029b8a:	460f      	mov	r7, r1
 8029b8c:	910b      	str	r1, [sp, #44]	; 0x2c
 8029b8e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029b90:	188e      	adds	r6, r1, r2
 8029b92:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029b94:	188d      	adds	r5, r1, r2
 8029b96:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029b98:	188c      	adds	r4, r1, r2
 8029b9a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8029b9c:	1888      	adds	r0, r1, r2
 8029b9e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029ba0:	eb01 0c02 	add.w	ip, r1, r2
 8029ba4:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029ba6:	440a      	add	r2, r1
 8029ba8:	9903      	ldr	r1, [sp, #12]
 8029baa:	edd1 fa00 	vldr	s31, [r1]
 8029bae:	9905      	ldr	r1, [sp, #20]
 8029bb0:	ed91 fa00 	vldr	s30, [r1]
 8029bb4:	9904      	ldr	r1, [sp, #16]
 8029bb6:	edd1 ea00 	vldr	s29, [r1]
 8029bba:	9906      	ldr	r1, [sp, #24]
 8029bbc:	ed91 ea00 	vldr	s28, [r1]
 8029bc0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029bc2:	edd1 da00 	vldr	s27, [r1]
 8029bc6:	9908      	ldr	r1, [sp, #32]
 8029bc8:	ed91 da00 	vldr	s26, [r1]
 8029bcc:	9907      	ldr	r1, [sp, #28]
 8029bce:	edd1 ca00 	vldr	s25, [r1]
 8029bd2:	9903      	ldr	r1, [sp, #12]
 8029bd4:	ed91 ca01 	vldr	s24, [r1, #4]
 8029bd8:	9905      	ldr	r1, [sp, #20]
 8029bda:	edd1 ba01 	vldr	s23, [r1, #4]
 8029bde:	9904      	ldr	r1, [sp, #16]
 8029be0:	edd1 aa01 	vldr	s21, [r1, #4]
 8029be4:	9906      	ldr	r1, [sp, #24]
 8029be6:	ed91 aa01 	vldr	s20, [r1, #4]
 8029bea:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029bec:	edd1 7a01 	vldr	s15, [r1, #4]
 8029bf0:	9908      	ldr	r1, [sp, #32]
 8029bf2:	edcd 7a00 	vstr	s15, [sp]
 8029bf6:	edd1 7a01 	vldr	s15, [r1, #4]
 8029bfa:	9907      	ldr	r1, [sp, #28]
 8029bfc:	edcd 7a01 	vstr	s15, [sp, #4]
 8029c00:	edd1 7a01 	vldr	s15, [r1, #4]
 8029c04:	eb0a 0e07 	add.w	lr, sl, r7
 8029c08:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029c0a:	edcd 7a02 	vstr	s15, [sp, #8]
 8029c0e:	eb0c 010a 	add.w	r1, ip, sl
 8029c12:	4456      	add	r6, sl
 8029c14:	4455      	add	r5, sl
 8029c16:	4454      	add	r4, sl
 8029c18:	4450      	add	r0, sl
 8029c1a:	4452      	add	r2, sl
 8029c1c:	46c4      	mov	ip, r8
 8029c1e:	e001      	b.n	8029c24 <arm_radix8_butterfly_f32+0x334>
 8029c20:	3f3504f3 	.word	0x3f3504f3
 8029c24:	ed96 5a00 	vldr	s10, [r6]
 8029c28:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029c2c:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029c30:	edd0 7a00 	vldr	s15, [r0]
 8029c34:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029c38:	edde 3a00 	vldr	s7, [lr]
 8029c3c:	ed94 3a00 	vldr	s6, [r4]
 8029c40:	ed95 2a00 	vldr	s4, [r5]
 8029c44:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029c48:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029c4c:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029c50:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029c54:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029c58:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029c5c:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029c60:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029c64:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029c68:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029c6c:	ed8e 6a00 	vstr	s12, [lr]
 8029c70:	edd0 8a01 	vldr	s17, [r0, #4]
 8029c74:	ed95 9a01 	vldr	s18, [r5, #4]
 8029c78:	edd1 2a00 	vldr	s5, [r1]
 8029c7c:	ed97 7a00 	vldr	s14, [r7]
 8029c80:	edd4 0a01 	vldr	s1, [r4, #4]
 8029c84:	ed96 6a01 	vldr	s12, [r6, #4]
 8029c88:	edd2 5a00 	vldr	s11, [r2]
 8029c8c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029c90:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029c94:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029c98:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029c9c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029ca0:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029ca4:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029ca8:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029cac:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029cb0:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029cb4:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029cb8:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029cbc:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029cc0:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029cc4:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029cc8:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029ccc:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029cd0:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029cd4:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029cd8:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029cdc:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029ce0:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029ce4:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029ce8:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029cec:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029cf0:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029cf4:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029cf8:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029cfc:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029d00:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029d04:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029d08:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029d0c:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029d10:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029d14:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029d18:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029d1c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029d20:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029d24:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029d28:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029d2c:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029d30:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029d34:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029d38:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029d3c:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029d40:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029d44:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029d48:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029d4c:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029d50:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029d54:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029d58:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029d5c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029d60:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029d64:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029d68:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029d6c:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029d70:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029d74:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029d78:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029d7c:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029d80:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029d84:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029d88:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029d8c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029d90:	ed86 3a00 	vstr	s6, [r6]
 8029d94:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029d98:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029d9c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029da0:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029da4:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029da8:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029dac:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029db0:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029db4:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029db8:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029dbc:	ed9d 4a00 	vldr	s8, [sp]
 8029dc0:	edc6 6a01 	vstr	s13, [r6, #4]
 8029dc4:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029dc8:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029dcc:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029dd0:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029dd4:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029dd8:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029ddc:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029de0:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029de4:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029de8:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029dec:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029df0:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029df4:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029df8:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029dfc:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029e00:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029e04:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029e08:	44dc      	add	ip, fp
 8029e0a:	45e1      	cmp	r9, ip
 8029e0c:	ed84 9a00 	vstr	s18, [r4]
 8029e10:	edc4 3a01 	vstr	s7, [r4, #4]
 8029e14:	449e      	add	lr, r3
 8029e16:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029e1a:	edc2 2a00 	vstr	s5, [r2]
 8029e1e:	441e      	add	r6, r3
 8029e20:	ed85 2a00 	vstr	s4, [r5]
 8029e24:	ed85 8a01 	vstr	s16, [r5, #4]
 8029e28:	441c      	add	r4, r3
 8029e2a:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029e2e:	ed87 0a00 	vstr	s0, [r7]
 8029e32:	441a      	add	r2, r3
 8029e34:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029e38:	edc1 9a00 	vstr	s19, [r1]
 8029e3c:	441d      	add	r5, r3
 8029e3e:	edc0 0a00 	vstr	s1, [r0]
 8029e42:	441f      	add	r7, r3
 8029e44:	ed80 6a01 	vstr	s12, [r0, #4]
 8029e48:	4419      	add	r1, r3
 8029e4a:	4418      	add	r0, r3
 8029e4c:	f63f aeea 	bhi.w	8029c24 <arm_radix8_butterfly_f32+0x334>
 8029e50:	9a03      	ldr	r2, [sp, #12]
 8029e52:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029e54:	440a      	add	r2, r1
 8029e56:	9203      	str	r2, [sp, #12]
 8029e58:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029e5a:	9a05      	ldr	r2, [sp, #20]
 8029e5c:	440a      	add	r2, r1
 8029e5e:	9205      	str	r2, [sp, #20]
 8029e60:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029e62:	9a04      	ldr	r2, [sp, #16]
 8029e64:	440a      	add	r2, r1
 8029e66:	9204      	str	r2, [sp, #16]
 8029e68:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029e6a:	9a06      	ldr	r2, [sp, #24]
 8029e6c:	440a      	add	r2, r1
 8029e6e:	9206      	str	r2, [sp, #24]
 8029e70:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029e72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029e74:	440a      	add	r2, r1
 8029e76:	9209      	str	r2, [sp, #36]	; 0x24
 8029e78:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029e7a:	9a08      	ldr	r2, [sp, #32]
 8029e7c:	440a      	add	r2, r1
 8029e7e:	9208      	str	r2, [sp, #32]
 8029e80:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029e82:	9a07      	ldr	r2, [sp, #28]
 8029e84:	440a      	add	r2, r1
 8029e86:	9207      	str	r2, [sp, #28]
 8029e88:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029e8a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029e8c:	f108 0801 	add.w	r8, r8, #1
 8029e90:	3208      	adds	r2, #8
 8029e92:	4588      	cmp	r8, r1
 8029e94:	920a      	str	r2, [sp, #40]	; 0x28
 8029e96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029e98:	f47f ae75 	bne.w	8029b86 <arm_radix8_butterfly_f32+0x296>
 8029e9c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029ea0:	9300      	str	r3, [sp, #0]
 8029ea2:	46c3      	mov	fp, r8
 8029ea4:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029ea8:	e532      	b.n	8029910 <arm_radix8_butterfly_f32+0x20>
 8029eaa:	b01d      	add	sp, #116	; 0x74
 8029eac:	ecbd 8b10 	vpop	{d8-d15}
 8029eb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029eb4 <__aeabi_atexit>:
 8029eb4:	460b      	mov	r3, r1
 8029eb6:	4601      	mov	r1, r0
 8029eb8:	4618      	mov	r0, r3
 8029eba:	f000 bfc7 	b.w	802ae4c <__cxa_atexit>

08029ebe <_ZdlPvj>:
 8029ebe:	f000 b812 	b.w	8029ee6 <_ZdlPv>

08029ec2 <__cxa_guard_acquire>:
 8029ec2:	6803      	ldr	r3, [r0, #0]
 8029ec4:	07db      	lsls	r3, r3, #31
 8029ec6:	d406      	bmi.n	8029ed6 <__cxa_guard_acquire+0x14>
 8029ec8:	7843      	ldrb	r3, [r0, #1]
 8029eca:	b103      	cbz	r3, 8029ece <__cxa_guard_acquire+0xc>
 8029ecc:	deff      	udf	#255	; 0xff
 8029ece:	2301      	movs	r3, #1
 8029ed0:	7043      	strb	r3, [r0, #1]
 8029ed2:	4618      	mov	r0, r3
 8029ed4:	4770      	bx	lr
 8029ed6:	2000      	movs	r0, #0
 8029ed8:	4770      	bx	lr

08029eda <__cxa_guard_release>:
 8029eda:	2301      	movs	r3, #1
 8029edc:	6003      	str	r3, [r0, #0]
 8029ede:	4770      	bx	lr

08029ee0 <__cxa_pure_virtual>:
 8029ee0:	b508      	push	{r3, lr}
 8029ee2:	f000 f80f 	bl	8029f04 <_ZSt9terminatev>

08029ee6 <_ZdlPv>:
 8029ee6:	f000 befd 	b.w	802ace4 <free>

08029eea <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029eea:	b508      	push	{r3, lr}
 8029eec:	4780      	blx	r0
 8029eee:	f000 fec5 	bl	802ac7c <abort>
	...

08029ef4 <_ZSt13get_terminatev>:
 8029ef4:	4b02      	ldr	r3, [pc, #8]	; (8029f00 <_ZSt13get_terminatev+0xc>)
 8029ef6:	6818      	ldr	r0, [r3, #0]
 8029ef8:	f3bf 8f5b 	dmb	ish
 8029efc:	4770      	bx	lr
 8029efe:	bf00      	nop
 8029f00:	20000104 	.word	0x20000104

08029f04 <_ZSt9terminatev>:
 8029f04:	b508      	push	{r3, lr}
 8029f06:	f7ff fff5 	bl	8029ef4 <_ZSt13get_terminatev>
 8029f0a:	f7ff ffee 	bl	8029eea <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029f10 <sqrtf>:
 8029f10:	b508      	push	{r3, lr}
 8029f12:	ed2d 8b02 	vpush	{d8}
 8029f16:	eeb0 8a40 	vmov.f32	s16, s0
 8029f1a:	f000 f97d 	bl	802a218 <__ieee754_sqrtf>
 8029f1e:	eeb4 8a48 	vcmp.f32	s16, s16
 8029f22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f26:	d60c      	bvs.n	8029f42 <sqrtf+0x32>
 8029f28:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029f48 <sqrtf+0x38>
 8029f2c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029f30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f34:	d505      	bpl.n	8029f42 <sqrtf+0x32>
 8029f36:	f001 f9a7 	bl	802b288 <__errno>
 8029f3a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029f3e:	2321      	movs	r3, #33	; 0x21
 8029f40:	6003      	str	r3, [r0, #0]
 8029f42:	ecbd 8b02 	vpop	{d8}
 8029f46:	bd08      	pop	{r3, pc}
 8029f48:	00000000 	.word	0x00000000

08029f4c <atanf>:
 8029f4c:	b538      	push	{r3, r4, r5, lr}
 8029f4e:	ee10 5a10 	vmov	r5, s0
 8029f52:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8029f56:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8029f5a:	eef0 7a40 	vmov.f32	s15, s0
 8029f5e:	db10      	blt.n	8029f82 <atanf+0x36>
 8029f60:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8029f64:	dd04      	ble.n	8029f70 <atanf+0x24>
 8029f66:	ee70 7a00 	vadd.f32	s15, s0, s0
 8029f6a:	eeb0 0a67 	vmov.f32	s0, s15
 8029f6e:	bd38      	pop	{r3, r4, r5, pc}
 8029f70:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802a0a8 <atanf+0x15c>
 8029f74:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802a0ac <atanf+0x160>
 8029f78:	2d00      	cmp	r5, #0
 8029f7a:	bfd8      	it	le
 8029f7c:	eef0 7a47 	vmovle.f32	s15, s14
 8029f80:	e7f3      	b.n	8029f6a <atanf+0x1e>
 8029f82:	4b4b      	ldr	r3, [pc, #300]	; (802a0b0 <atanf+0x164>)
 8029f84:	429c      	cmp	r4, r3
 8029f86:	dc10      	bgt.n	8029faa <atanf+0x5e>
 8029f88:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8029f8c:	da0a      	bge.n	8029fa4 <atanf+0x58>
 8029f8e:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802a0b4 <atanf+0x168>
 8029f92:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029f96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029f9a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8029f9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fa2:	dce2      	bgt.n	8029f6a <atanf+0x1e>
 8029fa4:	f04f 33ff 	mov.w	r3, #4294967295
 8029fa8:	e013      	b.n	8029fd2 <atanf+0x86>
 8029faa:	f000 f8e7 	bl	802a17c <fabsf>
 8029fae:	4b42      	ldr	r3, [pc, #264]	; (802a0b8 <atanf+0x16c>)
 8029fb0:	429c      	cmp	r4, r3
 8029fb2:	dc4f      	bgt.n	802a054 <atanf+0x108>
 8029fb4:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8029fb8:	429c      	cmp	r4, r3
 8029fba:	dc41      	bgt.n	802a040 <atanf+0xf4>
 8029fbc:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 8029fc0:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029fc4:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029fc8:	2300      	movs	r3, #0
 8029fca:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029fce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029fd2:	1c5a      	adds	r2, r3, #1
 8029fd4:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8029fd8:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802a0bc <atanf+0x170>
 8029fdc:	eddf 5a38 	vldr	s11, [pc, #224]	; 802a0c0 <atanf+0x174>
 8029fe0:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802a0c4 <atanf+0x178>
 8029fe4:	ee66 6a06 	vmul.f32	s13, s12, s12
 8029fe8:	eee6 5a87 	vfma.f32	s11, s13, s14
 8029fec:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802a0c8 <atanf+0x17c>
 8029ff0:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029ff4:	eddf 5a35 	vldr	s11, [pc, #212]	; 802a0cc <atanf+0x180>
 8029ff8:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029ffc:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802a0d0 <atanf+0x184>
 802a000:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802a004:	eddf 5a33 	vldr	s11, [pc, #204]	; 802a0d4 <atanf+0x188>
 802a008:	eee7 5a26 	vfma.f32	s11, s14, s13
 802a00c:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802a0d8 <atanf+0x18c>
 802a010:	eea6 5a87 	vfma.f32	s10, s13, s14
 802a014:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802a0dc <atanf+0x190>
 802a018:	eea5 7a26 	vfma.f32	s14, s10, s13
 802a01c:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802a0e0 <atanf+0x194>
 802a020:	eea7 5a26 	vfma.f32	s10, s14, s13
 802a024:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802a0e4 <atanf+0x198>
 802a028:	eea5 7a26 	vfma.f32	s14, s10, s13
 802a02c:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a030:	eea5 7a86 	vfma.f32	s14, s11, s12
 802a034:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a038:	d121      	bne.n	802a07e <atanf+0x132>
 802a03a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a03e:	e794      	b.n	8029f6a <atanf+0x1e>
 802a040:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a044:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a048:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a04c:	2301      	movs	r3, #1
 802a04e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a052:	e7be      	b.n	8029fd2 <atanf+0x86>
 802a054:	4b24      	ldr	r3, [pc, #144]	; (802a0e8 <atanf+0x19c>)
 802a056:	429c      	cmp	r4, r3
 802a058:	dc0b      	bgt.n	802a072 <atanf+0x126>
 802a05a:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802a05e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802a062:	eea0 7a27 	vfma.f32	s14, s0, s15
 802a066:	2302      	movs	r3, #2
 802a068:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a06c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802a070:	e7af      	b.n	8029fd2 <atanf+0x86>
 802a072:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802a076:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a07a:	2303      	movs	r3, #3
 802a07c:	e7a9      	b.n	8029fd2 <atanf+0x86>
 802a07e:	4a1b      	ldr	r2, [pc, #108]	; (802a0ec <atanf+0x1a0>)
 802a080:	491b      	ldr	r1, [pc, #108]	; (802a0f0 <atanf+0x1a4>)
 802a082:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a086:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802a08a:	edd3 6a00 	vldr	s13, [r3]
 802a08e:	ee37 7a66 	vsub.f32	s14, s14, s13
 802a092:	2d00      	cmp	r5, #0
 802a094:	ee37 7a67 	vsub.f32	s14, s14, s15
 802a098:	edd2 7a00 	vldr	s15, [r2]
 802a09c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a0a0:	bfb8      	it	lt
 802a0a2:	eef1 7a67 	vneglt.f32	s15, s15
 802a0a6:	e760      	b.n	8029f6a <atanf+0x1e>
 802a0a8:	3fc90fdb 	.word	0x3fc90fdb
 802a0ac:	bfc90fdb 	.word	0xbfc90fdb
 802a0b0:	3edfffff 	.word	0x3edfffff
 802a0b4:	7149f2ca 	.word	0x7149f2ca
 802a0b8:	3f97ffff 	.word	0x3f97ffff
 802a0bc:	3c8569d7 	.word	0x3c8569d7
 802a0c0:	3d4bda59 	.word	0x3d4bda59
 802a0c4:	bd6ef16b 	.word	0xbd6ef16b
 802a0c8:	3d886b35 	.word	0x3d886b35
 802a0cc:	3dba2e6e 	.word	0x3dba2e6e
 802a0d0:	3e124925 	.word	0x3e124925
 802a0d4:	3eaaaaab 	.word	0x3eaaaaab
 802a0d8:	bd15a221 	.word	0xbd15a221
 802a0dc:	bd9d8795 	.word	0xbd9d8795
 802a0e0:	bde38e38 	.word	0xbde38e38
 802a0e4:	be4ccccd 	.word	0xbe4ccccd
 802a0e8:	401bffff 	.word	0x401bffff
 802a0ec:	08042ef0 	.word	0x08042ef0
 802a0f0:	08042f00 	.word	0x08042f00

0802a0f4 <cosf>:
 802a0f4:	ee10 3a10 	vmov	r3, s0
 802a0f8:	b507      	push	{r0, r1, r2, lr}
 802a0fa:	4a1e      	ldr	r2, [pc, #120]	; (802a174 <cosf+0x80>)
 802a0fc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a100:	4293      	cmp	r3, r2
 802a102:	dc06      	bgt.n	802a112 <cosf+0x1e>
 802a104:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a178 <cosf+0x84>
 802a108:	b003      	add	sp, #12
 802a10a:	f85d eb04 	ldr.w	lr, [sp], #4
 802a10e:	f000 b90b 	b.w	802a328 <__kernel_cosf>
 802a112:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a116:	db04      	blt.n	802a122 <cosf+0x2e>
 802a118:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a11c:	b003      	add	sp, #12
 802a11e:	f85d fb04 	ldr.w	pc, [sp], #4
 802a122:	4668      	mov	r0, sp
 802a124:	f000 f9a6 	bl	802a474 <__ieee754_rem_pio2f>
 802a128:	f000 0003 	and.w	r0, r0, #3
 802a12c:	2801      	cmp	r0, #1
 802a12e:	d009      	beq.n	802a144 <cosf+0x50>
 802a130:	2802      	cmp	r0, #2
 802a132:	d010      	beq.n	802a156 <cosf+0x62>
 802a134:	b9b0      	cbnz	r0, 802a164 <cosf+0x70>
 802a136:	eddd 0a01 	vldr	s1, [sp, #4]
 802a13a:	ed9d 0a00 	vldr	s0, [sp]
 802a13e:	f000 f8f3 	bl	802a328 <__kernel_cosf>
 802a142:	e7eb      	b.n	802a11c <cosf+0x28>
 802a144:	eddd 0a01 	vldr	s1, [sp, #4]
 802a148:	ed9d 0a00 	vldr	s0, [sp]
 802a14c:	f000 f94a 	bl	802a3e4 <__kernel_sinf>
 802a150:	eeb1 0a40 	vneg.f32	s0, s0
 802a154:	e7e2      	b.n	802a11c <cosf+0x28>
 802a156:	eddd 0a01 	vldr	s1, [sp, #4]
 802a15a:	ed9d 0a00 	vldr	s0, [sp]
 802a15e:	f000 f8e3 	bl	802a328 <__kernel_cosf>
 802a162:	e7f5      	b.n	802a150 <cosf+0x5c>
 802a164:	eddd 0a01 	vldr	s1, [sp, #4]
 802a168:	ed9d 0a00 	vldr	s0, [sp]
 802a16c:	2001      	movs	r0, #1
 802a16e:	f000 f939 	bl	802a3e4 <__kernel_sinf>
 802a172:	e7d3      	b.n	802a11c <cosf+0x28>
 802a174:	3f490fd8 	.word	0x3f490fd8
 802a178:	00000000 	.word	0x00000000

0802a17c <fabsf>:
 802a17c:	ee10 3a10 	vmov	r3, s0
 802a180:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a184:	ee00 3a10 	vmov	s0, r3
 802a188:	4770      	bx	lr
	...

0802a18c <sinf>:
 802a18c:	ee10 3a10 	vmov	r3, s0
 802a190:	b507      	push	{r0, r1, r2, lr}
 802a192:	4a1f      	ldr	r2, [pc, #124]	; (802a210 <sinf+0x84>)
 802a194:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a198:	4293      	cmp	r3, r2
 802a19a:	dc07      	bgt.n	802a1ac <sinf+0x20>
 802a19c:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a214 <sinf+0x88>
 802a1a0:	2000      	movs	r0, #0
 802a1a2:	b003      	add	sp, #12
 802a1a4:	f85d eb04 	ldr.w	lr, [sp], #4
 802a1a8:	f000 b91c 	b.w	802a3e4 <__kernel_sinf>
 802a1ac:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a1b0:	db04      	blt.n	802a1bc <sinf+0x30>
 802a1b2:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a1b6:	b003      	add	sp, #12
 802a1b8:	f85d fb04 	ldr.w	pc, [sp], #4
 802a1bc:	4668      	mov	r0, sp
 802a1be:	f000 f959 	bl	802a474 <__ieee754_rem_pio2f>
 802a1c2:	f000 0003 	and.w	r0, r0, #3
 802a1c6:	2801      	cmp	r0, #1
 802a1c8:	d00a      	beq.n	802a1e0 <sinf+0x54>
 802a1ca:	2802      	cmp	r0, #2
 802a1cc:	d00f      	beq.n	802a1ee <sinf+0x62>
 802a1ce:	b9c0      	cbnz	r0, 802a202 <sinf+0x76>
 802a1d0:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1d4:	ed9d 0a00 	vldr	s0, [sp]
 802a1d8:	2001      	movs	r0, #1
 802a1da:	f000 f903 	bl	802a3e4 <__kernel_sinf>
 802a1de:	e7ea      	b.n	802a1b6 <sinf+0x2a>
 802a1e0:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1e4:	ed9d 0a00 	vldr	s0, [sp]
 802a1e8:	f000 f89e 	bl	802a328 <__kernel_cosf>
 802a1ec:	e7e3      	b.n	802a1b6 <sinf+0x2a>
 802a1ee:	eddd 0a01 	vldr	s1, [sp, #4]
 802a1f2:	ed9d 0a00 	vldr	s0, [sp]
 802a1f6:	2001      	movs	r0, #1
 802a1f8:	f000 f8f4 	bl	802a3e4 <__kernel_sinf>
 802a1fc:	eeb1 0a40 	vneg.f32	s0, s0
 802a200:	e7d9      	b.n	802a1b6 <sinf+0x2a>
 802a202:	eddd 0a01 	vldr	s1, [sp, #4]
 802a206:	ed9d 0a00 	vldr	s0, [sp]
 802a20a:	f000 f88d 	bl	802a328 <__kernel_cosf>
 802a20e:	e7f5      	b.n	802a1fc <sinf+0x70>
 802a210:	3f490fd8 	.word	0x3f490fd8
 802a214:	00000000 	.word	0x00000000

0802a218 <__ieee754_sqrtf>:
 802a218:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a21c:	4770      	bx	lr
	...

0802a220 <ceilf>:
 802a220:	ee10 3a10 	vmov	r3, s0
 802a224:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a228:	3a7f      	subs	r2, #127	; 0x7f
 802a22a:	2a16      	cmp	r2, #22
 802a22c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a230:	dc2a      	bgt.n	802a288 <ceilf+0x68>
 802a232:	2a00      	cmp	r2, #0
 802a234:	da11      	bge.n	802a25a <ceilf+0x3a>
 802a236:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a29c <ceilf+0x7c>
 802a23a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a23e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a246:	dd05      	ble.n	802a254 <ceilf+0x34>
 802a248:	2b00      	cmp	r3, #0
 802a24a:	db23      	blt.n	802a294 <ceilf+0x74>
 802a24c:	2900      	cmp	r1, #0
 802a24e:	bf18      	it	ne
 802a250:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a254:	ee00 3a10 	vmov	s0, r3
 802a258:	4770      	bx	lr
 802a25a:	4911      	ldr	r1, [pc, #68]	; (802a2a0 <ceilf+0x80>)
 802a25c:	4111      	asrs	r1, r2
 802a25e:	420b      	tst	r3, r1
 802a260:	d0fa      	beq.n	802a258 <ceilf+0x38>
 802a262:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a29c <ceilf+0x7c>
 802a266:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a26a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a26e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a272:	ddef      	ble.n	802a254 <ceilf+0x34>
 802a274:	2b00      	cmp	r3, #0
 802a276:	bfc2      	ittt	gt
 802a278:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a27c:	fa40 f202 	asrgt.w	r2, r0, r2
 802a280:	189b      	addgt	r3, r3, r2
 802a282:	ea23 0301 	bic.w	r3, r3, r1
 802a286:	e7e5      	b.n	802a254 <ceilf+0x34>
 802a288:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a28c:	d3e4      	bcc.n	802a258 <ceilf+0x38>
 802a28e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a292:	4770      	bx	lr
 802a294:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a298:	e7dc      	b.n	802a254 <ceilf+0x34>
 802a29a:	bf00      	nop
 802a29c:	7149f2ca 	.word	0x7149f2ca
 802a2a0:	007fffff 	.word	0x007fffff

0802a2a4 <floorf>:
 802a2a4:	ee10 3a10 	vmov	r3, s0
 802a2a8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a2ac:	3a7f      	subs	r2, #127	; 0x7f
 802a2ae:	2a16      	cmp	r2, #22
 802a2b0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a2b4:	dc2a      	bgt.n	802a30c <floorf+0x68>
 802a2b6:	2a00      	cmp	r2, #0
 802a2b8:	da11      	bge.n	802a2de <floorf+0x3a>
 802a2ba:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a31c <floorf+0x78>
 802a2be:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a2c2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a2c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2ca:	dd05      	ble.n	802a2d8 <floorf+0x34>
 802a2cc:	2b00      	cmp	r3, #0
 802a2ce:	da23      	bge.n	802a318 <floorf+0x74>
 802a2d0:	4a13      	ldr	r2, [pc, #76]	; (802a320 <floorf+0x7c>)
 802a2d2:	2900      	cmp	r1, #0
 802a2d4:	bf18      	it	ne
 802a2d6:	4613      	movne	r3, r2
 802a2d8:	ee00 3a10 	vmov	s0, r3
 802a2dc:	4770      	bx	lr
 802a2de:	4911      	ldr	r1, [pc, #68]	; (802a324 <floorf+0x80>)
 802a2e0:	4111      	asrs	r1, r2
 802a2e2:	420b      	tst	r3, r1
 802a2e4:	d0fa      	beq.n	802a2dc <floorf+0x38>
 802a2e6:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a31c <floorf+0x78>
 802a2ea:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a2ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a2f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2f6:	ddef      	ble.n	802a2d8 <floorf+0x34>
 802a2f8:	2b00      	cmp	r3, #0
 802a2fa:	bfbe      	ittt	lt
 802a2fc:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a300:	fa40 f202 	asrlt.w	r2, r0, r2
 802a304:	189b      	addlt	r3, r3, r2
 802a306:	ea23 0301 	bic.w	r3, r3, r1
 802a30a:	e7e5      	b.n	802a2d8 <floorf+0x34>
 802a30c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a310:	d3e4      	bcc.n	802a2dc <floorf+0x38>
 802a312:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a316:	4770      	bx	lr
 802a318:	2300      	movs	r3, #0
 802a31a:	e7dd      	b.n	802a2d8 <floorf+0x34>
 802a31c:	7149f2ca 	.word	0x7149f2ca
 802a320:	bf800000 	.word	0xbf800000
 802a324:	007fffff 	.word	0x007fffff

0802a328 <__kernel_cosf>:
 802a328:	ee10 3a10 	vmov	r3, s0
 802a32c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a330:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a334:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a338:	da05      	bge.n	802a346 <__kernel_cosf+0x1e>
 802a33a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a33e:	ee17 2a90 	vmov	r2, s15
 802a342:	2a00      	cmp	r2, #0
 802a344:	d03b      	beq.n	802a3be <__kernel_cosf+0x96>
 802a346:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a34a:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a3c4 <__kernel_cosf+0x9c>
 802a34e:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a3c8 <__kernel_cosf+0xa0>
 802a352:	4a1e      	ldr	r2, [pc, #120]	; (802a3cc <__kernel_cosf+0xa4>)
 802a354:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a358:	4293      	cmp	r3, r2
 802a35a:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a3d0 <__kernel_cosf+0xa8>
 802a35e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a362:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a3d4 <__kernel_cosf+0xac>
 802a366:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a36a:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a3d8 <__kernel_cosf+0xb0>
 802a36e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a372:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a3dc <__kernel_cosf+0xb4>
 802a376:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a37a:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a37e:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a382:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a386:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a38a:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a38e:	dc04      	bgt.n	802a39a <__kernel_cosf+0x72>
 802a390:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a394:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a398:	4770      	bx	lr
 802a39a:	4a11      	ldr	r2, [pc, #68]	; (802a3e0 <__kernel_cosf+0xb8>)
 802a39c:	4293      	cmp	r3, r2
 802a39e:	bfda      	itte	le
 802a3a0:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a3a4:	ee07 3a10 	vmovle	s14, r3
 802a3a8:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a3ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3b0:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a3b4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a3b8:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a3bc:	4770      	bx	lr
 802a3be:	eeb0 0a66 	vmov.f32	s0, s13
 802a3c2:	4770      	bx	lr
 802a3c4:	ad47d74e 	.word	0xad47d74e
 802a3c8:	310f74f6 	.word	0x310f74f6
 802a3cc:	3e999999 	.word	0x3e999999
 802a3d0:	b493f27c 	.word	0xb493f27c
 802a3d4:	37d00d01 	.word	0x37d00d01
 802a3d8:	bab60b61 	.word	0xbab60b61
 802a3dc:	3d2aaaab 	.word	0x3d2aaaab
 802a3e0:	3f480000 	.word	0x3f480000

0802a3e4 <__kernel_sinf>:
 802a3e4:	ee10 3a10 	vmov	r3, s0
 802a3e8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a3ec:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a3f0:	da04      	bge.n	802a3fc <__kernel_sinf+0x18>
 802a3f2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a3f6:	ee17 3a90 	vmov	r3, s15
 802a3fa:	b35b      	cbz	r3, 802a454 <__kernel_sinf+0x70>
 802a3fc:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a400:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a458 <__kernel_sinf+0x74>
 802a404:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a45c <__kernel_sinf+0x78>
 802a408:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a40c:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a460 <__kernel_sinf+0x7c>
 802a410:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a414:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a464 <__kernel_sinf+0x80>
 802a418:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a41c:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a468 <__kernel_sinf+0x84>
 802a420:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a424:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a428:	b930      	cbnz	r0, 802a438 <__kernel_sinf+0x54>
 802a42a:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a46c <__kernel_sinf+0x88>
 802a42e:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a432:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a436:	4770      	bx	lr
 802a438:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a43c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a440:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a444:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a448:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a470 <__kernel_sinf+0x8c>
 802a44c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a450:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a454:	4770      	bx	lr
 802a456:	bf00      	nop
 802a458:	2f2ec9d3 	.word	0x2f2ec9d3
 802a45c:	b2d72f34 	.word	0xb2d72f34
 802a460:	3638ef1b 	.word	0x3638ef1b
 802a464:	b9500d01 	.word	0xb9500d01
 802a468:	3c088889 	.word	0x3c088889
 802a46c:	be2aaaab 	.word	0xbe2aaaab
 802a470:	3e2aaaab 	.word	0x3e2aaaab

0802a474 <__ieee754_rem_pio2f>:
 802a474:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a476:	ee10 6a10 	vmov	r6, s0
 802a47a:	4b86      	ldr	r3, [pc, #536]	; (802a694 <__ieee754_rem_pio2f+0x220>)
 802a47c:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a480:	429d      	cmp	r5, r3
 802a482:	b087      	sub	sp, #28
 802a484:	4604      	mov	r4, r0
 802a486:	dc05      	bgt.n	802a494 <__ieee754_rem_pio2f+0x20>
 802a488:	2300      	movs	r3, #0
 802a48a:	ed80 0a00 	vstr	s0, [r0]
 802a48e:	6043      	str	r3, [r0, #4]
 802a490:	2000      	movs	r0, #0
 802a492:	e020      	b.n	802a4d6 <__ieee754_rem_pio2f+0x62>
 802a494:	4b80      	ldr	r3, [pc, #512]	; (802a698 <__ieee754_rem_pio2f+0x224>)
 802a496:	429d      	cmp	r5, r3
 802a498:	dc38      	bgt.n	802a50c <__ieee754_rem_pio2f+0x98>
 802a49a:	2e00      	cmp	r6, #0
 802a49c:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a69c <__ieee754_rem_pio2f+0x228>
 802a4a0:	4b7f      	ldr	r3, [pc, #508]	; (802a6a0 <__ieee754_rem_pio2f+0x22c>)
 802a4a2:	f025 050f 	bic.w	r5, r5, #15
 802a4a6:	dd18      	ble.n	802a4da <__ieee754_rem_pio2f+0x66>
 802a4a8:	429d      	cmp	r5, r3
 802a4aa:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a4ae:	bf09      	itett	eq
 802a4b0:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a6a4 <__ieee754_rem_pio2f+0x230>
 802a4b4:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a6a8 <__ieee754_rem_pio2f+0x234>
 802a4b8:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a4bc:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a6ac <__ieee754_rem_pio2f+0x238>
 802a4c0:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a4c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a4c8:	edc0 6a00 	vstr	s13, [r0]
 802a4cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a4d0:	edc0 7a01 	vstr	s15, [r0, #4]
 802a4d4:	2001      	movs	r0, #1
 802a4d6:	b007      	add	sp, #28
 802a4d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a4da:	429d      	cmp	r5, r3
 802a4dc:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a4e0:	bf09      	itett	eq
 802a4e2:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a6a4 <__ieee754_rem_pio2f+0x230>
 802a4e6:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a6a8 <__ieee754_rem_pio2f+0x234>
 802a4ea:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a4ee:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a6ac <__ieee754_rem_pio2f+0x238>
 802a4f2:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a4f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a4fa:	edc0 6a00 	vstr	s13, [r0]
 802a4fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a502:	edc0 7a01 	vstr	s15, [r0, #4]
 802a506:	f04f 30ff 	mov.w	r0, #4294967295
 802a50a:	e7e4      	b.n	802a4d6 <__ieee754_rem_pio2f+0x62>
 802a50c:	4b68      	ldr	r3, [pc, #416]	; (802a6b0 <__ieee754_rem_pio2f+0x23c>)
 802a50e:	429d      	cmp	r5, r3
 802a510:	dc71      	bgt.n	802a5f6 <__ieee754_rem_pio2f+0x182>
 802a512:	f7ff fe33 	bl	802a17c <fabsf>
 802a516:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a6b4 <__ieee754_rem_pio2f+0x240>
 802a51a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a51e:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a522:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a526:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a52a:	ee17 0a90 	vmov	r0, s15
 802a52e:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a69c <__ieee754_rem_pio2f+0x228>
 802a532:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a536:	281f      	cmp	r0, #31
 802a538:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a6a8 <__ieee754_rem_pio2f+0x234>
 802a53c:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a540:	eeb1 6a47 	vneg.f32	s12, s14
 802a544:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a548:	ee16 2a90 	vmov	r2, s13
 802a54c:	dc1c      	bgt.n	802a588 <__ieee754_rem_pio2f+0x114>
 802a54e:	495a      	ldr	r1, [pc, #360]	; (802a6b8 <__ieee754_rem_pio2f+0x244>)
 802a550:	1e47      	subs	r7, r0, #1
 802a552:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a556:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a55a:	428b      	cmp	r3, r1
 802a55c:	d014      	beq.n	802a588 <__ieee754_rem_pio2f+0x114>
 802a55e:	6022      	str	r2, [r4, #0]
 802a560:	ed94 7a00 	vldr	s14, [r4]
 802a564:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a568:	2e00      	cmp	r6, #0
 802a56a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a56e:	ed84 0a01 	vstr	s0, [r4, #4]
 802a572:	dab0      	bge.n	802a4d6 <__ieee754_rem_pio2f+0x62>
 802a574:	eeb1 7a47 	vneg.f32	s14, s14
 802a578:	eeb1 0a40 	vneg.f32	s0, s0
 802a57c:	ed84 7a00 	vstr	s14, [r4]
 802a580:	ed84 0a01 	vstr	s0, [r4, #4]
 802a584:	4240      	negs	r0, r0
 802a586:	e7a6      	b.n	802a4d6 <__ieee754_rem_pio2f+0x62>
 802a588:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a58c:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a590:	2908      	cmp	r1, #8
 802a592:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a596:	dde2      	ble.n	802a55e <__ieee754_rem_pio2f+0xea>
 802a598:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a6a4 <__ieee754_rem_pio2f+0x230>
 802a59c:	eef0 6a40 	vmov.f32	s13, s0
 802a5a0:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a5a4:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a5a8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a5ac:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a6ac <__ieee754_rem_pio2f+0x238>
 802a5b0:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a5b4:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a5b8:	ee15 2a90 	vmov	r2, s11
 802a5bc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a5c0:	1a5b      	subs	r3, r3, r1
 802a5c2:	2b19      	cmp	r3, #25
 802a5c4:	dc04      	bgt.n	802a5d0 <__ieee754_rem_pio2f+0x15c>
 802a5c6:	edc4 5a00 	vstr	s11, [r4]
 802a5ca:	eeb0 0a66 	vmov.f32	s0, s13
 802a5ce:	e7c7      	b.n	802a560 <__ieee754_rem_pio2f+0xec>
 802a5d0:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a6bc <__ieee754_rem_pio2f+0x248>
 802a5d4:	eeb0 0a66 	vmov.f32	s0, s13
 802a5d8:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a5dc:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a5e0:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a6c0 <__ieee754_rem_pio2f+0x24c>
 802a5e4:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a5e8:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a5ec:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a5f0:	ed84 7a00 	vstr	s14, [r4]
 802a5f4:	e7b4      	b.n	802a560 <__ieee754_rem_pio2f+0xec>
 802a5f6:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a5fa:	db06      	blt.n	802a60a <__ieee754_rem_pio2f+0x196>
 802a5fc:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a600:	edc0 7a01 	vstr	s15, [r0, #4]
 802a604:	edc0 7a00 	vstr	s15, [r0]
 802a608:	e742      	b.n	802a490 <__ieee754_rem_pio2f+0x1c>
 802a60a:	15ea      	asrs	r2, r5, #23
 802a60c:	3a86      	subs	r2, #134	; 0x86
 802a60e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a612:	ee07 3a90 	vmov	s15, r3
 802a616:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a61a:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a6c4 <__ieee754_rem_pio2f+0x250>
 802a61e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a622:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a626:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a62a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a62e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a632:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a636:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a63a:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a63e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a642:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a64a:	edcd 7a05 	vstr	s15, [sp, #20]
 802a64e:	d11e      	bne.n	802a68e <__ieee754_rem_pio2f+0x21a>
 802a650:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a658:	bf14      	ite	ne
 802a65a:	2302      	movne	r3, #2
 802a65c:	2301      	moveq	r3, #1
 802a65e:	491a      	ldr	r1, [pc, #104]	; (802a6c8 <__ieee754_rem_pio2f+0x254>)
 802a660:	9101      	str	r1, [sp, #4]
 802a662:	2102      	movs	r1, #2
 802a664:	9100      	str	r1, [sp, #0]
 802a666:	a803      	add	r0, sp, #12
 802a668:	4621      	mov	r1, r4
 802a66a:	f000 f895 	bl	802a798 <__kernel_rem_pio2f>
 802a66e:	2e00      	cmp	r6, #0
 802a670:	f6bf af31 	bge.w	802a4d6 <__ieee754_rem_pio2f+0x62>
 802a674:	edd4 7a00 	vldr	s15, [r4]
 802a678:	eef1 7a67 	vneg.f32	s15, s15
 802a67c:	edc4 7a00 	vstr	s15, [r4]
 802a680:	edd4 7a01 	vldr	s15, [r4, #4]
 802a684:	eef1 7a67 	vneg.f32	s15, s15
 802a688:	edc4 7a01 	vstr	s15, [r4, #4]
 802a68c:	e77a      	b.n	802a584 <__ieee754_rem_pio2f+0x110>
 802a68e:	2303      	movs	r3, #3
 802a690:	e7e5      	b.n	802a65e <__ieee754_rem_pio2f+0x1ea>
 802a692:	bf00      	nop
 802a694:	3f490fd8 	.word	0x3f490fd8
 802a698:	4016cbe3 	.word	0x4016cbe3
 802a69c:	3fc90f80 	.word	0x3fc90f80
 802a6a0:	3fc90fd0 	.word	0x3fc90fd0
 802a6a4:	37354400 	.word	0x37354400
 802a6a8:	37354443 	.word	0x37354443
 802a6ac:	2e85a308 	.word	0x2e85a308
 802a6b0:	43490f80 	.word	0x43490f80
 802a6b4:	3f22f984 	.word	0x3f22f984
 802a6b8:	08042f10 	.word	0x08042f10
 802a6bc:	2e85a300 	.word	0x2e85a300
 802a6c0:	248d3132 	.word	0x248d3132
 802a6c4:	43800000 	.word	0x43800000
 802a6c8:	08042f90 	.word	0x08042f90

0802a6cc <scalbnf>:
 802a6cc:	ee10 3a10 	vmov	r3, s0
 802a6d0:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a6d4:	d02b      	beq.n	802a72e <scalbnf+0x62>
 802a6d6:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a6da:	d302      	bcc.n	802a6e2 <scalbnf+0x16>
 802a6dc:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a6e0:	4770      	bx	lr
 802a6e2:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a6e6:	d123      	bne.n	802a730 <scalbnf+0x64>
 802a6e8:	4b24      	ldr	r3, [pc, #144]	; (802a77c <scalbnf+0xb0>)
 802a6ea:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a780 <scalbnf+0xb4>
 802a6ee:	4298      	cmp	r0, r3
 802a6f0:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a6f4:	db17      	blt.n	802a726 <scalbnf+0x5a>
 802a6f6:	ee10 3a10 	vmov	r3, s0
 802a6fa:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a6fe:	3a19      	subs	r2, #25
 802a700:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a704:	4288      	cmp	r0, r1
 802a706:	dd15      	ble.n	802a734 <scalbnf+0x68>
 802a708:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a784 <scalbnf+0xb8>
 802a70c:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a788 <scalbnf+0xbc>
 802a710:	ee10 3a10 	vmov	r3, s0
 802a714:	eeb0 7a67 	vmov.f32	s14, s15
 802a718:	2b00      	cmp	r3, #0
 802a71a:	bfb8      	it	lt
 802a71c:	eef0 7a66 	vmovlt.f32	s15, s13
 802a720:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a724:	4770      	bx	lr
 802a726:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a78c <scalbnf+0xc0>
 802a72a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a72e:	4770      	bx	lr
 802a730:	0dd2      	lsrs	r2, r2, #23
 802a732:	e7e5      	b.n	802a700 <scalbnf+0x34>
 802a734:	4410      	add	r0, r2
 802a736:	28fe      	cmp	r0, #254	; 0xfe
 802a738:	dce6      	bgt.n	802a708 <scalbnf+0x3c>
 802a73a:	2800      	cmp	r0, #0
 802a73c:	dd06      	ble.n	802a74c <scalbnf+0x80>
 802a73e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a742:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a746:	ee00 3a10 	vmov	s0, r3
 802a74a:	4770      	bx	lr
 802a74c:	f110 0f16 	cmn.w	r0, #22
 802a750:	da09      	bge.n	802a766 <scalbnf+0x9a>
 802a752:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a78c <scalbnf+0xc0>
 802a756:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a790 <scalbnf+0xc4>
 802a75a:	ee10 3a10 	vmov	r3, s0
 802a75e:	eeb0 7a67 	vmov.f32	s14, s15
 802a762:	2b00      	cmp	r3, #0
 802a764:	e7d9      	b.n	802a71a <scalbnf+0x4e>
 802a766:	3019      	adds	r0, #25
 802a768:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a76c:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a770:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a794 <scalbnf+0xc8>
 802a774:	ee07 3a90 	vmov	s15, r3
 802a778:	e7d7      	b.n	802a72a <scalbnf+0x5e>
 802a77a:	bf00      	nop
 802a77c:	ffff3cb0 	.word	0xffff3cb0
 802a780:	4c000000 	.word	0x4c000000
 802a784:	7149f2ca 	.word	0x7149f2ca
 802a788:	f149f2ca 	.word	0xf149f2ca
 802a78c:	0da24260 	.word	0x0da24260
 802a790:	8da24260 	.word	0x8da24260
 802a794:	33000000 	.word	0x33000000

0802a798 <__kernel_rem_pio2f>:
 802a798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a79c:	ed2d 8b04 	vpush	{d8-d9}
 802a7a0:	b0d9      	sub	sp, #356	; 0x164
 802a7a2:	4688      	mov	r8, r1
 802a7a4:	9002      	str	r0, [sp, #8]
 802a7a6:	49b8      	ldr	r1, [pc, #736]	; (802aa88 <__kernel_rem_pio2f+0x2f0>)
 802a7a8:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a7aa:	9301      	str	r3, [sp, #4]
 802a7ac:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a7b0:	9901      	ldr	r1, [sp, #4]
 802a7b2:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a7b4:	f101 3bff 	add.w	fp, r1, #4294967295
 802a7b8:	1d11      	adds	r1, r2, #4
 802a7ba:	db25      	blt.n	802a808 <__kernel_rem_pio2f+0x70>
 802a7bc:	1ed0      	subs	r0, r2, #3
 802a7be:	bf48      	it	mi
 802a7c0:	1d10      	addmi	r0, r2, #4
 802a7c2:	10c0      	asrs	r0, r0, #3
 802a7c4:	1c45      	adds	r5, r0, #1
 802a7c6:	00e9      	lsls	r1, r5, #3
 802a7c8:	eba0 070b 	sub.w	r7, r0, fp
 802a7cc:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802aa98 <__kernel_rem_pio2f+0x300>
 802a7d0:	9103      	str	r1, [sp, #12]
 802a7d2:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a7d6:	eb0a 0c0b 	add.w	ip, sl, fp
 802a7da:	ae1c      	add	r6, sp, #112	; 0x70
 802a7dc:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a7e0:	2400      	movs	r4, #0
 802a7e2:	4564      	cmp	r4, ip
 802a7e4:	dd12      	ble.n	802a80c <__kernel_rem_pio2f+0x74>
 802a7e6:	9901      	ldr	r1, [sp, #4]
 802a7e8:	ac1c      	add	r4, sp, #112	; 0x70
 802a7ea:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a7ee:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a7f2:	f04f 0c00 	mov.w	ip, #0
 802a7f6:	45d4      	cmp	ip, sl
 802a7f8:	dc27      	bgt.n	802a84a <__kernel_rem_pio2f+0xb2>
 802a7fa:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a7fe:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802aa98 <__kernel_rem_pio2f+0x300>
 802a802:	4627      	mov	r7, r4
 802a804:	2600      	movs	r6, #0
 802a806:	e016      	b.n	802a836 <__kernel_rem_pio2f+0x9e>
 802a808:	2000      	movs	r0, #0
 802a80a:	e7db      	b.n	802a7c4 <__kernel_rem_pio2f+0x2c>
 802a80c:	42e7      	cmn	r7, r4
 802a80e:	bf5d      	ittte	pl
 802a810:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a814:	ee07 1a90 	vmovpl	s15, r1
 802a818:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a81c:	eef0 7a47 	vmovmi.f32	s15, s14
 802a820:	ece6 7a01 	vstmia	r6!, {s15}
 802a824:	3401      	adds	r4, #1
 802a826:	e7dc      	b.n	802a7e2 <__kernel_rem_pio2f+0x4a>
 802a828:	ecfe 6a01 	vldmia	lr!, {s13}
 802a82c:	ed97 7a00 	vldr	s14, [r7]
 802a830:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a834:	3601      	adds	r6, #1
 802a836:	455e      	cmp	r6, fp
 802a838:	f1a7 0704 	sub.w	r7, r7, #4
 802a83c:	ddf4      	ble.n	802a828 <__kernel_rem_pio2f+0x90>
 802a83e:	ece9 7a01 	vstmia	r9!, {s15}
 802a842:	f10c 0c01 	add.w	ip, ip, #1
 802a846:	3404      	adds	r4, #4
 802a848:	e7d5      	b.n	802a7f6 <__kernel_rem_pio2f+0x5e>
 802a84a:	a908      	add	r1, sp, #32
 802a84c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a850:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a854:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802aa94 <__kernel_rem_pio2f+0x2fc>
 802a858:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802aa90 <__kernel_rem_pio2f+0x2f8>
 802a85c:	9105      	str	r1, [sp, #20]
 802a85e:	9304      	str	r3, [sp, #16]
 802a860:	4656      	mov	r6, sl
 802a862:	00b3      	lsls	r3, r6, #2
 802a864:	9306      	str	r3, [sp, #24]
 802a866:	ab58      	add	r3, sp, #352	; 0x160
 802a868:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a86c:	ac08      	add	r4, sp, #32
 802a86e:	ab44      	add	r3, sp, #272	; 0x110
 802a870:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a874:	46a4      	mov	ip, r4
 802a876:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a87a:	4637      	mov	r7, r6
 802a87c:	2f00      	cmp	r7, #0
 802a87e:	f1a0 0004 	sub.w	r0, r0, #4
 802a882:	dc4a      	bgt.n	802a91a <__kernel_rem_pio2f+0x182>
 802a884:	4628      	mov	r0, r5
 802a886:	9207      	str	r2, [sp, #28]
 802a888:	f7ff ff20 	bl	802a6cc <scalbnf>
 802a88c:	eeb0 8a40 	vmov.f32	s16, s0
 802a890:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a894:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a898:	f7ff fd04 	bl	802a2a4 <floorf>
 802a89c:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a8a0:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a8a4:	2d00      	cmp	r5, #0
 802a8a6:	9a07      	ldr	r2, [sp, #28]
 802a8a8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a8ac:	ee17 9a90 	vmov	r9, s15
 802a8b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a8b4:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a8b8:	dd41      	ble.n	802a93e <__kernel_rem_pio2f+0x1a6>
 802a8ba:	f106 3cff 	add.w	ip, r6, #4294967295
 802a8be:	ab08      	add	r3, sp, #32
 802a8c0:	f1c5 0e08 	rsb	lr, r5, #8
 802a8c4:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a8c8:	fa47 f00e 	asr.w	r0, r7, lr
 802a8cc:	4481      	add	r9, r0
 802a8ce:	fa00 f00e 	lsl.w	r0, r0, lr
 802a8d2:	1a3f      	subs	r7, r7, r0
 802a8d4:	f1c5 0007 	rsb	r0, r5, #7
 802a8d8:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a8dc:	4107      	asrs	r7, r0
 802a8de:	2f00      	cmp	r7, #0
 802a8e0:	dd3c      	ble.n	802a95c <__kernel_rem_pio2f+0x1c4>
 802a8e2:	f04f 0e00 	mov.w	lr, #0
 802a8e6:	f109 0901 	add.w	r9, r9, #1
 802a8ea:	4671      	mov	r1, lr
 802a8ec:	4576      	cmp	r6, lr
 802a8ee:	dc67      	bgt.n	802a9c0 <__kernel_rem_pio2f+0x228>
 802a8f0:	2d00      	cmp	r5, #0
 802a8f2:	dd03      	ble.n	802a8fc <__kernel_rem_pio2f+0x164>
 802a8f4:	2d01      	cmp	r5, #1
 802a8f6:	d074      	beq.n	802a9e2 <__kernel_rem_pio2f+0x24a>
 802a8f8:	2d02      	cmp	r5, #2
 802a8fa:	d07b      	beq.n	802a9f4 <__kernel_rem_pio2f+0x25c>
 802a8fc:	2f02      	cmp	r7, #2
 802a8fe:	d12d      	bne.n	802a95c <__kernel_rem_pio2f+0x1c4>
 802a900:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a904:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a908:	b341      	cbz	r1, 802a95c <__kernel_rem_pio2f+0x1c4>
 802a90a:	4628      	mov	r0, r5
 802a90c:	9207      	str	r2, [sp, #28]
 802a90e:	f7ff fedd 	bl	802a6cc <scalbnf>
 802a912:	9a07      	ldr	r2, [sp, #28]
 802a914:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a918:	e020      	b.n	802a95c <__kernel_rem_pio2f+0x1c4>
 802a91a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a91e:	3f01      	subs	r7, #1
 802a920:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a924:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a928:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a92c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a930:	ecac 0a01 	vstmia	ip!, {s0}
 802a934:	ed90 0a00 	vldr	s0, [r0]
 802a938:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a93c:	e79e      	b.n	802a87c <__kernel_rem_pio2f+0xe4>
 802a93e:	d105      	bne.n	802a94c <__kernel_rem_pio2f+0x1b4>
 802a940:	1e70      	subs	r0, r6, #1
 802a942:	ab08      	add	r3, sp, #32
 802a944:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a948:	11ff      	asrs	r7, r7, #7
 802a94a:	e7c8      	b.n	802a8de <__kernel_rem_pio2f+0x146>
 802a94c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a950:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a954:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a958:	da30      	bge.n	802a9bc <__kernel_rem_pio2f+0x224>
 802a95a:	2700      	movs	r7, #0
 802a95c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a960:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a964:	f040 809a 	bne.w	802aa9c <__kernel_rem_pio2f+0x304>
 802a968:	1e74      	subs	r4, r6, #1
 802a96a:	46a4      	mov	ip, r4
 802a96c:	2100      	movs	r1, #0
 802a96e:	45d4      	cmp	ip, sl
 802a970:	da47      	bge.n	802aa02 <__kernel_rem_pio2f+0x26a>
 802a972:	2900      	cmp	r1, #0
 802a974:	d063      	beq.n	802aa3e <__kernel_rem_pio2f+0x2a6>
 802a976:	ab08      	add	r3, sp, #32
 802a978:	3d08      	subs	r5, #8
 802a97a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a97e:	2b00      	cmp	r3, #0
 802a980:	d07f      	beq.n	802aa82 <__kernel_rem_pio2f+0x2ea>
 802a982:	4628      	mov	r0, r5
 802a984:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a988:	f7ff fea0 	bl	802a6cc <scalbnf>
 802a98c:	1c63      	adds	r3, r4, #1
 802a98e:	aa44      	add	r2, sp, #272	; 0x110
 802a990:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802aa94 <__kernel_rem_pio2f+0x2fc>
 802a994:	0099      	lsls	r1, r3, #2
 802a996:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a99a:	4623      	mov	r3, r4
 802a99c:	2b00      	cmp	r3, #0
 802a99e:	f280 80ad 	bge.w	802aafc <__kernel_rem_pio2f+0x364>
 802a9a2:	4623      	mov	r3, r4
 802a9a4:	2b00      	cmp	r3, #0
 802a9a6:	f2c0 80cb 	blt.w	802ab40 <__kernel_rem_pio2f+0x3a8>
 802a9aa:	aa44      	add	r2, sp, #272	; 0x110
 802a9ac:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a9b0:	4e36      	ldr	r6, [pc, #216]	; (802aa8c <__kernel_rem_pio2f+0x2f4>)
 802a9b2:	eddf 7a39 	vldr	s15, [pc, #228]	; 802aa98 <__kernel_rem_pio2f+0x300>
 802a9b6:	2000      	movs	r0, #0
 802a9b8:	1ae2      	subs	r2, r4, r3
 802a9ba:	e0b6      	b.n	802ab2a <__kernel_rem_pio2f+0x392>
 802a9bc:	2702      	movs	r7, #2
 802a9be:	e790      	b.n	802a8e2 <__kernel_rem_pio2f+0x14a>
 802a9c0:	6820      	ldr	r0, [r4, #0]
 802a9c2:	b949      	cbnz	r1, 802a9d8 <__kernel_rem_pio2f+0x240>
 802a9c4:	b118      	cbz	r0, 802a9ce <__kernel_rem_pio2f+0x236>
 802a9c6:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a9ca:	6020      	str	r0, [r4, #0]
 802a9cc:	2001      	movs	r0, #1
 802a9ce:	f10e 0e01 	add.w	lr, lr, #1
 802a9d2:	3404      	adds	r4, #4
 802a9d4:	4601      	mov	r1, r0
 802a9d6:	e789      	b.n	802a8ec <__kernel_rem_pio2f+0x154>
 802a9d8:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a9dc:	6020      	str	r0, [r4, #0]
 802a9de:	4608      	mov	r0, r1
 802a9e0:	e7f5      	b.n	802a9ce <__kernel_rem_pio2f+0x236>
 802a9e2:	1e74      	subs	r4, r6, #1
 802a9e4:	ab08      	add	r3, sp, #32
 802a9e6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a9ea:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a9ee:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a9f2:	e783      	b.n	802a8fc <__kernel_rem_pio2f+0x164>
 802a9f4:	1e74      	subs	r4, r6, #1
 802a9f6:	ab08      	add	r3, sp, #32
 802a9f8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a9fc:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802aa00:	e7f5      	b.n	802a9ee <__kernel_rem_pio2f+0x256>
 802aa02:	ab08      	add	r3, sp, #32
 802aa04:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802aa08:	f10c 3cff 	add.w	ip, ip, #4294967295
 802aa0c:	4301      	orrs	r1, r0
 802aa0e:	e7ae      	b.n	802a96e <__kernel_rem_pio2f+0x1d6>
 802aa10:	3001      	adds	r0, #1
 802aa12:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802aa16:	2f00      	cmp	r7, #0
 802aa18:	d0fa      	beq.n	802aa10 <__kernel_rem_pio2f+0x278>
 802aa1a:	9b06      	ldr	r3, [sp, #24]
 802aa1c:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802aa20:	eb0d 0403 	add.w	r4, sp, r3
 802aa24:	9b01      	ldr	r3, [sp, #4]
 802aa26:	18f7      	adds	r7, r6, r3
 802aa28:	ab1c      	add	r3, sp, #112	; 0x70
 802aa2a:	f106 0c01 	add.w	ip, r6, #1
 802aa2e:	3c4c      	subs	r4, #76	; 0x4c
 802aa30:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802aa34:	4430      	add	r0, r6
 802aa36:	4560      	cmp	r0, ip
 802aa38:	da04      	bge.n	802aa44 <__kernel_rem_pio2f+0x2ac>
 802aa3a:	4606      	mov	r6, r0
 802aa3c:	e711      	b.n	802a862 <__kernel_rem_pio2f+0xca>
 802aa3e:	9c05      	ldr	r4, [sp, #20]
 802aa40:	2001      	movs	r0, #1
 802aa42:	e7e6      	b.n	802aa12 <__kernel_rem_pio2f+0x27a>
 802aa44:	9b04      	ldr	r3, [sp, #16]
 802aa46:	f8dd e008 	ldr.w	lr, [sp, #8]
 802aa4a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802aa4e:	9306      	str	r3, [sp, #24]
 802aa50:	ee07 3a90 	vmov	s15, r3
 802aa54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aa58:	2600      	movs	r6, #0
 802aa5a:	ece7 7a01 	vstmia	r7!, {s15}
 802aa5e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802aa98 <__kernel_rem_pio2f+0x300>
 802aa62:	46b9      	mov	r9, r7
 802aa64:	455e      	cmp	r6, fp
 802aa66:	dd04      	ble.n	802aa72 <__kernel_rem_pio2f+0x2da>
 802aa68:	ece4 7a01 	vstmia	r4!, {s15}
 802aa6c:	f10c 0c01 	add.w	ip, ip, #1
 802aa70:	e7e1      	b.n	802aa36 <__kernel_rem_pio2f+0x29e>
 802aa72:	ecfe 6a01 	vldmia	lr!, {s13}
 802aa76:	ed39 7a01 	vldmdb	r9!, {s14}
 802aa7a:	3601      	adds	r6, #1
 802aa7c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aa80:	e7f0      	b.n	802aa64 <__kernel_rem_pio2f+0x2cc>
 802aa82:	3c01      	subs	r4, #1
 802aa84:	e777      	b.n	802a976 <__kernel_rem_pio2f+0x1de>
 802aa86:	bf00      	nop
 802aa88:	080432d4 	.word	0x080432d4
 802aa8c:	080432a8 	.word	0x080432a8
 802aa90:	43800000 	.word	0x43800000
 802aa94:	3b800000 	.word	0x3b800000
 802aa98:	00000000 	.word	0x00000000
 802aa9c:	9b03      	ldr	r3, [sp, #12]
 802aa9e:	eeb0 0a48 	vmov.f32	s0, s16
 802aaa2:	1a98      	subs	r0, r3, r2
 802aaa4:	f7ff fe12 	bl	802a6cc <scalbnf>
 802aaa8:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802aa90 <__kernel_rem_pio2f+0x2f8>
 802aaac:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802aab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aab4:	db19      	blt.n	802aaea <__kernel_rem_pio2f+0x352>
 802aab6:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802aa94 <__kernel_rem_pio2f+0x2fc>
 802aaba:	ee60 7a27 	vmul.f32	s15, s0, s15
 802aabe:	aa08      	add	r2, sp, #32
 802aac0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aac4:	1c74      	adds	r4, r6, #1
 802aac6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aaca:	3508      	adds	r5, #8
 802aacc:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802aad0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aad4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802aad8:	ee10 3a10 	vmov	r3, s0
 802aadc:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802aae0:	ee17 3a90 	vmov	r3, s15
 802aae4:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802aae8:	e74b      	b.n	802a982 <__kernel_rem_pio2f+0x1ea>
 802aaea:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802aaee:	aa08      	add	r2, sp, #32
 802aaf0:	ee10 3a10 	vmov	r3, s0
 802aaf4:	4634      	mov	r4, r6
 802aaf6:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802aafa:	e742      	b.n	802a982 <__kernel_rem_pio2f+0x1ea>
 802aafc:	a808      	add	r0, sp, #32
 802aafe:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802ab02:	9001      	str	r0, [sp, #4]
 802ab04:	ee07 0a90 	vmov	s15, r0
 802ab08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ab0c:	3b01      	subs	r3, #1
 802ab0e:	ee67 7a80 	vmul.f32	s15, s15, s0
 802ab12:	ee20 0a07 	vmul.f32	s0, s0, s14
 802ab16:	ed62 7a01 	vstmdb	r2!, {s15}
 802ab1a:	e73f      	b.n	802a99c <__kernel_rem_pio2f+0x204>
 802ab1c:	ecf6 6a01 	vldmia	r6!, {s13}
 802ab20:	ecb5 7a01 	vldmia	r5!, {s14}
 802ab24:	eee6 7a87 	vfma.f32	s15, s13, s14
 802ab28:	3001      	adds	r0, #1
 802ab2a:	4550      	cmp	r0, sl
 802ab2c:	dc01      	bgt.n	802ab32 <__kernel_rem_pio2f+0x39a>
 802ab2e:	4290      	cmp	r0, r2
 802ab30:	ddf4      	ble.n	802ab1c <__kernel_rem_pio2f+0x384>
 802ab32:	a858      	add	r0, sp, #352	; 0x160
 802ab34:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802ab38:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802ab3c:	3b01      	subs	r3, #1
 802ab3e:	e731      	b.n	802a9a4 <__kernel_rem_pio2f+0x20c>
 802ab40:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802ab42:	2b02      	cmp	r3, #2
 802ab44:	dc09      	bgt.n	802ab5a <__kernel_rem_pio2f+0x3c2>
 802ab46:	2b00      	cmp	r3, #0
 802ab48:	dc2b      	bgt.n	802aba2 <__kernel_rem_pio2f+0x40a>
 802ab4a:	d044      	beq.n	802abd6 <__kernel_rem_pio2f+0x43e>
 802ab4c:	f009 0007 	and.w	r0, r9, #7
 802ab50:	b059      	add	sp, #356	; 0x164
 802ab52:	ecbd 8b04 	vpop	{d8-d9}
 802ab56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ab5a:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802ab5c:	2b03      	cmp	r3, #3
 802ab5e:	d1f5      	bne.n	802ab4c <__kernel_rem_pio2f+0x3b4>
 802ab60:	aa30      	add	r2, sp, #192	; 0xc0
 802ab62:	1f0b      	subs	r3, r1, #4
 802ab64:	4413      	add	r3, r2
 802ab66:	461a      	mov	r2, r3
 802ab68:	4620      	mov	r0, r4
 802ab6a:	2800      	cmp	r0, #0
 802ab6c:	f1a2 0204 	sub.w	r2, r2, #4
 802ab70:	dc52      	bgt.n	802ac18 <__kernel_rem_pio2f+0x480>
 802ab72:	4622      	mov	r2, r4
 802ab74:	2a01      	cmp	r2, #1
 802ab76:	f1a3 0304 	sub.w	r3, r3, #4
 802ab7a:	dc5d      	bgt.n	802ac38 <__kernel_rem_pio2f+0x4a0>
 802ab7c:	ab30      	add	r3, sp, #192	; 0xc0
 802ab7e:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802aa98 <__kernel_rem_pio2f+0x300>
 802ab82:	440b      	add	r3, r1
 802ab84:	2c01      	cmp	r4, #1
 802ab86:	dc67      	bgt.n	802ac58 <__kernel_rem_pio2f+0x4c0>
 802ab88:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802ab8c:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802ab90:	2f00      	cmp	r7, #0
 802ab92:	d167      	bne.n	802ac64 <__kernel_rem_pio2f+0x4cc>
 802ab94:	edc8 6a00 	vstr	s13, [r8]
 802ab98:	ed88 7a01 	vstr	s14, [r8, #4]
 802ab9c:	edc8 7a02 	vstr	s15, [r8, #8]
 802aba0:	e7d4      	b.n	802ab4c <__kernel_rem_pio2f+0x3b4>
 802aba2:	ab30      	add	r3, sp, #192	; 0xc0
 802aba4:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802aa98 <__kernel_rem_pio2f+0x300>
 802aba8:	440b      	add	r3, r1
 802abaa:	4622      	mov	r2, r4
 802abac:	2a00      	cmp	r2, #0
 802abae:	da24      	bge.n	802abfa <__kernel_rem_pio2f+0x462>
 802abb0:	b34f      	cbz	r7, 802ac06 <__kernel_rem_pio2f+0x46e>
 802abb2:	eef1 7a47 	vneg.f32	s15, s14
 802abb6:	edc8 7a00 	vstr	s15, [r8]
 802abba:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802abbe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802abc2:	aa31      	add	r2, sp, #196	; 0xc4
 802abc4:	2301      	movs	r3, #1
 802abc6:	429c      	cmp	r4, r3
 802abc8:	da20      	bge.n	802ac0c <__kernel_rem_pio2f+0x474>
 802abca:	b10f      	cbz	r7, 802abd0 <__kernel_rem_pio2f+0x438>
 802abcc:	eef1 7a67 	vneg.f32	s15, s15
 802abd0:	edc8 7a01 	vstr	s15, [r8, #4]
 802abd4:	e7ba      	b.n	802ab4c <__kernel_rem_pio2f+0x3b4>
 802abd6:	ab30      	add	r3, sp, #192	; 0xc0
 802abd8:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802aa98 <__kernel_rem_pio2f+0x300>
 802abdc:	440b      	add	r3, r1
 802abde:	2c00      	cmp	r4, #0
 802abe0:	da05      	bge.n	802abee <__kernel_rem_pio2f+0x456>
 802abe2:	b10f      	cbz	r7, 802abe8 <__kernel_rem_pio2f+0x450>
 802abe4:	eef1 7a67 	vneg.f32	s15, s15
 802abe8:	edc8 7a00 	vstr	s15, [r8]
 802abec:	e7ae      	b.n	802ab4c <__kernel_rem_pio2f+0x3b4>
 802abee:	ed33 7a01 	vldmdb	r3!, {s14}
 802abf2:	3c01      	subs	r4, #1
 802abf4:	ee77 7a87 	vadd.f32	s15, s15, s14
 802abf8:	e7f1      	b.n	802abde <__kernel_rem_pio2f+0x446>
 802abfa:	ed73 7a01 	vldmdb	r3!, {s15}
 802abfe:	3a01      	subs	r2, #1
 802ac00:	ee37 7a27 	vadd.f32	s14, s14, s15
 802ac04:	e7d2      	b.n	802abac <__kernel_rem_pio2f+0x414>
 802ac06:	eef0 7a47 	vmov.f32	s15, s14
 802ac0a:	e7d4      	b.n	802abb6 <__kernel_rem_pio2f+0x41e>
 802ac0c:	ecb2 7a01 	vldmia	r2!, {s14}
 802ac10:	3301      	adds	r3, #1
 802ac12:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac16:	e7d6      	b.n	802abc6 <__kernel_rem_pio2f+0x42e>
 802ac18:	edd2 7a00 	vldr	s15, [r2]
 802ac1c:	edd2 6a01 	vldr	s13, [r2, #4]
 802ac20:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ac24:	3801      	subs	r0, #1
 802ac26:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac2a:	ed82 7a00 	vstr	s14, [r2]
 802ac2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ac32:	edc2 7a01 	vstr	s15, [r2, #4]
 802ac36:	e798      	b.n	802ab6a <__kernel_rem_pio2f+0x3d2>
 802ac38:	edd3 7a00 	vldr	s15, [r3]
 802ac3c:	edd3 6a01 	vldr	s13, [r3, #4]
 802ac40:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ac44:	3a01      	subs	r2, #1
 802ac46:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac4a:	ed83 7a00 	vstr	s14, [r3]
 802ac4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ac52:	edc3 7a01 	vstr	s15, [r3, #4]
 802ac56:	e78d      	b.n	802ab74 <__kernel_rem_pio2f+0x3dc>
 802ac58:	ed33 7a01 	vldmdb	r3!, {s14}
 802ac5c:	3c01      	subs	r4, #1
 802ac5e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac62:	e78f      	b.n	802ab84 <__kernel_rem_pio2f+0x3ec>
 802ac64:	eef1 6a66 	vneg.f32	s13, s13
 802ac68:	eeb1 7a47 	vneg.f32	s14, s14
 802ac6c:	edc8 6a00 	vstr	s13, [r8]
 802ac70:	ed88 7a01 	vstr	s14, [r8, #4]
 802ac74:	eef1 7a67 	vneg.f32	s15, s15
 802ac78:	e790      	b.n	802ab9c <__kernel_rem_pio2f+0x404>
 802ac7a:	bf00      	nop

0802ac7c <abort>:
 802ac7c:	b508      	push	{r3, lr}
 802ac7e:	2006      	movs	r0, #6
 802ac80:	f000 fa3a 	bl	802b0f8 <raise>
 802ac84:	2001      	movs	r0, #1
 802ac86:	f7d7 fb31 	bl	80022ec <_exit>
	...

0802ac8c <__assert_func>:
 802ac8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802ac8e:	4614      	mov	r4, r2
 802ac90:	461a      	mov	r2, r3
 802ac92:	4b09      	ldr	r3, [pc, #36]	; (802acb8 <__assert_func+0x2c>)
 802ac94:	681b      	ldr	r3, [r3, #0]
 802ac96:	4605      	mov	r5, r0
 802ac98:	68d8      	ldr	r0, [r3, #12]
 802ac9a:	b14c      	cbz	r4, 802acb0 <__assert_func+0x24>
 802ac9c:	4b07      	ldr	r3, [pc, #28]	; (802acbc <__assert_func+0x30>)
 802ac9e:	9100      	str	r1, [sp, #0]
 802aca0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802aca4:	4906      	ldr	r1, [pc, #24]	; (802acc0 <__assert_func+0x34>)
 802aca6:	462b      	mov	r3, r5
 802aca8:	f000 f982 	bl	802afb0 <fiprintf>
 802acac:	f7ff ffe6 	bl	802ac7c <abort>
 802acb0:	4b04      	ldr	r3, [pc, #16]	; (802acc4 <__assert_func+0x38>)
 802acb2:	461c      	mov	r4, r3
 802acb4:	e7f3      	b.n	802ac9e <__assert_func+0x12>
 802acb6:	bf00      	nop
 802acb8:	20000160 	.word	0x20000160
 802acbc:	080432e0 	.word	0x080432e0
 802acc0:	080432ed 	.word	0x080432ed
 802acc4:	0804331b 	.word	0x0804331b

0802acc8 <atexit>:
 802acc8:	2300      	movs	r3, #0
 802acca:	4601      	mov	r1, r0
 802accc:	461a      	mov	r2, r3
 802acce:	4618      	mov	r0, r3
 802acd0:	f000 bb16 	b.w	802b300 <__register_exitproc>

0802acd4 <malloc>:
 802acd4:	4b02      	ldr	r3, [pc, #8]	; (802ace0 <malloc+0xc>)
 802acd6:	4601      	mov	r1, r0
 802acd8:	6818      	ldr	r0, [r3, #0]
 802acda:	f000 b82b 	b.w	802ad34 <_malloc_r>
 802acde:	bf00      	nop
 802ace0:	20000160 	.word	0x20000160

0802ace4 <free>:
 802ace4:	4b02      	ldr	r3, [pc, #8]	; (802acf0 <free+0xc>)
 802ace6:	4601      	mov	r1, r0
 802ace8:	6818      	ldr	r0, [r3, #0]
 802acea:	f000 bb67 	b.w	802b3bc <_free_r>
 802acee:	bf00      	nop
 802acf0:	20000160 	.word	0x20000160

0802acf4 <sbrk_aligned>:
 802acf4:	b570      	push	{r4, r5, r6, lr}
 802acf6:	4e0e      	ldr	r6, [pc, #56]	; (802ad30 <sbrk_aligned+0x3c>)
 802acf8:	460c      	mov	r4, r1
 802acfa:	6831      	ldr	r1, [r6, #0]
 802acfc:	4605      	mov	r5, r0
 802acfe:	b911      	cbnz	r1, 802ad06 <sbrk_aligned+0x12>
 802ad00:	f000 faa0 	bl	802b244 <_sbrk_r>
 802ad04:	6030      	str	r0, [r6, #0]
 802ad06:	4621      	mov	r1, r4
 802ad08:	4628      	mov	r0, r5
 802ad0a:	f000 fa9b 	bl	802b244 <_sbrk_r>
 802ad0e:	1c43      	adds	r3, r0, #1
 802ad10:	d00a      	beq.n	802ad28 <sbrk_aligned+0x34>
 802ad12:	1cc4      	adds	r4, r0, #3
 802ad14:	f024 0403 	bic.w	r4, r4, #3
 802ad18:	42a0      	cmp	r0, r4
 802ad1a:	d007      	beq.n	802ad2c <sbrk_aligned+0x38>
 802ad1c:	1a21      	subs	r1, r4, r0
 802ad1e:	4628      	mov	r0, r5
 802ad20:	f000 fa90 	bl	802b244 <_sbrk_r>
 802ad24:	3001      	adds	r0, #1
 802ad26:	d101      	bne.n	802ad2c <sbrk_aligned+0x38>
 802ad28:	f04f 34ff 	mov.w	r4, #4294967295
 802ad2c:	4620      	mov	r0, r4
 802ad2e:	bd70      	pop	{r4, r5, r6, pc}
 802ad30:	200136fc 	.word	0x200136fc

0802ad34 <_malloc_r>:
 802ad34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ad38:	1ccd      	adds	r5, r1, #3
 802ad3a:	f025 0503 	bic.w	r5, r5, #3
 802ad3e:	3508      	adds	r5, #8
 802ad40:	2d0c      	cmp	r5, #12
 802ad42:	bf38      	it	cc
 802ad44:	250c      	movcc	r5, #12
 802ad46:	2d00      	cmp	r5, #0
 802ad48:	4607      	mov	r7, r0
 802ad4a:	db01      	blt.n	802ad50 <_malloc_r+0x1c>
 802ad4c:	42a9      	cmp	r1, r5
 802ad4e:	d905      	bls.n	802ad5c <_malloc_r+0x28>
 802ad50:	230c      	movs	r3, #12
 802ad52:	603b      	str	r3, [r7, #0]
 802ad54:	2600      	movs	r6, #0
 802ad56:	4630      	mov	r0, r6
 802ad58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ad5c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ae30 <_malloc_r+0xfc>
 802ad60:	f000 f868 	bl	802ae34 <__malloc_lock>
 802ad64:	f8d8 3000 	ldr.w	r3, [r8]
 802ad68:	461c      	mov	r4, r3
 802ad6a:	bb5c      	cbnz	r4, 802adc4 <_malloc_r+0x90>
 802ad6c:	4629      	mov	r1, r5
 802ad6e:	4638      	mov	r0, r7
 802ad70:	f7ff ffc0 	bl	802acf4 <sbrk_aligned>
 802ad74:	1c43      	adds	r3, r0, #1
 802ad76:	4604      	mov	r4, r0
 802ad78:	d155      	bne.n	802ae26 <_malloc_r+0xf2>
 802ad7a:	f8d8 4000 	ldr.w	r4, [r8]
 802ad7e:	4626      	mov	r6, r4
 802ad80:	2e00      	cmp	r6, #0
 802ad82:	d145      	bne.n	802ae10 <_malloc_r+0xdc>
 802ad84:	2c00      	cmp	r4, #0
 802ad86:	d048      	beq.n	802ae1a <_malloc_r+0xe6>
 802ad88:	6823      	ldr	r3, [r4, #0]
 802ad8a:	4631      	mov	r1, r6
 802ad8c:	4638      	mov	r0, r7
 802ad8e:	eb04 0903 	add.w	r9, r4, r3
 802ad92:	f000 fa57 	bl	802b244 <_sbrk_r>
 802ad96:	4581      	cmp	r9, r0
 802ad98:	d13f      	bne.n	802ae1a <_malloc_r+0xe6>
 802ad9a:	6821      	ldr	r1, [r4, #0]
 802ad9c:	1a6d      	subs	r5, r5, r1
 802ad9e:	4629      	mov	r1, r5
 802ada0:	4638      	mov	r0, r7
 802ada2:	f7ff ffa7 	bl	802acf4 <sbrk_aligned>
 802ada6:	3001      	adds	r0, #1
 802ada8:	d037      	beq.n	802ae1a <_malloc_r+0xe6>
 802adaa:	6823      	ldr	r3, [r4, #0]
 802adac:	442b      	add	r3, r5
 802adae:	6023      	str	r3, [r4, #0]
 802adb0:	f8d8 3000 	ldr.w	r3, [r8]
 802adb4:	2b00      	cmp	r3, #0
 802adb6:	d038      	beq.n	802ae2a <_malloc_r+0xf6>
 802adb8:	685a      	ldr	r2, [r3, #4]
 802adba:	42a2      	cmp	r2, r4
 802adbc:	d12b      	bne.n	802ae16 <_malloc_r+0xe2>
 802adbe:	2200      	movs	r2, #0
 802adc0:	605a      	str	r2, [r3, #4]
 802adc2:	e00f      	b.n	802ade4 <_malloc_r+0xb0>
 802adc4:	6822      	ldr	r2, [r4, #0]
 802adc6:	1b52      	subs	r2, r2, r5
 802adc8:	d41f      	bmi.n	802ae0a <_malloc_r+0xd6>
 802adca:	2a0b      	cmp	r2, #11
 802adcc:	d917      	bls.n	802adfe <_malloc_r+0xca>
 802adce:	1961      	adds	r1, r4, r5
 802add0:	42a3      	cmp	r3, r4
 802add2:	6025      	str	r5, [r4, #0]
 802add4:	bf18      	it	ne
 802add6:	6059      	strne	r1, [r3, #4]
 802add8:	6863      	ldr	r3, [r4, #4]
 802adda:	bf08      	it	eq
 802addc:	f8c8 1000 	streq.w	r1, [r8]
 802ade0:	5162      	str	r2, [r4, r5]
 802ade2:	604b      	str	r3, [r1, #4]
 802ade4:	4638      	mov	r0, r7
 802ade6:	f104 060b 	add.w	r6, r4, #11
 802adea:	f000 f829 	bl	802ae40 <__malloc_unlock>
 802adee:	f026 0607 	bic.w	r6, r6, #7
 802adf2:	1d23      	adds	r3, r4, #4
 802adf4:	1af2      	subs	r2, r6, r3
 802adf6:	d0ae      	beq.n	802ad56 <_malloc_r+0x22>
 802adf8:	1b9b      	subs	r3, r3, r6
 802adfa:	50a3      	str	r3, [r4, r2]
 802adfc:	e7ab      	b.n	802ad56 <_malloc_r+0x22>
 802adfe:	42a3      	cmp	r3, r4
 802ae00:	6862      	ldr	r2, [r4, #4]
 802ae02:	d1dd      	bne.n	802adc0 <_malloc_r+0x8c>
 802ae04:	f8c8 2000 	str.w	r2, [r8]
 802ae08:	e7ec      	b.n	802ade4 <_malloc_r+0xb0>
 802ae0a:	4623      	mov	r3, r4
 802ae0c:	6864      	ldr	r4, [r4, #4]
 802ae0e:	e7ac      	b.n	802ad6a <_malloc_r+0x36>
 802ae10:	4634      	mov	r4, r6
 802ae12:	6876      	ldr	r6, [r6, #4]
 802ae14:	e7b4      	b.n	802ad80 <_malloc_r+0x4c>
 802ae16:	4613      	mov	r3, r2
 802ae18:	e7cc      	b.n	802adb4 <_malloc_r+0x80>
 802ae1a:	230c      	movs	r3, #12
 802ae1c:	603b      	str	r3, [r7, #0]
 802ae1e:	4638      	mov	r0, r7
 802ae20:	f000 f80e 	bl	802ae40 <__malloc_unlock>
 802ae24:	e797      	b.n	802ad56 <_malloc_r+0x22>
 802ae26:	6025      	str	r5, [r4, #0]
 802ae28:	e7dc      	b.n	802ade4 <_malloc_r+0xb0>
 802ae2a:	605b      	str	r3, [r3, #4]
 802ae2c:	deff      	udf	#255	; 0xff
 802ae2e:	bf00      	nop
 802ae30:	200136f8 	.word	0x200136f8

0802ae34 <__malloc_lock>:
 802ae34:	4801      	ldr	r0, [pc, #4]	; (802ae3c <__malloc_lock+0x8>)
 802ae36:	f000 ba52 	b.w	802b2de <__retarget_lock_acquire_recursive>
 802ae3a:	bf00      	nop
 802ae3c:	20013841 	.word	0x20013841

0802ae40 <__malloc_unlock>:
 802ae40:	4801      	ldr	r0, [pc, #4]	; (802ae48 <__malloc_unlock+0x8>)
 802ae42:	f000 ba4d 	b.w	802b2e0 <__retarget_lock_release_recursive>
 802ae46:	bf00      	nop
 802ae48:	20013841 	.word	0x20013841

0802ae4c <__cxa_atexit>:
 802ae4c:	b510      	push	{r4, lr}
 802ae4e:	4c05      	ldr	r4, [pc, #20]	; (802ae64 <__cxa_atexit+0x18>)
 802ae50:	4613      	mov	r3, r2
 802ae52:	b12c      	cbz	r4, 802ae60 <__cxa_atexit+0x14>
 802ae54:	460a      	mov	r2, r1
 802ae56:	4601      	mov	r1, r0
 802ae58:	2002      	movs	r0, #2
 802ae5a:	f000 fa51 	bl	802b300 <__register_exitproc>
 802ae5e:	bd10      	pop	{r4, pc}
 802ae60:	4620      	mov	r0, r4
 802ae62:	e7fc      	b.n	802ae5e <__cxa_atexit+0x12>
 802ae64:	0802b301 	.word	0x0802b301

0802ae68 <std>:
 802ae68:	2300      	movs	r3, #0
 802ae6a:	b510      	push	{r4, lr}
 802ae6c:	4604      	mov	r4, r0
 802ae6e:	e9c0 3300 	strd	r3, r3, [r0]
 802ae72:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802ae76:	6083      	str	r3, [r0, #8]
 802ae78:	8181      	strh	r1, [r0, #12]
 802ae7a:	6643      	str	r3, [r0, #100]	; 0x64
 802ae7c:	81c2      	strh	r2, [r0, #14]
 802ae7e:	6183      	str	r3, [r0, #24]
 802ae80:	4619      	mov	r1, r3
 802ae82:	2208      	movs	r2, #8
 802ae84:	305c      	adds	r0, #92	; 0x5c
 802ae86:	f000 f906 	bl	802b096 <memset>
 802ae8a:	4b0d      	ldr	r3, [pc, #52]	; (802aec0 <std+0x58>)
 802ae8c:	6263      	str	r3, [r4, #36]	; 0x24
 802ae8e:	4b0d      	ldr	r3, [pc, #52]	; (802aec4 <std+0x5c>)
 802ae90:	62a3      	str	r3, [r4, #40]	; 0x28
 802ae92:	4b0d      	ldr	r3, [pc, #52]	; (802aec8 <std+0x60>)
 802ae94:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ae96:	4b0d      	ldr	r3, [pc, #52]	; (802aecc <std+0x64>)
 802ae98:	6323      	str	r3, [r4, #48]	; 0x30
 802ae9a:	4b0d      	ldr	r3, [pc, #52]	; (802aed0 <std+0x68>)
 802ae9c:	6224      	str	r4, [r4, #32]
 802ae9e:	429c      	cmp	r4, r3
 802aea0:	d006      	beq.n	802aeb0 <std+0x48>
 802aea2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802aea6:	4294      	cmp	r4, r2
 802aea8:	d002      	beq.n	802aeb0 <std+0x48>
 802aeaa:	33d0      	adds	r3, #208	; 0xd0
 802aeac:	429c      	cmp	r4, r3
 802aeae:	d105      	bne.n	802aebc <std+0x54>
 802aeb0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802aeb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aeb8:	f000 ba10 	b.w	802b2dc <__retarget_lock_init_recursive>
 802aebc:	bd10      	pop	{r4, pc}
 802aebe:	bf00      	nop
 802aec0:	0802b011 	.word	0x0802b011
 802aec4:	0802b033 	.word	0x0802b033
 802aec8:	0802b06b 	.word	0x0802b06b
 802aecc:	0802b08f 	.word	0x0802b08f
 802aed0:	20013700 	.word	0x20013700

0802aed4 <stdio_exit_handler>:
 802aed4:	4a02      	ldr	r2, [pc, #8]	; (802aee0 <stdio_exit_handler+0xc>)
 802aed6:	4903      	ldr	r1, [pc, #12]	; (802aee4 <stdio_exit_handler+0x10>)
 802aed8:	4803      	ldr	r0, [pc, #12]	; (802aee8 <stdio_exit_handler+0x14>)
 802aeda:	f000 b87b 	b.w	802afd4 <_fwalk_sglue>
 802aede:	bf00      	nop
 802aee0:	20000108 	.word	0x20000108
 802aee4:	0802bb09 	.word	0x0802bb09
 802aee8:	20000114 	.word	0x20000114

0802aeec <cleanup_stdio>:
 802aeec:	6841      	ldr	r1, [r0, #4]
 802aeee:	4b0c      	ldr	r3, [pc, #48]	; (802af20 <cleanup_stdio+0x34>)
 802aef0:	4299      	cmp	r1, r3
 802aef2:	b510      	push	{r4, lr}
 802aef4:	4604      	mov	r4, r0
 802aef6:	d001      	beq.n	802aefc <cleanup_stdio+0x10>
 802aef8:	f000 fe06 	bl	802bb08 <_fflush_r>
 802aefc:	68a1      	ldr	r1, [r4, #8]
 802aefe:	4b09      	ldr	r3, [pc, #36]	; (802af24 <cleanup_stdio+0x38>)
 802af00:	4299      	cmp	r1, r3
 802af02:	d002      	beq.n	802af0a <cleanup_stdio+0x1e>
 802af04:	4620      	mov	r0, r4
 802af06:	f000 fdff 	bl	802bb08 <_fflush_r>
 802af0a:	68e1      	ldr	r1, [r4, #12]
 802af0c:	4b06      	ldr	r3, [pc, #24]	; (802af28 <cleanup_stdio+0x3c>)
 802af0e:	4299      	cmp	r1, r3
 802af10:	d004      	beq.n	802af1c <cleanup_stdio+0x30>
 802af12:	4620      	mov	r0, r4
 802af14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af18:	f000 bdf6 	b.w	802bb08 <_fflush_r>
 802af1c:	bd10      	pop	{r4, pc}
 802af1e:	bf00      	nop
 802af20:	20013700 	.word	0x20013700
 802af24:	20013768 	.word	0x20013768
 802af28:	200137d0 	.word	0x200137d0

0802af2c <global_stdio_init.part.0>:
 802af2c:	b510      	push	{r4, lr}
 802af2e:	4b0b      	ldr	r3, [pc, #44]	; (802af5c <global_stdio_init.part.0+0x30>)
 802af30:	4c0b      	ldr	r4, [pc, #44]	; (802af60 <global_stdio_init.part.0+0x34>)
 802af32:	4a0c      	ldr	r2, [pc, #48]	; (802af64 <global_stdio_init.part.0+0x38>)
 802af34:	601a      	str	r2, [r3, #0]
 802af36:	4620      	mov	r0, r4
 802af38:	2200      	movs	r2, #0
 802af3a:	2104      	movs	r1, #4
 802af3c:	f7ff ff94 	bl	802ae68 <std>
 802af40:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802af44:	2201      	movs	r2, #1
 802af46:	2109      	movs	r1, #9
 802af48:	f7ff ff8e 	bl	802ae68 <std>
 802af4c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802af50:	2202      	movs	r2, #2
 802af52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af56:	2112      	movs	r1, #18
 802af58:	f7ff bf86 	b.w	802ae68 <std>
 802af5c:	20013838 	.word	0x20013838
 802af60:	20013700 	.word	0x20013700
 802af64:	0802aed5 	.word	0x0802aed5

0802af68 <__sfp_lock_acquire>:
 802af68:	4801      	ldr	r0, [pc, #4]	; (802af70 <__sfp_lock_acquire+0x8>)
 802af6a:	f000 b9b8 	b.w	802b2de <__retarget_lock_acquire_recursive>
 802af6e:	bf00      	nop
 802af70:	20013842 	.word	0x20013842

0802af74 <__sfp_lock_release>:
 802af74:	4801      	ldr	r0, [pc, #4]	; (802af7c <__sfp_lock_release+0x8>)
 802af76:	f000 b9b3 	b.w	802b2e0 <__retarget_lock_release_recursive>
 802af7a:	bf00      	nop
 802af7c:	20013842 	.word	0x20013842

0802af80 <__sinit>:
 802af80:	b510      	push	{r4, lr}
 802af82:	4604      	mov	r4, r0
 802af84:	f7ff fff0 	bl	802af68 <__sfp_lock_acquire>
 802af88:	6a23      	ldr	r3, [r4, #32]
 802af8a:	b11b      	cbz	r3, 802af94 <__sinit+0x14>
 802af8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af90:	f7ff bff0 	b.w	802af74 <__sfp_lock_release>
 802af94:	4b04      	ldr	r3, [pc, #16]	; (802afa8 <__sinit+0x28>)
 802af96:	6223      	str	r3, [r4, #32]
 802af98:	4b04      	ldr	r3, [pc, #16]	; (802afac <__sinit+0x2c>)
 802af9a:	681b      	ldr	r3, [r3, #0]
 802af9c:	2b00      	cmp	r3, #0
 802af9e:	d1f5      	bne.n	802af8c <__sinit+0xc>
 802afa0:	f7ff ffc4 	bl	802af2c <global_stdio_init.part.0>
 802afa4:	e7f2      	b.n	802af8c <__sinit+0xc>
 802afa6:	bf00      	nop
 802afa8:	0802aeed 	.word	0x0802aeed
 802afac:	20013838 	.word	0x20013838

0802afb0 <fiprintf>:
 802afb0:	b40e      	push	{r1, r2, r3}
 802afb2:	b503      	push	{r0, r1, lr}
 802afb4:	4601      	mov	r1, r0
 802afb6:	ab03      	add	r3, sp, #12
 802afb8:	4805      	ldr	r0, [pc, #20]	; (802afd0 <fiprintf+0x20>)
 802afba:	f853 2b04 	ldr.w	r2, [r3], #4
 802afbe:	6800      	ldr	r0, [r0, #0]
 802afc0:	9301      	str	r3, [sp, #4]
 802afc2:	f000 fa71 	bl	802b4a8 <_vfiprintf_r>
 802afc6:	b002      	add	sp, #8
 802afc8:	f85d eb04 	ldr.w	lr, [sp], #4
 802afcc:	b003      	add	sp, #12
 802afce:	4770      	bx	lr
 802afd0:	20000160 	.word	0x20000160

0802afd4 <_fwalk_sglue>:
 802afd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802afd8:	4607      	mov	r7, r0
 802afda:	4688      	mov	r8, r1
 802afdc:	4614      	mov	r4, r2
 802afde:	2600      	movs	r6, #0
 802afe0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802afe4:	f1b9 0901 	subs.w	r9, r9, #1
 802afe8:	d505      	bpl.n	802aff6 <_fwalk_sglue+0x22>
 802afea:	6824      	ldr	r4, [r4, #0]
 802afec:	2c00      	cmp	r4, #0
 802afee:	d1f7      	bne.n	802afe0 <_fwalk_sglue+0xc>
 802aff0:	4630      	mov	r0, r6
 802aff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802aff6:	89ab      	ldrh	r3, [r5, #12]
 802aff8:	2b01      	cmp	r3, #1
 802affa:	d907      	bls.n	802b00c <_fwalk_sglue+0x38>
 802affc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b000:	3301      	adds	r3, #1
 802b002:	d003      	beq.n	802b00c <_fwalk_sglue+0x38>
 802b004:	4629      	mov	r1, r5
 802b006:	4638      	mov	r0, r7
 802b008:	47c0      	blx	r8
 802b00a:	4306      	orrs	r6, r0
 802b00c:	3568      	adds	r5, #104	; 0x68
 802b00e:	e7e9      	b.n	802afe4 <_fwalk_sglue+0x10>

0802b010 <__sread>:
 802b010:	b510      	push	{r4, lr}
 802b012:	460c      	mov	r4, r1
 802b014:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b018:	f000 f8ee 	bl	802b1f8 <_read_r>
 802b01c:	2800      	cmp	r0, #0
 802b01e:	bfab      	itete	ge
 802b020:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b022:	89a3      	ldrhlt	r3, [r4, #12]
 802b024:	181b      	addge	r3, r3, r0
 802b026:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b02a:	bfac      	ite	ge
 802b02c:	6563      	strge	r3, [r4, #84]	; 0x54
 802b02e:	81a3      	strhlt	r3, [r4, #12]
 802b030:	bd10      	pop	{r4, pc}

0802b032 <__swrite>:
 802b032:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b036:	461f      	mov	r7, r3
 802b038:	898b      	ldrh	r3, [r1, #12]
 802b03a:	05db      	lsls	r3, r3, #23
 802b03c:	4605      	mov	r5, r0
 802b03e:	460c      	mov	r4, r1
 802b040:	4616      	mov	r6, r2
 802b042:	d505      	bpl.n	802b050 <__swrite+0x1e>
 802b044:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b048:	2302      	movs	r3, #2
 802b04a:	2200      	movs	r2, #0
 802b04c:	f000 f8c2 	bl	802b1d4 <_lseek_r>
 802b050:	89a3      	ldrh	r3, [r4, #12]
 802b052:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b056:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b05a:	81a3      	strh	r3, [r4, #12]
 802b05c:	4632      	mov	r2, r6
 802b05e:	463b      	mov	r3, r7
 802b060:	4628      	mov	r0, r5
 802b062:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b066:	f000 b8fd 	b.w	802b264 <_write_r>

0802b06a <__sseek>:
 802b06a:	b510      	push	{r4, lr}
 802b06c:	460c      	mov	r4, r1
 802b06e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b072:	f000 f8af 	bl	802b1d4 <_lseek_r>
 802b076:	1c43      	adds	r3, r0, #1
 802b078:	89a3      	ldrh	r3, [r4, #12]
 802b07a:	bf15      	itete	ne
 802b07c:	6560      	strne	r0, [r4, #84]	; 0x54
 802b07e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b082:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b086:	81a3      	strheq	r3, [r4, #12]
 802b088:	bf18      	it	ne
 802b08a:	81a3      	strhne	r3, [r4, #12]
 802b08c:	bd10      	pop	{r4, pc}

0802b08e <__sclose>:
 802b08e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b092:	f000 b839 	b.w	802b108 <_close_r>

0802b096 <memset>:
 802b096:	4402      	add	r2, r0
 802b098:	4603      	mov	r3, r0
 802b09a:	4293      	cmp	r3, r2
 802b09c:	d100      	bne.n	802b0a0 <memset+0xa>
 802b09e:	4770      	bx	lr
 802b0a0:	f803 1b01 	strb.w	r1, [r3], #1
 802b0a4:	e7f9      	b.n	802b09a <memset+0x4>

0802b0a6 <_raise_r>:
 802b0a6:	291f      	cmp	r1, #31
 802b0a8:	b538      	push	{r3, r4, r5, lr}
 802b0aa:	4604      	mov	r4, r0
 802b0ac:	460d      	mov	r5, r1
 802b0ae:	d904      	bls.n	802b0ba <_raise_r+0x14>
 802b0b0:	2316      	movs	r3, #22
 802b0b2:	6003      	str	r3, [r0, #0]
 802b0b4:	f04f 30ff 	mov.w	r0, #4294967295
 802b0b8:	bd38      	pop	{r3, r4, r5, pc}
 802b0ba:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b0bc:	b112      	cbz	r2, 802b0c4 <_raise_r+0x1e>
 802b0be:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b0c2:	b94b      	cbnz	r3, 802b0d8 <_raise_r+0x32>
 802b0c4:	4620      	mov	r0, r4
 802b0c6:	f000 f8bb 	bl	802b240 <_getpid_r>
 802b0ca:	462a      	mov	r2, r5
 802b0cc:	4601      	mov	r1, r0
 802b0ce:	4620      	mov	r0, r4
 802b0d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b0d4:	f000 b8a2 	b.w	802b21c <_kill_r>
 802b0d8:	2b01      	cmp	r3, #1
 802b0da:	d00a      	beq.n	802b0f2 <_raise_r+0x4c>
 802b0dc:	1c59      	adds	r1, r3, #1
 802b0de:	d103      	bne.n	802b0e8 <_raise_r+0x42>
 802b0e0:	2316      	movs	r3, #22
 802b0e2:	6003      	str	r3, [r0, #0]
 802b0e4:	2001      	movs	r0, #1
 802b0e6:	e7e7      	b.n	802b0b8 <_raise_r+0x12>
 802b0e8:	2400      	movs	r4, #0
 802b0ea:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b0ee:	4628      	mov	r0, r5
 802b0f0:	4798      	blx	r3
 802b0f2:	2000      	movs	r0, #0
 802b0f4:	e7e0      	b.n	802b0b8 <_raise_r+0x12>
	...

0802b0f8 <raise>:
 802b0f8:	4b02      	ldr	r3, [pc, #8]	; (802b104 <raise+0xc>)
 802b0fa:	4601      	mov	r1, r0
 802b0fc:	6818      	ldr	r0, [r3, #0]
 802b0fe:	f7ff bfd2 	b.w	802b0a6 <_raise_r>
 802b102:	bf00      	nop
 802b104:	20000160 	.word	0x20000160

0802b108 <_close_r>:
 802b108:	b538      	push	{r3, r4, r5, lr}
 802b10a:	4d06      	ldr	r5, [pc, #24]	; (802b124 <_close_r+0x1c>)
 802b10c:	2300      	movs	r3, #0
 802b10e:	4604      	mov	r4, r0
 802b110:	4608      	mov	r0, r1
 802b112:	602b      	str	r3, [r5, #0]
 802b114:	f7d7 f90c 	bl	8002330 <_close>
 802b118:	1c43      	adds	r3, r0, #1
 802b11a:	d102      	bne.n	802b122 <_close_r+0x1a>
 802b11c:	682b      	ldr	r3, [r5, #0]
 802b11e:	b103      	cbz	r3, 802b122 <_close_r+0x1a>
 802b120:	6023      	str	r3, [r4, #0]
 802b122:	bd38      	pop	{r3, r4, r5, pc}
 802b124:	2001383c 	.word	0x2001383c

0802b128 <_reclaim_reent>:
 802b128:	4b29      	ldr	r3, [pc, #164]	; (802b1d0 <_reclaim_reent+0xa8>)
 802b12a:	681b      	ldr	r3, [r3, #0]
 802b12c:	4283      	cmp	r3, r0
 802b12e:	b570      	push	{r4, r5, r6, lr}
 802b130:	4604      	mov	r4, r0
 802b132:	d04b      	beq.n	802b1cc <_reclaim_reent+0xa4>
 802b134:	69c3      	ldr	r3, [r0, #28]
 802b136:	b143      	cbz	r3, 802b14a <_reclaim_reent+0x22>
 802b138:	68db      	ldr	r3, [r3, #12]
 802b13a:	2b00      	cmp	r3, #0
 802b13c:	d144      	bne.n	802b1c8 <_reclaim_reent+0xa0>
 802b13e:	69e3      	ldr	r3, [r4, #28]
 802b140:	6819      	ldr	r1, [r3, #0]
 802b142:	b111      	cbz	r1, 802b14a <_reclaim_reent+0x22>
 802b144:	4620      	mov	r0, r4
 802b146:	f000 f939 	bl	802b3bc <_free_r>
 802b14a:	6961      	ldr	r1, [r4, #20]
 802b14c:	b111      	cbz	r1, 802b154 <_reclaim_reent+0x2c>
 802b14e:	4620      	mov	r0, r4
 802b150:	f000 f934 	bl	802b3bc <_free_r>
 802b154:	69e1      	ldr	r1, [r4, #28]
 802b156:	b111      	cbz	r1, 802b15e <_reclaim_reent+0x36>
 802b158:	4620      	mov	r0, r4
 802b15a:	f000 f92f 	bl	802b3bc <_free_r>
 802b15e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b160:	b111      	cbz	r1, 802b168 <_reclaim_reent+0x40>
 802b162:	4620      	mov	r0, r4
 802b164:	f000 f92a 	bl	802b3bc <_free_r>
 802b168:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b16a:	b111      	cbz	r1, 802b172 <_reclaim_reent+0x4a>
 802b16c:	4620      	mov	r0, r4
 802b16e:	f000 f925 	bl	802b3bc <_free_r>
 802b172:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b174:	b111      	cbz	r1, 802b17c <_reclaim_reent+0x54>
 802b176:	4620      	mov	r0, r4
 802b178:	f000 f920 	bl	802b3bc <_free_r>
 802b17c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b17e:	b111      	cbz	r1, 802b186 <_reclaim_reent+0x5e>
 802b180:	4620      	mov	r0, r4
 802b182:	f000 f91b 	bl	802b3bc <_free_r>
 802b186:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b188:	b111      	cbz	r1, 802b190 <_reclaim_reent+0x68>
 802b18a:	4620      	mov	r0, r4
 802b18c:	f000 f916 	bl	802b3bc <_free_r>
 802b190:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b192:	b111      	cbz	r1, 802b19a <_reclaim_reent+0x72>
 802b194:	4620      	mov	r0, r4
 802b196:	f000 f911 	bl	802b3bc <_free_r>
 802b19a:	6a23      	ldr	r3, [r4, #32]
 802b19c:	b1b3      	cbz	r3, 802b1cc <_reclaim_reent+0xa4>
 802b19e:	4620      	mov	r0, r4
 802b1a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b1a4:	4718      	bx	r3
 802b1a6:	5949      	ldr	r1, [r1, r5]
 802b1a8:	b941      	cbnz	r1, 802b1bc <_reclaim_reent+0x94>
 802b1aa:	3504      	adds	r5, #4
 802b1ac:	69e3      	ldr	r3, [r4, #28]
 802b1ae:	2d80      	cmp	r5, #128	; 0x80
 802b1b0:	68d9      	ldr	r1, [r3, #12]
 802b1b2:	d1f8      	bne.n	802b1a6 <_reclaim_reent+0x7e>
 802b1b4:	4620      	mov	r0, r4
 802b1b6:	f000 f901 	bl	802b3bc <_free_r>
 802b1ba:	e7c0      	b.n	802b13e <_reclaim_reent+0x16>
 802b1bc:	680e      	ldr	r6, [r1, #0]
 802b1be:	4620      	mov	r0, r4
 802b1c0:	f000 f8fc 	bl	802b3bc <_free_r>
 802b1c4:	4631      	mov	r1, r6
 802b1c6:	e7ef      	b.n	802b1a8 <_reclaim_reent+0x80>
 802b1c8:	2500      	movs	r5, #0
 802b1ca:	e7ef      	b.n	802b1ac <_reclaim_reent+0x84>
 802b1cc:	bd70      	pop	{r4, r5, r6, pc}
 802b1ce:	bf00      	nop
 802b1d0:	20000160 	.word	0x20000160

0802b1d4 <_lseek_r>:
 802b1d4:	b538      	push	{r3, r4, r5, lr}
 802b1d6:	4d07      	ldr	r5, [pc, #28]	; (802b1f4 <_lseek_r+0x20>)
 802b1d8:	4604      	mov	r4, r0
 802b1da:	4608      	mov	r0, r1
 802b1dc:	4611      	mov	r1, r2
 802b1de:	2200      	movs	r2, #0
 802b1e0:	602a      	str	r2, [r5, #0]
 802b1e2:	461a      	mov	r2, r3
 802b1e4:	f7d7 f8b0 	bl	8002348 <_lseek>
 802b1e8:	1c43      	adds	r3, r0, #1
 802b1ea:	d102      	bne.n	802b1f2 <_lseek_r+0x1e>
 802b1ec:	682b      	ldr	r3, [r5, #0]
 802b1ee:	b103      	cbz	r3, 802b1f2 <_lseek_r+0x1e>
 802b1f0:	6023      	str	r3, [r4, #0]
 802b1f2:	bd38      	pop	{r3, r4, r5, pc}
 802b1f4:	2001383c 	.word	0x2001383c

0802b1f8 <_read_r>:
 802b1f8:	b538      	push	{r3, r4, r5, lr}
 802b1fa:	4d07      	ldr	r5, [pc, #28]	; (802b218 <_read_r+0x20>)
 802b1fc:	4604      	mov	r4, r0
 802b1fe:	4608      	mov	r0, r1
 802b200:	4611      	mov	r1, r2
 802b202:	2200      	movs	r2, #0
 802b204:	602a      	str	r2, [r5, #0]
 802b206:	461a      	mov	r2, r3
 802b208:	f7d7 f876 	bl	80022f8 <_read>
 802b20c:	1c43      	adds	r3, r0, #1
 802b20e:	d102      	bne.n	802b216 <_read_r+0x1e>
 802b210:	682b      	ldr	r3, [r5, #0]
 802b212:	b103      	cbz	r3, 802b216 <_read_r+0x1e>
 802b214:	6023      	str	r3, [r4, #0]
 802b216:	bd38      	pop	{r3, r4, r5, pc}
 802b218:	2001383c 	.word	0x2001383c

0802b21c <_kill_r>:
 802b21c:	b538      	push	{r3, r4, r5, lr}
 802b21e:	4d07      	ldr	r5, [pc, #28]	; (802b23c <_kill_r+0x20>)
 802b220:	2300      	movs	r3, #0
 802b222:	4604      	mov	r4, r0
 802b224:	4608      	mov	r0, r1
 802b226:	4611      	mov	r1, r2
 802b228:	602b      	str	r3, [r5, #0]
 802b22a:	f7d7 f857 	bl	80022dc <_kill>
 802b22e:	1c43      	adds	r3, r0, #1
 802b230:	d102      	bne.n	802b238 <_kill_r+0x1c>
 802b232:	682b      	ldr	r3, [r5, #0]
 802b234:	b103      	cbz	r3, 802b238 <_kill_r+0x1c>
 802b236:	6023      	str	r3, [r4, #0]
 802b238:	bd38      	pop	{r3, r4, r5, pc}
 802b23a:	bf00      	nop
 802b23c:	2001383c 	.word	0x2001383c

0802b240 <_getpid_r>:
 802b240:	f7d7 b84a 	b.w	80022d8 <_getpid>

0802b244 <_sbrk_r>:
 802b244:	b538      	push	{r3, r4, r5, lr}
 802b246:	4d06      	ldr	r5, [pc, #24]	; (802b260 <_sbrk_r+0x1c>)
 802b248:	2300      	movs	r3, #0
 802b24a:	4604      	mov	r4, r0
 802b24c:	4608      	mov	r0, r1
 802b24e:	602b      	str	r3, [r5, #0]
 802b250:	f7d7 f87c 	bl	800234c <_sbrk>
 802b254:	1c43      	adds	r3, r0, #1
 802b256:	d102      	bne.n	802b25e <_sbrk_r+0x1a>
 802b258:	682b      	ldr	r3, [r5, #0]
 802b25a:	b103      	cbz	r3, 802b25e <_sbrk_r+0x1a>
 802b25c:	6023      	str	r3, [r4, #0]
 802b25e:	bd38      	pop	{r3, r4, r5, pc}
 802b260:	2001383c 	.word	0x2001383c

0802b264 <_write_r>:
 802b264:	b538      	push	{r3, r4, r5, lr}
 802b266:	4d07      	ldr	r5, [pc, #28]	; (802b284 <_write_r+0x20>)
 802b268:	4604      	mov	r4, r0
 802b26a:	4608      	mov	r0, r1
 802b26c:	4611      	mov	r1, r2
 802b26e:	2200      	movs	r2, #0
 802b270:	602a      	str	r2, [r5, #0]
 802b272:	461a      	mov	r2, r3
 802b274:	f7d7 f84e 	bl	8002314 <_write>
 802b278:	1c43      	adds	r3, r0, #1
 802b27a:	d102      	bne.n	802b282 <_write_r+0x1e>
 802b27c:	682b      	ldr	r3, [r5, #0]
 802b27e:	b103      	cbz	r3, 802b282 <_write_r+0x1e>
 802b280:	6023      	str	r3, [r4, #0]
 802b282:	bd38      	pop	{r3, r4, r5, pc}
 802b284:	2001383c 	.word	0x2001383c

0802b288 <__errno>:
 802b288:	4b01      	ldr	r3, [pc, #4]	; (802b290 <__errno+0x8>)
 802b28a:	6818      	ldr	r0, [r3, #0]
 802b28c:	4770      	bx	lr
 802b28e:	bf00      	nop
 802b290:	20000160 	.word	0x20000160

0802b294 <__libc_init_array>:
 802b294:	b570      	push	{r4, r5, r6, lr}
 802b296:	4d0d      	ldr	r5, [pc, #52]	; (802b2cc <__libc_init_array+0x38>)
 802b298:	4c0d      	ldr	r4, [pc, #52]	; (802b2d0 <__libc_init_array+0x3c>)
 802b29a:	1b64      	subs	r4, r4, r5
 802b29c:	10a4      	asrs	r4, r4, #2
 802b29e:	2600      	movs	r6, #0
 802b2a0:	42a6      	cmp	r6, r4
 802b2a2:	d109      	bne.n	802b2b8 <__libc_init_array+0x24>
 802b2a4:	4d0b      	ldr	r5, [pc, #44]	; (802b2d4 <__libc_init_array+0x40>)
 802b2a6:	4c0c      	ldr	r4, [pc, #48]	; (802b2d8 <__libc_init_array+0x44>)
 802b2a8:	f000 fd70 	bl	802bd8c <_init>
 802b2ac:	1b64      	subs	r4, r4, r5
 802b2ae:	10a4      	asrs	r4, r4, #2
 802b2b0:	2600      	movs	r6, #0
 802b2b2:	42a6      	cmp	r6, r4
 802b2b4:	d105      	bne.n	802b2c2 <__libc_init_array+0x2e>
 802b2b6:	bd70      	pop	{r4, r5, r6, pc}
 802b2b8:	f855 3b04 	ldr.w	r3, [r5], #4
 802b2bc:	4798      	blx	r3
 802b2be:	3601      	adds	r6, #1
 802b2c0:	e7ee      	b.n	802b2a0 <__libc_init_array+0xc>
 802b2c2:	f855 3b04 	ldr.w	r3, [r5], #4
 802b2c6:	4798      	blx	r3
 802b2c8:	3601      	adds	r6, #1
 802b2ca:	e7f2      	b.n	802b2b2 <__libc_init_array+0x1e>
 802b2cc:	08160a94 	.word	0x08160a94
 802b2d0:	08160a94 	.word	0x08160a94
 802b2d4:	08160a94 	.word	0x08160a94
 802b2d8:	08160aa8 	.word	0x08160aa8

0802b2dc <__retarget_lock_init_recursive>:
 802b2dc:	4770      	bx	lr

0802b2de <__retarget_lock_acquire_recursive>:
 802b2de:	4770      	bx	lr

0802b2e0 <__retarget_lock_release_recursive>:
 802b2e0:	4770      	bx	lr

0802b2e2 <memcpy>:
 802b2e2:	440a      	add	r2, r1
 802b2e4:	4291      	cmp	r1, r2
 802b2e6:	f100 33ff 	add.w	r3, r0, #4294967295
 802b2ea:	d100      	bne.n	802b2ee <memcpy+0xc>
 802b2ec:	4770      	bx	lr
 802b2ee:	b510      	push	{r4, lr}
 802b2f0:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b2f4:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b2f8:	4291      	cmp	r1, r2
 802b2fa:	d1f9      	bne.n	802b2f0 <memcpy+0xe>
 802b2fc:	bd10      	pop	{r4, pc}
	...

0802b300 <__register_exitproc>:
 802b300:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b304:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b3b8 <__register_exitproc+0xb8>
 802b308:	4606      	mov	r6, r0
 802b30a:	f8d8 0000 	ldr.w	r0, [r8]
 802b30e:	461f      	mov	r7, r3
 802b310:	460d      	mov	r5, r1
 802b312:	4691      	mov	r9, r2
 802b314:	f7ff ffe3 	bl	802b2de <__retarget_lock_acquire_recursive>
 802b318:	4b23      	ldr	r3, [pc, #140]	; (802b3a8 <__register_exitproc+0xa8>)
 802b31a:	681c      	ldr	r4, [r3, #0]
 802b31c:	b934      	cbnz	r4, 802b32c <__register_exitproc+0x2c>
 802b31e:	4c23      	ldr	r4, [pc, #140]	; (802b3ac <__register_exitproc+0xac>)
 802b320:	601c      	str	r4, [r3, #0]
 802b322:	4b23      	ldr	r3, [pc, #140]	; (802b3b0 <__register_exitproc+0xb0>)
 802b324:	b113      	cbz	r3, 802b32c <__register_exitproc+0x2c>
 802b326:	681b      	ldr	r3, [r3, #0]
 802b328:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b32c:	6863      	ldr	r3, [r4, #4]
 802b32e:	2b1f      	cmp	r3, #31
 802b330:	dd07      	ble.n	802b342 <__register_exitproc+0x42>
 802b332:	f8d8 0000 	ldr.w	r0, [r8]
 802b336:	f7ff ffd3 	bl	802b2e0 <__retarget_lock_release_recursive>
 802b33a:	f04f 30ff 	mov.w	r0, #4294967295
 802b33e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b342:	b32e      	cbz	r6, 802b390 <__register_exitproc+0x90>
 802b344:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b348:	b968      	cbnz	r0, 802b366 <__register_exitproc+0x66>
 802b34a:	4b1a      	ldr	r3, [pc, #104]	; (802b3b4 <__register_exitproc+0xb4>)
 802b34c:	2b00      	cmp	r3, #0
 802b34e:	d0f0      	beq.n	802b332 <__register_exitproc+0x32>
 802b350:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b354:	f7ff fcbe 	bl	802acd4 <malloc>
 802b358:	2800      	cmp	r0, #0
 802b35a:	d0ea      	beq.n	802b332 <__register_exitproc+0x32>
 802b35c:	2300      	movs	r3, #0
 802b35e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b362:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b366:	6863      	ldr	r3, [r4, #4]
 802b368:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b36c:	2201      	movs	r2, #1
 802b36e:	409a      	lsls	r2, r3
 802b370:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b374:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b378:	4313      	orrs	r3, r2
 802b37a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b37e:	2e02      	cmp	r6, #2
 802b380:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b384:	bf02      	ittt	eq
 802b386:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b38a:	4313      	orreq	r3, r2
 802b38c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b390:	6863      	ldr	r3, [r4, #4]
 802b392:	f8d8 0000 	ldr.w	r0, [r8]
 802b396:	1c5a      	adds	r2, r3, #1
 802b398:	3302      	adds	r3, #2
 802b39a:	6062      	str	r2, [r4, #4]
 802b39c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b3a0:	f7ff ff9e 	bl	802b2e0 <__retarget_lock_release_recursive>
 802b3a4:	2000      	movs	r0, #0
 802b3a6:	e7ca      	b.n	802b33e <__register_exitproc+0x3e>
 802b3a8:	200138d0 	.word	0x200138d0
 802b3ac:	20013844 	.word	0x20013844
 802b3b0:	0804331c 	.word	0x0804331c
 802b3b4:	0802acd5 	.word	0x0802acd5
 802b3b8:	20000164 	.word	0x20000164

0802b3bc <_free_r>:
 802b3bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b3be:	2900      	cmp	r1, #0
 802b3c0:	d044      	beq.n	802b44c <_free_r+0x90>
 802b3c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b3c6:	9001      	str	r0, [sp, #4]
 802b3c8:	2b00      	cmp	r3, #0
 802b3ca:	f1a1 0404 	sub.w	r4, r1, #4
 802b3ce:	bfb8      	it	lt
 802b3d0:	18e4      	addlt	r4, r4, r3
 802b3d2:	f7ff fd2f 	bl	802ae34 <__malloc_lock>
 802b3d6:	4a1e      	ldr	r2, [pc, #120]	; (802b450 <_free_r+0x94>)
 802b3d8:	9801      	ldr	r0, [sp, #4]
 802b3da:	6813      	ldr	r3, [r2, #0]
 802b3dc:	b933      	cbnz	r3, 802b3ec <_free_r+0x30>
 802b3de:	6063      	str	r3, [r4, #4]
 802b3e0:	6014      	str	r4, [r2, #0]
 802b3e2:	b003      	add	sp, #12
 802b3e4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b3e8:	f7ff bd2a 	b.w	802ae40 <__malloc_unlock>
 802b3ec:	42a3      	cmp	r3, r4
 802b3ee:	d908      	bls.n	802b402 <_free_r+0x46>
 802b3f0:	6825      	ldr	r5, [r4, #0]
 802b3f2:	1961      	adds	r1, r4, r5
 802b3f4:	428b      	cmp	r3, r1
 802b3f6:	bf01      	itttt	eq
 802b3f8:	6819      	ldreq	r1, [r3, #0]
 802b3fa:	685b      	ldreq	r3, [r3, #4]
 802b3fc:	1949      	addeq	r1, r1, r5
 802b3fe:	6021      	streq	r1, [r4, #0]
 802b400:	e7ed      	b.n	802b3de <_free_r+0x22>
 802b402:	461a      	mov	r2, r3
 802b404:	685b      	ldr	r3, [r3, #4]
 802b406:	b10b      	cbz	r3, 802b40c <_free_r+0x50>
 802b408:	42a3      	cmp	r3, r4
 802b40a:	d9fa      	bls.n	802b402 <_free_r+0x46>
 802b40c:	6811      	ldr	r1, [r2, #0]
 802b40e:	1855      	adds	r5, r2, r1
 802b410:	42a5      	cmp	r5, r4
 802b412:	d10b      	bne.n	802b42c <_free_r+0x70>
 802b414:	6824      	ldr	r4, [r4, #0]
 802b416:	4421      	add	r1, r4
 802b418:	1854      	adds	r4, r2, r1
 802b41a:	42a3      	cmp	r3, r4
 802b41c:	6011      	str	r1, [r2, #0]
 802b41e:	d1e0      	bne.n	802b3e2 <_free_r+0x26>
 802b420:	681c      	ldr	r4, [r3, #0]
 802b422:	685b      	ldr	r3, [r3, #4]
 802b424:	6053      	str	r3, [r2, #4]
 802b426:	440c      	add	r4, r1
 802b428:	6014      	str	r4, [r2, #0]
 802b42a:	e7da      	b.n	802b3e2 <_free_r+0x26>
 802b42c:	d902      	bls.n	802b434 <_free_r+0x78>
 802b42e:	230c      	movs	r3, #12
 802b430:	6003      	str	r3, [r0, #0]
 802b432:	e7d6      	b.n	802b3e2 <_free_r+0x26>
 802b434:	6825      	ldr	r5, [r4, #0]
 802b436:	1961      	adds	r1, r4, r5
 802b438:	428b      	cmp	r3, r1
 802b43a:	bf04      	itt	eq
 802b43c:	6819      	ldreq	r1, [r3, #0]
 802b43e:	685b      	ldreq	r3, [r3, #4]
 802b440:	6063      	str	r3, [r4, #4]
 802b442:	bf04      	itt	eq
 802b444:	1949      	addeq	r1, r1, r5
 802b446:	6021      	streq	r1, [r4, #0]
 802b448:	6054      	str	r4, [r2, #4]
 802b44a:	e7ca      	b.n	802b3e2 <_free_r+0x26>
 802b44c:	b003      	add	sp, #12
 802b44e:	bd30      	pop	{r4, r5, pc}
 802b450:	200136f8 	.word	0x200136f8

0802b454 <__sfputc_r>:
 802b454:	6893      	ldr	r3, [r2, #8]
 802b456:	3b01      	subs	r3, #1
 802b458:	2b00      	cmp	r3, #0
 802b45a:	b410      	push	{r4}
 802b45c:	6093      	str	r3, [r2, #8]
 802b45e:	da08      	bge.n	802b472 <__sfputc_r+0x1e>
 802b460:	6994      	ldr	r4, [r2, #24]
 802b462:	42a3      	cmp	r3, r4
 802b464:	db01      	blt.n	802b46a <__sfputc_r+0x16>
 802b466:	290a      	cmp	r1, #10
 802b468:	d103      	bne.n	802b472 <__sfputc_r+0x1e>
 802b46a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b46e:	f000 bb73 	b.w	802bb58 <__swbuf_r>
 802b472:	6813      	ldr	r3, [r2, #0]
 802b474:	1c58      	adds	r0, r3, #1
 802b476:	6010      	str	r0, [r2, #0]
 802b478:	7019      	strb	r1, [r3, #0]
 802b47a:	4608      	mov	r0, r1
 802b47c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b480:	4770      	bx	lr

0802b482 <__sfputs_r>:
 802b482:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b484:	4606      	mov	r6, r0
 802b486:	460f      	mov	r7, r1
 802b488:	4614      	mov	r4, r2
 802b48a:	18d5      	adds	r5, r2, r3
 802b48c:	42ac      	cmp	r4, r5
 802b48e:	d101      	bne.n	802b494 <__sfputs_r+0x12>
 802b490:	2000      	movs	r0, #0
 802b492:	e007      	b.n	802b4a4 <__sfputs_r+0x22>
 802b494:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b498:	463a      	mov	r2, r7
 802b49a:	4630      	mov	r0, r6
 802b49c:	f7ff ffda 	bl	802b454 <__sfputc_r>
 802b4a0:	1c43      	adds	r3, r0, #1
 802b4a2:	d1f3      	bne.n	802b48c <__sfputs_r+0xa>
 802b4a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b4a8 <_vfiprintf_r>:
 802b4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4ac:	460d      	mov	r5, r1
 802b4ae:	b09d      	sub	sp, #116	; 0x74
 802b4b0:	4614      	mov	r4, r2
 802b4b2:	4698      	mov	r8, r3
 802b4b4:	4606      	mov	r6, r0
 802b4b6:	b118      	cbz	r0, 802b4c0 <_vfiprintf_r+0x18>
 802b4b8:	6a03      	ldr	r3, [r0, #32]
 802b4ba:	b90b      	cbnz	r3, 802b4c0 <_vfiprintf_r+0x18>
 802b4bc:	f7ff fd60 	bl	802af80 <__sinit>
 802b4c0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b4c2:	07d9      	lsls	r1, r3, #31
 802b4c4:	d405      	bmi.n	802b4d2 <_vfiprintf_r+0x2a>
 802b4c6:	89ab      	ldrh	r3, [r5, #12]
 802b4c8:	059a      	lsls	r2, r3, #22
 802b4ca:	d402      	bmi.n	802b4d2 <_vfiprintf_r+0x2a>
 802b4cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b4ce:	f7ff ff06 	bl	802b2de <__retarget_lock_acquire_recursive>
 802b4d2:	89ab      	ldrh	r3, [r5, #12]
 802b4d4:	071b      	lsls	r3, r3, #28
 802b4d6:	d501      	bpl.n	802b4dc <_vfiprintf_r+0x34>
 802b4d8:	692b      	ldr	r3, [r5, #16]
 802b4da:	b99b      	cbnz	r3, 802b504 <_vfiprintf_r+0x5c>
 802b4dc:	4629      	mov	r1, r5
 802b4de:	4630      	mov	r0, r6
 802b4e0:	f000 fb78 	bl	802bbd4 <__swsetup_r>
 802b4e4:	b170      	cbz	r0, 802b504 <_vfiprintf_r+0x5c>
 802b4e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b4e8:	07dc      	lsls	r4, r3, #31
 802b4ea:	d504      	bpl.n	802b4f6 <_vfiprintf_r+0x4e>
 802b4ec:	f04f 30ff 	mov.w	r0, #4294967295
 802b4f0:	b01d      	add	sp, #116	; 0x74
 802b4f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b4f6:	89ab      	ldrh	r3, [r5, #12]
 802b4f8:	0598      	lsls	r0, r3, #22
 802b4fa:	d4f7      	bmi.n	802b4ec <_vfiprintf_r+0x44>
 802b4fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b4fe:	f7ff feef 	bl	802b2e0 <__retarget_lock_release_recursive>
 802b502:	e7f3      	b.n	802b4ec <_vfiprintf_r+0x44>
 802b504:	2300      	movs	r3, #0
 802b506:	9309      	str	r3, [sp, #36]	; 0x24
 802b508:	2320      	movs	r3, #32
 802b50a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b50e:	f8cd 800c 	str.w	r8, [sp, #12]
 802b512:	2330      	movs	r3, #48	; 0x30
 802b514:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b6c8 <_vfiprintf_r+0x220>
 802b518:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b51c:	f04f 0901 	mov.w	r9, #1
 802b520:	4623      	mov	r3, r4
 802b522:	469a      	mov	sl, r3
 802b524:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b528:	b10a      	cbz	r2, 802b52e <_vfiprintf_r+0x86>
 802b52a:	2a25      	cmp	r2, #37	; 0x25
 802b52c:	d1f9      	bne.n	802b522 <_vfiprintf_r+0x7a>
 802b52e:	ebba 0b04 	subs.w	fp, sl, r4
 802b532:	d00b      	beq.n	802b54c <_vfiprintf_r+0xa4>
 802b534:	465b      	mov	r3, fp
 802b536:	4622      	mov	r2, r4
 802b538:	4629      	mov	r1, r5
 802b53a:	4630      	mov	r0, r6
 802b53c:	f7ff ffa1 	bl	802b482 <__sfputs_r>
 802b540:	3001      	adds	r0, #1
 802b542:	f000 80a9 	beq.w	802b698 <_vfiprintf_r+0x1f0>
 802b546:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b548:	445a      	add	r2, fp
 802b54a:	9209      	str	r2, [sp, #36]	; 0x24
 802b54c:	f89a 3000 	ldrb.w	r3, [sl]
 802b550:	2b00      	cmp	r3, #0
 802b552:	f000 80a1 	beq.w	802b698 <_vfiprintf_r+0x1f0>
 802b556:	2300      	movs	r3, #0
 802b558:	f04f 32ff 	mov.w	r2, #4294967295
 802b55c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b560:	f10a 0a01 	add.w	sl, sl, #1
 802b564:	9304      	str	r3, [sp, #16]
 802b566:	9307      	str	r3, [sp, #28]
 802b568:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b56c:	931a      	str	r3, [sp, #104]	; 0x68
 802b56e:	4654      	mov	r4, sl
 802b570:	2205      	movs	r2, #5
 802b572:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b576:	4854      	ldr	r0, [pc, #336]	; (802b6c8 <_vfiprintf_r+0x220>)
 802b578:	f7d4 fe9a 	bl	80002b0 <memchr>
 802b57c:	9a04      	ldr	r2, [sp, #16]
 802b57e:	b9d8      	cbnz	r0, 802b5b8 <_vfiprintf_r+0x110>
 802b580:	06d1      	lsls	r1, r2, #27
 802b582:	bf44      	itt	mi
 802b584:	2320      	movmi	r3, #32
 802b586:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b58a:	0713      	lsls	r3, r2, #28
 802b58c:	bf44      	itt	mi
 802b58e:	232b      	movmi	r3, #43	; 0x2b
 802b590:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b594:	f89a 3000 	ldrb.w	r3, [sl]
 802b598:	2b2a      	cmp	r3, #42	; 0x2a
 802b59a:	d015      	beq.n	802b5c8 <_vfiprintf_r+0x120>
 802b59c:	9a07      	ldr	r2, [sp, #28]
 802b59e:	4654      	mov	r4, sl
 802b5a0:	2000      	movs	r0, #0
 802b5a2:	f04f 0c0a 	mov.w	ip, #10
 802b5a6:	4621      	mov	r1, r4
 802b5a8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b5ac:	3b30      	subs	r3, #48	; 0x30
 802b5ae:	2b09      	cmp	r3, #9
 802b5b0:	d94d      	bls.n	802b64e <_vfiprintf_r+0x1a6>
 802b5b2:	b1b0      	cbz	r0, 802b5e2 <_vfiprintf_r+0x13a>
 802b5b4:	9207      	str	r2, [sp, #28]
 802b5b6:	e014      	b.n	802b5e2 <_vfiprintf_r+0x13a>
 802b5b8:	eba0 0308 	sub.w	r3, r0, r8
 802b5bc:	fa09 f303 	lsl.w	r3, r9, r3
 802b5c0:	4313      	orrs	r3, r2
 802b5c2:	9304      	str	r3, [sp, #16]
 802b5c4:	46a2      	mov	sl, r4
 802b5c6:	e7d2      	b.n	802b56e <_vfiprintf_r+0xc6>
 802b5c8:	9b03      	ldr	r3, [sp, #12]
 802b5ca:	1d19      	adds	r1, r3, #4
 802b5cc:	681b      	ldr	r3, [r3, #0]
 802b5ce:	9103      	str	r1, [sp, #12]
 802b5d0:	2b00      	cmp	r3, #0
 802b5d2:	bfbb      	ittet	lt
 802b5d4:	425b      	neglt	r3, r3
 802b5d6:	f042 0202 	orrlt.w	r2, r2, #2
 802b5da:	9307      	strge	r3, [sp, #28]
 802b5dc:	9307      	strlt	r3, [sp, #28]
 802b5de:	bfb8      	it	lt
 802b5e0:	9204      	strlt	r2, [sp, #16]
 802b5e2:	7823      	ldrb	r3, [r4, #0]
 802b5e4:	2b2e      	cmp	r3, #46	; 0x2e
 802b5e6:	d10c      	bne.n	802b602 <_vfiprintf_r+0x15a>
 802b5e8:	7863      	ldrb	r3, [r4, #1]
 802b5ea:	2b2a      	cmp	r3, #42	; 0x2a
 802b5ec:	d134      	bne.n	802b658 <_vfiprintf_r+0x1b0>
 802b5ee:	9b03      	ldr	r3, [sp, #12]
 802b5f0:	1d1a      	adds	r2, r3, #4
 802b5f2:	681b      	ldr	r3, [r3, #0]
 802b5f4:	9203      	str	r2, [sp, #12]
 802b5f6:	2b00      	cmp	r3, #0
 802b5f8:	bfb8      	it	lt
 802b5fa:	f04f 33ff 	movlt.w	r3, #4294967295
 802b5fe:	3402      	adds	r4, #2
 802b600:	9305      	str	r3, [sp, #20]
 802b602:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b6d8 <_vfiprintf_r+0x230>
 802b606:	7821      	ldrb	r1, [r4, #0]
 802b608:	2203      	movs	r2, #3
 802b60a:	4650      	mov	r0, sl
 802b60c:	f7d4 fe50 	bl	80002b0 <memchr>
 802b610:	b138      	cbz	r0, 802b622 <_vfiprintf_r+0x17a>
 802b612:	9b04      	ldr	r3, [sp, #16]
 802b614:	eba0 000a 	sub.w	r0, r0, sl
 802b618:	2240      	movs	r2, #64	; 0x40
 802b61a:	4082      	lsls	r2, r0
 802b61c:	4313      	orrs	r3, r2
 802b61e:	3401      	adds	r4, #1
 802b620:	9304      	str	r3, [sp, #16]
 802b622:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b626:	4829      	ldr	r0, [pc, #164]	; (802b6cc <_vfiprintf_r+0x224>)
 802b628:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b62c:	2206      	movs	r2, #6
 802b62e:	f7d4 fe3f 	bl	80002b0 <memchr>
 802b632:	2800      	cmp	r0, #0
 802b634:	d03f      	beq.n	802b6b6 <_vfiprintf_r+0x20e>
 802b636:	4b26      	ldr	r3, [pc, #152]	; (802b6d0 <_vfiprintf_r+0x228>)
 802b638:	bb1b      	cbnz	r3, 802b682 <_vfiprintf_r+0x1da>
 802b63a:	9b03      	ldr	r3, [sp, #12]
 802b63c:	3307      	adds	r3, #7
 802b63e:	f023 0307 	bic.w	r3, r3, #7
 802b642:	3308      	adds	r3, #8
 802b644:	9303      	str	r3, [sp, #12]
 802b646:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b648:	443b      	add	r3, r7
 802b64a:	9309      	str	r3, [sp, #36]	; 0x24
 802b64c:	e768      	b.n	802b520 <_vfiprintf_r+0x78>
 802b64e:	fb0c 3202 	mla	r2, ip, r2, r3
 802b652:	460c      	mov	r4, r1
 802b654:	2001      	movs	r0, #1
 802b656:	e7a6      	b.n	802b5a6 <_vfiprintf_r+0xfe>
 802b658:	2300      	movs	r3, #0
 802b65a:	3401      	adds	r4, #1
 802b65c:	9305      	str	r3, [sp, #20]
 802b65e:	4619      	mov	r1, r3
 802b660:	f04f 0c0a 	mov.w	ip, #10
 802b664:	4620      	mov	r0, r4
 802b666:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b66a:	3a30      	subs	r2, #48	; 0x30
 802b66c:	2a09      	cmp	r2, #9
 802b66e:	d903      	bls.n	802b678 <_vfiprintf_r+0x1d0>
 802b670:	2b00      	cmp	r3, #0
 802b672:	d0c6      	beq.n	802b602 <_vfiprintf_r+0x15a>
 802b674:	9105      	str	r1, [sp, #20]
 802b676:	e7c4      	b.n	802b602 <_vfiprintf_r+0x15a>
 802b678:	fb0c 2101 	mla	r1, ip, r1, r2
 802b67c:	4604      	mov	r4, r0
 802b67e:	2301      	movs	r3, #1
 802b680:	e7f0      	b.n	802b664 <_vfiprintf_r+0x1bc>
 802b682:	ab03      	add	r3, sp, #12
 802b684:	9300      	str	r3, [sp, #0]
 802b686:	462a      	mov	r2, r5
 802b688:	4b12      	ldr	r3, [pc, #72]	; (802b6d4 <_vfiprintf_r+0x22c>)
 802b68a:	a904      	add	r1, sp, #16
 802b68c:	4630      	mov	r0, r6
 802b68e:	f3af 8000 	nop.w
 802b692:	4607      	mov	r7, r0
 802b694:	1c78      	adds	r0, r7, #1
 802b696:	d1d6      	bne.n	802b646 <_vfiprintf_r+0x19e>
 802b698:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b69a:	07d9      	lsls	r1, r3, #31
 802b69c:	d405      	bmi.n	802b6aa <_vfiprintf_r+0x202>
 802b69e:	89ab      	ldrh	r3, [r5, #12]
 802b6a0:	059a      	lsls	r2, r3, #22
 802b6a2:	d402      	bmi.n	802b6aa <_vfiprintf_r+0x202>
 802b6a4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b6a6:	f7ff fe1b 	bl	802b2e0 <__retarget_lock_release_recursive>
 802b6aa:	89ab      	ldrh	r3, [r5, #12]
 802b6ac:	065b      	lsls	r3, r3, #25
 802b6ae:	f53f af1d 	bmi.w	802b4ec <_vfiprintf_r+0x44>
 802b6b2:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b6b4:	e71c      	b.n	802b4f0 <_vfiprintf_r+0x48>
 802b6b6:	ab03      	add	r3, sp, #12
 802b6b8:	9300      	str	r3, [sp, #0]
 802b6ba:	462a      	mov	r2, r5
 802b6bc:	4b05      	ldr	r3, [pc, #20]	; (802b6d4 <_vfiprintf_r+0x22c>)
 802b6be:	a904      	add	r1, sp, #16
 802b6c0:	4630      	mov	r0, r6
 802b6c2:	f000 f879 	bl	802b7b8 <_printf_i>
 802b6c6:	e7e4      	b.n	802b692 <_vfiprintf_r+0x1ea>
 802b6c8:	08043320 	.word	0x08043320
 802b6cc:	0804332a 	.word	0x0804332a
 802b6d0:	00000000 	.word	0x00000000
 802b6d4:	0802b483 	.word	0x0802b483
 802b6d8:	08043326 	.word	0x08043326

0802b6dc <_printf_common>:
 802b6dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b6e0:	4616      	mov	r6, r2
 802b6e2:	4699      	mov	r9, r3
 802b6e4:	688a      	ldr	r2, [r1, #8]
 802b6e6:	690b      	ldr	r3, [r1, #16]
 802b6e8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b6ec:	4293      	cmp	r3, r2
 802b6ee:	bfb8      	it	lt
 802b6f0:	4613      	movlt	r3, r2
 802b6f2:	6033      	str	r3, [r6, #0]
 802b6f4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b6f8:	4607      	mov	r7, r0
 802b6fa:	460c      	mov	r4, r1
 802b6fc:	b10a      	cbz	r2, 802b702 <_printf_common+0x26>
 802b6fe:	3301      	adds	r3, #1
 802b700:	6033      	str	r3, [r6, #0]
 802b702:	6823      	ldr	r3, [r4, #0]
 802b704:	0699      	lsls	r1, r3, #26
 802b706:	bf42      	ittt	mi
 802b708:	6833      	ldrmi	r3, [r6, #0]
 802b70a:	3302      	addmi	r3, #2
 802b70c:	6033      	strmi	r3, [r6, #0]
 802b70e:	6825      	ldr	r5, [r4, #0]
 802b710:	f015 0506 	ands.w	r5, r5, #6
 802b714:	d106      	bne.n	802b724 <_printf_common+0x48>
 802b716:	f104 0a19 	add.w	sl, r4, #25
 802b71a:	68e3      	ldr	r3, [r4, #12]
 802b71c:	6832      	ldr	r2, [r6, #0]
 802b71e:	1a9b      	subs	r3, r3, r2
 802b720:	42ab      	cmp	r3, r5
 802b722:	dc26      	bgt.n	802b772 <_printf_common+0x96>
 802b724:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b728:	1e13      	subs	r3, r2, #0
 802b72a:	6822      	ldr	r2, [r4, #0]
 802b72c:	bf18      	it	ne
 802b72e:	2301      	movne	r3, #1
 802b730:	0692      	lsls	r2, r2, #26
 802b732:	d42b      	bmi.n	802b78c <_printf_common+0xb0>
 802b734:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b738:	4649      	mov	r1, r9
 802b73a:	4638      	mov	r0, r7
 802b73c:	47c0      	blx	r8
 802b73e:	3001      	adds	r0, #1
 802b740:	d01e      	beq.n	802b780 <_printf_common+0xa4>
 802b742:	6823      	ldr	r3, [r4, #0]
 802b744:	6922      	ldr	r2, [r4, #16]
 802b746:	f003 0306 	and.w	r3, r3, #6
 802b74a:	2b04      	cmp	r3, #4
 802b74c:	bf02      	ittt	eq
 802b74e:	68e5      	ldreq	r5, [r4, #12]
 802b750:	6833      	ldreq	r3, [r6, #0]
 802b752:	1aed      	subeq	r5, r5, r3
 802b754:	68a3      	ldr	r3, [r4, #8]
 802b756:	bf0c      	ite	eq
 802b758:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b75c:	2500      	movne	r5, #0
 802b75e:	4293      	cmp	r3, r2
 802b760:	bfc4      	itt	gt
 802b762:	1a9b      	subgt	r3, r3, r2
 802b764:	18ed      	addgt	r5, r5, r3
 802b766:	2600      	movs	r6, #0
 802b768:	341a      	adds	r4, #26
 802b76a:	42b5      	cmp	r5, r6
 802b76c:	d11a      	bne.n	802b7a4 <_printf_common+0xc8>
 802b76e:	2000      	movs	r0, #0
 802b770:	e008      	b.n	802b784 <_printf_common+0xa8>
 802b772:	2301      	movs	r3, #1
 802b774:	4652      	mov	r2, sl
 802b776:	4649      	mov	r1, r9
 802b778:	4638      	mov	r0, r7
 802b77a:	47c0      	blx	r8
 802b77c:	3001      	adds	r0, #1
 802b77e:	d103      	bne.n	802b788 <_printf_common+0xac>
 802b780:	f04f 30ff 	mov.w	r0, #4294967295
 802b784:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b788:	3501      	adds	r5, #1
 802b78a:	e7c6      	b.n	802b71a <_printf_common+0x3e>
 802b78c:	18e1      	adds	r1, r4, r3
 802b78e:	1c5a      	adds	r2, r3, #1
 802b790:	2030      	movs	r0, #48	; 0x30
 802b792:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b796:	4422      	add	r2, r4
 802b798:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b79c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b7a0:	3302      	adds	r3, #2
 802b7a2:	e7c7      	b.n	802b734 <_printf_common+0x58>
 802b7a4:	2301      	movs	r3, #1
 802b7a6:	4622      	mov	r2, r4
 802b7a8:	4649      	mov	r1, r9
 802b7aa:	4638      	mov	r0, r7
 802b7ac:	47c0      	blx	r8
 802b7ae:	3001      	adds	r0, #1
 802b7b0:	d0e6      	beq.n	802b780 <_printf_common+0xa4>
 802b7b2:	3601      	adds	r6, #1
 802b7b4:	e7d9      	b.n	802b76a <_printf_common+0x8e>
	...

0802b7b8 <_printf_i>:
 802b7b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b7bc:	7e0f      	ldrb	r7, [r1, #24]
 802b7be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b7c0:	2f78      	cmp	r7, #120	; 0x78
 802b7c2:	4691      	mov	r9, r2
 802b7c4:	4680      	mov	r8, r0
 802b7c6:	460c      	mov	r4, r1
 802b7c8:	469a      	mov	sl, r3
 802b7ca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b7ce:	d807      	bhi.n	802b7e0 <_printf_i+0x28>
 802b7d0:	2f62      	cmp	r7, #98	; 0x62
 802b7d2:	d80a      	bhi.n	802b7ea <_printf_i+0x32>
 802b7d4:	2f00      	cmp	r7, #0
 802b7d6:	f000 80d4 	beq.w	802b982 <_printf_i+0x1ca>
 802b7da:	2f58      	cmp	r7, #88	; 0x58
 802b7dc:	f000 80c0 	beq.w	802b960 <_printf_i+0x1a8>
 802b7e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b7e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b7e8:	e03a      	b.n	802b860 <_printf_i+0xa8>
 802b7ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b7ee:	2b15      	cmp	r3, #21
 802b7f0:	d8f6      	bhi.n	802b7e0 <_printf_i+0x28>
 802b7f2:	a101      	add	r1, pc, #4	; (adr r1, 802b7f8 <_printf_i+0x40>)
 802b7f4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b7f8:	0802b851 	.word	0x0802b851
 802b7fc:	0802b865 	.word	0x0802b865
 802b800:	0802b7e1 	.word	0x0802b7e1
 802b804:	0802b7e1 	.word	0x0802b7e1
 802b808:	0802b7e1 	.word	0x0802b7e1
 802b80c:	0802b7e1 	.word	0x0802b7e1
 802b810:	0802b865 	.word	0x0802b865
 802b814:	0802b7e1 	.word	0x0802b7e1
 802b818:	0802b7e1 	.word	0x0802b7e1
 802b81c:	0802b7e1 	.word	0x0802b7e1
 802b820:	0802b7e1 	.word	0x0802b7e1
 802b824:	0802b969 	.word	0x0802b969
 802b828:	0802b891 	.word	0x0802b891
 802b82c:	0802b923 	.word	0x0802b923
 802b830:	0802b7e1 	.word	0x0802b7e1
 802b834:	0802b7e1 	.word	0x0802b7e1
 802b838:	0802b98b 	.word	0x0802b98b
 802b83c:	0802b7e1 	.word	0x0802b7e1
 802b840:	0802b891 	.word	0x0802b891
 802b844:	0802b7e1 	.word	0x0802b7e1
 802b848:	0802b7e1 	.word	0x0802b7e1
 802b84c:	0802b92b 	.word	0x0802b92b
 802b850:	682b      	ldr	r3, [r5, #0]
 802b852:	1d1a      	adds	r2, r3, #4
 802b854:	681b      	ldr	r3, [r3, #0]
 802b856:	602a      	str	r2, [r5, #0]
 802b858:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b85c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b860:	2301      	movs	r3, #1
 802b862:	e09f      	b.n	802b9a4 <_printf_i+0x1ec>
 802b864:	6820      	ldr	r0, [r4, #0]
 802b866:	682b      	ldr	r3, [r5, #0]
 802b868:	0607      	lsls	r7, r0, #24
 802b86a:	f103 0104 	add.w	r1, r3, #4
 802b86e:	6029      	str	r1, [r5, #0]
 802b870:	d501      	bpl.n	802b876 <_printf_i+0xbe>
 802b872:	681e      	ldr	r6, [r3, #0]
 802b874:	e003      	b.n	802b87e <_printf_i+0xc6>
 802b876:	0646      	lsls	r6, r0, #25
 802b878:	d5fb      	bpl.n	802b872 <_printf_i+0xba>
 802b87a:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b87e:	2e00      	cmp	r6, #0
 802b880:	da03      	bge.n	802b88a <_printf_i+0xd2>
 802b882:	232d      	movs	r3, #45	; 0x2d
 802b884:	4276      	negs	r6, r6
 802b886:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b88a:	485a      	ldr	r0, [pc, #360]	; (802b9f4 <_printf_i+0x23c>)
 802b88c:	230a      	movs	r3, #10
 802b88e:	e012      	b.n	802b8b6 <_printf_i+0xfe>
 802b890:	682b      	ldr	r3, [r5, #0]
 802b892:	6820      	ldr	r0, [r4, #0]
 802b894:	1d19      	adds	r1, r3, #4
 802b896:	6029      	str	r1, [r5, #0]
 802b898:	0605      	lsls	r5, r0, #24
 802b89a:	d501      	bpl.n	802b8a0 <_printf_i+0xe8>
 802b89c:	681e      	ldr	r6, [r3, #0]
 802b89e:	e002      	b.n	802b8a6 <_printf_i+0xee>
 802b8a0:	0641      	lsls	r1, r0, #25
 802b8a2:	d5fb      	bpl.n	802b89c <_printf_i+0xe4>
 802b8a4:	881e      	ldrh	r6, [r3, #0]
 802b8a6:	4853      	ldr	r0, [pc, #332]	; (802b9f4 <_printf_i+0x23c>)
 802b8a8:	2f6f      	cmp	r7, #111	; 0x6f
 802b8aa:	bf0c      	ite	eq
 802b8ac:	2308      	moveq	r3, #8
 802b8ae:	230a      	movne	r3, #10
 802b8b0:	2100      	movs	r1, #0
 802b8b2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b8b6:	6865      	ldr	r5, [r4, #4]
 802b8b8:	60a5      	str	r5, [r4, #8]
 802b8ba:	2d00      	cmp	r5, #0
 802b8bc:	bfa2      	ittt	ge
 802b8be:	6821      	ldrge	r1, [r4, #0]
 802b8c0:	f021 0104 	bicge.w	r1, r1, #4
 802b8c4:	6021      	strge	r1, [r4, #0]
 802b8c6:	b90e      	cbnz	r6, 802b8cc <_printf_i+0x114>
 802b8c8:	2d00      	cmp	r5, #0
 802b8ca:	d04b      	beq.n	802b964 <_printf_i+0x1ac>
 802b8cc:	4615      	mov	r5, r2
 802b8ce:	fbb6 f1f3 	udiv	r1, r6, r3
 802b8d2:	fb03 6711 	mls	r7, r3, r1, r6
 802b8d6:	5dc7      	ldrb	r7, [r0, r7]
 802b8d8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b8dc:	4637      	mov	r7, r6
 802b8de:	42bb      	cmp	r3, r7
 802b8e0:	460e      	mov	r6, r1
 802b8e2:	d9f4      	bls.n	802b8ce <_printf_i+0x116>
 802b8e4:	2b08      	cmp	r3, #8
 802b8e6:	d10b      	bne.n	802b900 <_printf_i+0x148>
 802b8e8:	6823      	ldr	r3, [r4, #0]
 802b8ea:	07de      	lsls	r6, r3, #31
 802b8ec:	d508      	bpl.n	802b900 <_printf_i+0x148>
 802b8ee:	6923      	ldr	r3, [r4, #16]
 802b8f0:	6861      	ldr	r1, [r4, #4]
 802b8f2:	4299      	cmp	r1, r3
 802b8f4:	bfde      	ittt	le
 802b8f6:	2330      	movle	r3, #48	; 0x30
 802b8f8:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b8fc:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b900:	1b52      	subs	r2, r2, r5
 802b902:	6122      	str	r2, [r4, #16]
 802b904:	f8cd a000 	str.w	sl, [sp]
 802b908:	464b      	mov	r3, r9
 802b90a:	aa03      	add	r2, sp, #12
 802b90c:	4621      	mov	r1, r4
 802b90e:	4640      	mov	r0, r8
 802b910:	f7ff fee4 	bl	802b6dc <_printf_common>
 802b914:	3001      	adds	r0, #1
 802b916:	d14a      	bne.n	802b9ae <_printf_i+0x1f6>
 802b918:	f04f 30ff 	mov.w	r0, #4294967295
 802b91c:	b004      	add	sp, #16
 802b91e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b922:	6823      	ldr	r3, [r4, #0]
 802b924:	f043 0320 	orr.w	r3, r3, #32
 802b928:	6023      	str	r3, [r4, #0]
 802b92a:	4833      	ldr	r0, [pc, #204]	; (802b9f8 <_printf_i+0x240>)
 802b92c:	2778      	movs	r7, #120	; 0x78
 802b92e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b932:	6823      	ldr	r3, [r4, #0]
 802b934:	6829      	ldr	r1, [r5, #0]
 802b936:	061f      	lsls	r7, r3, #24
 802b938:	f851 6b04 	ldr.w	r6, [r1], #4
 802b93c:	d402      	bmi.n	802b944 <_printf_i+0x18c>
 802b93e:	065f      	lsls	r7, r3, #25
 802b940:	bf48      	it	mi
 802b942:	b2b6      	uxthmi	r6, r6
 802b944:	07df      	lsls	r7, r3, #31
 802b946:	bf48      	it	mi
 802b948:	f043 0320 	orrmi.w	r3, r3, #32
 802b94c:	6029      	str	r1, [r5, #0]
 802b94e:	bf48      	it	mi
 802b950:	6023      	strmi	r3, [r4, #0]
 802b952:	b91e      	cbnz	r6, 802b95c <_printf_i+0x1a4>
 802b954:	6823      	ldr	r3, [r4, #0]
 802b956:	f023 0320 	bic.w	r3, r3, #32
 802b95a:	6023      	str	r3, [r4, #0]
 802b95c:	2310      	movs	r3, #16
 802b95e:	e7a7      	b.n	802b8b0 <_printf_i+0xf8>
 802b960:	4824      	ldr	r0, [pc, #144]	; (802b9f4 <_printf_i+0x23c>)
 802b962:	e7e4      	b.n	802b92e <_printf_i+0x176>
 802b964:	4615      	mov	r5, r2
 802b966:	e7bd      	b.n	802b8e4 <_printf_i+0x12c>
 802b968:	682b      	ldr	r3, [r5, #0]
 802b96a:	6826      	ldr	r6, [r4, #0]
 802b96c:	6961      	ldr	r1, [r4, #20]
 802b96e:	1d18      	adds	r0, r3, #4
 802b970:	6028      	str	r0, [r5, #0]
 802b972:	0635      	lsls	r5, r6, #24
 802b974:	681b      	ldr	r3, [r3, #0]
 802b976:	d501      	bpl.n	802b97c <_printf_i+0x1c4>
 802b978:	6019      	str	r1, [r3, #0]
 802b97a:	e002      	b.n	802b982 <_printf_i+0x1ca>
 802b97c:	0670      	lsls	r0, r6, #25
 802b97e:	d5fb      	bpl.n	802b978 <_printf_i+0x1c0>
 802b980:	8019      	strh	r1, [r3, #0]
 802b982:	2300      	movs	r3, #0
 802b984:	6123      	str	r3, [r4, #16]
 802b986:	4615      	mov	r5, r2
 802b988:	e7bc      	b.n	802b904 <_printf_i+0x14c>
 802b98a:	682b      	ldr	r3, [r5, #0]
 802b98c:	1d1a      	adds	r2, r3, #4
 802b98e:	602a      	str	r2, [r5, #0]
 802b990:	681d      	ldr	r5, [r3, #0]
 802b992:	6862      	ldr	r2, [r4, #4]
 802b994:	2100      	movs	r1, #0
 802b996:	4628      	mov	r0, r5
 802b998:	f7d4 fc8a 	bl	80002b0 <memchr>
 802b99c:	b108      	cbz	r0, 802b9a2 <_printf_i+0x1ea>
 802b99e:	1b40      	subs	r0, r0, r5
 802b9a0:	6060      	str	r0, [r4, #4]
 802b9a2:	6863      	ldr	r3, [r4, #4]
 802b9a4:	6123      	str	r3, [r4, #16]
 802b9a6:	2300      	movs	r3, #0
 802b9a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b9ac:	e7aa      	b.n	802b904 <_printf_i+0x14c>
 802b9ae:	6923      	ldr	r3, [r4, #16]
 802b9b0:	462a      	mov	r2, r5
 802b9b2:	4649      	mov	r1, r9
 802b9b4:	4640      	mov	r0, r8
 802b9b6:	47d0      	blx	sl
 802b9b8:	3001      	adds	r0, #1
 802b9ba:	d0ad      	beq.n	802b918 <_printf_i+0x160>
 802b9bc:	6823      	ldr	r3, [r4, #0]
 802b9be:	079b      	lsls	r3, r3, #30
 802b9c0:	d413      	bmi.n	802b9ea <_printf_i+0x232>
 802b9c2:	68e0      	ldr	r0, [r4, #12]
 802b9c4:	9b03      	ldr	r3, [sp, #12]
 802b9c6:	4298      	cmp	r0, r3
 802b9c8:	bfb8      	it	lt
 802b9ca:	4618      	movlt	r0, r3
 802b9cc:	e7a6      	b.n	802b91c <_printf_i+0x164>
 802b9ce:	2301      	movs	r3, #1
 802b9d0:	4632      	mov	r2, r6
 802b9d2:	4649      	mov	r1, r9
 802b9d4:	4640      	mov	r0, r8
 802b9d6:	47d0      	blx	sl
 802b9d8:	3001      	adds	r0, #1
 802b9da:	d09d      	beq.n	802b918 <_printf_i+0x160>
 802b9dc:	3501      	adds	r5, #1
 802b9de:	68e3      	ldr	r3, [r4, #12]
 802b9e0:	9903      	ldr	r1, [sp, #12]
 802b9e2:	1a5b      	subs	r3, r3, r1
 802b9e4:	42ab      	cmp	r3, r5
 802b9e6:	dcf2      	bgt.n	802b9ce <_printf_i+0x216>
 802b9e8:	e7eb      	b.n	802b9c2 <_printf_i+0x20a>
 802b9ea:	2500      	movs	r5, #0
 802b9ec:	f104 0619 	add.w	r6, r4, #25
 802b9f0:	e7f5      	b.n	802b9de <_printf_i+0x226>
 802b9f2:	bf00      	nop
 802b9f4:	08043331 	.word	0x08043331
 802b9f8:	08043342 	.word	0x08043342

0802b9fc <__sflush_r>:
 802b9fc:	898a      	ldrh	r2, [r1, #12]
 802b9fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ba02:	4605      	mov	r5, r0
 802ba04:	0710      	lsls	r0, r2, #28
 802ba06:	460c      	mov	r4, r1
 802ba08:	d458      	bmi.n	802babc <__sflush_r+0xc0>
 802ba0a:	684b      	ldr	r3, [r1, #4]
 802ba0c:	2b00      	cmp	r3, #0
 802ba0e:	dc05      	bgt.n	802ba1c <__sflush_r+0x20>
 802ba10:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802ba12:	2b00      	cmp	r3, #0
 802ba14:	dc02      	bgt.n	802ba1c <__sflush_r+0x20>
 802ba16:	2000      	movs	r0, #0
 802ba18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ba1c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ba1e:	2e00      	cmp	r6, #0
 802ba20:	d0f9      	beq.n	802ba16 <__sflush_r+0x1a>
 802ba22:	2300      	movs	r3, #0
 802ba24:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802ba28:	682f      	ldr	r7, [r5, #0]
 802ba2a:	6a21      	ldr	r1, [r4, #32]
 802ba2c:	602b      	str	r3, [r5, #0]
 802ba2e:	d032      	beq.n	802ba96 <__sflush_r+0x9a>
 802ba30:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802ba32:	89a3      	ldrh	r3, [r4, #12]
 802ba34:	075a      	lsls	r2, r3, #29
 802ba36:	d505      	bpl.n	802ba44 <__sflush_r+0x48>
 802ba38:	6863      	ldr	r3, [r4, #4]
 802ba3a:	1ac0      	subs	r0, r0, r3
 802ba3c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802ba3e:	b10b      	cbz	r3, 802ba44 <__sflush_r+0x48>
 802ba40:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ba42:	1ac0      	subs	r0, r0, r3
 802ba44:	2300      	movs	r3, #0
 802ba46:	4602      	mov	r2, r0
 802ba48:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ba4a:	6a21      	ldr	r1, [r4, #32]
 802ba4c:	4628      	mov	r0, r5
 802ba4e:	47b0      	blx	r6
 802ba50:	1c43      	adds	r3, r0, #1
 802ba52:	89a3      	ldrh	r3, [r4, #12]
 802ba54:	d106      	bne.n	802ba64 <__sflush_r+0x68>
 802ba56:	6829      	ldr	r1, [r5, #0]
 802ba58:	291d      	cmp	r1, #29
 802ba5a:	d82b      	bhi.n	802bab4 <__sflush_r+0xb8>
 802ba5c:	4a29      	ldr	r2, [pc, #164]	; (802bb04 <__sflush_r+0x108>)
 802ba5e:	410a      	asrs	r2, r1
 802ba60:	07d6      	lsls	r6, r2, #31
 802ba62:	d427      	bmi.n	802bab4 <__sflush_r+0xb8>
 802ba64:	2200      	movs	r2, #0
 802ba66:	6062      	str	r2, [r4, #4]
 802ba68:	04d9      	lsls	r1, r3, #19
 802ba6a:	6922      	ldr	r2, [r4, #16]
 802ba6c:	6022      	str	r2, [r4, #0]
 802ba6e:	d504      	bpl.n	802ba7a <__sflush_r+0x7e>
 802ba70:	1c42      	adds	r2, r0, #1
 802ba72:	d101      	bne.n	802ba78 <__sflush_r+0x7c>
 802ba74:	682b      	ldr	r3, [r5, #0]
 802ba76:	b903      	cbnz	r3, 802ba7a <__sflush_r+0x7e>
 802ba78:	6560      	str	r0, [r4, #84]	; 0x54
 802ba7a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ba7c:	602f      	str	r7, [r5, #0]
 802ba7e:	2900      	cmp	r1, #0
 802ba80:	d0c9      	beq.n	802ba16 <__sflush_r+0x1a>
 802ba82:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ba86:	4299      	cmp	r1, r3
 802ba88:	d002      	beq.n	802ba90 <__sflush_r+0x94>
 802ba8a:	4628      	mov	r0, r5
 802ba8c:	f7ff fc96 	bl	802b3bc <_free_r>
 802ba90:	2000      	movs	r0, #0
 802ba92:	6360      	str	r0, [r4, #52]	; 0x34
 802ba94:	e7c0      	b.n	802ba18 <__sflush_r+0x1c>
 802ba96:	2301      	movs	r3, #1
 802ba98:	4628      	mov	r0, r5
 802ba9a:	47b0      	blx	r6
 802ba9c:	1c41      	adds	r1, r0, #1
 802ba9e:	d1c8      	bne.n	802ba32 <__sflush_r+0x36>
 802baa0:	682b      	ldr	r3, [r5, #0]
 802baa2:	2b00      	cmp	r3, #0
 802baa4:	d0c5      	beq.n	802ba32 <__sflush_r+0x36>
 802baa6:	2b1d      	cmp	r3, #29
 802baa8:	d001      	beq.n	802baae <__sflush_r+0xb2>
 802baaa:	2b16      	cmp	r3, #22
 802baac:	d101      	bne.n	802bab2 <__sflush_r+0xb6>
 802baae:	602f      	str	r7, [r5, #0]
 802bab0:	e7b1      	b.n	802ba16 <__sflush_r+0x1a>
 802bab2:	89a3      	ldrh	r3, [r4, #12]
 802bab4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bab8:	81a3      	strh	r3, [r4, #12]
 802baba:	e7ad      	b.n	802ba18 <__sflush_r+0x1c>
 802babc:	690f      	ldr	r7, [r1, #16]
 802babe:	2f00      	cmp	r7, #0
 802bac0:	d0a9      	beq.n	802ba16 <__sflush_r+0x1a>
 802bac2:	0793      	lsls	r3, r2, #30
 802bac4:	680e      	ldr	r6, [r1, #0]
 802bac6:	bf08      	it	eq
 802bac8:	694b      	ldreq	r3, [r1, #20]
 802baca:	600f      	str	r7, [r1, #0]
 802bacc:	bf18      	it	ne
 802bace:	2300      	movne	r3, #0
 802bad0:	eba6 0807 	sub.w	r8, r6, r7
 802bad4:	608b      	str	r3, [r1, #8]
 802bad6:	f1b8 0f00 	cmp.w	r8, #0
 802bada:	dd9c      	ble.n	802ba16 <__sflush_r+0x1a>
 802badc:	6a21      	ldr	r1, [r4, #32]
 802bade:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802bae0:	4643      	mov	r3, r8
 802bae2:	463a      	mov	r2, r7
 802bae4:	4628      	mov	r0, r5
 802bae6:	47b0      	blx	r6
 802bae8:	2800      	cmp	r0, #0
 802baea:	dc06      	bgt.n	802bafa <__sflush_r+0xfe>
 802baec:	89a3      	ldrh	r3, [r4, #12]
 802baee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802baf2:	81a3      	strh	r3, [r4, #12]
 802baf4:	f04f 30ff 	mov.w	r0, #4294967295
 802baf8:	e78e      	b.n	802ba18 <__sflush_r+0x1c>
 802bafa:	4407      	add	r7, r0
 802bafc:	eba8 0800 	sub.w	r8, r8, r0
 802bb00:	e7e9      	b.n	802bad6 <__sflush_r+0xda>
 802bb02:	bf00      	nop
 802bb04:	dfbffffe 	.word	0xdfbffffe

0802bb08 <_fflush_r>:
 802bb08:	b538      	push	{r3, r4, r5, lr}
 802bb0a:	690b      	ldr	r3, [r1, #16]
 802bb0c:	4605      	mov	r5, r0
 802bb0e:	460c      	mov	r4, r1
 802bb10:	b913      	cbnz	r3, 802bb18 <_fflush_r+0x10>
 802bb12:	2500      	movs	r5, #0
 802bb14:	4628      	mov	r0, r5
 802bb16:	bd38      	pop	{r3, r4, r5, pc}
 802bb18:	b118      	cbz	r0, 802bb22 <_fflush_r+0x1a>
 802bb1a:	6a03      	ldr	r3, [r0, #32]
 802bb1c:	b90b      	cbnz	r3, 802bb22 <_fflush_r+0x1a>
 802bb1e:	f7ff fa2f 	bl	802af80 <__sinit>
 802bb22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bb26:	2b00      	cmp	r3, #0
 802bb28:	d0f3      	beq.n	802bb12 <_fflush_r+0xa>
 802bb2a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802bb2c:	07d0      	lsls	r0, r2, #31
 802bb2e:	d404      	bmi.n	802bb3a <_fflush_r+0x32>
 802bb30:	0599      	lsls	r1, r3, #22
 802bb32:	d402      	bmi.n	802bb3a <_fflush_r+0x32>
 802bb34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bb36:	f7ff fbd2 	bl	802b2de <__retarget_lock_acquire_recursive>
 802bb3a:	4628      	mov	r0, r5
 802bb3c:	4621      	mov	r1, r4
 802bb3e:	f7ff ff5d 	bl	802b9fc <__sflush_r>
 802bb42:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802bb44:	07da      	lsls	r2, r3, #31
 802bb46:	4605      	mov	r5, r0
 802bb48:	d4e4      	bmi.n	802bb14 <_fflush_r+0xc>
 802bb4a:	89a3      	ldrh	r3, [r4, #12]
 802bb4c:	059b      	lsls	r3, r3, #22
 802bb4e:	d4e1      	bmi.n	802bb14 <_fflush_r+0xc>
 802bb50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bb52:	f7ff fbc5 	bl	802b2e0 <__retarget_lock_release_recursive>
 802bb56:	e7dd      	b.n	802bb14 <_fflush_r+0xc>

0802bb58 <__swbuf_r>:
 802bb58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb5a:	460e      	mov	r6, r1
 802bb5c:	4614      	mov	r4, r2
 802bb5e:	4605      	mov	r5, r0
 802bb60:	b118      	cbz	r0, 802bb6a <__swbuf_r+0x12>
 802bb62:	6a03      	ldr	r3, [r0, #32]
 802bb64:	b90b      	cbnz	r3, 802bb6a <__swbuf_r+0x12>
 802bb66:	f7ff fa0b 	bl	802af80 <__sinit>
 802bb6a:	69a3      	ldr	r3, [r4, #24]
 802bb6c:	60a3      	str	r3, [r4, #8]
 802bb6e:	89a3      	ldrh	r3, [r4, #12]
 802bb70:	071a      	lsls	r2, r3, #28
 802bb72:	d525      	bpl.n	802bbc0 <__swbuf_r+0x68>
 802bb74:	6923      	ldr	r3, [r4, #16]
 802bb76:	b31b      	cbz	r3, 802bbc0 <__swbuf_r+0x68>
 802bb78:	6823      	ldr	r3, [r4, #0]
 802bb7a:	6922      	ldr	r2, [r4, #16]
 802bb7c:	1a98      	subs	r0, r3, r2
 802bb7e:	6963      	ldr	r3, [r4, #20]
 802bb80:	b2f6      	uxtb	r6, r6
 802bb82:	4283      	cmp	r3, r0
 802bb84:	4637      	mov	r7, r6
 802bb86:	dc04      	bgt.n	802bb92 <__swbuf_r+0x3a>
 802bb88:	4621      	mov	r1, r4
 802bb8a:	4628      	mov	r0, r5
 802bb8c:	f7ff ffbc 	bl	802bb08 <_fflush_r>
 802bb90:	b9e0      	cbnz	r0, 802bbcc <__swbuf_r+0x74>
 802bb92:	68a3      	ldr	r3, [r4, #8]
 802bb94:	3b01      	subs	r3, #1
 802bb96:	60a3      	str	r3, [r4, #8]
 802bb98:	6823      	ldr	r3, [r4, #0]
 802bb9a:	1c5a      	adds	r2, r3, #1
 802bb9c:	6022      	str	r2, [r4, #0]
 802bb9e:	701e      	strb	r6, [r3, #0]
 802bba0:	6962      	ldr	r2, [r4, #20]
 802bba2:	1c43      	adds	r3, r0, #1
 802bba4:	429a      	cmp	r2, r3
 802bba6:	d004      	beq.n	802bbb2 <__swbuf_r+0x5a>
 802bba8:	89a3      	ldrh	r3, [r4, #12]
 802bbaa:	07db      	lsls	r3, r3, #31
 802bbac:	d506      	bpl.n	802bbbc <__swbuf_r+0x64>
 802bbae:	2e0a      	cmp	r6, #10
 802bbb0:	d104      	bne.n	802bbbc <__swbuf_r+0x64>
 802bbb2:	4621      	mov	r1, r4
 802bbb4:	4628      	mov	r0, r5
 802bbb6:	f7ff ffa7 	bl	802bb08 <_fflush_r>
 802bbba:	b938      	cbnz	r0, 802bbcc <__swbuf_r+0x74>
 802bbbc:	4638      	mov	r0, r7
 802bbbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802bbc0:	4621      	mov	r1, r4
 802bbc2:	4628      	mov	r0, r5
 802bbc4:	f000 f806 	bl	802bbd4 <__swsetup_r>
 802bbc8:	2800      	cmp	r0, #0
 802bbca:	d0d5      	beq.n	802bb78 <__swbuf_r+0x20>
 802bbcc:	f04f 37ff 	mov.w	r7, #4294967295
 802bbd0:	e7f4      	b.n	802bbbc <__swbuf_r+0x64>
	...

0802bbd4 <__swsetup_r>:
 802bbd4:	b538      	push	{r3, r4, r5, lr}
 802bbd6:	4b2a      	ldr	r3, [pc, #168]	; (802bc80 <__swsetup_r+0xac>)
 802bbd8:	4605      	mov	r5, r0
 802bbda:	6818      	ldr	r0, [r3, #0]
 802bbdc:	460c      	mov	r4, r1
 802bbde:	b118      	cbz	r0, 802bbe8 <__swsetup_r+0x14>
 802bbe0:	6a03      	ldr	r3, [r0, #32]
 802bbe2:	b90b      	cbnz	r3, 802bbe8 <__swsetup_r+0x14>
 802bbe4:	f7ff f9cc 	bl	802af80 <__sinit>
 802bbe8:	89a3      	ldrh	r3, [r4, #12]
 802bbea:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bbee:	0718      	lsls	r0, r3, #28
 802bbf0:	d422      	bmi.n	802bc38 <__swsetup_r+0x64>
 802bbf2:	06d9      	lsls	r1, r3, #27
 802bbf4:	d407      	bmi.n	802bc06 <__swsetup_r+0x32>
 802bbf6:	2309      	movs	r3, #9
 802bbf8:	602b      	str	r3, [r5, #0]
 802bbfa:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802bbfe:	81a3      	strh	r3, [r4, #12]
 802bc00:	f04f 30ff 	mov.w	r0, #4294967295
 802bc04:	e034      	b.n	802bc70 <__swsetup_r+0x9c>
 802bc06:	0758      	lsls	r0, r3, #29
 802bc08:	d512      	bpl.n	802bc30 <__swsetup_r+0x5c>
 802bc0a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bc0c:	b141      	cbz	r1, 802bc20 <__swsetup_r+0x4c>
 802bc0e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bc12:	4299      	cmp	r1, r3
 802bc14:	d002      	beq.n	802bc1c <__swsetup_r+0x48>
 802bc16:	4628      	mov	r0, r5
 802bc18:	f7ff fbd0 	bl	802b3bc <_free_r>
 802bc1c:	2300      	movs	r3, #0
 802bc1e:	6363      	str	r3, [r4, #52]	; 0x34
 802bc20:	89a3      	ldrh	r3, [r4, #12]
 802bc22:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802bc26:	81a3      	strh	r3, [r4, #12]
 802bc28:	2300      	movs	r3, #0
 802bc2a:	6063      	str	r3, [r4, #4]
 802bc2c:	6923      	ldr	r3, [r4, #16]
 802bc2e:	6023      	str	r3, [r4, #0]
 802bc30:	89a3      	ldrh	r3, [r4, #12]
 802bc32:	f043 0308 	orr.w	r3, r3, #8
 802bc36:	81a3      	strh	r3, [r4, #12]
 802bc38:	6923      	ldr	r3, [r4, #16]
 802bc3a:	b94b      	cbnz	r3, 802bc50 <__swsetup_r+0x7c>
 802bc3c:	89a3      	ldrh	r3, [r4, #12]
 802bc3e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802bc42:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bc46:	d003      	beq.n	802bc50 <__swsetup_r+0x7c>
 802bc48:	4621      	mov	r1, r4
 802bc4a:	4628      	mov	r0, r5
 802bc4c:	f000 f840 	bl	802bcd0 <__smakebuf_r>
 802bc50:	89a0      	ldrh	r0, [r4, #12]
 802bc52:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bc56:	f010 0301 	ands.w	r3, r0, #1
 802bc5a:	d00a      	beq.n	802bc72 <__swsetup_r+0x9e>
 802bc5c:	2300      	movs	r3, #0
 802bc5e:	60a3      	str	r3, [r4, #8]
 802bc60:	6963      	ldr	r3, [r4, #20]
 802bc62:	425b      	negs	r3, r3
 802bc64:	61a3      	str	r3, [r4, #24]
 802bc66:	6923      	ldr	r3, [r4, #16]
 802bc68:	b943      	cbnz	r3, 802bc7c <__swsetup_r+0xa8>
 802bc6a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802bc6e:	d1c4      	bne.n	802bbfa <__swsetup_r+0x26>
 802bc70:	bd38      	pop	{r3, r4, r5, pc}
 802bc72:	0781      	lsls	r1, r0, #30
 802bc74:	bf58      	it	pl
 802bc76:	6963      	ldrpl	r3, [r4, #20]
 802bc78:	60a3      	str	r3, [r4, #8]
 802bc7a:	e7f4      	b.n	802bc66 <__swsetup_r+0x92>
 802bc7c:	2000      	movs	r0, #0
 802bc7e:	e7f7      	b.n	802bc70 <__swsetup_r+0x9c>
 802bc80:	20000160 	.word	0x20000160

0802bc84 <__swhatbuf_r>:
 802bc84:	b570      	push	{r4, r5, r6, lr}
 802bc86:	460c      	mov	r4, r1
 802bc88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bc8c:	2900      	cmp	r1, #0
 802bc8e:	b096      	sub	sp, #88	; 0x58
 802bc90:	4615      	mov	r5, r2
 802bc92:	461e      	mov	r6, r3
 802bc94:	da0d      	bge.n	802bcb2 <__swhatbuf_r+0x2e>
 802bc96:	89a3      	ldrh	r3, [r4, #12]
 802bc98:	f013 0f80 	tst.w	r3, #128	; 0x80
 802bc9c:	f04f 0100 	mov.w	r1, #0
 802bca0:	bf0c      	ite	eq
 802bca2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bca6:	2340      	movne	r3, #64	; 0x40
 802bca8:	2000      	movs	r0, #0
 802bcaa:	6031      	str	r1, [r6, #0]
 802bcac:	602b      	str	r3, [r5, #0]
 802bcae:	b016      	add	sp, #88	; 0x58
 802bcb0:	bd70      	pop	{r4, r5, r6, pc}
 802bcb2:	466a      	mov	r2, sp
 802bcb4:	f000 f848 	bl	802bd48 <_fstat_r>
 802bcb8:	2800      	cmp	r0, #0
 802bcba:	dbec      	blt.n	802bc96 <__swhatbuf_r+0x12>
 802bcbc:	9901      	ldr	r1, [sp, #4]
 802bcbe:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802bcc2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bcc6:	4259      	negs	r1, r3
 802bcc8:	4159      	adcs	r1, r3
 802bcca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802bcce:	e7eb      	b.n	802bca8 <__swhatbuf_r+0x24>

0802bcd0 <__smakebuf_r>:
 802bcd0:	898b      	ldrh	r3, [r1, #12]
 802bcd2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bcd4:	079d      	lsls	r5, r3, #30
 802bcd6:	4606      	mov	r6, r0
 802bcd8:	460c      	mov	r4, r1
 802bcda:	d507      	bpl.n	802bcec <__smakebuf_r+0x1c>
 802bcdc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bce0:	6023      	str	r3, [r4, #0]
 802bce2:	6123      	str	r3, [r4, #16]
 802bce4:	2301      	movs	r3, #1
 802bce6:	6163      	str	r3, [r4, #20]
 802bce8:	b002      	add	sp, #8
 802bcea:	bd70      	pop	{r4, r5, r6, pc}
 802bcec:	ab01      	add	r3, sp, #4
 802bcee:	466a      	mov	r2, sp
 802bcf0:	f7ff ffc8 	bl	802bc84 <__swhatbuf_r>
 802bcf4:	9900      	ldr	r1, [sp, #0]
 802bcf6:	4605      	mov	r5, r0
 802bcf8:	4630      	mov	r0, r6
 802bcfa:	f7ff f81b 	bl	802ad34 <_malloc_r>
 802bcfe:	b948      	cbnz	r0, 802bd14 <__smakebuf_r+0x44>
 802bd00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bd04:	059a      	lsls	r2, r3, #22
 802bd06:	d4ef      	bmi.n	802bce8 <__smakebuf_r+0x18>
 802bd08:	f023 0303 	bic.w	r3, r3, #3
 802bd0c:	f043 0302 	orr.w	r3, r3, #2
 802bd10:	81a3      	strh	r3, [r4, #12]
 802bd12:	e7e3      	b.n	802bcdc <__smakebuf_r+0xc>
 802bd14:	89a3      	ldrh	r3, [r4, #12]
 802bd16:	6020      	str	r0, [r4, #0]
 802bd18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bd1c:	81a3      	strh	r3, [r4, #12]
 802bd1e:	9b00      	ldr	r3, [sp, #0]
 802bd20:	6163      	str	r3, [r4, #20]
 802bd22:	9b01      	ldr	r3, [sp, #4]
 802bd24:	6120      	str	r0, [r4, #16]
 802bd26:	b15b      	cbz	r3, 802bd40 <__smakebuf_r+0x70>
 802bd28:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bd2c:	4630      	mov	r0, r6
 802bd2e:	f000 f81d 	bl	802bd6c <_isatty_r>
 802bd32:	b128      	cbz	r0, 802bd40 <__smakebuf_r+0x70>
 802bd34:	89a3      	ldrh	r3, [r4, #12]
 802bd36:	f023 0303 	bic.w	r3, r3, #3
 802bd3a:	f043 0301 	orr.w	r3, r3, #1
 802bd3e:	81a3      	strh	r3, [r4, #12]
 802bd40:	89a3      	ldrh	r3, [r4, #12]
 802bd42:	431d      	orrs	r5, r3
 802bd44:	81a5      	strh	r5, [r4, #12]
 802bd46:	e7cf      	b.n	802bce8 <__smakebuf_r+0x18>

0802bd48 <_fstat_r>:
 802bd48:	b538      	push	{r3, r4, r5, lr}
 802bd4a:	4d07      	ldr	r5, [pc, #28]	; (802bd68 <_fstat_r+0x20>)
 802bd4c:	2300      	movs	r3, #0
 802bd4e:	4604      	mov	r4, r0
 802bd50:	4608      	mov	r0, r1
 802bd52:	4611      	mov	r1, r2
 802bd54:	602b      	str	r3, [r5, #0]
 802bd56:	f7d6 faef 	bl	8002338 <_fstat>
 802bd5a:	1c43      	adds	r3, r0, #1
 802bd5c:	d102      	bne.n	802bd64 <_fstat_r+0x1c>
 802bd5e:	682b      	ldr	r3, [r5, #0]
 802bd60:	b103      	cbz	r3, 802bd64 <_fstat_r+0x1c>
 802bd62:	6023      	str	r3, [r4, #0]
 802bd64:	bd38      	pop	{r3, r4, r5, pc}
 802bd66:	bf00      	nop
 802bd68:	2001383c 	.word	0x2001383c

0802bd6c <_isatty_r>:
 802bd6c:	b538      	push	{r3, r4, r5, lr}
 802bd6e:	4d06      	ldr	r5, [pc, #24]	; (802bd88 <_isatty_r+0x1c>)
 802bd70:	2300      	movs	r3, #0
 802bd72:	4604      	mov	r4, r0
 802bd74:	4608      	mov	r0, r1
 802bd76:	602b      	str	r3, [r5, #0]
 802bd78:	f7d6 fae4 	bl	8002344 <_isatty>
 802bd7c:	1c43      	adds	r3, r0, #1
 802bd7e:	d102      	bne.n	802bd86 <_isatty_r+0x1a>
 802bd80:	682b      	ldr	r3, [r5, #0]
 802bd82:	b103      	cbz	r3, 802bd86 <_isatty_r+0x1a>
 802bd84:	6023      	str	r3, [r4, #0]
 802bd86:	bd38      	pop	{r3, r4, r5, pc}
 802bd88:	2001383c 	.word	0x2001383c

0802bd8c <_init>:
 802bd8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bd8e:	bf00      	nop
 802bd90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bd92:	bc08      	pop	{r3}
 802bd94:	469e      	mov	lr, r3
 802bd96:	4770      	bx	lr

0802bd98 <_fini>:
 802bd98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bd9a:	bf00      	nop
 802bd9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bd9e:	bc08      	pop	{r3}
 802bda0:	469e      	mov	lr, r3
 802bda2:	4770      	bx	lr

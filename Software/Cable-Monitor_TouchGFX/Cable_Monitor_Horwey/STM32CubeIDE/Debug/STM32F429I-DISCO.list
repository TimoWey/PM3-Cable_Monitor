
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002d8f0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171d0  0802daa0  0802daa0  0003daa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08044c70  08044c70  00054c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08048968  08048968  00058968  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000006c4  08048bb4  08048bb4  00058bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  08049278  08049278  00059278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080ce368  080ce368  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080ce368  080ce368  000de368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080ce370  080ce370  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080ce370  080ce370  000de370  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080ce384  080ce384  000de384  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080ce388  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014314  20000170  080ce4f4  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014484  080ce4f4  000e4484  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00091edb  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001721a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00226542  00000000  00000000  0017223c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c44f  00000000  00000000  0039877e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004340  00000000  00000000  003c4bd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f67f  00000000  00000000  003c8f10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d6c  00000000  00000000  004e858f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003184e  00000000  00000000  004f02fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a8cc  00000000  00000000  00521b49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c93c  00000000  00000000  0055c418  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00568d54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0056c0cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802da88 	.word	0x0802da88

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802da88 	.word	0x0802da88

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_drsub>:
 8000350:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000354:	e002      	b.n	800035c <__adddf3>
 8000356:	bf00      	nop

08000358 <__aeabi_dsub>:
 8000358:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800035c <__adddf3>:
 800035c:	b530      	push	{r4, r5, lr}
 800035e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000362:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	bf1f      	itttt	ne
 8000372:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000376:	ea55 0c02 	orrsne.w	ip, r5, r2
 800037a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800037e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000382:	f000 80e2 	beq.w	800054a <__adddf3+0x1ee>
 8000386:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800038a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800038e:	bfb8      	it	lt
 8000390:	426d      	neglt	r5, r5
 8000392:	dd0c      	ble.n	80003ae <__adddf3+0x52>
 8000394:	442c      	add	r4, r5
 8000396:	ea80 0202 	eor.w	r2, r0, r2
 800039a:	ea81 0303 	eor.w	r3, r1, r3
 800039e:	ea82 0000 	eor.w	r0, r2, r0
 80003a2:	ea83 0101 	eor.w	r1, r3, r1
 80003a6:	ea80 0202 	eor.w	r2, r0, r2
 80003aa:	ea81 0303 	eor.w	r3, r1, r3
 80003ae:	2d36      	cmp	r5, #54	; 0x36
 80003b0:	bf88      	it	hi
 80003b2:	bd30      	pophi	{r4, r5, pc}
 80003b4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003bc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003c4:	d002      	beq.n	80003cc <__adddf3+0x70>
 80003c6:	4240      	negs	r0, r0
 80003c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003cc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80003d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80003d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80003d8:	d002      	beq.n	80003e0 <__adddf3+0x84>
 80003da:	4252      	negs	r2, r2
 80003dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003e0:	ea94 0f05 	teq	r4, r5
 80003e4:	f000 80a7 	beq.w	8000536 <__adddf3+0x1da>
 80003e8:	f1a4 0401 	sub.w	r4, r4, #1
 80003ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80003f0:	db0d      	blt.n	800040e <__adddf3+0xb2>
 80003f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80003f6:	fa22 f205 	lsr.w	r2, r2, r5
 80003fa:	1880      	adds	r0, r0, r2
 80003fc:	f141 0100 	adc.w	r1, r1, #0
 8000400:	fa03 f20e 	lsl.w	r2, r3, lr
 8000404:	1880      	adds	r0, r0, r2
 8000406:	fa43 f305 	asr.w	r3, r3, r5
 800040a:	4159      	adcs	r1, r3
 800040c:	e00e      	b.n	800042c <__adddf3+0xd0>
 800040e:	f1a5 0520 	sub.w	r5, r5, #32
 8000412:	f10e 0e20 	add.w	lr, lr, #32
 8000416:	2a01      	cmp	r2, #1
 8000418:	fa03 fc0e 	lsl.w	ip, r3, lr
 800041c:	bf28      	it	cs
 800041e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000422:	fa43 f305 	asr.w	r3, r3, r5
 8000426:	18c0      	adds	r0, r0, r3
 8000428:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800042c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000430:	d507      	bpl.n	8000442 <__adddf3+0xe6>
 8000432:	f04f 0e00 	mov.w	lr, #0
 8000436:	f1dc 0c00 	rsbs	ip, ip, #0
 800043a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800043e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000442:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000446:	d31b      	bcc.n	8000480 <__adddf3+0x124>
 8000448:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800044c:	d30c      	bcc.n	8000468 <__adddf3+0x10c>
 800044e:	0849      	lsrs	r1, r1, #1
 8000450:	ea5f 0030 	movs.w	r0, r0, rrx
 8000454:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000458:	f104 0401 	add.w	r4, r4, #1
 800045c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000460:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000464:	f080 809a 	bcs.w	800059c <__adddf3+0x240>
 8000468:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800046c:	bf08      	it	eq
 800046e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000472:	f150 0000 	adcs.w	r0, r0, #0
 8000476:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800047a:	ea41 0105 	orr.w	r1, r1, r5
 800047e:	bd30      	pop	{r4, r5, pc}
 8000480:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000484:	4140      	adcs	r0, r0
 8000486:	eb41 0101 	adc.w	r1, r1, r1
 800048a:	3c01      	subs	r4, #1
 800048c:	bf28      	it	cs
 800048e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000492:	d2e9      	bcs.n	8000468 <__adddf3+0x10c>
 8000494:	f091 0f00 	teq	r1, #0
 8000498:	bf04      	itt	eq
 800049a:	4601      	moveq	r1, r0
 800049c:	2000      	moveq	r0, #0
 800049e:	fab1 f381 	clz	r3, r1
 80004a2:	bf08      	it	eq
 80004a4:	3320      	addeq	r3, #32
 80004a6:	f1a3 030b 	sub.w	r3, r3, #11
 80004aa:	f1b3 0220 	subs.w	r2, r3, #32
 80004ae:	da0c      	bge.n	80004ca <__adddf3+0x16e>
 80004b0:	320c      	adds	r2, #12
 80004b2:	dd08      	ble.n	80004c6 <__adddf3+0x16a>
 80004b4:	f102 0c14 	add.w	ip, r2, #20
 80004b8:	f1c2 020c 	rsb	r2, r2, #12
 80004bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80004c0:	fa21 f102 	lsr.w	r1, r1, r2
 80004c4:	e00c      	b.n	80004e0 <__adddf3+0x184>
 80004c6:	f102 0214 	add.w	r2, r2, #20
 80004ca:	bfd8      	it	le
 80004cc:	f1c2 0c20 	rsble	ip, r2, #32
 80004d0:	fa01 f102 	lsl.w	r1, r1, r2
 80004d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80004d8:	bfdc      	itt	le
 80004da:	ea41 010c 	orrle.w	r1, r1, ip
 80004de:	4090      	lslle	r0, r2
 80004e0:	1ae4      	subs	r4, r4, r3
 80004e2:	bfa2      	ittt	ge
 80004e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004e8:	4329      	orrge	r1, r5
 80004ea:	bd30      	popge	{r4, r5, pc}
 80004ec:	ea6f 0404 	mvn.w	r4, r4
 80004f0:	3c1f      	subs	r4, #31
 80004f2:	da1c      	bge.n	800052e <__adddf3+0x1d2>
 80004f4:	340c      	adds	r4, #12
 80004f6:	dc0e      	bgt.n	8000516 <__adddf3+0x1ba>
 80004f8:	f104 0414 	add.w	r4, r4, #20
 80004fc:	f1c4 0220 	rsb	r2, r4, #32
 8000500:	fa20 f004 	lsr.w	r0, r0, r4
 8000504:	fa01 f302 	lsl.w	r3, r1, r2
 8000508:	ea40 0003 	orr.w	r0, r0, r3
 800050c:	fa21 f304 	lsr.w	r3, r1, r4
 8000510:	ea45 0103 	orr.w	r1, r5, r3
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	f1c4 040c 	rsb	r4, r4, #12
 800051a:	f1c4 0220 	rsb	r2, r4, #32
 800051e:	fa20 f002 	lsr.w	r0, r0, r2
 8000522:	fa01 f304 	lsl.w	r3, r1, r4
 8000526:	ea40 0003 	orr.w	r0, r0, r3
 800052a:	4629      	mov	r1, r5
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	fa21 f004 	lsr.w	r0, r1, r4
 8000532:	4629      	mov	r1, r5
 8000534:	bd30      	pop	{r4, r5, pc}
 8000536:	f094 0f00 	teq	r4, #0
 800053a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800053e:	bf06      	itte	eq
 8000540:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000544:	3401      	addeq	r4, #1
 8000546:	3d01      	subne	r5, #1
 8000548:	e74e      	b.n	80003e8 <__adddf3+0x8c>
 800054a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800054e:	bf18      	it	ne
 8000550:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000554:	d029      	beq.n	80005aa <__adddf3+0x24e>
 8000556:	ea94 0f05 	teq	r4, r5
 800055a:	bf08      	it	eq
 800055c:	ea90 0f02 	teqeq	r0, r2
 8000560:	d005      	beq.n	800056e <__adddf3+0x212>
 8000562:	ea54 0c00 	orrs.w	ip, r4, r0
 8000566:	bf04      	itt	eq
 8000568:	4619      	moveq	r1, r3
 800056a:	4610      	moveq	r0, r2
 800056c:	bd30      	pop	{r4, r5, pc}
 800056e:	ea91 0f03 	teq	r1, r3
 8000572:	bf1e      	ittt	ne
 8000574:	2100      	movne	r1, #0
 8000576:	2000      	movne	r0, #0
 8000578:	bd30      	popne	{r4, r5, pc}
 800057a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800057e:	d105      	bne.n	800058c <__adddf3+0x230>
 8000580:	0040      	lsls	r0, r0, #1
 8000582:	4149      	adcs	r1, r1
 8000584:	bf28      	it	cs
 8000586:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800058a:	bd30      	pop	{r4, r5, pc}
 800058c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000590:	bf3c      	itt	cc
 8000592:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000596:	bd30      	popcc	{r4, r5, pc}
 8000598:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800059c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005a0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005a4:	f04f 0000 	mov.w	r0, #0
 80005a8:	bd30      	pop	{r4, r5, pc}
 80005aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005ae:	bf1a      	itte	ne
 80005b0:	4619      	movne	r1, r3
 80005b2:	4610      	movne	r0, r2
 80005b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005b8:	bf1c      	itt	ne
 80005ba:	460b      	movne	r3, r1
 80005bc:	4602      	movne	r2, r0
 80005be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005c2:	bf06      	itte	eq
 80005c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005c8:	ea91 0f03 	teqeq	r1, r3
 80005cc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80005d0:	bd30      	pop	{r4, r5, pc}
 80005d2:	bf00      	nop

080005d4 <__aeabi_ui2d>:
 80005d4:	f090 0f00 	teq	r0, #0
 80005d8:	bf04      	itt	eq
 80005da:	2100      	moveq	r1, #0
 80005dc:	4770      	bxeq	lr
 80005de:	b530      	push	{r4, r5, lr}
 80005e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005e8:	f04f 0500 	mov.w	r5, #0
 80005ec:	f04f 0100 	mov.w	r1, #0
 80005f0:	e750      	b.n	8000494 <__adddf3+0x138>
 80005f2:	bf00      	nop

080005f4 <__aeabi_i2d>:
 80005f4:	f090 0f00 	teq	r0, #0
 80005f8:	bf04      	itt	eq
 80005fa:	2100      	moveq	r1, #0
 80005fc:	4770      	bxeq	lr
 80005fe:	b530      	push	{r4, r5, lr}
 8000600:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000604:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000608:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800060c:	bf48      	it	mi
 800060e:	4240      	negmi	r0, r0
 8000610:	f04f 0100 	mov.w	r1, #0
 8000614:	e73e      	b.n	8000494 <__adddf3+0x138>
 8000616:	bf00      	nop

08000618 <__aeabi_f2d>:
 8000618:	0042      	lsls	r2, r0, #1
 800061a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800061e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000622:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000626:	bf1f      	itttt	ne
 8000628:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800062c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000630:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000634:	4770      	bxne	lr
 8000636:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800063a:	bf08      	it	eq
 800063c:	4770      	bxeq	lr
 800063e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000642:	bf04      	itt	eq
 8000644:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000648:	4770      	bxeq	lr
 800064a:	b530      	push	{r4, r5, lr}
 800064c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000650:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000654:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000658:	e71c      	b.n	8000494 <__adddf3+0x138>
 800065a:	bf00      	nop

0800065c <__aeabi_ul2d>:
 800065c:	ea50 0201 	orrs.w	r2, r0, r1
 8000660:	bf08      	it	eq
 8000662:	4770      	bxeq	lr
 8000664:	b530      	push	{r4, r5, lr}
 8000666:	f04f 0500 	mov.w	r5, #0
 800066a:	e00a      	b.n	8000682 <__aeabi_l2d+0x16>

0800066c <__aeabi_l2d>:
 800066c:	ea50 0201 	orrs.w	r2, r0, r1
 8000670:	bf08      	it	eq
 8000672:	4770      	bxeq	lr
 8000674:	b530      	push	{r4, r5, lr}
 8000676:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800067a:	d502      	bpl.n	8000682 <__aeabi_l2d+0x16>
 800067c:	4240      	negs	r0, r0
 800067e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000682:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000686:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800068a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800068e:	f43f aed8 	beq.w	8000442 <__adddf3+0xe6>
 8000692:	f04f 0203 	mov.w	r2, #3
 8000696:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800069a:	bf18      	it	ne
 800069c:	3203      	addne	r2, #3
 800069e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006a2:	bf18      	it	ne
 80006a4:	3203      	addne	r2, #3
 80006a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006aa:	f1c2 0320 	rsb	r3, r2, #32
 80006ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80006b2:	fa20 f002 	lsr.w	r0, r0, r2
 80006b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ba:	ea40 000e 	orr.w	r0, r0, lr
 80006be:	fa21 f102 	lsr.w	r1, r1, r2
 80006c2:	4414      	add	r4, r2
 80006c4:	e6bd      	b.n	8000442 <__adddf3+0xe6>
 80006c6:	bf00      	nop

080006c8 <__aeabi_dmul>:
 80006c8:	b570      	push	{r4, r5, r6, lr}
 80006ca:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80006ce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80006d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80006d6:	bf1d      	ittte	ne
 80006d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80006dc:	ea94 0f0c 	teqne	r4, ip
 80006e0:	ea95 0f0c 	teqne	r5, ip
 80006e4:	f000 f8de 	bleq	80008a4 <__aeabi_dmul+0x1dc>
 80006e8:	442c      	add	r4, r5
 80006ea:	ea81 0603 	eor.w	r6, r1, r3
 80006ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80006f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80006f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80006fa:	bf18      	it	ne
 80006fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000700:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000704:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000708:	d038      	beq.n	800077c <__aeabi_dmul+0xb4>
 800070a:	fba0 ce02 	umull	ip, lr, r0, r2
 800070e:	f04f 0500 	mov.w	r5, #0
 8000712:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000716:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800071a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800071e:	f04f 0600 	mov.w	r6, #0
 8000722:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000726:	f09c 0f00 	teq	ip, #0
 800072a:	bf18      	it	ne
 800072c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000730:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000734:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000738:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800073c:	d204      	bcs.n	8000748 <__aeabi_dmul+0x80>
 800073e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000742:	416d      	adcs	r5, r5
 8000744:	eb46 0606 	adc.w	r6, r6, r6
 8000748:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800074c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000750:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000754:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000758:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800075c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000760:	bf88      	it	hi
 8000762:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000766:	d81e      	bhi.n	80007a6 <__aeabi_dmul+0xde>
 8000768:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800076c:	bf08      	it	eq
 800076e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000772:	f150 0000 	adcs.w	r0, r0, #0
 8000776:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000780:	ea46 0101 	orr.w	r1, r6, r1
 8000784:	ea40 0002 	orr.w	r0, r0, r2
 8000788:	ea81 0103 	eor.w	r1, r1, r3
 800078c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000790:	bfc2      	ittt	gt
 8000792:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000796:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800079a:	bd70      	popgt	{r4, r5, r6, pc}
 800079c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007a0:	f04f 0e00 	mov.w	lr, #0
 80007a4:	3c01      	subs	r4, #1
 80007a6:	f300 80ab 	bgt.w	8000900 <__aeabi_dmul+0x238>
 80007aa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80007ae:	bfde      	ittt	le
 80007b0:	2000      	movle	r0, #0
 80007b2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80007b6:	bd70      	pople	{r4, r5, r6, pc}
 80007b8:	f1c4 0400 	rsb	r4, r4, #0
 80007bc:	3c20      	subs	r4, #32
 80007be:	da35      	bge.n	800082c <__aeabi_dmul+0x164>
 80007c0:	340c      	adds	r4, #12
 80007c2:	dc1b      	bgt.n	80007fc <__aeabi_dmul+0x134>
 80007c4:	f104 0414 	add.w	r4, r4, #20
 80007c8:	f1c4 0520 	rsb	r5, r4, #32
 80007cc:	fa00 f305 	lsl.w	r3, r0, r5
 80007d0:	fa20 f004 	lsr.w	r0, r0, r4
 80007d4:	fa01 f205 	lsl.w	r2, r1, r5
 80007d8:	ea40 0002 	orr.w	r0, r0, r2
 80007dc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80007e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007e8:	fa21 f604 	lsr.w	r6, r1, r4
 80007ec:	eb42 0106 	adc.w	r1, r2, r6
 80007f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007f4:	bf08      	it	eq
 80007f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007fa:	bd70      	pop	{r4, r5, r6, pc}
 80007fc:	f1c4 040c 	rsb	r4, r4, #12
 8000800:	f1c4 0520 	rsb	r5, r4, #32
 8000804:	fa00 f304 	lsl.w	r3, r0, r4
 8000808:	fa20 f005 	lsr.w	r0, r0, r5
 800080c:	fa01 f204 	lsl.w	r2, r1, r4
 8000810:	ea40 0002 	orr.w	r0, r0, r2
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800081c:	f141 0100 	adc.w	r1, r1, #0
 8000820:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000824:	bf08      	it	eq
 8000826:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	f1c4 0520 	rsb	r5, r4, #32
 8000830:	fa00 f205 	lsl.w	r2, r0, r5
 8000834:	ea4e 0e02 	orr.w	lr, lr, r2
 8000838:	fa20 f304 	lsr.w	r3, r0, r4
 800083c:	fa01 f205 	lsl.w	r2, r1, r5
 8000840:	ea43 0302 	orr.w	r3, r3, r2
 8000844:	fa21 f004 	lsr.w	r0, r1, r4
 8000848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800084c:	fa21 f204 	lsr.w	r2, r1, r4
 8000850:	ea20 0002 	bic.w	r0, r0, r2
 8000854:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000858:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800085c:	bf08      	it	eq
 800085e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000862:	bd70      	pop	{r4, r5, r6, pc}
 8000864:	f094 0f00 	teq	r4, #0
 8000868:	d10f      	bne.n	800088a <__aeabi_dmul+0x1c2>
 800086a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800086e:	0040      	lsls	r0, r0, #1
 8000870:	eb41 0101 	adc.w	r1, r1, r1
 8000874:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000878:	bf08      	it	eq
 800087a:	3c01      	subeq	r4, #1
 800087c:	d0f7      	beq.n	800086e <__aeabi_dmul+0x1a6>
 800087e:	ea41 0106 	orr.w	r1, r1, r6
 8000882:	f095 0f00 	teq	r5, #0
 8000886:	bf18      	it	ne
 8000888:	4770      	bxne	lr
 800088a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800088e:	0052      	lsls	r2, r2, #1
 8000890:	eb43 0303 	adc.w	r3, r3, r3
 8000894:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000898:	bf08      	it	eq
 800089a:	3d01      	subeq	r5, #1
 800089c:	d0f7      	beq.n	800088e <__aeabi_dmul+0x1c6>
 800089e:	ea43 0306 	orr.w	r3, r3, r6
 80008a2:	4770      	bx	lr
 80008a4:	ea94 0f0c 	teq	r4, ip
 80008a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ac:	bf18      	it	ne
 80008ae:	ea95 0f0c 	teqne	r5, ip
 80008b2:	d00c      	beq.n	80008ce <__aeabi_dmul+0x206>
 80008b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008b8:	bf18      	it	ne
 80008ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008be:	d1d1      	bne.n	8000864 <__aeabi_dmul+0x19c>
 80008c0:	ea81 0103 	eor.w	r1, r1, r3
 80008c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008c8:	f04f 0000 	mov.w	r0, #0
 80008cc:	bd70      	pop	{r4, r5, r6, pc}
 80008ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d2:	bf06      	itte	eq
 80008d4:	4610      	moveq	r0, r2
 80008d6:	4619      	moveq	r1, r3
 80008d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008dc:	d019      	beq.n	8000912 <__aeabi_dmul+0x24a>
 80008de:	ea94 0f0c 	teq	r4, ip
 80008e2:	d102      	bne.n	80008ea <__aeabi_dmul+0x222>
 80008e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80008e8:	d113      	bne.n	8000912 <__aeabi_dmul+0x24a>
 80008ea:	ea95 0f0c 	teq	r5, ip
 80008ee:	d105      	bne.n	80008fc <__aeabi_dmul+0x234>
 80008f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80008f4:	bf1c      	itt	ne
 80008f6:	4610      	movne	r0, r2
 80008f8:	4619      	movne	r1, r3
 80008fa:	d10a      	bne.n	8000912 <__aeabi_dmul+0x24a>
 80008fc:	ea81 0103 	eor.w	r1, r1, r3
 8000900:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000904:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000908:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800090c:	f04f 0000 	mov.w	r0, #0
 8000910:	bd70      	pop	{r4, r5, r6, pc}
 8000912:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000916:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800091a:	bd70      	pop	{r4, r5, r6, pc}

0800091c <__aeabi_ddiv>:
 800091c:	b570      	push	{r4, r5, r6, lr}
 800091e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000922:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000926:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800092a:	bf1d      	ittte	ne
 800092c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000930:	ea94 0f0c 	teqne	r4, ip
 8000934:	ea95 0f0c 	teqne	r5, ip
 8000938:	f000 f8a7 	bleq	8000a8a <__aeabi_ddiv+0x16e>
 800093c:	eba4 0405 	sub.w	r4, r4, r5
 8000940:	ea81 0e03 	eor.w	lr, r1, r3
 8000944:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000948:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800094c:	f000 8088 	beq.w	8000a60 <__aeabi_ddiv+0x144>
 8000950:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000954:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000958:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800095c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000960:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000964:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000968:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800096c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000970:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000974:	429d      	cmp	r5, r3
 8000976:	bf08      	it	eq
 8000978:	4296      	cmpeq	r6, r2
 800097a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800097e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000982:	d202      	bcs.n	800098a <__aeabi_ddiv+0x6e>
 8000984:	085b      	lsrs	r3, r3, #1
 8000986:	ea4f 0232 	mov.w	r2, r2, rrx
 800098a:	1ab6      	subs	r6, r6, r2
 800098c:	eb65 0503 	sbc.w	r5, r5, r3
 8000990:	085b      	lsrs	r3, r3, #1
 8000992:	ea4f 0232 	mov.w	r2, r2, rrx
 8000996:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800099a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800099e:	ebb6 0e02 	subs.w	lr, r6, r2
 80009a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009a6:	bf22      	ittt	cs
 80009a8:	1ab6      	subcs	r6, r6, r2
 80009aa:	4675      	movcs	r5, lr
 80009ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80009b0:	085b      	lsrs	r3, r3, #1
 80009b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009be:	bf22      	ittt	cs
 80009c0:	1ab6      	subcs	r6, r6, r2
 80009c2:	4675      	movcs	r5, lr
 80009c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80009c8:	085b      	lsrs	r3, r3, #1
 80009ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80009ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80009d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009d6:	bf22      	ittt	cs
 80009d8:	1ab6      	subcs	r6, r6, r2
 80009da:	4675      	movcs	r5, lr
 80009dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80009e0:	085b      	lsrs	r3, r3, #1
 80009e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009ee:	bf22      	ittt	cs
 80009f0:	1ab6      	subcs	r6, r6, r2
 80009f2:	4675      	movcs	r5, lr
 80009f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80009f8:	ea55 0e06 	orrs.w	lr, r5, r6
 80009fc:	d018      	beq.n	8000a30 <__aeabi_ddiv+0x114>
 80009fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000a02:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000a06:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000a0a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000a0e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000a12:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000a16:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000a1a:	d1c0      	bne.n	800099e <__aeabi_ddiv+0x82>
 8000a1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a20:	d10b      	bne.n	8000a3a <__aeabi_ddiv+0x11e>
 8000a22:	ea41 0100 	orr.w	r1, r1, r0
 8000a26:	f04f 0000 	mov.w	r0, #0
 8000a2a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000a2e:	e7b6      	b.n	800099e <__aeabi_ddiv+0x82>
 8000a30:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a34:	bf04      	itt	eq
 8000a36:	4301      	orreq	r1, r0
 8000a38:	2000      	moveq	r0, #0
 8000a3a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000a3e:	bf88      	it	hi
 8000a40:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000a44:	f63f aeaf 	bhi.w	80007a6 <__aeabi_dmul+0xde>
 8000a48:	ebb5 0c03 	subs.w	ip, r5, r3
 8000a4c:	bf04      	itt	eq
 8000a4e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000a52:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000a56:	f150 0000 	adcs.w	r0, r0, #0
 8000a5a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000a5e:	bd70      	pop	{r4, r5, r6, pc}
 8000a60:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a64:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a68:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a6c:	bfc2      	ittt	gt
 8000a6e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a72:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a76:	bd70      	popgt	{r4, r5, r6, pc}
 8000a78:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a7c:	f04f 0e00 	mov.w	lr, #0
 8000a80:	3c01      	subs	r4, #1
 8000a82:	e690      	b.n	80007a6 <__aeabi_dmul+0xde>
 8000a84:	ea45 0e06 	orr.w	lr, r5, r6
 8000a88:	e68d      	b.n	80007a6 <__aeabi_dmul+0xde>
 8000a8a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a8e:	ea94 0f0c 	teq	r4, ip
 8000a92:	bf08      	it	eq
 8000a94:	ea95 0f0c 	teqeq	r5, ip
 8000a98:	f43f af3b 	beq.w	8000912 <__aeabi_dmul+0x24a>
 8000a9c:	ea94 0f0c 	teq	r4, ip
 8000aa0:	d10a      	bne.n	8000ab8 <__aeabi_ddiv+0x19c>
 8000aa2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000aa6:	f47f af34 	bne.w	8000912 <__aeabi_dmul+0x24a>
 8000aaa:	ea95 0f0c 	teq	r5, ip
 8000aae:	f47f af25 	bne.w	80008fc <__aeabi_dmul+0x234>
 8000ab2:	4610      	mov	r0, r2
 8000ab4:	4619      	mov	r1, r3
 8000ab6:	e72c      	b.n	8000912 <__aeabi_dmul+0x24a>
 8000ab8:	ea95 0f0c 	teq	r5, ip
 8000abc:	d106      	bne.n	8000acc <__aeabi_ddiv+0x1b0>
 8000abe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000ac2:	f43f aefd 	beq.w	80008c0 <__aeabi_dmul+0x1f8>
 8000ac6:	4610      	mov	r0, r2
 8000ac8:	4619      	mov	r1, r3
 8000aca:	e722      	b.n	8000912 <__aeabi_dmul+0x24a>
 8000acc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000ad0:	bf18      	it	ne
 8000ad2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000ad6:	f47f aec5 	bne.w	8000864 <__aeabi_dmul+0x19c>
 8000ada:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000ade:	f47f af0d 	bne.w	80008fc <__aeabi_dmul+0x234>
 8000ae2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000ae6:	f47f aeeb 	bne.w	80008c0 <__aeabi_dmul+0x1f8>
 8000aea:	e712      	b.n	8000912 <__aeabi_dmul+0x24a>

08000aec <__aeabi_d2f>:
 8000aec:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af4:	bf24      	itt	cs
 8000af6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000afa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afe:	d90d      	bls.n	8000b1c <__aeabi_d2f+0x30>
 8000b00:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b04:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b08:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b0c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b10:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b14:	bf08      	it	eq
 8000b16:	f020 0001 	biceq.w	r0, r0, #1
 8000b1a:	4770      	bx	lr
 8000b1c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b20:	d121      	bne.n	8000b66 <__aeabi_d2f+0x7a>
 8000b22:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b26:	bfbc      	itt	lt
 8000b28:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b2c:	4770      	bxlt	lr
 8000b2e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b32:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b36:	f1c2 0218 	rsb	r2, r2, #24
 8000b3a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b42:	fa20 f002 	lsr.w	r0, r0, r2
 8000b46:	bf18      	it	ne
 8000b48:	f040 0001 	orrne.w	r0, r0, #1
 8000b4c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b50:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b54:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b58:	ea40 000c 	orr.w	r0, r0, ip
 8000b5c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b60:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b64:	e7cc      	b.n	8000b00 <__aeabi_d2f+0x14>
 8000b66:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b6a:	d107      	bne.n	8000b7c <__aeabi_d2f+0x90>
 8000b6c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b70:	bf1e      	ittt	ne
 8000b72:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b76:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b7a:	4770      	bxne	lr
 8000b7c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b80:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b84:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b88:	4770      	bx	lr
 8000b8a:	bf00      	nop

08000b8c <__aeabi_uldivmod>:
 8000b8c:	b953      	cbnz	r3, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b8e:	b94a      	cbnz	r2, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b90:	2900      	cmp	r1, #0
 8000b92:	bf08      	it	eq
 8000b94:	2800      	cmpeq	r0, #0
 8000b96:	bf1c      	itt	ne
 8000b98:	f04f 31ff 	movne.w	r1, #4294967295
 8000b9c:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba0:	f000 b970 	b.w	8000e84 <__aeabi_idiv0>
 8000ba4:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ba8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bac:	f000 f806 	bl	8000bbc <__udivmoddi4>
 8000bb0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bb8:	b004      	add	sp, #16
 8000bba:	4770      	bx	lr

08000bbc <__udivmoddi4>:
 8000bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc0:	9e08      	ldr	r6, [sp, #32]
 8000bc2:	460d      	mov	r5, r1
 8000bc4:	4604      	mov	r4, r0
 8000bc6:	460f      	mov	r7, r1
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d14a      	bne.n	8000c62 <__udivmoddi4+0xa6>
 8000bcc:	428a      	cmp	r2, r1
 8000bce:	4694      	mov	ip, r2
 8000bd0:	d965      	bls.n	8000c9e <__udivmoddi4+0xe2>
 8000bd2:	fab2 f382 	clz	r3, r2
 8000bd6:	b143      	cbz	r3, 8000bea <__udivmoddi4+0x2e>
 8000bd8:	fa02 fc03 	lsl.w	ip, r2, r3
 8000bdc:	f1c3 0220 	rsb	r2, r3, #32
 8000be0:	409f      	lsls	r7, r3
 8000be2:	fa20 f202 	lsr.w	r2, r0, r2
 8000be6:	4317      	orrs	r7, r2
 8000be8:	409c      	lsls	r4, r3
 8000bea:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000bee:	fa1f f58c 	uxth.w	r5, ip
 8000bf2:	fbb7 f1fe 	udiv	r1, r7, lr
 8000bf6:	0c22      	lsrs	r2, r4, #16
 8000bf8:	fb0e 7711 	mls	r7, lr, r1, r7
 8000bfc:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000c00:	fb01 f005 	mul.w	r0, r1, r5
 8000c04:	4290      	cmp	r0, r2
 8000c06:	d90a      	bls.n	8000c1e <__udivmoddi4+0x62>
 8000c08:	eb1c 0202 	adds.w	r2, ip, r2
 8000c0c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000c10:	f080 811c 	bcs.w	8000e4c <__udivmoddi4+0x290>
 8000c14:	4290      	cmp	r0, r2
 8000c16:	f240 8119 	bls.w	8000e4c <__udivmoddi4+0x290>
 8000c1a:	3902      	subs	r1, #2
 8000c1c:	4462      	add	r2, ip
 8000c1e:	1a12      	subs	r2, r2, r0
 8000c20:	b2a4      	uxth	r4, r4
 8000c22:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c26:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c2a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c2e:	fb00 f505 	mul.w	r5, r0, r5
 8000c32:	42a5      	cmp	r5, r4
 8000c34:	d90a      	bls.n	8000c4c <__udivmoddi4+0x90>
 8000c36:	eb1c 0404 	adds.w	r4, ip, r4
 8000c3a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c3e:	f080 8107 	bcs.w	8000e50 <__udivmoddi4+0x294>
 8000c42:	42a5      	cmp	r5, r4
 8000c44:	f240 8104 	bls.w	8000e50 <__udivmoddi4+0x294>
 8000c48:	4464      	add	r4, ip
 8000c4a:	3802      	subs	r0, #2
 8000c4c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c50:	1b64      	subs	r4, r4, r5
 8000c52:	2100      	movs	r1, #0
 8000c54:	b11e      	cbz	r6, 8000c5e <__udivmoddi4+0xa2>
 8000c56:	40dc      	lsrs	r4, r3
 8000c58:	2300      	movs	r3, #0
 8000c5a:	e9c6 4300 	strd	r4, r3, [r6]
 8000c5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c62:	428b      	cmp	r3, r1
 8000c64:	d908      	bls.n	8000c78 <__udivmoddi4+0xbc>
 8000c66:	2e00      	cmp	r6, #0
 8000c68:	f000 80ed 	beq.w	8000e46 <__udivmoddi4+0x28a>
 8000c6c:	2100      	movs	r1, #0
 8000c6e:	e9c6 0500 	strd	r0, r5, [r6]
 8000c72:	4608      	mov	r0, r1
 8000c74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c78:	fab3 f183 	clz	r1, r3
 8000c7c:	2900      	cmp	r1, #0
 8000c7e:	d149      	bne.n	8000d14 <__udivmoddi4+0x158>
 8000c80:	42ab      	cmp	r3, r5
 8000c82:	d302      	bcc.n	8000c8a <__udivmoddi4+0xce>
 8000c84:	4282      	cmp	r2, r0
 8000c86:	f200 80f8 	bhi.w	8000e7a <__udivmoddi4+0x2be>
 8000c8a:	1a84      	subs	r4, r0, r2
 8000c8c:	eb65 0203 	sbc.w	r2, r5, r3
 8000c90:	2001      	movs	r0, #1
 8000c92:	4617      	mov	r7, r2
 8000c94:	2e00      	cmp	r6, #0
 8000c96:	d0e2      	beq.n	8000c5e <__udivmoddi4+0xa2>
 8000c98:	e9c6 4700 	strd	r4, r7, [r6]
 8000c9c:	e7df      	b.n	8000c5e <__udivmoddi4+0xa2>
 8000c9e:	b902      	cbnz	r2, 8000ca2 <__udivmoddi4+0xe6>
 8000ca0:	deff      	udf	#255	; 0xff
 8000ca2:	fab2 f382 	clz	r3, r2
 8000ca6:	2b00      	cmp	r3, #0
 8000ca8:	f040 8090 	bne.w	8000dcc <__udivmoddi4+0x210>
 8000cac:	1a8a      	subs	r2, r1, r2
 8000cae:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cb2:	fa1f fe8c 	uxth.w	lr, ip
 8000cb6:	2101      	movs	r1, #1
 8000cb8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000cbc:	fb07 2015 	mls	r0, r7, r5, r2
 8000cc0:	0c22      	lsrs	r2, r4, #16
 8000cc2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000cc6:	fb0e f005 	mul.w	r0, lr, r5
 8000cca:	4290      	cmp	r0, r2
 8000ccc:	d908      	bls.n	8000ce0 <__udivmoddi4+0x124>
 8000cce:	eb1c 0202 	adds.w	r2, ip, r2
 8000cd2:	f105 38ff 	add.w	r8, r5, #4294967295
 8000cd6:	d202      	bcs.n	8000cde <__udivmoddi4+0x122>
 8000cd8:	4290      	cmp	r0, r2
 8000cda:	f200 80cb 	bhi.w	8000e74 <__udivmoddi4+0x2b8>
 8000cde:	4645      	mov	r5, r8
 8000ce0:	1a12      	subs	r2, r2, r0
 8000ce2:	b2a4      	uxth	r4, r4
 8000ce4:	fbb2 f0f7 	udiv	r0, r2, r7
 8000ce8:	fb07 2210 	mls	r2, r7, r0, r2
 8000cec:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cf0:	fb0e fe00 	mul.w	lr, lr, r0
 8000cf4:	45a6      	cmp	lr, r4
 8000cf6:	d908      	bls.n	8000d0a <__udivmoddi4+0x14e>
 8000cf8:	eb1c 0404 	adds.w	r4, ip, r4
 8000cfc:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d00:	d202      	bcs.n	8000d08 <__udivmoddi4+0x14c>
 8000d02:	45a6      	cmp	lr, r4
 8000d04:	f200 80bb 	bhi.w	8000e7e <__udivmoddi4+0x2c2>
 8000d08:	4610      	mov	r0, r2
 8000d0a:	eba4 040e 	sub.w	r4, r4, lr
 8000d0e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000d12:	e79f      	b.n	8000c54 <__udivmoddi4+0x98>
 8000d14:	f1c1 0720 	rsb	r7, r1, #32
 8000d18:	408b      	lsls	r3, r1
 8000d1a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d1e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d22:	fa05 f401 	lsl.w	r4, r5, r1
 8000d26:	fa20 f307 	lsr.w	r3, r0, r7
 8000d2a:	40fd      	lsrs	r5, r7
 8000d2c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d30:	4323      	orrs	r3, r4
 8000d32:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d36:	fa1f fe8c 	uxth.w	lr, ip
 8000d3a:	fb09 5518 	mls	r5, r9, r8, r5
 8000d3e:	0c1c      	lsrs	r4, r3, #16
 8000d40:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d44:	fb08 f50e 	mul.w	r5, r8, lr
 8000d48:	42a5      	cmp	r5, r4
 8000d4a:	fa02 f201 	lsl.w	r2, r2, r1
 8000d4e:	fa00 f001 	lsl.w	r0, r0, r1
 8000d52:	d90b      	bls.n	8000d6c <__udivmoddi4+0x1b0>
 8000d54:	eb1c 0404 	adds.w	r4, ip, r4
 8000d58:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d5c:	f080 8088 	bcs.w	8000e70 <__udivmoddi4+0x2b4>
 8000d60:	42a5      	cmp	r5, r4
 8000d62:	f240 8085 	bls.w	8000e70 <__udivmoddi4+0x2b4>
 8000d66:	f1a8 0802 	sub.w	r8, r8, #2
 8000d6a:	4464      	add	r4, ip
 8000d6c:	1b64      	subs	r4, r4, r5
 8000d6e:	b29d      	uxth	r5, r3
 8000d70:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d74:	fb09 4413 	mls	r4, r9, r3, r4
 8000d78:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d7c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d80:	45a6      	cmp	lr, r4
 8000d82:	d908      	bls.n	8000d96 <__udivmoddi4+0x1da>
 8000d84:	eb1c 0404 	adds.w	r4, ip, r4
 8000d88:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d8c:	d26c      	bcs.n	8000e68 <__udivmoddi4+0x2ac>
 8000d8e:	45a6      	cmp	lr, r4
 8000d90:	d96a      	bls.n	8000e68 <__udivmoddi4+0x2ac>
 8000d92:	3b02      	subs	r3, #2
 8000d94:	4464      	add	r4, ip
 8000d96:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d9a:	fba3 9502 	umull	r9, r5, r3, r2
 8000d9e:	eba4 040e 	sub.w	r4, r4, lr
 8000da2:	42ac      	cmp	r4, r5
 8000da4:	46c8      	mov	r8, r9
 8000da6:	46ae      	mov	lr, r5
 8000da8:	d356      	bcc.n	8000e58 <__udivmoddi4+0x29c>
 8000daa:	d053      	beq.n	8000e54 <__udivmoddi4+0x298>
 8000dac:	b156      	cbz	r6, 8000dc4 <__udivmoddi4+0x208>
 8000dae:	ebb0 0208 	subs.w	r2, r0, r8
 8000db2:	eb64 040e 	sbc.w	r4, r4, lr
 8000db6:	fa04 f707 	lsl.w	r7, r4, r7
 8000dba:	40ca      	lsrs	r2, r1
 8000dbc:	40cc      	lsrs	r4, r1
 8000dbe:	4317      	orrs	r7, r2
 8000dc0:	e9c6 7400 	strd	r7, r4, [r6]
 8000dc4:	4618      	mov	r0, r3
 8000dc6:	2100      	movs	r1, #0
 8000dc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dcc:	f1c3 0120 	rsb	r1, r3, #32
 8000dd0:	fa02 fc03 	lsl.w	ip, r2, r3
 8000dd4:	fa20 f201 	lsr.w	r2, r0, r1
 8000dd8:	fa25 f101 	lsr.w	r1, r5, r1
 8000ddc:	409d      	lsls	r5, r3
 8000dde:	432a      	orrs	r2, r5
 8000de0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000de4:	fa1f fe8c 	uxth.w	lr, ip
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1510 	mls	r5, r7, r0, r1
 8000df0:	0c11      	lsrs	r1, r2, #16
 8000df2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000df6:	fb00 f50e 	mul.w	r5, r0, lr
 8000dfa:	428d      	cmp	r5, r1
 8000dfc:	fa04 f403 	lsl.w	r4, r4, r3
 8000e00:	d908      	bls.n	8000e14 <__udivmoddi4+0x258>
 8000e02:	eb1c 0101 	adds.w	r1, ip, r1
 8000e06:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e0a:	d22f      	bcs.n	8000e6c <__udivmoddi4+0x2b0>
 8000e0c:	428d      	cmp	r5, r1
 8000e0e:	d92d      	bls.n	8000e6c <__udivmoddi4+0x2b0>
 8000e10:	3802      	subs	r0, #2
 8000e12:	4461      	add	r1, ip
 8000e14:	1b49      	subs	r1, r1, r5
 8000e16:	b292      	uxth	r2, r2
 8000e18:	fbb1 f5f7 	udiv	r5, r1, r7
 8000e1c:	fb07 1115 	mls	r1, r7, r5, r1
 8000e20:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e24:	fb05 f10e 	mul.w	r1, r5, lr
 8000e28:	4291      	cmp	r1, r2
 8000e2a:	d908      	bls.n	8000e3e <__udivmoddi4+0x282>
 8000e2c:	eb1c 0202 	adds.w	r2, ip, r2
 8000e30:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e34:	d216      	bcs.n	8000e64 <__udivmoddi4+0x2a8>
 8000e36:	4291      	cmp	r1, r2
 8000e38:	d914      	bls.n	8000e64 <__udivmoddi4+0x2a8>
 8000e3a:	3d02      	subs	r5, #2
 8000e3c:	4462      	add	r2, ip
 8000e3e:	1a52      	subs	r2, r2, r1
 8000e40:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e44:	e738      	b.n	8000cb8 <__udivmoddi4+0xfc>
 8000e46:	4631      	mov	r1, r6
 8000e48:	4630      	mov	r0, r6
 8000e4a:	e708      	b.n	8000c5e <__udivmoddi4+0xa2>
 8000e4c:	4639      	mov	r1, r7
 8000e4e:	e6e6      	b.n	8000c1e <__udivmoddi4+0x62>
 8000e50:	4610      	mov	r0, r2
 8000e52:	e6fb      	b.n	8000c4c <__udivmoddi4+0x90>
 8000e54:	4548      	cmp	r0, r9
 8000e56:	d2a9      	bcs.n	8000dac <__udivmoddi4+0x1f0>
 8000e58:	ebb9 0802 	subs.w	r8, r9, r2
 8000e5c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e60:	3b01      	subs	r3, #1
 8000e62:	e7a3      	b.n	8000dac <__udivmoddi4+0x1f0>
 8000e64:	4645      	mov	r5, r8
 8000e66:	e7ea      	b.n	8000e3e <__udivmoddi4+0x282>
 8000e68:	462b      	mov	r3, r5
 8000e6a:	e794      	b.n	8000d96 <__udivmoddi4+0x1da>
 8000e6c:	4640      	mov	r0, r8
 8000e6e:	e7d1      	b.n	8000e14 <__udivmoddi4+0x258>
 8000e70:	46d0      	mov	r8, sl
 8000e72:	e77b      	b.n	8000d6c <__udivmoddi4+0x1b0>
 8000e74:	3d02      	subs	r5, #2
 8000e76:	4462      	add	r2, ip
 8000e78:	e732      	b.n	8000ce0 <__udivmoddi4+0x124>
 8000e7a:	4608      	mov	r0, r1
 8000e7c:	e70a      	b.n	8000c94 <__udivmoddi4+0xd8>
 8000e7e:	4464      	add	r4, ip
 8000e80:	3802      	subs	r0, #2
 8000e82:	e742      	b.n	8000d0a <__udivmoddi4+0x14e>

08000e84 <__aeabi_idiv0>:
 8000e84:	4770      	bx	lr
 8000e86:	bf00      	nop

08000e88 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000e88:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000ec0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000e8c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000e8e:	e003      	b.n	8000e98 <LoopCopyDataInit>

08000e90 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000e90:	4b0c      	ldr	r3, [pc, #48]	; (8000ec4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000e92:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000e94:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000e96:	3104      	adds	r1, #4

08000e98 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000e98:	480b      	ldr	r0, [pc, #44]	; (8000ec8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000e9a:	4b0c      	ldr	r3, [pc, #48]	; (8000ecc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000e9c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000e9e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ea0:	d3f6      	bcc.n	8000e90 <CopyDataInit>
  ldr  r2, =_sbss
 8000ea2:	4a0b      	ldr	r2, [pc, #44]	; (8000ed0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000ea4:	e002      	b.n	8000eac <LoopFillZerobss>

08000ea6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000ea6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000ea8:	f842 3b04 	str.w	r3, [r2], #4

08000eac <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000eac:	4b09      	ldr	r3, [pc, #36]	; (8000ed4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000eae:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000eb0:	d3f9      	bcc.n	8000ea6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000eb2:	f009 fb9d 	bl	800a5f0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000eb6:	f02c f86b 	bl	802cf90 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000eba:	f000 fbd5 	bl	8001668 <main>
  bx  lr    
 8000ebe:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000ec0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000ec4:	080ce388 	.word	0x080ce388
  ldr  r0, =_sdata
 8000ec8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000ecc:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000ed0:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000ed4:	20014484 	.word	0x20014484

08000ed8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000ed8:	e7fe      	b.n	8000ed8 <ADC_IRQHandler>
	...

08000edc <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000edc:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000ee0:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000ee4:	4293      	cmp	r3, r2
 8000ee6:	d905      	bls.n	8000ef4 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000ee8:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000eec:	4291      	cmp	r1, r2
 8000eee:	d803      	bhi.n	8000ef8 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000ef0:	2001      	movs	r0, #1
 8000ef2:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000ef4:	2000      	movs	r0, #0
 8000ef6:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000ef8:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000efc:	4291      	cmp	r1, r2
 8000efe:	d960      	bls.n	8000fc2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000f00:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000f04:	4293      	cmp	r3, r2
 8000f06:	d95e      	bls.n	8000fc6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000f08:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000f0c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000f10:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000f14:	4291      	cmp	r1, r2
 8000f16:	d95a      	bls.n	8000fce <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000f18:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000f1c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000f20:	4291      	cmp	r1, r2
 8000f22:	d952      	bls.n	8000fca <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000f24:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000f28:	4291      	cmp	r1, r2
 8000f2a:	d952      	bls.n	8000fd2 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000f2c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000f30:	4291      	cmp	r1, r2
 8000f32:	d950      	bls.n	8000fd6 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000f34:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000f38:	4291      	cmp	r1, r2
 8000f3a:	d94e      	bls.n	8000fda <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000f3c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000f40:	4291      	cmp	r1, r2
 8000f42:	d94c      	bls.n	8000fde <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000f44:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000f48:	4291      	cmp	r1, r2
 8000f4a:	d94a      	bls.n	8000fe2 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000f4c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000f50:	4291      	cmp	r1, r2
 8000f52:	d948      	bls.n	8000fe6 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000f54:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000f58:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000f5c:	4288      	cmp	r0, r1
 8000f5e:	d944      	bls.n	8000fea <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000f60:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000f64:	458c      	cmp	ip, r1
 8000f66:	d942      	bls.n	8000fee <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000f68:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000f6c:	458c      	cmp	ip, r1
 8000f6e:	d940      	bls.n	8000ff2 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000f70:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000f74:	4288      	cmp	r0, r1
 8000f76:	d93e      	bls.n	8000ff6 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000f78:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000f7c:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000f80:	4288      	cmp	r0, r1
 8000f82:	d93a      	bls.n	8000ffa <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000f84:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000f88:	4291      	cmp	r1, r2
 8000f8a:	d938      	bls.n	8000ffe <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000f8c:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000f90:	4291      	cmp	r1, r2
 8000f92:	d938      	bls.n	8001006 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000f94:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000f98:	4291      	cmp	r1, r2
 8000f9a:	d932      	bls.n	8001002 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000f9c:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000fa0:	4291      	cmp	r1, r2
 8000fa2:	d936      	bls.n	8001012 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000fa4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000fa8:	4291      	cmp	r1, r2
 8000faa:	d930      	bls.n	800100e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000fac:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000fb0:	4291      	cmp	r1, r2
 8000fb2:	d92a      	bls.n	800100a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000fb4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000fb8:	4293      	cmp	r3, r2
 8000fba:	bf94      	ite	ls
 8000fbc:	2017      	movls	r0, #23
 8000fbe:	2000      	movhi	r0, #0
 8000fc0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000fc2:	2002      	movs	r0, #2
 8000fc4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000fc6:	2003      	movs	r0, #3
 8000fc8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000fca:	2005      	movs	r0, #5
 8000fcc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000fce:	2004      	movs	r0, #4
 8000fd0:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000fd2:	2006      	movs	r0, #6
 8000fd4:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000fd6:	2007      	movs	r0, #7
 8000fd8:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000fda:	2008      	movs	r0, #8
 8000fdc:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000fde:	2009      	movs	r0, #9
 8000fe0:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000fe2:	200a      	movs	r0, #10
 8000fe4:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000fe6:	200b      	movs	r0, #11
 8000fe8:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000fea:	200c      	movs	r0, #12
 8000fec:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000fee:	200d      	movs	r0, #13
 8000ff0:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000ff2:	200e      	movs	r0, #14
 8000ff4:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000ff6:	200f      	movs	r0, #15
 8000ff8:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000ffa:	2010      	movs	r0, #16
 8000ffc:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000ffe:	2011      	movs	r0, #17
 8001000:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8001002:	2013      	movs	r0, #19
 8001004:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8001006:	2012      	movs	r0, #18
 8001008:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 800100a:	2016      	movs	r0, #22
  }
  return sector;
}
 800100c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 800100e:	2015      	movs	r0, #21
 8001010:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8001012:	2014      	movs	r0, #20
 8001014:	4770      	bx	lr
 8001016:	bf00      	nop

08001018 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8001018:	b5f0      	push	{r4, r5, r6, r7, lr}
 800101a:	4607      	mov	r7, r0
 800101c:	b083      	sub	sp, #12
 800101e:	4616      	mov	r6, r2
 8001020:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8001022:	f009 fca3 	bl	800a96c <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8001026:	4638      	mov	r0, r7
 8001028:	f7ff ff58 	bl	8000edc <GetSector>
 800102c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 800102e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8001032:	f7ff ff53 	bl	8000edc <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8001036:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8001038:	4813      	ldr	r0, [pc, #76]	; (8001088 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 800103a:	1b1b      	subs	r3, r3, r4
 800103c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8001040:	2300      	movs	r3, #0
 8001042:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8001044:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8001046:	2302      	movs	r3, #2
 8001048:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800104a:	f009 fd0d 	bl	800aa68 <HAL_FLASHEx_Erase>
 800104e:	b988      	cbnz	r0, 8001074 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8001050:	b1a6      	cbz	r6, 800107c <Flash_Write_Data+0x64>
 8001052:	1b7f      	subs	r7, r7, r5
 8001054:	4604      	mov	r4, r0
 8001056:	3d04      	subs	r5, #4
 8001058:	3704      	adds	r7, #4
 800105a:	e001      	b.n	8001060 <Flash_Write_Data+0x48>
 800105c:	42a6      	cmp	r6, r4
 800105e:	d00d      	beq.n	800107c <Flash_Write_Data+0x64>
 8001060:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8001062:	2300      	movs	r3, #0
 8001064:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8001068:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800106a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 800106c:	f009 fbdc 	bl	800a828 <HAL_FLASH_Program>
 8001070:	2800      	cmp	r0, #0
 8001072:	d0f3      	beq.n	800105c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8001074:	f009 fc98 	bl	800a9a8 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8001078:	b003      	add	sp, #12
 800107a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 800107c:	f009 fc8a 	bl	800a994 <HAL_FLASH_Lock>
	   return 0;
 8001080:	2000      	movs	r0, #0
}
 8001082:	b003      	add	sp, #12
 8001084:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001086:	bf00      	nop
 8001088:	2000018c 	.word	0x2000018c

0800108c <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 800108c:	460b      	mov	r3, r1
 800108e:	3201      	adds	r2, #1
 8001090:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8001094:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8001096:	581a      	ldr	r2, [r3, r0]
 8001098:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 800109c:	428b      	cmp	r3, r1
 800109e:	d1fa      	bne.n	8001096 <Flash_Read_Data+0xa>
	}
}
 80010a0:	4770      	bx	lr
 80010a2:	bf00      	nop

080010a4 <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* Samples) {
 80010a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010a8:	ed2d 8b02 	vpush	{d8}
 80010ac:	b08d      	sub	sp, #52	; 0x34
 80010ae:	af00      	add	r7, sp, #0
 80010b0:	460d      	mov	r5, r1
 80010b2:	60f8      	str	r0, [r7, #12]
 80010b4:	4690      	mov	r8, r2
    // Perform FFT using CMSIS-DSP library
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80010b6:	f001 f839 	bl	800212c <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80010ba:	b203      	sxth	r3, r0
 80010bc:	60bb      	str	r3, [r7, #8]
 80010be:	009b      	lsls	r3, r3, #2
 80010c0:	607b      	str	r3, [r7, #4]
 80010c2:	3307      	adds	r3, #7
 80010c4:	f023 0307 	bic.w	r3, r3, #7
 80010c8:	ebad 0d03 	sub.w	sp, sp, r3
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80010cc:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80010ce:	46eb      	mov	fp, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80010d0:	b1f0      	cbz	r0, 8001110 <calculate_freq_and_signalstrength+0x6c>
 80010d2:	3d01      	subs	r5, #1
 80010d4:	46d9      	mov	r9, fp
        input_samples[i] =
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010d6:	46da      	mov	sl, fp
    for (uint32_t i = 0; i < fft_size; i++) {
 80010d8:	2600      	movs	r6, #0
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010da:	f001 f825 	bl	8002128 <MEAS_get_num_of_chan>
 80010de:	fb06 5000 	mla	r0, r6, r0, r5
 80010e2:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80010e6:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80010ea:	3601      	adds	r6, #1
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80010f0:	42b4      	cmp	r4, r6
            (float32_t)Samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80010f2:	ecea 7a01 	vstmia	sl!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80010f6:	d1f0      	bne.n	80010da <calculate_freq_and_signalstrength+0x36>
 80010f8:	687e      	ldr	r6, [r7, #4]
    }
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80010fa:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8001218 <calculate_freq_and_signalstrength+0x174>
 80010fe:	445e      	add	r6, fp
 8001100:	edd9 7a00 	vldr	s15, [r9]
 8001104:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001108:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 800110c:	454e      	cmp	r6, r9
 800110e:	d1f7      	bne.n	8001100 <calculate_freq_and_signalstrength+0x5c>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * buffer_size];
 8001110:	68bb      	ldr	r3, [r7, #8]
 8001112:	466a      	mov	r2, sp
 8001114:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001118:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * buffer_size];
 800111c:	469d      	mov	sp, r3
 800111e:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001120:	b2a1      	uxth	r1, r4
 8001122:	f107 0018 	add.w	r0, r7, #24
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001126:	eef8 8a67 	vcvt.f32.u32	s17, s15
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 800112a:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800112c:	f029 fc84 	bl	802aa38 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001130:	2300      	movs	r3, #0
 8001132:	4659      	mov	r1, fp
 8001134:	f107 0018 	add.w	r0, r7, #24
 8001138:	462a      	mov	r2, r5
 800113a:	f029 fd01 	bl	802ab40 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 800113e:	4622      	mov	r2, r4
 8001140:	4629      	mov	r1, r5
 8001142:	4628      	mov	r0, r5
 8001144:	f02a f96a 	bl	802b41c <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001148:	f107 0310 	add.w	r3, r7, #16
 800114c:	f107 0214 	add.w	r2, r7, #20
 8001150:	4621      	mov	r1, r4
 8001152:	4628      	mov	r0, r5
 8001154:	f029 fc08 	bl	802a968 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001158:	edd7 7a04 	vldr	s15, [r7, #16]
 800115c:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001160:	f000 ffe6 	bl	8002130 <MEAS_get_samp_freq>
 8001164:	ee07 0a90 	vmov	s15, r0
 8001168:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 800116c:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800121c <calculate_freq_and_signalstrength+0x178>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001170:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8001174:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8001178:	eeb4 8ac7 	vcmpe.f32	s16, s14
 800117c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001180:	d81b      	bhi.n	80011ba <calculate_freq_and_signalstrength+0x116>
 8001182:	eddf 7a27 	vldr	s15, [pc, #156]	; 8001220 <calculate_freq_and_signalstrength+0x17c>
 8001186:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800118a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800118e:	db2d      	blt.n	80011ec <calculate_freq_and_signalstrength+0x148>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001190:	68bb      	ldr	r3, [r7, #8]
 8001192:	eb03 0983 	add.w	r9, r3, r3, lsl #2
 8001196:	f000 ffcb 	bl	8002130 <MEAS_get_samp_freq>
 800119a:	eb09 0989 	add.w	r9, r9, r9, lsl #2
 800119e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80011a2:	fbb9 f0f0 	udiv	r0, r9, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 80011a6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 80011aa:	edd0 7a00 	vldr	s15, [r0]
 80011ae:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 80011b2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 80011b4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 80011b8:	e00b      	b.n	80011d2 <calculate_freq_and_signalstrength+0x12e>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 80011ba:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001224 <calculate_freq_and_signalstrength+0x180>
 80011be:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80011c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011c6:	d91d      	bls.n	8001204 <calculate_freq_and_signalstrength+0x160>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80011c8:	f000 ffb2 	bl	8002130 <MEAS_get_samp_freq>
    float signal_strength = 0;
 80011cc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001228 <calculate_freq_and_signalstrength+0x184>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 80011d0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 80011d2:	68fa      	ldr	r2, [r7, #12]
}
 80011d4:	3734      	adds	r7, #52	; 0x34
 80011d6:	4610      	mov	r0, r2
    return fft;
 80011d8:	ed82 8a00 	vstr	s16, [r2]
 80011dc:	ed82 7a01 	vstr	s14, [r2, #4]
 80011e0:	7213      	strb	r3, [r2, #8]
}
 80011e2:	46bd      	mov	sp, r7
 80011e4:	ecbd 8b02 	vpop	{d8}
 80011e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 80011ec:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8001224 <calculate_freq_and_signalstrength+0x180>
 80011f0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80011f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011f8:	d8e6      	bhi.n	80011c8 <calculate_freq_and_signalstrength+0x124>
 80011fa:	eeb4 8a47 	vcmp.f32	s16, s14
 80011fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001202:	d1e1      	bne.n	80011c8 <calculate_freq_and_signalstrength+0x124>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001204:	68bb      	ldr	r3, [r7, #8]
 8001206:	ebc3 1903 	rsb	r9, r3, r3, lsl #4
 800120a:	f000 ff91 	bl	8002130 <MEAS_get_samp_freq>
 800120e:	ea4f 0989 	mov.w	r9, r9, lsl #2
 8001212:	fbb9 f0f0 	udiv	r0, r9, r0
    if (given_frequency != 0) {
 8001216:	e7c6      	b.n	80011a6 <calculate_freq_and_signalstrength+0x102>
 8001218:	44fff000 	.word	0x44fff000
 800121c:	425c0000 	.word	0x425c0000
 8001220:	42340000 	.word	0x42340000
 8001224:	42820000 	.word	0x42820000
 8001228:	00000000 	.word	0x00000000

0800122c <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800122c:	ed90 6a01 	vldr	s12, [r0, #4]
 8001230:	edd0 5a02 	vldr	s11, [r0, #8]
 8001234:	edd0 4a00 	vldr	s9, [r0]
 8001238:	edd1 6a02 	vldr	s13, [r1, #8]
 800123c:	edd1 3a01 	vldr	s7, [r1, #4]
 8001240:	ed91 4a00 	vldr	s8, [r1]
 8001244:	492e      	ldr	r1, [pc, #184]	; (8001300 <calculate_coefficients_single_pad+0xd4>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001246:	4a2f      	ldr	r2, [pc, #188]	; (8001304 <calculate_coefficients_single_pad+0xd8>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001248:	4b2f      	ldr	r3, [pc, #188]	; (8001308 <calculate_coefficients_single_pad+0xdc>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800124a:	ee76 7a25 	vadd.f32	s15, s12, s11
 800124e:	ee26 1a25 	vmul.f32	s2, s12, s11
 8001252:	ee74 7ae7 	vsub.f32	s15, s9, s15
 8001256:	eeb0 7a41 	vmov.f32	s14, s2
 800125a:	eea4 7aa7 	vfma.f32	s14, s9, s15
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800125e:	ee36 3a65 	vsub.f32	s6, s12, s11
 8001262:	ee66 7ae5 	vnmul.f32	s15, s13, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001266:	ee23 7a07 	vmul.f32	s14, s6, s14
 800126a:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 800126e:	eec5 1a07 	vdiv.f32	s3, s10, s14
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001272:	eee6 7a23 	vfma.f32	s15, s12, s7
 8001276:	ee26 5a06 	vmul.f32	s10, s12, s12
 800127a:	ee24 7aa4 	vmul.f32	s14, s9, s9
 800127e:	ee65 0aa5 	vmul.f32	s1, s11, s11
 8001282:	ee27 3a03 	vmul.f32	s6, s14, s6
 8001286:	ee23 0ac5 	vnmul.f32	s0, s7, s10
 800128a:	ee67 7a81 	vmul.f32	s15, s15, s2
 800128e:	eea0 0aa6 	vfma.f32	s0, s1, s13
 8001292:	eee3 7a04 	vfma.f32	s15, s6, s8
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001296:	ee76 2ac4 	vsub.f32	s5, s13, s8
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800129a:	eee4 7a80 	vfma.f32	s15, s9, s0
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 800129e:	ee33 2ac4 	vsub.f32	s4, s7, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012a2:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012a6:	ee22 2a05 	vmul.f32	s4, s4, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012aa:	ee62 2aa5 	vmul.f32	s5, s5, s11
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012ae:	ee20 3a85 	vmul.f32	s6, s1, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012b2:	ee24 5a86 	vmul.f32	s10, s9, s12
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80012b6:	edc1 7a00 	vstr	s15, [r1]
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012ba:	ee74 7a66 	vsub.f32	s15, s8, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012be:	ee34 4a63 	vsub.f32	s8, s8, s7
 80012c2:	ee65 5a25 	vmul.f32	s11, s10, s11
 80012c6:	eeb0 5a62 	vmov.f32	s10, s5
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012ca:	eea0 2aa7 	vfma.f32	s4, s1, s15
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012ce:	eea6 5a04 	vfma.f32	s10, s12, s8
 80012d2:	ee73 7ae6 	vsub.f32	s15, s7, s13
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012d6:	ee27 7a02 	vmul.f32	s14, s14, s4
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012da:	ee67 7a81 	vmul.f32	s15, s15, s2
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012de:	ee76 6ae3 	vsub.f32	s13, s13, s7
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012e2:	eee4 7a85 	vfma.f32	s15, s9, s10
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012e6:	eea3 7a26 	vfma.f32	s14, s6, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012ea:	ee65 7aa7 	vmul.f32	s15, s11, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ee:	ee27 7a21 	vmul.f32	s14, s14, s3
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012f2:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80012f6:	ed82 7a00 	vstr	s14, [r2]
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012fa:	edc3 7a00 	vstr	s15, [r3]
}
 80012fe:	4770      	bx	lr
 8001300:	200001a0 	.word	0x200001a0
 8001304:	200001a4 	.word	0x200001a4
 8001308:	200001a8 	.word	0x200001a8
 800130c:	00000000 	.word	0x00000000

08001310 <calculate_distance_and_angle>:


DISTANCE_ANGLE calculate_distance_and_angle(uint32_t* Samples)
{
 8001310:	b5f0      	push	{r4, r5, r6, r7, lr}
    float32_t distance[3] = {10, 50, 100};
    //extract global calibration values for overview purpose
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001312:	4b53      	ldr	r3, [pc, #332]	; (8001460 <calculate_distance_and_angle+0x150>)
    float32_t distance[3] = {10, 50, 100};
 8001314:	4a53      	ldr	r2, [pc, #332]	; (8001464 <calculate_distance_and_angle+0x154>)
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001316:	edd3 7a00 	vldr	s15, [r3]
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 800131a:	ed93 7a04 	vldr	s14, [r3, #16]
    //uint32_t* Samples = MEAS_start_measure();
    FFT fft = calculate_freq_and_signalstrength(1, Samples);

    float32_t signal_pad = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 800131e:	4f52      	ldr	r7, [pc, #328]	; (8001468 <calculate_distance_and_angle+0x158>)
{
 8001320:	ed2d 8b04 	vpush	{d8-d9}
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001324:	eef8 7a67 	vcvt.f32.u32	s15, s15
{
 8001328:	b08d      	sub	sp, #52	; 0x34
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 800132a:	edcd 7a03 	vstr	s15, [sp, #12]
 800132e:	edd3 7a01 	vldr	s15, [r3, #4]
 8001332:	eef8 7a67 	vcvt.f32.u32	s15, s15
{
 8001336:	4604      	mov	r4, r0
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001338:	edcd 7a04 	vstr	s15, [sp, #16]
 800133c:	edd3 7a02 	vldr	s15, [r3, #8]
 8001340:	eef8 7a67 	vcvt.f32.u32	s15, s15
{
 8001344:	460e      	mov	r6, r1
    float32_t signal_l[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 8001346:	edcd 7a05 	vstr	s15, [sp, #20]
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 800134a:	edd3 7a03 	vldr	s15, [r3, #12]
    float32_t distance[3] = {10, 50, 100};
 800134e:	ca07      	ldmia	r2, {r0, r1, r2}
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 8001350:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001354:	edd3 7a05 	vldr	s15, [r3, #20]
 8001358:	edcd 6a06 	vstr	s13, [sp, #24]
 800135c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8001360:	eef8 7a67 	vcvt.f32.u32	s15, s15
    float32_t distance[3] = {10, 50, 100};
 8001364:	466d      	mov	r5, sp
 8001366:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_r, distance);
 800136a:	a806      	add	r0, sp, #24
 800136c:	4629      	mov	r1, r5
    float32_t signal_r[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 800136e:	ed8d 7a07 	vstr	s14, [sp, #28]
 8001372:	edcd 7a08 	vstr	s15, [sp, #32]
    calculate_coefficients_single_pad(signal_r, distance);
 8001376:	f7ff ff59 	bl	800122c <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_l, distance);
 800137a:	4629      	mov	r1, r5
 800137c:	a803      	add	r0, sp, #12
 800137e:	f7ff ff55 	bl	800122c <calculate_coefficients_single_pad>
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001382:	4632      	mov	r2, r6
 8001384:	a809      	add	r0, sp, #36	; 0x24
 8001386:	2101      	movs	r1, #1
 8001388:	f7ff fe8c 	bl	80010a4 <calculate_freq_and_signalstrength>
 800138c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 8001390:	edd7 6a00 	vldr	s13, [r7]
 8001394:	4d35      	ldr	r5, [pc, #212]	; (800146c <calculate_distance_and_angle+0x15c>)
 8001396:	eec6 8aa7 	vdiv.f32	s17, s13, s15
    // Calculate the angle using the distance

    // Set the calculated values
    dist_angle.distance_r = calc_distance;

    fft = calculate_freq_and_signalstrength(2, Samples);
 800139a:	4632      	mov	r2, r6
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 800139c:	4e34      	ldr	r6, [pc, #208]	; (8001470 <calculate_distance_and_angle+0x160>)
    fft = calculate_freq_and_signalstrength(2, Samples);
 800139e:	a809      	add	r0, sp, #36	; 0x24
 80013a0:	2102      	movs	r1, #2
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 80013a2:	ee27 7aa7 	vmul.f32	s14, s15, s15
 80013a6:	edd6 6a00 	vldr	s13, [r6]
 80013aa:	edd5 7a00 	vldr	s15, [r5]
 80013ae:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80013b2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80013b6:	ee78 8aa7 	vadd.f32	s17, s17, s15
    fft = calculate_freq_and_signalstrength(2, Samples);
 80013ba:	f7ff fe73 	bl	80010a4 <calculate_freq_and_signalstrength>
 80013be:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
    signal_pad = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 80013c2:	ed97 7a00 	vldr	s14, [r7]
 80013c6:	ed96 6a00 	vldr	s12, [r6]
 80013ca:	ee67 6aa7 	vmul.f32	s13, s15, s15
 80013ce:	ee87 8a27 	vdiv.f32	s16, s14, s15
 80013d2:	eec6 7a26 	vdiv.f32	s15, s12, s13
 80013d6:	ed95 7a00 	vldr	s14, [r5]
 80013da:	ee38 8a07 	vadd.f32	s16, s16, s14
 80013de:	ee38 8a27 	vadd.f32	s16, s16, s15
    // Set the calculated values
    dist_angle.distance_l = calc_distance;

    // calculate the distance and angle
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
    dist_angle.angle_r = atanf(2 * D_P / (dist_angle.distance_r - dist_angle.distance_l));
 80013e2:	ee78 7ac8 	vsub.f32	s15, s17, s16
 80013e6:	ee17 0a90 	vmov	r0, s15
 80013ea:	f7ff f915 	bl	8000618 <__aeabi_f2d>
 80013ee:	4602      	mov	r2, r0
 80013f0:	460b      	mov	r3, r1
 80013f2:	a119      	add	r1, pc, #100	; (adr r1, 8001458 <calculate_distance_and_angle+0x148>)
 80013f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80013f8:	f7ff fa90 	bl	800091c <__aeabi_ddiv>
 80013fc:	460f      	mov	r7, r1
 80013fe:	4606      	mov	r6, r0
 8001400:	f7ff fb74 	bl	8000aec <__aeabi_d2f>
 8001404:	ee00 0a10 	vmov	s0, r0
 8001408:	f02a fc1e 	bl	802bc48 <atanf>
    dist_angle.angle_l = atanf(2 * D_P / (dist_angle.distance_l - dist_angle.distance_r));
 800140c:	f107 4100 	add.w	r1, r7, #2147483648	; 0x80000000
 8001410:	4630      	mov	r0, r6
    dist_angle.angle_r = atanf(2 * D_P / (dist_angle.distance_r - dist_angle.distance_l));
 8001412:	eeb0 9a40 	vmov.f32	s18, s0
    dist_angle.angle_l = atanf(2 * D_P / (dist_angle.distance_l - dist_angle.distance_r));
 8001416:	f7ff fb69 	bl	8000aec <__aeabi_d2f>
 800141a:	ee00 0a10 	vmov	s0, r0
 800141e:	f02a fc13 	bl	802bc48 <atanf>
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 8001422:	ee38 7a88 	vadd.f32	s14, s17, s16

    dist_angle.angle = (dist_angle.angle_r * 180 / PI);
 8001426:	eddf 7a13 	vldr	s15, [pc, #76]	; 8001474 <calculate_distance_and_angle+0x164>

    // Return the calculated values
    return dist_angle;
 800142a:	edc4 8a00 	vstr	s17, [r4]
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 800142e:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8001432:	ee27 7a26 	vmul.f32	s14, s14, s13
    dist_angle.angle = (dist_angle.angle_r * 180 / PI);
 8001436:	ee69 7a27 	vmul.f32	s15, s18, s15
}
 800143a:	4620      	mov	r0, r4
    return dist_angle;
 800143c:	ed84 9a01 	vstr	s18, [r4, #4]
 8001440:	ed84 8a02 	vstr	s16, [r4, #8]
 8001444:	ed84 0a03 	vstr	s0, [r4, #12]
 8001448:	ed84 7a04 	vstr	s14, [r4, #16]
 800144c:	edc4 7a05 	vstr	s15, [r4, #20]
}
 8001450:	b00d      	add	sp, #52	; 0x34
 8001452:	ecbd 8b04 	vpop	{d8-d9}
 8001456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001458:	33333333 	.word	0x33333333
 800145c:	4043b333 	.word	0x4043b333
 8001460:	200001ac 	.word	0x200001ac
 8001464:	0802daa0 	.word	0x0802daa0
 8001468:	200001a4 	.word	0x200001a4
 800146c:	200001a0 	.word	0x200001a0
 8001470:	200001a8 	.word	0x200001a8
 8001474:	42652ee0 	.word	0x42652ee0

08001478 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001478:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800147a:	2064      	movs	r0, #100	; 0x64
 800147c:	f00d fa9e 	bl	800e9bc <osDelay>
  for(;;)
 8001480:	e7fb      	b.n	800147a <StartDefaultTask+0x2>
 8001482:	bf00      	nop

08001484 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	4c19      	ldr	r4, [pc, #100]	; (80014ec <StartTimeoutTask+0x68>)
 8001488:	f8df 8074 	ldr.w	r8, [pc, #116]	; 8001500 <StartTimeoutTask+0x7c>
 800148c:	4e18      	ldr	r6, [pc, #96]	; (80014f0 <StartTimeoutTask+0x6c>)
 800148e:	4d19      	ldr	r5, [pc, #100]	; (80014f4 <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001490:	4f19      	ldr	r7, [pc, #100]	; (80014f8 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 8001492:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001494:	4915      	ldr	r1, [pc, #84]	; (80014ec <StartTimeoutTask+0x68>)
 8001496:	2300      	movs	r3, #0
 8001498:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 800149a:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800149e:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80014a2:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80014a6:	f00d fb85 	bl	800ebb4 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80014aa:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80014ac:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80014ae:	4638      	mov	r0, r7
 80014b0:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80014b2:	b912      	cbnz	r2, 80014ba <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 80014b4:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80014b6:	f009 fcab 	bl	800ae10 <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80014ba:	4810      	ldr	r0, [pc, #64]	; (80014fc <StartTimeoutTask+0x78>)
 80014bc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80014c0:	f009 fcaa 	bl	800ae18 <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80014c4:	2100      	movs	r1, #0
 80014c6:	4630      	mov	r0, r6
 80014c8:	f00c fda0 	bl	800e00c <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 80014cc:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80014ce:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 80014d0:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80014d2:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 80014d4:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80014d6:	f00c fd29 	bl	800df2c <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 80014da:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 80014dc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 80014e0:	330a      	adds	r3, #10
 80014e2:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 80014e4:	f00d fa6a 	bl	800e9bc <osDelay>
  {
 80014e8:	e7d3      	b.n	8001492 <StartTimeoutTask+0xe>
 80014ea:	bf00      	nop
 80014ec:	20000010 	.word	0x20000010
 80014f0:	20000380 	.word	0x20000380
 80014f4:	2000000c 	.word	0x2000000c
 80014f8:	40021000 	.word	0x40021000
 80014fc:	40021800 	.word	0x40021800
 8001500:	200001e4 	.word	0x200001e4

08001504 <gyro_disable>:
{
 8001504:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001506:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001508:	4e1f      	ldr	r6, [pc, #124]	; (8001588 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800150a:	4d20      	ldr	r5, [pc, #128]	; (800158c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800150c:	4c20      	ldr	r4, [pc, #128]	; (8001590 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800150e:	2700      	movs	r7, #0
 8001510:	9700      	str	r7, [sp, #0]
 8001512:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001514:	f043 0304 	orr.w	r3, r3, #4
 8001518:	6333      	str	r3, [r6, #48]	; 0x30
 800151a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800151c:	f003 0304 	and.w	r3, r3, #4
 8001520:	9300      	str	r3, [sp, #0]
 8001522:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001524:	682b      	ldr	r3, [r5, #0]
 8001526:	f023 030c 	bic.w	r3, r3, #12
 800152a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800152c:	682b      	ldr	r3, [r5, #0]
 800152e:	f043 0304 	orr.w	r3, r3, #4
 8001532:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001534:	69ab      	ldr	r3, [r5, #24]
 8001536:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800153a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800153c:	200a      	movs	r0, #10
 800153e:	f009 f891 	bl	800a664 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001542:	682b      	ldr	r3, [r5, #0]
 8001544:	f043 030c 	orr.w	r3, r3, #12
 8001548:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800154a:	9701      	str	r7, [sp, #4]
 800154c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800154e:	f043 0320 	orr.w	r3, r3, #32
 8001552:	6333      	str	r3, [r6, #48]	; 0x30
 8001554:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001556:	f003 0320 	and.w	r3, r3, #32
 800155a:	9301      	str	r3, [sp, #4]
 800155c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800155e:	68a3      	ldr	r3, [r4, #8]
 8001560:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001564:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001566:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001568:	f023 030f 	bic.w	r3, r3, #15
 800156c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800156e:	68e3      	ldr	r3, [r4, #12]
 8001570:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001574:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001576:	200a      	movs	r0, #10
 8001578:	f009 f874 	bl	800a664 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800157c:	6823      	ldr	r3, [r4, #0]
 800157e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001582:	6023      	str	r3, [r4, #0]
}
 8001584:	b003      	add	sp, #12
 8001586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001588:	40023800 	.word	0x40023800
 800158c:	40020800 	.word	0x40020800
 8001590:	40021400 	.word	0x40021400

08001594 <setCalibrationFlashValues>:
{
 8001594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001598:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 800159a:	009b      	lsls	r3, r3, #2
 800159c:	3307      	adds	r3, #7
 800159e:	466d      	mov	r5, sp
 80015a0:	08db      	lsrs	r3, r3, #3
 80015a2:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 80015a6:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 80015a8:	469d      	mov	sp, r3
 80015aa:	466d      	mov	r5, sp
{
 80015ac:	4616      	mov	r6, r2
 80015ae:	4681      	mov	r9, r0
 80015b0:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 80015b2:	4622      	mov	r2, r4
 80015b4:	4629      	mov	r1, r5
 80015b6:	f7ff fd69 	bl	800108c <Flash_Read_Data>
	Rx_Data[index] = value;
 80015ba:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 80015be:	4622      	mov	r2, r4
 80015c0:	4629      	mov	r1, r5
 80015c2:	4648      	mov	r0, r9
 80015c4:	f7ff fd28 	bl	8001018 <Flash_Write_Data>
}
 80015c8:	46bd      	mov	sp, r7
 80015ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80015ce:	bf00      	nop

080015d0 <SystemClock_Config>:
{
 80015d0:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015d2:	2400      	movs	r4, #0
{
 80015d4:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015d6:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80015da:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015de:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80015e2:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015e6:	4a1e      	ldr	r2, [pc, #120]	; (8001660 <SystemClock_Config+0x90>)
 80015e8:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015ea:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015ec:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80015ee:	4b1d      	ldr	r3, [pc, #116]	; (8001664 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80015f0:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80015f4:	6411      	str	r1, [r2, #64]	; 0x40
 80015f6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80015f8:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80015fc:	9201      	str	r2, [sp, #4]
 80015fe:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001600:	9402      	str	r4, [sp, #8]
 8001602:	681a      	ldr	r2, [r3, #0]
 8001604:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001608:	601a      	str	r2, [r3, #0]
 800160a:	681b      	ldr	r3, [r3, #0]
 800160c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001610:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001612:	2201      	movs	r2, #1
 8001614:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001618:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 800161c:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800161e:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001620:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001622:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001626:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800162a:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800162e:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001630:	2202      	movs	r2, #2
 8001632:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001634:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001636:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800163a:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800163c:	f00b fa26 	bl	800ca8c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001640:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001642:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001646:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800164a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800164e:	a803      	add	r0, sp, #12
 8001650:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001652:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001656:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001658:	f00b fc30 	bl	800cebc <HAL_RCC_ClockConfig>
}
 800165c:	b015      	add	sp, #84	; 0x54
 800165e:	bd30      	pop	{r4, r5, pc}
 8001660:	40023800 	.word	0x40023800
 8001664:	40007000 	.word	0x40007000

08001668 <main>:
{
 8001668:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800166c:	2400      	movs	r4, #0
{
 800166e:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001670:	f008 ffcc 	bl	800a60c <HAL_Init>
  SystemClock_Config();
 8001674:	f7ff ffac 	bl	80015d0 <SystemClock_Config>
  gyro_disable();
 8001678:	f7ff ff44 	bl	8001504 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800167c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001680:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001684:	4bc3      	ldr	r3, [pc, #780]	; (8001994 <main+0x32c>)
 8001686:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001688:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800168a:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800168c:	48c2      	ldr	r0, [pc, #776]	; (8001998 <main+0x330>)
  hi2c3.Instance = I2C3;
 800168e:	f8df a33c 	ldr.w	sl, [pc, #828]	; 80019cc <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001692:	f041 0110 	orr.w	r1, r1, #16
 8001696:	6319      	str	r1, [r3, #48]	; 0x30
 8001698:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800169a:	f001 0110 	and.w	r1, r1, #16
 800169e:	9100      	str	r1, [sp, #0]
 80016a0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80016a2:	9401      	str	r4, [sp, #4]
 80016a4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016a6:	f041 0120 	orr.w	r1, r1, #32
 80016aa:	6319      	str	r1, [r3, #48]	; 0x30
 80016ac:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ae:	f001 0120 	and.w	r1, r1, #32
 80016b2:	9101      	str	r1, [sp, #4]
 80016b4:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80016b6:	9402      	str	r4, [sp, #8]
 80016b8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ba:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80016be:	6319      	str	r1, [r3, #48]	; 0x30
 80016c0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016c2:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80016c6:	9102      	str	r1, [sp, #8]
 80016c8:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80016ca:	9403      	str	r4, [sp, #12]
 80016cc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ce:	f041 0104 	orr.w	r1, r1, #4
 80016d2:	6319      	str	r1, [r3, #48]	; 0x30
 80016d4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016d6:	f001 0104 	and.w	r1, r1, #4
 80016da:	9103      	str	r1, [sp, #12]
 80016dc:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016de:	9404      	str	r4, [sp, #16]
 80016e0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016e2:	f041 0101 	orr.w	r1, r1, #1
 80016e6:	6319      	str	r1, [r3, #48]	; 0x30
 80016e8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ea:	f001 0101 	and.w	r1, r1, #1
 80016ee:	9104      	str	r1, [sp, #16]
 80016f0:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016f2:	9405      	str	r4, [sp, #20]
 80016f4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016f6:	f041 0102 	orr.w	r1, r1, #2
 80016fa:	6319      	str	r1, [r3, #48]	; 0x30
 80016fc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016fe:	f001 0102 	and.w	r1, r1, #2
 8001702:	9105      	str	r1, [sp, #20]
 8001704:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001706:	9406      	str	r4, [sp, #24]
 8001708:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800170a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800170e:	6319      	str	r1, [r3, #48]	; 0x30
 8001710:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001712:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001716:	9106      	str	r1, [sp, #24]
 8001718:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800171a:	9407      	str	r4, [sp, #28]
 800171c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800171e:	f041 0108 	orr.w	r1, r1, #8
 8001722:	6319      	str	r1, [r3, #48]	; 0x30
 8001724:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001726:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800172a:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800172c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800172e:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001730:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001732:	f009 fb6d 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001736:	4898      	ldr	r0, [pc, #608]	; (8001998 <main+0x330>)
 8001738:	2120      	movs	r1, #32
 800173a:	2201      	movs	r2, #1
 800173c:	f009 fb68 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001740:	4896      	ldr	r0, [pc, #600]	; (800199c <main+0x334>)
 8001742:	4622      	mov	r2, r4
 8001744:	2114      	movs	r1, #20
 8001746:	f009 fb63 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800174a:	4895      	ldr	r0, [pc, #596]	; (80019a0 <main+0x338>)
 800174c:	4622      	mov	r2, r4
 800174e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001752:	f009 fb5d 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001756:	4893      	ldr	r0, [pc, #588]	; (80019a4 <main+0x33c>)
 8001758:	4622      	mov	r2, r4
 800175a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800175e:	f009 fb57 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001762:	4891      	ldr	r0, [pc, #580]	; (80019a8 <main+0x340>)
 8001764:	4622      	mov	r2, r4
 8001766:	2104      	movs	r1, #4
 8001768:	f009 fb52 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800176c:	2201      	movs	r2, #1
 800176e:	488e      	ldr	r0, [pc, #568]	; (80019a8 <main+0x340>)
 8001770:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001774:	f009 fb4c 	bl	800ae10 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001778:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800177c:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001780:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001782:	4885      	ldr	r0, [pc, #532]	; (8001998 <main+0x330>)
 8001784:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001786:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001788:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800178c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001790:	f009 f9fa 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001794:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001798:	487f      	ldr	r0, [pc, #508]	; (8001998 <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800179a:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800179c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800179e:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017a0:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80017a2:	f009 f9f1 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80017a6:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80017a8:	487b      	ldr	r0, [pc, #492]	; (8001998 <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80017aa:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80017ac:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017ae:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80017b0:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017b2:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017b6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80017b8:	f009 f9e6 	bl	800ab88 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017bc:	4877      	ldr	r0, [pc, #476]	; (800199c <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017be:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017c0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80017c2:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80017ca:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017cc:	f009 f9dc 	bl	800ab88 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80017d0:	4872      	ldr	r0, [pc, #456]	; (800199c <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017d2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80017d4:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017d6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80017da:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80017de:	f009 f9d3 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80017e2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	486e      	ldr	r0, [pc, #440]	; (80019a0 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80017e8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ec:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017f0:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017f2:	f009 f9c9 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80017f6:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017fa:	486a      	ldr	r0, [pc, #424]	; (80019a4 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017fc:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017fe:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001800:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001804:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001806:	f009 f9bf 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 800180a:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800180e:	4866      	ldr	r0, [pc, #408]	; (80019a8 <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001810:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001812:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001814:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001818:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800181a:	f009 f9b5 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800181e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001822:	4862      	ldr	r0, [pc, #392]	; (80019ac <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001824:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001826:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001828:	230f      	movs	r3, #15
 800182a:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800182c:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001830:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001832:	f009 f9a9 	bl	800ab88 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001836:	2105      	movs	r1, #5
 8001838:	4622      	mov	r2, r4
 800183a:	2009      	movs	r0, #9
 800183c:	f008 ff36 	bl	800a6ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001840:	2009      	movs	r0, #9
 8001842:	f008 ff71 	bl	800a728 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001846:	485a      	ldr	r0, [pc, #360]	; (80019b0 <main+0x348>)
 8001848:	4a5a      	ldr	r2, [pc, #360]	; (80019b4 <main+0x34c>)
 800184a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800184c:	f008 ff7a 	bl	800a744 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001850:	4959      	ldr	r1, [pc, #356]	; (80019b8 <main+0x350>)
 8001852:	4a5a      	ldr	r2, [pc, #360]	; (80019bc <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001854:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 8001856:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800185a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800185e:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001862:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001866:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800186a:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800186e:	f009 fd35 	bl	800b2dc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001872:	4649      	mov	r1, r9
 8001874:	4650      	mov	r0, sl
 8001876:	f00a fefd 	bl	800c674 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800187a:	4621      	mov	r1, r4
 800187c:	4650      	mov	r0, sl
 800187e:	f00a ff19 	bl	800c6b4 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001882:	f8df c14c 	ldr.w	ip, [pc, #332]	; 80019d0 <main+0x368>
  hspi5.Instance = SPI5;
 8001886:	484e      	ldr	r0, [pc, #312]	; (80019c0 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001888:	f8df a148 	ldr.w	sl, [pc, #328]	; 80019d4 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800188c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800188e:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001892:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001896:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800189a:	2218      	movs	r2, #24
 800189c:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80018a0:	220a      	movs	r2, #10
 80018a2:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80018a4:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80018a8:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80018ac:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80018b0:	f00b fdf2 	bl	800d498 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 80018b4:	2207      	movs	r2, #7
 80018b6:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 80018b8:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80018ba:	4a42      	ldr	r2, [pc, #264]	; (80019c4 <main+0x35c>)
 80018bc:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80018c0:	2040      	movs	r0, #64	; 0x40
 80018c2:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80018c6:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80018ca:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80018ce:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80018d2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80018d4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80018d8:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80018da:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80018de:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 80018e2:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80018e6:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80018ea:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80018ee:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 80018f2:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 80018f4:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 80018f6:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80018f8:	f00b fcdc 	bl	800d2b4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80018fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001900:	a90b      	add	r1, sp, #44	; 0x2c
 8001902:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001904:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001908:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 800190c:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800190e:	f00b fcf3 	bl	800d2f8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001912:	4640      	mov	r0, r8
 8001914:	f008 fea6 	bl	800a664 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001918:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800191c:	a90b      	add	r1, sp, #44	; 0x2c
 800191e:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001920:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001924:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001928:	f00b fce6 	bl	800d2f8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800192c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001930:	a90b      	add	r1, sp, #44	; 0x2c
 8001932:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001934:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001938:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800193c:	f00b fcdc 	bl	800d2f8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001940:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001944:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001946:	9908      	ldr	r1, [sp, #32]
 8001948:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800194a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800194e:	a90b      	add	r1, sp, #44	; 0x2c
 8001950:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001952:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001956:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800195a:	f00b fccd 	bl	800d2f8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800195e:	4650      	mov	r0, sl
 8001960:	f240 516a 	movw	r1, #1386	; 0x56a
 8001964:	f00b fce6 	bl	800d334 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8001968:	f8df a06c 	ldr.w	sl, [pc, #108]	; 80019d8 <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800196c:	2234      	movs	r2, #52	; 0x34
 800196e:	4621      	mov	r1, r4
 8001970:	a80f      	add	r0, sp, #60	; 0x3c
 8001972:	f02b fa0e 	bl	802cd92 <memset>
  hltdc.Instance = LTDC;
 8001976:	4a14      	ldr	r2, [pc, #80]	; (80019c8 <main+0x360>)
 8001978:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 800197c:	2209      	movs	r2, #9
 800197e:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001982:	221d      	movs	r2, #29
 8001984:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001988:	f240 130d 	movw	r3, #269	; 0x10d
 800198c:	f240 1243 	movw	r2, #323	; 0x143
 8001990:	e024      	b.n	80019dc <main+0x374>
 8001992:	bf00      	nop
 8001994:	40023800 	.word	0x40023800
 8001998:	40021000 	.word	0x40021000
 800199c:	40020800 	.word	0x40020800
 80019a0:	40020400 	.word	0x40020400
 80019a4:	40020c00 	.word	0x40020c00
 80019a8:	40021800 	.word	0x40021800
 80019ac:	40020000 	.word	0x40020000
 80019b0:	200001f0 	.word	0x200001f0
 80019b4:	40023000 	.word	0x40023000
 80019b8:	40005c00 	.word	0x40005c00
 80019bc:	000186a0 	.word	0x000186a0
 80019c0:	20000328 	.word	0x20000328
 80019c4:	a0000140 	.word	0xa0000140
 80019c8:	40016800 	.word	0x40016800
 80019cc:	200001f8 	.word	0x200001f8
 80019d0:	40015000 	.word	0x40015000
 80019d4:	200002f4 	.word	0x200002f4
 80019d8:	2000024c 	.word	0x2000024c
 80019dc:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80019e0:	f240 1117 	movw	r1, #279	; 0x117
 80019e4:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80019e8:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80019ec:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 80019ee:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 80019f2:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 80019f6:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80019fa:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80019fe:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001a02:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a06:	f00a fe79 	bl	800c6fc <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001a0a:	23f0      	movs	r3, #240	; 0xf0
 8001a0c:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001a0e:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001a10:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001a14:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001a16:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001a18:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a1a:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001a1e:	4622      	mov	r2, r4
 8001a20:	a90f      	add	r1, sp, #60	; 0x3c
 8001a22:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001a24:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a26:	2305      	movs	r3, #5
 8001a28:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001a2c:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001c9c <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001a30:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001a32:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001a34:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001a36:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001a38:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001a3a:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001a3e:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001a42:	f00a ff31 	bl	800c8a8 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001a46:	4b82      	ldr	r3, [pc, #520]	; (8001c50 <main+0x5e8>)
 8001a48:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8001a4c:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8001a4e:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001ca0 <main+0x638>
  LcdDrv->Init();
 8001a52:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001a54:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001a58:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001ca4 <main+0x63c>
  LcdDrv->DisplayOff();
 8001a5c:	68db      	ldr	r3, [r3, #12]
 8001a5e:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001a60:	4b7c      	ldr	r3, [pc, #496]	; (8001c54 <main+0x5ec>)
 8001a62:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001a66:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001a68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001a6c:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001a70:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001a74:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001a78:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001a7c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001a80:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001a84:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001a88:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001a8c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001a90:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001a92:	f00c f8f1 	bl	800dc78 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001a96:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001a9a:	a90b      	add	r1, sp, #44	; 0x2c
 8001a9c:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001a9e:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001aa0:	f00c fc14 	bl	800e2cc <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001aa4:	a90f      	add	r1, sp, #60	; 0x3c
 8001aa6:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001aa8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001aac:	f00c fcbe 	bl	800e42c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ab0:	a909      	add	r1, sp, #36	; 0x24
 8001ab2:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ab4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ab8:	f00c fdf6 	bl	800e6a8 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8001abc:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8001abe:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8001ac2:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8001ac4:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001ac8:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001aca:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8001acc:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001ad0:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8001ad4:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ad8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001adc:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ae0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ae4:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001ae8:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001aec:	f00c f8c4 	bl	800dc78 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001af0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001af4:	a90f      	add	r1, sp, #60	; 0x3c
 8001af6:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001af8:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001afa:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001afe:	f00c fbe5 	bl	800e2cc <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b02:	a90b      	add	r1, sp, #44	; 0x2c
 8001b04:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b0a:	f00c fdcd 	bl	800e6a8 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001b0e:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001b12:	4621      	mov	r1, r4
 8001b14:	4650      	mov	r0, sl
 8001b16:	f00c fa09 	bl	800df2c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001b1a:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001b1c:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001b20:	4650      	mov	r0, sl
 8001b22:	f00c fa03 	bl	800df2c <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001b26:	4f4c      	ldr	r7, [pc, #304]	; (8001c58 <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001b28:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001b2c:	4631      	mov	r1, r6
 8001b2e:	4650      	mov	r0, sl
 8001b30:	f00c f9fc 	bl	800df2c <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001b34:	4949      	ldr	r1, [pc, #292]	; (8001c5c <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b36:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001b38:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001b3a:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b3c:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001b40:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b42:	2380      	movs	r3, #128	; 0x80
 8001b44:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001b46:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001b4a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b4e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001b52:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001b56:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001b58:	f00c f88e 	bl	800dc78 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001b5c:	4638      	mov	r0, r7
 8001b5e:	f00c f957 	bl	800de10 <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001b62:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001b66:	4622      	mov	r2, r4
 8001b68:	a90f      	add	r1, sp, #60	; 0x3c
 8001b6a:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001b6c:	4e3c      	ldr	r6, [pc, #240]	; (8001c60 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001b6e:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001b70:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001b74:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001b78:	f00c fa98 	bl	800e0ac <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001b7c:	4638      	mov	r0, r7
 8001b7e:	f000 fcfb 	bl	8002578 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001b82:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001b84:	4f37      	ldr	r7, [pc, #220]	; (8001c64 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001b86:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b88:	2380      	movs	r3, #128	; 0x80
 8001b8a:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001b8c:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001b8e:	2353      	movs	r3, #83	; 0x53
 8001b90:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b94:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001b98:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001b9c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001ba0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001ba4:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001ba8:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001baa:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001bac:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001bae:	f00c f863 	bl	800dc78 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001bb2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001bb6:	a90b      	add	r1, sp, #44	; 0x2c
 8001bb8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001bba:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001bbc:	f00c fb86 	bl	800e2cc <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001bc0:	4630      	mov	r0, r6
 8001bc2:	f00c f925 	bl	800de10 <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001bc6:	4622      	mov	r2, r4
 8001bc8:	a90f      	add	r1, sp, #60	; 0x3c
 8001bca:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001bcc:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001bd0:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001bd4:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001bd6:	f00c fa69 	bl	800e0ac <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001bda:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001bdc:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001be0:	4630      	mov	r0, r6
 8001be2:	f00c f9a3 	bl	800df2c <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001be6:	4630      	mov	r0, r6
 8001be8:	f000 fcc6 	bl	8002578 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001bec:	f000 fe5a 	bl	80028a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001bf0:	f000 fe56 	bl	80028a0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001bf4:	f7ff fc86 	bl	8001504 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001bf8:	f000 f958 	bl	8001eac <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001bfc:	f000 f98a 	bl	8001f14 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001c00:	4919      	ldr	r1, [pc, #100]	; (8001c68 <main+0x600>)
 8001c02:	481a      	ldr	r0, [pc, #104]	; (8001c6c <main+0x604>)
 8001c04:	220c      	movs	r2, #12
 8001c06:	f7ff fa41 	bl	800108c <Flash_Read_Data>
  osKernelInitialize();
 8001c0a:	f00c fe5f 	bl	800e8cc <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001c0e:	4629      	mov	r1, r5
 8001c10:	4a17      	ldr	r2, [pc, #92]	; (8001c70 <main+0x608>)
 8001c12:	4648      	mov	r0, r9
 8001c14:	f00c ff94 	bl	800eb40 <osMessageQueueNew>
 8001c18:	4b16      	ldr	r3, [pc, #88]	; (8001c74 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001c1a:	4a17      	ldr	r2, [pc, #92]	; (8001c78 <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001c1c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001c1e:	4621      	mov	r1, r4
 8001c20:	4816      	ldr	r0, [pc, #88]	; (8001c7c <main+0x614>)
 8001c22:	f00c fe7f 	bl	800e924 <osThreadNew>
 8001c26:	4b16      	ldr	r3, [pc, #88]	; (8001c80 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c28:	4a16      	ldr	r2, [pc, #88]	; (8001c84 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001c2a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c2c:	4621      	mov	r1, r4
 8001c2e:	4816      	ldr	r0, [pc, #88]	; (8001c88 <main+0x620>)
 8001c30:	f00c fe78 	bl	800e924 <osThreadNew>
 8001c34:	4b15      	ldr	r3, [pc, #84]	; (8001c8c <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001c36:	4a16      	ldr	r2, [pc, #88]	; (8001c90 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c38:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001c3a:	4621      	mov	r1, r4
 8001c3c:	4815      	ldr	r0, [pc, #84]	; (8001c94 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001c3e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001c40:	f00c fe70 	bl	800e924 <osThreadNew>
 8001c44:	4b14      	ldr	r3, [pc, #80]	; (8001c98 <main+0x630>)
 8001c46:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001c48:	f00c fe52 	bl	800e8f0 <osKernelStart>
  while (1)
 8001c4c:	e7fe      	b.n	8001c4c <main+0x5e4>
 8001c4e:	bf00      	nop
 8001c50:	2000001c 	.word	0x2000001c
 8001c54:	40000400 	.word	0x40000400
 8001c58:	20000380 	.word	0x20000380
 8001c5c:	40002000 	.word	0x40002000
 8001c60:	20000458 	.word	0x20000458
 8001c64:	40014000 	.word	0x40014000
 8001c68:	200001ac 	.word	0x200001ac
 8001c6c:	081e0000 	.word	0x081e0000
 8001c70:	0802db44 	.word	0x0802db44
 8001c74:	200001e4 	.word	0x200001e4
 8001c78:	0802db80 	.word	0x0802db80
 8001c7c:	08001479 	.word	0x08001479
 8001c80:	200001ec 	.word	0x200001ec
 8001c84:	0802db20 	.word	0x0802db20
 8001c88:	080028b5 	.word	0x080028b5
 8001c8c:	200001dc 	.word	0x200001dc
 8001c90:	0802db5c 	.word	0x0802db5c
 8001c94:	08001485 	.word	0x08001485
 8001c98:	200001e8 	.word	0x200001e8
 8001c9c:	200001e0 	.word	0x200001e0
 8001ca0:	200003c8 	.word	0x200003c8
 8001ca4:	20000410 	.word	0x20000410

08001ca8 <IOE_Init>:
 8001ca8:	4770      	bx	lr
 8001caa:	bf00      	nop

08001cac <IOE_ITConfig>:
 8001cac:	4770      	bx	lr
 8001cae:	bf00      	nop

08001cb0 <IOE_Write>:
{
 8001cb0:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001cb2:	4c09      	ldr	r4, [pc, #36]	; (8001cd8 <IOE_Write+0x28>)
{
 8001cb4:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001cb6:	6824      	ldr	r4, [r4, #0]
 8001cb8:	9402      	str	r4, [sp, #8]
{
 8001cba:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001cbc:	2301      	movs	r3, #1
 8001cbe:	f88d 4017 	strb.w	r4, [sp, #23]
 8001cc2:	f10d 0417 	add.w	r4, sp, #23
 8001cc6:	460a      	mov	r2, r1
 8001cc8:	9301      	str	r3, [sp, #4]
 8001cca:	4601      	mov	r1, r0
 8001ccc:	9400      	str	r4, [sp, #0]
 8001cce:	4803      	ldr	r0, [pc, #12]	; (8001cdc <IOE_Write+0x2c>)
 8001cd0:	f009 fbcc 	bl	800b46c <HAL_I2C_Mem_Write>
}
 8001cd4:	b006      	add	sp, #24
 8001cd6:	bd10      	pop	{r4, pc}
 8001cd8:	20000004 	.word	0x20000004
 8001cdc:	200001f8 	.word	0x200001f8

08001ce0 <IOE_Read>:
{
 8001ce0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ce2:	4b0b      	ldr	r3, [pc, #44]	; (8001d10 <IOE_Read+0x30>)
{
 8001ce4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	9302      	str	r3, [sp, #8]
{
 8001cea:	4684      	mov	ip, r0
 8001cec:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001cee:	2301      	movs	r3, #1
 8001cf0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001cf4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001cf6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001cfa:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001cfe:	4661      	mov	r1, ip
 8001d00:	4804      	ldr	r0, [pc, #16]	; (8001d14 <IOE_Read+0x34>)
 8001d02:	f009 fca5 	bl	800b650 <HAL_I2C_Mem_Read>
}
 8001d06:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001d0a:	b007      	add	sp, #28
 8001d0c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d10:	20000004 	.word	0x20000004
 8001d14:	200001f8 	.word	0x200001f8

08001d18 <IOE_ReadMultiple>:
{
 8001d18:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001d1a:	4c09      	ldr	r4, [pc, #36]	; (8001d40 <IOE_ReadMultiple+0x28>)
{
 8001d1c:	b084      	sub	sp, #16
 8001d1e:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001d20:	6820      	ldr	r0, [r4, #0]
 8001d22:	9002      	str	r0, [sp, #8]
 8001d24:	e9cd 2300 	strd	r2, r3, [sp]
 8001d28:	4806      	ldr	r0, [pc, #24]	; (8001d44 <IOE_ReadMultiple+0x2c>)
 8001d2a:	460a      	mov	r2, r1
 8001d2c:	2301      	movs	r3, #1
 8001d2e:	4661      	mov	r1, ip
 8001d30:	f009 fc8e 	bl	800b650 <HAL_I2C_Mem_Read>
}
 8001d34:	3800      	subs	r0, #0
 8001d36:	bf18      	it	ne
 8001d38:	2001      	movne	r0, #1
 8001d3a:	b004      	add	sp, #16
 8001d3c:	bd10      	pop	{r4, pc}
 8001d3e:	bf00      	nop
 8001d40:	20000004 	.word	0x20000004
 8001d44:	200001f8 	.word	0x200001f8

08001d48 <IOE_Delay>:
 8001d48:	f008 bc8c 	b.w	800a664 <HAL_Delay>

08001d4c <LCD_IO_Init>:
{
 8001d4c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d4e:	4806      	ldr	r0, [pc, #24]	; (8001d68 <LCD_IO_Init+0x1c>)
 8001d50:	2200      	movs	r2, #0
 8001d52:	2104      	movs	r1, #4
 8001d54:	f009 f85c 	bl	800ae10 <HAL_GPIO_WritePin>
}
 8001d58:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d5c:	4802      	ldr	r0, [pc, #8]	; (8001d68 <LCD_IO_Init+0x1c>)
 8001d5e:	2201      	movs	r2, #1
 8001d60:	2104      	movs	r1, #4
 8001d62:	f009 b855 	b.w	800ae10 <HAL_GPIO_WritePin>
 8001d66:	bf00      	nop
 8001d68:	40020800 	.word	0x40020800

08001d6c <LCD_IO_WriteData>:
{
 8001d6c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d6e:	4d10      	ldr	r5, [pc, #64]	; (8001db0 <LCD_IO_WriteData+0x44>)
{
 8001d70:	b083      	sub	sp, #12
 8001d72:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001d74:	2201      	movs	r2, #1
 8001d76:	480f      	ldr	r0, [pc, #60]	; (8001db4 <LCD_IO_WriteData+0x48>)
 8001d78:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001d7c:	f009 f848 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d80:	4628      	mov	r0, r5
 8001d82:	2200      	movs	r2, #0
 8001d84:	2104      	movs	r1, #4
 8001d86:	f009 f843 	bl	800ae10 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001d8a:	4b0b      	ldr	r3, [pc, #44]	; (8001db8 <LCD_IO_WriteData+0x4c>)
 8001d8c:	480b      	ldr	r0, [pc, #44]	; (8001dbc <LCD_IO_WriteData+0x50>)
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001d94:	f10d 0106 	add.w	r1, sp, #6
 8001d98:	2201      	movs	r2, #1
 8001d9a:	f00b fbdf 	bl	800d55c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d9e:	2201      	movs	r2, #1
 8001da0:	2104      	movs	r1, #4
 8001da2:	4628      	mov	r0, r5
}
 8001da4:	b003      	add	sp, #12
 8001da6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001daa:	f009 b831 	b.w	800ae10 <HAL_GPIO_WritePin>
 8001dae:	bf00      	nop
 8001db0:	40020800 	.word	0x40020800
 8001db4:	40020c00 	.word	0x40020c00
 8001db8:	20000008 	.word	0x20000008
 8001dbc:	20000328 	.word	0x20000328

08001dc0 <LCD_IO_WriteReg>:
{
 8001dc0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dc2:	4d10      	ldr	r5, [pc, #64]	; (8001e04 <LCD_IO_WriteReg+0x44>)
{
 8001dc4:	b083      	sub	sp, #12
 8001dc6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001dc8:	2200      	movs	r2, #0
 8001dca:	480f      	ldr	r0, [pc, #60]	; (8001e08 <LCD_IO_WriteReg+0x48>)
 8001dcc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001dd0:	f009 f81e 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dd4:	4628      	mov	r0, r5
 8001dd6:	2200      	movs	r2, #0
 8001dd8:	2104      	movs	r1, #4
 8001dda:	f009 f819 	bl	800ae10 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001dde:	4b0b      	ldr	r3, [pc, #44]	; (8001e0c <LCD_IO_WriteReg+0x4c>)
 8001de0:	480b      	ldr	r0, [pc, #44]	; (8001e10 <LCD_IO_WriteReg+0x50>)
 8001de2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001de4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001de8:	f10d 0106 	add.w	r1, sp, #6
 8001dec:	2201      	movs	r2, #1
 8001dee:	f00b fbb5 	bl	800d55c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001df2:	2201      	movs	r2, #1
 8001df4:	2104      	movs	r1, #4
 8001df6:	4628      	mov	r0, r5
}
 8001df8:	b003      	add	sp, #12
 8001dfa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dfe:	f009 b807 	b.w	800ae10 <HAL_GPIO_WritePin>
 8001e02:	bf00      	nop
 8001e04:	40020800 	.word	0x40020800
 8001e08:	40020c00 	.word	0x40020c00
 8001e0c:	20000008 	.word	0x20000008
 8001e10:	20000328 	.word	0x20000328

08001e14 <LCD_IO_ReadData>:
{
 8001e14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e18:	4e19      	ldr	r6, [pc, #100]	; (8001e80 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e1a:	4f1a      	ldr	r7, [pc, #104]	; (8001e84 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e1c:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001e88 <LCD_IO_ReadData+0x74>
 8001e20:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001e8c <LCD_IO_ReadData+0x78>
{
 8001e24:	b083      	sub	sp, #12
 8001e26:	460c      	mov	r4, r1
 8001e28:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	4630      	mov	r0, r6
 8001e2e:	2104      	movs	r1, #4
 8001e30:	f008 ffee 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e34:	4638      	mov	r0, r7
 8001e36:	2200      	movs	r2, #0
 8001e38:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e3c:	f008 ffe8 	bl	800ae10 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e40:	f8d9 3000 	ldr.w	r3, [r9]
 8001e44:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001e48:	a901      	add	r1, sp, #4
 8001e4a:	2201      	movs	r2, #1
 8001e4c:	4640      	mov	r0, r8
 8001e4e:	f00b fb85 	bl	800d55c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001e52:	f8d9 3000 	ldr.w	r3, [r9]
 8001e56:	4622      	mov	r2, r4
 8001e58:	a901      	add	r1, sp, #4
 8001e5a:	4640      	mov	r0, r8
 8001e5c:	f00b fe26 	bl	800daac <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e60:	4638      	mov	r0, r7
 8001e62:	2201      	movs	r2, #1
 8001e64:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001e68:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e6a:	f008 ffd1 	bl	800ae10 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e6e:	4630      	mov	r0, r6
 8001e70:	2201      	movs	r2, #1
 8001e72:	2104      	movs	r1, #4
 8001e74:	f008 ffcc 	bl	800ae10 <HAL_GPIO_WritePin>
}
 8001e78:	4620      	mov	r0, r4
 8001e7a:	b003      	add	sp, #12
 8001e7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e80:	40020800 	.word	0x40020800
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	20000008 	.word	0x20000008
 8001e8c:	20000328 	.word	0x20000328

08001e90 <LCD_Delay>:
  HAL_Delay(Delay);
 8001e90:	f008 bbe8 	b.w	800a664 <HAL_Delay>

08001e94 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001e94:	4b03      	ldr	r3, [pc, #12]	; (8001ea4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001e96:	6802      	ldr	r2, [r0, #0]
 8001e98:	429a      	cmp	r2, r3
 8001e9a:	d000      	beq.n	8001e9e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001e9c:	4770      	bx	lr
    HAL_IncTick();
 8001e9e:	f008 bbcf 	b.w	800a640 <HAL_IncTick>
 8001ea2:	bf00      	nop
 8001ea4:	40001000 	.word	0x40001000

08001ea8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001ea8:	4770      	bx	lr
 8001eaa:	bf00      	nop

08001eac <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001eac:	b410      	push	{r4}
 8001eae:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001eb0:	4b15      	ldr	r3, [pc, #84]	; (8001f08 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001eb2:	4916      	ldr	r1, [pc, #88]	; (8001f0c <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001eb4:	2400      	movs	r4, #0
 8001eb6:	9400      	str	r4, [sp, #0]
 8001eb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eba:	f042 0220 	orr.w	r2, r2, #32
 8001ebe:	631a      	str	r2, [r3, #48]	; 0x30
 8001ec0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ec2:	f002 0220 	and.w	r2, r2, #32
 8001ec6:	9200      	str	r2, [sp, #0]
 8001ec8:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001eca:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ecc:	4a10      	ldr	r2, [pc, #64]	; (8001f10 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ece:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001ed2:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001ed4:	6808      	ldr	r0, [r1, #0]
 8001ed6:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001eda:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001edc:	9401      	str	r4, [sp, #4]
 8001ede:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ee0:	f041 0104 	orr.w	r1, r1, #4
 8001ee4:	6319      	str	r1, [r3, #48]	; 0x30
 8001ee6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ee8:	f003 0304 	and.w	r3, r3, #4
 8001eec:	9301      	str	r3, [sp, #4]
 8001eee:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ef0:	6813      	ldr	r3, [r2, #0]
 8001ef2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001ef6:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001ef8:	6813      	ldr	r3, [r2, #0]
 8001efa:	f043 030c 	orr.w	r3, r3, #12
 8001efe:	6013      	str	r3, [r2, #0]
}
 8001f00:	b003      	add	sp, #12
 8001f02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f06:	4770      	bx	lr
 8001f08:	40023800 	.word	0x40023800
 8001f0c:	40021400 	.word	0x40021400
 8001f10:	40020800 	.word	0x40020800

08001f14 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001f14:	b410      	push	{r4}
 8001f16:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001f18:	4a0e      	ldr	r2, [pc, #56]	; (8001f54 <MEAS_timer_init+0x40>)
 8001f1a:	2000      	movs	r0, #0
 8001f1c:	9001      	str	r0, [sp, #4]
 8001f1e:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001f20:	f041 0101 	orr.w	r1, r1, #1
 8001f24:	6411      	str	r1, [r2, #64]	; 0x40
 8001f26:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001f28:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001f2c:	f002 0201 	and.w	r2, r2, #1
 8001f30:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001f32:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001f36:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001f38:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001f3a:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001f3c:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001f3e:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001f40:	4905      	ldr	r1, [pc, #20]	; (8001f58 <MEAS_timer_init+0x44>)
 8001f42:	f042 0220 	orr.w	r2, r2, #32
 8001f46:	605a      	str	r2, [r3, #4]
 8001f48:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001f4c:	b003      	add	sp, #12
 8001f4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f52:	4770      	bx	lr
 8001f54:	40023800 	.word	0x40023800
 8001f58:	e000e100 	.word	0xe000e100

08001f5c <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001f5c:	b410      	push	{r4}
 8001f5e:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001f60:	4a36      	ldr	r2, [pc, #216]	; (800203c <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001f62:	4b37      	ldr	r3, [pc, #220]	; (8002040 <MEAS_ADC3_scan_init+0xe4>)
 8001f64:	4c37      	ldr	r4, [pc, #220]	; (8002044 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001f66:	2100      	movs	r1, #0
 8001f68:	9100      	str	r1, [sp, #0]
 8001f6a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f6c:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001f70:	6450      	str	r0, [r2, #68]	; 0x44
 8001f72:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f74:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001f78:	9000      	str	r0, [sp, #0]
 8001f7a:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001f7c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001f7e:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001f82:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001f84:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f86:	f040 0004 	orr.w	r0, r0, #4
 8001f8a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001f8c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f8e:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001f92:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001f94:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f96:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001f9a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001f9c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001f9e:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001fa2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001fa4:	6858      	ldr	r0, [r3, #4]
 8001fa6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001faa:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001fac:	6898      	ldr	r0, [r3, #8]
 8001fae:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001fb2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001fb4:	6898      	ldr	r0, [r3, #8]
 8001fb6:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001fba:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001fbc:	6898      	ldr	r0, [r3, #8]
 8001fbe:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001fc2:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001fc4:	9101      	str	r1, [sp, #4]
 8001fc6:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001fc8:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001fcc:	6310      	str	r0, [r2, #48]	; 0x30
 8001fce:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001fd0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001fd4:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001fd6:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001fda:	9a01      	ldr	r2, [sp, #4]
 8001fdc:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001fe0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001fe2:	f022 0201 	bic.w	r2, r2, #1
 8001fe6:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001fe8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001fea:	07d2      	lsls	r2, r2, #31
 8001fec:	d4fc      	bmi.n	8001fe8 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001fee:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001ff0:	4815      	ldr	r0, [pc, #84]	; (8002048 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001ff2:	4916      	ldr	r1, [pc, #88]	; (800204c <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001ff4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001ff8:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001ffa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ffc:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002000:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8002002:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002004:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002008:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 800200a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800200c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002010:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8002012:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002014:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002018:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 800201a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800201c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002020:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002022:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8002024:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002028:	f042 0210 	orr.w	r2, r2, #16
 800202c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800202e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8002030:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8002032:	6359      	str	r1, [r3, #52]	; 0x34
}
 8002034:	b003      	add	sp, #12
 8002036:	f85d 4b04 	ldr.w	r4, [sp], #4
 800203a:	4770      	bx	lr
 800203c:	40023800 	.word	0x40023800
 8002040:	40012200 	.word	0x40012200
 8002044:	e000e100 	.word	0xe000e100
 8002048:	4001224c 	.word	0x4001224c
 800204c:	200004a0 	.word	0x200004a0

08002050 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8002050:	4b1b      	ldr	r3, [pc, #108]	; (80020c0 <DMA2_Stream1_IRQHandler+0x70>)
 8002052:	681a      	ldr	r2, [r3, #0]
 8002054:	0511      	lsls	r1, r2, #20
 8002056:	d400      	bmi.n	800205a <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8002058:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205a:	4a1a      	ldr	r2, [pc, #104]	; (80020c4 <DMA2_Stream1_IRQHandler+0x74>)
 800205c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002060:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002064:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002068:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800206c:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002070:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002072:	f022 0201 	bic.w	r2, r2, #1
 8002076:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8002078:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800207a:	07d2      	lsls	r2, r2, #31
 800207c:	d4fc      	bmi.n	8002078 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800207e:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002080:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002084:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8002088:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800208a:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800208c:	490e      	ldr	r1, [pc, #56]	; (80020c8 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800208e:	f023 0301 	bic.w	r3, r3, #1
 8002092:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002094:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8002096:	4b0d      	ldr	r3, [pc, #52]	; (80020cc <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002098:	f020 0001 	bic.w	r0, r0, #1
 800209c:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 800209e:	6888      	ldr	r0, [r1, #8]
 80020a0:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80020a4:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80020a6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80020a8:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80020ac:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80020ae:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80020b0:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80020b4:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80020b6:	6813      	ldr	r3, [r2, #0]
 80020b8:	f023 0301 	bic.w	r3, r3, #1
 80020bc:	6013      	str	r3, [r2, #0]
}
 80020be:	4770      	bx	lr
 80020c0:	40026400 	.word	0x40026400
 80020c4:	e000e100 	.word	0xe000e100
 80020c8:	40012200 	.word	0x40012200
 80020cc:	40023800 	.word	0x40023800

080020d0 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80020d0:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80020d2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80020d6:	2100      	movs	r1, #0
 80020d8:	480f      	ldr	r0, [pc, #60]	; (8002118 <MEAS_start_measure+0x48>)
 80020da:	f02a fe5a 	bl	802cd92 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80020de:	f7ff ff3d 	bl	8001f5c <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80020e2:	4a0e      	ldr	r2, [pc, #56]	; (800211c <MEAS_start_measure+0x4c>)
 80020e4:	490e      	ldr	r1, [pc, #56]	; (8002120 <MEAS_start_measure+0x50>)
 80020e6:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80020e8:	480e      	ldr	r0, [pc, #56]	; (8002124 <MEAS_start_measure+0x54>)
 80020ea:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80020ee:	f043 0301 	orr.w	r3, r3, #1
 80020f2:	6293      	str	r3, [r2, #40]	; 0x28
 80020f4:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020f8:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80020fa:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80020fc:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002100:	f043 0301 	orr.w	r3, r3, #1
 8002104:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002106:	680b      	ldr	r3, [r1, #0]
 8002108:	f043 0301 	orr.w	r3, r3, #1
 800210c:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800210e:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8002110:	07db      	lsls	r3, r3, #31
 8002112:	d4fc      	bmi.n	800210e <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8002114:	4800      	ldr	r0, [pc, #0]	; (8002118 <MEAS_start_measure+0x48>)
 8002116:	bd10      	pop	{r4, pc}
 8002118:	200004a0 	.word	0x200004a0
 800211c:	40026400 	.word	0x40026400
 8002120:	e000e100 	.word	0xe000e100
 8002124:	40012200 	.word	0x40012200

08002128 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8002128:	2004      	movs	r0, #4
 800212a:	4770      	bx	lr

0800212c <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 800212c:	2040      	movs	r0, #64	; 0x40
 800212e:	4770      	bx	lr

08002130 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8002130:	f44f 7020 	mov.w	r0, #640	; 0x280
 8002134:	4770      	bx	lr
 8002136:	bf00      	nop

08002138 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002138:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800213a:	4b0e      	ldr	r3, [pc, #56]	; (8002174 <HAL_MspInit+0x3c>)
 800213c:	2200      	movs	r2, #0
 800213e:	9200      	str	r2, [sp, #0]
 8002140:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002142:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002146:	6459      	str	r1, [r3, #68]	; 0x44
 8002148:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800214a:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800214e:	9000      	str	r0, [sp, #0]
 8002150:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002152:	9201      	str	r2, [sp, #4]
 8002154:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8002156:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800215a:	6418      	str	r0, [r3, #64]	; 0x40
 800215c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800215e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002162:	9301      	str	r3, [sp, #4]
 8002164:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002166:	210f      	movs	r1, #15
 8002168:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800216c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800216e:	f008 ba9d 	b.w	800a6ac <HAL_NVIC_SetPriority>
 8002172:	bf00      	nop
 8002174:	40023800 	.word	0x40023800

08002178 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002178:	4b0b      	ldr	r3, [pc, #44]	; (80021a8 <HAL_CRC_MspInit+0x30>)
 800217a:	6802      	ldr	r2, [r0, #0]
 800217c:	429a      	cmp	r2, r3
 800217e:	d000      	beq.n	8002182 <HAL_CRC_MspInit+0xa>
 8002180:	4770      	bx	lr
{
 8002182:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002184:	2200      	movs	r2, #0
 8002186:	9201      	str	r2, [sp, #4]
 8002188:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 800218c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002190:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8002194:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002198:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800219a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800219e:	9301      	str	r3, [sp, #4]
 80021a0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80021a2:	b002      	add	sp, #8
 80021a4:	4770      	bx	lr
 80021a6:	bf00      	nop
 80021a8:	40023000 	.word	0x40023000

080021ac <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80021ac:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80021b0:	4b2e      	ldr	r3, [pc, #184]	; (800226c <HAL_I2C_MspInit+0xc0>)
 80021b2:	6802      	ldr	r2, [r0, #0]
{
 80021b4:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021b6:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80021b8:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021ba:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80021be:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80021c2:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80021c4:	d002      	beq.n	80021cc <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80021c6:	b00a      	add	sp, #40	; 0x28
 80021c8:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021cc:	4d28      	ldr	r5, [pc, #160]	; (8002270 <HAL_I2C_MspInit+0xc4>)
 80021ce:	9401      	str	r4, [sp, #4]
 80021d0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021d2:	4828      	ldr	r0, [pc, #160]	; (8002274 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021d4:	f043 0304 	orr.w	r3, r3, #4
 80021d8:	632b      	str	r3, [r5, #48]	; 0x30
 80021da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80021dc:	f003 0304 	and.w	r3, r3, #4
 80021e0:	9301      	str	r3, [sp, #4]
 80021e2:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80021e4:	9402      	str	r4, [sp, #8]
 80021e6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80021e8:	f043 0301 	orr.w	r3, r3, #1
 80021ec:	632b      	str	r3, [r5, #48]	; 0x30
 80021ee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80021f0:	f003 0301 	and.w	r3, r3, #1
 80021f4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80021f6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80021fa:	f04f 0801 	mov.w	r8, #1
 80021fe:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002202:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002204:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002206:	2312      	movs	r3, #18
 8002208:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800220c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002210:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002212:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002214:	f008 fcb8 	bl	800ab88 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002218:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800221a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800221e:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002220:	4815      	ldr	r0, [pc, #84]	; (8002278 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002222:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002224:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002228:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800222c:	f008 fcac 	bl	800ab88 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002230:	9403      	str	r4, [sp, #12]
 8002232:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8002234:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002238:	642b      	str	r3, [r5, #64]	; 0x40
 800223a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800223c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002240:	4622      	mov	r2, r4
 8002242:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002244:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002246:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002248:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800224a:	f008 fa2f 	bl	800a6ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800224e:	2048      	movs	r0, #72	; 0x48
 8002250:	f008 fa6a 	bl	800a728 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8002254:	6a2b      	ldr	r3, [r5, #32]
 8002256:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800225a:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800225c:	6a2b      	ldr	r3, [r5, #32]
 800225e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002262:	622b      	str	r3, [r5, #32]
}
 8002264:	b00a      	add	sp, #40	; 0x28
 8002266:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800226a:	bf00      	nop
 800226c:	40005c00 	.word	0x40005c00
 8002270:	40023800 	.word	0x40023800
 8002274:	40020800 	.word	0x40020800
 8002278:	40020000 	.word	0x40020000

0800227c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800227c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002280:	4604      	mov	r4, r0
 8002282:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002284:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002286:	2230      	movs	r2, #48	; 0x30
 8002288:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800228a:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800228e:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8002292:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002294:	f02a fd7d 	bl	802cd92 <memset>
  if(hltdc->Instance==LTDC)
 8002298:	4b67      	ldr	r3, [pc, #412]	; (8002438 <HAL_LTDC_MspInit+0x1bc>)
 800229a:	6822      	ldr	r2, [r4, #0]
 800229c:	429a      	cmp	r2, r3
 800229e:	d002      	beq.n	80022a6 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80022a0:	b01a      	add	sp, #104	; 0x68
 80022a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80022a6:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80022a8:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80022aa:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80022ac:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022ae:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80022b0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80022b4:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80022b6:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80022b8:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022ba:	f00a fecf 	bl	800d05c <HAL_RCCEx_PeriphCLKConfig>
 80022be:	2800      	cmp	r0, #0
 80022c0:	f040 80b7 	bne.w	8002432 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022c4:	4b5d      	ldr	r3, [pc, #372]	; (800243c <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022c6:	485e      	ldr	r0, [pc, #376]	; (8002440 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022c8:	2400      	movs	r4, #0
 80022ca:	9401      	str	r4, [sp, #4]
 80022cc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80022ce:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80022d2:	645a      	str	r2, [r3, #68]	; 0x44
 80022d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80022d6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80022da:	9201      	str	r2, [sp, #4]
 80022dc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80022de:	9402      	str	r4, [sp, #8]
 80022e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022e2:	f042 0220 	orr.w	r2, r2, #32
 80022e6:	631a      	str	r2, [r3, #48]	; 0x30
 80022e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022ea:	f002 0220 	and.w	r2, r2, #32
 80022ee:	9202      	str	r2, [sp, #8]
 80022f0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022f2:	9403      	str	r4, [sp, #12]
 80022f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022f6:	f042 0201 	orr.w	r2, r2, #1
 80022fa:	631a      	str	r2, [r3, #48]	; 0x30
 80022fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022fe:	f002 0201 	and.w	r2, r2, #1
 8002302:	9203      	str	r2, [sp, #12]
 8002304:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002306:	9404      	str	r4, [sp, #16]
 8002308:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800230a:	f042 0202 	orr.w	r2, r2, #2
 800230e:	631a      	str	r2, [r3, #48]	; 0x30
 8002310:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002312:	f002 0202 	and.w	r2, r2, #2
 8002316:	9204      	str	r2, [sp, #16]
 8002318:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800231a:	9405      	str	r4, [sp, #20]
 800231c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800231e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002322:	631a      	str	r2, [r3, #48]	; 0x30
 8002324:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002326:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800232a:	9205      	str	r2, [sp, #20]
 800232c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800232e:	9406      	str	r4, [sp, #24]
 8002330:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002332:	f042 0204 	orr.w	r2, r2, #4
 8002336:	631a      	str	r2, [r3, #48]	; 0x30
 8002338:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800233a:	f002 0204 	and.w	r2, r2, #4
 800233e:	9206      	str	r2, [sp, #24]
 8002340:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002342:	9407      	str	r4, [sp, #28]
 8002344:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002346:	f042 0208 	orr.w	r2, r2, #8
 800234a:	631a      	str	r2, [r3, #48]	; 0x30
 800234c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800234e:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002352:	2600      	movs	r6, #0
 8002354:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002356:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002358:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800235a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800235c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002360:	2302      	movs	r3, #2
 8002362:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002366:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800236a:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800236c:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800236e:	f008 fc0b 	bl	800ab88 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002372:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002374:	f641 0258 	movw	r2, #6232	; 0x1858
 8002378:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800237a:	4832      	ldr	r0, [pc, #200]	; (8002444 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800237c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800237e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002382:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002386:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800238a:	f008 fbfd 	bl	800ab88 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800238e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002390:	2203      	movs	r2, #3
 8002392:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002394:	482c      	ldr	r0, [pc, #176]	; (8002448 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002396:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800239a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800239e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023a2:	f008 fbf1 	bl	800ab88 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023a6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80023a8:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80023ac:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023ae:	4826      	ldr	r0, [pc, #152]	; (8002448 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023b0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80023b2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023b6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023ba:	f008 fbe5 	bl	800ab88 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023be:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80023c0:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80023c4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023c6:	4821      	ldr	r0, [pc, #132]	; (800244c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023c8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80023ca:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023ce:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023d2:	f008 fbd9 	bl	800ab88 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023d6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023d8:	22c0      	movs	r2, #192	; 0xc0
 80023da:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023dc:	481c      	ldr	r0, [pc, #112]	; (8002450 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023de:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023e0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023e4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023e8:	f008 fbce 	bl	800ab88 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023ec:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80023ee:	2208      	movs	r2, #8
 80023f0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023f2:	4818      	ldr	r0, [pc, #96]	; (8002454 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80023f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023fa:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023fe:	f008 fbc3 	bl	800ab88 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002402:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002404:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002406:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800240a:	4810      	ldr	r0, [pc, #64]	; (800244c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240c:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002410:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002414:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002418:	f008 fbb6 	bl	800ab88 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800241c:	4622      	mov	r2, r4
 800241e:	2105      	movs	r1, #5
 8002420:	2058      	movs	r0, #88	; 0x58
 8002422:	f008 f943 	bl	800a6ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002426:	2058      	movs	r0, #88	; 0x58
 8002428:	f008 f97e 	bl	800a728 <HAL_NVIC_EnableIRQ>
}
 800242c:	b01a      	add	sp, #104	; 0x68
 800242e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8002432:	f7ff fd39 	bl	8001ea8 <Error_Handler>
 8002436:	e745      	b.n	80022c4 <HAL_LTDC_MspInit+0x48>
 8002438:	40016800 	.word	0x40016800
 800243c:	40023800 	.word	0x40023800
 8002440:	40021400 	.word	0x40021400
 8002444:	40020000 	.word	0x40020000
 8002448:	40020400 	.word	0x40020400
 800244c:	40021800 	.word	0x40021800
 8002450:	40020800 	.word	0x40020800
 8002454:	40020c00 	.word	0x40020c00

08002458 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002458:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800245a:	4a1b      	ldr	r2, [pc, #108]	; (80024c8 <HAL_SPI_MspInit+0x70>)
 800245c:	6801      	ldr	r1, [r0, #0]
{
 800245e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002460:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002462:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002464:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002468:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800246c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800246e:	d001      	beq.n	8002474 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002470:	b008      	add	sp, #32
 8002472:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002474:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002478:	9300      	str	r3, [sp, #0]
 800247a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800247c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002480:	6450      	str	r0, [r2, #68]	; 0x44
 8002482:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002484:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002488:	9000      	str	r0, [sp, #0]
 800248a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800248c:	9301      	str	r3, [sp, #4]
 800248e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002490:	480e      	ldr	r0, [pc, #56]	; (80024cc <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002492:	f043 0320 	orr.w	r3, r3, #32
 8002496:	6313      	str	r3, [r2, #48]	; 0x30
 8002498:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800249a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80024c0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800249e:	f003 0320 	and.w	r3, r3, #32
 80024a2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024a4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80024a6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024a8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80024aa:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80024ae:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024b2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024b4:	f008 fb68 	bl	800ab88 <HAL_GPIO_Init>
}
 80024b8:	b008      	add	sp, #32
 80024ba:	bd10      	pop	{r4, pc}
 80024bc:	f3af 8000 	nop.w
 80024c0:	00000380 	.word	0x00000380
 80024c4:	00000002 	.word	0x00000002
 80024c8:	40015000 	.word	0x40015000
 80024cc:	40021400 	.word	0x40021400

080024d0 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 80024d0:	6803      	ldr	r3, [r0, #0]
 80024d2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 80024d6:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 80024d8:	d018      	beq.n	800250c <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80024da:	4a22      	ldr	r2, [pc, #136]	; (8002564 <HAL_TIM_Base_MspInit+0x94>)
 80024dc:	4293      	cmp	r3, r2
 80024de:	d007      	beq.n	80024f0 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 80024e0:	4a21      	ldr	r2, [pc, #132]	; (8002568 <HAL_TIM_Base_MspInit+0x98>)
 80024e2:	4293      	cmp	r3, r2
 80024e4:	d021      	beq.n	800252a <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 80024e6:	4a21      	ldr	r2, [pc, #132]	; (800256c <HAL_TIM_Base_MspInit+0x9c>)
 80024e8:	4293      	cmp	r3, r2
 80024ea:	d02c      	beq.n	8002546 <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 80024ec:	b004      	add	sp, #16
 80024ee:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 80024f0:	4b1f      	ldr	r3, [pc, #124]	; (8002570 <HAL_TIM_Base_MspInit+0xa0>)
 80024f2:	2200      	movs	r2, #0
 80024f4:	9201      	str	r2, [sp, #4]
 80024f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80024f8:	f042 0202 	orr.w	r2, r2, #2
 80024fc:	641a      	str	r2, [r3, #64]	; 0x40
 80024fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002500:	f003 0302 	and.w	r3, r3, #2
 8002504:	9301      	str	r3, [sp, #4]
 8002506:	9b01      	ldr	r3, [sp, #4]
}
 8002508:	b004      	add	sp, #16
 800250a:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 800250c:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002510:	2200      	movs	r2, #0
 8002512:	9200      	str	r2, [sp, #0]
 8002514:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002516:	f042 0201 	orr.w	r2, r2, #1
 800251a:	641a      	str	r2, [r3, #64]	; 0x40
 800251c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800251e:	f003 0301 	and.w	r3, r3, #1
 8002522:	9300      	str	r3, [sp, #0]
 8002524:	9b00      	ldr	r3, [sp, #0]
}
 8002526:	b004      	add	sp, #16
 8002528:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 800252a:	4b11      	ldr	r3, [pc, #68]	; (8002570 <HAL_TIM_Base_MspInit+0xa0>)
 800252c:	2200      	movs	r2, #0
 800252e:	9202      	str	r2, [sp, #8]
 8002530:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002532:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002536:	645a      	str	r2, [r3, #68]	; 0x44
 8002538:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800253a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800253e:	9302      	str	r3, [sp, #8]
 8002540:	9b02      	ldr	r3, [sp, #8]
}
 8002542:	b004      	add	sp, #16
 8002544:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 8002546:	4b0a      	ldr	r3, [pc, #40]	; (8002570 <HAL_TIM_Base_MspInit+0xa0>)
 8002548:	2200      	movs	r2, #0
 800254a:	9203      	str	r2, [sp, #12]
 800254c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800254e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002552:	641a      	str	r2, [r3, #64]	; 0x40
 8002554:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002556:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800255a:	9303      	str	r3, [sp, #12]
 800255c:	9b03      	ldr	r3, [sp, #12]
}
 800255e:	b004      	add	sp, #16
 8002560:	4770      	bx	lr
 8002562:	bf00      	nop
 8002564:	40000400 	.word	0x40000400
 8002568:	40014000 	.word	0x40014000
 800256c:	40002000 	.word	0x40002000
 8002570:	40023800 	.word	0x40023800
 8002574:	00000000 	.word	0x00000000

08002578 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002578:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 800257a:	6802      	ldr	r2, [r0, #0]
 800257c:	4924      	ldr	r1, [pc, #144]	; (8002610 <HAL_TIM_MspPostInit+0x98>)
{
 800257e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002580:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 8002582:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002584:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002588:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800258c:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 800258e:	d005      	beq.n	800259c <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8002590:	4920      	ldr	r1, [pc, #128]	; (8002614 <HAL_TIM_MspPostInit+0x9c>)
 8002592:	428a      	cmp	r2, r1
 8002594:	d01a      	beq.n	80025cc <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8002596:	b009      	add	sp, #36	; 0x24
 8002598:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800259c:	4a1e      	ldr	r2, [pc, #120]	; (8002618 <HAL_TIM_MspPostInit+0xa0>)
 800259e:	9300      	str	r3, [sp, #0]
 80025a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025a2:	481e      	ldr	r0, [pc, #120]	; (800261c <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025a4:	f043 0301 	orr.w	r3, r3, #1
 80025a8:	6313      	str	r3, [r2, #48]	; 0x30
 80025aa:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80025ac:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8002600 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025b0:	f003 0301 	and.w	r3, r3, #1
 80025b4:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025b6:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 80025b8:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80025ba:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025be:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 80025c0:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025c2:	f008 fae1 	bl	800ab88 <HAL_GPIO_Init>
}
 80025c6:	b009      	add	sp, #36	; 0x24
 80025c8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025cc:	4a12      	ldr	r2, [pc, #72]	; (8002618 <HAL_TIM_MspPostInit+0xa0>)
 80025ce:	9301      	str	r3, [sp, #4]
 80025d0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80025d2:	f043 0301 	orr.w	r3, r3, #1
 80025d6:	6313      	str	r3, [r2, #48]	; 0x30
 80025d8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80025da:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 8002608 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025de:	f003 0301 	and.w	r3, r3, #1
 80025e2:	9301      	str	r3, [sp, #4]
 80025e4:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80025e6:	480d      	ldr	r0, [pc, #52]	; (800261c <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025e8:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80025ea:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80025ec:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80025ee:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025f2:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80025f4:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80025f6:	f008 fac7 	bl	800ab88 <HAL_GPIO_Init>
}
 80025fa:	b009      	add	sp, #36	; 0x24
 80025fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8002600:	00000004 	.word	0x00000004
 8002604:	00000002 	.word	0x00000002
 8002608:	00000080 	.word	0x00000080
 800260c:	00000002 	.word	0x00000002
 8002610:	40014000 	.word	0x40014000
 8002614:	40002000 	.word	0x40002000
 8002618:	40023800 	.word	0x40023800
 800261c:	40020000 	.word	0x40020000

08002620 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002620:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002622:	4b2b      	ldr	r3, [pc, #172]	; (80026d0 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002624:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002626:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002628:	2200      	movs	r2, #0
 800262a:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 800262c:	2c00      	cmp	r4, #0
 800262e:	d14c      	bne.n	80026ca <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002630:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002632:	4a28      	ldr	r2, [pc, #160]	; (80026d4 <HAL_SDRAM_MspInit+0xb4>)
 8002634:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002636:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002638:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800263a:	4827      	ldr	r0, [pc, #156]	; (80026d8 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800263c:	433b      	orrs	r3, r7
 800263e:	6393      	str	r3, [r2, #56]	; 0x38
 8002640:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002642:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002644:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002646:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002648:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 800264c:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800264e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002650:	2302      	movs	r3, #2
 8002652:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002656:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800265a:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800265c:	f008 fa94 	bl	800ab88 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002660:	481e      	ldr	r0, [pc, #120]	; (80026dc <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002662:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002664:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002666:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002668:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800266c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002670:	f008 fa8a 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002674:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002678:	4819      	ldr	r0, [pc, #100]	; (80026e0 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800267a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800267c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800267e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002682:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002686:	f008 fa7f 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800268a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800268e:	4815      	ldr	r0, [pc, #84]	; (80026e4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002690:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002692:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002694:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002698:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800269c:	f008 fa74 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80026a0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026a4:	4810      	ldr	r0, [pc, #64]	; (80026e8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80026a6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026a8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026aa:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026ae:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026b2:	f008 fa69 	bl	800ab88 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80026b6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026b8:	480c      	ldr	r0, [pc, #48]	; (80026ec <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026ba:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026bc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026be:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026c2:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80026c4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026c6:	f008 fa5f 	bl	800ab88 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80026ca:	b009      	add	sp, #36	; 0x24
 80026cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80026ce:	bf00      	nop
 80026d0:	200008a0 	.word	0x200008a0
 80026d4:	40023800 	.word	0x40023800
 80026d8:	40021400 	.word	0x40021400
 80026dc:	40020800 	.word	0x40020800
 80026e0:	40021800 	.word	0x40021800
 80026e4:	40021000 	.word	0x40021000
 80026e8:	40020c00 	.word	0x40020c00
 80026ec:	40020400 	.word	0x40020400

080026f0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80026f0:	b570      	push	{r4, r5, r6, lr}
 80026f2:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80026f4:	4b23      	ldr	r3, [pc, #140]	; (8002784 <HAL_InitTick+0x94>)
 80026f6:	2200      	movs	r2, #0
 80026f8:	9202      	str	r2, [sp, #8]
 80026fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026fc:	f042 0210 	orr.w	r2, r2, #16
 8002700:	641a      	str	r2, [r3, #64]	; 0x40
 8002702:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002704:	f003 0310 	and.w	r3, r3, #16
 8002708:	9302      	str	r3, [sp, #8]
{
 800270a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800270c:	a901      	add	r1, sp, #4
 800270e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002710:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002712:	f00a fc81 	bl	800d018 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002716:	9b06      	ldr	r3, [sp, #24]
 8002718:	b9d3      	cbnz	r3, 8002750 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800271a:	f00a fc6d 	bl	800cff8 <HAL_RCC_GetPCLK1Freq>
 800271e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002720:	4a19      	ldr	r2, [pc, #100]	; (8002788 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002722:	4c1a      	ldr	r4, [pc, #104]	; (800278c <HAL_InitTick+0x9c>)
 8002724:	491a      	ldr	r1, [pc, #104]	; (8002790 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002726:	fba2 2303 	umull	r2, r3, r2, r3
 800272a:	0c9b      	lsrs	r3, r3, #18
 800272c:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800272e:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002730:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002734:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002736:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800273a:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800273c:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800273e:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002740:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002742:	f00b fa99 	bl	800dc78 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002746:	4606      	mov	r6, r0
 8002748:	b130      	cbz	r0, 8002758 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800274a:	4630      	mov	r0, r6
 800274c:	b008      	add	sp, #32
 800274e:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002750:	f00a fc52 	bl	800cff8 <HAL_RCC_GetPCLK1Freq>
 8002754:	0043      	lsls	r3, r0, #1
 8002756:	e7e3      	b.n	8002720 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002758:	4620      	mov	r0, r4
 800275a:	f00b fb1b 	bl	800dd94 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800275e:	4606      	mov	r6, r0
 8002760:	2800      	cmp	r0, #0
 8002762:	d1f2      	bne.n	800274a <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002764:	2036      	movs	r0, #54	; 0x36
 8002766:	f007 ffdf 	bl	800a728 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800276a:	2d0f      	cmp	r5, #15
 800276c:	d901      	bls.n	8002772 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800276e:	2601      	movs	r6, #1
 8002770:	e7eb      	b.n	800274a <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002772:	4632      	mov	r2, r6
 8002774:	4629      	mov	r1, r5
 8002776:	2036      	movs	r0, #54	; 0x36
 8002778:	f007 ff98 	bl	800a6ac <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800277c:	4b05      	ldr	r3, [pc, #20]	; (8002794 <HAL_InitTick+0xa4>)
 800277e:	601d      	str	r5, [r3, #0]
 8002780:	e7e3      	b.n	800274a <HAL_InitTick+0x5a>
 8002782:	bf00      	nop
 8002784:	40023800 	.word	0x40023800
 8002788:	431bde83 	.word	0x431bde83
 800278c:	200008a4 	.word	0x200008a4
 8002790:	40001000 	.word	0x40001000
 8002794:	20000084 	.word	0x20000084

08002798 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002798:	4770      	bx	lr
 800279a:	bf00      	nop

0800279c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800279c:	e7fe      	b.n	800279c <HardFault_Handler>
 800279e:	bf00      	nop

080027a0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80027a0:	e7fe      	b.n	80027a0 <MemManage_Handler>
 80027a2:	bf00      	nop

080027a4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80027a4:	e7fe      	b.n	80027a4 <BusFault_Handler>
 80027a6:	bf00      	nop

080027a8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80027a8:	e7fe      	b.n	80027a8 <UsageFault_Handler>
 80027aa:	bf00      	nop

080027ac <DebugMon_Handler>:
 80027ac:	4770      	bx	lr
 80027ae:	bf00      	nop

080027b0 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80027b0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80027b2:	20c8      	movs	r0, #200	; 0xc8
 80027b4:	f007 ff56 	bl	800a664 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80027b8:	4804      	ldr	r0, [pc, #16]	; (80027cc <EXTI3_IRQHandler+0x1c>)
 80027ba:	2200      	movs	r2, #0
 80027bc:	2120      	movs	r1, #32
 80027be:	f008 fb27 	bl	800ae10 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80027c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80027c6:	2008      	movs	r0, #8
 80027c8:	f008 bb32 	b.w	800ae30 <HAL_GPIO_EXTI_IRQHandler>
 80027cc:	40021000 	.word	0x40021000

080027d0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80027d0:	4801      	ldr	r0, [pc, #4]	; (80027d8 <TIM6_DAC_IRQHandler+0x8>)
 80027d2:	f00b bebf 	b.w	800e554 <HAL_TIM_IRQHandler>
 80027d6:	bf00      	nop
 80027d8:	200008a4 	.word	0x200008a4

080027dc <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80027dc:	4801      	ldr	r0, [pc, #4]	; (80027e4 <I2C3_EV_IRQHandler+0x8>)
 80027de:	f009 ba87 	b.w	800bcf0 <HAL_I2C_EV_IRQHandler>
 80027e2:	bf00      	nop
 80027e4:	200001f8 	.word	0x200001f8

080027e8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80027e8:	4801      	ldr	r0, [pc, #4]	; (80027f0 <LTDC_IRQHandler+0x8>)
 80027ea:	f009 bffb 	b.w	800c7e4 <HAL_LTDC_IRQHandler>
 80027ee:	bf00      	nop
 80027f0:	2000024c 	.word	0x2000024c

080027f4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80027f4:	2001      	movs	r0, #1
 80027f6:	4770      	bx	lr

080027f8 <_kill>:

int _kill(int pid, int sig)
{
 80027f8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80027fa:	f02a fbc3 	bl	802cf84 <__errno>
 80027fe:	2316      	movs	r3, #22
 8002800:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002802:	f04f 30ff 	mov.w	r0, #4294967295
 8002806:	bd08      	pop	{r3, pc}

08002808 <_exit>:

void _exit (int status)
{
 8002808:	b508      	push	{r3, lr}
	errno = EINVAL;
 800280a:	f02a fbbb 	bl	802cf84 <__errno>
 800280e:	2316      	movs	r3, #22
 8002810:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002812:	e7fe      	b.n	8002812 <_exit+0xa>

08002814 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002814:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002816:	1e16      	subs	r6, r2, #0
 8002818:	dd07      	ble.n	800282a <_read+0x16>
 800281a:	460c      	mov	r4, r1
 800281c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800281e:	f3af 8000 	nop.w
 8002822:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002826:	42a5      	cmp	r5, r4
 8002828:	d1f9      	bne.n	800281e <_read+0xa>
	}

return len;
}
 800282a:	4630      	mov	r0, r6
 800282c:	bd70      	pop	{r4, r5, r6, pc}
 800282e:	bf00      	nop

08002830 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002830:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002832:	1e16      	subs	r6, r2, #0
 8002834:	dd07      	ble.n	8002846 <_write+0x16>
 8002836:	460c      	mov	r4, r1
 8002838:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 800283a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800283e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002842:	42ac      	cmp	r4, r5
 8002844:	d1f9      	bne.n	800283a <_write+0xa>
	}
	return len;
}
 8002846:	4630      	mov	r0, r6
 8002848:	bd70      	pop	{r4, r5, r6, pc}
 800284a:	bf00      	nop

0800284c <_close>:

int _close(int file)
{
	return -1;
}
 800284c:	f04f 30ff 	mov.w	r0, #4294967295
 8002850:	4770      	bx	lr
 8002852:	bf00      	nop

08002854 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002854:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002858:	604b      	str	r3, [r1, #4]
	return 0;
}
 800285a:	2000      	movs	r0, #0
 800285c:	4770      	bx	lr
 800285e:	bf00      	nop

08002860 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002860:	2001      	movs	r0, #1
 8002862:	4770      	bx	lr

08002864 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002864:	2000      	movs	r0, #0
 8002866:	4770      	bx	lr

08002868 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002868:	4a0b      	ldr	r2, [pc, #44]	; (8002898 <_sbrk+0x30>)
{
 800286a:	b508      	push	{r3, lr}
 800286c:	4603      	mov	r3, r0
	if (heap_end == 0)
 800286e:	6810      	ldr	r0, [r2, #0]
 8002870:	b128      	cbz	r0, 800287e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002872:	4403      	add	r3, r0
 8002874:	4669      	mov	r1, sp
 8002876:	428b      	cmp	r3, r1
 8002878:	d807      	bhi.n	800288a <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800287a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 800287c:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800287e:	4807      	ldr	r0, [pc, #28]	; (800289c <_sbrk+0x34>)
 8002880:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002882:	4403      	add	r3, r0
 8002884:	4669      	mov	r1, sp
 8002886:	428b      	cmp	r3, r1
 8002888:	d9f7      	bls.n	800287a <_sbrk+0x12>
		errno = ENOMEM;
 800288a:	f02a fb7b 	bl	802cf84 <__errno>
 800288e:	230c      	movs	r3, #12
 8002890:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002892:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002896:	bd08      	pop	{r3, pc}
 8002898:	200008ec 	.word	0x200008ec
 800289c:	20014488 	.word	0x20014488

080028a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80028a0:	4770      	bx	lr
 80028a2:	bf00      	nop

080028a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80028a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80028a6:	f000 fbab 	bl	8003000 <touchgfx_components_init>
  touchgfx_init();
}
 80028aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80028ae:	f000 bb33 	b.w	8002f18 <touchgfx_init>
 80028b2:	bf00      	nop

080028b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80028b4:	f000 bba6 	b.w	8003004 <touchgfx_taskEntry>

080028b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80028b8:	4770      	bx	lr

080028ba <_ZN20STM32TouchControllerD0Ev>:
 80028ba:	b510      	push	{r4, lr}
 80028bc:	2104      	movs	r1, #4
 80028be:	4604      	mov	r4, r0
 80028c0:	f029 f97b 	bl	802bbba <_ZdlPvj>
 80028c4:	4620      	mov	r0, r4
 80028c6:	bd10      	pop	{r4, pc}

080028c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80028c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80028ca:	4b0c      	ldr	r3, [pc, #48]	; (80028fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80028cc:	4c0c      	ldr	r4, [pc, #48]	; (8002900 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80028ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80028d0:	4b0c      	ldr	r3, [pc, #48]	; (8002904 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80028d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80028d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80028d6:	6863      	ldr	r3, [r4, #4]
 80028d8:	4798      	blx	r3
 80028da:	f640 0311 	movw	r3, #2065	; 0x811
 80028de:	4298      	cmp	r0, r3
 80028e0:	d10a      	bne.n	80028f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80028e2:	4d09      	ldr	r5, [pc, #36]	; (8002908 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80028e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80028e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80028e8:	2082      	movs	r0, #130	; 0x82
 80028ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80028ec:	682b      	ldr	r3, [r5, #0]
 80028ee:	2082      	movs	r0, #130	; 0x82
 80028f0:	68db      	ldr	r3, [r3, #12]
 80028f2:	4798      	blx	r3
 80028f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80028f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80028f8:	2001      	movs	r0, #1
 80028fa:	e7fc      	b.n	80028f6 <_Z11BSP_TS_Inittt+0x2e>
 80028fc:	200008f0 	.word	0x200008f0
 8002900:	20000054 	.word	0x20000054
 8002904:	200008f2 	.word	0x200008f2
 8002908:	200008f4 	.word	0x200008f4

0800290c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800290c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002910:	20f0      	movs	r0, #240	; 0xf0
 8002912:	f7ff bfd9 	b.w	80028c8 <_Z11BSP_TS_Inittt>
	...

08002918 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8002918:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800291a:	4d33      	ldr	r5, [pc, #204]	; (80029e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800291c:	682b      	ldr	r3, [r5, #0]
{
 800291e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002920:	691b      	ldr	r3, [r3, #16]
 8002922:	2082      	movs	r0, #130	; 0x82
 8002924:	4798      	blx	r3
 8002926:	b280      	uxth	r0, r0
 8002928:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800292a:	2800      	cmp	r0, #0
 800292c:	d04a      	beq.n	80029c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800292e:	682b      	ldr	r3, [r5, #0]
 8002930:	f10d 0206 	add.w	r2, sp, #6
 8002934:	695b      	ldr	r3, [r3, #20]
 8002936:	a901      	add	r1, sp, #4
 8002938:	2082      	movs	r0, #130	; 0x82
 800293a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800293c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002940:	f640 6274 	movw	r2, #3700	; 0xe74
 8002944:	4293      	cmp	r3, r2
 8002946:	d93f      	bls.n	80029c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8002948:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800294c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002950:	1ad2      	subs	r2, r2, r3
 8002952:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8002954:	2a0a      	cmp	r2, #10
 8002956:	d93d      	bls.n	80029d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8002958:	230b      	movs	r3, #11
 800295a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800295e:	4b23      	ldr	r3, [pc, #140]	; (80029ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8002960:	881b      	ldrh	r3, [r3, #0]
 8002962:	429a      	cmp	r2, r3
 8002964:	d901      	bls.n	800296a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8002966:	3b01      	subs	r3, #1
 8002968:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800296a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800296e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002972:	428b      	cmp	r3, r1
 8002974:	d830      	bhi.n	80029d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002976:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800297a:	330e      	adds	r3, #14
 800297c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800297e:	210f      	movs	r1, #15
 8002980:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002984:	491a      	ldr	r1, [pc, #104]	; (80029f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002986:	8809      	ldrh	r1, [r1, #0]
 8002988:	428b      	cmp	r3, r1
 800298a:	d901      	bls.n	8002990 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800298c:	3901      	subs	r1, #1
 800298e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002990:	4e18      	ldr	r6, [pc, #96]	; (80029f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002992:	4d19      	ldr	r5, [pc, #100]	; (80029f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002994:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002996:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002998:	4283      	cmp	r3, r0
 800299a:	b281      	uxth	r1, r0
 800299c:	bf8c      	ite	hi
 800299e:	1a59      	subhi	r1, r3, r1
 80029a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80029a2:	b2b8      	uxth	r0, r7
 80029a4:	42ba      	cmp	r2, r7
 80029a6:	bf8c      	ite	hi
 80029a8:	1a10      	subhi	r0, r2, r0
 80029aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80029ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80029ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80029b0:	4401      	add	r1, r0
 80029b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80029b4:	bfc8      	it	gt
 80029b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80029b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80029ba:	bfc8      	it	gt
 80029bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80029be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80029c0:	682b      	ldr	r3, [r5, #0]
 80029c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80029c4:	b003      	add	sp, #12
 80029c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80029c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80029ca:	bf9c      	itt	ls
 80029cc:	23b4      	movls	r3, #180	; 0xb4
 80029ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80029d2:	e7bb      	b.n	800294c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80029d4:	2200      	movs	r2, #0
 80029d6:	e7c8      	b.n	800296a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80029d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80029dc:	3308      	adds	r3, #8
 80029de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80029e0:	2b0e      	cmp	r3, #14
 80029e2:	d8cc      	bhi.n	800297e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80029e4:	2300      	movs	r3, #0
 80029e6:	e7d3      	b.n	8002990 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80029e8:	200008f4 	.word	0x200008f4
 80029ec:	200008f2 	.word	0x200008f2
 80029f0:	200008f0 	.word	0x200008f0
 80029f4:	200008f8 	.word	0x200008f8
 80029f8:	200008fc 	.word	0x200008fc

080029fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80029fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80029fe:	4668      	mov	r0, sp
{
 8002a00:	460d      	mov	r5, r1
 8002a02:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002a04:	f7ff ff88 	bl	8002918 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002a08:	f8bd 0000 	ldrh.w	r0, [sp]
 8002a0c:	b148      	cbz	r0, 8002a22 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8002a0e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002a12:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002a14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002a18:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002a1a:	4b03      	ldr	r3, [pc, #12]	; (8002a28 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002a1c:	223c      	movs	r2, #60	; 0x3c
 8002a1e:	601a      	str	r2, [r3, #0]
        return true;
 8002a20:	2001      	movs	r0, #1
}
 8002a22:	b003      	add	sp, #12
 8002a24:	bd30      	pop	{r4, r5, pc}
 8002a26:	bf00      	nop
 8002a28:	20000010 	.word	0x20000010

08002a2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002a2c:	b110      	cbz	r0, 8002a34 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002a2e:	2802      	cmp	r0, #2
 8002a30:	d009      	beq.n	8002a46 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002a32:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002a34:	4b07      	ldr	r3, [pc, #28]	; (8002a54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002a36:	681a      	ldr	r2, [r3, #0]
 8002a38:	fab2 f282 	clz	r2, r2
 8002a3c:	0952      	lsrs	r2, r2, #5
 8002a3e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002a40:	4805      	ldr	r0, [pc, #20]	; (8002a58 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002a42:	f008 b9e5 	b.w	800ae10 <HAL_GPIO_WritePin>
 8002a46:	4b03      	ldr	r3, [pc, #12]	; (8002a54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002a48:	689a      	ldr	r2, [r3, #8]
 8002a4a:	fab2 f282 	clz	r2, r2
 8002a4e:	0952      	lsrs	r2, r2, #5
 8002a50:	2110      	movs	r1, #16
 8002a52:	e7f5      	b.n	8002a40 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002a54:	20000900 	.word	0x20000900
 8002a58:	40021000 	.word	0x40021000

08002a5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002a5c:	b110      	cbz	r0, 8002a64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002a5e:	2802      	cmp	r0, #2
 8002a60:	d009      	beq.n	8002a76 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002a62:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002a64:	4b07      	ldr	r3, [pc, #28]	; (8002a84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002a66:	681a      	ldr	r2, [r3, #0]
 8002a68:	3a00      	subs	r2, #0
 8002a6a:	bf18      	it	ne
 8002a6c:	2201      	movne	r2, #1
 8002a6e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002a70:	4805      	ldr	r0, [pc, #20]	; (8002a88 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002a72:	f008 b9cd 	b.w	800ae10 <HAL_GPIO_WritePin>
 8002a76:	4b03      	ldr	r3, [pc, #12]	; (8002a84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002a78:	689a      	ldr	r2, [r3, #8]
 8002a7a:	3a00      	subs	r2, #0
 8002a7c:	bf18      	it	ne
 8002a7e:	2201      	movne	r2, #1
 8002a80:	2110      	movs	r1, #16
 8002a82:	e7f5      	b.n	8002a70 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002a84:	20000900 	.word	0x20000900
 8002a88:	40021000 	.word	0x40021000

08002a8c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002a8c:	b110      	cbz	r0, 8002a94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002a8e:	2802      	cmp	r0, #2
 8002a90:	d004      	beq.n	8002a9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002a92:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002a94:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002a96:	4802      	ldr	r0, [pc, #8]	; (8002aa0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002a98:	f008 b9be 	b.w	800ae18 <HAL_GPIO_TogglePin>
 8002a9c:	2110      	movs	r1, #16
 8002a9e:	e7fa      	b.n	8002a96 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002aa0:	40021000 	.word	0x40021000

08002aa4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002aa4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002aa6:	b130      	cbz	r0, 8002ab6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002aa8:	2802      	cmp	r0, #2
 8002aaa:	d009      	beq.n	8002ac0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002aac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002aae:	1e43      	subs	r3, r0, #1
 8002ab0:	4258      	negs	r0, r3
 8002ab2:	4158      	adcs	r0, r3
 8002ab4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002ab6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002ab8:	4802      	ldr	r0, [pc, #8]	; (8002ac4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002aba:	f008 f9a3 	bl	800ae04 <HAL_GPIO_ReadPin>
        break;
 8002abe:	e7f6      	b.n	8002aae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002ac0:	2110      	movs	r1, #16
 8002ac2:	e7f9      	b.n	8002ab8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002ac4:	40021000 	.word	0x40021000

08002ac8 <_ZN8touchgfx4GPIO4initEv>:
{
 8002ac8:	b570      	push	{r4, r5, r6, lr}
 8002aca:	4d08      	ldr	r5, [pc, #32]	; (8002aec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002acc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002ace:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002ad0:	b2e0      	uxtb	r0, r4
 8002ad2:	f7ff ffe7 	bl	8002aa4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002ad6:	b118      	cbz	r0, 8002ae0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002ad8:	682b      	ldr	r3, [r5, #0]
 8002ada:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002adc:	bf18      	it	ne
 8002ade:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002ae0:	3401      	adds	r4, #1
 8002ae2:	2c05      	cmp	r4, #5
 8002ae4:	f105 0504 	add.w	r5, r5, #4
 8002ae8:	d1f2      	bne.n	8002ad0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002aea:	bd70      	pop	{r4, r5, r6, pc}
 8002aec:	20000900 	.word	0x20000900

08002af0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002af0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002af2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002af6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002afa:	4770      	bx	lr

08002afc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002afc:	2000      	movs	r0, #0
 8002afe:	4770      	bx	lr

08002b00 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b00:	4b03      	ldr	r3, [pc, #12]	; (8002b10 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002b02:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b04:	3900      	subs	r1, #0
 8002b06:	bf18      	it	ne
 8002b08:	2101      	movne	r1, #1
 8002b0a:	7019      	strb	r1, [r3, #0]
    }
 8002b0c:	4770      	bx	lr
 8002b0e:	bf00      	nop
 8002b10:	2001384b 	.word	0x2001384b

08002b14 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002b14:	2000      	movs	r0, #0
 8002b16:	4770      	bx	lr

08002b18 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002b18:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002b1a:	b10b      	cbz	r3, 8002b20 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002b1c:	4608      	mov	r0, r1
 8002b1e:	4718      	bx	r3
        }
    }
 8002b20:	4770      	bx	lr

08002b22 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002b22:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002b26:	4770      	bx	lr

08002b28 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002b28:	6840      	ldr	r0, [r0, #4]
 8002b2a:	6803      	ldr	r3, [r0, #0]
 8002b2c:	699b      	ldr	r3, [r3, #24]
 8002b2e:	4718      	bx	r3

08002b30 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002b30:	4770      	bx	lr

08002b32 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002b32:	4770      	bx	lr

08002b34 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002b34:	4770      	bx	lr
	...

08002b38 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002b38:	b510      	push	{r4, lr}
 8002b3a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002b3c:	f000 fb4e 	bl	80031dc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002b40:	6823      	ldr	r3, [r4, #0]
 8002b42:	4903      	ldr	r1, [pc, #12]	; (8002b50 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002b44:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b48:	4620      	mov	r0, r4
}
 8002b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002b4e:	4718      	bx	r3
 8002b50:	d0000000 	.word	0xd0000000

08002b54 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002b54:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002b56:	6803      	ldr	r3, [r0, #0]
{
 8002b58:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002b5a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002b5e:	4798      	blx	r3
    enableInterrupts();
 8002b60:	6823      	ldr	r3, [r4, #0]
 8002b62:	4620      	mov	r0, r4
 8002b64:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002b66:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002b68:	f000 f8ec 	bl	8002d44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002b6c:	6823      	ldr	r3, [r4, #0]
 8002b6e:	4620      	mov	r0, r4
 8002b70:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b72:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002b74:	2029      	movs	r0, #41	; 0x29
 8002b76:	f7ff f923 	bl	8001dc0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002b7a:	f000 f8e3 	bl	8002d44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002b7e:	6823      	ldr	r3, [r4, #0]
 8002b80:	4620      	mov	r0, r4
 8002b82:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b84:	4798      	blx	r3
    for (;;)
 8002b86:	e7f8      	b.n	8002b7a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002b88 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002b88:	b510      	push	{r4, lr}
 8002b8a:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002b8c:	f010 fb26 	bl	80131dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002b90:	6823      	ldr	r3, [r4, #0]
 8002b92:	4620      	mov	r0, r4
 8002b94:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002b98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002b9c:	4718      	bx	r3

08002b9e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002b9e:	f000 bb0f 	b.w	80031c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002ba2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002ba2:	f000 bb13 	b.w	80031cc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002ba6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002ba6:	f000 bb37 	b.w	8003218 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002baa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002baa:	f000 badf 	b.w	800316c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002bae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002bae:	f000 bae5 	b.w	800317c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002bb2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002bb2:	f000 bb3d 	b.w	8003230 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002bb6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002bb6:	f000 bae9 	b.w	800318c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002bba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002bba:	f00f bd7a 	b.w	80126b2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002bbe <_ZN11TouchGFXHALD0Ev>:
 8002bbe:	b510      	push	{r4, lr}
 8002bc0:	217c      	movs	r1, #124	; 0x7c
 8002bc2:	4604      	mov	r4, r0
 8002bc4:	f028 fff9 	bl	802bbba <_ZdlPvj>
 8002bc8:	4620      	mov	r0, r4
 8002bca:	bd10      	pop	{r4, pc}

08002bcc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002bcc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002bd0:	b11b      	cbz	r3, 8002bda <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002bd2:	6840      	ldr	r0, [r0, #4]
 8002bd4:	6803      	ldr	r3, [r0, #0]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	4718      	bx	r3
    }
 8002bda:	4618      	mov	r0, r3
 8002bdc:	4770      	bx	lr
	...

08002be0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002be0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002be2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002be6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002bea:	4b0c      	ldr	r3, [pc, #48]	; (8002c1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002bec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002bee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002bf0:	d009      	beq.n	8002c06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002bf2:	b93a      	cbnz	r2, 8002c04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002bf4:	4a0a      	ldr	r2, [pc, #40]	; (8002c20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002bf6:	490b      	ldr	r1, [pc, #44]	; (8002c24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002bf8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002bfa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002bfc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002bfe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002c00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002c02:	701a      	strb	r2, [r3, #0]
    }
 8002c04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002c06:	2a00      	cmp	r2, #0
 8002c08:	d0fc      	beq.n	8002c04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c0a:	4a05      	ldr	r2, [pc, #20]	; (8002c20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002c0c:	4905      	ldr	r1, [pc, #20]	; (8002c24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002c10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002c12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002c16:	2200      	movs	r2, #0
 8002c18:	e7f3      	b.n	8002c02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002c1a:	bf00      	nop
 8002c1c:	20013844 	.word	0x20013844
 8002c20:	20013840 	.word	0x20013840
 8002c24:	20013842 	.word	0x20013842

08002c28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002c28:	b570      	push	{r4, r5, r6, lr}
 8002c2a:	460d      	mov	r5, r1
 8002c2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002c2e:	b935      	cbnz	r5, 8002c3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002c30:	4b09      	ldr	r3, [pc, #36]	; (8002c58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002c32:	4a0a      	ldr	r2, [pc, #40]	; (8002c5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002c34:	480a      	ldr	r0, [pc, #40]	; (8002c60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002c36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002c3a:	f029 fea5 	bl	802c988 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002c3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002c42:	4b08      	ldr	r3, [pc, #32]	; (8002c64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002c44:	3a00      	subs	r2, #0
 8002c46:	bf18      	it	ne
 8002c48:	2201      	movne	r2, #1
 8002c4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002c4c:	6803      	ldr	r3, [r0, #0]
    }
 8002c4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002c52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002c56:	4718      	bx	r3
 8002c58:	0802dbbc 	.word	0x0802dbbc
 8002c5c:	0802dbf4 	.word	0x0802dbf4
 8002c60:	0802dc42 	.word	0x0802dc42
 8002c64:	2001384a 	.word	0x2001384a

08002c68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002c68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002c6a:	4b09      	ldr	r3, [pc, #36]	; (8002c90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002c6c:	881b      	ldrh	r3, [r3, #0]
 8002c6e:	428b      	cmp	r3, r1
 8002c70:	d803      	bhi.n	8002c7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002c72:	4b08      	ldr	r3, [pc, #32]	; (8002c94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002c74:	881b      	ldrh	r3, [r3, #0]
 8002c76:	4293      	cmp	r3, r2
 8002c78:	d905      	bls.n	8002c86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002c7a:	4b07      	ldr	r3, [pc, #28]	; (8002c98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002c7c:	4a07      	ldr	r2, [pc, #28]	; (8002c9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002c7e:	4808      	ldr	r0, [pc, #32]	; (8002ca0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002c80:	219e      	movs	r1, #158	; 0x9e
 8002c82:	f029 fe81 	bl	802c988 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002c86:	4b07      	ldr	r3, [pc, #28]	; (8002ca4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002c88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002c8a:	4b07      	ldr	r3, [pc, #28]	; (8002ca8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002c8c:	801a      	strh	r2, [r3, #0]
    }
 8002c8e:	bd08      	pop	{r3, pc}
 8002c90:	20013840 	.word	0x20013840
 8002c94:	20013842 	.word	0x20013842
 8002c98:	0802dc87 	.word	0x0802dc87
 8002c9c:	0802dcea 	.word	0x0802dcea
 8002ca0:	0802dc42 	.word	0x0802dc42
 8002ca4:	20013846 	.word	0x20013846
 8002ca8:	20013848 	.word	0x20013848

08002cac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002cac:	2101      	movs	r1, #1
{
 8002cae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002cb0:	2200      	movs	r2, #0
 8002cb2:	4608      	mov	r0, r1
 8002cb4:	f00b fe90 	bl	800e9d8 <osSemaphoreNew>
 8002cb8:	4b0a      	ldr	r3, [pc, #40]	; (8002ce4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002cba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002cbc:	b928      	cbnz	r0, 8002cca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002cbe:	4b0a      	ldr	r3, [pc, #40]	; (8002ce8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002cc0:	4a0a      	ldr	r2, [pc, #40]	; (8002cec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002cc2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002cc4:	480a      	ldr	r0, [pc, #40]	; (8002cf0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002cc6:	f029 fe5f 	bl	802c988 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002cca:	2200      	movs	r2, #0
 8002ccc:	2104      	movs	r1, #4
 8002cce:	2001      	movs	r0, #1
 8002cd0:	f00b ff36 	bl	800eb40 <osMessageQueueNew>
 8002cd4:	4b07      	ldr	r3, [pc, #28]	; (8002cf4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002cd6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002cd8:	b918      	cbnz	r0, 8002ce2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002cda:	4b07      	ldr	r3, [pc, #28]	; (8002cf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002cdc:	4a03      	ldr	r2, [pc, #12]	; (8002cec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002cde:	212c      	movs	r1, #44	; 0x2c
 8002ce0:	e7f0      	b.n	8002cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002ce2:	bd08      	pop	{r3, pc}
 8002ce4:	20000914 	.word	0x20000914
 8002ce8:	0802de08 	.word	0x0802de08
 8002cec:	0802de51 	.word	0x0802de51
 8002cf0:	0802de80 	.word	0x0802de80
 8002cf4:	20000910 	.word	0x20000910
 8002cf8:	0802defa 	.word	0x0802defa

08002cfc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002cfc:	4b02      	ldr	r3, [pc, #8]	; (8002d08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002cfe:	f04f 31ff 	mov.w	r1, #4294967295
 8002d02:	6818      	ldr	r0, [r3, #0]
 8002d04:	f00b bebc 	b.w	800ea80 <osSemaphoreAcquire>
 8002d08:	20000914 	.word	0x20000914

08002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002d0c:	4b01      	ldr	r3, [pc, #4]	; (8002d14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002d0e:	6818      	ldr	r0, [r3, #0]
 8002d10:	f00b beea 	b.w	800eae8 <osSemaphoreRelease>
 8002d14:	20000914 	.word	0x20000914

08002d18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002d18:	4b02      	ldr	r3, [pc, #8]	; (8002d24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002d1a:	2100      	movs	r1, #0
 8002d1c:	6818      	ldr	r0, [r3, #0]
 8002d1e:	f00b beaf 	b.w	800ea80 <osSemaphoreAcquire>
 8002d22:	bf00      	nop
 8002d24:	20000914 	.word	0x20000914

08002d28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002d28:	f7ff bff0 	b.w	8002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002d2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002d2c:	4803      	ldr	r0, [pc, #12]	; (8002d3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002d2e:	4904      	ldr	r1, [pc, #16]	; (8002d40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002d30:	6800      	ldr	r0, [r0, #0]
 8002d32:	2300      	movs	r3, #0
 8002d34:	461a      	mov	r2, r3
 8002d36:	f00b bf3d 	b.w	800ebb4 <osMessageQueuePut>
 8002d3a:	bf00      	nop
 8002d3c:	20000910 	.word	0x20000910
 8002d40:	20000014 	.word	0x20000014

08002d44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002d44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002d46:	4c08      	ldr	r4, [pc, #32]	; (8002d68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002d48:	2300      	movs	r3, #0
 8002d4a:	461a      	mov	r2, r3
 8002d4c:	a901      	add	r1, sp, #4
 8002d4e:	6820      	ldr	r0, [r4, #0]
 8002d50:	f00b ff66 	bl	800ec20 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002d54:	6820      	ldr	r0, [r4, #0]
 8002d56:	f04f 33ff 	mov.w	r3, #4294967295
 8002d5a:	2200      	movs	r2, #0
 8002d5c:	a901      	add	r1, sp, #4
 8002d5e:	f00b ff5f 	bl	800ec20 <osMessageQueueGet>
}
 8002d62:	b002      	add	sp, #8
 8002d64:	bd10      	pop	{r4, pc}
 8002d66:	bf00      	nop
 8002d68:	20000910 	.word	0x20000910

08002d6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002d6c:	4770      	bx	lr

08002d6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002d6e:	2000      	movs	r0, #0
 8002d70:	4770      	bx	lr

08002d72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002d72:	4770      	bx	lr

08002d74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002d74:	4770      	bx	lr

08002d76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002d76:	2000      	movs	r0, #0
 8002d78:	4770      	bx	lr

08002d7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002d7a:	4770      	bx	lr

08002d7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002d7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002d7e:	4a03      	ldr	r2, [pc, #12]	; (8002d8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002d80:	4b03      	ldr	r3, [pc, #12]	; (8002d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002d82:	4804      	ldr	r0, [pc, #16]	; (8002d94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002d84:	2122      	movs	r1, #34	; 0x22
 8002d86:	f029 fdff 	bl	802c988 <__assert_func>
 8002d8a:	bf00      	nop
 8002d8c:	0802df5f 	.word	0x0802df5f
 8002d90:	0802df3c 	.word	0x0802df3c
 8002d94:	0802df9d 	.word	0x0802df9d

08002d98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002d98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002d9a:	4a03      	ldr	r2, [pc, #12]	; (8002da8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002d9c:	4b03      	ldr	r3, [pc, #12]	; (8002dac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002d9e:	4804      	ldr	r0, [pc, #16]	; (8002db0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002da0:	2127      	movs	r1, #39	; 0x27
 8002da2:	f029 fdf1 	bl	802c988 <__assert_func>
 8002da6:	bf00      	nop
 8002da8:	0802e015 	.word	0x0802e015
 8002dac:	0802df3c 	.word	0x0802df3c
 8002db0:	0802df9d 	.word	0x0802df9d

08002db4 <_ZN8STM32DMAD0Ev>:
 8002db4:	b510      	push	{r4, lr}
 8002db6:	2144      	movs	r1, #68	; 0x44
 8002db8:	4604      	mov	r4, r0
 8002dba:	f028 fefe 	bl	802bbba <_ZdlPvj>
 8002dbe:	4620      	mov	r0, r4
 8002dc0:	bd10      	pop	{r4, pc}
	...

08002dc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002dc4:	b538      	push	{r3, r4, r5, lr}
 8002dc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002dc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002dca:	2500      	movs	r5, #0
 8002dcc:	4b06      	ldr	r3, [pc, #24]	; (8002de8 <_ZN8STM32DMAC1Ev+0x24>)
 8002dce:	7225      	strb	r5, [r4, #8]
 8002dd0:	300c      	adds	r0, #12
 8002dd2:	6060      	str	r0, [r4, #4]
 8002dd4:	7265      	strb	r5, [r4, #9]
 8002dd6:	2201      	movs	r2, #1
 8002dd8:	f841 3b20 	str.w	r3, [r1], #32
 8002ddc:	f010 fb56 	bl	801348c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002de0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002de2:	4620      	mov	r0, r4
 8002de4:	bd38      	pop	{r3, r4, r5, pc}
 8002de6:	bf00      	nop
 8002de8:	0802e05c 	.word	0x0802e05c

08002dec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002dec:	2001      	movs	r0, #1
 8002dee:	4770      	bx	lr

08002df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002df0:	2038      	movs	r0, #56	; 0x38
 8002df2:	4770      	bx	lr

08002df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002df4:	2338      	movs	r3, #56	; 0x38
 8002df6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002dfa:	3008      	adds	r0, #8
 8002dfc:	4770      	bx	lr

08002dfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002dfe:	2338      	movs	r3, #56	; 0x38
 8002e00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e04:	3008      	adds	r0, #8
 8002e06:	4770      	bx	lr

08002e08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002e08:	2001      	movs	r0, #1
 8002e0a:	4770      	bx	lr

08002e0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002e0c:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002e10:	4770      	bx	lr

08002e12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e12:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002e16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e1a:	3008      	adds	r0, #8
 8002e1c:	4770      	bx	lr

08002e1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e1e:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002e22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e26:	3008      	adds	r0, #8
 8002e28:	4770      	bx	lr

08002e2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002e2a:	2001      	movs	r0, #1
 8002e2c:	4770      	bx	lr

08002e2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002e2e:	2010      	movs	r0, #16
 8002e30:	4770      	bx	lr

08002e32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002e36:	3008      	adds	r0, #8
 8002e38:	4770      	bx	lr

08002e3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002e3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002e3e:	3008      	adds	r0, #8
 8002e40:	4770      	bx	lr

08002e42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002e42:	4608      	mov	r0, r1
 8002e44:	f002 bb6e 	b.w	8005524 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002e48:	b510      	push	{r4, lr}
 8002e4a:	4b03      	ldr	r3, [pc, #12]	; (8002e58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002e4c:	6003      	str	r3, [r0, #0]
 8002e4e:	4604      	mov	r4, r0
 8002e50:	f00e fb45 	bl	80114de <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002e54:	4620      	mov	r0, r4
 8002e56:	bd10      	pop	{r4, pc}
 8002e58:	0802e114 	.word	0x0802e114

08002e5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002e5c:	b510      	push	{r4, lr}
 8002e5e:	4604      	mov	r4, r0
 8002e60:	f7ff fff2 	bl	8002e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002e64:	4620      	mov	r0, r4
 8002e66:	2140      	movs	r1, #64	; 0x40
 8002e68:	f028 fea7 	bl	802bbba <_ZdlPvj>
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	bd10      	pop	{r4, pc}

08002e70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002e70:	b510      	push	{r4, lr}
 8002e72:	4b03      	ldr	r3, [pc, #12]	; (8002e80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002e74:	6003      	str	r3, [r0, #0]
 8002e76:	4604      	mov	r4, r0
 8002e78:	f00e fb31 	bl	80114de <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	bd10      	pop	{r4, pc}
 8002e80:	0802e0e0 	.word	0x0802e0e0

08002e84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002e84:	b510      	push	{r4, lr}
 8002e86:	4604      	mov	r4, r0
 8002e88:	f7ff fff2 	bl	8002e70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002e8c:	4620      	mov	r0, r4
 8002e8e:	f641 510c 	movw	r1, #7436	; 0x1d0c
 8002e92:	f028 fe92 	bl	802bbba <_ZdlPvj>
 8002e96:	4620      	mov	r0, r4
 8002e98:	bd10      	pop	{r4, pc}
	...

08002e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002e9c:	b510      	push	{r4, lr}
 8002e9e:	4b03      	ldr	r3, [pc, #12]	; (8002eac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002ea0:	6003      	str	r3, [r0, #0]
 8002ea2:	4604      	mov	r4, r0
 8002ea4:	f00e fb1b 	bl	80114de <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002ea8:	4620      	mov	r0, r4
 8002eaa:	bd10      	pop	{r4, pc}
 8002eac:	0802e0ac 	.word	0x0802e0ac

08002eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002eb0:	b510      	push	{r4, lr}
 8002eb2:	4604      	mov	r4, r0
 8002eb4:	f7ff fff2 	bl	8002e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002eb8:	4620      	mov	r0, r4
 8002eba:	2118      	movs	r1, #24
 8002ebc:	f028 fe7d 	bl	802bbba <_ZdlPvj>
 8002ec0:	4620      	mov	r0, r4
 8002ec2:	bd10      	pop	{r4, pc}

08002ec4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002ec4:	b510      	push	{r4, lr}
 8002ec6:	4b09      	ldr	r3, [pc, #36]	; (8002eec <_ZN12FrontendHeapD1Ev+0x28>)
 8002ec8:	6003      	str	r3, [r0, #0]
 8002eca:	4604      	mov	r4, r0
 8002ecc:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002ed0:	3018      	adds	r0, #24
 8002ed2:	f7ff ffb9 	bl	8002e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002ed6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002eda:	f7ff ffc9 	bl	8002e70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002ede:	f104 0014 	add.w	r0, r4, #20
 8002ee2:	f7ff ffdb 	bl	8002e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002ee6:	4620      	mov	r0, r4
 8002ee8:	bd10      	pop	{r4, pc}
 8002eea:	bf00      	nop
 8002eec:	0802e148 	.word	0x0802e148

08002ef0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002ef0:	b508      	push	{r3, lr}
 8002ef2:	4802      	ldr	r0, [pc, #8]	; (8002efc <__tcf_0+0xc>)
 8002ef4:	f7ff ffe6 	bl	8002ec4 <_ZN12FrontendHeapD1Ev>
 8002ef8:	bd08      	pop	{r3, pc}
 8002efa:	bf00      	nop
 8002efc:	2000091c 	.word	0x2000091c

08002f00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002f00:	b510      	push	{r4, lr}
 8002f02:	4604      	mov	r4, r0
 8002f04:	f7ff ffde 	bl	8002ec4 <_ZN12FrontendHeapD1Ev>
 8002f08:	4620      	mov	r0, r4
 8002f0a:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002f0e:	f028 fe54 	bl	802bbba <_ZdlPvj>
 8002f12:	4620      	mov	r0, r4
 8002f14:	bd10      	pop	{r4, pc}
	...

08002f18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002f18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002f1c:	f000 fa5c 	bl	80033d8 <_ZN14BitmapDatabase11getInstanceEv>
 8002f20:	4605      	mov	r5, r0
 8002f22:	f000 fa5d 	bl	80033e0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002f26:	2400      	movs	r4, #0
 8002f28:	4601      	mov	r1, r0
 8002f2a:	4623      	mov	r3, r4
 8002f2c:	4628      	mov	r0, r5
 8002f2e:	4622      	mov	r2, r4
 8002f30:	9400      	str	r4, [sp, #0]
 8002f32:	f018 f9c9 	bl	801b2c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002f36:	4b26      	ldr	r3, [pc, #152]	; (8002fd0 <touchgfx_init+0xb8>)
 8002f38:	4a26      	ldr	r2, [pc, #152]	; (8002fd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002f3a:	4d27      	ldr	r5, [pc, #156]	; (8002fd8 <touchgfx_init+0xc0>)
 8002f3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002f3e:	4620      	mov	r0, r4
 8002f40:	f006 fb96 	bl	8009670 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002f44:	4825      	ldr	r0, [pc, #148]	; (8002fdc <touchgfx_init+0xc4>)
 8002f46:	f018 f927 	bl	801b198 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002f4a:	682b      	ldr	r3, [r5, #0]
 8002f4c:	f3bf 8f5b 	dmb	ish
 8002f50:	07db      	lsls	r3, r3, #31
 8002f52:	d436      	bmi.n	8002fc2 <touchgfx_init+0xaa>
 8002f54:	4628      	mov	r0, r5
 8002f56:	f028 fe32 	bl	802bbbe <__cxa_guard_acquire>
 8002f5a:	b390      	cbz	r0, 8002fc2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002f5c:	4c20      	ldr	r4, [pc, #128]	; (8002fe0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002f5e:	4b21      	ldr	r3, [pc, #132]	; (8002fe4 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002f60:	4f21      	ldr	r7, [pc, #132]	; (8002fe8 <touchgfx_init+0xd0>)
 8002f62:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002f64:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8002f68:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002f6c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8002f70:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002f72:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002f76:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002f78:	6126      	str	r6, [r4, #16]
 8002f7a:	f00e fab1 	bl	80114e0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002f7e:	4b1b      	ldr	r3, [pc, #108]	; (8002fec <touchgfx_init+0xd4>)
 8002f80:	6163      	str	r3, [r4, #20]
 8002f82:	4640      	mov	r0, r8
 8002f84:	f00e faac 	bl	80114e0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002f88:	4b19      	ldr	r3, [pc, #100]	; (8002ff0 <touchgfx_init+0xd8>)
 8002f8a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002f8c:	4638      	mov	r0, r7
 8002f8e:	f00e faa7 	bl	80114e0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002f92:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002f96:	4a17      	ldr	r2, [pc, #92]	; (8002ff4 <touchgfx_init+0xdc>)
 8002f98:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 8002f9c:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8002fa0:	f006 ffe6 	bl	8009f70 <_ZN5ModelC1Ev>
 8002fa4:	4622      	mov	r2, r4
 8002fa6:	f1a6 0108 	sub.w	r1, r6, #8
 8002faa:	4630      	mov	r0, r6
 8002fac:	f006 fce6 	bl	800997c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002fb0:	4630      	mov	r0, r6
 8002fb2:	f002 fab7 	bl	8005524 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002fb6:	4810      	ldr	r0, [pc, #64]	; (8002ff8 <touchgfx_init+0xe0>)
 8002fb8:	f029 fd04 	bl	802c9c4 <atexit>
 8002fbc:	4628      	mov	r0, r5
 8002fbe:	f028 fe0a 	bl	802bbd6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002fc2:	480e      	ldr	r0, [pc, #56]	; (8002ffc <touchgfx_init+0xe4>)
}
 8002fc4:	b002      	add	sp, #8
 8002fc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002fca:	f7ff bdb5 	b.w	8002b38 <_ZN11TouchGFXHAL10initializeEv>
 8002fce:	bf00      	nop
 8002fd0:	200138b0 	.word	0x200138b0
 8002fd4:	200028bc 	.word	0x200028bc
 8002fd8:	20000918 	.word	0x20000918
 8002fdc:	20000018 	.word	0x20000018
 8002fe0:	2000091c 	.word	0x2000091c
 8002fe4:	0802e148 	.word	0x0802e148
 8002fe8:	20002654 	.word	0x20002654
 8002fec:	0802e0ac 	.word	0x0802e0ac
 8002ff0:	0802e0e0 	.word	0x0802e0e0
 8002ff4:	0802e114 	.word	0x0802e114
 8002ff8:	08002ef1 	.word	0x08002ef1
 8002ffc:	20002840 	.word	0x20002840

08003000 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8003000:	4770      	bx	lr
	...

08003004 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8003004:	4801      	ldr	r0, [pc, #4]	; (800300c <touchgfx_taskEntry+0x8>)
 8003006:	f7ff bda5 	b.w	8002b54 <_ZN11TouchGFXHAL9taskEntryEv>
 800300a:	bf00      	nop
 800300c:	20002840 	.word	0x20002840

08003010 <_GLOBAL__sub_I_touchgfx_init>:
}
 8003010:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8003012:	4e22      	ldr	r6, [pc, #136]	; (800309c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8003014:	4c22      	ldr	r4, [pc, #136]	; (80030a0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8003016:	4d23      	ldr	r5, [pc, #140]	; (80030a4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8003018:	4b23      	ldr	r3, [pc, #140]	; (80030a8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800301a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800301c:	4630      	mov	r0, r6
 800301e:	f7ff fed1 	bl	8002dc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8003022:	4628      	mov	r0, r5
 8003024:	f01c fc1c 	bl	801f860 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8003028:	4b20      	ldr	r3, [pc, #128]	; (80030ac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800302a:	4821      	ldr	r0, [pc, #132]	; (80030b0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 800302c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800302e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8003030:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8003034:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8003038:	491e      	ldr	r1, [pc, #120]	; (80030b4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800303a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 800303c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8003040:	491d      	ldr	r1, [pc, #116]	; (80030b8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8003042:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8003044:	491d      	ldr	r1, [pc, #116]	; (80030bc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8003046:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800304a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800304c:	21f0      	movs	r1, #240	; 0xf0
 800304e:	8001      	strh	r1, [r0, #0]
 8003050:	481b      	ldr	r0, [pc, #108]	; (80030c0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8003052:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8003054:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003056:	481b      	ldr	r0, [pc, #108]	; (80030c4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8003058:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800305c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8003060:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8003064:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8003068:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800306c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8003070:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8003074:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8003078:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 800307c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8003080:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8003082:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003086:	8001      	strh	r1, [r0, #0]
 8003088:	480f      	ldr	r0, [pc, #60]	; (80030c8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 800308a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800308c:	490f      	ldr	r1, [pc, #60]	; (80030cc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 800308e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8003090:	2201      	movs	r2, #1
 8003092:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8003096:	4a0e      	ldr	r2, [pc, #56]	; (80030d0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8003098:	601a      	str	r2, [r3, #0]
}
 800309a:	bd70      	pop	{r4, r5, r6, pc}
 800309c:	200027fc 	.word	0x200027fc
 80030a0:	200027f8 	.word	0x200027f8
 80030a4:	200028c0 	.word	0x200028c0
 80030a8:	0802dbac 	.word	0x0802dbac
 80030ac:	20002840 	.word	0x20002840
 80030b0:	20013840 	.word	0x20013840
 80030b4:	01000001 	.word	0x01000001
 80030b8:	01010000 	.word	0x01010000
 80030bc:	2001384c 	.word	0x2001384c
 80030c0:	20013846 	.word	0x20013846
 80030c4:	20013842 	.word	0x20013842
 80030c8:	20013848 	.word	0x20013848
 80030cc:	20013844 	.word	0x20013844
 80030d0:	0802dd38 	.word	0x0802dd38

080030d4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80030d4:	2000      	movs	r0, #0
 80030d6:	4770      	bx	lr

080030d8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80030d8:	8081      	strh	r1, [r0, #4]
    }
 80030da:	4770      	bx	lr

080030dc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80030dc:	80c1      	strh	r1, [r0, #6]
    }
 80030de:	4770      	bx	lr

080030e0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80030e0:	8101      	strh	r1, [r0, #8]
    }
 80030e2:	4770      	bx	lr

080030e4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80030e4:	8141      	strh	r1, [r0, #10]
    }
 80030e6:	4770      	bx	lr

080030e8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80030e8:	4770      	bx	lr

080030ea <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80030ea:	4770      	bx	lr

080030ec <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80030ec:	4770      	bx	lr

080030ee <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80030ee:	4770      	bx	lr

080030f0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80030f0:	4770      	bx	lr

080030f2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80030f2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80030f4:	88c4      	ldrh	r4, [r0, #6]
 80030f6:	6803      	ldr	r3, [r0, #0]
 80030f8:	1b12      	subs	r2, r2, r4
 80030fa:	8884      	ldrh	r4, [r0, #4]
 80030fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80030fe:	1b09      	subs	r1, r1, r4
 8003100:	b212      	sxth	r2, r2
    }
 8003102:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003106:	b209      	sxth	r1, r1
 8003108:	4718      	bx	r3

0800310a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800310a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800310e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003110:	f04f 33ff 	mov.w	r3, #4294967295
 8003114:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003116:	6813      	ldr	r3, [r2, #0]
 8003118:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800311a:	6010      	str	r0, [r2, #0]
    }
 800311c:	4770      	bx	lr

0800311e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800311e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003122:	b11a      	cbz	r2, 800312c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003124:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003128:	b102      	cbz	r2, 800312c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800312a:	6018      	str	r0, [r3, #0]
        }
    }
 800312c:	4770      	bx	lr

0800312e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800312e:	2000      	movs	r0, #0
 8003130:	4770      	bx	lr

08003132 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003132:	888b      	ldrh	r3, [r1, #4]
 8003134:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003136:	2001      	movs	r0, #1
 8003138:	4770      	bx	lr

0800313a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800313a:	4770      	bx	lr

0800313c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800313c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003140:	4770      	bx	lr

08003142 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003142:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003146:	4770      	bx	lr

08003148 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003148:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800314a:	2200      	movs	r2, #0
        return rect.width;
 800314c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003150:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003154:	8002      	strh	r2, [r0, #0]
 8003156:	8042      	strh	r2, [r0, #2]
 8003158:	8084      	strh	r4, [r0, #4]
 800315a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800315c:	bd10      	pop	{r4, pc}

0800315e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800315e:	2200      	movs	r2, #0
 8003160:	8002      	strh	r2, [r0, #0]
 8003162:	8042      	strh	r2, [r0, #2]
 8003164:	8082      	strh	r2, [r0, #4]
 8003166:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003168:	4770      	bx	lr
	...

0800316c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800316c:	4b02      	ldr	r3, [pc, #8]	; (8003178 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800316e:	2290      	movs	r2, #144	; 0x90
 8003170:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8003174:	4770      	bx	lr
 8003176:	bf00      	nop
 8003178:	e000e100 	.word	0xe000e100

0800317c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800317c:	4b02      	ldr	r3, [pc, #8]	; (8003188 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800317e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003182:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8003184:	4770      	bx	lr
 8003186:	bf00      	nop
 8003188:	e000e100 	.word	0xe000e100

0800318c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800318c:	4a09      	ldr	r2, [pc, #36]	; (80031b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800318e:	490a      	ldr	r1, [pc, #40]	; (80031b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003190:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8003192:	480a      	ldr	r0, [pc, #40]	; (80031bc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8003194:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003198:	3b01      	subs	r3, #1
 800319a:	b29b      	uxth	r3, r3
 800319c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800319e:	6911      	ldr	r1, [r2, #16]
 80031a0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80031a4:	3901      	subs	r1, #1
 80031a6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80031a8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80031aa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80031ac:	f043 0301 	orr.w	r3, r3, #1
 80031b0:	6353      	str	r3, [r2, #52]	; 0x34
}
 80031b2:	4770      	bx	lr
 80031b4:	40016800 	.word	0x40016800
 80031b8:	20002946 	.word	0x20002946
 80031bc:	20002944 	.word	0x20002944

080031c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80031c0:	4b01      	ldr	r3, [pc, #4]	; (80031c8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80031c2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80031c6:	4770      	bx	lr
 80031c8:	40016800 	.word	0x40016800

080031cc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80031cc:	4b02      	ldr	r3, [pc, #8]	; (80031d8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80031ce:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80031d0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80031d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80031d6:	4770      	bx	lr
 80031d8:	40016800 	.word	0x40016800

080031dc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80031dc:	b570      	push	{r4, r5, r6, lr}
 80031de:	4604      	mov	r4, r0
    HAL::initialize();
 80031e0:	f00f fabd 	bl	801275e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80031e4:	6823      	ldr	r3, [r4, #0]
 80031e6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80031e8:	f014 fc32 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 80031ec:	4601      	mov	r1, r0
 80031ee:	4620      	mov	r0, r4
 80031f0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80031f2:	6823      	ldr	r3, [r4, #0]
 80031f4:	4a05      	ldr	r2, [pc, #20]	; (800320c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80031f6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80031fa:	4620      	mov	r0, r4
 80031fc:	46ac      	mov	ip, r5
 80031fe:	2300      	movs	r3, #0
}
 8003200:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8003204:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8003208:	4760      	bx	ip
 800320a:	bf00      	nop
 800320c:	d004b000 	.word	0xd004b000

08003210 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8003210:	f00f ba8c 	b.w	801272c <_ZN8touchgfx3HAL10beginFrameEv>

08003214 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8003214:	f00f ba96 	b.w	8012744 <_ZN8touchgfx3HAL8endFrameEv>

08003218 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8003218:	f00f ba51 	b.w	80126be <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800321c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800321c:	f00f bbb3 	b.w	8012986 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08003220 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8003220:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003224:	b112      	cbz	r2, 800322c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8003226:	6803      	ldr	r3, [r0, #0]
 8003228:	695b      	ldr	r3, [r3, #20]
 800322a:	4718      	bx	r3
    }
 800322c:	4770      	bx	lr
	...

08003230 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003230:	4b04      	ldr	r3, [pc, #16]	; (8003244 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8003232:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003236:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800323a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800323e:	f3bf 8f6f 	isb	sy
}
 8003242:	4770      	bx	lr
 8003244:	e000e100 	.word	0xe000e100

08003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003248:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800324a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800324c:	4e12      	ldr	r6, [pc, #72]	; (8003298 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800324e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003250:	4b12      	ldr	r3, [pc, #72]	; (800329c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003252:	6003      	str	r3, [r0, #0]
 8003254:	6833      	ldr	r3, [r6, #0]
 8003256:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800325a:	4605      	mov	r5, r0
 800325c:	b10a      	cbz	r2, 8003262 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800325e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003260:	b900      	cbnz	r0, 8003264 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003262:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003264:	6803      	ldr	r3, [r0, #0]
 8003266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003268:	4798      	blx	r3
        return auxiliaryLCD;
 800326a:	6833      	ldr	r3, [r6, #0]
 800326c:	fab0 f480 	clz	r4, r0
 8003270:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003272:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003274:	b130      	cbz	r0, 8003284 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003276:	6803      	ldr	r3, [r0, #0]
 8003278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800327a:	4798      	blx	r3
 800327c:	2800      	cmp	r0, #0
 800327e:	bf08      	it	eq
 8003280:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003284:	b92c      	cbnz	r4, 8003292 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003286:	4b06      	ldr	r3, [pc, #24]	; (80032a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003288:	4a06      	ldr	r2, [pc, #24]	; (80032a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800328a:	4807      	ldr	r0, [pc, #28]	; (80032a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800328c:	212c      	movs	r1, #44	; 0x2c
 800328e:	f029 fb7b 	bl	802c988 <__assert_func>
    }
 8003292:	4628      	mov	r0, r5
 8003294:	bd70      	pop	{r4, r5, r6, pc}
 8003296:	bf00      	nop
 8003298:	2001384c 	.word	0x2001384c
 800329c:	0802e258 	.word	0x0802e258
 80032a0:	0802e154 	.word	0x0802e154
 80032a4:	0802e1b2 	.word	0x0802e1b2
 80032a8:	0802e1eb 	.word	0x0802e1eb

080032ac <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80032ac:	4770      	bx	lr
	...

080032b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80032b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80032b4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80032b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80032ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80032be:	d105      	bne.n	80032cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80032c0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80032c4:	4281      	cmp	r1, r0
 80032c6:	d8fb      	bhi.n	80032c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80032c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80032cc:	4f17      	ldr	r7, [pc, #92]	; (800332c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032ce:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032d2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80032d6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032da:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032de:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80032e0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80032e2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032e4:	b2db      	uxtb	r3, r3
 80032e6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80032e8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032ec:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032f0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80032f4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80032f8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80032fc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003300:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003304:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003308:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800330a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800330e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003312:	fb03 4e0e 	mla	lr, r3, lr, r4
 8003316:	fbbe fef5 	udiv	lr, lr, r5
 800331a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800331e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8003322:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8003326:	4281      	cmp	r1, r0
 8003328:	d8de      	bhi.n	80032e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800332a:	e7cd      	b.n	80032c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800332c:	fffff800 	.word	0xfffff800

08003330 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8003330:	b510      	push	{r4, lr}
        return instance;
 8003332:	4c14      	ldr	r4, [pc, #80]	; (8003384 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8003334:	6823      	ldr	r3, [r4, #0]
 8003336:	b323      	cbz	r3, 8003382 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8003338:	4b13      	ldr	r3, [pc, #76]	; (8003388 <HAL_LTDC_LineEventCallback+0x58>)
 800333a:	4a14      	ldr	r2, [pc, #80]	; (800338c <HAL_LTDC_LineEventCallback+0x5c>)
 800333c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800333e:	8811      	ldrh	r1, [r2, #0]
 8003340:	428b      	cmp	r3, r1
 8003342:	d113      	bne.n	800336c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8003344:	4b12      	ldr	r3, [pc, #72]	; (8003390 <HAL_LTDC_LineEventCallback+0x60>)
 8003346:	8819      	ldrh	r1, [r3, #0]
 8003348:	f009 fb7e 	bl	800ca48 <HAL_LTDC_ProgramLineEvent>
 800334c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800334e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8003352:	3301      	adds	r3, #1
 8003354:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8003358:	f7ff fce8 	bl	8002d2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800335c:	6820      	ldr	r0, [r4, #0]
 800335e:	f00f ff3d 	bl	80131dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8003362:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8003366:	2000      	movs	r0, #0
 8003368:	f7ff bb60 	b.w	8002a2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800336c:	f009 fb6c 	bl	800ca48 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003370:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8003372:	6803      	ldr	r3, [r0, #0]
 8003374:	6a1b      	ldr	r3, [r3, #32]
 8003376:	4798      	blx	r3
    }
 8003378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800337c:	2000      	movs	r0, #0
 800337e:	f7ff bb6d 	b.w	8002a5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8003382:	bd10      	pop	{r4, pc}
 8003384:	2001384c 	.word	0x2001384c
 8003388:	40016800 	.word	0x40016800
 800338c:	20002946 	.word	0x20002946
 8003390:	20002944 	.word	0x20002944

08003394 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8003394:	4770      	bx	lr

08003396 <_ZN23ApplicationFontProviderD0Ev>:
 8003396:	b510      	push	{r4, lr}
 8003398:	2104      	movs	r1, #4
 800339a:	4604      	mov	r4, r0
 800339c:	f028 fc0d 	bl	802bbba <_ZdlPvj>
 80033a0:	4620      	mov	r0, r4
 80033a2:	bd10      	pop	{r4, pc}

080033a4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80033a4:	b508      	push	{r3, lr}
    switch (typography)
 80033a6:	2903      	cmp	r1, #3
 80033a8:	d813      	bhi.n	80033d2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80033aa:	e8df f001 	tbb	[pc, r1]
 80033ae:	0602      	.short	0x0602
 80033b0:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80033b2:	f006 f9a9 	bl	8009708 <_ZN17TypedTextDatabase8getFontsEv>
 80033b6:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80033b8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80033ba:	f006 f9a5 	bl	8009708 <_ZN17TypedTextDatabase8getFontsEv>
 80033be:	6840      	ldr	r0, [r0, #4]
 80033c0:	e7fa      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80033c2:	f006 f9a1 	bl	8009708 <_ZN17TypedTextDatabase8getFontsEv>
 80033c6:	6880      	ldr	r0, [r0, #8]
 80033c8:	e7f6      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80033ca:	f006 f99d 	bl	8009708 <_ZN17TypedTextDatabase8getFontsEv>
 80033ce:	68c0      	ldr	r0, [r0, #12]
 80033d0:	e7f2      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80033d2:	2000      	movs	r0, #0
 80033d4:	e7f0      	b.n	80033b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080033d8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80033d8:	4800      	ldr	r0, [pc, #0]	; (80033dc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80033da:	4770      	bx	lr
 80033dc:	0802e284 	.word	0x0802e284

080033e0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80033e0:	200c      	movs	r0, #12
 80033e2:	4770      	bx	lr

080033e4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80033e4:	b513      	push	{r0, r1, r4, lr}
 80033e6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80033e8:	b151      	cbz	r1, 8003400 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80033ea:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80033ec:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80033ee:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80033f2:	aa01      	add	r2, sp, #4
 80033f4:	689c      	ldr	r4, [r3, #8]
 80033f6:	f10d 0303 	add.w	r3, sp, #3
 80033fa:	47a0      	blx	r4
        return glyph;
    }
 80033fc:	b002      	add	sp, #8
 80033fe:	bd10      	pop	{r4, pc}
            return 0;
 8003400:	4608      	mov	r0, r1
 8003402:	e7fb      	b.n	80033fc <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003404 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003404:	89c0      	ldrh	r0, [r0, #14]
 8003406:	4770      	bx	lr

08003408 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8003408:	8a00      	ldrh	r0, [r0, #16]
 800340a:	4770      	bx	lr

0800340c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800340c:	88c0      	ldrh	r0, [r0, #6]
 800340e:	4770      	bx	lr

08003410 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8003410:	8880      	ldrh	r0, [r0, #4]
 8003412:	4770      	bx	lr

08003414 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8003414:	7a80      	ldrb	r0, [r0, #10]
    }
 8003416:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800341a:	4770      	bx	lr

0800341c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800341c:	7a80      	ldrb	r0, [r0, #10]
    }
 800341e:	09c0      	lsrs	r0, r0, #7
 8003420:	4770      	bx	lr

08003422 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003422:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003424:	4770      	bx	lr

08003426 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003426:	4770      	bx	lr

08003428 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003428:	4770      	bx	lr

0800342a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800342a:	4770      	bx	lr

0800342c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800342c:	4770      	bx	lr

0800342e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800342e:	4770      	bx	lr

08003430 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003430:	4770      	bx	lr

08003432 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003432:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003434:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003436:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8003438:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800343a:	466d      	mov	r5, sp
 800343c:	4601      	mov	r1, r0
 800343e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8003442:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003444:	4628      	mov	r0, r5
 8003446:	4798      	blx	r3
 8003448:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800344c:	343c      	adds	r4, #60	; 0x3c
 800344e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003452:	b005      	add	sp, #20
 8003454:	bd30      	pop	{r4, r5, pc}

08003456 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8003456:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003458:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800345a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800345c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800345e:	466d      	mov	r5, sp
 8003460:	4601      	mov	r1, r0
 8003462:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8003466:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003468:	4628      	mov	r0, r5
 800346a:	4798      	blx	r3
 800346c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003470:	343c      	adds	r4, #60	; 0x3c
 8003472:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003476:	b005      	add	sp, #20
 8003478:	bd30      	pop	{r4, r5, pc}

0800347a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800347a:	2200      	movs	r2, #0
 800347c:	8002      	strh	r2, [r0, #0]
 800347e:	8042      	strh	r2, [r0, #2]
 8003480:	8082      	strh	r2, [r0, #4]
 8003482:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003484:	4770      	bx	lr

08003486 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003486:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800348a:	4770      	bx	lr

0800348c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800348c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800348e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003490:	4604      	mov	r4, r0
        setX(x);
 8003492:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003494:	4615      	mov	r5, r2
        setX(x);
 8003496:	4798      	blx	r3
        setBaselineY(baselineY);
 8003498:	6823      	ldr	r3, [r4, #0]
 800349a:	4629      	mov	r1, r5
 800349c:	4620      	mov	r0, r4
 800349e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80034a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80034a4:	4718      	bx	r3

080034a6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80034a6:	2000      	movs	r0, #0
 80034a8:	4770      	bx	lr

080034aa <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80034aa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80034ac:	4770      	bx	lr

080034ae <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80034ae:	4770      	bx	lr

080034b0 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80034b0:	6803      	ldr	r3, [r0, #0]
 80034b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80034b4:	4718      	bx	r3

080034b6 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 80034b6:	6803      	ldr	r3, [r0, #0]
 80034b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034ba:	4718      	bx	r3

080034bc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80034bc:	4770      	bx	lr

080034be <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80034be:	4770      	bx	lr

080034c0 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80034c0:	4770      	bx	lr

080034c2 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80034c2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80034c4:	68c2      	ldr	r2, [r0, #12]
 80034c6:	6844      	ldr	r4, [r0, #4]
 80034c8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80034ca:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80034cc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80034d0:	07d2      	lsls	r2, r2, #31
 80034d2:	bf48      	it	mi
 80034d4:	5962      	ldrmi	r2, [r4, r5]
 80034d6:	689b      	ldr	r3, [r3, #8]
    }
 80034d8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80034da:	bf48      	it	mi
 80034dc:	58d3      	ldrmi	r3, [r2, r3]
 80034de:	4718      	bx	r3

080034e0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80034e0:	6843      	ldr	r3, [r0, #4]
 80034e2:	b12b      	cbz	r3, 80034f0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80034e4:	6883      	ldr	r3, [r0, #8]
 80034e6:	b92b      	cbnz	r3, 80034f4 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80034e8:	68c0      	ldr	r0, [r0, #12]
 80034ea:	f000 0001 	and.w	r0, r0, #1
 80034ee:	4770      	bx	lr
 80034f0:	4618      	mov	r0, r3
 80034f2:	4770      	bx	lr
 80034f4:	2001      	movs	r0, #1
    }
 80034f6:	4770      	bx	lr

080034f8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80034f8:	b510      	push	{r4, lr}
    }
 80034fa:	2108      	movs	r1, #8
    virtual ~TypedText()
 80034fc:	4604      	mov	r4, r0
    }
 80034fe:	f028 fb5c 	bl	802bbba <_ZdlPvj>
 8003502:	4620      	mov	r0, r4
 8003504:	bd10      	pop	{r4, pc}

08003506 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003506:	b510      	push	{r4, lr}
 8003508:	214c      	movs	r1, #76	; 0x4c
 800350a:	4604      	mov	r4, r0
 800350c:	f028 fb55 	bl	802bbba <_ZdlPvj>
 8003510:	4620      	mov	r0, r4
 8003512:	bd10      	pop	{r4, pc}

08003514 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003514:	b510      	push	{r4, lr}
 8003516:	2110      	movs	r1, #16
 8003518:	4604      	mov	r4, r0
 800351a:	f028 fb4e 	bl	802bbba <_ZdlPvj>
 800351e:	4620      	mov	r0, r4
 8003520:	bd10      	pop	{r4, pc}

08003522 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8003522:	b510      	push	{r4, lr}
 8003524:	218c      	movs	r1, #140	; 0x8c
 8003526:	4604      	mov	r4, r0
 8003528:	f028 fb47 	bl	802bbba <_ZdlPvj>
 800352c:	4620      	mov	r0, r4
 800352e:	bd10      	pop	{r4, pc}

08003530 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003530:	b538      	push	{r3, r4, r5, lr}
 8003532:	4605      	mov	r5, r0
 8003534:	4b05      	ldr	r3, [pc, #20]	; (800354c <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8003536:	f845 3be0 	str.w	r3, [r5], #224
 800353a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800353c:	f012 fd86 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003540:	4628      	mov	r0, r5
 8003542:	f00e fc3b 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003546:	4620      	mov	r0, r4
 8003548:	bd38      	pop	{r3, r4, r5, pc}
 800354a:	bf00      	nop
 800354c:	0802e66c 	.word	0x0802e66c

08003550 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003550:	b510      	push	{r4, lr}
 8003552:	4604      	mov	r4, r0
}
 8003554:	f7ff ffec 	bl	8003530 <_ZN23Calibration_PadViewBaseD1Ev>
 8003558:	4620      	mov	r0, r4
 800355a:	f641 5104 	movw	r1, #7428	; 0x1d04
 800355e:	f028 fb2c 	bl	802bbba <_ZdlPvj>
 8003562:	4620      	mov	r0, r4
 8003564:	bd10      	pop	{r4, pc}

08003566 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003566:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003568:	f7ff fe5a 	bl	8003220 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800356c:	bd08      	pop	{r3, pc}
	...

08003570 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003570:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003572:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003574:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003576:	4b12      	ldr	r3, [pc, #72]	; (80035c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003578:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800357a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800357c:	b28d      	uxth	r5, r1
 800357e:	b92b      	cbnz	r3, 800358c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003580:	4b10      	ldr	r3, [pc, #64]	; (80035c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003582:	4a11      	ldr	r2, [pc, #68]	; (80035c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003584:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003586:	4811      	ldr	r0, [pc, #68]	; (80035cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003588:	f029 f9fe 	bl	802c988 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800358c:	4910      	ldr	r1, [pc, #64]	; (80035d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800358e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003590:	8809      	ldrh	r1, [r1, #0]
 8003592:	4291      	cmp	r1, r2
 8003594:	d803      	bhi.n	800359e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003596:	4b0f      	ldr	r3, [pc, #60]	; (80035d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003598:	4a0b      	ldr	r2, [pc, #44]	; (80035c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800359a:	216d      	movs	r1, #109	; 0x6d
 800359c:	e7f3      	b.n	8003586 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800359e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80035a2:	4b0d      	ldr	r3, [pc, #52]	; (80035d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80035aa:	6803      	ldr	r3, [r0, #0]
 80035ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80035ae:	4798      	blx	r3
 80035b0:	1a28      	subs	r0, r5, r0
 80035b2:	b201      	sxth	r1, r0
 80035b4:	4633      	mov	r3, r6
 80035b6:	4620      	mov	r0, r4
    }
 80035b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80035bc:	4718      	bx	r3
 80035be:	bf00      	nop
 80035c0:	200138a4 	.word	0x200138a4
 80035c4:	0802e374 	.word	0x0802e374
 80035c8:	0802e3b6 	.word	0x0802e3b6
 80035cc:	0802e3f1 	.word	0x0802e3f1
 80035d0:	200138a8 	.word	0x200138a8
 80035d4:	0802e438 	.word	0x0802e438
 80035d8:	200138ac 	.word	0x200138ac

080035dc <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80035dc:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80035de:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80035e0:	4604      	mov	r4, r0
        setX(x);
 80035e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80035e4:	4615      	mov	r5, r2
        setX(x);
 80035e6:	4798      	blx	r3
        setY(y);
 80035e8:	6823      	ldr	r3, [r4, #0]
 80035ea:	4629      	mov	r1, r5
 80035ec:	4620      	mov	r0, r4
 80035ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80035f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80035f4:	4718      	bx	r3

080035f6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80035f6:	b570      	push	{r4, r5, r6, lr}
 80035f8:	4604      	mov	r4, r0
 80035fa:	461d      	mov	r5, r3
 80035fc:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003600:	f7ff ffec 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003604:	6823      	ldr	r3, [r4, #0]
 8003606:	4629      	mov	r1, r5
 8003608:	4620      	mov	r0, r4
 800360a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800360c:	4798      	blx	r3
        setHeight(height);
 800360e:	6823      	ldr	r3, [r4, #0]
 8003610:	4631      	mov	r1, r6
 8003612:	4620      	mov	r0, r4
 8003614:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003616:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800361a:	4718      	bx	r3

0800361c <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 800361c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003620:	2200      	movs	r2, #0
 8003622:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8003624:	4905      	ldr	r1, [pc, #20]	; (800363c <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8003626:	6001      	str	r1, [r0, #0]
 8003628:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800362c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003630:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003634:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003638:	6282      	str	r2, [r0, #40]	; 0x28
    }
 800363a:	4770      	bx	lr
 800363c:	08030590 	.word	0x08030590

08003640 <_ZN8touchgfx6WidgetC1Ev>:
 8003640:	2200      	movs	r2, #0
 8003642:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003646:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800364a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800364e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003652:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003656:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003658:	4a01      	ldr	r2, [pc, #4]	; (8003660 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800365a:	6002      	str	r2, [r0, #0]
 800365c:	4770      	bx	lr
 800365e:	bf00      	nop
 8003660:	0802e4bc 	.word	0x0802e4bc

08003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003664:	4b1a      	ldr	r3, [pc, #104]	; (80036d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003666:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003668:	881b      	ldrh	r3, [r3, #0]
 800366a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800366c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800366e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003670:	d92b      	bls.n	80036ca <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003672:	4b18      	ldr	r3, [pc, #96]	; (80036d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003674:	681b      	ldr	r3, [r3, #0]
 8003676:	b92b      	cbnz	r3, 8003684 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003678:	4b17      	ldr	r3, [pc, #92]	; (80036d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800367a:	4a18      	ldr	r2, [pc, #96]	; (80036dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800367c:	4818      	ldr	r0, [pc, #96]	; (80036e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800367e:	216c      	movs	r1, #108	; 0x6c
 8003680:	f029 f982 	bl	802c988 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003684:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003688:	4b16      	ldr	r3, [pc, #88]	; (80036e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003690:	4b15      	ldr	r3, [pc, #84]	; (80036e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003692:	6818      	ldr	r0, [r3, #0]
 8003694:	f006 f828 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003698:	682b      	ldr	r3, [r5, #0]
 800369a:	9001      	str	r0, [sp, #4]
 800369c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800369e:	4628      	mov	r0, r5
 80036a0:	4798      	blx	r3
 80036a2:	682b      	ldr	r3, [r5, #0]
 80036a4:	9901      	ldr	r1, [sp, #4]
 80036a6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80036a8:	4604      	mov	r4, r0
 80036aa:	4628      	mov	r0, r5
 80036ac:	4798      	blx	r3
 80036ae:	682b      	ldr	r3, [r5, #0]
 80036b0:	9901      	ldr	r1, [sp, #4]
 80036b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036b4:	fb14 f400 	smulbb	r4, r4, r0
 80036b8:	4628      	mov	r0, r5
 80036ba:	4798      	blx	r3
 80036bc:	b2a4      	uxth	r4, r4
 80036be:	1823      	adds	r3, r4, r0
 80036c0:	b21b      	sxth	r3, r3
 80036c2:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80036c6:	b002      	add	sp, #8
 80036c8:	bd70      	pop	{r4, r5, r6, pc}
 80036ca:	2300      	movs	r3, #0
 80036cc:	e7f9      	b.n	80036c2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80036ce:	bf00      	nop
 80036d0:	200138a8 	.word	0x200138a8
 80036d4:	200138a4 	.word	0x200138a4
 80036d8:	0802e374 	.word	0x0802e374
 80036dc:	0802e3b6 	.word	0x0802e3b6
 80036e0:	0802e3f1 	.word	0x0802e3f1
 80036e4:	200138ac 	.word	0x200138ac
 80036e8:	200138b0 	.word	0x200138b0

080036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80036ec:	2200      	movs	r2, #0
 80036ee:	f04f 31ff 	mov.w	r1, #4294967295
 80036f2:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80036f6:	6082      	str	r2, [r0, #8]
        {
        }
 80036f8:	4770      	bx	lr

080036fa <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 80036fa:	b510      	push	{r4, lr}
 80036fc:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 80036fe:	f7ff fff5 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8003702:	4620      	mov	r0, r4
 8003704:	bd10      	pop	{r4, pc}
	...

08003708 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003708:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800370a:	2100      	movs	r1, #0
    TextArea()
 800370c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800370e:	2226      	movs	r2, #38	; 0x26
 8003710:	f029 fb3f 	bl	802cd92 <memset>
 8003714:	4620      	mov	r0, r4
 8003716:	f7ff ff93 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 800371a:	4b09      	ldr	r3, [pc, #36]	; (8003740 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 800371c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800371e:	4b09      	ldr	r3, [pc, #36]	; (8003744 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003720:	62a3      	str	r3, [r4, #40]	; 0x28
 8003722:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003726:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003728:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800372c:	2300      	movs	r3, #0
 800372e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8003732:	8723      	strh	r3, [r4, #56]	; 0x38
 8003734:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8003738:	f7ff ffd8 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800373c:	4620      	mov	r0, r4
 800373e:	bd10      	pop	{r4, pc}
 8003740:	080309e8 	.word	0x080309e8
 8003744:	0802e524 	.word	0x0802e524

08003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003748:	b510      	push	{r4, lr}
 800374a:	4604      	mov	r4, r0
        : TextArea()
 800374c:	f7ff ffdc 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003750:	4b02      	ldr	r3, [pc, #8]	; (800375c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8003752:	6023      	str	r3, [r4, #0]
 8003754:	2300      	movs	r3, #0
 8003756:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003758:	4620      	mov	r0, r4
 800375a:	bd10      	pop	{r4, pc}
 800375c:	0802e5c4 	.word	0x0802e5c4

08003760 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8003760:	b510      	push	{r4, lr}
 8003762:	4604      	mov	r4, r0
 8003764:	460b      	mov	r3, r1
 8003766:	490d      	ldr	r1, [pc, #52]	; (800379c <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8003768:	f844 1b04 	str.w	r1, [r4], #4
 800376c:	4602      	mov	r2, r0
 800376e:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8003772:	e884 0003 	stmia.w	r4, {r0, r1}
 8003776:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 800377a:	f102 040c 	add.w	r4, r2, #12
 800377e:	e884 0003 	stmia.w	r4, {r0, r1}
 8003782:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8003786:	695c      	ldr	r4, [r3, #20]
 8003788:	61d1      	str	r1, [r2, #28]
 800378a:	6a19      	ldr	r1, [r3, #32]
 800378c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800378e:	6211      	str	r1, [r2, #32]
 8003790:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8003794:	8493      	strh	r3, [r2, #36]	; 0x24
 8003796:	4610      	mov	r0, r2
 8003798:	bd10      	pop	{r4, pc}
 800379a:	bf00      	nop
 800379c:	08030e08 	.word	0x08030e08

080037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 80037a0:	b538      	push	{r3, r4, r5, lr}
 80037a2:	460d      	mov	r5, r1
 80037a4:	4604      	mov	r4, r0
class Container : public Drawable
 80037a6:	f7ff ffdb 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80037aa:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80037ac:	62a3      	str	r3, [r4, #40]	; 0x28
 80037ae:	4b2b      	ldr	r3, [pc, #172]	; (800385c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 80037b0:	6023      	str	r3, [r4, #0]
 80037b2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80037b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80037b6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80037b8:	6323      	str	r3, [r4, #48]	; 0x30
 80037ba:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80037bc:	6363      	str	r3, [r4, #52]	; 0x34
 80037be:	f105 0138 	add.w	r1, r5, #56	; 0x38
 80037c2:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80037c6:	f7ff ffcb 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80037ca:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80037cc:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 80037ce:	4b24      	ldr	r3, [pc, #144]	; (8003860 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 80037d0:	63a3      	str	r3, [r4, #56]	; 0x38
 80037d2:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 80037d6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80037da:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 80037de:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 80037e2:	f105 0168 	add.w	r1, r5, #104	; 0x68
 80037e6:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80037ea:	f7ff ffb9 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80037ee:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80037f2:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 80037f6:	4b1b      	ldr	r3, [pc, #108]	; (8003864 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 80037f8:	66a3      	str	r3, [r4, #104]	; 0x68
 80037fa:	f105 0194 	add.w	r1, r5, #148	; 0x94
 80037fe:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8003802:	f7ff ffad 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8003806:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 800380a:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 800380e:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8003812:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8003816:	4b14      	ldr	r3, [pc, #80]	; (8003868 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8003818:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800381c:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8003820:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8003824:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8003828:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800382c:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8003830:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8003834:	f7ff ff94 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003838:	4b0c      	ldr	r3, [pc, #48]	; (800386c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 800383a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800383e:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8003842:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8003846:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 800384a:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 800384e:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8003852:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8003856:	4620      	mov	r0, r4
 8003858:	bd38      	pop	{r3, r4, r5, pc}
 800385a:	bf00      	nop
 800385c:	08030620 	.word	0x08030620
 8003860:	080306e4 	.word	0x080306e4
 8003864:	0802e534 	.word	0x0802e534
 8003868:	08030ae0 	.word	0x08030ae0
 800386c:	08030cc4 	.word	0x08030cc4

08003870 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8003870:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8003872:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003876:	4299      	cmp	r1, r3
{
 8003878:	b0c1      	sub	sp, #260	; 0x104
 800387a:	4604      	mov	r4, r0
 800387c:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800387e:	d103      	bne.n	8003888 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003880:	f014 f8e6 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003884:	f001 fe5e 	bl	8005544 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8003888:	f504 731e 	add.w	r3, r4, #632	; 0x278
 800388c:	429d      	cmp	r5, r3
 800388e:	d126      	bne.n	80038de <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x6e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003890:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003894:	4631      	mov	r1, r6
 8003896:	a803      	add	r0, sp, #12
 8003898:	f7ff ff82 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 800389c:	f7fe fc18 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038a0:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80038a2:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038a4:	4668      	mov	r0, sp
 80038a6:	f7fd fbfd 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 80038aa:	eddd 7a01 	vldr	s15, [sp, #4]
 80038ae:	48df      	ldr	r0, [pc, #892]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 80038b0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80038b4:	230c      	movs	r3, #12
 80038b6:	ee17 7a90 	vmov	r7, s15
 80038ba:	ee17 1a90 	vmov	r1, s15
 80038be:	2200      	movs	r2, #0
 80038c0:	f7fd fe68 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 80038c4:	4ada      	ldr	r2, [pc, #872]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 80038c6:	463b      	mov	r3, r7
 80038c8:	210a      	movs	r1, #10
 80038ca:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 80038ce:	f017 fa6d 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80038d2:	4630      	mov	r0, r6
 80038d4:	f015 f9a4 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80038d8:	a803      	add	r0, sp, #12
 80038da:	f00e fa6f 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 80038de:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80038e2:	429d      	cmp	r5, r3
 80038e4:	d126      	bne.n	8003934 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc4>
        SwipeContainer swipeContainer = swipeContainer1;
 80038e6:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80038ea:	4631      	mov	r1, r6
 80038ec:	a803      	add	r0, sp, #12
 80038ee:	f7ff ff57 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 80038f2:	f7fe fbed 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038f6:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80038f8:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80038fa:	4668      	mov	r0, sp
 80038fc:	f7fd fbd2 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8003900:	eddd 7a01 	vldr	s15, [sp, #4]
 8003904:	48c9      	ldr	r0, [pc, #804]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003906:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800390a:	230c      	movs	r3, #12
 800390c:	ee17 7a90 	vmov	r7, s15
 8003910:	ee17 1a90 	vmov	r1, s15
 8003914:	2201      	movs	r2, #1
 8003916:	f7fd fe3d 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 800391a:	4ac5      	ldr	r2, [pc, #788]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 800391c:	463b      	mov	r3, r7
 800391e:	210a      	movs	r1, #10
 8003920:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8003924:	f017 fa42 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003928:	4630      	mov	r0, r6
 800392a:	f015 f979 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800392e:	a803      	add	r0, sp, #12
 8003930:	f00e fa44 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8003934:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003938:	429d      	cmp	r5, r3
 800393a:	d126      	bne.n	800398a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x11a>
        SwipeContainer swipeContainer = swipeContainer1;
 800393c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003940:	4631      	mov	r1, r6
 8003942:	a803      	add	r0, sp, #12
 8003944:	f7ff ff2c 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003948:	f7fe fbc2 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 800394c:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 800394e:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003950:	4668      	mov	r0, sp
 8003952:	f7fd fba7 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8003956:	eddd 7a01 	vldr	s15, [sp, #4]
 800395a:	48b4      	ldr	r0, [pc, #720]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 800395c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003960:	230c      	movs	r3, #12
 8003962:	ee17 7a90 	vmov	r7, s15
 8003966:	ee17 1a90 	vmov	r1, s15
 800396a:	2202      	movs	r2, #2
 800396c:	f7fd fe12 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003970:	4aaf      	ldr	r2, [pc, #700]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003972:	463b      	mov	r3, r7
 8003974:	210a      	movs	r1, #10
 8003976:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800397a:	f017 fa17 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 800397e:	4630      	mov	r0, r6
 8003980:	f015 f94e 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003984:	a803      	add	r0, sp, #12
 8003986:	f00e fa19 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 800398a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800398e:	429d      	cmp	r5, r3
 8003990:	d126      	bne.n	80039e0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x170>
        SwipeContainer swipeContainer = swipeContainer1;
 8003992:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003996:	4631      	mov	r1, r6
 8003998:	a803      	add	r0, sp, #12
 800399a:	f7ff ff01 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 800399e:	f7fe fb97 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039a2:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80039a4:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039a6:	4668      	mov	r0, sp
 80039a8:	f7fd fb7c 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 80039ac:	eddd 7a01 	vldr	s15, [sp, #4]
 80039b0:	489e      	ldr	r0, [pc, #632]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 80039b2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039b6:	230c      	movs	r3, #12
 80039b8:	ee17 7a90 	vmov	r7, s15
 80039bc:	ee17 1a90 	vmov	r1, s15
 80039c0:	2203      	movs	r2, #3
 80039c2:	f7fd fde7 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 80039c6:	4a9a      	ldr	r2, [pc, #616]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 80039c8:	463b      	mov	r3, r7
 80039ca:	210a      	movs	r1, #10
 80039cc:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 80039d0:	f017 f9ec 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039d4:	4630      	mov	r0, r6
 80039d6:	f015 f923 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039da:	a803      	add	r0, sp, #12
 80039dc:	f00e f9ee 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 80039e0:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 80039e4:	429d      	cmp	r5, r3
 80039e6:	d126      	bne.n	8003a36 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c6>
        SwipeContainer swipeContainer = swipeContainer1;
 80039e8:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80039ec:	4631      	mov	r1, r6
 80039ee:	a803      	add	r0, sp, #12
 80039f0:	f7ff fed6 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 80039f4:	f7fe fb6c 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039f8:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 80039fa:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80039fc:	4668      	mov	r0, sp
 80039fe:	f7fd fb51 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8003a02:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a06:	4889      	ldr	r0, [pc, #548]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003a08:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a0c:	230c      	movs	r3, #12
 8003a0e:	ee17 7a90 	vmov	r7, s15
 8003a12:	ee17 1a90 	vmov	r1, s15
 8003a16:	2204      	movs	r2, #4
 8003a18:	f7fd fdbc 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003a1c:	4a84      	ldr	r2, [pc, #528]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003a1e:	463b      	mov	r3, r7
 8003a20:	210a      	movs	r1, #10
 8003a22:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8003a26:	f017 f9c1 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a2a:	4630      	mov	r0, r6
 8003a2c:	f015 f8f8 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a30:	a803      	add	r0, sp, #12
 8003a32:	f00e f9c3 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8003a36:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003a3a:	429d      	cmp	r5, r3
 8003a3c:	d126      	bne.n	8003a8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x21c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a3e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a42:	4631      	mov	r1, r6
 8003a44:	a803      	add	r0, sp, #12
 8003a46:	f7ff feab 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003a4a:	f7fe fb41 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003a4e:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003a50:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003a52:	4668      	mov	r0, sp
 8003a54:	f7fd fb26 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8003a58:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a5c:	4873      	ldr	r0, [pc, #460]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003a5e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a62:	230c      	movs	r3, #12
 8003a64:	ee17 7a90 	vmov	r7, s15
 8003a68:	ee17 1a90 	vmov	r1, s15
 8003a6c:	2205      	movs	r2, #5
 8003a6e:	f7fd fd91 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003a72:	4a6f      	ldr	r2, [pc, #444]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003a74:	463b      	mov	r3, r7
 8003a76:	210a      	movs	r1, #10
 8003a78:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8003a7c:	f017 f996 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a80:	4630      	mov	r0, r6
 8003a82:	f015 f8cd 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a86:	a803      	add	r0, sp, #12
 8003a88:	f00e f998 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8003a8c:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003a90:	429d      	cmp	r5, r3
 8003a92:	d126      	bne.n	8003ae2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x272>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a94:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a98:	4631      	mov	r1, r6
 8003a9a:	a803      	add	r0, sp, #12
 8003a9c:	f7ff fe80 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003aa0:	f7fe fb16 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003aa4:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003aa6:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003aa8:	4668      	mov	r0, sp
 8003aaa:	f7fd fafb 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8003aae:	eddd 7a01 	vldr	s15, [sp, #4]
 8003ab2:	485e      	ldr	r0, [pc, #376]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003ab4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ab8:	230c      	movs	r3, #12
 8003aba:	ee17 7a90 	vmov	r7, s15
 8003abe:	ee17 1a90 	vmov	r1, s15
 8003ac2:	2206      	movs	r2, #6
 8003ac4:	f7fd fd66 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003ac8:	4a59      	ldr	r2, [pc, #356]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003aca:	463b      	mov	r3, r7
 8003acc:	210a      	movs	r1, #10
 8003ace:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8003ad2:	f017 f96b 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ad6:	4630      	mov	r0, r6
 8003ad8:	f015 f8a2 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003adc:	a803      	add	r0, sp, #12
 8003ade:	f00e f96d 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003ae2:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8003ae6:	429d      	cmp	r5, r3
 8003ae8:	d126      	bne.n	8003b38 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c8>
        SwipeContainer swipeContainer = swipeContainer1;
 8003aea:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003aee:	4631      	mov	r1, r6
 8003af0:	a803      	add	r0, sp, #12
 8003af2:	f7ff fe55 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003af6:	f7fe faeb 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003afa:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003afc:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003afe:	4668      	mov	r0, sp
 8003b00:	f7fd fad0 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8003b04:	eddd 7a01 	vldr	s15, [sp, #4]
 8003b08:	4848      	ldr	r0, [pc, #288]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003b0a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b0e:	230c      	movs	r3, #12
 8003b10:	ee17 7a90 	vmov	r7, s15
 8003b14:	ee17 1a90 	vmov	r1, s15
 8003b18:	2207      	movs	r2, #7
 8003b1a:	f7fd fd3b 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003b1e:	4a44      	ldr	r2, [pc, #272]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003b20:	463b      	mov	r3, r7
 8003b22:	210a      	movs	r1, #10
 8003b24:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003b28:	f017 f940 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b2c:	4630      	mov	r0, r6
 8003b2e:	f015 f877 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b32:	a803      	add	r0, sp, #12
 8003b34:	f00e f942 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003b38:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003b3c:	429d      	cmp	r5, r3
 8003b3e:	d126      	bne.n	8003b8e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x31e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b40:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b44:	4631      	mov	r1, r6
 8003b46:	a803      	add	r0, sp, #12
 8003b48:	f7ff fe2a 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003b4c:	f7fe fac0 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003b50:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003b52:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003b54:	4668      	mov	r0, sp
 8003b56:	f7fd faa5 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8003b5a:	eddd 7a01 	vldr	s15, [sp, #4]
 8003b5e:	4833      	ldr	r0, [pc, #204]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003b60:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b64:	230c      	movs	r3, #12
 8003b66:	ee17 7a90 	vmov	r7, s15
 8003b6a:	ee17 1a90 	vmov	r1, s15
 8003b6e:	2208      	movs	r2, #8
 8003b70:	f7fd fd10 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003b74:	4a2e      	ldr	r2, [pc, #184]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003b76:	463b      	mov	r3, r7
 8003b78:	210a      	movs	r1, #10
 8003b7a:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003b7e:	f017 f915 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b82:	4630      	mov	r0, r6
 8003b84:	f015 f84c 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b88:	a803      	add	r0, sp, #12
 8003b8a:	f00e f917 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003b8e:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003b92:	429d      	cmp	r5, r3
 8003b94:	d126      	bne.n	8003be4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b96:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b9a:	4631      	mov	r1, r6
 8003b9c:	a803      	add	r0, sp, #12
 8003b9e:	f7ff fdff 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003ba2:	f7fe fa95 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003ba6:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003ba8:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003baa:	4668      	mov	r0, sp
 8003bac:	f7fd fa7a 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8003bb0:	eddd 7a01 	vldr	s15, [sp, #4]
 8003bb4:	481d      	ldr	r0, [pc, #116]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003bb6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bba:	230c      	movs	r3, #12
 8003bbc:	ee17 7a90 	vmov	r7, s15
 8003bc0:	ee17 1a90 	vmov	r1, s15
 8003bc4:	2209      	movs	r2, #9
 8003bc6:	f7fd fce5 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003bca:	4a19      	ldr	r2, [pc, #100]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003bcc:	463b      	mov	r3, r7
 8003bce:	210a      	movs	r1, #10
 8003bd0:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003bd4:	f017 f8ea 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003bd8:	4630      	mov	r0, r6
 8003bda:	f015 f821 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bde:	a803      	add	r0, sp, #12
 8003be0:	f00e f8ec 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003be4:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003be8:	429d      	cmp	r5, r3
 8003bea:	d12b      	bne.n	8003c44 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d4>
        SwipeContainer swipeContainer = swipeContainer1;
 8003bec:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003bf0:	4631      	mov	r1, r6
 8003bf2:	a803      	add	r0, sp, #12
 8003bf4:	f7ff fdd4 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003bf8:	f7fe fa6a 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003bfc:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003bfe:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003c00:	4668      	mov	r0, sp
 8003c02:	f7fd fa4f 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8003c06:	eddd 7a01 	vldr	s15, [sp, #4]
 8003c0a:	4808      	ldr	r0, [pc, #32]	; (8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3bc>)
 8003c0c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c10:	230c      	movs	r3, #12
 8003c12:	ee17 7a90 	vmov	r7, s15
 8003c16:	ee17 1a90 	vmov	r1, s15
 8003c1a:	220a      	movs	r2, #10
 8003c1c:	f7fd fcba 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003c20:	4a03      	ldr	r2, [pc, #12]	; (8003c30 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c0>)
 8003c22:	463b      	mov	r3, r7
 8003c24:	210a      	movs	r1, #10
 8003c26:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003c2a:	e003      	b.n	8003c34 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c4>
 8003c2c:	081e0000 	.word	0x081e0000
 8003c30:	0802e476 	.word	0x0802e476
 8003c34:	f017 f8ba 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c38:	4630      	mov	r0, r6
 8003c3a:	f014 fff1 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c3e:	a803      	add	r0, sp, #12
 8003c40:	f00e f8bc 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH3)
 8003c44:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003c48:	429d      	cmp	r5, r3
 8003c4a:	d126      	bne.n	8003c9a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x42a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c4c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c50:	4631      	mov	r1, r6
 8003c52:	a803      	add	r0, sp, #12
 8003c54:	f7ff fda4 	bl	80037a0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003c58:	f7fe fa3a 	bl	80020d0 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003c5c:	2101      	movs	r1, #1
        uint32_t* Samples = MEAS_start_measure();
 8003c5e:	4602      	mov	r2, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8003c60:	4668      	mov	r0, sp
 8003c62:	f7fd fa1f 	bl	80010a4 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 8003c66:	eddd 7a01 	vldr	s15, [sp, #4]
 8003c6a:	480d      	ldr	r0, [pc, #52]	; (8003ca0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x430>)
 8003c6c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c70:	230c      	movs	r3, #12
 8003c72:	ee17 5a90 	vmov	r5, s15
 8003c76:	ee17 1a90 	vmov	r1, s15
 8003c7a:	220b      	movs	r2, #11
 8003c7c:	f7fd fc8a 	bl	8001594 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003c80:	4a08      	ldr	r2, [pc, #32]	; (8003ca4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x434>)
 8003c82:	462b      	mov	r3, r5
 8003c84:	210a      	movs	r1, #10
 8003c86:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003c8a:	f017 f88f 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c8e:	4630      	mov	r0, r6
 8003c90:	f014 ffc6 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c94:	a803      	add	r0, sp, #12
 8003c96:	f00e f891 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003c9a:	b041      	add	sp, #260	; 0x104
 8003c9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c9e:	bf00      	nop
 8003ca0:	081e0000 	.word	0x081e0000
 8003ca4:	0802e476 	.word	0x0802e476

08003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003ca8:	0152      	lsls	r2, r2, #5
 8003caa:	0149      	lsls	r1, r1, #5
 8003cac:	f00f bfda 	b.w	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003cb0:	0152      	lsls	r2, r2, #5
 8003cb2:	0149      	lsls	r1, r1, #5
 8003cb4:	f00f bfe1 	b.w	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003cb8:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003cba:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003cbc:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003cc0:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003cc4:	d004      	beq.n	8003cd0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003cc6:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003cca:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003ccc:	f00f bed4 	b.w	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003cd0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003cd4:	4770      	bx	lr
	...

08003cd8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cdc:	ed2d 8b10 	vpush	{d8-d15}
 8003ce0:	4604      	mov	r4, r0
 8003ce2:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003ce4:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003ce6:	2500      	movs	r5, #0
 8003ce8:	f015 fb32 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 8003cec:	4be5      	ldr	r3, [pc, #916]	; (8004084 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003cee:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003cf0:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003cf4:	2226      	movs	r2, #38	; 0x26
 8003cf6:	4629      	mov	r1, r5
 8003cf8:	4648      	mov	r0, r9
 8003cfa:	f029 f84a 	bl	802cd92 <memset>
 8003cfe:	4648      	mov	r0, r9
 8003d00:	f7ff fc9e 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8003d04:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003d08:	26ff      	movs	r6, #255	; 0xff
 8003d0a:	4bdf      	ldr	r3, [pc, #892]	; (8004088 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003d0c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003d0e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003d10:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003d14:	4629      	mov	r1, r5
 8003d16:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003d1a:	4640      	mov	r0, r8
        : color(col)
 8003d1c:	66a5      	str	r5, [r4, #104]	; 0x68
 8003d1e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003d22:	f029 f836 	bl	802cd92 <memset>
 8003d26:	4640      	mov	r0, r8
 8003d28:	f7ff fc8a 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8003d2c:	4bd7      	ldr	r3, [pc, #860]	; (800408c <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003d2e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003d34:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003d38:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003d3c:	ae29      	add	r6, sp, #164	; 0xa4
 8003d3e:	4631      	mov	r1, r6
 8003d40:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003d44:	4640      	mov	r0, r8
 8003d46:	f011 f984 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d4a:	4658      	mov	r0, fp
 8003d4c:	f011 fab8 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d50:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003d54:	4618      	mov	r0, r3
 8003d56:	ee08 3a10 	vmov	s16, r3
 8003d5a:	f00e f95d 	bl	8012018 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003d5e:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003d62:	4618      	mov	r0, r3
 8003d64:	ee08 3a90 	vmov	s17, r3
 8003d68:	f7ff fc58 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003d6c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003d70:	4618      	mov	r0, r3
 8003d72:	9311      	str	r3, [sp, #68]	; 0x44
 8003d74:	f011 f946 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d78:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003d7c:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003d80:	4618      	mov	r0, r3
 8003d82:	9312      	str	r3, [sp, #72]	; 0x48
 8003d84:	f011 f93e 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d88:	4638      	mov	r0, r7
 8003d8a:	f011 f93b 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d8e:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003d92:	4618      	mov	r0, r3
 8003d94:	ee0d 3a90 	vmov	s27, r3
 8003d98:	f7ff fcd6 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d9c:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003da0:	4618      	mov	r0, r3
 8003da2:	ee0e 3a10 	vmov	s28, r3
 8003da6:	f7ff fccf 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003daa:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003dae:	4618      	mov	r0, r3
 8003db0:	ee0e 3a90 	vmov	s29, r3
 8003db4:	f7ff fcc8 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003db8:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003dbc:	4618      	mov	r0, r3
 8003dbe:	ee0a 3a90 	vmov	s21, r3
 8003dc2:	f00f fe39 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8003dc6:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003dca:	4618      	mov	r0, r3
 8003dcc:	931c      	str	r3, [sp, #112]	; 0x70
 8003dce:	f7ff fa3b 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003dd2:	4baf      	ldr	r3, [pc, #700]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003dd4:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003dd8:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ddc:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003de0:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003de4:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003de6:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003dea:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003dee:	9107      	str	r1, [sp, #28]
 8003df0:	f7ff fc8a 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003df4:	4650      	mov	r0, sl
 8003df6:	f7ff fc11 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003dfa:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003dfe:	4608      	mov	r0, r1
 8003e00:	9113      	str	r1, [sp, #76]	; 0x4c
 8003e02:	f011 f8ff 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e06:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003e0a:	4608      	mov	r0, r1
 8003e0c:	9114      	str	r1, [sp, #80]	; 0x50
 8003e0e:	f011 f8f9 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e12:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003e16:	4608      	mov	r0, r1
 8003e18:	9115      	str	r1, [sp, #84]	; 0x54
 8003e1a:	f011 f8f3 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e1e:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003e22:	4608      	mov	r0, r1
 8003e24:	9108      	str	r1, [sp, #32]
 8003e26:	f7ff fc8f 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e2a:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003e2e:	4608      	mov	r0, r1
 8003e30:	9109      	str	r1, [sp, #36]	; 0x24
 8003e32:	f7ff fc89 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e36:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003e3a:	4608      	mov	r0, r1
 8003e3c:	910a      	str	r1, [sp, #40]	; 0x28
 8003e3e:	f7ff fc83 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e42:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003e46:	4608      	mov	r0, r1
 8003e48:	ee0b 1a10 	vmov	s22, r1
 8003e4c:	f00f fdf4 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8003e50:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003e54:	4608      	mov	r0, r1
 8003e56:	911d      	str	r1, [sp, #116]	; 0x74
 8003e58:	f7ff f9f6 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e5c:	4b8c      	ldr	r3, [pc, #560]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e5e:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003e62:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e66:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003e6a:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003e6e:	4608      	mov	r0, r1
 8003e70:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003e74:	ee0f 1a10 	vmov	s30, r1
 8003e78:	f7ff fc46 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003e7c:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003e80:	4608      	mov	r0, r1
 8003e82:	ee09 1a10 	vmov	s18, r1
 8003e86:	f7ff fbc9 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003e8a:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003e8e:	4608      	mov	r0, r1
 8003e90:	9116      	str	r1, [sp, #88]	; 0x58
 8003e92:	f011 f8b7 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e96:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003e9a:	4608      	mov	r0, r1
 8003e9c:	9117      	str	r1, [sp, #92]	; 0x5c
 8003e9e:	f011 f8b1 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ea2:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 8003ea6:	4608      	mov	r0, r1
 8003ea8:	9118      	str	r1, [sp, #96]	; 0x60
 8003eaa:	f011 f8ab 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003eae:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8003eb2:	4608      	mov	r0, r1
 8003eb4:	910b      	str	r1, [sp, #44]	; 0x2c
 8003eb6:	f7ff fc47 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003eba:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003ebe:	4608      	mov	r0, r1
 8003ec0:	910c      	str	r1, [sp, #48]	; 0x30
 8003ec2:	f7ff fc41 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ec6:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003eca:	4608      	mov	r0, r1
 8003ecc:	910d      	str	r1, [sp, #52]	; 0x34
 8003ece:	f7ff fc3b 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ed2:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8003ed6:	4608      	mov	r0, r1
 8003ed8:	ee0b 1a90 	vmov	s23, r1
 8003edc:	f00f fdac 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8003ee0:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003ee4:	4608      	mov	r0, r1
 8003ee6:	911e      	str	r1, [sp, #120]	; 0x78
 8003ee8:	f7ff f9ae 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003eec:	4b68      	ldr	r3, [pc, #416]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003eee:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003ef2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ef6:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003efa:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003efe:	4608      	mov	r0, r1
 8003f00:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003f04:	ee0f 1a90 	vmov	s31, r1
 8003f08:	f7ff fbfe 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003f0c:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003f10:	4608      	mov	r0, r1
 8003f12:	ee09 1a90 	vmov	s19, r1
 8003f16:	f7ff fb81 	bl	800361c <_ZN8touchgfx9ContainerC1Ev>
 8003f1a:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003f1e:	4608      	mov	r0, r1
 8003f20:	9119      	str	r1, [sp, #100]	; 0x64
 8003f22:	f011 f86f 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f26:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003f2a:	4608      	mov	r0, r1
 8003f2c:	911a      	str	r1, [sp, #104]	; 0x68
 8003f2e:	f011 f869 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f32:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8003f36:	4608      	mov	r0, r1
 8003f38:	911b      	str	r1, [sp, #108]	; 0x6c
 8003f3a:	f011 f863 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f3e:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 8003f42:	4608      	mov	r0, r1
 8003f44:	910e      	str	r1, [sp, #56]	; 0x38
 8003f46:	f7ff fbff 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f4a:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 8003f4e:	4608      	mov	r0, r1
 8003f50:	910f      	str	r1, [sp, #60]	; 0x3c
 8003f52:	f7ff fbf9 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f56:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 8003f5a:	4608      	mov	r0, r1
 8003f5c:	9110      	str	r1, [sp, #64]	; 0x40
 8003f5e:	f7ff fbf3 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f62:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 8003f66:	4608      	mov	r0, r1
 8003f68:	ee0c 1a10 	vmov	s24, r1
 8003f6c:	f00f fd64 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8003f70:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 8003f74:	4608      	mov	r0, r1
 8003f76:	911f      	str	r1, [sp, #124]	; 0x7c
 8003f78:	f7ff f966 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f7c:	4b44      	ldr	r3, [pc, #272]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003f7e:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 8003f82:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003f86:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 8003f8a:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8003f8e:	4608      	mov	r0, r1
 8003f90:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8003f94:	9103      	str	r1, [sp, #12]
 8003f96:	f7ff fbb7 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003f9a:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003f9e:	4608      	mov	r0, r1
 8003fa0:	ee0c 1a90 	vmov	s25, r1
 8003fa4:	f00f fd48 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8003fa8:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003fac:	4608      	mov	r0, r1
 8003fae:	9120      	str	r1, [sp, #128]	; 0x80
 8003fb0:	f7ff f94a 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fb4:	4b36      	ldr	r3, [pc, #216]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fb6:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8003fba:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fbe:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8003fc2:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 8003fc6:	4608      	mov	r0, r1
 8003fc8:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003fcc:	9104      	str	r1, [sp, #16]
 8003fce:	f7ff fb9b 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8003fd2:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 8003fd6:	4608      	mov	r0, r1
 8003fd8:	ee0d 1a10 	vmov	s26, r1
 8003fdc:	f00f fd2c 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8003fe0:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8003fe4:	4608      	mov	r0, r1
 8003fe6:	9121      	str	r1, [sp, #132]	; 0x84
 8003fe8:	f7ff f92e 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fec:	4b28      	ldr	r3, [pc, #160]	; (8004090 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fee:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8003ff2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ff6:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8003ffa:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8003ffe:	4618      	mov	r0, r3
 8004000:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8004004:	9305      	str	r3, [sp, #20]
 8004006:	f7ff fb7f 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800400a:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 800400e:	4618      	mov	r0, r3
 8004010:	9306      	str	r3, [sp, #24]
 8004012:	f7ff fb79 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004016:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800401a:	4a1e      	ldr	r2, [pc, #120]	; (8004094 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 800401c:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8004020:	4a1d      	ldr	r2, [pc, #116]	; (8004098 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8004022:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 8004026:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 800402a:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800402e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004032:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 8004036:	f011 ffff 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800403a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800403e:	462a      	mov	r2, r5
 8004040:	4648      	mov	r0, r9
 8004042:	9300      	str	r3, [sp, #0]
 8004044:	4629      	mov	r1, r5
 8004046:	23f0      	movs	r3, #240	; 0xf0
 8004048:	f7ff fad5 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800404c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004050:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8004052:	1d23      	adds	r3, r4, #4
 8004054:	4618      	mov	r0, r3
 8004056:	4649      	mov	r1, r9
 8004058:	ee0a 3a10 	vmov	s20, r3
 800405c:	f00d fc20 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004060:	462a      	mov	r2, r5
 8004062:	4640      	mov	r0, r8
 8004064:	4629      	mov	r1, r5
 8004066:	f7ff fab9 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800406a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800406c:	4640      	mov	r0, r8
 800406e:	4631      	mov	r1, r6
 8004070:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004074:	f010 ffed 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004078:	4641      	mov	r1, r8
 800407a:	ee1a 0a10 	vmov	r0, s20
 800407e:	f00d fc0f 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004082:	e00b      	b.n	800409c <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 8004084:	0802e66c 	.word	0x0802e66c
 8004088:	08030a78 	.word	0x08030a78
 800408c:	08030cc4 	.word	0x08030cc4
 8004090:	080307ac 	.word	0x080307ac
 8004094:	0802e654 	.word	0x0802e654
 8004098:	08003871 	.word	0x08003871
    buttonWithLabel3.setXY(33, 257);
 800409c:	4658      	mov	r0, fp
 800409e:	f240 1201 	movw	r2, #257	; 0x101
 80040a2:	2121      	movs	r1, #33	; 0x21
 80040a4:	f7ff fa9a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80040a8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80040aa:	4632      	mov	r2, r6
 80040ac:	a928      	add	r1, sp, #160	; 0xa0
 80040ae:	4658      	mov	r0, fp
 80040b0:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80040b4:	2302      	movs	r3, #2
 80040b6:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80040ba:	f010 fdd4 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80040be:	2325      	movs	r3, #37	; 0x25
        updateTextPosition();
 80040c0:	4658      	mov	r0, fp
 80040c2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80040c6:	f7ff facd 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80040ca:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80040ce:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 80040d2:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 80040d6:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80040d8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80040dc:	4659      	mov	r1, fp
 80040de:	ee1a 0a10 	vmov	r0, s20
 80040e2:	9302      	str	r3, [sp, #8]
 80040e4:	f00d fbdc 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 80040e8:	ee18 0a10 	vmov	r0, s16
 80040ec:	2255      	movs	r2, #85	; 0x55
 80040ee:	4629      	mov	r1, r5
 80040f0:	f7ff fa74 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80040f4:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 80040f6:	ee18 0a10 	vmov	r0, s16
 80040fa:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80040fe:	4632      	mov	r2, r6
 8004100:	2307      	movs	r3, #7
 8004102:	a928      	add	r1, sp, #160	; 0xa0
 8004104:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004108:	f00e f824 	bl	8012154 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 800410c:	228c      	movs	r2, #140	; 0x8c
 800410e:	ee18 0a10 	vmov	r0, s16
 8004112:	2150      	movs	r1, #80	; 0x50
 8004114:	f00d fecc 	bl	8011eb0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8004118:	ee18 0a10 	vmov	r0, s16
 800411c:	2132      	movs	r1, #50	; 0x32
 800411e:	f00d fe4a 	bl	8011db6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8004122:	ee18 0a10 	vmov	r0, s16
 8004126:	2132      	movs	r1, #50	; 0x32
 8004128:	f00d fec0 	bl	8011eac <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 800412c:	4b47      	ldr	r3, [pc, #284]	; (800424c <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 800412e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004130:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8004134:	2261      	movs	r2, #97	; 0x61
 8004136:	21c2      	movs	r1, #194	; 0xc2
 8004138:	f7ff fa50 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800413c:	f04f 0809 	mov.w	r8, #9
 8004140:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004144:	aa27      	add	r2, sp, #156	; 0x9c
 8004146:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004148:	9600      	str	r6, [sp, #0]
 800414a:	ab28      	add	r3, sp, #160	; 0xa0
 800414c:	a926      	add	r1, sp, #152	; 0x98
 800414e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004152:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004156:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800415a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800415e:	f010 febc 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004162:	9b02      	ldr	r3, [sp, #8]
 8004164:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 8004168:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800416a:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 800416e:	ee18 0a90 	vmov	r0, s17
 8004172:	f00d fb95 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 8004176:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004178:	223d      	movs	r2, #61	; 0x3d
 800417a:	21c2      	movs	r1, #194	; 0xc2
 800417c:	f7ff fa2e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004180:	aa27      	add	r2, sp, #156	; 0x9c
 8004182:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004184:	9600      	str	r6, [sp, #0]
 8004186:	ab28      	add	r3, sp, #160	; 0xa0
 8004188:	a926      	add	r1, sp, #152	; 0x98
 800418a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800418e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004192:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004196:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800419a:	f010 fe9e 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800419e:	9b02      	ldr	r3, [sp, #8]
 80041a0:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80041a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80041a6:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 80041aa:	ee18 0a90 	vmov	r0, s17
 80041ae:	f00d fb77 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 80041b2:	4638      	mov	r0, r7
 80041b4:	2219      	movs	r2, #25
 80041b6:	21c2      	movs	r1, #194	; 0xc2
 80041b8:	f7ff fa10 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80041bc:	aa27      	add	r2, sp, #156	; 0x9c
 80041be:	4638      	mov	r0, r7
 80041c0:	ab28      	add	r3, sp, #160	; 0xa0
 80041c2:	a926      	add	r1, sp, #152	; 0x98
 80041c4:	9600      	str	r6, [sp, #0]
 80041c6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80041ca:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80041ce:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80041d2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80041d6:	f010 fe80 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80041da:	9b02      	ldr	r3, [sp, #8]
 80041dc:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 80041e0:	4639      	mov	r1, r7
 80041e2:	ee18 0a90 	vmov	r0, s17
 80041e6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80041ea:	f00d fb59 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 80041ee:	2268      	movs	r2, #104	; 0x68
 80041f0:	ee1d 0a90 	vmov	r0, s27
 80041f4:	210a      	movs	r1, #10
 80041f6:	f7ff f9f1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80041fa:	f04f 33ff 	mov.w	r3, #4294967295
 80041fe:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 8004202:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8004206:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 800420a:	af22      	add	r7, sp, #136	; 0x88
 800420c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004210:	ee1d 1a90 	vmov	r1, s27
 8004214:	4638      	mov	r0, r7
 8004216:	4798      	blx	r3
 8004218:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800421c:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8004220:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004224:	4b0a      	ldr	r3, [pc, #40]	; (8004250 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 8004226:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8004228:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 800422c:	b92b      	cbnz	r3, 800423a <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 800422e:	4b09      	ldr	r3, [pc, #36]	; (8004254 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8004230:	4a09      	ldr	r2, [pc, #36]	; (8004258 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004232:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004234:	4809      	ldr	r0, [pc, #36]	; (800425c <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 8004236:	f028 fba7 	bl	802c988 <__assert_func>
 800423a:	4b09      	ldr	r3, [pc, #36]	; (8004260 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 800423c:	881b      	ldrh	r3, [r3, #0]
 800423e:	2b10      	cmp	r3, #16
 8004240:	d812      	bhi.n	8004268 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 8004242:	4b08      	ldr	r3, [pc, #32]	; (8004264 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 8004244:	4a04      	ldr	r2, [pc, #16]	; (8004258 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004246:	2161      	movs	r1, #97	; 0x61
 8004248:	e7f4      	b.n	8004234 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 800424a:	bf00      	nop
 800424c:	00ac00f0 	.word	0x00ac00f0
 8004250:	200138a4 	.word	0x200138a4
 8004254:	0802e374 	.word	0x0802e374
 8004258:	0802e479 	.word	0x0802e479
 800425c:	0802e3f1 	.word	0x0802e3f1
 8004260:	200138a8 	.word	0x200138a8
 8004264:	0802e438 	.word	0x0802e438
        return texts->getText(typedTextId);
 8004268:	4bdb      	ldr	r3, [pc, #876]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800426a:	2110      	movs	r1, #16
 800426c:	6818      	ldr	r0, [r3, #0]
 800426e:	f005 fa3b 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8004272:	4ada      	ldr	r2, [pc, #872]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004274:	4603      	mov	r3, r0
 8004276:	210a      	movs	r1, #10
 8004278:	4648      	mov	r0, r9
 800427a:	f016 fd97 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 800427e:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 8004282:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 8004286:	f010 f913 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800428a:	4bd5      	ldr	r3, [pc, #852]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800428c:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 800428e:	ee1d 0a90 	vmov	r0, s27
 8004292:	2311      	movs	r3, #17
 8004294:	4631      	mov	r1, r6
 8004296:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800429a:	f010 f929 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 800429e:	ee1d 1a90 	vmov	r1, s27
 80042a2:	ee18 0a90 	vmov	r0, s17
 80042a6:	f00d fafb 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80042aa:	ee1e 0a10 	vmov	r0, s28
 80042ae:	2244      	movs	r2, #68	; 0x44
 80042b0:	2116      	movs	r1, #22
 80042b2:	f7ff f993 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80042b6:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 80042ba:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 80042be:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80042c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80042c6:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 80042ca:	ee1e 1a10 	vmov	r1, s28
 80042ce:	4638      	mov	r0, r7
 80042d0:	4798      	blx	r3
 80042d2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80042d6:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 80042da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80042de:	4ac1      	ldr	r2, [pc, #772]	; (80045e4 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80042e0:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 80042e2:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	d0a1      	beq.n	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80042ea:	4abf      	ldr	r2, [pc, #764]	; (80045e8 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80042ec:	8813      	ldrh	r3, [r2, #0]
 80042ee:	2b12      	cmp	r3, #18
 80042f0:	d9a7      	bls.n	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80042f2:	48b9      	ldr	r0, [pc, #740]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80042f4:	2112      	movs	r1, #18
 80042f6:	6800      	ldr	r0, [r0, #0]
 80042f8:	f005 f9f6 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 80042fc:	4ab7      	ldr	r2, [pc, #732]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80042fe:	4603      	mov	r3, r0
 8004300:	210a      	movs	r1, #10
 8004302:	4648      	mov	r0, r9
 8004304:	f016 fd52 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8004308:	ee1e 0a10 	vmov	r0, s28
 800430c:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 8004310:	f010 f8ce 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004314:	4bb2      	ldr	r3, [pc, #712]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004316:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004318:	ee1e 0a10 	vmov	r0, s28
 800431c:	2313      	movs	r3, #19
 800431e:	4631      	mov	r1, r6
 8004320:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004324:	f010 f8e4 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8004328:	ee1e 1a10 	vmov	r1, s28
 800432c:	ee18 0a90 	vmov	r0, s17
 8004330:	f00d fab6 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8004334:	2220      	movs	r2, #32
 8004336:	ee1e 0a90 	vmov	r0, s29
 800433a:	2116      	movs	r1, #22
 800433c:	f7ff f94e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004340:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8004344:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8004348:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800434c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004350:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8004354:	4638      	mov	r0, r7
 8004356:	ee1e 1a90 	vmov	r1, s29
 800435a:	4798      	blx	r3
 800435c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004360:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8004364:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004368:	499e      	ldr	r1, [pc, #632]	; (80045e4 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 800436a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 800436c:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 8004370:	2b00      	cmp	r3, #0
 8004372:	f43f af5c 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004376:	4a9c      	ldr	r2, [pc, #624]	; (80045e8 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004378:	8813      	ldrh	r3, [r2, #0]
 800437a:	2b14      	cmp	r3, #20
 800437c:	f67f af61 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004380:	4895      	ldr	r0, [pc, #596]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8004382:	2114      	movs	r1, #20
 8004384:	6800      	ldr	r0, [r0, #0]
 8004386:	f005 f9af 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 800438a:	4a94      	ldr	r2, [pc, #592]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800438c:	4603      	mov	r3, r0
 800438e:	210a      	movs	r1, #10
 8004390:	4648      	mov	r0, r9
 8004392:	f016 fd0b 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 8004396:	ee1e 0a90 	vmov	r0, s29
 800439a:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 800439e:	f010 f887 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80043a2:	4b8f      	ldr	r3, [pc, #572]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80043a4:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043a6:	ee1e 0a90 	vmov	r0, s29
 80043aa:	231b      	movs	r3, #27
 80043ac:	4631      	mov	r1, r6
 80043ae:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 80043b2:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043b6:	f010 f89b 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 80043ba:	ee1e 1a90 	vmov	r1, s29
 80043be:	ee18 0a90 	vmov	r0, s17
 80043c2:	f00d fa6d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 80043c6:	23f0      	movs	r3, #240	; 0xf0
 80043c8:	ee1a 0a90 	vmov	r0, s21
 80043cc:	220f      	movs	r2, #15
 80043ce:	4629      	mov	r1, r5
 80043d0:	f8cd 9000 	str.w	r9, [sp]
 80043d4:	f7ff f90f 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043d8:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 80043dc:	991c      	ldr	r1, [sp, #112]	; 0x70
 80043de:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 80043e2:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80043e4:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 80043e8:	ee1a 0a90 	vmov	r0, s21
 80043ec:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 80043f0:	4611      	mov	r1, r2
 80043f2:	f7ff fc59 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 80043f6:	2205      	movs	r2, #5
 80043f8:	ee1a 0a90 	vmov	r0, s21
 80043fc:	21eb      	movs	r1, #235	; 0xeb
 80043fe:	f7ff fc57 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8004402:	ee1a 0a90 	vmov	r0, s21
 8004406:	4659      	mov	r1, fp
 8004408:	f7ff fc56 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800440c:	ee1a 0a90 	vmov	r0, s21
 8004410:	4659      	mov	r1, fp
 8004412:	f00f fc3d 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8004416:	ee1a 1a90 	vmov	r1, s21
 800441a:	ee18 0a90 	vmov	r0, s17
 800441e:	f00d fa3f 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8004422:	462a      	mov	r2, r5
 8004424:	9807      	ldr	r0, [sp, #28]
 8004426:	2160      	movs	r1, #96	; 0x60
 8004428:	f7ff f8d8 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800442c:	f04f 3eff 	mov.w	lr, #4294967295
 8004430:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 8004434:	4638      	mov	r0, r7
 8004436:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 8004438:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 800443c:	f00f fdbe 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004440:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004444:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 8004448:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800444c:	4b64      	ldr	r3, [pc, #400]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 800444e:	9807      	ldr	r0, [sp, #28]
 8004450:	9329      	str	r3, [sp, #164]	; 0xa4
 8004452:	4631      	mov	r1, r6
 8004454:	230f      	movs	r3, #15
 8004456:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800445a:	f010 f849 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 800445e:	9907      	ldr	r1, [sp, #28]
 8004460:	ee18 0a90 	vmov	r0, s17
 8004464:	f00d fa1c 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 8004468:	ee18 1a90 	vmov	r1, s17
 800446c:	ee18 0a10 	vmov	r0, s16
 8004470:	f00d fef9 	bl	8012266 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004474:	4b5d      	ldr	r3, [pc, #372]	; (80045ec <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 8004476:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004478:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 800447c:	2261      	movs	r2, #97	; 0x61
 800447e:	21c2      	movs	r1, #194	; 0xc2
 8004480:	f7ff f8ac 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004484:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004488:	4673      	mov	r3, lr
 800448a:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800448e:	4672      	mov	r2, lr
 8004490:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004494:	4671      	mov	r1, lr
 8004496:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004498:	9600      	str	r6, [sp, #0]
 800449a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800449e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80044a2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80044a6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80044aa:	f010 fd16 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80044ae:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80044b0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80044b2:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 80044b6:	4650      	mov	r0, sl
 80044b8:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 80044bc:	f00d f9f0 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 80044c0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80044c2:	223d      	movs	r2, #61	; 0x3d
 80044c4:	21c2      	movs	r1, #194	; 0xc2
 80044c6:	f7ff f889 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80044ca:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80044ce:	4673      	mov	r3, lr
 80044d0:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80044d4:	4672      	mov	r2, lr
 80044d6:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80044da:	4671      	mov	r1, lr
 80044dc:	9814      	ldr	r0, [sp, #80]	; 0x50
 80044de:	9600      	str	r6, [sp, #0]
 80044e0:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80044e4:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80044e8:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80044ec:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80044f0:	f010 fcf3 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80044f4:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 80044f6:	9914      	ldr	r1, [sp, #80]	; 0x50
 80044f8:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 80044fc:	4650      	mov	r0, sl
 80044fe:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8004502:	f00d f9cd 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8004506:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004508:	2219      	movs	r2, #25
 800450a:	21c2      	movs	r1, #194	; 0xc2
 800450c:	f7ff f866 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004510:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004514:	4673      	mov	r3, lr
 8004516:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800451a:	4672      	mov	r2, lr
 800451c:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004520:	4671      	mov	r1, lr
 8004522:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004524:	9600      	str	r6, [sp, #0]
 8004526:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800452a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800452e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004532:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004536:	f010 fcd0 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800453a:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 800453c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800453e:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 8004542:	4650      	mov	r0, sl
 8004544:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 8004548:	f00d f9aa 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 800454c:	2268      	movs	r2, #104	; 0x68
 800454e:	4649      	mov	r1, r9
 8004550:	9808      	ldr	r0, [sp, #32]
 8004552:	f7ff f843 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004556:	f04f 3eff 	mov.w	lr, #4294967295
 800455a:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 800455e:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 8004562:	4630      	mov	r0, r6
 8004564:	f7ff f8c2 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004568:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800456c:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 8004570:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004574:	491b      	ldr	r1, [pc, #108]	; (80045e4 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004576:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 8004578:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 800457c:	2b00      	cmp	r3, #0
 800457e:	f43f ae56 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004582:	4a19      	ldr	r2, [pc, #100]	; (80045e8 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004584:	8813      	ldrh	r3, [r2, #0]
 8004586:	2b19      	cmp	r3, #25
 8004588:	f67f ae5b 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800458c:	4812      	ldr	r0, [pc, #72]	; (80045d8 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800458e:	2119      	movs	r1, #25
 8004590:	6800      	ldr	r0, [r0, #0]
 8004592:	f005 f8a9 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8004596:	4a11      	ldr	r2, [pc, #68]	; (80045dc <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004598:	4603      	mov	r3, r0
 800459a:	4649      	mov	r1, r9
 800459c:	4638      	mov	r0, r7
 800459e:	f016 fc05 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80045a2:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 80045a4:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 80045a8:	f00f ff82 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80045ac:	4f0c      	ldr	r7, [pc, #48]	; (80045e0 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 80045ae:	9808      	ldr	r0, [sp, #32]
 80045b0:	9729      	str	r7, [sp, #164]	; 0xa4
 80045b2:	231a      	movs	r3, #26
 80045b4:	4631      	mov	r1, r6
 80045b6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80045ba:	f00f ff99 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 80045be:	9908      	ldr	r1, [sp, #32]
 80045c0:	4650      	mov	r0, sl
 80045c2:	f00d f96d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 80045c6:	2244      	movs	r2, #68	; 0x44
 80045c8:	2116      	movs	r1, #22
 80045ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80045cc:	f7ff f806 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80045d0:	f04f 33ff 	mov.w	r3, #4294967295
 80045d4:	e00c      	b.n	80045f0 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 80045d6:	bf00      	nop
 80045d8:	200138b0 	.word	0x200138b0
 80045dc:	0802e4b1 	.word	0x0802e4b1
 80045e0:	0802e524 	.word	0x0802e524
 80045e4:	200138a4 	.word	0x200138a4
 80045e8:	200138a8 	.word	0x200138a8
 80045ec:	00ac00f0 	.word	0x00ac00f0
 80045f0:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 80045f4:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 80045f8:	4630      	mov	r0, r6
 80045fa:	f7ff f877 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80045fe:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004602:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8004606:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800460a:	49da      	ldr	r1, [pc, #872]	; (8004974 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 800460c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 800460e:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8004612:	2b00      	cmp	r3, #0
 8004614:	f43f ae0b 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004618:	4ad7      	ldr	r2, [pc, #860]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800461a:	8813      	ldrh	r3, [r2, #0]
 800461c:	2b17      	cmp	r3, #23
 800461e:	f67f ae10 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004622:	48d6      	ldr	r0, [pc, #856]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004624:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8004974 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 8004628:	6800      	ldr	r0, [r0, #0]
 800462a:	2117      	movs	r1, #23
 800462c:	f005 f85c 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8004630:	4ad3      	ldr	r2, [pc, #844]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004632:	4603      	mov	r3, r0
 8004634:	4649      	mov	r1, r9
 8004636:	4628      	mov	r0, r5
 8004638:	f016 fbb8 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 800463c:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 800463e:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8004642:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8004644:	f00f ff34 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004648:	2318      	movs	r3, #24
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 800464a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800464c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004650:	4629      	mov	r1, r5
 8004652:	9729      	str	r7, [sp, #164]	; 0xa4
 8004654:	f00f ff4c 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8004658:	9909      	ldr	r1, [sp, #36]	; 0x24
 800465a:	4650      	mov	r0, sl
 800465c:	f00d f920 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004660:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8004664:	2220      	movs	r2, #32
 8004666:	2116      	movs	r1, #22
 8004668:	980a      	ldr	r0, [sp, #40]	; 0x28
 800466a:	f7fe ffb7 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800466e:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8004672:	2600      	movs	r6, #0
 8004674:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8004678:	4628      	mov	r0, r5
 800467a:	f7ff f837 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800467e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004682:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8004686:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800468a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 800468e:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8004692:	2b00      	cmp	r3, #0
 8004694:	f43f adcb 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004698:	4ab7      	ldr	r2, [pc, #732]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800469a:	8813      	ldrh	r3, [r2, #0]
 800469c:	2b16      	cmp	r3, #22
 800469e:	f67f add0 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80046a2:	48b6      	ldr	r0, [pc, #728]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80046a4:	2116      	movs	r1, #22
 80046a6:	6800      	ldr	r0, [r0, #0]
 80046a8:	f005 f81e 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 80046ac:	4ab4      	ldr	r2, [pc, #720]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80046ae:	4603      	mov	r3, r0
 80046b0:	4649      	mov	r1, r9
 80046b2:	4638      	mov	r0, r7
 80046b4:	f016 fb7a 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 80046b8:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 80046ba:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 80046be:	f00f fef7 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80046c2:	4fb0      	ldr	r7, [pc, #704]	; (8004984 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80046c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80046c6:	9729      	str	r7, [sp, #164]	; 0xa4
 80046c8:	f04f 0e1b 	mov.w	lr, #27
 80046cc:	4629      	mov	r1, r5
 80046ce:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80046d2:	f00f ff0d 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 80046d6:	4650      	mov	r0, sl
 80046d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80046da:	f00d f8e1 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 80046de:	ee1b 0a10 	vmov	r0, s22
 80046e2:	23f0      	movs	r3, #240	; 0xf0
 80046e4:	220f      	movs	r2, #15
 80046e6:	4631      	mov	r1, r6
 80046e8:	f8cd 9000 	str.w	r9, [sp]
 80046ec:	f7fe ff83 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046f0:	f04f 33ff 	mov.w	r3, #4294967295
 80046f4:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 80046f8:	2205      	movs	r2, #5
 80046fa:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 80046fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004700:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8004704:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 8004708:	4611      	mov	r1, r2
 800470a:	ee1b 0a10 	vmov	r0, s22
 800470e:	f7ff facb 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8004712:	2205      	movs	r2, #5
 8004714:	ee1b 0a10 	vmov	r0, s22
 8004718:	21eb      	movs	r1, #235	; 0xeb
 800471a:	f7ff fac9 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 800471e:	ee1b 0a10 	vmov	r0, s22
 8004722:	2101      	movs	r1, #1
 8004724:	f7ff fac8 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004728:	ee1b 0a10 	vmov	r0, s22
 800472c:	2101      	movs	r1, #1
 800472e:	f00f faaf 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8004732:	4650      	mov	r0, sl
 8004734:	ee1b 1a10 	vmov	r1, s22
 8004738:	f00d f8b2 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 800473c:	4632      	mov	r2, r6
 800473e:	ee1f 0a10 	vmov	r0, s30
 8004742:	215c      	movs	r1, #92	; 0x5c
 8004744:	f7fe ff4a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004748:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800474c:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004750:	4660      	mov	r0, ip
 8004752:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8004756:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 800475a:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 800475e:	f00f fc2d 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004762:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004766:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 800476a:	ee1f 3a10 	vmov	r3, s30
 800476e:	333c      	adds	r3, #60	; 0x3c
 8004770:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004774:	2315      	movs	r3, #21
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8004776:	ee1f 0a10 	vmov	r0, s30
 800477a:	4629      	mov	r1, r5
 800477c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004780:	9729      	str	r7, [sp, #164]	; 0xa4
 8004782:	f00f feb5 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8004786:	4650      	mov	r0, sl
 8004788:	ee1f 1a10 	vmov	r1, s30
 800478c:	f00d f888 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8004790:	4651      	mov	r1, sl
 8004792:	ee18 0a10 	vmov	r0, s16
 8004796:	f00d fd66 	bl	8012266 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 800479a:	497b      	ldr	r1, [pc, #492]	; (8004988 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 800479c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800479e:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 80047a2:	2261      	movs	r2, #97	; 0x61
 80047a4:	21c2      	movs	r1, #194	; 0xc2
 80047a6:	f7fe ff19 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80047aa:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80047ae:	4663      	mov	r3, ip
 80047b0:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80047b4:	4662      	mov	r2, ip
 80047b6:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 80047ba:	2709      	movs	r7, #9
 80047bc:	4661      	mov	r1, ip
 80047be:	f04f 0801 	mov.w	r8, #1
 80047c2:	9816      	ldr	r0, [sp, #88]	; 0x58
 80047c4:	9500      	str	r5, [sp, #0]
 80047c6:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80047ca:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80047ce:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80047d2:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80047d6:	f010 fb80 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80047da:	9b02      	ldr	r3, [sp, #8]
 80047dc:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 80047e0:	9916      	ldr	r1, [sp, #88]	; 0x58
 80047e2:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 80047e6:	ee19 0a10 	vmov	r0, s18
 80047ea:	f00d f859 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 80047ee:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80047f0:	223d      	movs	r2, #61	; 0x3d
 80047f2:	21c2      	movs	r1, #194	; 0xc2
 80047f4:	f7fe fef2 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80047f8:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80047fc:	4663      	mov	r3, ip
 80047fe:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004802:	4662      	mov	r2, ip
 8004804:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004808:	4661      	mov	r1, ip
 800480a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800480c:	9500      	str	r5, [sp, #0]
 800480e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004812:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004816:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800481a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 800481e:	f010 fb5c 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004822:	9b02      	ldr	r3, [sp, #8]
 8004824:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8004828:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800482a:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 800482e:	ee19 0a10 	vmov	r0, s18
 8004832:	f00d f835 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8004836:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004838:	2219      	movs	r2, #25
 800483a:	21c2      	movs	r1, #194	; 0xc2
 800483c:	f7fe fece 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004840:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8004844:	4663      	mov	r3, ip
 8004846:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 800484a:	4662      	mov	r2, ip
 800484c:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004850:	4661      	mov	r1, ip
 8004852:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004854:	9500      	str	r5, [sp, #0]
 8004856:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800485a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800485e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004862:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004866:	f010 fb38 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800486a:	9b02      	ldr	r3, [sp, #8]
 800486c:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8004870:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004872:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8004876:	ee19 0a10 	vmov	r0, s18
 800487a:	f00d f811 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 800487e:	2268      	movs	r2, #104	; 0x68
 8004880:	4649      	mov	r1, r9
 8004882:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004884:	f7fe feaa 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004888:	f04f 3cff 	mov.w	ip, #4294967295
 800488c:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8004890:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8004894:	4628      	mov	r0, r5
 8004896:	f7fe ff29 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800489a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800489e:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 80048a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048a6:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 80048aa:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	f43f acbd 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048b4:	4a30      	ldr	r2, [pc, #192]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80048b6:	8813      	ldrh	r3, [r2, #0]
 80048b8:	2b0e      	cmp	r3, #14
 80048ba:	f67f acc2 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80048be:	482f      	ldr	r0, [pc, #188]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80048c0:	210e      	movs	r1, #14
 80048c2:	6800      	ldr	r0, [r0, #0]
 80048c4:	f004 ff10 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 80048c8:	4a2d      	ldr	r2, [pc, #180]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80048ca:	4603      	mov	r3, r0
 80048cc:	4649      	mov	r1, r9
 80048ce:	4650      	mov	r0, sl
 80048d0:	f016 fa6c 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 80048d4:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 80048d6:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 80048da:	f00f fde9 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80048de:	4b29      	ldr	r3, [pc, #164]	; (8004984 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80048e0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048e2:	9329      	str	r3, [sp, #164]	; 0xa4
 80048e4:	4629      	mov	r1, r5
 80048e6:	2311      	movs	r3, #17
 80048e8:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80048ec:	f00f fe00 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 80048f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80048f2:	ee19 0a10 	vmov	r0, s18
 80048f6:	f00c ffd3 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 80048fa:	2244      	movs	r2, #68	; 0x44
 80048fc:	2116      	movs	r1, #22
 80048fe:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004900:	f7fe fe6c 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004904:	f04f 3cff 	mov.w	ip, #4294967295
 8004908:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 800490c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8004910:	4628      	mov	r0, r5
 8004912:	f7fe feeb 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004916:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800491a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 800491e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004922:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8004926:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 800492a:	2b00      	cmp	r3, #0
 800492c:	f43f ac7f 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004930:	4a11      	ldr	r2, [pc, #68]	; (8004978 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004932:	8813      	ldrh	r3, [r2, #0]
 8004934:	2b0d      	cmp	r3, #13
 8004936:	f67f ac84 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800493a:	4810      	ldr	r0, [pc, #64]	; (800497c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 800493c:	210d      	movs	r1, #13
 800493e:	6800      	ldr	r0, [r0, #0]
 8004940:	f004 fed2 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8004944:	4a0e      	ldr	r2, [pc, #56]	; (8004980 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004946:	4603      	mov	r3, r0
 8004948:	4649      	mov	r1, r9
 800494a:	4650      	mov	r0, sl
 800494c:	f016 fa2e 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004950:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8004952:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8004956:	f00f fdab 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800495a:	4b0a      	ldr	r3, [pc, #40]	; (8004984 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800495c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800495e:	9329      	str	r3, [sp, #164]	; 0xa4
 8004960:	4629      	mov	r1, r5
 8004962:	2313      	movs	r3, #19
 8004964:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004968:	f00f fdc2 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 800496c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800496e:	ee19 0a10 	vmov	r0, s18
 8004972:	e00b      	b.n	800498c <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 8004974:	200138a4 	.word	0x200138a4
 8004978:	200138a8 	.word	0x200138a8
 800497c:	200138b0 	.word	0x200138b0
 8004980:	0802e4b1 	.word	0x0802e4b1
 8004984:	0802e524 	.word	0x0802e524
 8004988:	00ac00f0 	.word	0x00ac00f0
 800498c:	f00c ff88 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8004990:	2220      	movs	r2, #32
 8004992:	2116      	movs	r1, #22
 8004994:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004996:	f7fe fe21 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800499a:	f04f 3cff 	mov.w	ip, #4294967295
 800499e:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 80049a2:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 80049a6:	4628      	mov	r0, r5
 80049a8:	f7fe fea0 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80049ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80049b0:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 80049b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049b8:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 80049bc:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	f43f ac34 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049c6:	4ada      	ldr	r2, [pc, #872]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 80049c8:	8813      	ldrh	r3, [r2, #0]
 80049ca:	2b0c      	cmp	r3, #12
 80049cc:	f67f ac39 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80049d0:	48d8      	ldr	r0, [pc, #864]	; (8004d34 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 80049d2:	210c      	movs	r1, #12
 80049d4:	6800      	ldr	r0, [r0, #0]
 80049d6:	f004 fe87 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 80049da:	4ad7      	ldr	r2, [pc, #860]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 80049dc:	4603      	mov	r3, r0
 80049de:	4649      	mov	r1, r9
 80049e0:	4650      	mov	r0, sl
 80049e2:	f016 f9e3 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 80049e6:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 80049e8:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 80049ec:	f00f fd60 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80049f0:	f04f 0e1b 	mov.w	lr, #27
 80049f4:	4bd1      	ldr	r3, [pc, #836]	; (8004d3c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80049f6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80049f8:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80049fc:	4629      	mov	r1, r5
 80049fe:	9329      	str	r3, [sp, #164]	; 0xa4
 8004a00:	f00f fd76 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8004a04:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004a06:	ee19 0a10 	vmov	r0, s18
 8004a0a:	f00c ff49 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8004a0e:	ee1b 0a90 	vmov	r0, s23
 8004a12:	23f0      	movs	r3, #240	; 0xf0
 8004a14:	220f      	movs	r2, #15
 8004a16:	4631      	mov	r1, r6
 8004a18:	f8cd 9000 	str.w	r9, [sp]
 8004a1c:	f7fe fdeb 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a20:	f04f 30ff 	mov.w	r0, #4294967295
 8004a24:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 8004a28:	2205      	movs	r2, #5
 8004a2a:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 8004a2e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004a30:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 8004a34:	4611      	mov	r1, r2
 8004a36:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8004a3a:	ee1b 0a90 	vmov	r0, s23
 8004a3e:	f7ff f933 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8004a42:	2205      	movs	r2, #5
 8004a44:	ee1b 0a90 	vmov	r0, s23
 8004a48:	21eb      	movs	r1, #235	; 0xeb
 8004a4a:	f7ff f931 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8004a4e:	ee1b 0a90 	vmov	r0, s23
 8004a52:	4641      	mov	r1, r8
 8004a54:	f7ff f930 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004a58:	ee1b 0a90 	vmov	r0, s23
 8004a5c:	4641      	mov	r1, r8
 8004a5e:	f00f f917 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004a62:	ee1b 1a90 	vmov	r1, s23
 8004a66:	ee19 0a10 	vmov	r0, s18
 8004a6a:	f00c ff19 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8004a6e:	4632      	mov	r2, r6
 8004a70:	ee1f 0a90 	vmov	r0, s31
 8004a74:	2149      	movs	r1, #73	; 0x49
 8004a76:	f7fe fdb1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a7a:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8004a7e:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004a82:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004a86:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8004a8a:	a822      	add	r0, sp, #136	; 0x88
 8004a8c:	f00f fa96 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004a90:	ee1f 0a90 	vmov	r0, s31
 8004a94:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004a98:	a822      	add	r0, sp, #136	; 0x88
 8004a9a:	c807      	ldmia	r0, {r0, r1, r2}
 8004a9c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004aa0:	4ba6      	ldr	r3, [pc, #664]	; (8004d3c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004aa2:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004aa4:	4629      	mov	r1, r5
 8004aa6:	230b      	movs	r3, #11
 8004aa8:	ee1f 0a90 	vmov	r0, s31
 8004aac:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004ab0:	f00f fd1e 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004ab4:	ee1f 1a90 	vmov	r1, s31
 8004ab8:	ee19 0a10 	vmov	r0, s18
 8004abc:	f00c fef0 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004ac0:	ee19 1a10 	vmov	r1, s18
 8004ac4:	ee18 0a10 	vmov	r0, s16
 8004ac8:	f00d fbcd 	bl	8012266 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004acc:	499c      	ldr	r1, [pc, #624]	; (8004d40 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 8004ace:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004ad0:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004ad4:	2261      	movs	r2, #97	; 0x61
 8004ad6:	21c2      	movs	r1, #194	; 0xc2
 8004ad8:	f7fe fd80 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004adc:	a927      	add	r1, sp, #156	; 0x9c
 8004ade:	460a      	mov	r2, r1
 8004ae0:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004ae2:	9500      	str	r5, [sp, #0]
 8004ae4:	ab28      	add	r3, sp, #160	; 0xa0
 8004ae6:	a926      	add	r1, sp, #152	; 0x98
 8004ae8:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004aec:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004af0:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004af4:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004af8:	f010 f9ef 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004afc:	9b02      	ldr	r3, [sp, #8]
 8004afe:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004b02:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004b04:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004b08:	ee19 0a90 	vmov	r0, s19
 8004b0c:	f00c fec8 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8004b10:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b12:	223d      	movs	r2, #61	; 0x3d
 8004b14:	21c2      	movs	r1, #194	; 0xc2
 8004b16:	f7fe fd61 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b1a:	a927      	add	r1, sp, #156	; 0x9c
 8004b1c:	460a      	mov	r2, r1
 8004b1e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b20:	9500      	str	r5, [sp, #0]
 8004b22:	ab28      	add	r3, sp, #160	; 0xa0
 8004b24:	a926      	add	r1, sp, #152	; 0x98
 8004b26:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b2a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b2e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b32:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b36:	f010 f9d0 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b3a:	9b02      	ldr	r3, [sp, #8]
 8004b3c:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004b40:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004b42:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004b46:	ee19 0a90 	vmov	r0, s19
 8004b4a:	f00c fea9 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8004b4e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b50:	2219      	movs	r2, #25
 8004b52:	21c2      	movs	r1, #194	; 0xc2
 8004b54:	f7fe fd42 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b58:	a927      	add	r1, sp, #156	; 0x9c
 8004b5a:	460a      	mov	r2, r1
 8004b5c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b5e:	9500      	str	r5, [sp, #0]
 8004b60:	ab28      	add	r3, sp, #160	; 0xa0
 8004b62:	a926      	add	r1, sp, #152	; 0x98
 8004b64:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b68:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b6c:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b70:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b74:	f010 f9b1 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b78:	9b02      	ldr	r3, [sp, #8]
 8004b7a:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004b7e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004b80:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004b84:	ee19 0a90 	vmov	r0, s19
 8004b88:	f00c fe8a 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004b8c:	2268      	movs	r2, #104	; 0x68
 8004b8e:	4649      	mov	r1, r9
 8004b90:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004b92:	f7fe fd23 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b96:	f04f 33ff 	mov.w	r3, #4294967295
 8004b9a:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004b9e:	4628      	mov	r0, r5
        linespace = space;
 8004ba0:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004ba4:	f7fe fda2 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004ba8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004bac:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004bb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004bb4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004bb8:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	f43f ab36 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004bc2:	4a5b      	ldr	r2, [pc, #364]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004bc4:	8813      	ldrh	r3, [r2, #0]
 8004bc6:	454b      	cmp	r3, r9
 8004bc8:	f67f ab3b 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004bcc:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004d34 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004bd0:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004d3c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004bd4:	f8d8 0000 	ldr.w	r0, [r8]
 8004bd8:	4649      	mov	r1, r9
 8004bda:	f004 fd85 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8004bde:	4a56      	ldr	r2, [pc, #344]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004be0:	4603      	mov	r3, r0
 8004be2:	4649      	mov	r1, r9
 8004be4:	4628      	mov	r0, r5
 8004be6:	f016 f8e1 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004bea:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004bec:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004bf0:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004bf2:	f00f fc5d 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004bf6:	2311      	movs	r3, #17
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004bf8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004bfa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004bfe:	4629      	mov	r1, r5
 8004c00:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c04:	f00f fc74 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004c08:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004c0a:	ee19 0a90 	vmov	r0, s19
 8004c0e:	f00c fe47 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004c12:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004c16:	2244      	movs	r2, #68	; 0x44
 8004c18:	2116      	movs	r1, #22
 8004c1a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004c1c:	f7fe fcde 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004c20:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004c24:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004c28:	4628      	mov	r0, r5
 8004c2a:	f7fe fd5f 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004c2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004c32:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004c36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c3a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004c3e:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	f43f aaf3 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c48:	4a39      	ldr	r2, [pc, #228]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004c4a:	8813      	ldrh	r3, [r2, #0]
 8004c4c:	2b09      	cmp	r3, #9
 8004c4e:	f67f aaf8 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004c52:	2109      	movs	r1, #9
 8004c54:	f8d8 0000 	ldr.w	r0, [r8]
 8004c58:	f004 fd46 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8004c5c:	4a36      	ldr	r2, [pc, #216]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004c5e:	4603      	mov	r3, r0
 8004c60:	210a      	movs	r1, #10
 8004c62:	4648      	mov	r0, r9
 8004c64:	f016 f8a2 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004c68:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004c6a:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004c6e:	f00f fc1f 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004c72:	2313      	movs	r3, #19
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004c74:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004c76:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c7a:	4629      	mov	r1, r5
 8004c7c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c80:	f00f fc36 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004c84:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004c86:	ee19 0a90 	vmov	r0, s19
 8004c8a:	f00c fe09 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004c8e:	2220      	movs	r2, #32
 8004c90:	2116      	movs	r1, #22
 8004c92:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004c94:	f7fe fca2 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004c98:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004c9c:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004ca0:	4628      	mov	r0, r5
 8004ca2:	f7fe fd23 	bl	80036ec <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004ca6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004caa:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004cae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004cb2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004cb6:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	f43f aab7 	beq.w	800422e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004cc0:	4a1b      	ldr	r2, [pc, #108]	; (8004d30 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004cc2:	8813      	ldrh	r3, [r2, #0]
 8004cc4:	2b08      	cmp	r3, #8
 8004cc6:	f67f aabc 	bls.w	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004cca:	f8d8 0000 	ldr.w	r0, [r8]
 8004cce:	2108      	movs	r1, #8
 8004cd0:	f004 fd0a 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8004cd4:	4a18      	ldr	r2, [pc, #96]	; (8004d38 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004cd6:	4603      	mov	r3, r0
 8004cd8:	210a      	movs	r1, #10
 8004cda:	4648      	mov	r0, r9
 8004cdc:	f016 f866 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004ce0:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004ce2:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004ce6:	f00f fbe3 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004cea:	231b      	movs	r3, #27
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004cec:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cee:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004cf2:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004cf4:	f04f 090a 	mov.w	r9, #10
 8004cf8:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004cfc:	f00f fbf8 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004d00:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004d02:	ee19 0a90 	vmov	r0, s19
 8004d06:	f00c fdcb 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d0a:	ee1c 0a10 	vmov	r0, s24
 8004d0e:	4631      	mov	r1, r6
 8004d10:	f8cd 9000 	str.w	r9, [sp]
 8004d14:	23f0      	movs	r3, #240	; 0xf0
 8004d16:	220f      	movs	r2, #15
 8004d18:	f7fe fc6d 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004d1e:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004d22:	2205      	movs	r2, #5
 8004d24:	ee1c 0a10 	vmov	r0, s24
 8004d28:	4611      	mov	r1, r2
 8004d2a:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004d2e:	e009      	b.n	8004d44 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004d30:	200138a8 	.word	0x200138a8
 8004d34:	200138b0 	.word	0x200138b0
 8004d38:	0802e4b1 	.word	0x0802e4b1
 8004d3c:	0802e524 	.word	0x0802e524
 8004d40:	00ac00f0 	.word	0x00ac00f0
 8004d44:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004d48:	f7fe ffae 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004d4c:	2205      	movs	r2, #5
 8004d4e:	ee1c 0a10 	vmov	r0, s24
 8004d52:	21eb      	movs	r1, #235	; 0xeb
 8004d54:	f7fe ffac 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004d58:	ee1c 0a10 	vmov	r0, s24
 8004d5c:	2101      	movs	r1, #1
 8004d5e:	f7fe ffab 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004d62:	ee1c 0a10 	vmov	r0, s24
 8004d66:	2101      	movs	r1, #1
 8004d68:	f00e ff92 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004d6c:	ee1c 1a10 	vmov	r1, s24
 8004d70:	ee19 0a90 	vmov	r0, s19
 8004d74:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004d78:	f00c fd92 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004d7c:	4632      	mov	r2, r6
 8004d7e:	9803      	ldr	r0, [sp, #12]
 8004d80:	2149      	movs	r1, #73	; 0x49
 8004d82:	f7fe fc2b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004d86:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004d88:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004d8c:	4640      	mov	r0, r8
        linespace = space;
 8004d8e:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004d92:	f00f f913 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d96:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004d9a:	9b03      	ldr	r3, [sp, #12]
 8004d9c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004da0:	333c      	adds	r3, #60	; 0x3c
 8004da2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004da6:	2307      	movs	r3, #7
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004da8:	9803      	ldr	r0, [sp, #12]
 8004daa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004dae:	4629      	mov	r1, r5
 8004db0:	f00f fb9e 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004db4:	9903      	ldr	r1, [sp, #12]
 8004db6:	ee19 0a90 	vmov	r0, s19
 8004dba:	f00c fd71 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004dbe:	ee19 1a90 	vmov	r1, s19
 8004dc2:	ee18 0a10 	vmov	r0, s16
 8004dc6:	f00d fa4e 	bl	8012266 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004dca:	ee18 0a10 	vmov	r0, s16
 8004dce:	4631      	mov	r1, r6
 8004dd0:	f00d fa3a 	bl	8012248 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004dd4:	ee18 1a10 	vmov	r1, s16
 8004dd8:	ee1a 0a10 	vmov	r0, s20
 8004ddc:	f00c fd60 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004de0:	ee1c 0a90 	vmov	r0, s25
 8004de4:	4631      	mov	r1, r6
 8004de6:	f8cd 9000 	str.w	r9, [sp]
 8004dea:	23f0      	movs	r3, #240	; 0xf0
 8004dec:	224b      	movs	r2, #75	; 0x4b
 8004dee:	f7fe fc02 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004df2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004df6:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004dfa:	2205      	movs	r2, #5
 8004dfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004dfe:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004e02:	ee1c 0a90 	vmov	r0, s25
 8004e06:	4611      	mov	r1, r2
 8004e08:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004e0c:	f7fe ff4c 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004e10:	2205      	movs	r2, #5
 8004e12:	ee1c 0a90 	vmov	r0, s25
 8004e16:	21eb      	movs	r1, #235	; 0xeb
 8004e18:	f7fe ff4a 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004e1c:	ee1c 0a90 	vmov	r0, s25
 8004e20:	2101      	movs	r1, #1
 8004e22:	f7fe ff49 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004e26:	ee1c 0a90 	vmov	r0, s25
 8004e2a:	2101      	movs	r1, #1
 8004e2c:	f00e ff30 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004e30:	ee1c 1a90 	vmov	r1, s25
 8004e34:	ee1a 0a10 	vmov	r0, s20
 8004e38:	f00c fd32 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004e3c:	9804      	ldr	r0, [sp, #16]
 8004e3e:	223c      	movs	r2, #60	; 0x3c
 8004e40:	2146      	movs	r1, #70	; 0x46
 8004e42:	f7fe fbcb 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004e46:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004e48:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004e4c:	4640      	mov	r0, r8
        linespace = space;
 8004e4e:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004e52:	f00f f8b3 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e56:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004e5a:	9b04      	ldr	r3, [sp, #16]
 8004e5c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004e60:	333c      	adds	r3, #60	; 0x3c
 8004e62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e66:	2324      	movs	r3, #36	; 0x24
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004e68:	9804      	ldr	r0, [sp, #16]
 8004e6a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004e6e:	4629      	mov	r1, r5
 8004e70:	f00f fb3e 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e74:	9904      	ldr	r1, [sp, #16]
 8004e76:	ee1a 0a10 	vmov	r0, s20
 8004e7a:	f00c fd11 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004e7e:	ee1d 0a10 	vmov	r0, s26
 8004e82:	4631      	mov	r1, r6
 8004e84:	f8cd 9000 	str.w	r9, [sp]
 8004e88:	23f0      	movs	r3, #240	; 0xf0
 8004e8a:	2232      	movs	r2, #50	; 0x32
 8004e8c:	f7fe fbb3 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e90:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004e92:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004e96:	2205      	movs	r2, #5
 8004e98:	ee1d 0a10 	vmov	r0, s26
 8004e9c:	4611      	mov	r1, r2
 8004e9e:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004ea2:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8004ea6:	f7fe feff 	bl	8003ca8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8004eaa:	2205      	movs	r2, #5
 8004eac:	ee1d 0a10 	vmov	r0, s26
 8004eb0:	21eb      	movs	r1, #235	; 0xeb
 8004eb2:	f7fe fefd 	bl	8003cb0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004eb6:	ee1d 0a10 	vmov	r0, s26
 8004eba:	2101      	movs	r1, #1
 8004ebc:	f7fe fefc 	bl	8003cb8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004ec0:	ee1d 0a10 	vmov	r0, s26
 8004ec4:	2101      	movs	r1, #1
 8004ec6:	f00e fee3 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004eca:	ee1d 1a10 	vmov	r1, s26
 8004ece:	ee1a 0a10 	vmov	r0, s20
 8004ed2:	f00c fce5 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004ed6:	9805      	ldr	r0, [sp, #20]
 8004ed8:	2223      	movs	r2, #35	; 0x23
 8004eda:	2145      	movs	r1, #69	; 0x45
 8004edc:	f7fe fb7e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004ee0:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004ee2:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004ee6:	4640      	mov	r0, r8
        linespace = space;
 8004ee8:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004eec:	f00f f866 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ef0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004ef4:	9b05      	ldr	r3, [sp, #20]
 8004ef6:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004efa:	333c      	adds	r3, #60	; 0x3c
 8004efc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f00:	2326      	movs	r3, #38	; 0x26
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004f02:	9805      	ldr	r0, [sp, #20]
 8004f04:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f08:	4629      	mov	r1, r5
 8004f0a:	f00f faf1 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f0e:	9905      	ldr	r1, [sp, #20]
 8004f10:	ee1a 0a10 	vmov	r0, s20
 8004f14:	f00c fcc4 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004f18:	9806      	ldr	r0, [sp, #24]
 8004f1a:	220c      	movs	r2, #12
 8004f1c:	2136      	movs	r1, #54	; 0x36
 8004f1e:	f7fe fb5d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8004f22:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004f24:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8004f28:	4640      	mov	r0, r8
        linespace = space;
 8004f2a:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004f2e:	f00f f845 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f32:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f36:	9b06      	ldr	r3, [sp, #24]
 8004f38:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f3c:	333c      	adds	r3, #60	; 0x3c
 8004f3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f42:	2327      	movs	r3, #39	; 0x27
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004f44:	9806      	ldr	r0, [sp, #24]
 8004f46:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f4a:	4629      	mov	r1, r5
 8004f4c:	f00f fad0 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f50:	ee1a 0a10 	vmov	r0, s20
 8004f54:	9906      	ldr	r1, [sp, #24]
 8004f56:	f00c fca3 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f5a:	4620      	mov	r0, r4
 8004f5c:	b02d      	add	sp, #180	; 0xb4
 8004f5e:	ecbd 8b10 	vpop	{d8-d15}
 8004f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f66:	bf00      	nop

08004f68 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004f68:	4770      	bx	lr

08004f6a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004f6a:	4770      	bx	lr

08004f6c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004f6c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004f70:	6808      	ldr	r0, [r1, #0]
 8004f72:	6849      	ldr	r1, [r1, #4]
 8004f74:	c303      	stmia	r3!, {r0, r1}
    }
 8004f76:	4770      	bx	lr

08004f78 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004f78:	4770      	bx	lr

08004f7a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004f7a:	4770      	bx	lr

08004f7c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004f7c:	6041      	str	r1, [r0, #4]
    }
 8004f7e:	4770      	bx	lr

08004f80 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004f80:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004f82:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004f84:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004f88:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004f8c:	8002      	strh	r2, [r0, #0]
 8004f8e:	8042      	strh	r2, [r0, #2]
 8004f90:	8084      	strh	r4, [r0, #4]
 8004f92:	80c1      	strh	r1, [r0, #6]
        }
 8004f94:	bd10      	pop	{r4, pc}

08004f96 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004f96:	4770      	bx	lr

08004f98 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004f98:	4770      	bx	lr
	...

08004f9c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004f9c:	4b06      	ldr	r3, [pc, #24]	; (8004fb8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004f9e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004fa2:	2300      	movs	r3, #0
 8004fa4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004fa8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004fac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004fb0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004fb4:	4770      	bx	lr
 8004fb6:	bf00      	nop
 8004fb8:	08005359 	.word	0x08005359

08004fbc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004fbc:	2301      	movs	r3, #1
 8004fbe:	7203      	strb	r3, [r0, #8]
    }
 8004fc0:	4770      	bx	lr

08004fc2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004fc2:	4770      	bx	lr

08004fc4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004fc4:	4770      	bx	lr

08004fc6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004fc6:	4770      	bx	lr

08004fc8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004fc8:	4770      	bx	lr

08004fca <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004fca:	4770      	bx	lr

08004fcc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004fcc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004fce:	6840      	ldr	r0, [r0, #4]
 8004fd0:	6803      	ldr	r3, [r0, #0]
 8004fd2:	3110      	adds	r1, #16
 8004fd4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004fd6:	4718      	bx	r3

08004fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004fd8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004fda:	6840      	ldr	r0, [r0, #4]
 8004fdc:	6803      	ldr	r3, [r0, #0]
 8004fde:	3110      	adds	r1, #16
 8004fe0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004fe2:	4718      	bx	r3

08004fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004fe4:	4770      	bx	lr

08004fe6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8004fe6:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004fe8:	6840      	ldr	r0, [r0, #4]
 8004fea:	6803      	ldr	r3, [r0, #0]
 8004fec:	3110      	adds	r1, #16
 8004fee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004ff0:	4718      	bx	r3

08004ff2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004ff2:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004ff4:	6840      	ldr	r0, [r0, #4]
 8004ff6:	6803      	ldr	r3, [r0, #0]
 8004ff8:	3110      	adds	r1, #16
 8004ffa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004ffc:	4718      	bx	r3

08004ffe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004ffe:	4770      	bx	lr

08005000 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8005000:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8005002:	68c2      	ldr	r2, [r0, #12]
 8005004:	6841      	ldr	r1, [r0, #4]
 8005006:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005008:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800500a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800500e:	07d2      	lsls	r2, r2, #31
 8005010:	bf48      	it	mi
 8005012:	590a      	ldrmi	r2, [r1, r4]
 8005014:	689b      	ldr	r3, [r3, #8]
    }
 8005016:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800501a:	bf48      	it	mi
 800501c:	58d3      	ldrmi	r3, [r2, r3]
 800501e:	4718      	bx	r3

08005020 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8005020:	6843      	ldr	r3, [r0, #4]
 8005022:	b12b      	cbz	r3, 8005030 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8005024:	6883      	ldr	r3, [r0, #8]
 8005026:	b92b      	cbnz	r3, 8005034 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8005028:	68c0      	ldr	r0, [r0, #12]
 800502a:	f000 0001 	and.w	r0, r0, #1
 800502e:	4770      	bx	lr
 8005030:	4618      	mov	r0, r3
 8005032:	4770      	bx	lr
 8005034:	2001      	movs	r0, #1
    }
 8005036:	4770      	bx	lr

08005038 <_ZN8touchgfx12NoTransitionD0Ev>:
 8005038:	b510      	push	{r4, lr}
 800503a:	210c      	movs	r1, #12
 800503c:	4604      	mov	r4, r0
 800503e:	f026 fdbc 	bl	802bbba <_ZdlPvj>
 8005042:	4620      	mov	r0, r4
 8005044:	bd10      	pop	{r4, pc}

08005046 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005046:	b510      	push	{r4, lr}
 8005048:	2110      	movs	r1, #16
 800504a:	4604      	mov	r4, r0
 800504c:	f026 fdb5 	bl	802bbba <_ZdlPvj>
 8005050:	4620      	mov	r0, r4
 8005052:	bd10      	pop	{r4, pc}

08005054 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8005054:	b510      	push	{r4, lr}
 8005056:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800505a:	4604      	mov	r4, r0
 800505c:	f026 fdad 	bl	802bbba <_ZdlPvj>
 8005060:	4620      	mov	r0, r4
 8005062:	bd10      	pop	{r4, pc}

08005064 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8005064:	b510      	push	{r4, lr}
 8005066:	2138      	movs	r1, #56	; 0x38
 8005068:	4604      	mov	r4, r0
 800506a:	f026 fda6 	bl	802bbba <_ZdlPvj>
 800506e:	4620      	mov	r0, r4
 8005070:	bd10      	pop	{r4, pc}

08005072 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8005072:	b510      	push	{r4, lr}
 8005074:	2128      	movs	r1, #40	; 0x28
 8005076:	4604      	mov	r4, r0
 8005078:	f026 fd9f 	bl	802bbba <_ZdlPvj>
 800507c:	4620      	mov	r0, r4
 800507e:	bd10      	pop	{r4, pc}

08005080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8005080:	b510      	push	{r4, lr}
 8005082:	2138      	movs	r1, #56	; 0x38
 8005084:	4604      	mov	r4, r0
 8005086:	f026 fd98 	bl	802bbba <_ZdlPvj>
 800508a:	4620      	mov	r0, r4
 800508c:	bd10      	pop	{r4, pc}

0800508e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800508e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8005090:	f012 fcde 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 8005094:	6803      	ldr	r3, [r0, #0]
    }
 8005096:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800509a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800509c:	4718      	bx	r3
	...

080050a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80050a0:	b513      	push	{r0, r1, r4, lr}
 80050a2:	4604      	mov	r4, r0
        animationCounter++;
 80050a4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80050a6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80050a8:	3001      	adds	r0, #1
 80050aa:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80050ac:	4298      	cmp	r0, r3
        animationCounter++;
 80050ae:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80050b0:	d905      	bls.n	80050be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80050b2:	2301      	movs	r3, #1
 80050b4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80050b6:	2300      	movs	r3, #0
 80050b8:	72a3      	strb	r3, [r4, #10]
    }
 80050ba:	b002      	add	sp, #8
 80050bc:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80050be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80050c2:	2100      	movs	r1, #0
 80050c4:	f014 fb34 	bl	8019730 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80050c8:	f010 0201 	ands.w	r2, r0, #1
 80050cc:	b283      	uxth	r3, r0
 80050ce:	d12a      	bne.n	8005126 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80050d0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80050d2:	4a19      	ldr	r2, [pc, #100]	; (8005138 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 80050d4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80050d8:	89e3      	ldrh	r3, [r4, #14]
 80050da:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 80050dc:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 80050e0:	82a0      	strh	r0, [r4, #20]
 80050e2:	2000      	movs	r0, #0
 80050e4:	1ad2      	subs	r2, r2, r3
 80050e6:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80050ea:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80050ec:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80050ee:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80050f0:	4a12      	ldr	r2, [pc, #72]	; (800513c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 80050f2:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80050f6:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80050f8:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 80050fc:	691b      	ldr	r3, [r3, #16]
 80050fe:	f8ad 1000 	strh.w	r1, [sp]
 8005102:	f8ad 2006 	strh.w	r2, [sp, #6]
 8005106:	4669      	mov	r1, sp
 8005108:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800510a:	7aa3      	ldrb	r3, [r4, #10]
 800510c:	2b01      	cmp	r3, #1
 800510e:	d1d4      	bne.n	80050ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8005110:	4b0b      	ldr	r3, [pc, #44]	; (8005140 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8005112:	781b      	ldrb	r3, [r3, #0]
 8005114:	2b00      	cmp	r3, #0
 8005116:	d0d0      	beq.n	80050ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005118:	f012 fc9a 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800511c:	b002      	add	sp, #8
 800511e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005122:	f012 bc9b 	b.w	8017a5c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8005126:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800512a:	2800      	cmp	r0, #0
 800512c:	bfd8      	it	le
 800512e:	460a      	movle	r2, r1
 8005130:	4413      	add	r3, r2
 8005132:	81e3      	strh	r3, [r4, #14]
 8005134:	e7cd      	b.n	80050d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8005136:	bf00      	nop
 8005138:	20013840 	.word	0x20013840
 800513c:	20013842 	.word	0x20013842
 8005140:	2001384a 	.word	0x2001384a

08005144 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8005144:	b510      	push	{r4, lr}
 8005146:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8005148:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800514c:	b158      	cbz	r0, 8005166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800514e:	6803      	ldr	r3, [r0, #0]
 8005150:	68db      	ldr	r3, [r3, #12]
 8005152:	4798      	blx	r3
 8005154:	b138      	cbz	r0, 8005166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8005156:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800515a:	6803      	ldr	r3, [r0, #0]
 800515c:	689b      	ldr	r3, [r3, #8]
 800515e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8005160:	2300      	movs	r3, #0
 8005162:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8005166:	bd10      	pop	{r4, pc}

08005168 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8005168:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800516c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8005170:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005172:	68a8      	ldr	r0, [r5, #8]
 8005174:	6803      	ldr	r3, [r0, #0]
 8005176:	6a1b      	ldr	r3, [r3, #32]
 8005178:	4798      	blx	r3
 800517a:	2897      	cmp	r0, #151	; 0x97
 800517c:	d805      	bhi.n	800518a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800517e:	4b46      	ldr	r3, [pc, #280]	; (8005298 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8005180:	4a46      	ldr	r2, [pc, #280]	; (800529c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8005182:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005184:	4846      	ldr	r0, [pc, #280]	; (80052a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8005186:	f027 fbff 	bl	802c988 <__assert_func>
 800518a:	6868      	ldr	r0, [r5, #4]
 800518c:	6803      	ldr	r3, [r0, #0]
 800518e:	6a1b      	ldr	r3, [r3, #32]
 8005190:	4798      	blx	r3
 8005192:	280f      	cmp	r0, #15
 8005194:	d803      	bhi.n	800519e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8005196:	4b43      	ldr	r3, [pc, #268]	; (80052a4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8005198:	4a40      	ldr	r2, [pc, #256]	; (800529c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800519a:	21a4      	movs	r1, #164	; 0xa4
 800519c:	e7f2      	b.n	8005184 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800519e:	68e8      	ldr	r0, [r5, #12]
 80051a0:	6803      	ldr	r3, [r0, #0]
 80051a2:	6a1b      	ldr	r3, [r3, #32]
 80051a4:	4798      	blx	r3
 80051a6:	280b      	cmp	r0, #11
 80051a8:	d803      	bhi.n	80051b2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80051aa:	4b3f      	ldr	r3, [pc, #252]	; (80052a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80051ac:	4a3b      	ldr	r2, [pc, #236]	; (800529c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051ae:	21a5      	movs	r1, #165	; 0xa5
 80051b0:	e7e8      	b.n	8005184 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80051b2:	f012 fc4d 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051b6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80052b0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80051ba:	3004      	adds	r0, #4
 80051bc:	f012 fcae 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051c0:	f8d9 0000 	ldr.w	r0, [r9]
 80051c4:	b110      	cbz	r0, 80051cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80051c6:	6803      	ldr	r3, [r0, #0]
 80051c8:	68db      	ldr	r3, [r3, #12]
 80051ca:	4798      	blx	r3
    if (*currentTrans)
 80051cc:	f8d9 0000 	ldr.w	r0, [r9]
 80051d0:	b110      	cbz	r0, 80051d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80051d2:	6803      	ldr	r3, [r0, #0]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	4798      	blx	r3
    if (*currentScreen)
 80051d8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80052b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 80051dc:	f8d8 0000 	ldr.w	r0, [r8]
 80051e0:	b110      	cbz	r0, 80051e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80051e2:	6803      	ldr	r3, [r0, #0]
 80051e4:	695b      	ldr	r3, [r3, #20]
 80051e6:	4798      	blx	r3
    if (*currentPresenter)
 80051e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051ec:	b110      	cbz	r0, 80051f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80051ee:	6803      	ldr	r3, [r0, #0]
 80051f0:	685b      	ldr	r3, [r3, #4]
 80051f2:	4798      	blx	r3
    if (*currentScreen)
 80051f4:	f8d8 0000 	ldr.w	r0, [r8]
 80051f8:	b110      	cbz	r0, 8005200 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80051fa:	6803      	ldr	r3, [r0, #0]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	4798      	blx	r3
    if (*currentPresenter)
 8005200:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005204:	b110      	cbz	r0, 800520c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005206:	6803      	ldr	r3, [r0, #0]
 8005208:	689b      	ldr	r3, [r3, #8]
 800520a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800520c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800520e:	6803      	ldr	r3, [r0, #0]
 8005210:	2100      	movs	r1, #0
 8005212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005214:	4798      	blx	r3
        : screenContainer(0), done(false)
 8005216:	f04f 0b00 	mov.w	fp, #0
 800521a:	4b24      	ldr	r3, [pc, #144]	; (80052ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800521c:	6003      	str	r3, [r0, #0]
 800521e:	4604      	mov	r4, r0
 8005220:	f8c0 b004 	str.w	fp, [r0, #4]
 8005224:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005228:	68a8      	ldr	r0, [r5, #8]
 800522a:	6803      	ldr	r3, [r0, #0]
 800522c:	4659      	mov	r1, fp
 800522e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005230:	4798      	blx	r3
 8005232:	4606      	mov	r6, r0
 8005234:	f004 ff4e 	bl	800a0d4 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005238:	6868      	ldr	r0, [r5, #4]
 800523a:	6803      	ldr	r3, [r0, #0]
 800523c:	4659      	mov	r1, fp
 800523e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005240:	4798      	blx	r3
 8005242:	4631      	mov	r1, r6
 8005244:	4605      	mov	r5, r0
 8005246:	f004 ff21 	bl	800a08c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800524a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800524e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005252:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005256:	b1e5      	cbz	r5, 8005292 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8005258:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800525a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800525e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8005260:	f8c5 a008 	str.w	sl, [r5, #8]
 8005264:	4630      	mov	r0, r6
 8005266:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8005268:	63f5      	str	r5, [r6, #60]	; 0x3c
 800526a:	4798      	blx	r3
    newPresenter->activate();
 800526c:	682b      	ldr	r3, [r5, #0]
 800526e:	4628      	mov	r0, r5
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005274:	4621      	mov	r1, r4
 8005276:	4630      	mov	r0, r6
 8005278:	f014 fa16 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800527c:	6823      	ldr	r3, [r4, #0]
 800527e:	4620      	mov	r0, r4
 8005280:	691b      	ldr	r3, [r3, #16]
 8005282:	4798      	blx	r3
    newTransition->invalidate();
 8005284:	6823      	ldr	r3, [r4, #0]
 8005286:	695b      	ldr	r3, [r3, #20]
 8005288:	4620      	mov	r0, r4
}
 800528a:	b001      	add	sp, #4
 800528c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005290:	4718      	bx	r3
    model->bind(newPresenter);
 8005292:	462b      	mov	r3, r5
 8005294:	e7e1      	b.n	800525a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8005296:	bf00      	nop
 8005298:	0802e6a0 	.word	0x0802e6a0
 800529c:	0802e72e 	.word	0x0802e72e
 80052a0:	0802e83c 	.word	0x0802e83c
 80052a4:	0802e883 	.word	0x0802e883
 80052a8:	0802e926 	.word	0x0802e926
 80052ac:	0802f9e0 	.word	0x0802f9e0
 80052b0:	20013894 	.word	0x20013894
 80052b4:	20013890 	.word	0x20013890

080052b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80052b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80052ba:	4604      	mov	r4, r0
        animationCounter++;
 80052bc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80052be:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80052c0:	3001      	adds	r0, #1
 80052c2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80052c4:	4298      	cmp	r0, r3
        animationCounter++;
 80052c6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80052c8:	d905      	bls.n	80052d6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80052ca:	2301      	movs	r3, #1
 80052cc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80052ce:	2300      	movs	r3, #0
 80052d0:	72a3      	strb	r3, [r4, #10]
    }
 80052d2:	b003      	add	sp, #12
 80052d4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80052d6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80052da:	2100      	movs	r1, #0
 80052dc:	f014 fa28 	bl	8019730 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80052e0:	f010 0201 	ands.w	r2, r0, #1
 80052e4:	b283      	uxth	r3, r0
 80052e6:	d128      	bne.n	800533a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80052e8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052ea:	4b18      	ldr	r3, [pc, #96]	; (800534c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80052ec:	4818      	ldr	r0, [pc, #96]	; (8005350 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052ee:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80052f0:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052f2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80052f4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80052f8:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80052fc:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80052fe:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8005300:	442b      	add	r3, r5
 8005302:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005304:	b212      	sxth	r2, r2
 8005306:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800530a:	6803      	ldr	r3, [r0, #0]
 800530c:	8322      	strh	r2, [r4, #24]
 800530e:	f8ad 2000 	strh.w	r2, [sp]
 8005312:	2200      	movs	r2, #0
 8005314:	691b      	ldr	r3, [r3, #16]
 8005316:	f8ad 2002 	strh.w	r2, [sp, #2]
 800531a:	4669      	mov	r1, sp
 800531c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800531e:	7aa3      	ldrb	r3, [r4, #10]
 8005320:	2b01      	cmp	r3, #1
 8005322:	d1d6      	bne.n	80052d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8005324:	4b0b      	ldr	r3, [pc, #44]	; (8005354 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8005326:	781b      	ldrb	r3, [r3, #0]
 8005328:	2b00      	cmp	r3, #0
 800532a:	d0d2      	beq.n	80052d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800532c:	f012 fb90 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8005330:	b003      	add	sp, #12
 8005332:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005336:	f012 bb91 	b.w	8017a5c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800533a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800533e:	2800      	cmp	r0, #0
 8005340:	bfd8      	it	le
 8005342:	460a      	movle	r2, r1
 8005344:	4413      	add	r3, r2
 8005346:	81e3      	strh	r3, [r4, #14]
 8005348:	e7cf      	b.n	80052ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800534a:	bf00      	nop
 800534c:	20013840 	.word	0x20013840
 8005350:	20013842 	.word	0x20013842
 8005354:	2001384a 	.word	0x2001384a

08005358 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8005358:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800535c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8005360:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005362:	68a8      	ldr	r0, [r5, #8]
 8005364:	6803      	ldr	r3, [r0, #0]
 8005366:	6a1b      	ldr	r3, [r3, #32]
 8005368:	4798      	blx	r3
 800536a:	f241 137b 	movw	r3, #4475	; 0x117b
 800536e:	4298      	cmp	r0, r3
 8005370:	d805      	bhi.n	800537e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8005372:	4b46      	ldr	r3, [pc, #280]	; (800548c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8005374:	4a46      	ldr	r2, [pc, #280]	; (8005490 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8005376:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005378:	4846      	ldr	r0, [pc, #280]	; (8005494 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800537a:	f027 fb05 	bl	802c988 <__assert_func>
 800537e:	6868      	ldr	r0, [r5, #4]
 8005380:	6803      	ldr	r3, [r0, #0]
 8005382:	6a1b      	ldr	r3, [r3, #32]
 8005384:	4798      	blx	r3
 8005386:	280f      	cmp	r0, #15
 8005388:	d803      	bhi.n	8005392 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 800538a:	4b43      	ldr	r3, [pc, #268]	; (8005498 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800538c:	4a40      	ldr	r2, [pc, #256]	; (8005490 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800538e:	21a4      	movs	r1, #164	; 0xa4
 8005390:	e7f2      	b.n	8005378 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005392:	68e8      	ldr	r0, [r5, #12]
 8005394:	6803      	ldr	r3, [r0, #0]
 8005396:	6a1b      	ldr	r3, [r3, #32]
 8005398:	4798      	blx	r3
 800539a:	280b      	cmp	r0, #11
 800539c:	d803      	bhi.n	80053a6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 800539e:	4b3f      	ldr	r3, [pc, #252]	; (800549c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80053a0:	4a3b      	ldr	r2, [pc, #236]	; (8005490 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80053a2:	21a5      	movs	r1, #165	; 0xa5
 80053a4:	e7e8      	b.n	8005378 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80053a6:	f012 fb53 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053aa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80054a4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80053ae:	3004      	adds	r0, #4
 80053b0:	f012 fbb4 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053b4:	f8d9 0000 	ldr.w	r0, [r9]
 80053b8:	b110      	cbz	r0, 80053c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80053ba:	6803      	ldr	r3, [r0, #0]
 80053bc:	68db      	ldr	r3, [r3, #12]
 80053be:	4798      	blx	r3
    if (*currentTrans)
 80053c0:	f8d9 0000 	ldr.w	r0, [r9]
 80053c4:	b110      	cbz	r0, 80053cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80053c6:	6803      	ldr	r3, [r0, #0]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	4798      	blx	r3
    if (*currentScreen)
 80053cc:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80054a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 80053d0:	f8d8 0000 	ldr.w	r0, [r8]
 80053d4:	b110      	cbz	r0, 80053dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80053d6:	6803      	ldr	r3, [r0, #0]
 80053d8:	695b      	ldr	r3, [r3, #20]
 80053da:	4798      	blx	r3
    if (*currentPresenter)
 80053dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053e0:	b110      	cbz	r0, 80053e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80053e2:	6803      	ldr	r3, [r0, #0]
 80053e4:	685b      	ldr	r3, [r3, #4]
 80053e6:	4798      	blx	r3
    if (*currentScreen)
 80053e8:	f8d8 0000 	ldr.w	r0, [r8]
 80053ec:	b110      	cbz	r0, 80053f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80053ee:	6803      	ldr	r3, [r0, #0]
 80053f0:	681b      	ldr	r3, [r3, #0]
 80053f2:	4798      	blx	r3
    if (*currentPresenter)
 80053f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053f8:	b110      	cbz	r0, 8005400 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80053fa:	6803      	ldr	r3, [r0, #0]
 80053fc:	689b      	ldr	r3, [r3, #8]
 80053fe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005400:	68e8      	ldr	r0, [r5, #12]
 8005402:	6803      	ldr	r3, [r0, #0]
 8005404:	2100      	movs	r1, #0
 8005406:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005408:	4798      	blx	r3
 800540a:	f04f 0b00 	mov.w	fp, #0
 800540e:	4b24      	ldr	r3, [pc, #144]	; (80054a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8005410:	6003      	str	r3, [r0, #0]
 8005412:	4604      	mov	r4, r0
 8005414:	f8c0 b004 	str.w	fp, [r0, #4]
 8005418:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800541c:	68a8      	ldr	r0, [r5, #8]
 800541e:	6803      	ldr	r3, [r0, #0]
 8005420:	4659      	mov	r1, fp
 8005422:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005424:	4798      	blx	r3
 8005426:	4606      	mov	r6, r0
 8005428:	f004 faee 	bl	8009a08 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800542c:	6868      	ldr	r0, [r5, #4]
 800542e:	6803      	ldr	r3, [r0, #0]
 8005430:	4659      	mov	r1, fp
 8005432:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005434:	4798      	blx	r3
 8005436:	4631      	mov	r1, r6
 8005438:	4605      	mov	r5, r0
 800543a:	f004 fabf 	bl	80099bc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800543e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005442:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005446:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800544a:	b1e5      	cbz	r5, 8005486 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 800544c:	1d2b      	adds	r3, r5, #4
 800544e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005452:	6833      	ldr	r3, [r6, #0]
 8005454:	f8c5 a008 	str.w	sl, [r5, #8]
 8005458:	4630      	mov	r0, r6
 800545a:	68db      	ldr	r3, [r3, #12]
 800545c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800545e:	4798      	blx	r3
    newPresenter->activate();
 8005460:	682b      	ldr	r3, [r5, #0]
 8005462:	4628      	mov	r0, r5
 8005464:	681b      	ldr	r3, [r3, #0]
 8005466:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005468:	4621      	mov	r1, r4
 800546a:	4630      	mov	r0, r6
 800546c:	f014 f91c 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005470:	6823      	ldr	r3, [r4, #0]
 8005472:	4620      	mov	r0, r4
 8005474:	691b      	ldr	r3, [r3, #16]
 8005476:	4798      	blx	r3
    newTransition->invalidate();
 8005478:	6823      	ldr	r3, [r4, #0]
 800547a:	695b      	ldr	r3, [r3, #20]
 800547c:	4620      	mov	r0, r4
}
 800547e:	b001      	add	sp, #4
 8005480:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005484:	4718      	bx	r3
    model->bind(newPresenter);
 8005486:	462b      	mov	r3, r5
 8005488:	e7e1      	b.n	800544e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 800548a:	bf00      	nop
 800548c:	0802e6a0 	.word	0x0802e6a0
 8005490:	0802e9c9 	.word	0x0802e9c9
 8005494:	0802e83c 	.word	0x0802e83c
 8005498:	0802e883 	.word	0x0802e883
 800549c:	0802e926 	.word	0x0802e926
 80054a0:	0802f9e0 	.word	0x0802f9e0
 80054a4:	20013894 	.word	0x20013894
 80054a8:	20013890 	.word	0x20013890

080054ac <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80054ac:	4b04      	ldr	r3, [pc, #16]	; (80054c0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80054ae:	681b      	ldr	r3, [r3, #0]
 80054b0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80054b4:	b10a      	cbz	r2, 80054ba <_ZN8touchgfx3HAL3lcdEv+0xe>
 80054b6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80054b8:	b900      	cbnz	r0, 80054bc <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80054ba:	6898      	ldr	r0, [r3, #8]
    }
 80054bc:	4770      	bx	lr
 80054be:	bf00      	nop
 80054c0:	2001384c 	.word	0x2001384c

080054c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80054c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054c6:	4604      	mov	r4, r0
 80054c8:	4617      	mov	r7, r2
 80054ca:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80054cc:	f012 fbf4 	bl	8017cb8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80054d0:	4b10      	ldr	r3, [pc, #64]	; (8005514 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80054d2:	601c      	str	r4, [r3, #0]
      model(m)
 80054d4:	4b10      	ldr	r3, [pc, #64]	; (8005518 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80054d6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80054d8:	4b10      	ldr	r3, [pc, #64]	; (800551c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 80054da:	2500      	movs	r5, #0
 80054dc:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80054e0:	4b0f      	ldr	r3, [pc, #60]	; (8005520 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80054e2:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80054e6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80054e8:	6803      	ldr	r3, [r0, #0]
 80054ea:	2101      	movs	r1, #1
 80054ec:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80054ee:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80054f2:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80054f6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80054f8:	4628      	mov	r0, r5
 80054fa:	f004 f8b9 	bl	8009670 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80054fe:	f7ff ffd5 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8005502:	f01b ffdc 	bl	80214be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8005506:	f7ff ffd1 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 800550a:	f01c f853 	bl	80215b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800550e:	4620      	mov	r0, r4
 8005510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005512:	bf00      	nop
 8005514:	200138a0 	.word	0x200138a0
 8005518:	0802f98c 	.word	0x0802f98c
 800551c:	0802f974 	.word	0x0802f974
 8005520:	2001384c 	.word	0x2001384c

08005524 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005524:	4b06      	ldr	r3, [pc, #24]	; (8005540 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8005526:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800552a:	2300      	movs	r3, #0
 800552c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005530:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005534:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005538:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800553c:	4770      	bx	lr
 800553e:	bf00      	nop
 8005540:	08005359 	.word	0x08005359

08005544 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8005544:	4b06      	ldr	r3, [pc, #24]	; (8005560 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8005546:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800554a:	2300      	movs	r3, #0
 800554c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005550:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005554:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005558:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800555c:	4770      	bx	lr
 800555e:	bf00      	nop
 8005560:	080059c9 	.word	0x080059c9

08005564 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8005564:	4b06      	ldr	r3, [pc, #24]	; (8005580 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8005566:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800556a:	2300      	movs	r3, #0
 800556c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005570:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005574:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005578:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800557c:	4770      	bx	lr
 800557e:	bf00      	nop
 8005580:	0800656d 	.word	0x0800656d

08005584 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8005584:	4b06      	ldr	r3, [pc, #24]	; (80055a0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8005586:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800558a:	2300      	movs	r3, #0
 800558c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005590:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005594:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005598:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800559c:	4770      	bx	lr
 800559e:	bf00      	nop
 80055a0:	08005889 	.word	0x08005889

080055a4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80055a4:	4b06      	ldr	r3, [pc, #24]	; (80055c0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80055a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055aa:	2300      	movs	r3, #0
 80055ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055bc:	4770      	bx	lr
 80055be:	bf00      	nop
 80055c0:	0800642d 	.word	0x0800642d

080055c4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80055c4:	4b06      	ldr	r3, [pc, #24]	; (80055e0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80055c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055ca:	2300      	movs	r3, #0
 80055cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055dc:	4770      	bx	lr
 80055de:	bf00      	nop
 80055e0:	080062ed 	.word	0x080062ed

080055e4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 80055e4:	4b06      	ldr	r3, [pc, #24]	; (8005600 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 80055e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055ea:	2300      	movs	r3, #0
 80055ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055fc:	4770      	bx	lr
 80055fe:	bf00      	nop
 8005600:	080061ad 	.word	0x080061ad

08005604 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8005604:	4b06      	ldr	r3, [pc, #24]	; (8005620 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8005606:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800560a:	2300      	movs	r3, #0
 800560c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005610:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005614:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005618:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800561c:	4770      	bx	lr
 800561e:	bf00      	nop
 8005620:	0800606d 	.word	0x0800606d

08005624 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8005624:	4b06      	ldr	r3, [pc, #24]	; (8005640 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8005626:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800562a:	2300      	movs	r3, #0
 800562c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005630:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005634:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005638:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800563c:	4770      	bx	lr
 800563e:	bf00      	nop
 8005640:	08005749 	.word	0x08005749

08005644 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8005644:	4b06      	ldr	r3, [pc, #24]	; (8005660 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8005646:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800564a:	2300      	movs	r3, #0
 800564c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005650:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005654:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005658:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800565c:	4770      	bx	lr
 800565e:	bf00      	nop
 8005660:	08005f2d 	.word	0x08005f2d

08005664 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8005664:	4b06      	ldr	r3, [pc, #24]	; (8005680 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8005666:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800566a:	2300      	movs	r3, #0
 800566c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005670:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005674:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005678:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800567c:	4770      	bx	lr
 800567e:	bf00      	nop
 8005680:	08005ded 	.word	0x08005ded

08005684 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8005684:	4b06      	ldr	r3, [pc, #24]	; (80056a0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8005686:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800568a:	2300      	movs	r3, #0
 800568c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005690:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005694:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005698:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800569c:	4770      	bx	lr
 800569e:	bf00      	nop
 80056a0:	08005cad 	.word	0x08005cad

080056a4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80056a4:	4b06      	ldr	r3, [pc, #24]	; (80056c0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80056a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056aa:	2300      	movs	r3, #0
 80056ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056bc:	4770      	bx	lr
 80056be:	bf00      	nop
 80056c0:	08005b6d 	.word	0x08005b6d

080056c4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80056c4:	4b06      	ldr	r3, [pc, #24]	; (80056e0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80056c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056ca:	2300      	movs	r3, #0
 80056cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056dc:	4770      	bx	lr
 80056de:	bf00      	nop
 80056e0:	08005169 	.word	0x08005169

080056e4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80056e4:	6803      	ldr	r3, [r0, #0]
 80056e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056e8:	4718      	bx	r3
	...

080056ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 80056ec:	4b12      	ldr	r3, [pc, #72]	; (8005738 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80056ee:	b513      	push	{r0, r1, r4, lr}
          solid()
 80056f0:	6003      	str	r3, [r0, #0]
 80056f2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80056f6:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80056f8:	4b10      	ldr	r3, [pc, #64]	; (800573c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80056fa:	7241      	strb	r1, [r0, #9]
 80056fc:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80056fe:	4910      	ldr	r1, [pc, #64]	; (8005740 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005700:	4b10      	ldr	r3, [pc, #64]	; (8005744 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005702:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005706:	f9b3 3000 	ldrsh.w	r3, [r3]
 800570a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800570c:	2200      	movs	r2, #0
 800570e:	6042      	str	r2, [r0, #4]
 8005710:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005712:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005714:	81c2      	strh	r2, [r0, #14]
          solid()
 8005716:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800571a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800571e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005722:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005726:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005728:	9100      	str	r1, [sp, #0]
 800572a:	3010      	adds	r0, #16
 800572c:	4611      	mov	r1, r2
 800572e:	f7fd ff62 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005732:	4620      	mov	r0, r4
 8005734:	b002      	add	sp, #8
 8005736:	bd10      	pop	{r4, pc}
 8005738:	0802fa28 	.word	0x0802fa28
 800573c:	0802f90c 	.word	0x0802f90c
 8005740:	20013842 	.word	0x20013842
 8005744:	20013840 	.word	0x20013840

08005748 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8005748:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800574c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005750:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005752:	68a0      	ldr	r0, [r4, #8]
 8005754:	6803      	ldr	r3, [r0, #0]
 8005756:	6a1b      	ldr	r3, [r3, #32]
 8005758:	4798      	blx	r3
 800575a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800575e:	d205      	bcs.n	800576c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8005760:	4b42      	ldr	r3, [pc, #264]	; (800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8005762:	4a43      	ldr	r2, [pc, #268]	; (8005870 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8005764:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005766:	4843      	ldr	r0, [pc, #268]	; (8005874 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8005768:	f027 f90e 	bl	802c988 <__assert_func>
 800576c:	6860      	ldr	r0, [r4, #4]
 800576e:	6803      	ldr	r3, [r0, #0]
 8005770:	6a1b      	ldr	r3, [r3, #32]
 8005772:	4798      	blx	r3
 8005774:	280f      	cmp	r0, #15
 8005776:	d803      	bhi.n	8005780 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8005778:	4b3f      	ldr	r3, [pc, #252]	; (8005878 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800577a:	4a3d      	ldr	r2, [pc, #244]	; (8005870 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800577c:	21a4      	movs	r1, #164	; 0xa4
 800577e:	e7f2      	b.n	8005766 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005780:	68e0      	ldr	r0, [r4, #12]
 8005782:	6803      	ldr	r3, [r0, #0]
 8005784:	6a1b      	ldr	r3, [r3, #32]
 8005786:	4798      	blx	r3
 8005788:	2837      	cmp	r0, #55	; 0x37
 800578a:	d803      	bhi.n	8005794 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 800578c:	4b3b      	ldr	r3, [pc, #236]	; (800587c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 800578e:	4a38      	ldr	r2, [pc, #224]	; (8005870 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8005790:	21a5      	movs	r1, #165	; 0xa5
 8005792:	e7e8      	b.n	8005766 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005794:	f012 f95c 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005798:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005880 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 800579c:	3004      	adds	r0, #4
 800579e:	f012 f9bd 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057a2:	f8d9 0000 	ldr.w	r0, [r9]
 80057a6:	b110      	cbz	r0, 80057ae <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80057a8:	6803      	ldr	r3, [r0, #0]
 80057aa:	68db      	ldr	r3, [r3, #12]
 80057ac:	4798      	blx	r3
    if (*currentTrans)
 80057ae:	f8d9 0000 	ldr.w	r0, [r9]
 80057b2:	b110      	cbz	r0, 80057ba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80057b4:	6803      	ldr	r3, [r0, #0]
 80057b6:	681b      	ldr	r3, [r3, #0]
 80057b8:	4798      	blx	r3
    if (*currentScreen)
 80057ba:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005884 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80057be:	f8d8 0000 	ldr.w	r0, [r8]
 80057c2:	b110      	cbz	r0, 80057ca <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80057c4:	6803      	ldr	r3, [r0, #0]
 80057c6:	695b      	ldr	r3, [r3, #20]
 80057c8:	4798      	blx	r3
    if (*currentPresenter)
 80057ca:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057ce:	b110      	cbz	r0, 80057d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80057d0:	6803      	ldr	r3, [r0, #0]
 80057d2:	685b      	ldr	r3, [r3, #4]
 80057d4:	4798      	blx	r3
    if (*currentScreen)
 80057d6:	f8d8 0000 	ldr.w	r0, [r8]
 80057da:	b110      	cbz	r0, 80057e2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80057dc:	6803      	ldr	r3, [r0, #0]
 80057de:	681b      	ldr	r3, [r3, #0]
 80057e0:	4798      	blx	r3
    if (*currentPresenter)
 80057e2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057e6:	b110      	cbz	r0, 80057ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80057e8:	6803      	ldr	r3, [r0, #0]
 80057ea:	689b      	ldr	r3, [r3, #8]
 80057ec:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057ee:	68e0      	ldr	r0, [r4, #12]
 80057f0:	2100      	movs	r1, #0
 80057f2:	f7ff ff77 	bl	80056e4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80057f6:	2114      	movs	r1, #20
 80057f8:	4605      	mov	r5, r0
 80057fa:	f7ff ff77 	bl	80056ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057fe:	68a0      	ldr	r0, [r4, #8]
 8005800:	6803      	ldr	r3, [r0, #0]
 8005802:	2100      	movs	r1, #0
 8005804:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005806:	4798      	blx	r3
 8005808:	4606      	mov	r6, r0
 800580a:	f004 f9bd 	bl	8009b88 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800580e:	6860      	ldr	r0, [r4, #4]
 8005810:	6803      	ldr	r3, [r0, #0]
 8005812:	2100      	movs	r1, #0
 8005814:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005816:	4798      	blx	r3
 8005818:	4631      	mov	r1, r6
 800581a:	4604      	mov	r4, r0
 800581c:	f004 f98e 	bl	8009b3c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005820:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005824:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005828:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800582c:	b1dc      	cbz	r4, 8005866 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 800582e:	1d23      	adds	r3, r4, #4
 8005830:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005834:	6833      	ldr	r3, [r6, #0]
 8005836:	f8c4 a008 	str.w	sl, [r4, #8]
 800583a:	4630      	mov	r0, r6
 800583c:	68db      	ldr	r3, [r3, #12]
 800583e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005840:	4798      	blx	r3
    newPresenter->activate();
 8005842:	6823      	ldr	r3, [r4, #0]
 8005844:	4620      	mov	r0, r4
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800584a:	4629      	mov	r1, r5
 800584c:	4630      	mov	r0, r6
 800584e:	f013 ff2b 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005852:	682b      	ldr	r3, [r5, #0]
 8005854:	4628      	mov	r0, r5
 8005856:	691b      	ldr	r3, [r3, #16]
 8005858:	4798      	blx	r3
    newTransition->invalidate();
 800585a:	682b      	ldr	r3, [r5, #0]
 800585c:	4628      	mov	r0, r5
 800585e:	695b      	ldr	r3, [r3, #20]
}
 8005860:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005864:	4718      	bx	r3
    model->bind(newPresenter);
 8005866:	4623      	mov	r3, r4
 8005868:	e7e2      	b.n	8005830 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 800586a:	bf00      	nop
 800586c:	0802e6a0 	.word	0x0802e6a0
 8005870:	0802ead1 	.word	0x0802ead1
 8005874:	0802e83c 	.word	0x0802e83c
 8005878:	0802e883 	.word	0x0802e883
 800587c:	0802e926 	.word	0x0802e926
 8005880:	20013894 	.word	0x20013894
 8005884:	20013890 	.word	0x20013890

08005888 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8005888:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800588c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005890:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005892:	68a0      	ldr	r0, [r4, #8]
 8005894:	6803      	ldr	r3, [r0, #0]
 8005896:	6a1b      	ldr	r3, [r3, #32]
 8005898:	4798      	blx	r3
 800589a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800589e:	d205      	bcs.n	80058ac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80058a0:	4b42      	ldr	r3, [pc, #264]	; (80059ac <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80058a2:	4a43      	ldr	r2, [pc, #268]	; (80059b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058a4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058a6:	4843      	ldr	r0, [pc, #268]	; (80059b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80058a8:	f027 f86e 	bl	802c988 <__assert_func>
 80058ac:	6860      	ldr	r0, [r4, #4]
 80058ae:	6803      	ldr	r3, [r0, #0]
 80058b0:	6a1b      	ldr	r3, [r3, #32]
 80058b2:	4798      	blx	r3
 80058b4:	280f      	cmp	r0, #15
 80058b6:	d803      	bhi.n	80058c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80058b8:	4b3f      	ldr	r3, [pc, #252]	; (80059b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80058ba:	4a3d      	ldr	r2, [pc, #244]	; (80059b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058bc:	21a4      	movs	r1, #164	; 0xa4
 80058be:	e7f2      	b.n	80058a6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058c0:	68e0      	ldr	r0, [r4, #12]
 80058c2:	6803      	ldr	r3, [r0, #0]
 80058c4:	6a1b      	ldr	r3, [r3, #32]
 80058c6:	4798      	blx	r3
 80058c8:	2837      	cmp	r0, #55	; 0x37
 80058ca:	d803      	bhi.n	80058d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 80058cc:	4b3b      	ldr	r3, [pc, #236]	; (80059bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80058ce:	4a38      	ldr	r2, [pc, #224]	; (80059b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058d0:	21a5      	movs	r1, #165	; 0xa5
 80058d2:	e7e8      	b.n	80058a6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80058d4:	f012 f8bc 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058d8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 80058dc:	3004      	adds	r0, #4
 80058de:	f012 f91d 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058e2:	f8d9 0000 	ldr.w	r0, [r9]
 80058e6:	b110      	cbz	r0, 80058ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80058e8:	6803      	ldr	r3, [r0, #0]
 80058ea:	68db      	ldr	r3, [r3, #12]
 80058ec:	4798      	blx	r3
    if (*currentTrans)
 80058ee:	f8d9 0000 	ldr.w	r0, [r9]
 80058f2:	b110      	cbz	r0, 80058fa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80058f4:	6803      	ldr	r3, [r0, #0]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	4798      	blx	r3
    if (*currentScreen)
 80058fa:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80059c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 80058fe:	f8d8 0000 	ldr.w	r0, [r8]
 8005902:	b110      	cbz	r0, 800590a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005904:	6803      	ldr	r3, [r0, #0]
 8005906:	695b      	ldr	r3, [r3, #20]
 8005908:	4798      	blx	r3
    if (*currentPresenter)
 800590a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800590e:	b110      	cbz	r0, 8005916 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005910:	6803      	ldr	r3, [r0, #0]
 8005912:	685b      	ldr	r3, [r3, #4]
 8005914:	4798      	blx	r3
    if (*currentScreen)
 8005916:	f8d8 0000 	ldr.w	r0, [r8]
 800591a:	b110      	cbz	r0, 8005922 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800591c:	6803      	ldr	r3, [r0, #0]
 800591e:	681b      	ldr	r3, [r3, #0]
 8005920:	4798      	blx	r3
    if (*currentPresenter)
 8005922:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005926:	b110      	cbz	r0, 800592e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005928:	6803      	ldr	r3, [r0, #0]
 800592a:	689b      	ldr	r3, [r3, #8]
 800592c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800592e:	68e0      	ldr	r0, [r4, #12]
 8005930:	2100      	movs	r1, #0
 8005932:	f7ff fed7 	bl	80056e4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005936:	2114      	movs	r1, #20
 8005938:	4605      	mov	r5, r0
 800593a:	f7ff fed7 	bl	80056ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800593e:	68a0      	ldr	r0, [r4, #8]
 8005940:	6803      	ldr	r3, [r0, #0]
 8005942:	2100      	movs	r1, #0
 8005944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005946:	4798      	blx	r3
 8005948:	4606      	mov	r6, r0
 800594a:	f004 f8bd 	bl	8009ac8 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800594e:	6860      	ldr	r0, [r4, #4]
 8005950:	6803      	ldr	r3, [r0, #0]
 8005952:	2100      	movs	r1, #0
 8005954:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005956:	4798      	blx	r3
 8005958:	4631      	mov	r1, r6
 800595a:	4604      	mov	r4, r0
 800595c:	f004 f88e 	bl	8009a7c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005960:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005964:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005968:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800596c:	b1dc      	cbz	r4, 80059a6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 800596e:	1d23      	adds	r3, r4, #4
 8005970:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005974:	6833      	ldr	r3, [r6, #0]
 8005976:	f8c4 a008 	str.w	sl, [r4, #8]
 800597a:	4630      	mov	r0, r6
 800597c:	68db      	ldr	r3, [r3, #12]
 800597e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005980:	4798      	blx	r3
    newPresenter->activate();
 8005982:	6823      	ldr	r3, [r4, #0]
 8005984:	4620      	mov	r0, r4
 8005986:	681b      	ldr	r3, [r3, #0]
 8005988:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800598a:	4629      	mov	r1, r5
 800598c:	4630      	mov	r0, r6
 800598e:	f013 fe8b 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005992:	682b      	ldr	r3, [r5, #0]
 8005994:	4628      	mov	r0, r5
 8005996:	691b      	ldr	r3, [r3, #16]
 8005998:	4798      	blx	r3
    newTransition->invalidate();
 800599a:	682b      	ldr	r3, [r5, #0]
 800599c:	4628      	mov	r0, r5
 800599e:	695b      	ldr	r3, [r3, #20]
}
 80059a0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059a4:	4718      	bx	r3
    model->bind(newPresenter);
 80059a6:	4623      	mov	r3, r4
 80059a8:	e7e2      	b.n	8005970 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80059aa:	bf00      	nop
 80059ac:	0802e6a0 	.word	0x0802e6a0
 80059b0:	0802ec01 	.word	0x0802ec01
 80059b4:	0802e83c 	.word	0x0802e83c
 80059b8:	0802e883 	.word	0x0802e883
 80059bc:	0802e926 	.word	0x0802e926
 80059c0:	20013894 	.word	0x20013894
 80059c4:	20013890 	.word	0x20013890

080059c8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80059c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059cc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059d0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059d2:	68a0      	ldr	r0, [r4, #8]
 80059d4:	6803      	ldr	r3, [r0, #0]
 80059d6:	6a1b      	ldr	r3, [r3, #32]
 80059d8:	4798      	blx	r3
 80059da:	f241 137b 	movw	r3, #4475	; 0x117b
 80059de:	4298      	cmp	r0, r3
 80059e0:	d805      	bhi.n	80059ee <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 80059e2:	4b42      	ldr	r3, [pc, #264]	; (8005aec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 80059e4:	4a42      	ldr	r2, [pc, #264]	; (8005af0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80059e6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059e8:	4842      	ldr	r0, [pc, #264]	; (8005af4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 80059ea:	f026 ffcd 	bl	802c988 <__assert_func>
 80059ee:	6860      	ldr	r0, [r4, #4]
 80059f0:	6803      	ldr	r3, [r0, #0]
 80059f2:	6a1b      	ldr	r3, [r3, #32]
 80059f4:	4798      	blx	r3
 80059f6:	280f      	cmp	r0, #15
 80059f8:	d803      	bhi.n	8005a02 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 80059fa:	4b3f      	ldr	r3, [pc, #252]	; (8005af8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 80059fc:	4a3c      	ldr	r2, [pc, #240]	; (8005af0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80059fe:	21a4      	movs	r1, #164	; 0xa4
 8005a00:	e7f2      	b.n	80059e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a02:	68e0      	ldr	r0, [r4, #12]
 8005a04:	6803      	ldr	r3, [r0, #0]
 8005a06:	6a1b      	ldr	r3, [r3, #32]
 8005a08:	4798      	blx	r3
 8005a0a:	2837      	cmp	r0, #55	; 0x37
 8005a0c:	d803      	bhi.n	8005a16 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8005a0e:	4b3b      	ldr	r3, [pc, #236]	; (8005afc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005a10:	4a37      	ldr	r2, [pc, #220]	; (8005af0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a12:	21a5      	movs	r1, #165	; 0xa5
 8005a14:	e7e8      	b.n	80059e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005a16:	f012 f81b 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a1a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005a1e:	3004      	adds	r0, #4
 8005a20:	f012 f87c 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a24:	f8d9 0000 	ldr.w	r0, [r9]
 8005a28:	b110      	cbz	r0, 8005a30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005a2a:	6803      	ldr	r3, [r0, #0]
 8005a2c:	68db      	ldr	r3, [r3, #12]
 8005a2e:	4798      	blx	r3
    if (*currentTrans)
 8005a30:	f8d9 0000 	ldr.w	r0, [r9]
 8005a34:	b110      	cbz	r0, 8005a3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8005a36:	6803      	ldr	r3, [r0, #0]
 8005a38:	681b      	ldr	r3, [r3, #0]
 8005a3a:	4798      	blx	r3
    if (*currentScreen)
 8005a3c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005b04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005a40:	f8d8 0000 	ldr.w	r0, [r8]
 8005a44:	b110      	cbz	r0, 8005a4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005a46:	6803      	ldr	r3, [r0, #0]
 8005a48:	695b      	ldr	r3, [r3, #20]
 8005a4a:	4798      	blx	r3
    if (*currentPresenter)
 8005a4c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a50:	b110      	cbz	r0, 8005a58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005a52:	6803      	ldr	r3, [r0, #0]
 8005a54:	685b      	ldr	r3, [r3, #4]
 8005a56:	4798      	blx	r3
    if (*currentScreen)
 8005a58:	f8d8 0000 	ldr.w	r0, [r8]
 8005a5c:	b110      	cbz	r0, 8005a64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005a5e:	6803      	ldr	r3, [r0, #0]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	4798      	blx	r3
    if (*currentPresenter)
 8005a64:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a68:	b110      	cbz	r0, 8005a70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005a6a:	6803      	ldr	r3, [r0, #0]
 8005a6c:	689b      	ldr	r3, [r3, #8]
 8005a6e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a70:	68e0      	ldr	r0, [r4, #12]
 8005a72:	2100      	movs	r1, #0
 8005a74:	f7ff fe36 	bl	80056e4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005a78:	2114      	movs	r1, #20
 8005a7a:	4605      	mov	r5, r0
 8005a7c:	f7ff fe36 	bl	80056ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a80:	68a0      	ldr	r0, [r4, #8]
 8005a82:	6803      	ldr	r3, [r0, #0]
 8005a84:	2100      	movs	r1, #0
 8005a86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a88:	4798      	blx	r3
 8005a8a:	4606      	mov	r6, r0
 8005a8c:	f003 ffbc 	bl	8009a08 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a90:	6860      	ldr	r0, [r4, #4]
 8005a92:	6803      	ldr	r3, [r0, #0]
 8005a94:	2100      	movs	r1, #0
 8005a96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a98:	4798      	blx	r3
 8005a9a:	4631      	mov	r1, r6
 8005a9c:	4604      	mov	r4, r0
 8005a9e:	f003 ff8d 	bl	80099bc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005aa2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005aa6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005aaa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005aae:	b1dc      	cbz	r4, 8005ae8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8005ab0:	1d23      	adds	r3, r4, #4
 8005ab2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ab6:	6833      	ldr	r3, [r6, #0]
 8005ab8:	f8c4 a008 	str.w	sl, [r4, #8]
 8005abc:	4630      	mov	r0, r6
 8005abe:	68db      	ldr	r3, [r3, #12]
 8005ac0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ac2:	4798      	blx	r3
    newPresenter->activate();
 8005ac4:	6823      	ldr	r3, [r4, #0]
 8005ac6:	4620      	mov	r0, r4
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005acc:	4629      	mov	r1, r5
 8005ace:	4630      	mov	r0, r6
 8005ad0:	f013 fdea 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ad4:	682b      	ldr	r3, [r5, #0]
 8005ad6:	4628      	mov	r0, r5
 8005ad8:	691b      	ldr	r3, [r3, #16]
 8005ada:	4798      	blx	r3
    newTransition->invalidate();
 8005adc:	682b      	ldr	r3, [r5, #0]
 8005ade:	4628      	mov	r0, r5
 8005ae0:	695b      	ldr	r3, [r3, #20]
}
 8005ae2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ae6:	4718      	bx	r3
    model->bind(newPresenter);
 8005ae8:	4623      	mov	r3, r4
 8005aea:	e7e2      	b.n	8005ab2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8005aec:	0802e6a0 	.word	0x0802e6a0
 8005af0:	0802ed1f 	.word	0x0802ed1f
 8005af4:	0802e83c 	.word	0x0802e83c
 8005af8:	0802e883 	.word	0x0802e883
 8005afc:	0802e926 	.word	0x0802e926
 8005b00:	20013894 	.word	0x20013894
 8005b04:	20013890 	.word	0x20013890

08005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005b08:	6803      	ldr	r3, [r0, #0]
 8005b0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b0c:	4718      	bx	r3
	...

08005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005b10:	4b12      	ldr	r3, [pc, #72]	; (8005b5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b12:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005b14:	6003      	str	r3, [r0, #0]
 8005b16:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b1a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005b1c:	4b10      	ldr	r3, [pc, #64]	; (8005b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005b1e:	7241      	strb	r1, [r0, #9]
 8005b20:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b22:	4910      	ldr	r1, [pc, #64]	; (8005b64 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005b24:	4b10      	ldr	r3, [pc, #64]	; (8005b68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b26:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005b2a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005b2e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005b30:	2200      	movs	r2, #0
 8005b32:	6042      	str	r2, [r0, #4]
 8005b34:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005b36:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005b38:	81c2      	strh	r2, [r0, #14]
          solid()
 8005b3a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005b3e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005b42:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005b46:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b4a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b4c:	9100      	str	r1, [sp, #0]
 8005b4e:	3010      	adds	r0, #16
 8005b50:	4611      	mov	r1, r2
 8005b52:	f7fd fd50 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005b56:	4620      	mov	r0, r4
 8005b58:	b002      	add	sp, #8
 8005b5a:	bd10      	pop	{r4, pc}
 8005b5c:	0802fa04 	.word	0x0802fa04
 8005b60:	0802f90c 	.word	0x0802f90c
 8005b64:	20013842 	.word	0x20013842
 8005b68:	20013840 	.word	0x20013840

08005b6c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005b6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b70:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b74:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b76:	68a0      	ldr	r0, [r4, #8]
 8005b78:	6803      	ldr	r3, [r0, #0]
 8005b7a:	6a1b      	ldr	r3, [r3, #32]
 8005b7c:	4798      	blx	r3
 8005b7e:	f241 03af 	movw	r3, #4271	; 0x10af
 8005b82:	4298      	cmp	r0, r3
 8005b84:	d805      	bhi.n	8005b92 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005b86:	4b42      	ldr	r3, [pc, #264]	; (8005c90 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005b88:	4a42      	ldr	r2, [pc, #264]	; (8005c94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005b8a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b8c:	4842      	ldr	r0, [pc, #264]	; (8005c98 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005b8e:	f026 fefb 	bl	802c988 <__assert_func>
 8005b92:	6860      	ldr	r0, [r4, #4]
 8005b94:	6803      	ldr	r3, [r0, #0]
 8005b96:	6a1b      	ldr	r3, [r3, #32]
 8005b98:	4798      	blx	r3
 8005b9a:	280f      	cmp	r0, #15
 8005b9c:	d803      	bhi.n	8005ba6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005b9e:	4b3f      	ldr	r3, [pc, #252]	; (8005c9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005ba0:	4a3c      	ldr	r2, [pc, #240]	; (8005c94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005ba2:	21a4      	movs	r1, #164	; 0xa4
 8005ba4:	e7f2      	b.n	8005b8c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005ba6:	68e0      	ldr	r0, [r4, #12]
 8005ba8:	6803      	ldr	r3, [r0, #0]
 8005baa:	6a1b      	ldr	r3, [r3, #32]
 8005bac:	4798      	blx	r3
 8005bae:	2837      	cmp	r0, #55	; 0x37
 8005bb0:	d803      	bhi.n	8005bba <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005bb2:	4b3b      	ldr	r3, [pc, #236]	; (8005ca0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005bb4:	4a37      	ldr	r2, [pc, #220]	; (8005c94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bb6:	21a5      	movs	r1, #165	; 0xa5
 8005bb8:	e7e8      	b.n	8005b8c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005bba:	f011 ff49 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005bbe:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005ca4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005bc2:	3004      	adds	r0, #4
 8005bc4:	f011 ffaa 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005bc8:	f8d9 0000 	ldr.w	r0, [r9]
 8005bcc:	b110      	cbz	r0, 8005bd4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005bce:	6803      	ldr	r3, [r0, #0]
 8005bd0:	68db      	ldr	r3, [r3, #12]
 8005bd2:	4798      	blx	r3
    if (*currentTrans)
 8005bd4:	f8d9 0000 	ldr.w	r0, [r9]
 8005bd8:	b110      	cbz	r0, 8005be0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005bda:	6803      	ldr	r3, [r0, #0]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	4798      	blx	r3
    if (*currentScreen)
 8005be0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005ca8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005be4:	f8d8 0000 	ldr.w	r0, [r8]
 8005be8:	b110      	cbz	r0, 8005bf0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005bea:	6803      	ldr	r3, [r0, #0]
 8005bec:	695b      	ldr	r3, [r3, #20]
 8005bee:	4798      	blx	r3
    if (*currentPresenter)
 8005bf0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bf4:	b110      	cbz	r0, 8005bfc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005bf6:	6803      	ldr	r3, [r0, #0]
 8005bf8:	685b      	ldr	r3, [r3, #4]
 8005bfa:	4798      	blx	r3
    if (*currentScreen)
 8005bfc:	f8d8 0000 	ldr.w	r0, [r8]
 8005c00:	b110      	cbz	r0, 8005c08 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005c02:	6803      	ldr	r3, [r0, #0]
 8005c04:	681b      	ldr	r3, [r3, #0]
 8005c06:	4798      	blx	r3
    if (*currentPresenter)
 8005c08:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c0c:	b110      	cbz	r0, 8005c14 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005c0e:	6803      	ldr	r3, [r0, #0]
 8005c10:	689b      	ldr	r3, [r3, #8]
 8005c12:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c14:	68e0      	ldr	r0, [r4, #12]
 8005c16:	2100      	movs	r1, #0
 8005c18:	f7ff ff76 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c1c:	2114      	movs	r1, #20
 8005c1e:	4605      	mov	r5, r0
 8005c20:	f7ff ff76 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c24:	68a0      	ldr	r0, [r4, #8]
 8005c26:	6803      	ldr	r3, [r0, #0]
 8005c28:	2100      	movs	r1, #0
 8005c2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c2c:	4798      	blx	r3
 8005c2e:	4606      	mov	r6, r0
 8005c30:	f004 f9f8 	bl	800a024 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c34:	6860      	ldr	r0, [r4, #4]
 8005c36:	6803      	ldr	r3, [r0, #0]
 8005c38:	2100      	movs	r1, #0
 8005c3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c3c:	4798      	blx	r3
 8005c3e:	4631      	mov	r1, r6
 8005c40:	4604      	mov	r4, r0
 8005c42:	f004 f9c9 	bl	8009fd8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005c46:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c4a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c4e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c52:	b1dc      	cbz	r4, 8005c8c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005c54:	1d23      	adds	r3, r4, #4
 8005c56:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c5a:	6833      	ldr	r3, [r6, #0]
 8005c5c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c60:	4630      	mov	r0, r6
 8005c62:	68db      	ldr	r3, [r3, #12]
 8005c64:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c66:	4798      	blx	r3
    newPresenter->activate();
 8005c68:	6823      	ldr	r3, [r4, #0]
 8005c6a:	4620      	mov	r0, r4
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c70:	4629      	mov	r1, r5
 8005c72:	4630      	mov	r0, r6
 8005c74:	f013 fd18 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c78:	682b      	ldr	r3, [r5, #0]
 8005c7a:	4628      	mov	r0, r5
 8005c7c:	691b      	ldr	r3, [r3, #16]
 8005c7e:	4798      	blx	r3
    newTransition->invalidate();
 8005c80:	682b      	ldr	r3, [r5, #0]
 8005c82:	4628      	mov	r0, r5
 8005c84:	695b      	ldr	r3, [r3, #20]
}
 8005c86:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c8a:	4718      	bx	r3
    model->bind(newPresenter);
 8005c8c:	4623      	mov	r3, r4
 8005c8e:	e7e2      	b.n	8005c56 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005c90:	0802e6a0 	.word	0x0802e6a0
 8005c94:	0802ee39 	.word	0x0802ee39
 8005c98:	0802e83c 	.word	0x0802e83c
 8005c9c:	0802e883 	.word	0x0802e883
 8005ca0:	0802e926 	.word	0x0802e926
 8005ca4:	20013894 	.word	0x20013894
 8005ca8:	20013890 	.word	0x20013890

08005cac <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005cac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005cb0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005cb4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005cb6:	68a0      	ldr	r0, [r4, #8]
 8005cb8:	6803      	ldr	r3, [r0, #0]
 8005cba:	6a1b      	ldr	r3, [r3, #32]
 8005cbc:	4798      	blx	r3
 8005cbe:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005cc2:	4298      	cmp	r0, r3
 8005cc4:	d805      	bhi.n	8005cd2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005cc6:	4b42      	ldr	r3, [pc, #264]	; (8005dd0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005cc8:	4a42      	ldr	r2, [pc, #264]	; (8005dd4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005cca:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005ccc:	4842      	ldr	r0, [pc, #264]	; (8005dd8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005cce:	f026 fe5b 	bl	802c988 <__assert_func>
 8005cd2:	6860      	ldr	r0, [r4, #4]
 8005cd4:	6803      	ldr	r3, [r0, #0]
 8005cd6:	6a1b      	ldr	r3, [r3, #32]
 8005cd8:	4798      	blx	r3
 8005cda:	280f      	cmp	r0, #15
 8005cdc:	d803      	bhi.n	8005ce6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005cde:	4b3f      	ldr	r3, [pc, #252]	; (8005ddc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005ce0:	4a3c      	ldr	r2, [pc, #240]	; (8005dd4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005ce2:	21a4      	movs	r1, #164	; 0xa4
 8005ce4:	e7f2      	b.n	8005ccc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005ce6:	68e0      	ldr	r0, [r4, #12]
 8005ce8:	6803      	ldr	r3, [r0, #0]
 8005cea:	6a1b      	ldr	r3, [r3, #32]
 8005cec:	4798      	blx	r3
 8005cee:	2837      	cmp	r0, #55	; 0x37
 8005cf0:	d803      	bhi.n	8005cfa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005cf2:	4b3b      	ldr	r3, [pc, #236]	; (8005de0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005cf4:	4a37      	ldr	r2, [pc, #220]	; (8005dd4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005cf6:	21a5      	movs	r1, #165	; 0xa5
 8005cf8:	e7e8      	b.n	8005ccc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005cfa:	f011 fea9 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005cfe:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005de4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005d02:	3004      	adds	r0, #4
 8005d04:	f011 ff0a 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d08:	f8d9 0000 	ldr.w	r0, [r9]
 8005d0c:	b110      	cbz	r0, 8005d14 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005d0e:	6803      	ldr	r3, [r0, #0]
 8005d10:	68db      	ldr	r3, [r3, #12]
 8005d12:	4798      	blx	r3
    if (*currentTrans)
 8005d14:	f8d9 0000 	ldr.w	r0, [r9]
 8005d18:	b110      	cbz	r0, 8005d20 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d1a:	6803      	ldr	r3, [r0, #0]
 8005d1c:	681b      	ldr	r3, [r3, #0]
 8005d1e:	4798      	blx	r3
    if (*currentScreen)
 8005d20:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005de8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005d24:	f8d8 0000 	ldr.w	r0, [r8]
 8005d28:	b110      	cbz	r0, 8005d30 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d2a:	6803      	ldr	r3, [r0, #0]
 8005d2c:	695b      	ldr	r3, [r3, #20]
 8005d2e:	4798      	blx	r3
    if (*currentPresenter)
 8005d30:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d34:	b110      	cbz	r0, 8005d3c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d36:	6803      	ldr	r3, [r0, #0]
 8005d38:	685b      	ldr	r3, [r3, #4]
 8005d3a:	4798      	blx	r3
    if (*currentScreen)
 8005d3c:	f8d8 0000 	ldr.w	r0, [r8]
 8005d40:	b110      	cbz	r0, 8005d48 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d42:	6803      	ldr	r3, [r0, #0]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	4798      	blx	r3
    if (*currentPresenter)
 8005d48:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d4c:	b110      	cbz	r0, 8005d54 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d4e:	6803      	ldr	r3, [r0, #0]
 8005d50:	689b      	ldr	r3, [r3, #8]
 8005d52:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d54:	68e0      	ldr	r0, [r4, #12]
 8005d56:	2100      	movs	r1, #0
 8005d58:	f7ff fed6 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d5c:	2114      	movs	r1, #20
 8005d5e:	4605      	mov	r5, r0
 8005d60:	f7ff fed6 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005d64:	68a0      	ldr	r0, [r4, #8]
 8005d66:	6803      	ldr	r3, [r0, #0]
 8005d68:	2100      	movs	r1, #0
 8005d6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d6c:	4798      	blx	r3
 8005d6e:	4606      	mov	r6, r0
 8005d70:	f003 fd16 	bl	80097a0 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005d74:	6860      	ldr	r0, [r4, #4]
 8005d76:	6803      	ldr	r3, [r0, #0]
 8005d78:	2100      	movs	r1, #0
 8005d7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d7c:	4798      	blx	r3
 8005d7e:	4631      	mov	r1, r6
 8005d80:	4604      	mov	r4, r0
 8005d82:	f003 fce7 	bl	8009754 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005d86:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005d8a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005d8e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005d92:	b1dc      	cbz	r4, 8005dcc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005d94:	1d23      	adds	r3, r4, #4
 8005d96:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005d9a:	6833      	ldr	r3, [r6, #0]
 8005d9c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005da0:	4630      	mov	r0, r6
 8005da2:	68db      	ldr	r3, [r3, #12]
 8005da4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005da6:	4798      	blx	r3
    newPresenter->activate();
 8005da8:	6823      	ldr	r3, [r4, #0]
 8005daa:	4620      	mov	r0, r4
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005db0:	4629      	mov	r1, r5
 8005db2:	4630      	mov	r0, r6
 8005db4:	f013 fc78 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005db8:	682b      	ldr	r3, [r5, #0]
 8005dba:	4628      	mov	r0, r5
 8005dbc:	691b      	ldr	r3, [r3, #16]
 8005dbe:	4798      	blx	r3
    newTransition->invalidate();
 8005dc0:	682b      	ldr	r3, [r5, #0]
 8005dc2:	4628      	mov	r0, r5
 8005dc4:	695b      	ldr	r3, [r3, #20]
}
 8005dc6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005dca:	4718      	bx	r3
    model->bind(newPresenter);
 8005dcc:	4623      	mov	r3, r4
 8005dce:	e7e2      	b.n	8005d96 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005dd0:	0802e6a0 	.word	0x0802e6a0
 8005dd4:	0802ef59 	.word	0x0802ef59
 8005dd8:	0802e83c 	.word	0x0802e83c
 8005ddc:	0802e883 	.word	0x0802e883
 8005de0:	0802e926 	.word	0x0802e926
 8005de4:	20013894 	.word	0x20013894
 8005de8:	20013890 	.word	0x20013890

08005dec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005dec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005df0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005df4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005df6:	68a0      	ldr	r0, [r4, #8]
 8005df8:	6803      	ldr	r3, [r0, #0]
 8005dfa:	6a1b      	ldr	r3, [r3, #32]
 8005dfc:	4798      	blx	r3
 8005dfe:	f241 035b 	movw	r3, #4187	; 0x105b
 8005e02:	4298      	cmp	r0, r3
 8005e04:	d805      	bhi.n	8005e12 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005e06:	4b42      	ldr	r3, [pc, #264]	; (8005f10 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005e08:	4a42      	ldr	r2, [pc, #264]	; (8005f14 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e0a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e0c:	4842      	ldr	r0, [pc, #264]	; (8005f18 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005e0e:	f026 fdbb 	bl	802c988 <__assert_func>
 8005e12:	6860      	ldr	r0, [r4, #4]
 8005e14:	6803      	ldr	r3, [r0, #0]
 8005e16:	6a1b      	ldr	r3, [r3, #32]
 8005e18:	4798      	blx	r3
 8005e1a:	280f      	cmp	r0, #15
 8005e1c:	d803      	bhi.n	8005e26 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005e1e:	4b3f      	ldr	r3, [pc, #252]	; (8005f1c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005e20:	4a3c      	ldr	r2, [pc, #240]	; (8005f14 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e22:	21a4      	movs	r1, #164	; 0xa4
 8005e24:	e7f2      	b.n	8005e0c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e26:	68e0      	ldr	r0, [r4, #12]
 8005e28:	6803      	ldr	r3, [r0, #0]
 8005e2a:	6a1b      	ldr	r3, [r3, #32]
 8005e2c:	4798      	blx	r3
 8005e2e:	2837      	cmp	r0, #55	; 0x37
 8005e30:	d803      	bhi.n	8005e3a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005e32:	4b3b      	ldr	r3, [pc, #236]	; (8005f20 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005e34:	4a37      	ldr	r2, [pc, #220]	; (8005f14 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e36:	21a5      	movs	r1, #165	; 0xa5
 8005e38:	e7e8      	b.n	8005e0c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e3a:	f011 fe09 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e3e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f24 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005e42:	3004      	adds	r0, #4
 8005e44:	f011 fe6a 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e48:	f8d9 0000 	ldr.w	r0, [r9]
 8005e4c:	b110      	cbz	r0, 8005e54 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e4e:	6803      	ldr	r3, [r0, #0]
 8005e50:	68db      	ldr	r3, [r3, #12]
 8005e52:	4798      	blx	r3
    if (*currentTrans)
 8005e54:	f8d9 0000 	ldr.w	r0, [r9]
 8005e58:	b110      	cbz	r0, 8005e60 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e5a:	6803      	ldr	r3, [r0, #0]
 8005e5c:	681b      	ldr	r3, [r3, #0]
 8005e5e:	4798      	blx	r3
    if (*currentScreen)
 8005e60:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f28 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005e64:	f8d8 0000 	ldr.w	r0, [r8]
 8005e68:	b110      	cbz	r0, 8005e70 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005e6a:	6803      	ldr	r3, [r0, #0]
 8005e6c:	695b      	ldr	r3, [r3, #20]
 8005e6e:	4798      	blx	r3
    if (*currentPresenter)
 8005e70:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e74:	b110      	cbz	r0, 8005e7c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005e76:	6803      	ldr	r3, [r0, #0]
 8005e78:	685b      	ldr	r3, [r3, #4]
 8005e7a:	4798      	blx	r3
    if (*currentScreen)
 8005e7c:	f8d8 0000 	ldr.w	r0, [r8]
 8005e80:	b110      	cbz	r0, 8005e88 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005e82:	6803      	ldr	r3, [r0, #0]
 8005e84:	681b      	ldr	r3, [r3, #0]
 8005e86:	4798      	blx	r3
    if (*currentPresenter)
 8005e88:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e8c:	b110      	cbz	r0, 8005e94 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005e8e:	6803      	ldr	r3, [r0, #0]
 8005e90:	689b      	ldr	r3, [r3, #8]
 8005e92:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005e94:	68e0      	ldr	r0, [r4, #12]
 8005e96:	2100      	movs	r1, #0
 8005e98:	f7ff fe36 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005e9c:	2114      	movs	r1, #20
 8005e9e:	4605      	mov	r5, r0
 8005ea0:	f7ff fe36 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ea4:	68a0      	ldr	r0, [r4, #8]
 8005ea6:	6803      	ldr	r3, [r0, #0]
 8005ea8:	2100      	movs	r1, #0
 8005eaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005eac:	4798      	blx	r3
 8005eae:	4606      	mov	r6, r0
 8005eb0:	f003 ff06 	bl	8009cc0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005eb4:	6860      	ldr	r0, [r4, #4]
 8005eb6:	6803      	ldr	r3, [r0, #0]
 8005eb8:	2100      	movs	r1, #0
 8005eba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ebc:	4798      	blx	r3
 8005ebe:	4631      	mov	r1, r6
 8005ec0:	4604      	mov	r4, r0
 8005ec2:	f003 fed7 	bl	8009c74 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005ec6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005eca:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ece:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ed2:	b1dc      	cbz	r4, 8005f0c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005ed4:	1d23      	adds	r3, r4, #4
 8005ed6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005eda:	6833      	ldr	r3, [r6, #0]
 8005edc:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ee0:	4630      	mov	r0, r6
 8005ee2:	68db      	ldr	r3, [r3, #12]
 8005ee4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ee6:	4798      	blx	r3
    newPresenter->activate();
 8005ee8:	6823      	ldr	r3, [r4, #0]
 8005eea:	4620      	mov	r0, r4
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ef0:	4629      	mov	r1, r5
 8005ef2:	4630      	mov	r0, r6
 8005ef4:	f013 fbd8 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ef8:	682b      	ldr	r3, [r5, #0]
 8005efa:	4628      	mov	r0, r5
 8005efc:	691b      	ldr	r3, [r3, #16]
 8005efe:	4798      	blx	r3
    newTransition->invalidate();
 8005f00:	682b      	ldr	r3, [r5, #0]
 8005f02:	4628      	mov	r0, r5
 8005f04:	695b      	ldr	r3, [r3, #20]
}
 8005f06:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f0a:	4718      	bx	r3
    model->bind(newPresenter);
 8005f0c:	4623      	mov	r3, r4
 8005f0e:	e7e2      	b.n	8005ed6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005f10:	0802e6a0 	.word	0x0802e6a0
 8005f14:	0802f07f 	.word	0x0802f07f
 8005f18:	0802e83c 	.word	0x0802e83c
 8005f1c:	0802e883 	.word	0x0802e883
 8005f20:	0802e926 	.word	0x0802e926
 8005f24:	20013894 	.word	0x20013894
 8005f28:	20013890 	.word	0x20013890

08005f2c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005f2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f30:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f34:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f36:	68a0      	ldr	r0, [r4, #8]
 8005f38:	6803      	ldr	r3, [r0, #0]
 8005f3a:	6a1b      	ldr	r3, [r3, #32]
 8005f3c:	4798      	blx	r3
 8005f3e:	f241 035b 	movw	r3, #4187	; 0x105b
 8005f42:	4298      	cmp	r0, r3
 8005f44:	d805      	bhi.n	8005f52 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005f46:	4b42      	ldr	r3, [pc, #264]	; (8006050 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005f48:	4a42      	ldr	r2, [pc, #264]	; (8006054 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f4a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f4c:	4842      	ldr	r0, [pc, #264]	; (8006058 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005f4e:	f026 fd1b 	bl	802c988 <__assert_func>
 8005f52:	6860      	ldr	r0, [r4, #4]
 8005f54:	6803      	ldr	r3, [r0, #0]
 8005f56:	6a1b      	ldr	r3, [r3, #32]
 8005f58:	4798      	blx	r3
 8005f5a:	280f      	cmp	r0, #15
 8005f5c:	d803      	bhi.n	8005f66 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005f5e:	4b3f      	ldr	r3, [pc, #252]	; (800605c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005f60:	4a3c      	ldr	r2, [pc, #240]	; (8006054 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f62:	21a4      	movs	r1, #164	; 0xa4
 8005f64:	e7f2      	b.n	8005f4c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005f66:	68e0      	ldr	r0, [r4, #12]
 8005f68:	6803      	ldr	r3, [r0, #0]
 8005f6a:	6a1b      	ldr	r3, [r3, #32]
 8005f6c:	4798      	blx	r3
 8005f6e:	2837      	cmp	r0, #55	; 0x37
 8005f70:	d803      	bhi.n	8005f7a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005f72:	4b3b      	ldr	r3, [pc, #236]	; (8006060 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005f74:	4a37      	ldr	r2, [pc, #220]	; (8006054 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f76:	21a5      	movs	r1, #165	; 0xa5
 8005f78:	e7e8      	b.n	8005f4c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005f7a:	f011 fd69 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005f7e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006064 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005f82:	3004      	adds	r0, #4
 8005f84:	f011 fdca 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005f88:	f8d9 0000 	ldr.w	r0, [r9]
 8005f8c:	b110      	cbz	r0, 8005f94 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005f8e:	6803      	ldr	r3, [r0, #0]
 8005f90:	68db      	ldr	r3, [r3, #12]
 8005f92:	4798      	blx	r3
    if (*currentTrans)
 8005f94:	f8d9 0000 	ldr.w	r0, [r9]
 8005f98:	b110      	cbz	r0, 8005fa0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005f9a:	6803      	ldr	r3, [r0, #0]
 8005f9c:	681b      	ldr	r3, [r3, #0]
 8005f9e:	4798      	blx	r3
    if (*currentScreen)
 8005fa0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006068 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005fa4:	f8d8 0000 	ldr.w	r0, [r8]
 8005fa8:	b110      	cbz	r0, 8005fb0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005faa:	6803      	ldr	r3, [r0, #0]
 8005fac:	695b      	ldr	r3, [r3, #20]
 8005fae:	4798      	blx	r3
    if (*currentPresenter)
 8005fb0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fb4:	b110      	cbz	r0, 8005fbc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005fb6:	6803      	ldr	r3, [r0, #0]
 8005fb8:	685b      	ldr	r3, [r3, #4]
 8005fba:	4798      	blx	r3
    if (*currentScreen)
 8005fbc:	f8d8 0000 	ldr.w	r0, [r8]
 8005fc0:	b110      	cbz	r0, 8005fc8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005fc2:	6803      	ldr	r3, [r0, #0]
 8005fc4:	681b      	ldr	r3, [r3, #0]
 8005fc6:	4798      	blx	r3
    if (*currentPresenter)
 8005fc8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fcc:	b110      	cbz	r0, 8005fd4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005fce:	6803      	ldr	r3, [r0, #0]
 8005fd0:	689b      	ldr	r3, [r3, #8]
 8005fd2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005fd4:	68e0      	ldr	r0, [r4, #12]
 8005fd6:	2100      	movs	r1, #0
 8005fd8:	f7ff fd96 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005fdc:	2114      	movs	r1, #20
 8005fde:	4605      	mov	r5, r0
 8005fe0:	f7ff fd96 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005fe4:	68a0      	ldr	r0, [r4, #8]
 8005fe6:	6803      	ldr	r3, [r0, #0]
 8005fe8:	2100      	movs	r1, #0
 8005fea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fec:	4798      	blx	r3
 8005fee:	4606      	mov	r6, r0
 8005ff0:	f003 fe24 	bl	8009c3c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ff4:	6860      	ldr	r0, [r4, #4]
 8005ff6:	6803      	ldr	r3, [r0, #0]
 8005ff8:	2100      	movs	r1, #0
 8005ffa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ffc:	4798      	blx	r3
 8005ffe:	4631      	mov	r1, r6
 8006000:	4604      	mov	r4, r0
 8006002:	f003 fdf5 	bl	8009bf0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8006006:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800600a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800600e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006012:	b1dc      	cbz	r4, 800604c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8006014:	1d23      	adds	r3, r4, #4
 8006016:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800601a:	6833      	ldr	r3, [r6, #0]
 800601c:	f8c4 a008 	str.w	sl, [r4, #8]
 8006020:	4630      	mov	r0, r6
 8006022:	68db      	ldr	r3, [r3, #12]
 8006024:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006026:	4798      	blx	r3
    newPresenter->activate();
 8006028:	6823      	ldr	r3, [r4, #0]
 800602a:	4620      	mov	r0, r4
 800602c:	681b      	ldr	r3, [r3, #0]
 800602e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006030:	4629      	mov	r1, r5
 8006032:	4630      	mov	r0, r6
 8006034:	f013 fb38 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006038:	682b      	ldr	r3, [r5, #0]
 800603a:	4628      	mov	r0, r5
 800603c:	691b      	ldr	r3, [r3, #16]
 800603e:	4798      	blx	r3
    newTransition->invalidate();
 8006040:	682b      	ldr	r3, [r5, #0]
 8006042:	4628      	mov	r0, r5
 8006044:	695b      	ldr	r3, [r3, #20]
}
 8006046:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800604a:	4718      	bx	r3
    model->bind(newPresenter);
 800604c:	4623      	mov	r3, r4
 800604e:	e7e2      	b.n	8006016 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8006050:	0802e6a0 	.word	0x0802e6a0
 8006054:	0802f1c3 	.word	0x0802f1c3
 8006058:	0802e83c 	.word	0x0802e83c
 800605c:	0802e883 	.word	0x0802e883
 8006060:	0802e926 	.word	0x0802e926
 8006064:	20013894 	.word	0x20013894
 8006068:	20013890 	.word	0x20013890

0800606c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800606c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006070:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006074:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006076:	68a0      	ldr	r0, [r4, #8]
 8006078:	6803      	ldr	r3, [r0, #0]
 800607a:	6a1b      	ldr	r3, [r3, #32]
 800607c:	4798      	blx	r3
 800607e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8006082:	d205      	bcs.n	8006090 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8006084:	4b42      	ldr	r3, [pc, #264]	; (8006190 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8006086:	4a43      	ldr	r2, [pc, #268]	; (8006194 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8006088:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800608a:	4843      	ldr	r0, [pc, #268]	; (8006198 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800608c:	f026 fc7c 	bl	802c988 <__assert_func>
 8006090:	6860      	ldr	r0, [r4, #4]
 8006092:	6803      	ldr	r3, [r0, #0]
 8006094:	6a1b      	ldr	r3, [r3, #32]
 8006096:	4798      	blx	r3
 8006098:	280f      	cmp	r0, #15
 800609a:	d803      	bhi.n	80060a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800609c:	4b3f      	ldr	r3, [pc, #252]	; (800619c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800609e:	4a3d      	ldr	r2, [pc, #244]	; (8006194 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060a0:	21a4      	movs	r1, #164	; 0xa4
 80060a2:	e7f2      	b.n	800608a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80060a4:	68e0      	ldr	r0, [r4, #12]
 80060a6:	6803      	ldr	r3, [r0, #0]
 80060a8:	6a1b      	ldr	r3, [r3, #32]
 80060aa:	4798      	blx	r3
 80060ac:	2837      	cmp	r0, #55	; 0x37
 80060ae:	d803      	bhi.n	80060b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80060b0:	4b3b      	ldr	r3, [pc, #236]	; (80061a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80060b2:	4a38      	ldr	r2, [pc, #224]	; (8006194 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060b4:	21a5      	movs	r1, #165	; 0xa5
 80060b6:	e7e8      	b.n	800608a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80060b8:	f011 fcca 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80060bc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80061a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80060c0:	3004      	adds	r0, #4
 80060c2:	f011 fd2b 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80060c6:	f8d9 0000 	ldr.w	r0, [r9]
 80060ca:	b110      	cbz	r0, 80060d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80060cc:	6803      	ldr	r3, [r0, #0]
 80060ce:	68db      	ldr	r3, [r3, #12]
 80060d0:	4798      	blx	r3
    if (*currentTrans)
 80060d2:	f8d9 0000 	ldr.w	r0, [r9]
 80060d6:	b110      	cbz	r0, 80060de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80060d8:	6803      	ldr	r3, [r0, #0]
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	4798      	blx	r3
    if (*currentScreen)
 80060de:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80061a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80060e2:	f8d8 0000 	ldr.w	r0, [r8]
 80060e6:	b110      	cbz	r0, 80060ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80060e8:	6803      	ldr	r3, [r0, #0]
 80060ea:	695b      	ldr	r3, [r3, #20]
 80060ec:	4798      	blx	r3
    if (*currentPresenter)
 80060ee:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80060f2:	b110      	cbz	r0, 80060fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80060f4:	6803      	ldr	r3, [r0, #0]
 80060f6:	685b      	ldr	r3, [r3, #4]
 80060f8:	4798      	blx	r3
    if (*currentScreen)
 80060fa:	f8d8 0000 	ldr.w	r0, [r8]
 80060fe:	b110      	cbz	r0, 8006106 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8006100:	6803      	ldr	r3, [r0, #0]
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	4798      	blx	r3
    if (*currentPresenter)
 8006106:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800610a:	b110      	cbz	r0, 8006112 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800610c:	6803      	ldr	r3, [r0, #0]
 800610e:	689b      	ldr	r3, [r3, #8]
 8006110:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006112:	68e0      	ldr	r0, [r4, #12]
 8006114:	2100      	movs	r1, #0
 8006116:	f7ff fcf7 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800611a:	2114      	movs	r1, #20
 800611c:	4605      	mov	r5, r0
 800611e:	f7ff fcf7 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006122:	68a0      	ldr	r0, [r4, #8]
 8006124:	6803      	ldr	r3, [r0, #0]
 8006126:	2100      	movs	r1, #0
 8006128:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800612a:	4798      	blx	r3
 800612c:	4606      	mov	r6, r0
 800612e:	f003 fd2b 	bl	8009b88 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006132:	6860      	ldr	r0, [r4, #4]
 8006134:	6803      	ldr	r3, [r0, #0]
 8006136:	2100      	movs	r1, #0
 8006138:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800613a:	4798      	blx	r3
 800613c:	4631      	mov	r1, r6
 800613e:	4604      	mov	r4, r0
 8006140:	f003 fcfc 	bl	8009b3c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8006144:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006148:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800614c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006150:	b1dc      	cbz	r4, 800618a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8006152:	1d23      	adds	r3, r4, #4
 8006154:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006158:	6833      	ldr	r3, [r6, #0]
 800615a:	f8c4 a008 	str.w	sl, [r4, #8]
 800615e:	4630      	mov	r0, r6
 8006160:	68db      	ldr	r3, [r3, #12]
 8006162:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006164:	4798      	blx	r3
    newPresenter->activate();
 8006166:	6823      	ldr	r3, [r4, #0]
 8006168:	4620      	mov	r0, r4
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800616e:	4629      	mov	r1, r5
 8006170:	4630      	mov	r0, r6
 8006172:	f013 fa99 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006176:	682b      	ldr	r3, [r5, #0]
 8006178:	4628      	mov	r0, r5
 800617a:	691b      	ldr	r3, [r3, #16]
 800617c:	4798      	blx	r3
    newTransition->invalidate();
 800617e:	682b      	ldr	r3, [r5, #0]
 8006180:	4628      	mov	r0, r5
 8006182:	695b      	ldr	r3, [r3, #20]
}
 8006184:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006188:	4718      	bx	r3
    model->bind(newPresenter);
 800618a:	4623      	mov	r3, r4
 800618c:	e7e2      	b.n	8006154 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 800618e:	bf00      	nop
 8006190:	0802e6a0 	.word	0x0802e6a0
 8006194:	0802f303 	.word	0x0802f303
 8006198:	0802e83c 	.word	0x0802e83c
 800619c:	0802e883 	.word	0x0802e883
 80061a0:	0802e926 	.word	0x0802e926
 80061a4:	20013894 	.word	0x20013894
 80061a8:	20013890 	.word	0x20013890

080061ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80061ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80061b0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061b4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061b6:	68a0      	ldr	r0, [r4, #8]
 80061b8:	6803      	ldr	r3, [r0, #0]
 80061ba:	6a1b      	ldr	r3, [r3, #32]
 80061bc:	4798      	blx	r3
 80061be:	f241 035b 	movw	r3, #4187	; 0x105b
 80061c2:	4298      	cmp	r0, r3
 80061c4:	d805      	bhi.n	80061d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80061c6:	4b42      	ldr	r3, [pc, #264]	; (80062d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80061c8:	4a42      	ldr	r2, [pc, #264]	; (80062d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80061ca:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80061cc:	4842      	ldr	r0, [pc, #264]	; (80062d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80061ce:	f026 fbdb 	bl	802c988 <__assert_func>
 80061d2:	6860      	ldr	r0, [r4, #4]
 80061d4:	6803      	ldr	r3, [r0, #0]
 80061d6:	6a1b      	ldr	r3, [r3, #32]
 80061d8:	4798      	blx	r3
 80061da:	280f      	cmp	r0, #15
 80061dc:	d803      	bhi.n	80061e6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 80061de:	4b3f      	ldr	r3, [pc, #252]	; (80062dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 80061e0:	4a3c      	ldr	r2, [pc, #240]	; (80062d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80061e2:	21a4      	movs	r1, #164	; 0xa4
 80061e4:	e7f2      	b.n	80061cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80061e6:	68e0      	ldr	r0, [r4, #12]
 80061e8:	6803      	ldr	r3, [r0, #0]
 80061ea:	6a1b      	ldr	r3, [r3, #32]
 80061ec:	4798      	blx	r3
 80061ee:	2837      	cmp	r0, #55	; 0x37
 80061f0:	d803      	bhi.n	80061fa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80061f2:	4b3b      	ldr	r3, [pc, #236]	; (80062e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80061f4:	4a37      	ldr	r2, [pc, #220]	; (80062d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80061f6:	21a5      	movs	r1, #165	; 0xa5
 80061f8:	e7e8      	b.n	80061cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80061fa:	f011 fc29 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80061fe:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80062e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8006202:	3004      	adds	r0, #4
 8006204:	f011 fc8a 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006208:	f8d9 0000 	ldr.w	r0, [r9]
 800620c:	b110      	cbz	r0, 8006214 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800620e:	6803      	ldr	r3, [r0, #0]
 8006210:	68db      	ldr	r3, [r3, #12]
 8006212:	4798      	blx	r3
    if (*currentTrans)
 8006214:	f8d9 0000 	ldr.w	r0, [r9]
 8006218:	b110      	cbz	r0, 8006220 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800621a:	6803      	ldr	r3, [r0, #0]
 800621c:	681b      	ldr	r3, [r3, #0]
 800621e:	4798      	blx	r3
    if (*currentScreen)
 8006220:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80062e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8006224:	f8d8 0000 	ldr.w	r0, [r8]
 8006228:	b110      	cbz	r0, 8006230 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800622a:	6803      	ldr	r3, [r0, #0]
 800622c:	695b      	ldr	r3, [r3, #20]
 800622e:	4798      	blx	r3
    if (*currentPresenter)
 8006230:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006234:	b110      	cbz	r0, 800623c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006236:	6803      	ldr	r3, [r0, #0]
 8006238:	685b      	ldr	r3, [r3, #4]
 800623a:	4798      	blx	r3
    if (*currentScreen)
 800623c:	f8d8 0000 	ldr.w	r0, [r8]
 8006240:	b110      	cbz	r0, 8006248 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006242:	6803      	ldr	r3, [r0, #0]
 8006244:	681b      	ldr	r3, [r3, #0]
 8006246:	4798      	blx	r3
    if (*currentPresenter)
 8006248:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800624c:	b110      	cbz	r0, 8006254 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800624e:	6803      	ldr	r3, [r0, #0]
 8006250:	689b      	ldr	r3, [r3, #8]
 8006252:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006254:	68e0      	ldr	r0, [r4, #12]
 8006256:	2100      	movs	r1, #0
 8006258:	f7ff fc56 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800625c:	2114      	movs	r1, #20
 800625e:	4605      	mov	r5, r0
 8006260:	f7ff fc56 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006264:	68a0      	ldr	r0, [r4, #8]
 8006266:	6803      	ldr	r3, [r0, #0]
 8006268:	2100      	movs	r1, #0
 800626a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800626c:	4798      	blx	r3
 800626e:	4606      	mov	r6, r0
 8006270:	f003 fe72 	bl	8009f58 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006274:	6860      	ldr	r0, [r4, #4]
 8006276:	6803      	ldr	r3, [r0, #0]
 8006278:	2100      	movs	r1, #0
 800627a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800627c:	4798      	blx	r3
 800627e:	4631      	mov	r1, r6
 8006280:	4604      	mov	r4, r0
 8006282:	f003 fe43 	bl	8009f0c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8006286:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800628a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800628e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006292:	b1dc      	cbz	r4, 80062cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8006294:	1d23      	adds	r3, r4, #4
 8006296:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800629a:	6833      	ldr	r3, [r6, #0]
 800629c:	f8c4 a008 	str.w	sl, [r4, #8]
 80062a0:	4630      	mov	r0, r6
 80062a2:	68db      	ldr	r3, [r3, #12]
 80062a4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80062a6:	4798      	blx	r3
    newPresenter->activate();
 80062a8:	6823      	ldr	r3, [r4, #0]
 80062aa:	4620      	mov	r0, r4
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80062b0:	4629      	mov	r1, r5
 80062b2:	4630      	mov	r0, r6
 80062b4:	f013 f9f8 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062b8:	682b      	ldr	r3, [r5, #0]
 80062ba:	4628      	mov	r0, r5
 80062bc:	691b      	ldr	r3, [r3, #16]
 80062be:	4798      	blx	r3
    newTransition->invalidate();
 80062c0:	682b      	ldr	r3, [r5, #0]
 80062c2:	4628      	mov	r0, r5
 80062c4:	695b      	ldr	r3, [r3, #20]
}
 80062c6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80062ca:	4718      	bx	r3
    model->bind(newPresenter);
 80062cc:	4623      	mov	r3, r4
 80062ce:	e7e2      	b.n	8006296 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 80062d0:	0802e6a0 	.word	0x0802e6a0
 80062d4:	0802f433 	.word	0x0802f433
 80062d8:	0802e83c 	.word	0x0802e83c
 80062dc:	0802e883 	.word	0x0802e883
 80062e0:	0802e926 	.word	0x0802e926
 80062e4:	20013894 	.word	0x20013894
 80062e8:	20013890 	.word	0x20013890

080062ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 80062ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80062f0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80062f4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80062f6:	68a0      	ldr	r0, [r4, #8]
 80062f8:	6803      	ldr	r3, [r0, #0]
 80062fa:	6a1b      	ldr	r3, [r3, #32]
 80062fc:	4798      	blx	r3
 80062fe:	f241 43b7 	movw	r3, #5303	; 0x14b7
 8006302:	4298      	cmp	r0, r3
 8006304:	d805      	bhi.n	8006312 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8006306:	4b42      	ldr	r3, [pc, #264]	; (8006410 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8006308:	4a42      	ldr	r2, [pc, #264]	; (8006414 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800630a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800630c:	4842      	ldr	r0, [pc, #264]	; (8006418 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800630e:	f026 fb3b 	bl	802c988 <__assert_func>
 8006312:	6860      	ldr	r0, [r4, #4]
 8006314:	6803      	ldr	r3, [r0, #0]
 8006316:	6a1b      	ldr	r3, [r3, #32]
 8006318:	4798      	blx	r3
 800631a:	280f      	cmp	r0, #15
 800631c:	d803      	bhi.n	8006326 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800631e:	4b3f      	ldr	r3, [pc, #252]	; (800641c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8006320:	4a3c      	ldr	r2, [pc, #240]	; (8006414 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006322:	21a4      	movs	r1, #164	; 0xa4
 8006324:	e7f2      	b.n	800630c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006326:	68e0      	ldr	r0, [r4, #12]
 8006328:	6803      	ldr	r3, [r0, #0]
 800632a:	6a1b      	ldr	r3, [r3, #32]
 800632c:	4798      	blx	r3
 800632e:	2837      	cmp	r0, #55	; 0x37
 8006330:	d803      	bhi.n	800633a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8006332:	4b3b      	ldr	r3, [pc, #236]	; (8006420 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8006334:	4a37      	ldr	r2, [pc, #220]	; (8006414 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006336:	21a5      	movs	r1, #165	; 0xa5
 8006338:	e7e8      	b.n	800630c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800633a:	f011 fb89 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800633e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006424 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8006342:	3004      	adds	r0, #4
 8006344:	f011 fbea 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006348:	f8d9 0000 	ldr.w	r0, [r9]
 800634c:	b110      	cbz	r0, 8006354 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800634e:	6803      	ldr	r3, [r0, #0]
 8006350:	68db      	ldr	r3, [r3, #12]
 8006352:	4798      	blx	r3
    if (*currentTrans)
 8006354:	f8d9 0000 	ldr.w	r0, [r9]
 8006358:	b110      	cbz	r0, 8006360 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800635a:	6803      	ldr	r3, [r0, #0]
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	4798      	blx	r3
    if (*currentScreen)
 8006360:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006428 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8006364:	f8d8 0000 	ldr.w	r0, [r8]
 8006368:	b110      	cbz	r0, 8006370 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800636a:	6803      	ldr	r3, [r0, #0]
 800636c:	695b      	ldr	r3, [r3, #20]
 800636e:	4798      	blx	r3
    if (*currentPresenter)
 8006370:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006374:	b110      	cbz	r0, 800637c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006376:	6803      	ldr	r3, [r0, #0]
 8006378:	685b      	ldr	r3, [r3, #4]
 800637a:	4798      	blx	r3
    if (*currentScreen)
 800637c:	f8d8 0000 	ldr.w	r0, [r8]
 8006380:	b110      	cbz	r0, 8006388 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006382:	6803      	ldr	r3, [r0, #0]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	4798      	blx	r3
    if (*currentPresenter)
 8006388:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800638c:	b110      	cbz	r0, 8006394 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800638e:	6803      	ldr	r3, [r0, #0]
 8006390:	689b      	ldr	r3, [r3, #8]
 8006392:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006394:	68e0      	ldr	r0, [r4, #12]
 8006396:	2100      	movs	r1, #0
 8006398:	f7ff fbb6 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800639c:	2114      	movs	r1, #20
 800639e:	4605      	mov	r5, r0
 80063a0:	f7ff fbb6 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80063a4:	68a0      	ldr	r0, [r4, #8]
 80063a6:	6803      	ldr	r3, [r0, #0]
 80063a8:	2100      	movs	r1, #0
 80063aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063ac:	4798      	blx	r3
 80063ae:	4606      	mov	r6, r0
 80063b0:	f003 fd28 	bl	8009e04 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063b4:	6860      	ldr	r0, [r4, #4]
 80063b6:	6803      	ldr	r3, [r0, #0]
 80063b8:	2100      	movs	r1, #0
 80063ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063bc:	4798      	blx	r3
 80063be:	4631      	mov	r1, r6
 80063c0:	4604      	mov	r4, r0
 80063c2:	f003 fcf9 	bl	8009db8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 80063c6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80063ca:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80063ce:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80063d2:	b1dc      	cbz	r4, 800640c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 80063d4:	1d23      	adds	r3, r4, #4
 80063d6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80063da:	6833      	ldr	r3, [r6, #0]
 80063dc:	f8c4 a008 	str.w	sl, [r4, #8]
 80063e0:	4630      	mov	r0, r6
 80063e2:	68db      	ldr	r3, [r3, #12]
 80063e4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80063e6:	4798      	blx	r3
    newPresenter->activate();
 80063e8:	6823      	ldr	r3, [r4, #0]
 80063ea:	4620      	mov	r0, r4
 80063ec:	681b      	ldr	r3, [r3, #0]
 80063ee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80063f0:	4629      	mov	r1, r5
 80063f2:	4630      	mov	r0, r6
 80063f4:	f013 f958 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80063f8:	682b      	ldr	r3, [r5, #0]
 80063fa:	4628      	mov	r0, r5
 80063fc:	691b      	ldr	r3, [r3, #16]
 80063fe:	4798      	blx	r3
    newTransition->invalidate();
 8006400:	682b      	ldr	r3, [r5, #0]
 8006402:	4628      	mov	r0, r5
 8006404:	695b      	ldr	r3, [r3, #20]
}
 8006406:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800640a:	4718      	bx	r3
    model->bind(newPresenter);
 800640c:	4623      	mov	r3, r4
 800640e:	e7e2      	b.n	80063d6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8006410:	0802e6a0 	.word	0x0802e6a0
 8006414:	0802f575 	.word	0x0802f575
 8006418:	0802e83c 	.word	0x0802e83c
 800641c:	0802e883 	.word	0x0802e883
 8006420:	0802e926 	.word	0x0802e926
 8006424:	20013894 	.word	0x20013894
 8006428:	20013890 	.word	0x20013890

0800642c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 800642c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006430:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006434:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006436:	68a0      	ldr	r0, [r4, #8]
 8006438:	6803      	ldr	r3, [r0, #0]
 800643a:	6a1b      	ldr	r3, [r3, #32]
 800643c:	4798      	blx	r3
 800643e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8006442:	d205      	bcs.n	8006450 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8006444:	4b42      	ldr	r3, [pc, #264]	; (8006550 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8006446:	4a43      	ldr	r2, [pc, #268]	; (8006554 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006448:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800644a:	4843      	ldr	r0, [pc, #268]	; (8006558 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 800644c:	f026 fa9c 	bl	802c988 <__assert_func>
 8006450:	6860      	ldr	r0, [r4, #4]
 8006452:	6803      	ldr	r3, [r0, #0]
 8006454:	6a1b      	ldr	r3, [r3, #32]
 8006456:	4798      	blx	r3
 8006458:	280f      	cmp	r0, #15
 800645a:	d803      	bhi.n	8006464 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 800645c:	4b3f      	ldr	r3, [pc, #252]	; (800655c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 800645e:	4a3d      	ldr	r2, [pc, #244]	; (8006554 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006460:	21a4      	movs	r1, #164	; 0xa4
 8006462:	e7f2      	b.n	800644a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006464:	68e0      	ldr	r0, [r4, #12]
 8006466:	6803      	ldr	r3, [r0, #0]
 8006468:	6a1b      	ldr	r3, [r3, #32]
 800646a:	4798      	blx	r3
 800646c:	2837      	cmp	r0, #55	; 0x37
 800646e:	d803      	bhi.n	8006478 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8006470:	4b3b      	ldr	r3, [pc, #236]	; (8006560 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8006472:	4a38      	ldr	r2, [pc, #224]	; (8006554 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006474:	21a5      	movs	r1, #165	; 0xa5
 8006476:	e7e8      	b.n	800644a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8006478:	f011 faea 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800647c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006564 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8006480:	3004      	adds	r0, #4
 8006482:	f011 fb4b 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006486:	f8d9 0000 	ldr.w	r0, [r9]
 800648a:	b110      	cbz	r0, 8006492 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800648c:	6803      	ldr	r3, [r0, #0]
 800648e:	68db      	ldr	r3, [r3, #12]
 8006490:	4798      	blx	r3
    if (*currentTrans)
 8006492:	f8d9 0000 	ldr.w	r0, [r9]
 8006496:	b110      	cbz	r0, 800649e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8006498:	6803      	ldr	r3, [r0, #0]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	4798      	blx	r3
    if (*currentScreen)
 800649e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8006568 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80064a2:	f8d8 0000 	ldr.w	r0, [r8]
 80064a6:	b110      	cbz	r0, 80064ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80064a8:	6803      	ldr	r3, [r0, #0]
 80064aa:	695b      	ldr	r3, [r3, #20]
 80064ac:	4798      	blx	r3
    if (*currentPresenter)
 80064ae:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064b2:	b110      	cbz	r0, 80064ba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80064b4:	6803      	ldr	r3, [r0, #0]
 80064b6:	685b      	ldr	r3, [r3, #4]
 80064b8:	4798      	blx	r3
    if (*currentScreen)
 80064ba:	f8d8 0000 	ldr.w	r0, [r8]
 80064be:	b110      	cbz	r0, 80064c6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80064c0:	6803      	ldr	r3, [r0, #0]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	4798      	blx	r3
    if (*currentPresenter)
 80064c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064ca:	b110      	cbz	r0, 80064d2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80064cc:	6803      	ldr	r3, [r0, #0]
 80064ce:	689b      	ldr	r3, [r3, #8]
 80064d0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80064d2:	68e0      	ldr	r0, [r4, #12]
 80064d4:	2100      	movs	r1, #0
 80064d6:	f7ff fb17 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80064da:	2114      	movs	r1, #20
 80064dc:	4605      	mov	r5, r0
 80064de:	f7ff fb17 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80064e2:	68a0      	ldr	r0, [r4, #8]
 80064e4:	6803      	ldr	r3, [r0, #0]
 80064e6:	2100      	movs	r1, #0
 80064e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064ea:	4798      	blx	r3
 80064ec:	4606      	mov	r6, r0
 80064ee:	f003 fc2f 	bl	8009d50 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80064f2:	6860      	ldr	r0, [r4, #4]
 80064f4:	6803      	ldr	r3, [r0, #0]
 80064f6:	2100      	movs	r1, #0
 80064f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064fa:	4798      	blx	r3
 80064fc:	4631      	mov	r1, r6
 80064fe:	4604      	mov	r4, r0
 8006500:	f003 fc00 	bl	8009d04 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8006504:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006508:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800650c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006510:	b1dc      	cbz	r4, 800654a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8006512:	1d23      	adds	r3, r4, #4
 8006514:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006518:	6833      	ldr	r3, [r6, #0]
 800651a:	f8c4 a008 	str.w	sl, [r4, #8]
 800651e:	4630      	mov	r0, r6
 8006520:	68db      	ldr	r3, [r3, #12]
 8006522:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006524:	4798      	blx	r3
    newPresenter->activate();
 8006526:	6823      	ldr	r3, [r4, #0]
 8006528:	4620      	mov	r0, r4
 800652a:	681b      	ldr	r3, [r3, #0]
 800652c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800652e:	4629      	mov	r1, r5
 8006530:	4630      	mov	r0, r6
 8006532:	f013 f8b9 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006536:	682b      	ldr	r3, [r5, #0]
 8006538:	4628      	mov	r0, r5
 800653a:	691b      	ldr	r3, [r3, #16]
 800653c:	4798      	blx	r3
    newTransition->invalidate();
 800653e:	682b      	ldr	r3, [r5, #0]
 8006540:	4628      	mov	r0, r5
 8006542:	695b      	ldr	r3, [r3, #20]
}
 8006544:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006548:	4718      	bx	r3
    model->bind(newPresenter);
 800654a:	4623      	mov	r3, r4
 800654c:	e7e2      	b.n	8006514 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 800654e:	bf00      	nop
 8006550:	0802e6a0 	.word	0x0802e6a0
 8006554:	0802f6b7 	.word	0x0802f6b7
 8006558:	0802e83c 	.word	0x0802e83c
 800655c:	0802e883 	.word	0x0802e883
 8006560:	0802e926 	.word	0x0802e926
 8006564:	20013894 	.word	0x20013894
 8006568:	20013890 	.word	0x20013890

0800656c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 800656c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006570:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006574:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006576:	68a0      	ldr	r0, [r4, #8]
 8006578:	6803      	ldr	r3, [r0, #0]
 800657a:	6a1b      	ldr	r3, [r3, #32]
 800657c:	4798      	blx	r3
 800657e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8006582:	d205      	bcs.n	8006590 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8006584:	4b42      	ldr	r3, [pc, #264]	; (8006690 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8006586:	4a43      	ldr	r2, [pc, #268]	; (8006694 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8006588:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800658a:	4843      	ldr	r0, [pc, #268]	; (8006698 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 800658c:	f026 f9fc 	bl	802c988 <__assert_func>
 8006590:	6860      	ldr	r0, [r4, #4]
 8006592:	6803      	ldr	r3, [r0, #0]
 8006594:	6a1b      	ldr	r3, [r3, #32]
 8006596:	4798      	blx	r3
 8006598:	280f      	cmp	r0, #15
 800659a:	d803      	bhi.n	80065a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 800659c:	4b3f      	ldr	r3, [pc, #252]	; (800669c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 800659e:	4a3d      	ldr	r2, [pc, #244]	; (8006694 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065a0:	21a4      	movs	r1, #164	; 0xa4
 80065a2:	e7f2      	b.n	800658a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80065a4:	68e0      	ldr	r0, [r4, #12]
 80065a6:	6803      	ldr	r3, [r0, #0]
 80065a8:	6a1b      	ldr	r3, [r3, #32]
 80065aa:	4798      	blx	r3
 80065ac:	2837      	cmp	r0, #55	; 0x37
 80065ae:	d803      	bhi.n	80065b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 80065b0:	4b3b      	ldr	r3, [pc, #236]	; (80066a0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 80065b2:	4a38      	ldr	r2, [pc, #224]	; (8006694 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065b4:	21a5      	movs	r1, #165	; 0xa5
 80065b6:	e7e8      	b.n	800658a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80065b8:	f011 fa4a 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80065bc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80066a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 80065c0:	3004      	adds	r0, #4
 80065c2:	f011 faab 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80065c6:	f8d9 0000 	ldr.w	r0, [r9]
 80065ca:	b110      	cbz	r0, 80065d2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80065cc:	6803      	ldr	r3, [r0, #0]
 80065ce:	68db      	ldr	r3, [r3, #12]
 80065d0:	4798      	blx	r3
    if (*currentTrans)
 80065d2:	f8d9 0000 	ldr.w	r0, [r9]
 80065d6:	b110      	cbz	r0, 80065de <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80065d8:	6803      	ldr	r3, [r0, #0]
 80065da:	681b      	ldr	r3, [r3, #0]
 80065dc:	4798      	blx	r3
    if (*currentScreen)
 80065de:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80066a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 80065e2:	f8d8 0000 	ldr.w	r0, [r8]
 80065e6:	b110      	cbz	r0, 80065ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80065e8:	6803      	ldr	r3, [r0, #0]
 80065ea:	695b      	ldr	r3, [r3, #20]
 80065ec:	4798      	blx	r3
    if (*currentPresenter)
 80065ee:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80065f2:	b110      	cbz	r0, 80065fa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80065f4:	6803      	ldr	r3, [r0, #0]
 80065f6:	685b      	ldr	r3, [r3, #4]
 80065f8:	4798      	blx	r3
    if (*currentScreen)
 80065fa:	f8d8 0000 	ldr.w	r0, [r8]
 80065fe:	b110      	cbz	r0, 8006606 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8006600:	6803      	ldr	r3, [r0, #0]
 8006602:	681b      	ldr	r3, [r3, #0]
 8006604:	4798      	blx	r3
    if (*currentPresenter)
 8006606:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800660a:	b110      	cbz	r0, 8006612 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800660c:	6803      	ldr	r3, [r0, #0]
 800660e:	689b      	ldr	r3, [r3, #8]
 8006610:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006612:	68e0      	ldr	r0, [r4, #12]
 8006614:	2100      	movs	r1, #0
 8006616:	f7ff fa77 	bl	8005b08 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800661a:	2114      	movs	r1, #20
 800661c:	4605      	mov	r5, r0
 800661e:	f7ff fa77 	bl	8005b10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006622:	68a0      	ldr	r0, [r4, #8]
 8006624:	6803      	ldr	r3, [r0, #0]
 8006626:	2100      	movs	r1, #0
 8006628:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800662a:	4798      	blx	r3
 800662c:	4606      	mov	r6, r0
 800662e:	f003 fa4b 	bl	8009ac8 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006632:	6860      	ldr	r0, [r4, #4]
 8006634:	6803      	ldr	r3, [r0, #0]
 8006636:	2100      	movs	r1, #0
 8006638:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800663a:	4798      	blx	r3
 800663c:	4631      	mov	r1, r6
 800663e:	4604      	mov	r4, r0
 8006640:	f003 fa1c 	bl	8009a7c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8006644:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006648:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800664c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006650:	b1dc      	cbz	r4, 800668a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8006652:	1d23      	adds	r3, r4, #4
 8006654:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006658:	6833      	ldr	r3, [r6, #0]
 800665a:	f8c4 a008 	str.w	sl, [r4, #8]
 800665e:	4630      	mov	r0, r6
 8006660:	68db      	ldr	r3, [r3, #12]
 8006662:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006664:	4798      	blx	r3
    newPresenter->activate();
 8006666:	6823      	ldr	r3, [r4, #0]
 8006668:	4620      	mov	r0, r4
 800666a:	681b      	ldr	r3, [r3, #0]
 800666c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800666e:	4629      	mov	r1, r5
 8006670:	4630      	mov	r0, r6
 8006672:	f013 f819 	bl	80196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006676:	682b      	ldr	r3, [r5, #0]
 8006678:	4628      	mov	r0, r5
 800667a:	691b      	ldr	r3, [r3, #16]
 800667c:	4798      	blx	r3
    newTransition->invalidate();
 800667e:	682b      	ldr	r3, [r5, #0]
 8006680:	4628      	mov	r0, r5
 8006682:	695b      	ldr	r3, [r3, #20]
}
 8006684:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006688:	4718      	bx	r3
    model->bind(newPresenter);
 800668a:	4623      	mov	r3, r4
 800668c:	e7e2      	b.n	8006654 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 800668e:	bf00      	nop
 8006690:	0802e6a0 	.word	0x0802e6a0
 8006694:	0802f7e3 	.word	0x0802f7e3
 8006698:	0802e83c 	.word	0x0802e83c
 800669c:	0802e883 	.word	0x0802e883
 80066a0:	0802e926 	.word	0x0802e926
 80066a4:	20013894 	.word	0x20013894
 80066a8:	20013890 	.word	0x20013890

080066ac <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80066ac:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80066ae:	4770      	bx	lr

080066b0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80066b0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80066b2:	4770      	bx	lr

080066b4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80066b4:	4770      	bx	lr

080066b6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80066b6:	888b      	ldrh	r3, [r1, #4]
 80066b8:	69c0      	ldr	r0, [r0, #28]
 80066ba:	680a      	ldr	r2, [r1, #0]
 80066bc:	0adb      	lsrs	r3, r3, #11
 80066be:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80066c2:	4410      	add	r0, r2
 80066c4:	4770      	bx	lr

080066c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80066c6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80066c8:	b1c2      	cbz	r2, 80066fc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80066ca:	7b13      	ldrb	r3, [r2, #12]
 80066cc:	b1b3      	cbz	r3, 80066fc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80066ce:	7b54      	ldrb	r4, [r2, #13]
 80066d0:	7ad2      	ldrb	r2, [r2, #11]
 80066d2:	0224      	lsls	r4, r4, #8
 80066d4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80066d8:	4314      	orrs	r4, r2
 80066da:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80066dc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80066de:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80066e2:	8813      	ldrh	r3, [r2, #0]
 80066e4:	428b      	cmp	r3, r1
 80066e6:	d102      	bne.n	80066ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80066e8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80066ec:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80066ee:	d805      	bhi.n	80066fc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80066f0:	3801      	subs	r0, #1
 80066f2:	b280      	uxth	r0, r0
 80066f4:	3204      	adds	r2, #4
 80066f6:	2800      	cmp	r0, #0
 80066f8:	d1f3      	bne.n	80066e2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80066fa:	e7f7      	b.n	80066ec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80066fc:	2000      	movs	r0, #0
 80066fe:	e7f5      	b.n	80066ec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006700 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006700:	b510      	push	{r4, lr}
 8006702:	212c      	movs	r1, #44	; 0x2c
 8006704:	4604      	mov	r4, r0
 8006706:	f025 fa58 	bl	802bbba <_ZdlPvj>
 800670a:	4620      	mov	r0, r4
 800670c:	bd10      	pop	{r4, pc}
	...

08006710 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006710:	b530      	push	{r4, r5, lr}
 8006712:	b08b      	sub	sp, #44	; 0x2c
 8006714:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006716:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800671a:	9508      	str	r5, [sp, #32]
 800671c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8006720:	9507      	str	r5, [sp, #28]
 8006722:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8006726:	9506      	str	r5, [sp, #24]
 8006728:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 800672c:	9505      	str	r5, [sp, #20]
 800672e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8006732:	9504      	str	r5, [sp, #16]
 8006734:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006738:	9503      	str	r5, [sp, #12]
 800673a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800673e:	9502      	str	r5, [sp, #8]
 8006740:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006744:	9501      	str	r5, [sp, #4]
 8006746:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800674a:	9500      	str	r5, [sp, #0]
 800674c:	f012 fb16 	bl	8018d7c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8006750:	4b06      	ldr	r3, [pc, #24]	; (800676c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8006752:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006754:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006756:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006758:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800675a:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 800675c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800675e:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8006760:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006762:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006764:	4620      	mov	r0, r4
 8006766:	b00b      	add	sp, #44	; 0x2c
 8006768:	bd30      	pop	{r4, r5, pc}
 800676a:	bf00      	nop
 800676c:	0802fa4c 	.word	0x0802fa4c

08006770 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8006770:	4770      	bx	lr

08006772 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006772:	4770      	bx	lr

08006774 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006774:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006776:	68c2      	ldr	r2, [r0, #12]
 8006778:	6844      	ldr	r4, [r0, #4]
 800677a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800677c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800677e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006782:	07d2      	lsls	r2, r2, #31
 8006784:	bf48      	it	mi
 8006786:	5962      	ldrmi	r2, [r4, r5]
 8006788:	689b      	ldr	r3, [r3, #8]
    }
 800678a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800678c:	bf48      	it	mi
 800678e:	58d3      	ldrmi	r3, [r2, r3]
 8006790:	4718      	bx	r3

08006792 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006792:	6843      	ldr	r3, [r0, #4]
 8006794:	b12b      	cbz	r3, 80067a2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006796:	6883      	ldr	r3, [r0, #8]
 8006798:	b92b      	cbnz	r3, 80067a6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800679a:	68c0      	ldr	r0, [r0, #12]
 800679c:	f000 0001 	and.w	r0, r0, #1
 80067a0:	4770      	bx	lr
 80067a2:	4618      	mov	r0, r3
 80067a4:	4770      	bx	lr
 80067a6:	2001      	movs	r0, #1
    }
 80067a8:	4770      	bx	lr

080067aa <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067aa:	b510      	push	{r4, lr}
 80067ac:	2110      	movs	r1, #16
 80067ae:	4604      	mov	r4, r0
 80067b0:	f025 fa03 	bl	802bbba <_ZdlPvj>
 80067b4:	4620      	mov	r0, r4
 80067b6:	bd10      	pop	{r4, pc}

080067b8 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067b8:	b510      	push	{r4, lr}
 80067ba:	4b03      	ldr	r3, [pc, #12]	; (80067c8 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80067bc:	6003      	str	r3, [r0, #0]
 80067be:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067c0:	f00f fc44 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067c4:	4620      	mov	r0, r4
 80067c6:	bd10      	pop	{r4, pc}
 80067c8:	0802fac4 	.word	0x0802fac4

080067cc <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067cc:	b507      	push	{r0, r1, r2, lr}
 80067ce:	4b07      	ldr	r3, [pc, #28]	; (80067ec <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80067d0:	6003      	str	r3, [r0, #0]
 80067d2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067d4:	f00f fc3a 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067d8:	9801      	ldr	r0, [sp, #4]
 80067da:	f241 117c 	movw	r1, #4476	; 0x117c
 80067de:	f025 f9ec 	bl	802bbba <_ZdlPvj>
 80067e2:	9801      	ldr	r0, [sp, #4]
 80067e4:	b003      	add	sp, #12
 80067e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80067ea:	bf00      	nop
 80067ec:	0802fac4 	.word	0x0802fac4

080067f0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80067f0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 80067f2:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 80067f6:	4299      	cmp	r1, r3
{
 80067f8:	4604      	mov	r4, r0
 80067fa:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 80067fc:	d103      	bne.n	8006806 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80067fe:	f011 f927 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8006802:	f7fe feaf 	bl	8005564 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006806:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800680a:	429d      	cmp	r5, r3
 800680c:	d103      	bne.n	8006816 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800680e:	f011 f91f 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8006812:	f7fe ff37 	bl	8005684 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8006816:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800681a:	429d      	cmp	r5, r3
 800681c:	d103      	bne.n	8006826 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800681e:	f011 f917 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8006822:	f7fe ff3f 	bl	80056a4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8006826:	f504 7446 	add.w	r4, r4, #792	; 0x318
 800682a:	42a5      	cmp	r5, r4
 800682c:	d10a      	bne.n	8006844 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800682e:	4806      	ldr	r0, [pc, #24]	; (8006848 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8006830:	2200      	movs	r2, #0
 8006832:	2120      	movs	r1, #32
 8006834:	f004 faec 	bl	800ae10 <HAL_GPIO_WritePin>
 8006838:	f011 f90a 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 800683c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8006840:	f7fe bf40 	b.w	80056c4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006844:	bd38      	pop	{r3, r4, r5, pc}
 8006846:	bf00      	nop
 8006848:	40021000 	.word	0x40021000

0800684c <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 800684c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006850:	ed2d 8b06 	vpush	{d8-d10}
 8006854:	4604      	mov	r4, r0
 8006856:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006858:	46a3      	mov	fp, r4
        : presenter(0)
 800685a:	2500      	movs	r5, #0
 800685c:	f012 fd78 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 8006860:	4b6a      	ldr	r3, [pc, #424]	; (8006a0c <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8006862:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006864:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006868:	2226      	movs	r2, #38	; 0x26
 800686a:	4629      	mov	r1, r5
 800686c:	4658      	mov	r0, fp
 800686e:	f026 fa90 	bl	802cd92 <memset>
 8006872:	4658      	mov	r0, fp
 8006874:	f7fc fee4 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8006878:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800687c:	26ff      	movs	r6, #255	; 0xff
 800687e:	4b64      	ldr	r3, [pc, #400]	; (8006a10 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8006880:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006882:	2226      	movs	r2, #38	; 0x26
 8006884:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006888:	4629      	mov	r1, r5
 800688a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800688e:	4650      	mov	r0, sl
        : color(col)
 8006890:	66a5      	str	r5, [r4, #104]	; 0x68
 8006892:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006896:	f026 fa7c 	bl	802cd92 <memset>
 800689a:	4650      	mov	r0, sl
 800689c:	f7fc fed0 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80068a0:	4b5c      	ldr	r3, [pc, #368]	; (8006a14 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80068a2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80068a4:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80068a8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80068ac:	a90c      	add	r1, sp, #48	; 0x30
 80068ae:	4650      	mov	r0, sl
 80068b0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80068b4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80068b8:	f00e fbcb 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80068bc:	4648      	mov	r0, r9
 80068be:	f7fc ff23 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80068c2:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80068c6:	4b54      	ldr	r3, [pc, #336]	; (8006a18 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80068c8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80068cc:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80068d0:	4638      	mov	r0, r7
 80068d2:	f00d f8b1 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 80068d6:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80068da:	4618      	mov	r0, r3
 80068dc:	9303      	str	r3, [sp, #12]
 80068de:	f7fc fcb3 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80068e2:	4b4e      	ldr	r3, [pc, #312]	; (8006a1c <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 80068e4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80068e8:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80068ec:	3324      	adds	r3, #36	; 0x24
 80068ee:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80068f2:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80068f6:	4640      	mov	r0, r8
 80068f8:	f7fc ff06 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80068fc:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006900:	4618      	mov	r0, r3
 8006902:	ee08 3a10 	vmov	s16, r3
 8006906:	f7fc feff 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800690a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800690e:	4618      	mov	r0, r3
 8006910:	ee08 3a90 	vmov	s17, r3
 8006914:	f7fc fef8 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8006918:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800691c:	4618      	mov	r0, r3
 800691e:	ee09 3a10 	vmov	s18, r3
 8006922:	f00e fccd 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006926:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800692a:	4618      	mov	r0, r3
 800692c:	ee09 3a90 	vmov	s19, r3
 8006930:	f00e fcc6 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006934:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006938:	4618      	mov	r0, r3
 800693a:	ee0a 3a10 	vmov	s20, r3
 800693e:	f00e fcbf 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006942:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8006946:	4618      	mov	r0, r3
 8006948:	ee0a 3a90 	vmov	s21, r3
 800694c:	f00e fb5a 	bl	8015004 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006950:	4a33      	ldr	r2, [pc, #204]	; (8006a20 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8006952:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006956:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 800695a:	4a32      	ldr	r2, [pc, #200]	; (8006a24 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800695c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006960:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8006964:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8006968:	f00f fb66 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800696c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006970:	462a      	mov	r2, r5
 8006972:	4658      	mov	r0, fp
 8006974:	9300      	str	r3, [sp, #0]
 8006976:	4629      	mov	r1, r5
 8006978:	23f0      	movs	r3, #240	; 0xf0
 800697a:	f7fc fe3c 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800697e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006980:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006984:	66a3      	str	r3, [r4, #104]	; 0x68
 8006986:	4659      	mov	r1, fp
 8006988:	4630      	mov	r0, r6
 800698a:	f00a ff89 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800698e:	462a      	mov	r2, r5
 8006990:	4650      	mov	r0, sl
 8006992:	4629      	mov	r1, r5
 8006994:	f7fc fe22 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006998:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800699a:	4650      	mov	r0, sl
 800699c:	a90c      	add	r1, sp, #48	; 0x30
 800699e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80069a2:	f00e fb56 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80069a6:	4651      	mov	r1, sl
 80069a8:	4630      	mov	r0, r6
 80069aa:	f00a ff79 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80069ae:	f44f 729a 	mov.w	r2, #308	; 0x134
 80069b2:	2156      	movs	r1, #86	; 0x56
 80069b4:	4648      	mov	r0, r9
 80069b6:	f7fc fe11 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80069ba:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80069be:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80069c2:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80069c6:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80069ca:	4650      	mov	r0, sl
 80069cc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80069d0:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80069d4:	4649      	mov	r1, r9
 80069d6:	4798      	blx	r3
 80069d8:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80069dc:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80069e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80069e4:	4b10      	ldr	r3, [pc, #64]	; (8006a28 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 80069e6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 80069e8:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 80069ec:	b92b      	cbnz	r3, 80069fa <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 80069ee:	4b0f      	ldr	r3, [pc, #60]	; (8006a2c <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 80069f0:	4a0f      	ldr	r2, [pc, #60]	; (8006a30 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80069f2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80069f4:	480f      	ldr	r0, [pc, #60]	; (8006a34 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 80069f6:	f025 ffc7 	bl	802c988 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80069fa:	4b0f      	ldr	r3, [pc, #60]	; (8006a38 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80069fc:	881b      	ldrh	r3, [r3, #0]
 80069fe:	2b3e      	cmp	r3, #62	; 0x3e
 8006a00:	d81e      	bhi.n	8006a40 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8006a02:	4b0e      	ldr	r3, [pc, #56]	; (8006a3c <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8006a04:	4a0a      	ldr	r2, [pc, #40]	; (8006a30 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8006a06:	2161      	movs	r1, #97	; 0x61
 8006a08:	e7f4      	b.n	80069f4 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8006a0a:	bf00      	nop
 8006a0c:	0802fac4 	.word	0x0802fac4
 8006a10:	08030a78 	.word	0x08030a78
 8006a14:	08030cc4 	.word	0x08030cc4
 8006a18:	0802e5c4 	.word	0x0802e5c4
 8006a1c:	080307ac 	.word	0x080307ac
 8006a20:	0802faac 	.word	0x0802faac
 8006a24:	080067f1 	.word	0x080067f1
 8006a28:	200138a4 	.word	0x200138a4
 8006a2c:	0802e374 	.word	0x0802e374
 8006a30:	0802e479 	.word	0x0802e479
 8006a34:	0802e3f1 	.word	0x0802e3f1
 8006a38:	200138a8 	.word	0x200138a8
 8006a3c:	0802e438 	.word	0x0802e438
        return texts->getText(typedTextId);
 8006a40:	4ba5      	ldr	r3, [pc, #660]	; (8006cd8 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8006a42:	213e      	movs	r1, #62	; 0x3e
 8006a44:	6818      	ldr	r0, [r3, #0]
 8006a46:	f002 fe4f 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8006a4a:	4aa4      	ldr	r2, [pc, #656]	; (8006cdc <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8006a4c:	4603      	mov	r3, r0
 8006a4e:	2104      	movs	r1, #4
 8006a50:	4650      	mov	r0, sl
 8006a52:	f014 f9ab 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8006a56:	4648      	mov	r0, r9
        wc1 = value;
 8006a58:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006a5c:	f00d fd28 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006a60:	4b9f      	ldr	r3, [pc, #636]	; (8006ce0 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8006a62:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006a64:	a90c      	add	r1, sp, #48	; 0x30
 8006a66:	233f      	movs	r3, #63	; 0x3f
 8006a68:	4648      	mov	r0, r9
 8006a6a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006a6e:	f00d fd3f 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a72:	4649      	mov	r1, r9
 8006a74:	4630      	mov	r0, r6
 8006a76:	f00a ff13 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006a7a:	230a      	movs	r3, #10
 8006a7c:	9300      	str	r3, [sp, #0]
 8006a7e:	2232      	movs	r2, #50	; 0x32
 8006a80:	23f0      	movs	r3, #240	; 0xf0
 8006a82:	4629      	mov	r1, r5
 8006a84:	4638      	mov	r0, r7
 8006a86:	f7fc fdb6 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a8a:	9b03      	ldr	r3, [sp, #12]
 8006a8c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a90:	22a0      	movs	r2, #160	; 0xa0
 8006a92:	4611      	mov	r1, r2
 8006a94:	4638      	mov	r0, r7
 8006a96:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a9a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006a9e:	f00d f8e1 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006aa2:	22a0      	movs	r2, #160	; 0xa0
 8006aa4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006aa8:	4638      	mov	r0, r7
 8006aaa:	f00d f8e6 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006aae:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006ab2:	2b20      	cmp	r3, #32
 8006ab4:	d005      	beq.n	8006ac2 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8006ab6:	2320      	movs	r3, #32
 8006ab8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006abc:	4638      	mov	r0, r7
 8006abe:	f00c ffdb 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006ac2:	4638      	mov	r0, r7
 8006ac4:	2101      	movs	r1, #1
 8006ac6:	f00d f8e3 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006aca:	4639      	mov	r1, r7
 8006acc:	4630      	mov	r0, r6
 8006ace:	ad04      	add	r5, sp, #16
        color = newColor;
 8006ad0:	f04f 37ff 	mov.w	r7, #4294967295
 8006ad4:	f00a fee4 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006ad8:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006adc:	2223      	movs	r2, #35	; 0x23
 8006ade:	4640      	mov	r0, r8
 8006ae0:	2145      	movs	r1, #69	; 0x45
 8006ae2:	f7fc fd7b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006ae6:	4641      	mov	r1, r8
 8006ae8:	4628      	mov	r0, r5
        color = newColor;
 8006aea:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006aee:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006af2:	f00d fa63 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006af6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006afa:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8006afe:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006b02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b06:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006ce0 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8006b0a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006b0e:	2359      	movs	r3, #89	; 0x59
 8006b10:	4649      	mov	r1, r9
 8006b12:	4640      	mov	r0, r8
 8006b14:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006b18:	f00d fcea 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b1c:	4641      	mov	r1, r8
 8006b1e:	4630      	mov	r0, r6
 8006b20:	f00a febe 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006b24:	ee18 0a10 	vmov	r0, s16
 8006b28:	220c      	movs	r2, #12
 8006b2a:	2136      	movs	r1, #54	; 0x36
 8006b2c:	f7fc fd56 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006b30:	ee18 1a10 	vmov	r1, s16
 8006b34:	4628      	mov	r0, r5
        color = newColor;
 8006b36:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006b3a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006b3e:	f00d fa3d 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006b46:	ee18 3a10 	vmov	r3, s16
 8006b4a:	333c      	adds	r3, #60	; 0x3c
 8006b4c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b50:	235a      	movs	r3, #90	; 0x5a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006b52:	ee18 0a10 	vmov	r0, s16
 8006b56:	4649      	mov	r1, r9
 8006b58:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006b5c:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006b60:	f00d fcc6 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b64:	ee18 1a10 	vmov	r1, s16
 8006b68:	4630      	mov	r0, r6
 8006b6a:	f00a fe99 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8006b6e:	ee18 0a90 	vmov	r0, s17
 8006b72:	223c      	movs	r2, #60	; 0x3c
 8006b74:	2158      	movs	r1, #88	; 0x58
 8006b76:	f7fc fd31 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006b7a:	ee18 1a90 	vmov	r1, s17
 8006b7e:	4628      	mov	r0, r5
        color = newColor;
 8006b80:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006b84:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006b88:	f00d fa18 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b8c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006b90:	ee18 3a90 	vmov	r3, s17
 8006b94:	333c      	adds	r3, #60	; 0x3c
 8006b96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b9a:	232e      	movs	r3, #46	; 0x2e
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006b9c:	ee18 0a90 	vmov	r0, s17
 8006ba0:	4649      	mov	r1, r9
 8006ba2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006ba6:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006baa:	f00d fca1 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006bae:	ee18 1a90 	vmov	r1, s17
 8006bb2:	4630      	mov	r0, r6
 8006bb4:	f00a fe74 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006bb8:	ee19 0a10 	vmov	r0, s18
 8006bbc:	22f0      	movs	r2, #240	; 0xf0
 8006bbe:	2121      	movs	r1, #33	; 0x21
 8006bc0:	f7fc fd0c 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006bc4:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006bc8:	464a      	mov	r2, r9
 8006bca:	f04f 0802 	mov.w	r8, #2
 8006bce:	a90b      	add	r1, sp, #44	; 0x2c
 8006bd0:	ee19 0a10 	vmov	r0, s18
 8006bd4:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006bd8:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006bdc:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006be0:	f00e f841 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006be4:	235b      	movs	r3, #91	; 0x5b
 8006be6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006bea:	350c      	adds	r5, #12
        updateTextPosition();
 8006bec:	ee19 0a10 	vmov	r0, s18
 8006bf0:	f7fc fd38 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bf4:	ee19 1a10 	vmov	r1, s18
 8006bf8:	4630      	mov	r0, r6
        colorPressed = col;
 8006bfa:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006bfe:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006c02:	f00a fe4d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006c06:	ee19 0a90 	vmov	r0, s19
 8006c0a:	22aa      	movs	r2, #170	; 0xaa
 8006c0c:	2121      	movs	r1, #33	; 0x21
 8006c0e:	f7fc fce5 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c12:	464a      	mov	r2, r9
 8006c14:	a90b      	add	r1, sp, #44	; 0x2c
 8006c16:	ee19 0a90 	vmov	r0, s19
 8006c1a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006c1e:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006c22:	f00e f820 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c26:	235c      	movs	r3, #92	; 0x5c
 8006c28:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006c2c:	ee19 0a90 	vmov	r0, s19
 8006c30:	f7fc fd18 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c34:	ee19 1a90 	vmov	r1, s19
 8006c38:	4630      	mov	r0, r6
        colorPressed = col;
 8006c3a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006c3e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006c42:	f00a fe2d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006c46:	ee1a 0a10 	vmov	r0, s20
 8006c4a:	2264      	movs	r2, #100	; 0x64
 8006c4c:	2121      	movs	r1, #33	; 0x21
 8006c4e:	f7fc fcc5 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c52:	464a      	mov	r2, r9
 8006c54:	a90b      	add	r1, sp, #44	; 0x2c
 8006c56:	ee1a 0a10 	vmov	r0, s20
 8006c5a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006c5e:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006c62:	f00e f800 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c66:	235d      	movs	r3, #93	; 0x5d
 8006c68:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8006c6c:	ee1a 0a10 	vmov	r0, s20
 8006c70:	f7fc fcf8 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c74:	ee1a 1a10 	vmov	r1, s20
 8006c78:	4630      	mov	r0, r6
        colorPressed = col;
 8006c7a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006c7e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006c82:	f00a fe0d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8006c86:	ee1a 0a90 	vmov	r0, s21
 8006c8a:	2205      	movs	r2, #5
 8006c8c:	21c6      	movs	r1, #198	; 0xc6
 8006c8e:	f7fc fca5 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006c92:	2301      	movs	r3, #1
 8006c94:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c98:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006c9a:	ee1a 0a90 	vmov	r0, s21
 8006c9e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ca2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006ca6:	aa0a      	add	r2, sp, #40	; 0x28
 8006ca8:	ab0b      	add	r3, sp, #44	; 0x2c
 8006caa:	a909      	add	r1, sp, #36	; 0x24
 8006cac:	f8cd 9000 	str.w	r9, [sp]
 8006cb0:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006cb4:	f00e f911 	bl	8014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006cb8:	4630      	mov	r0, r6
 8006cba:	ee1a 1a90 	vmov	r1, s21
 8006cbe:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8006cc2:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8006cc6:	f00a fdeb 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006cca:	4620      	mov	r0, r4
 8006ccc:	b00f      	add	sp, #60	; 0x3c
 8006cce:	ecbd 8b06 	vpop	{d8-d10}
 8006cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006cd6:	bf00      	nop
 8006cd8:	200138b0 	.word	0x200138b0
 8006cdc:	0802e4b1 	.word	0x0802e4b1
 8006ce0:	0802e524 	.word	0x0802e524

08006ce4 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006ce4:	4770      	bx	lr

08006ce6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ce6:	4770      	bx	lr

08006ce8 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006ce8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006cea:	68c2      	ldr	r2, [r0, #12]
 8006cec:	6844      	ldr	r4, [r0, #4]
 8006cee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006cf0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006cf2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006cf6:	07d2      	lsls	r2, r2, #31
 8006cf8:	bf48      	it	mi
 8006cfa:	5962      	ldrmi	r2, [r4, r5]
 8006cfc:	689b      	ldr	r3, [r3, #8]
    }
 8006cfe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d00:	bf48      	it	mi
 8006d02:	58d3      	ldrmi	r3, [r2, r3]
 8006d04:	4718      	bx	r3

08006d06 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006d06:	6843      	ldr	r3, [r0, #4]
 8006d08:	b12b      	cbz	r3, 8006d16 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006d0a:	6883      	ldr	r3, [r0, #8]
 8006d0c:	b92b      	cbnz	r3, 8006d1a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006d0e:	68c0      	ldr	r0, [r0, #12]
 8006d10:	f000 0001 	and.w	r0, r0, #1
 8006d14:	4770      	bx	lr
 8006d16:	4618      	mov	r0, r3
 8006d18:	4770      	bx	lr
 8006d1a:	2001      	movs	r0, #1
    }
 8006d1c:	4770      	bx	lr

08006d1e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d1e:	b510      	push	{r4, lr}
 8006d20:	2110      	movs	r1, #16
 8006d22:	4604      	mov	r4, r0
 8006d24:	f024 ff49 	bl	802bbba <_ZdlPvj>
 8006d28:	4620      	mov	r0, r4
 8006d2a:	bd10      	pop	{r4, pc}

08006d2c <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006d2c:	b510      	push	{r4, lr}
 8006d2e:	4b03      	ldr	r3, [pc, #12]	; (8006d3c <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006d30:	6003      	str	r3, [r0, #0]
 8006d32:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006d34:	f00f f98a 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006d38:	4620      	mov	r0, r4
 8006d3a:	bd10      	pop	{r4, pc}
 8006d3c:	0802fb10 	.word	0x0802fb10

08006d40 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006d40:	b507      	push	{r0, r1, r2, lr}
 8006d42:	4b07      	ldr	r3, [pc, #28]	; (8006d60 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006d44:	6003      	str	r3, [r0, #0]
 8006d46:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006d48:	f00f f980 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006d4c:	9801      	ldr	r0, [sp, #4]
 8006d4e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006d52:	f024 ff32 	bl	802bbba <_ZdlPvj>
 8006d56:	9801      	ldr	r0, [sp, #4]
 8006d58:	b003      	add	sp, #12
 8006d5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006d5e:	bf00      	nop
 8006d60:	0802fb10 	.word	0x0802fb10

08006d64 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006d64:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006d66:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006d6a:	4299      	cmp	r1, r3
{
 8006d6c:	4604      	mov	r4, r0
 8006d6e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006d70:	d103      	bne.n	8006d7a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006d72:	f010 fe6d 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006d76:	f7fe fbe5 	bl	8005544 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006d7a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006d7e:	429d      	cmp	r5, r3
 8006d80:	d103      	bne.n	8006d8a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006d82:	f010 fe65 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006d86:	f7fe fc0d 	bl	80055a4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006d8a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006d8e:	42a5      	cmp	r5, r4
 8006d90:	d105      	bne.n	8006d9e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006d92:	f010 fe5d 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006d96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006d9a:	f7fe bc33 	b.w	8005604 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006d9e:	bd38      	pop	{r3, r4, r5, pc}

08006da0 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006da4:	ed2d 8b06 	vpush	{d8-d10}
 8006da8:	4604      	mov	r4, r0
 8006daa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006dac:	46a3      	mov	fp, r4
 8006dae:	2500      	movs	r5, #0
 8006db0:	f012 face 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 8006db4:	4b66      	ldr	r3, [pc, #408]	; (8006f50 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006db6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006db8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006dbc:	2226      	movs	r2, #38	; 0x26
 8006dbe:	4629      	mov	r1, r5
 8006dc0:	4658      	mov	r0, fp
 8006dc2:	f025 ffe6 	bl	802cd92 <memset>
 8006dc6:	4658      	mov	r0, fp
 8006dc8:	f7fc fc3a 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8006dcc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006dd0:	26ff      	movs	r6, #255	; 0xff
 8006dd2:	4b60      	ldr	r3, [pc, #384]	; (8006f54 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006dd4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006dd6:	2226      	movs	r2, #38	; 0x26
 8006dd8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006ddc:	4629      	mov	r1, r5
 8006dde:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006de2:	4650      	mov	r0, sl
 8006de4:	66a5      	str	r5, [r4, #104]	; 0x68
 8006de6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006dea:	f025 ffd2 	bl	802cd92 <memset>
 8006dee:	4650      	mov	r0, sl
 8006df0:	f7fc fc26 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8006df4:	4b58      	ldr	r3, [pc, #352]	; (8006f58 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8006df6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006df8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006dfc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006e00:	a90a      	add	r1, sp, #40	; 0x28
 8006e02:	4650      	mov	r0, sl
 8006e04:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006e08:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006e0c:	f00e f921 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006e10:	4648      	mov	r0, r9
 8006e12:	f7fc fc79 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006e16:	4b51      	ldr	r3, [pc, #324]	; (8006f5c <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8006e18:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006e1c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006e20:	4618      	mov	r0, r3
 8006e22:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006e26:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006e2a:	ee08 3a90 	vmov	s17, r3
 8006e2e:	f7fc fc6b 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8006e32:	4638      	mov	r0, r7
 8006e34:	f00c fe00 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8006e38:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006e3c:	4618      	mov	r0, r3
 8006e3e:	9303      	str	r3, [sp, #12]
 8006e40:	f7fc fa02 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006e44:	4b46      	ldr	r3, [pc, #280]	; (8006f60 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8006e46:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006e4a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006e4e:	3324      	adds	r3, #36	; 0x24
 8006e50:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006e54:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006e58:	4640      	mov	r0, r8
 8006e5a:	f7fc fc55 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8006e5e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006e62:	4618      	mov	r0, r3
 8006e64:	ee08 3a10 	vmov	s16, r3
 8006e68:	f7fc fc4e 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8006e6c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006e70:	4618      	mov	r0, r3
 8006e72:	ee09 3a10 	vmov	s18, r3
 8006e76:	f00e fa23 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006e7a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006e7e:	4618      	mov	r0, r3
 8006e80:	ee09 3a90 	vmov	s19, r3
 8006e84:	f00e fa1c 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006e88:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006e8c:	4618      	mov	r0, r3
 8006e8e:	ee0a 3a10 	vmov	s20, r3
 8006e92:	f00e fa15 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006e96:	4a33      	ldr	r2, [pc, #204]	; (8006f64 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006e98:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006e9c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006ea0:	4a31      	ldr	r2, [pc, #196]	; (8006f68 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006ea2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006ea6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006eaa:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006eae:	f00f f8c3 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006eb2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006eb6:	462a      	mov	r2, r5
 8006eb8:	4658      	mov	r0, fp
 8006eba:	9300      	str	r3, [sp, #0]
 8006ebc:	4629      	mov	r1, r5
 8006ebe:	23f0      	movs	r3, #240	; 0xf0
 8006ec0:	f7fc fb99 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ec4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006ec6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006eca:	66a3      	str	r3, [r4, #104]	; 0x68
 8006ecc:	4659      	mov	r1, fp
 8006ece:	4630      	mov	r0, r6
 8006ed0:	f00a fce6 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006ed4:	462a      	mov	r2, r5
 8006ed6:	4650      	mov	r0, sl
 8006ed8:	4629      	mov	r1, r5
 8006eda:	f7fc fb7f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8006ede:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006ee0:	4650      	mov	r0, sl
 8006ee2:	a90a      	add	r1, sp, #40	; 0x28
 8006ee4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ee8:	f00e f8b3 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006eec:	4651      	mov	r1, sl
 8006eee:	4630      	mov	r0, r6
 8006ef0:	f00a fcd6 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006ef4:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006ef8:	2156      	movs	r1, #86	; 0x56
 8006efa:	4648      	mov	r0, r9
 8006efc:	f7fc fb6e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006f00:	f04f 33ff 	mov.w	r3, #4294967295
 8006f04:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006f08:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006f0c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006f10:	f10d 0b10 	add.w	fp, sp, #16
 8006f14:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006f18:	4649      	mov	r1, r9
 8006f1a:	4658      	mov	r0, fp
 8006f1c:	4798      	blx	r3
 8006f1e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006f22:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006f26:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006f2a:	4b10      	ldr	r3, [pc, #64]	; (8006f6c <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006f2c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006f2e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006f32:	b92b      	cbnz	r3, 8006f40 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006f34:	4b0e      	ldr	r3, [pc, #56]	; (8006f70 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8006f36:	4a0f      	ldr	r2, [pc, #60]	; (8006f74 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006f38:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f3a:	480f      	ldr	r0, [pc, #60]	; (8006f78 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006f3c:	f025 fd24 	bl	802c988 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006f40:	4b0e      	ldr	r3, [pc, #56]	; (8006f7c <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f42:	881b      	ldrh	r3, [r3, #0]
 8006f44:	2b2f      	cmp	r3, #47	; 0x2f
 8006f46:	d81d      	bhi.n	8006f84 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006f48:	4b0d      	ldr	r3, [pc, #52]	; (8006f80 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006f4a:	4a0a      	ldr	r2, [pc, #40]	; (8006f74 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006f4c:	2161      	movs	r1, #97	; 0x61
 8006f4e:	e7f4      	b.n	8006f3a <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8006f50:	0802fb10 	.word	0x0802fb10
 8006f54:	08030a78 	.word	0x08030a78
 8006f58:	08030cc4 	.word	0x08030cc4
 8006f5c:	0802e5c4 	.word	0x0802e5c4
 8006f60:	080307ac 	.word	0x080307ac
 8006f64:	0802faf8 	.word	0x0802faf8
 8006f68:	08006d65 	.word	0x08006d65
 8006f6c:	200138a4 	.word	0x200138a4
 8006f70:	0802e374 	.word	0x0802e374
 8006f74:	0802e479 	.word	0x0802e479
 8006f78:	0802e3f1 	.word	0x0802e3f1
 8006f7c:	200138a8 	.word	0x200138a8
 8006f80:	0802e438 	.word	0x0802e438
        return texts->getText(typedTextId);
 8006f84:	4b95      	ldr	r3, [pc, #596]	; (80071dc <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8006f86:	212f      	movs	r1, #47	; 0x2f
 8006f88:	6818      	ldr	r0, [r3, #0]
 8006f8a:	f002 fbad 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8006f8e:	4a94      	ldr	r2, [pc, #592]	; (80071e0 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006f90:	4603      	mov	r3, r0
 8006f92:	2104      	movs	r1, #4
 8006f94:	4650      	mov	r0, sl
 8006f96:	f013 ff09 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006f9a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006f9e:	4648      	mov	r0, r9
 8006fa0:	f00d fa86 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006fa4:	f8df a23c 	ldr.w	sl, [pc, #572]	; 80071e4 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006fa8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006fac:	2330      	movs	r3, #48	; 0x30
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006fae:	a90a      	add	r1, sp, #40	; 0x28
 8006fb0:	4648      	mov	r0, r9
 8006fb2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fb6:	f00d fa9b 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fba:	4649      	mov	r1, r9
 8006fbc:	4630      	mov	r0, r6
 8006fbe:	f00a fc6f 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006fc2:	223c      	movs	r2, #60	; 0x3c
 8006fc4:	ee18 0a90 	vmov	r0, s17
 8006fc8:	213d      	movs	r1, #61	; 0x3d
 8006fca:	f7fc fb07 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006fce:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006fd2:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006fd6:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006fda:	4658      	mov	r0, fp
        linespace = space;
 8006fdc:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006fe0:	f00c ffec 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006fe4:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006fe8:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006fec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ff0:	233d      	movs	r3, #61	; 0x3d
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006ff2:	ee18 0a90 	vmov	r0, s17
 8006ff6:	a90a      	add	r1, sp, #40	; 0x28
 8006ff8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ffc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007000:	f00d fa76 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007004:	ee18 1a90 	vmov	r1, s17
 8007008:	4630      	mov	r0, r6
 800700a:	f00a fc49 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800700e:	230a      	movs	r3, #10
 8007010:	9300      	str	r3, [sp, #0]
 8007012:	2232      	movs	r2, #50	; 0x32
 8007014:	23f0      	movs	r3, #240	; 0xf0
 8007016:	4629      	mov	r1, r5
 8007018:	4638      	mov	r0, r7
 800701a:	f7fc faec 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800701e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007022:	22a0      	movs	r2, #160	; 0xa0
 8007024:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007028:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 800702c:	9b03      	ldr	r3, [sp, #12]
 800702e:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007032:	4611      	mov	r1, r2
 8007034:	4638      	mov	r0, r7
 8007036:	f00c fe15 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800703a:	22a0      	movs	r2, #160	; 0xa0
 800703c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007040:	4638      	mov	r0, r7
 8007042:	f00c fe1a 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007046:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800704a:	2b20      	cmp	r3, #32
 800704c:	d005      	beq.n	800705a <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800704e:	2320      	movs	r3, #32
 8007050:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007054:	4638      	mov	r0, r7
 8007056:	f00c fd0f 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800705a:	4638      	mov	r0, r7
 800705c:	2101      	movs	r1, #1
 800705e:	f00c fe17 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007062:	4639      	mov	r1, r7
 8007064:	4630      	mov	r0, r6
 8007066:	f00a fc1b 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800706a:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800706e:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007070:	2223      	movs	r2, #35	; 0x23
 8007072:	4640      	mov	r0, r8
        linespace = space;
 8007074:	f04f 0a00 	mov.w	sl, #0
 8007078:	2145      	movs	r1, #69	; 0x45
 800707a:	f7fc faaf 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800707e:	4641      	mov	r1, r8
 8007080:	4638      	mov	r0, r7
        color = newColor;
 8007082:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007086:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800708a:	f00c ff97 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800708e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007092:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007096:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800709a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80071e4 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800709e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80070a2:	2357      	movs	r3, #87	; 0x57
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80070a4:	a90a      	add	r1, sp, #40	; 0x28
 80070a6:	4640      	mov	r0, r8
 80070a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070ac:	f00d fa20 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070b0:	4641      	mov	r1, r8
 80070b2:	4630      	mov	r0, r6
 80070b4:	f00a fbf4 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80070b8:	ee18 0a10 	vmov	r0, s16
 80070bc:	220c      	movs	r2, #12
 80070be:	2136      	movs	r1, #54	; 0x36
 80070c0:	f7fc fa8c 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80070c4:	ee18 1a10 	vmov	r1, s16
 80070c8:	4638      	mov	r0, r7
        color = newColor;
 80070ca:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80070ce:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80070d2:	f00c ff73 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070d6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80070da:	ee18 3a10 	vmov	r3, s16
 80070de:	333c      	adds	r3, #60	; 0x3c
 80070e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070e4:	2358      	movs	r3, #88	; 0x58
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 80070e6:	ee18 0a10 	vmov	r0, s16
 80070ea:	a90a      	add	r1, sp, #40	; 0x28
 80070ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070f0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80070f4:	f00d f9fc 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070f8:	ee18 1a10 	vmov	r1, s16
 80070fc:	4630      	mov	r0, r6
 80070fe:	f00a fbcf 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007102:	ee19 0a10 	vmov	r0, s18
 8007106:	22f0      	movs	r2, #240	; 0xf0
 8007108:	2121      	movs	r1, #33	; 0x21
 800710a:	f7fc fa67 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800710e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007112:	aa0a      	add	r2, sp, #40	; 0x28
 8007114:	f04f 0802 	mov.w	r8, #2
 8007118:	a909      	add	r1, sp, #36	; 0x24
 800711a:	ee19 0a10 	vmov	r0, s18
 800711e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007122:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007126:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800712a:	f00d fd9c 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800712e:	2356      	movs	r3, #86	; 0x56
 8007130:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007134:	3710      	adds	r7, #16
        updateTextPosition();
 8007136:	ee19 0a10 	vmov	r0, s18
 800713a:	f7fc fa93 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800713e:	ee19 1a10 	vmov	r1, s18
 8007142:	4630      	mov	r0, r6
        colorPressed = col;
 8007144:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007148:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 800714c:	f00a fba8 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007150:	ee19 0a90 	vmov	r0, s19
 8007154:	22aa      	movs	r2, #170	; 0xaa
 8007156:	2121      	movs	r1, #33	; 0x21
 8007158:	f7fc fa40 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800715c:	aa0a      	add	r2, sp, #40	; 0x28
 800715e:	a909      	add	r1, sp, #36	; 0x24
 8007160:	ee19 0a90 	vmov	r0, s19
 8007164:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007168:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800716c:	f00d fd7b 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007170:	2355      	movs	r3, #85	; 0x55
 8007172:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007176:	ee19 0a90 	vmov	r0, s19
 800717a:	f7fc fa73 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800717e:	ee19 1a90 	vmov	r1, s19
 8007182:	4630      	mov	r0, r6
        colorPressed = col;
 8007184:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007188:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 800718c:	f00a fb88 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007190:	ee1a 0a10 	vmov	r0, s20
 8007194:	2264      	movs	r2, #100	; 0x64
 8007196:	2121      	movs	r1, #33	; 0x21
 8007198:	f7fc fa20 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800719c:	aa0a      	add	r2, sp, #40	; 0x28
 800719e:	a909      	add	r1, sp, #36	; 0x24
 80071a0:	ee1a 0a10 	vmov	r0, s20
 80071a4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80071a8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80071ac:	f00d fd5b 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80071b0:	2354      	movs	r3, #84	; 0x54
        updateTextPosition();
 80071b2:	ee1a 0a10 	vmov	r0, s20
 80071b6:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80071ba:	f7fc fa53 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80071be:	4630      	mov	r0, r6
        colorPressed = col;
 80071c0:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80071c4:	ee1a 1a10 	vmov	r1, s20
 80071c8:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80071cc:	f00a fb68 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80071d0:	4620      	mov	r0, r4
 80071d2:	b00d      	add	sp, #52	; 0x34
 80071d4:	ecbd 8b06 	vpop	{d8-d10}
 80071d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071dc:	200138b0 	.word	0x200138b0
 80071e0:	0802e4b1 	.word	0x0802e4b1
 80071e4:	0802e524 	.word	0x0802e524

080071e8 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 80071e8:	4770      	bx	lr

080071ea <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071ea:	4770      	bx	lr

080071ec <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80071ec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071ee:	68c2      	ldr	r2, [r0, #12]
 80071f0:	6844      	ldr	r4, [r0, #4]
 80071f2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80071f4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80071f6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80071fa:	07d2      	lsls	r2, r2, #31
 80071fc:	bf48      	it	mi
 80071fe:	5962      	ldrmi	r2, [r4, r5]
 8007200:	689b      	ldr	r3, [r3, #8]
    }
 8007202:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007204:	bf48      	it	mi
 8007206:	58d3      	ldrmi	r3, [r2, r3]
 8007208:	4718      	bx	r3

0800720a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800720a:	6843      	ldr	r3, [r0, #4]
 800720c:	b12b      	cbz	r3, 800721a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800720e:	6883      	ldr	r3, [r0, #8]
 8007210:	b92b      	cbnz	r3, 800721e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007212:	68c0      	ldr	r0, [r0, #12]
 8007214:	f000 0001 	and.w	r0, r0, #1
 8007218:	4770      	bx	lr
 800721a:	4618      	mov	r0, r3
 800721c:	4770      	bx	lr
 800721e:	2001      	movs	r0, #1
    }
 8007220:	4770      	bx	lr

08007222 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007222:	b510      	push	{r4, lr}
 8007224:	2110      	movs	r1, #16
 8007226:	4604      	mov	r4, r0
 8007228:	f024 fcc7 	bl	802bbba <_ZdlPvj>
 800722c:	4620      	mov	r0, r4
 800722e:	bd10      	pop	{r4, pc}

08007230 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007230:	b510      	push	{r4, lr}
 8007232:	4b03      	ldr	r3, [pc, #12]	; (8007240 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8007234:	6003      	str	r3, [r0, #0]
 8007236:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007238:	f00e ff08 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800723c:	4620      	mov	r0, r4
 800723e:	bd10      	pop	{r4, pc}
 8007240:	0802fb5c 	.word	0x0802fb5c

08007244 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007244:	b507      	push	{r0, r1, r2, lr}
 8007246:	4b07      	ldr	r3, [pc, #28]	; (8007264 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8007248:	6003      	str	r3, [r0, #0]
 800724a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800724c:	f00e fefe 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007250:	9801      	ldr	r0, [sp, #4]
 8007252:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007256:	f024 fcb0 	bl	802bbba <_ZdlPvj>
 800725a:	9801      	ldr	r0, [sp, #4]
 800725c:	b003      	add	sp, #12
 800725e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007262:	bf00      	nop
 8007264:	0802fb5c 	.word	0x0802fb5c

08007268 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007268:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800726a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800726e:	4299      	cmp	r1, r3
{
 8007270:	4604      	mov	r4, r0
 8007272:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007274:	d103      	bne.n	800727e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007276:	f010 fbeb 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800727a:	f7fe f983 	bl	8005584 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 800727e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007282:	429d      	cmp	r5, r3
 8007284:	d103      	bne.n	800728e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007286:	f010 fbe3 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 800728a:	f7fe f9eb 	bl	8005664 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 800728e:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8007292:	42a5      	cmp	r5, r4
 8007294:	d105      	bne.n	80072a2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007296:	f010 fbdb 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 800729a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 800729e:	f7fe b9d1 	b.w	8005644 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 80072a2:	bd38      	pop	{r3, r4, r5, pc}

080072a4 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 80072a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072a8:	ed2d 8b06 	vpush	{d8-d10}
 80072ac:	4604      	mov	r4, r0
 80072ae:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 80072b0:	46a3      	mov	fp, r4
 80072b2:	2500      	movs	r5, #0
 80072b4:	f012 f84c 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 80072b8:	4b66      	ldr	r3, [pc, #408]	; (8007454 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 80072ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80072bc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80072c0:	2226      	movs	r2, #38	; 0x26
 80072c2:	4629      	mov	r1, r5
 80072c4:	4658      	mov	r0, fp
 80072c6:	f025 fd64 	bl	802cd92 <memset>
 80072ca:	4658      	mov	r0, fp
 80072cc:	f7fc f9b8 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80072d0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80072d4:	26ff      	movs	r6, #255	; 0xff
 80072d6:	4b60      	ldr	r3, [pc, #384]	; (8007458 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 80072d8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80072da:	2226      	movs	r2, #38	; 0x26
 80072dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80072e0:	4629      	mov	r1, r5
 80072e2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80072e6:	4650      	mov	r0, sl
 80072e8:	66a5      	str	r5, [r4, #104]	; 0x68
 80072ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072ee:	f025 fd50 	bl	802cd92 <memset>
 80072f2:	4650      	mov	r0, sl
 80072f4:	f7fc f9a4 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80072f8:	4b58      	ldr	r3, [pc, #352]	; (800745c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 80072fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80072fc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007300:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007304:	a90a      	add	r1, sp, #40	; 0x28
 8007306:	4650      	mov	r0, sl
 8007308:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800730c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007310:	f00d fe9f 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007314:	4648      	mov	r0, r9
 8007316:	f7fc f9f7 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800731a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800731e:	4b50      	ldr	r3, [pc, #320]	; (8007460 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8007320:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007324:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007328:	4638      	mov	r0, r7
 800732a:	f00c fb85 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 800732e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007332:	4618      	mov	r0, r3
 8007334:	9303      	str	r3, [sp, #12]
 8007336:	f7fb ff87 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800733a:	4b4a      	ldr	r3, [pc, #296]	; (8007464 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 800733c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007340:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8007344:	3324      	adds	r3, #36	; 0x24
 8007346:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800734a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800734e:	4640      	mov	r0, r8
 8007350:	f7fc f9da 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007354:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8007358:	4618      	mov	r0, r3
 800735a:	ee08 3a10 	vmov	s16, r3
 800735e:	f7fc f9d3 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007362:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007366:	4618      	mov	r0, r3
 8007368:	ee08 3a90 	vmov	s17, r3
 800736c:	f7fc f9cc 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007370:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007374:	4618      	mov	r0, r3
 8007376:	ee09 3a10 	vmov	s18, r3
 800737a:	f00d ffa1 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800737e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007382:	4618      	mov	r0, r3
 8007384:	ee09 3a90 	vmov	s19, r3
 8007388:	f00d ff9a 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800738c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007390:	4618      	mov	r0, r3
 8007392:	ee0a 3a10 	vmov	s20, r3
 8007396:	f00d ff93 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800739a:	4a33      	ldr	r2, [pc, #204]	; (8007468 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 800739c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073a0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80073a4:	4a31      	ldr	r2, [pc, #196]	; (800746c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073a6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80073aa:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80073ae:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80073b2:	f00e fe41 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80073b6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80073ba:	462a      	mov	r2, r5
 80073bc:	4658      	mov	r0, fp
 80073be:	9300      	str	r3, [sp, #0]
 80073c0:	4629      	mov	r1, r5
 80073c2:	23f0      	movs	r3, #240	; 0xf0
 80073c4:	f7fc f917 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073c8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80073ca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80073ce:	66a3      	str	r3, [r4, #104]	; 0x68
 80073d0:	4659      	mov	r1, fp
 80073d2:	4630      	mov	r0, r6
 80073d4:	f00a fa64 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80073d8:	462a      	mov	r2, r5
 80073da:	4650      	mov	r0, sl
 80073dc:	4629      	mov	r1, r5
 80073de:	f7fc f8fd 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80073e2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80073e4:	4650      	mov	r0, sl
 80073e6:	a90a      	add	r1, sp, #40	; 0x28
 80073e8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80073ec:	f00d fe31 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80073f0:	4651      	mov	r1, sl
 80073f2:	4630      	mov	r0, r6
 80073f4:	f00a fa54 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80073f8:	f44f 729a 	mov.w	r2, #308	; 0x134
 80073fc:	2156      	movs	r1, #86	; 0x56
 80073fe:	4648      	mov	r0, r9
 8007400:	f7fc f8ec 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007404:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007408:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800740c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007410:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007414:	4650      	mov	r0, sl
 8007416:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800741a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800741e:	4649      	mov	r1, r9
 8007420:	4798      	blx	r3
 8007422:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007426:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800742a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800742e:	4b10      	ldr	r3, [pc, #64]	; (8007470 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8007430:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8007432:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007436:	b92b      	cbnz	r3, 8007444 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8007438:	4b0e      	ldr	r3, [pc, #56]	; (8007474 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 800743a:	4a0f      	ldr	r2, [pc, #60]	; (8007478 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 800743c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800743e:	480f      	ldr	r0, [pc, #60]	; (800747c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8007440:	f025 faa2 	bl	802c988 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007444:	4b0e      	ldr	r3, [pc, #56]	; (8007480 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007446:	881b      	ldrh	r3, [r3, #0]
 8007448:	2b2a      	cmp	r3, #42	; 0x2a
 800744a:	d81d      	bhi.n	8007488 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 800744c:	4b0d      	ldr	r3, [pc, #52]	; (8007484 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800744e:	4a0a      	ldr	r2, [pc, #40]	; (8007478 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8007450:	2161      	movs	r1, #97	; 0x61
 8007452:	e7f4      	b.n	800743e <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8007454:	0802fb5c 	.word	0x0802fb5c
 8007458:	08030a78 	.word	0x08030a78
 800745c:	08030cc4 	.word	0x08030cc4
 8007460:	0802e5c4 	.word	0x0802e5c4
 8007464:	080307ac 	.word	0x080307ac
 8007468:	0802fb44 	.word	0x0802fb44
 800746c:	08007269 	.word	0x08007269
 8007470:	200138a4 	.word	0x200138a4
 8007474:	0802e374 	.word	0x0802e374
 8007478:	0802e479 	.word	0x0802e479
 800747c:	0802e3f1 	.word	0x0802e3f1
 8007480:	200138a8 	.word	0x200138a8
 8007484:	0802e438 	.word	0x0802e438
        return texts->getText(typedTextId);
 8007488:	4b93      	ldr	r3, [pc, #588]	; (80076d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 800748a:	212a      	movs	r1, #42	; 0x2a
 800748c:	6818      	ldr	r0, [r3, #0]
 800748e:	f002 f92b 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8007492:	4a92      	ldr	r2, [pc, #584]	; (80076dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8007494:	4603      	mov	r3, r0
 8007496:	2104      	movs	r1, #4
 8007498:	4650      	mov	r0, sl
 800749a:	f013 fc87 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800749e:	4648      	mov	r0, r9
        wc1 = value;
 80074a0:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80074a4:	f00d f804 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074a8:	4b8d      	ldr	r3, [pc, #564]	; (80076e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 80074aa:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80074ac:	a90a      	add	r1, sp, #40	; 0x28
 80074ae:	232b      	movs	r3, #43	; 0x2b
 80074b0:	4648      	mov	r0, r9
 80074b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074b6:	f00d f81b 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074ba:	4649      	mov	r1, r9
 80074bc:	4630      	mov	r0, r6
 80074be:	f00a f9ef 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80074c2:	230a      	movs	r3, #10
 80074c4:	9300      	str	r3, [sp, #0]
 80074c6:	2232      	movs	r2, #50	; 0x32
 80074c8:	23f0      	movs	r3, #240	; 0xf0
 80074ca:	4629      	mov	r1, r5
 80074cc:	4638      	mov	r0, r7
 80074ce:	f7fc f892 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074d2:	9b03      	ldr	r3, [sp, #12]
 80074d4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80074d8:	22a0      	movs	r2, #160	; 0xa0
 80074da:	4611      	mov	r1, r2
 80074dc:	4638      	mov	r0, r7
 80074de:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80074e2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80074e6:	f00c fbbd 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80074ea:	22a0      	movs	r2, #160	; 0xa0
 80074ec:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80074f0:	4638      	mov	r0, r7
 80074f2:	f00c fbc2 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80074f6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80074fa:	2b20      	cmp	r3, #32
 80074fc:	d005      	beq.n	800750a <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 80074fe:	2320      	movs	r3, #32
 8007500:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007504:	4638      	mov	r0, r7
 8007506:	f00c fab7 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800750a:	4638      	mov	r0, r7
 800750c:	2101      	movs	r1, #1
 800750e:	f00c fbbf 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007512:	4639      	mov	r1, r7
 8007514:	4630      	mov	r0, r6
 8007516:	ad04      	add	r5, sp, #16
        color = newColor;
 8007518:	f04f 37ff 	mov.w	r7, #4294967295
 800751c:	f00a f9c0 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007520:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8007524:	2223      	movs	r2, #35	; 0x23
 8007526:	4640      	mov	r0, r8
 8007528:	2145      	movs	r1, #69	; 0x45
 800752a:	f7fc f857 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800752e:	4641      	mov	r1, r8
 8007530:	4628      	mov	r0, r5
        color = newColor;
 8007532:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8007536:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800753a:	f00c fd3f 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800753e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007542:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007546:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800754a:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80076e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 800754e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007552:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8007554:	a90a      	add	r1, sp, #40	; 0x28
 8007556:	4640      	mov	r0, r8
 8007558:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800755c:	f00c ffc8 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007560:	4641      	mov	r1, r8
 8007562:	4630      	mov	r0, r6
 8007564:	f00a f99c 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007568:	ee18 0a10 	vmov	r0, s16
 800756c:	220c      	movs	r2, #12
 800756e:	2136      	movs	r1, #54	; 0x36
 8007570:	f7fc f834 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007574:	ee18 1a10 	vmov	r1, s16
 8007578:	4628      	mov	r0, r5
        color = newColor;
 800757a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800757e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007582:	f00c fd1b 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007586:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800758a:	ee18 3a10 	vmov	r3, s16
 800758e:	333c      	adds	r3, #60	; 0x3c
 8007590:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007594:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8007596:	ee18 0a10 	vmov	r0, s16
 800759a:	a90a      	add	r1, sp, #40	; 0x28
 800759c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075a0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80075a4:	f00c ffa4 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075a8:	ee18 1a10 	vmov	r1, s16
 80075ac:	4630      	mov	r0, r6
 80075ae:	f00a f977 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 80075b2:	ee18 0a90 	vmov	r0, s17
 80075b6:	223c      	movs	r2, #60	; 0x3c
 80075b8:	2121      	movs	r1, #33	; 0x21
 80075ba:	f7fc f80f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80075be:	ee18 1a90 	vmov	r1, s17
 80075c2:	4628      	mov	r0, r5
        color = newColor;
 80075c4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80075c8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80075cc:	f00c fcf6 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075d4:	ee18 3a90 	vmov	r3, s17
 80075d8:	333c      	adds	r3, #60	; 0x3c
 80075da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075de:	2339      	movs	r3, #57	; 0x39
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80075e0:	ee18 0a90 	vmov	r0, s17
 80075e4:	a90a      	add	r1, sp, #40	; 0x28
 80075e6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075ea:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80075ee:	f00c ff7f 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075f2:	ee18 1a90 	vmov	r1, s17
 80075f6:	4630      	mov	r0, r6
 80075f8:	f00a f952 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80075fc:	ee19 0a10 	vmov	r0, s18
 8007600:	22f0      	movs	r2, #240	; 0xf0
 8007602:	2121      	movs	r1, #33	; 0x21
 8007604:	f7fb ffea 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007608:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800760c:	aa0a      	add	r2, sp, #40	; 0x28
 800760e:	f04f 0802 	mov.w	r8, #2
 8007612:	a909      	add	r1, sp, #36	; 0x24
 8007614:	ee19 0a10 	vmov	r0, s18
 8007618:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800761c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007620:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007624:	f00d fb1f 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007628:	2348      	movs	r3, #72	; 0x48
 800762a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800762e:	3510      	adds	r5, #16
        updateTextPosition();
 8007630:	ee19 0a10 	vmov	r0, s18
 8007634:	f7fc f816 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007638:	ee19 1a10 	vmov	r1, s18
 800763c:	4630      	mov	r0, r6
        colorPressed = col;
 800763e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8007642:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8007646:	f00a f92b 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800764a:	ee19 0a90 	vmov	r0, s19
 800764e:	22aa      	movs	r2, #170	; 0xaa
 8007650:	2121      	movs	r1, #33	; 0x21
 8007652:	f7fb ffc3 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007656:	aa0a      	add	r2, sp, #40	; 0x28
 8007658:	a909      	add	r1, sp, #36	; 0x24
 800765a:	ee19 0a90 	vmov	r0, s19
 800765e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007662:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007666:	f00d fafe 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800766a:	2347      	movs	r3, #71	; 0x47
 800766c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007670:	ee19 0a90 	vmov	r0, s19
 8007674:	f7fb fff6 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007678:	ee19 1a90 	vmov	r1, s19
 800767c:	4630      	mov	r0, r6
        colorPressed = col;
 800767e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8007682:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8007686:	f00a f90b 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800768a:	ee1a 0a10 	vmov	r0, s20
 800768e:	2264      	movs	r2, #100	; 0x64
 8007690:	2121      	movs	r1, #33	; 0x21
 8007692:	f7fb ffa3 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007696:	aa0a      	add	r2, sp, #40	; 0x28
 8007698:	a909      	add	r1, sp, #36	; 0x24
 800769a:	ee1a 0a10 	vmov	r0, s20
 800769e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80076a2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076a6:	f00d fade 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076aa:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 80076ac:	ee1a 0a10 	vmov	r0, s20
 80076b0:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80076b4:	f7fb ffd6 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076b8:	4630      	mov	r0, r6
        colorPressed = col;
 80076ba:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80076be:	ee1a 1a10 	vmov	r1, s20
 80076c2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80076c6:	f00a f8eb 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80076ca:	4620      	mov	r0, r4
 80076cc:	b00d      	add	sp, #52	; 0x34
 80076ce:	ecbd 8b06 	vpop	{d8-d10}
 80076d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076d6:	bf00      	nop
 80076d8:	200138b0 	.word	0x200138b0
 80076dc:	0802e4b1 	.word	0x0802e4b1
 80076e0:	0802e524 	.word	0x0802e524

080076e4 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 80076e4:	4770      	bx	lr

080076e6 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80076e6:	4770      	bx	lr

080076e8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80076e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076ea:	68c2      	ldr	r2, [r0, #12]
 80076ec:	6844      	ldr	r4, [r0, #4]
 80076ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80076f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80076f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80076f6:	07d2      	lsls	r2, r2, #31
 80076f8:	bf48      	it	mi
 80076fa:	5962      	ldrmi	r2, [r4, r5]
 80076fc:	689b      	ldr	r3, [r3, #8]
    }
 80076fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007700:	bf48      	it	mi
 8007702:	58d3      	ldrmi	r3, [r2, r3]
 8007704:	4718      	bx	r3

08007706 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007706:	6843      	ldr	r3, [r0, #4]
 8007708:	b12b      	cbz	r3, 8007716 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800770a:	6883      	ldr	r3, [r0, #8]
 800770c:	b92b      	cbnz	r3, 800771a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800770e:	68c0      	ldr	r0, [r0, #12]
 8007710:	f000 0001 	and.w	r0, r0, #1
 8007714:	4770      	bx	lr
 8007716:	4618      	mov	r0, r3
 8007718:	4770      	bx	lr
 800771a:	2001      	movs	r0, #1
    }
 800771c:	4770      	bx	lr

0800771e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800771e:	b510      	push	{r4, lr}
 8007720:	2110      	movs	r1, #16
 8007722:	4604      	mov	r4, r0
 8007724:	f024 fa49 	bl	802bbba <_ZdlPvj>
 8007728:	4620      	mov	r0, r4
 800772a:	bd10      	pop	{r4, pc}

0800772c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800772c:	b510      	push	{r4, lr}
 800772e:	4b03      	ldr	r3, [pc, #12]	; (800773c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8007730:	6003      	str	r3, [r0, #0]
 8007732:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007734:	f00e fc8a 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007738:	4620      	mov	r0, r4
 800773a:	bd10      	pop	{r4, pc}
 800773c:	0802fba8 	.word	0x0802fba8

08007740 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007740:	b507      	push	{r0, r1, r2, lr}
 8007742:	4b07      	ldr	r3, [pc, #28]	; (8007760 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8007744:	6003      	str	r3, [r0, #0]
 8007746:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007748:	f00e fc80 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800774c:	9801      	ldr	r0, [sp, #4]
 800774e:	f241 015c 	movw	r1, #4188	; 0x105c
 8007752:	f024 fa32 	bl	802bbba <_ZdlPvj>
 8007756:	9801      	ldr	r0, [sp, #4]
 8007758:	b003      	add	sp, #12
 800775a:	f85d fb04 	ldr.w	pc, [sp], #4
 800775e:	bf00      	nop
 8007760:	0802fba8 	.word	0x0802fba8

08007764 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007764:	3098      	adds	r0, #152	; 0x98
 8007766:	4288      	cmp	r0, r1
{
 8007768:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800776a:	d105      	bne.n	8007778 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800776c:	f010 f970 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007770:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007774:	f7fd bf56 	b.w	8005624 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007778:	bd08      	pop	{r3, pc}
	...

0800777c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 800777c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007780:	ed2d 8b02 	vpush	{d8}
 8007784:	4604      	mov	r4, r0
 8007786:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007788:	46a1      	mov	r9, r4
 800778a:	2500      	movs	r5, #0
 800778c:	f011 fde0 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 8007790:	4ba5      	ldr	r3, [pc, #660]	; (8007a28 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8007792:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007794:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007798:	2226      	movs	r2, #38	; 0x26
 800779a:	4629      	mov	r1, r5
 800779c:	4648      	mov	r0, r9
 800779e:	f025 faf8 	bl	802cd92 <memset>
 80077a2:	4648      	mov	r0, r9
 80077a4:	f7fb ff4c 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80077a8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80077ac:	26ff      	movs	r6, #255	; 0xff
 80077ae:	4b9f      	ldr	r3, [pc, #636]	; (8007a2c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 80077b0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80077b2:	2226      	movs	r2, #38	; 0x26
 80077b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80077b8:	4629      	mov	r1, r5
 80077ba:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80077be:	4640      	mov	r0, r8
 80077c0:	66a5      	str	r5, [r4, #104]	; 0x68
 80077c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077c6:	f025 fae4 	bl	802cd92 <memset>
 80077ca:	4640      	mov	r0, r8
 80077cc:	f7fb ff38 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80077d0:	4b97      	ldr	r3, [pc, #604]	; (8007a30 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 80077d2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80077d4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80077d8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80077dc:	a90a      	add	r1, sp, #40	; 0x28
 80077de:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80077e2:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80077e4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80077e8:	f00d fc33 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80077ec:	4658      	mov	r0, fp
 80077ee:	f00d fd67 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80077f2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80077f6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80077fa:	4618      	mov	r0, r3
 80077fc:	ee08 3a90 	vmov	s17, r3
 8007800:	f7fb ff82 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007804:	4638      	mov	r0, r7
 8007806:	f00c f917 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 800780a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800780e:	4618      	mov	r0, r3
 8007810:	9303      	str	r3, [sp, #12]
 8007812:	f7fb fd19 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007816:	4b87      	ldr	r3, [pc, #540]	; (8007a34 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8007818:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800781c:	3324      	adds	r3, #36	; 0x24
 800781e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8007822:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007826:	4618      	mov	r0, r3
 8007828:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800782c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007830:	ee08 3a10 	vmov	s16, r3
 8007834:	f7fb ff68 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007838:	4650      	mov	r0, sl
 800783a:	f7fb ff65 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800783e:	4a7e      	ldr	r2, [pc, #504]	; (8007a38 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8007840:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007844:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007848:	4a7c      	ldr	r2, [pc, #496]	; (8007a3c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800784a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800784e:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007852:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007856:	f00e fbef 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800785a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800785e:	462a      	mov	r2, r5
 8007860:	4648      	mov	r0, r9
 8007862:	9300      	str	r3, [sp, #0]
 8007864:	4629      	mov	r1, r5
 8007866:	23f0      	movs	r3, #240	; 0xf0
 8007868:	f7fb fec5 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800786c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800786e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007872:	66a3      	str	r3, [r4, #104]	; 0x68
 8007874:	4649      	mov	r1, r9
 8007876:	4630      	mov	r0, r6
 8007878:	f00a f812 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800787c:	462a      	mov	r2, r5
 800787e:	4640      	mov	r0, r8
 8007880:	4629      	mov	r1, r5
 8007882:	f7fb feab 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007886:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007888:	4640      	mov	r0, r8
 800788a:	a90a      	add	r1, sp, #40	; 0x28
 800788c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007890:	f00d fbdf 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007894:	4641      	mov	r1, r8
 8007896:	4630      	mov	r0, r6
 8007898:	f00a f802 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800789c:	4658      	mov	r0, fp
 800789e:	f240 1201 	movw	r2, #257	; 0x101
 80078a2:	2121      	movs	r1, #33	; 0x21
 80078a4:	f7fb fe9a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80078a8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80078aa:	aa0a      	add	r2, sp, #40	; 0x28
 80078ac:	a909      	add	r1, sp, #36	; 0x24
 80078ae:	4658      	mov	r0, fp
 80078b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80078b4:	2302      	movs	r3, #2
 80078b6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078ba:	f00d f9d4 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80078be:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80078c0:	4658      	mov	r0, fp
 80078c2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80078c6:	f7fb fecd 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80078ca:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80078ce:	330c      	adds	r3, #12
        color = col;
 80078d0:	f04f 39ff 	mov.w	r9, #4294967295
 80078d4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80078d8:	4659      	mov	r1, fp
 80078da:	4630      	mov	r0, r6
        colorPressed = col;
 80078dc:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80078e0:	f009 ffde 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80078e4:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80078e8:	223c      	movs	r2, #60	; 0x3c
 80078ea:	ee18 0a90 	vmov	r0, s17
 80078ee:	2117      	movs	r1, #23
 80078f0:	f7fb fe74 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80078f4:	ee18 1a90 	vmov	r1, s17
 80078f8:	4640      	mov	r0, r8
        color = newColor;
 80078fa:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80078fe:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007902:	f00c fb5b 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007906:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800790a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800790e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007912:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007a40 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8007916:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800791a:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 800791c:	ee18 0a90 	vmov	r0, s17
 8007920:	a90a      	add	r1, sp, #40	; 0x28
 8007922:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007926:	f00c fde3 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800792a:	ee18 1a90 	vmov	r1, s17
 800792e:	4630      	mov	r0, r6
 8007930:	f009 ffb6 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007934:	230a      	movs	r3, #10
 8007936:	9300      	str	r3, [sp, #0]
 8007938:	2232      	movs	r2, #50	; 0x32
 800793a:	23f0      	movs	r3, #240	; 0xf0
 800793c:	4629      	mov	r1, r5
 800793e:	4638      	mov	r0, r7
 8007940:	f7fb fe59 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007944:	9b03      	ldr	r3, [sp, #12]
 8007946:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800794a:	22a0      	movs	r2, #160	; 0xa0
 800794c:	4611      	mov	r1, r2
 800794e:	4638      	mov	r0, r7
 8007950:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007954:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007958:	f00c f984 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800795c:	22a0      	movs	r2, #160	; 0xa0
 800795e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007962:	4638      	mov	r0, r7
 8007964:	f00c f989 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007968:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800796c:	2b20      	cmp	r3, #32
 800796e:	d005      	beq.n	800797c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007970:	2320      	movs	r3, #32
 8007972:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007976:	4638      	mov	r0, r7
 8007978:	f00c f87e 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800797c:	4638      	mov	r0, r7
 800797e:	2101      	movs	r1, #1
 8007980:	f00c f986 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007984:	4639      	mov	r1, r7
 8007986:	4630      	mov	r0, r6
 8007988:	f009 ff8a 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800798c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007990:	ee18 0a10 	vmov	r0, s16
 8007994:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007996:	2500      	movs	r5, #0
 8007998:	2145      	movs	r1, #69	; 0x45
 800799a:	f7fb fe1f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800799e:	ee18 1a10 	vmov	r1, s16
 80079a2:	4640      	mov	r0, r8
        color = newColor;
 80079a4:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80079a8:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80079ac:	f00c fb06 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079b0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80079b4:	ee18 3a10 	vmov	r3, s16
 80079b8:	333c      	adds	r3, #60	; 0x3c
 80079ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079be:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80079c0:	ee18 0a10 	vmov	r0, s16
 80079c4:	a90a      	add	r1, sp, #40	; 0x28
 80079c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079ca:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80079ce:	f00c fd8f 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079d2:	ee18 1a10 	vmov	r1, s16
 80079d6:	4630      	mov	r0, r6
 80079d8:	f009 ff62 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80079dc:	220c      	movs	r2, #12
 80079de:	4650      	mov	r0, sl
 80079e0:	2136      	movs	r1, #54	; 0x36
 80079e2:	f7fb fdfb 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80079e6:	4651      	mov	r1, sl
 80079e8:	4640      	mov	r0, r8
        color = newColor;
 80079ea:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80079ee:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80079f2:	f00c fae3 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079f6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80079fa:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80079fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a02:	2338      	movs	r3, #56	; 0x38
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8007a04:	a90a      	add	r1, sp, #40	; 0x28
 8007a06:	4650      	mov	r0, sl
 8007a08:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a0c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007a10:	f00c fd6e 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a14:	4630      	mov	r0, r6
 8007a16:	4651      	mov	r1, sl
 8007a18:	f009 ff42 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007a1c:	4620      	mov	r0, r4
 8007a1e:	b00d      	add	sp, #52	; 0x34
 8007a20:	ecbd 8b02 	vpop	{d8}
 8007a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a28:	0802fba8 	.word	0x0802fba8
 8007a2c:	08030a78 	.word	0x08030a78
 8007a30:	08030cc4 	.word	0x08030cc4
 8007a34:	080307ac 	.word	0x080307ac
 8007a38:	0802fb90 	.word	0x0802fb90
 8007a3c:	08007765 	.word	0x08007765
 8007a40:	0802e524 	.word	0x0802e524

08007a44 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8007a44:	4770      	bx	lr

08007a46 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a46:	4770      	bx	lr

08007a48 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007a48:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a4a:	68c2      	ldr	r2, [r0, #12]
 8007a4c:	6844      	ldr	r4, [r0, #4]
 8007a4e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007a50:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007a52:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007a56:	07d2      	lsls	r2, r2, #31
 8007a58:	bf48      	it	mi
 8007a5a:	5962      	ldrmi	r2, [r4, r5]
 8007a5c:	689b      	ldr	r3, [r3, #8]
    }
 8007a5e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a60:	bf48      	it	mi
 8007a62:	58d3      	ldrmi	r3, [r2, r3]
 8007a64:	4718      	bx	r3

08007a66 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007a66:	6843      	ldr	r3, [r0, #4]
 8007a68:	b12b      	cbz	r3, 8007a76 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007a6a:	6883      	ldr	r3, [r0, #8]
 8007a6c:	b92b      	cbnz	r3, 8007a7a <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007a6e:	68c0      	ldr	r0, [r0, #12]
 8007a70:	f000 0001 	and.w	r0, r0, #1
 8007a74:	4770      	bx	lr
 8007a76:	4618      	mov	r0, r3
 8007a78:	4770      	bx	lr
 8007a7a:	2001      	movs	r0, #1
    }
 8007a7c:	4770      	bx	lr

08007a7e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a7e:	b510      	push	{r4, lr}
 8007a80:	2110      	movs	r1, #16
 8007a82:	4604      	mov	r4, r0
 8007a84:	f024 f899 	bl	802bbba <_ZdlPvj>
 8007a88:	4620      	mov	r0, r4
 8007a8a:	bd10      	pop	{r4, pc}

08007a8c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007a8c:	b510      	push	{r4, lr}
 8007a8e:	4b03      	ldr	r3, [pc, #12]	; (8007a9c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8007a90:	6003      	str	r3, [r0, #0]
 8007a92:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a94:	f00e fada 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a98:	4620      	mov	r0, r4
 8007a9a:	bd10      	pop	{r4, pc}
 8007a9c:	0802fbf4 	.word	0x0802fbf4

08007aa0 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007aa0:	b507      	push	{r0, r1, r2, lr}
 8007aa2:	4b07      	ldr	r3, [pc, #28]	; (8007ac0 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8007aa4:	6003      	str	r3, [r0, #0]
 8007aa6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007aa8:	f00e fad0 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007aac:	9801      	ldr	r0, [sp, #4]
 8007aae:	f241 015c 	movw	r1, #4188	; 0x105c
 8007ab2:	f024 f882 	bl	802bbba <_ZdlPvj>
 8007ab6:	9801      	ldr	r0, [sp, #4]
 8007ab8:	b003      	add	sp, #12
 8007aba:	f85d fb04 	ldr.w	pc, [sp], #4
 8007abe:	bf00      	nop
 8007ac0:	0802fbf4 	.word	0x0802fbf4

08007ac4 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007ac4:	3098      	adds	r0, #152	; 0x98
 8007ac6:	4288      	cmp	r0, r1
{
 8007ac8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007aca:	d105      	bne.n	8007ad8 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007acc:	f00f ffc0 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007ad0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007ad4:	f7fd bda6 	b.w	8005624 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007ad8:	bd08      	pop	{r3, pc}
	...

08007adc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8007adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ae0:	ed2d 8b02 	vpush	{d8}
 8007ae4:	4604      	mov	r4, r0
 8007ae6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8007ae8:	46a1      	mov	r9, r4
 8007aea:	2500      	movs	r5, #0
 8007aec:	f011 fc30 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 8007af0:	4ba5      	ldr	r3, [pc, #660]	; (8007d88 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8007af2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007af4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007af8:	2226      	movs	r2, #38	; 0x26
 8007afa:	4629      	mov	r1, r5
 8007afc:	4648      	mov	r0, r9
 8007afe:	f025 f948 	bl	802cd92 <memset>
 8007b02:	4648      	mov	r0, r9
 8007b04:	f7fb fd9c 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8007b08:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007b0c:	26ff      	movs	r6, #255	; 0xff
 8007b0e:	4b9f      	ldr	r3, [pc, #636]	; (8007d8c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8007b10:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007b12:	2226      	movs	r2, #38	; 0x26
 8007b14:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007b18:	4629      	mov	r1, r5
 8007b1a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007b1e:	4640      	mov	r0, r8
 8007b20:	66a5      	str	r5, [r4, #104]	; 0x68
 8007b22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b26:	f025 f934 	bl	802cd92 <memset>
 8007b2a:	4640      	mov	r0, r8
 8007b2c:	f7fb fd88 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8007b30:	4b97      	ldr	r3, [pc, #604]	; (8007d90 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8007b32:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007b34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007b38:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007b3c:	a90a      	add	r1, sp, #40	; 0x28
 8007b3e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007b42:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007b44:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007b48:	f00d fa83 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b4c:	4658      	mov	r0, fp
 8007b4e:	f00d fbb7 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007b52:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8007b56:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8007b5a:	4618      	mov	r0, r3
 8007b5c:	ee08 3a90 	vmov	s17, r3
 8007b60:	f7fb fdd2 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007b64:	4638      	mov	r0, r7
 8007b66:	f00b ff67 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8007b6a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007b6e:	4618      	mov	r0, r3
 8007b70:	9303      	str	r3, [sp, #12]
 8007b72:	f7fb fb69 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007b76:	4b87      	ldr	r3, [pc, #540]	; (8007d94 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8007b78:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8007b7c:	3324      	adds	r3, #36	; 0x24
 8007b7e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8007b82:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007b86:	4618      	mov	r0, r3
 8007b88:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8007b8c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007b90:	ee08 3a10 	vmov	s16, r3
 8007b94:	f7fb fdb8 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007b98:	4650      	mov	r0, sl
 8007b9a:	f7fb fdb5 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007b9e:	4a7e      	ldr	r2, [pc, #504]	; (8007d98 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8007ba0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ba4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007ba8:	4a7c      	ldr	r2, [pc, #496]	; (8007d9c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007baa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007bae:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007bb2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007bb6:	f00e fa3f 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007bba:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007bbe:	462a      	mov	r2, r5
 8007bc0:	4648      	mov	r0, r9
 8007bc2:	9300      	str	r3, [sp, #0]
 8007bc4:	4629      	mov	r1, r5
 8007bc6:	23f0      	movs	r3, #240	; 0xf0
 8007bc8:	f7fb fd15 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bcc:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007bce:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007bd2:	66a3      	str	r3, [r4, #104]	; 0x68
 8007bd4:	4649      	mov	r1, r9
 8007bd6:	4630      	mov	r0, r6
 8007bd8:	f009 fe62 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007bdc:	462a      	mov	r2, r5
 8007bde:	4640      	mov	r0, r8
 8007be0:	4629      	mov	r1, r5
 8007be2:	f7fb fcfb 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007be6:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007be8:	4640      	mov	r0, r8
 8007bea:	a90a      	add	r1, sp, #40	; 0x28
 8007bec:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007bf0:	f00d fa2f 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007bf4:	4641      	mov	r1, r8
 8007bf6:	4630      	mov	r0, r6
 8007bf8:	f009 fe52 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007bfc:	4658      	mov	r0, fp
 8007bfe:	f240 1201 	movw	r2, #257	; 0x101
 8007c02:	2121      	movs	r1, #33	; 0x21
 8007c04:	f7fb fcea 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007c08:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c0a:	aa0a      	add	r2, sp, #40	; 0x28
 8007c0c:	a909      	add	r1, sp, #36	; 0x24
 8007c0e:	4658      	mov	r0, fp
 8007c10:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007c14:	2302      	movs	r3, #2
 8007c16:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c1a:	f00d f824 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007c1e:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 8007c20:	4658      	mov	r0, fp
 8007c22:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8007c26:	f7fb fd1d 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007c2a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007c2e:	330c      	adds	r3, #12
        color = col;
 8007c30:	f04f 39ff 	mov.w	r9, #4294967295
 8007c34:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007c38:	4659      	mov	r1, fp
 8007c3a:	4630      	mov	r0, r6
        colorPressed = col;
 8007c3c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8007c40:	f009 fe2e 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007c44:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007c48:	223c      	movs	r2, #60	; 0x3c
 8007c4a:	ee18 0a90 	vmov	r0, s17
 8007c4e:	2117      	movs	r1, #23
 8007c50:	f7fb fcc4 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007c54:	ee18 1a90 	vmov	r1, s17
 8007c58:	4640      	mov	r0, r8
        color = newColor;
 8007c5a:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8007c5e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007c62:	f00c f9ab 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c66:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007c6a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007c6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007c72:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007da0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 8007c76:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007c7a:	2232      	movs	r2, #50	; 0x32
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8007c7c:	ee18 0a90 	vmov	r0, s17
 8007c80:	a90a      	add	r1, sp, #40	; 0x28
 8007c82:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007c86:	f00c fc33 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c8a:	ee18 1a90 	vmov	r1, s17
 8007c8e:	4630      	mov	r0, r6
 8007c90:	f009 fe06 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007c94:	230a      	movs	r3, #10
 8007c96:	9300      	str	r3, [sp, #0]
 8007c98:	2232      	movs	r2, #50	; 0x32
 8007c9a:	23f0      	movs	r3, #240	; 0xf0
 8007c9c:	4629      	mov	r1, r5
 8007c9e:	4638      	mov	r0, r7
 8007ca0:	f7fb fca9 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ca4:	9b03      	ldr	r3, [sp, #12]
 8007ca6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007caa:	22a0      	movs	r2, #160	; 0xa0
 8007cac:	4611      	mov	r1, r2
 8007cae:	4638      	mov	r0, r7
 8007cb0:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007cb4:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007cb8:	f00b ffd4 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cbc:	22a0      	movs	r2, #160	; 0xa0
 8007cbe:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007cc2:	4638      	mov	r0, r7
 8007cc4:	f00b ffd9 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007cc8:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007ccc:	2b20      	cmp	r3, #32
 8007cce:	d005      	beq.n	8007cdc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007cd0:	2320      	movs	r3, #32
 8007cd2:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007cd6:	4638      	mov	r0, r7
 8007cd8:	f00b fece 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007cdc:	4638      	mov	r0, r7
 8007cde:	2101      	movs	r1, #1
 8007ce0:	f00b ffd6 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007ce4:	4639      	mov	r1, r7
 8007ce6:	4630      	mov	r0, r6
 8007ce8:	f009 fdda 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007cec:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007cf0:	ee18 0a10 	vmov	r0, s16
 8007cf4:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007cf6:	2500      	movs	r5, #0
 8007cf8:	2145      	movs	r1, #69	; 0x45
 8007cfa:	f7fb fc6f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007cfe:	ee18 1a10 	vmov	r1, s16
 8007d02:	4640      	mov	r0, r8
        color = newColor;
 8007d04:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007d08:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007d0c:	f00c f956 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d10:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007d14:	ee18 3a10 	vmov	r3, s16
 8007d18:	333c      	adds	r3, #60	; 0x3c
 8007d1a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d1e:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007d20:	ee18 0a10 	vmov	r0, s16
 8007d24:	a90a      	add	r1, sp, #40	; 0x28
 8007d26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d2a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007d2e:	f00c fbdf 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d32:	ee18 1a10 	vmov	r1, s16
 8007d36:	4630      	mov	r0, r6
 8007d38:	f009 fdb2 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d3c:	220c      	movs	r2, #12
 8007d3e:	4650      	mov	r0, sl
 8007d40:	2136      	movs	r1, #54	; 0x36
 8007d42:	f7fb fc4b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007d46:	4651      	mov	r1, sl
 8007d48:	4640      	mov	r0, r8
        color = newColor;
 8007d4a:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8007d4e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8007d52:	f00c f933 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d56:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007d5a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007d5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d62:	2334      	movs	r3, #52	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8007d64:	a90a      	add	r1, sp, #40	; 0x28
 8007d66:	4650      	mov	r0, sl
 8007d68:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d6c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007d70:	f00c fbbe 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d74:	4630      	mov	r0, r6
 8007d76:	4651      	mov	r1, sl
 8007d78:	f009 fd92 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d7c:	4620      	mov	r0, r4
 8007d7e:	b00d      	add	sp, #52	; 0x34
 8007d80:	ecbd 8b02 	vpop	{d8}
 8007d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d88:	0802fbf4 	.word	0x0802fbf4
 8007d8c:	08030a78 	.word	0x08030a78
 8007d90:	08030cc4 	.word	0x08030cc4
 8007d94:	080307ac 	.word	0x080307ac
 8007d98:	0802fbdc 	.word	0x0802fbdc
 8007d9c:	08007ac5 	.word	0x08007ac5
 8007da0:	0802e524 	.word	0x0802e524

08007da4 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8007da4:	4770      	bx	lr

08007da6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007da6:	4770      	bx	lr

08007da8 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007da8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007daa:	68c2      	ldr	r2, [r0, #12]
 8007dac:	6844      	ldr	r4, [r0, #4]
 8007dae:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007db0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007db2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007db6:	07d2      	lsls	r2, r2, #31
 8007db8:	bf48      	it	mi
 8007dba:	5962      	ldrmi	r2, [r4, r5]
 8007dbc:	689b      	ldr	r3, [r3, #8]
    }
 8007dbe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007dc0:	bf48      	it	mi
 8007dc2:	58d3      	ldrmi	r3, [r2, r3]
 8007dc4:	4718      	bx	r3

08007dc6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007dc6:	6843      	ldr	r3, [r0, #4]
 8007dc8:	b12b      	cbz	r3, 8007dd6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007dca:	6883      	ldr	r3, [r0, #8]
 8007dcc:	b92b      	cbnz	r3, 8007dda <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007dce:	68c0      	ldr	r0, [r0, #12]
 8007dd0:	f000 0001 	and.w	r0, r0, #1
 8007dd4:	4770      	bx	lr
 8007dd6:	4618      	mov	r0, r3
 8007dd8:	4770      	bx	lr
 8007dda:	2001      	movs	r0, #1
    }
 8007ddc:	4770      	bx	lr

08007dde <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007dde:	b510      	push	{r4, lr}
 8007de0:	2110      	movs	r1, #16
 8007de2:	4604      	mov	r4, r0
 8007de4:	f023 fee9 	bl	802bbba <_ZdlPvj>
 8007de8:	4620      	mov	r0, r4
 8007dea:	bd10      	pop	{r4, pc}

08007dec <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007dec:	b510      	push	{r4, lr}
 8007dee:	4b03      	ldr	r3, [pc, #12]	; (8007dfc <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007df0:	6003      	str	r3, [r0, #0]
 8007df2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007df4:	f00e f92a 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007df8:	4620      	mov	r0, r4
 8007dfa:	bd10      	pop	{r4, pc}
 8007dfc:	0802fc40 	.word	0x0802fc40

08007e00 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007e00:	b507      	push	{r0, r1, r2, lr}
 8007e02:	4b07      	ldr	r3, [pc, #28]	; (8007e20 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007e04:	6003      	str	r3, [r0, #0]
 8007e06:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e08:	f00e f920 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e0c:	9801      	ldr	r0, [sp, #4]
 8007e0e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007e12:	f023 fed2 	bl	802bbba <_ZdlPvj>
 8007e16:	9801      	ldr	r0, [sp, #4]
 8007e18:	b003      	add	sp, #12
 8007e1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8007e1e:	bf00      	nop
 8007e20:	0802fc40 	.word	0x0802fc40

08007e24 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007e24:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8007e26:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8007e2a:	4299      	cmp	r1, r3
{
 8007e2c:	4604      	mov	r4, r0
 8007e2e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007e30:	d103      	bne.n	8007e3a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007e32:	f00f fe0d 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007e36:	f7fd fba5 	bl	8005584 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8007e3a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007e3e:	429d      	cmp	r5, r3
 8007e40:	d103      	bne.n	8007e4a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007e42:	f00f fe05 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8007e46:	f7fd fbbd 	bl	80055c4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8007e4a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8007e4e:	42a5      	cmp	r5, r4
 8007e50:	d105      	bne.n	8007e5e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007e52:	f00f fdfd 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8007e56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8007e5a:	f7fd bbc3 	b.w	80055e4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8007e5e:	bd38      	pop	{r3, r4, r5, pc}

08007e60 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007e60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e64:	ed2d 8b06 	vpush	{d8-d10}
 8007e68:	4604      	mov	r4, r0
 8007e6a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8007e6c:	46a3      	mov	fp, r4
 8007e6e:	2500      	movs	r5, #0
 8007e70:	f011 fa6e 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 8007e74:	4b66      	ldr	r3, [pc, #408]	; (8008010 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8007e76:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007e78:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007e7c:	2226      	movs	r2, #38	; 0x26
 8007e7e:	4629      	mov	r1, r5
 8007e80:	4658      	mov	r0, fp
 8007e82:	f024 ff86 	bl	802cd92 <memset>
 8007e86:	4658      	mov	r0, fp
 8007e88:	f7fb fbda 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8007e8c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007e90:	26ff      	movs	r6, #255	; 0xff
 8007e92:	4b60      	ldr	r3, [pc, #384]	; (8008014 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8007e94:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007e96:	2226      	movs	r2, #38	; 0x26
 8007e98:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007e9c:	4629      	mov	r1, r5
 8007e9e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007ea2:	4650      	mov	r0, sl
 8007ea4:	66a5      	str	r5, [r4, #104]	; 0x68
 8007ea6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007eaa:	f024 ff72 	bl	802cd92 <memset>
 8007eae:	4650      	mov	r0, sl
 8007eb0:	f7fb fbc6 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8007eb4:	4b58      	ldr	r3, [pc, #352]	; (8008018 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8007eb6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007eb8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007ebc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007ec0:	a90a      	add	r1, sp, #40	; 0x28
 8007ec2:	4650      	mov	r0, sl
 8007ec4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007ec8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007ecc:	f00d f8c1 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007ed0:	4648      	mov	r0, r9
 8007ed2:	f7fb fc19 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007ed6:	4b51      	ldr	r3, [pc, #324]	; (800801c <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007ed8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007edc:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007ee0:	4618      	mov	r0, r3
 8007ee2:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007ee6:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8007eea:	ee08 3a90 	vmov	s17, r3
 8007eee:	f7fb fc0b 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007ef2:	4638      	mov	r0, r7
 8007ef4:	f00b fda0 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8007ef8:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007efc:	4618      	mov	r0, r3
 8007efe:	9303      	str	r3, [sp, #12]
 8007f00:	f7fb f9a2 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f04:	4b46      	ldr	r3, [pc, #280]	; (8008020 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8007f06:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8007f0a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007f0e:	3324      	adds	r3, #36	; 0x24
 8007f10:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007f14:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007f18:	4640      	mov	r0, r8
 8007f1a:	f7fb fbf5 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007f1e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007f22:	4618      	mov	r0, r3
 8007f24:	ee08 3a10 	vmov	s16, r3
 8007f28:	f7fb fbee 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8007f2c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007f30:	4618      	mov	r0, r3
 8007f32:	ee09 3a10 	vmov	s18, r3
 8007f36:	f00d f9c3 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007f3a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007f3e:	4618      	mov	r0, r3
 8007f40:	ee09 3a90 	vmov	s19, r3
 8007f44:	f00d f9bc 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007f48:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007f4c:	4618      	mov	r0, r3
 8007f4e:	ee0a 3a10 	vmov	s20, r3
 8007f52:	f00d f9b5 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007f56:	4a33      	ldr	r2, [pc, #204]	; (8008024 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8007f58:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007f5c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007f60:	4a31      	ldr	r2, [pc, #196]	; (8008028 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007f62:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007f66:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8007f6a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8007f6e:	f00e f863 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007f72:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007f76:	462a      	mov	r2, r5
 8007f78:	4658      	mov	r0, fp
 8007f7a:	9300      	str	r3, [sp, #0]
 8007f7c:	4629      	mov	r1, r5
 8007f7e:	23f0      	movs	r3, #240	; 0xf0
 8007f80:	f7fb fb39 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f84:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007f86:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007f8a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007f8c:	4659      	mov	r1, fp
 8007f8e:	4630      	mov	r0, r6
 8007f90:	f009 fc86 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007f94:	462a      	mov	r2, r5
 8007f96:	4650      	mov	r0, sl
 8007f98:	4629      	mov	r1, r5
 8007f9a:	f7fb fb1f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8007f9e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007fa0:	4650      	mov	r0, sl
 8007fa2:	a90a      	add	r1, sp, #40	; 0x28
 8007fa4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007fa8:	f00d f853 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007fac:	4651      	mov	r1, sl
 8007fae:	4630      	mov	r0, r6
 8007fb0:	f009 fc76 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007fb4:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007fb8:	2156      	movs	r1, #86	; 0x56
 8007fba:	4648      	mov	r0, r9
 8007fbc:	f7fb fb0e 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007fc0:	f04f 33ff 	mov.w	r3, #4294967295
 8007fc4:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007fc8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007fcc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007fd0:	f10d 0b10 	add.w	fp, sp, #16
 8007fd4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007fd8:	4649      	mov	r1, r9
 8007fda:	4658      	mov	r0, fp
 8007fdc:	4798      	blx	r3
 8007fde:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007fe2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007fe6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007fea:	4b10      	ldr	r3, [pc, #64]	; (800802c <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007fec:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007fee:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007ff2:	b92b      	cbnz	r3, 8008000 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007ff4:	4b0e      	ldr	r3, [pc, #56]	; (8008030 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007ff6:	4a0f      	ldr	r2, [pc, #60]	; (8008034 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007ff8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ffa:	480f      	ldr	r0, [pc, #60]	; (8008038 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007ffc:	f024 fcc4 	bl	802c988 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008000:	4b0e      	ldr	r3, [pc, #56]	; (800803c <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008002:	881b      	ldrh	r3, [r3, #0]
 8008004:	2b2c      	cmp	r3, #44	; 0x2c
 8008006:	d81d      	bhi.n	8008044 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8008008:	4b0d      	ldr	r3, [pc, #52]	; (8008040 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 800800a:	4a0a      	ldr	r2, [pc, #40]	; (8008034 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800800c:	2161      	movs	r1, #97	; 0x61
 800800e:	e7f4      	b.n	8007ffa <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8008010:	0802fc40 	.word	0x0802fc40
 8008014:	08030a78 	.word	0x08030a78
 8008018:	08030cc4 	.word	0x08030cc4
 800801c:	0802e5c4 	.word	0x0802e5c4
 8008020:	080307ac 	.word	0x080307ac
 8008024:	0802fc28 	.word	0x0802fc28
 8008028:	08007e25 	.word	0x08007e25
 800802c:	200138a4 	.word	0x200138a4
 8008030:	0802e374 	.word	0x0802e374
 8008034:	0802e479 	.word	0x0802e479
 8008038:	0802e3f1 	.word	0x0802e3f1
 800803c:	200138a8 	.word	0x200138a8
 8008040:	0802e438 	.word	0x0802e438
        return texts->getText(typedTextId);
 8008044:	4b95      	ldr	r3, [pc, #596]	; (800829c <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8008046:	212c      	movs	r1, #44	; 0x2c
 8008048:	6818      	ldr	r0, [r3, #0]
 800804a:	f001 fb4d 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 800804e:	4a94      	ldr	r2, [pc, #592]	; (80082a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8008050:	4603      	mov	r3, r0
 8008052:	2104      	movs	r1, #4
 8008054:	4650      	mov	r0, sl
 8008056:	f012 fea9 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800805a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800805e:	4648      	mov	r0, r9
 8008060:	f00c fa26 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008064:	f8df a23c 	ldr.w	sl, [pc, #572]	; 80082a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8008068:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800806c:	232d      	movs	r3, #45	; 0x2d
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800806e:	a90a      	add	r1, sp, #40	; 0x28
 8008070:	4648      	mov	r0, r9
 8008072:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008076:	f00c fa3b 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800807a:	4649      	mov	r1, r9
 800807c:	4630      	mov	r0, r6
 800807e:	f009 fc0f 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8008082:	223c      	movs	r2, #60	; 0x3c
 8008084:	ee18 0a90 	vmov	r0, s17
 8008088:	2129      	movs	r1, #41	; 0x29
 800808a:	f7fb faa7 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800808e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008092:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8008096:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800809a:	4658      	mov	r0, fp
        linespace = space;
 800809c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80080a0:	f00b ff8c 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080a4:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80080a8:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80080ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80080b0:	233c      	movs	r3, #60	; 0x3c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 80080b2:	ee18 0a90 	vmov	r0, s17
 80080b6:	a90a      	add	r1, sp, #40	; 0x28
 80080b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80080bc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80080c0:	f00c fa16 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080c4:	ee18 1a90 	vmov	r1, s17
 80080c8:	4630      	mov	r0, r6
 80080ca:	f009 fbe9 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80080ce:	230a      	movs	r3, #10
 80080d0:	9300      	str	r3, [sp, #0]
 80080d2:	2232      	movs	r2, #50	; 0x32
 80080d4:	23f0      	movs	r3, #240	; 0xf0
 80080d6:	4629      	mov	r1, r5
 80080d8:	4638      	mov	r0, r7
 80080da:	f7fb fa8c 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80080de:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080e2:	22a0      	movs	r2, #160	; 0xa0
 80080e4:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80080e8:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80080ec:	9b03      	ldr	r3, [sp, #12]
 80080ee:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80080f2:	4611      	mov	r1, r2
 80080f4:	4638      	mov	r0, r7
 80080f6:	f00b fdb5 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080fa:	22a0      	movs	r2, #160	; 0xa0
 80080fc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008100:	4638      	mov	r0, r7
 8008102:	f00b fdba 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008106:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800810a:	2b20      	cmp	r3, #32
 800810c:	d005      	beq.n	800811a <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800810e:	2320      	movs	r3, #32
 8008110:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8008114:	4638      	mov	r0, r7
 8008116:	f00b fcaf 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800811a:	4638      	mov	r0, r7
 800811c:	2101      	movs	r1, #1
 800811e:	f00b fdb7 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008122:	4639      	mov	r1, r7
 8008124:	4630      	mov	r0, r6
 8008126:	f009 fbbb 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800812a:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800812e:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8008130:	2223      	movs	r2, #35	; 0x23
 8008132:	4640      	mov	r0, r8
        linespace = space;
 8008134:	f04f 0a00 	mov.w	sl, #0
 8008138:	2145      	movs	r1, #69	; 0x45
 800813a:	f7fb fa4f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800813e:	4641      	mov	r1, r8
 8008140:	4638      	mov	r0, r7
        color = newColor;
 8008142:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8008146:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800814a:	f00b ff37 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800814e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008152:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008156:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800815a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80082a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 800815e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008162:	234f      	movs	r3, #79	; 0x4f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008164:	a90a      	add	r1, sp, #40	; 0x28
 8008166:	4640      	mov	r0, r8
 8008168:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800816c:	f00c f9c0 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008170:	4641      	mov	r1, r8
 8008172:	4630      	mov	r0, r6
 8008174:	f009 fb94 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008178:	ee18 0a10 	vmov	r0, s16
 800817c:	220c      	movs	r2, #12
 800817e:	2136      	movs	r1, #54	; 0x36
 8008180:	f7fb fa2c 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008184:	ee18 1a10 	vmov	r1, s16
 8008188:	4638      	mov	r0, r7
        color = newColor;
 800818a:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800818e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008192:	f00b ff13 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008196:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800819a:	ee18 3a10 	vmov	r3, s16
 800819e:	333c      	adds	r3, #60	; 0x3c
 80081a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80081a4:	234e      	movs	r3, #78	; 0x4e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 80081a6:	ee18 0a10 	vmov	r0, s16
 80081aa:	a90a      	add	r1, sp, #40	; 0x28
 80081ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081b0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80081b4:	f00c f99c 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081b8:	ee18 1a10 	vmov	r1, s16
 80081bc:	4630      	mov	r0, r6
 80081be:	f009 fb6f 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80081c2:	ee19 0a10 	vmov	r0, s18
 80081c6:	22f0      	movs	r2, #240	; 0xf0
 80081c8:	2121      	movs	r1, #33	; 0x21
 80081ca:	f7fb fa07 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80081ce:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80081d2:	aa0a      	add	r2, sp, #40	; 0x28
 80081d4:	f04f 0802 	mov.w	r8, #2
 80081d8:	a909      	add	r1, sp, #36	; 0x24
 80081da:	ee19 0a10 	vmov	r0, s18
 80081de:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80081e2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80081e6:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80081ea:	f00c fd3c 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80081ee:	234d      	movs	r3, #77	; 0x4d
 80081f0:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80081f4:	3710      	adds	r7, #16
        updateTextPosition();
 80081f6:	ee19 0a10 	vmov	r0, s18
 80081fa:	f7fb fa33 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80081fe:	ee19 1a10 	vmov	r1, s18
 8008202:	4630      	mov	r0, r6
        colorPressed = col;
 8008204:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8008208:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 800820c:	f009 fb48 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8008210:	ee19 0a90 	vmov	r0, s19
 8008214:	22aa      	movs	r2, #170	; 0xaa
 8008216:	2121      	movs	r1, #33	; 0x21
 8008218:	f7fb f9e0 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800821c:	aa0a      	add	r2, sp, #40	; 0x28
 800821e:	a909      	add	r1, sp, #36	; 0x24
 8008220:	ee19 0a90 	vmov	r0, s19
 8008224:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8008228:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800822c:	f00c fd1b 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008230:	234c      	movs	r3, #76	; 0x4c
 8008232:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8008236:	ee19 0a90 	vmov	r0, s19
 800823a:	f7fb fa13 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800823e:	ee19 1a90 	vmov	r1, s19
 8008242:	4630      	mov	r0, r6
        colorPressed = col;
 8008244:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8008248:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 800824c:	f009 fb28 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8008250:	ee1a 0a10 	vmov	r0, s20
 8008254:	2264      	movs	r2, #100	; 0x64
 8008256:	2121      	movs	r1, #33	; 0x21
 8008258:	f7fb f9c0 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800825c:	aa0a      	add	r2, sp, #40	; 0x28
 800825e:	a909      	add	r1, sp, #36	; 0x24
 8008260:	ee1a 0a10 	vmov	r0, s20
 8008264:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8008268:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800826c:	f00c fcfb 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008270:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8008272:	ee1a 0a10 	vmov	r0, s20
 8008276:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800827a:	f7fb f9f3 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800827e:	4630      	mov	r0, r6
        colorPressed = col;
 8008280:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8008284:	ee1a 1a10 	vmov	r1, s20
 8008288:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 800828c:	f009 fb08 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008290:	4620      	mov	r0, r4
 8008292:	b00d      	add	sp, #52	; 0x34
 8008294:	ecbd 8b06 	vpop	{d8-d10}
 8008298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800829c:	200138b0 	.word	0x200138b0
 80082a0:	0802e4b1 	.word	0x0802e4b1
 80082a4:	0802e524 	.word	0x0802e524

080082a8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 80082a8:	4770      	bx	lr

080082aa <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 80082aa:	4770      	bx	lr

080082ac <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80082ac:	4770      	bx	lr

080082ae <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80082ae:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80082b0:	68c2      	ldr	r2, [r0, #12]
 80082b2:	6844      	ldr	r4, [r0, #4]
 80082b4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80082b6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80082b8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80082bc:	07d2      	lsls	r2, r2, #31
 80082be:	bf48      	it	mi
 80082c0:	5962      	ldrmi	r2, [r4, r5]
 80082c2:	689b      	ldr	r3, [r3, #8]
    }
 80082c4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80082c6:	bf48      	it	mi
 80082c8:	58d3      	ldrmi	r3, [r2, r3]
 80082ca:	4718      	bx	r3

080082cc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80082cc:	6843      	ldr	r3, [r0, #4]
 80082ce:	b12b      	cbz	r3, 80082dc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80082d0:	6883      	ldr	r3, [r0, #8]
 80082d2:	b92b      	cbnz	r3, 80082e0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80082d4:	68c0      	ldr	r0, [r0, #12]
 80082d6:	f000 0001 	and.w	r0, r0, #1
 80082da:	4770      	bx	lr
 80082dc:	4618      	mov	r0, r3
 80082de:	4770      	bx	lr
 80082e0:	2001      	movs	r0, #1
    }
 80082e2:	4770      	bx	lr

080082e4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80082e4:	b510      	push	{r4, lr}
 80082e6:	2110      	movs	r1, #16
 80082e8:	4604      	mov	r4, r0
 80082ea:	f023 fc66 	bl	802bbba <_ZdlPvj>
 80082ee:	4620      	mov	r0, r4
 80082f0:	bd10      	pop	{r4, pc}
	...

080082f4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80082f4:	b510      	push	{r4, lr}
 80082f6:	4b03      	ldr	r3, [pc, #12]	; (8008304 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 80082f8:	6003      	str	r3, [r0, #0]
 80082fa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80082fc:	f00d fea6 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008300:	4620      	mov	r0, r4
 8008302:	bd10      	pop	{r4, pc}
 8008304:	0802fc8c 	.word	0x0802fc8c

08008308 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008308:	b507      	push	{r0, r1, r2, lr}
 800830a:	4b07      	ldr	r3, [pc, #28]	; (8008328 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 800830c:	6003      	str	r3, [r0, #0]
 800830e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008310:	f00d fe9c 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008314:	9801      	ldr	r0, [sp, #4]
 8008316:	f241 41b8 	movw	r1, #5304	; 0x14b8
 800831a:	f023 fc4e 	bl	802bbba <_ZdlPvj>
 800831e:	9801      	ldr	r0, [sp, #4]
 8008320:	b003      	add	sp, #12
 8008322:	f85d fb04 	ldr.w	pc, [sp], #4
 8008326:	bf00      	nop
 8008328:	0802fc8c 	.word	0x0802fc8c

0800832c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 800832c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 800832e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008332:	f8d4 24b4 	ldr.w	r2, [r4, #1204]	; 0x4b4
 8008336:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008338:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 800833a:	f8c4 24b4 	str.w	r2, [r4, #1204]	; 0x4b4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 800833e:	d105      	bne.n	800834c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008340:	6803      	ldr	r3, [r0, #0]
 8008342:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008344:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008346:	2300      	movs	r3, #0
 8008348:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
    }
}
 800834c:	bd10      	pop	{r4, pc}

0800834e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 800834e:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8008352:	4288      	cmp	r0, r1
{
 8008354:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008356:	d105      	bne.n	8008364 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008358:	f00f fb7a 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
}
 800835c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008360:	f7fd b920 	b.w	80055a4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008364:	bd08      	pop	{r3, pc}
	...

08008368 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800836c:	ed2d 8b0c 	vpush	{d8-d13}
 8008370:	4604      	mov	r4, r0
 8008372:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008374:	46a1      	mov	r9, r4
 8008376:	2500      	movs	r5, #0
 8008378:	f010 ffea 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 800837c:	4bac      	ldr	r3, [pc, #688]	; (8008630 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 800837e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008380:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8008384:	2226      	movs	r2, #38	; 0x26
 8008386:	4629      	mov	r1, r5
 8008388:	4648      	mov	r0, r9
 800838a:	f024 fd02 	bl	802cd92 <memset>
 800838e:	4648      	mov	r0, r9
 8008390:	f7fb f956 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008394:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8008398:	26ff      	movs	r6, #255	; 0xff
 800839a:	4ba6      	ldr	r3, [pc, #664]	; (8008634 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 800839c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800839e:	2226      	movs	r2, #38	; 0x26
 80083a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80083a4:	4629      	mov	r1, r5
 80083a6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80083aa:	4640      	mov	r0, r8
 80083ac:	66a5      	str	r5, [r4, #104]	; 0x68
 80083ae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80083b2:	f024 fcee 	bl	802cd92 <memset>
 80083b6:	4640      	mov	r0, r8
 80083b8:	f7fb f942 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 80083bc:	4b9e      	ldr	r3, [pc, #632]	; (8008638 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 80083be:	66e3      	str	r3, [r4, #108]	; 0x6c
 80083c0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80083c4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80083c8:	a90a      	add	r1, sp, #40	; 0x28
 80083ca:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80083ce:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80083d0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80083d4:	f00c fe3d 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80083d8:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 80083dc:	4658      	mov	r0, fp
 80083de:	f7fb f993 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 80083e2:	4638      	mov	r0, r7
 80083e4:	f00c faf8 	bl	80149d8 <_ZN8touchgfx5GaugeC1Ev>
 80083e8:	f504 7320 	add.w	r3, r4, #640	; 0x280
 80083ec:	4618      	mov	r0, r3
 80083ee:	ee0a 3a90 	vmov	s21, r3
 80083f2:	f7fb f9a9 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80083f6:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
 80083fa:	4618      	mov	r0, r3
 80083fc:	ee0b 3a10 	vmov	s22, r3
 8008400:	f7fb f9a2 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8008404:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8008408:	4618      	mov	r0, r3
 800840a:	ee0b 3a90 	vmov	s23, r3
 800840e:	f7fb f99b 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8008412:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8008416:	4618      	mov	r0, r3
 8008418:	ee0c 3a10 	vmov	s24, r3
 800841c:	f7fb f994 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8008420:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
 8008424:	4618      	mov	r0, r3
 8008426:	ee0c 3a90 	vmov	s25, r3
 800842a:	f7fb f98d 	bl	8003748 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800842e:	f504 737f 	add.w	r3, r4, #1020	; 0x3fc
 8008432:	4618      	mov	r0, r3
 8008434:	ee08 3a10 	vmov	s16, r3
 8008438:	f7fb f966 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800843c:	f204 4344 	addw	r3, r4, #1092	; 0x444
 8008440:	4618      	mov	r0, r3
 8008442:	ee08 3a90 	vmov	s17, r3
 8008446:	f7fb f95f 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800844a:	f204 438c 	addw	r3, r4, #1164	; 0x48c
 800844e:	4618      	mov	r0, r3
 8008450:	f204 4ad4 	addw	sl, r4, #1236	; 0x4d4
 8008454:	ee09 3a10 	vmov	s18, r3
 8008458:	f7fb f956 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800845c:	4650      	mov	r0, sl
 800845e:	f00b faeb 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8008462:	f204 5344 	addw	r3, r4, #1348	; 0x544
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008466:	4618      	mov	r0, r3
 8008468:	9303      	str	r3, [sp, #12]
 800846a:	f7fa feed 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800846e:	4b73      	ldr	r3, [pc, #460]	; (800863c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8008470:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
 8008474:	3324      	adds	r3, #36	; 0x24
 8008476:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
 800847a:	f504 63ab 	add.w	r3, r4, #1368	; 0x558
 800847e:	4618      	mov	r0, r3
 8008480:	f8c4 5550 	str.w	r5, [r4, #1360]	; 0x550
 8008484:	ee09 3a90 	vmov	s19, r3
 8008488:	f7fb f93e 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800848c:	f504 63b4 	add.w	r3, r4, #1440	; 0x5a0
 8008490:	4618      	mov	r0, r3
 8008492:	ee0a 3a10 	vmov	s20, r3
 8008496:	f7fb f937 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 800849a:	f504 63bd 	add.w	r3, r4, #1512	; 0x5e8
 800849e:	4618      	mov	r0, r3
 80084a0:	ee0d 3a10 	vmov	s26, r3
 80084a4:	f00c ff0c 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80084a8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80084ac:	4a64      	ldr	r2, [pc, #400]	; (8008640 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80084ae:	f8c3 24a4 	str.w	r2, [r3, #1188]	; 0x4a4
 80084b2:	4a64      	ldr	r2, [pc, #400]	; (8008644 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80084b4:	f8c3 24ac 	str.w	r2, [r3, #1196]	; 0x4ac
 80084b8:	f8c3 44a8 	str.w	r4, [r3, #1192]	; 0x4a8
 80084bc:	f8c3 54b0 	str.w	r5, [r3, #1200]	; 0x4b0
 80084c0:	f8c3 54b4 	str.w	r5, [r3, #1204]	; 0x4b4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80084c4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80084c8:	f204 6094 	addw	r0, r4, #1684	; 0x694
 80084cc:	f00d fdb4 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80084d0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80084d4:	462a      	mov	r2, r5
 80084d6:	4648      	mov	r0, r9
 80084d8:	9300      	str	r3, [sp, #0]
 80084da:	4629      	mov	r1, r5
 80084dc:	23f0      	movs	r3, #240	; 0xf0
 80084de:	f7fb f88a 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80084e2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80084e4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80084e8:	66a3      	str	r3, [r4, #104]	; 0x68
 80084ea:	4649      	mov	r1, r9
 80084ec:	4630      	mov	r0, r6
 80084ee:	f009 f9d7 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80084f2:	462a      	mov	r2, r5
 80084f4:	4640      	mov	r0, r8
 80084f6:	4629      	mov	r1, r5
 80084f8:	f7fb f870 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80084fc:	f04f 0908 	mov.w	r9, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008500:	4640      	mov	r0, r8
 8008502:	a90a      	add	r1, sp, #40	; 0x28
 8008504:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8008508:	f00c fda3 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800850c:	4641      	mov	r1, r8
 800850e:	4630      	mov	r0, r6
 8008510:	f009 f9c6 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008514:	223c      	movs	r2, #60	; 0x3c
 8008516:	4658      	mov	r0, fp
 8008518:	211f      	movs	r1, #31
 800851a:	f7fb f85f 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800851e:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8008522:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008526:	4659      	mov	r1, fp
        color = newColor;
 8008528:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800852c:	4640      	mov	r0, r8
        linespace = space;
 800852e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008532:	f00b fd43 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008536:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800853a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800853e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008542:	4b41      	ldr	r3, [pc, #260]	; (8008648 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8008544:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8008546:	4658      	mov	r0, fp
 8008548:	233b      	movs	r3, #59	; 0x3b
 800854a:	a90a      	add	r1, sp, #40	; 0x28
 800854c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008550:	f00b ffce 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008554:	4659      	mov	r1, fp
 8008556:	4630      	mov	r0, r6
 8008558:	f009 f9a2 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800855c:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800855e:	4638      	mov	r0, r7
 8008560:	a90a      	add	r1, sp, #40	; 0x28
 8008562:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008566:	f009 f92d 	bl	80117c4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 800856a:	236a      	movs	r3, #106	; 0x6a
 800856c:	4638      	mov	r0, r7
 800856e:	9300      	str	r3, [sp, #0]
 8008570:	225e      	movs	r2, #94	; 0x5e
 8008572:	23b8      	movs	r3, #184	; 0xb8
 8008574:	211c      	movs	r1, #28
 8008576:	f7fb f83e 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 800857a:	225c      	movs	r2, #92	; 0x5c
 800857c:	4611      	mov	r1, r2
 800857e:	4638      	mov	r0, r7
 8008580:	f00c fad5 	bl	8014b2e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8008584:	4638      	mov	r0, r7
 8008586:	225a      	movs	r2, #90	; 0x5a
 8008588:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800858c:	f00c fb54 	bl	8014c38 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8008590:	462b      	mov	r3, r5
 8008592:	225a      	movs	r2, #90	; 0x5a
 8008594:	4638      	mov	r0, r7
 8008596:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800859a:	9500      	str	r5, [sp, #0]
 800859c:	f008 ffbf 	bl	801151e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 80085a0:	4638      	mov	r0, r7
 80085a2:	4629      	mov	r1, r5
 80085a4:	f00c faf2 	bl	8014b8c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80085a8:	464a      	mov	r2, r9
 80085aa:	2335      	movs	r3, #53	; 0x35
 80085ac:	4638      	mov	r0, r7
 80085ae:	2105      	movs	r1, #5
 80085b0:	f00c faa8 	bl	8014b04 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80085b4:	4638      	mov	r0, r7
 80085b6:	2101      	movs	r1, #1
 80085b8:	f00c fa46 	bl	8014a48 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80085bc:	4638      	mov	r0, r7
 80085be:	2101      	movs	r1, #1
 80085c0:	f00c fa45 	bl	8014a4e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80085c4:	4639      	mov	r1, r7
 80085c6:	4630      	mov	r0, r6
    Pad_L.setPosition(0, 76, 113, 18);
 80085c8:	2712      	movs	r7, #18
 80085ca:	f009 f969 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80085ce:	224c      	movs	r2, #76	; 0x4c
 80085d0:	ee1a 0a90 	vmov	r0, s21
 80085d4:	2371      	movs	r3, #113	; 0x71
 80085d6:	4629      	mov	r1, r5
 80085d8:	9700      	str	r7, [sp, #0]
 80085da:	f7fb f80c 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80085de:	f04f 33ff 	mov.w	r3, #4294967295
 80085e2:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 80085e6:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 80085ea:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 80085ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80085f2:	f8df b06c 	ldr.w	fp, [pc, #108]	; 8008660 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 80085f6:	ee1a 1a90 	vmov	r1, s21
 80085fa:	4640      	mov	r0, r8
 80085fc:	4798      	blx	r3
 80085fe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008602:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8008606:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800860a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(Pad_LBuffer, PAD_L_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6CY0).getText());
 800860e:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8008612:	b92b      	cbnz	r3, 8008620 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
 8008614:	4b0d      	ldr	r3, [pc, #52]	; (800864c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8008616:	4a0e      	ldr	r2, [pc, #56]	; (8008650 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8008618:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800861a:	480e      	ldr	r0, [pc, #56]	; (8008654 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 800861c:	f024 f9b4 	bl	802c988 <__assert_func>
 8008620:	4b0d      	ldr	r3, [pc, #52]	; (8008658 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8008622:	881b      	ldrh	r3, [r3, #0]
 8008624:	2b02      	cmp	r3, #2
 8008626:	d81d      	bhi.n	8008664 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2fc>
 8008628:	4b0c      	ldr	r3, [pc, #48]	; (800865c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>)
 800862a:	4a09      	ldr	r2, [pc, #36]	; (8008650 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 800862c:	2161      	movs	r1, #97	; 0x61
 800862e:	e7f4      	b.n	800861a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b2>
 8008630:	0802fc8c 	.word	0x0802fc8c
 8008634:	08030a78 	.word	0x08030a78
 8008638:	08030cc4 	.word	0x08030cc4
 800863c:	080307ac 	.word	0x080307ac
 8008640:	0802fc74 	.word	0x0802fc74
 8008644:	0800834f 	.word	0x0800834f
 8008648:	0802e524 	.word	0x0802e524
 800864c:	0802e374 	.word	0x0802e374
 8008650:	0802e479 	.word	0x0802e479
 8008654:	0802e3f1 	.word	0x0802e3f1
 8008658:	200138a8 	.word	0x200138a8
 800865c:	0802e438 	.word	0x0802e438
 8008660:	200138a4 	.word	0x200138a4
        return texts->getText(typedTextId);
 8008664:	4be1      	ldr	r3, [pc, #900]	; (80089ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 8008666:	2102      	movs	r1, #2
 8008668:	6818      	ldr	r0, [r3, #0]
 800866a:	f001 f83d 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 800866e:	4ae0      	ldr	r2, [pc, #896]	; (80089f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 8008670:	4603      	mov	r3, r0
 8008672:	210a      	movs	r1, #10
 8008674:	4648      	mov	r0, r9
 8008676:	f012 fb99 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800867a:	4ade      	ldr	r2, [pc, #888]	; (80089f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 800867c:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
 8008680:	2301      	movs	r3, #1
    Pad_L.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V1PS));
 8008682:	ee1a 0a90 	vmov	r0, s21
 8008686:	a90a      	add	r1, sp, #40	; 0x28
 8008688:	920a      	str	r2, [sp, #40]	; 0x28
 800868a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800868e:	f00b ff2f 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008692:	ee1a 1a90 	vmov	r1, s21
 8008696:	4630      	mov	r0, r6
 8008698:	f009 f902 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Pad_R.setPosition(131, 76, 113, 18);
 800869c:	224c      	movs	r2, #76	; 0x4c
 800869e:	ee1b 0a10 	vmov	r0, s22
 80086a2:	9700      	str	r7, [sp, #0]
 80086a4:	2371      	movs	r3, #113	; 0x71
 80086a6:	2183      	movs	r1, #131	; 0x83
 80086a8:	f7fa ffa5 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80086ac:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 80086b0:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 80086b4:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80086b8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80086bc:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 80086c0:	4640      	mov	r0, r8
 80086c2:	ee1b 1a10 	vmov	r1, s22
 80086c6:	4798      	blx	r3
 80086c8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80086cc:	f504 7342 	add.w	r3, r4, #776	; 0x308
 80086d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80086d4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(Pad_RBuffer, PAD_R_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PRO6).getText());
 80086d8:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80086dc:	2b00      	cmp	r3, #0
 80086de:	d099      	beq.n	8008614 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ac>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80086e0:	49c5      	ldr	r1, [pc, #788]	; (80089f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 80086e2:	880b      	ldrh	r3, [r1, #0]
 80086e4:	2b03      	cmp	r3, #3
 80086e6:	d99f      	bls.n	8008628 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>
        return texts->getText(typedTextId);
 80086e8:	4bc0      	ldr	r3, [pc, #768]	; (80089ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 80086ea:	2103      	movs	r1, #3
 80086ec:	6818      	ldr	r0, [r3, #0]
 80086ee:	f000 fffb 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 80086f2:	4abf      	ldr	r2, [pc, #764]	; (80089f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 80086f4:	4603      	mov	r3, r0
 80086f6:	210a      	movs	r1, #10
 80086f8:	4638      	mov	r0, r7
 80086fa:	f012 fb57 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Pad_R.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WR23));
 80086fe:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8008700:	4abc      	ldr	r2, [pc, #752]	; (80089f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 8008702:	f8c4 7314 	str.w	r7, [r4, #788]	; 0x314
 8008706:	4601      	mov	r1, r0
 8008708:	ee1b 0a10 	vmov	r0, s22
 800870c:	920a      	str	r2, [sp, #40]	; 0x28
 800870e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
    SMD1_Current.setPosition(0, 230, 240, 15);
 8008712:	f04f 090f 	mov.w	r9, #15
    Pad_R.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WR23));
 8008716:	f00b feeb 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800871a:	ee1b 1a10 	vmov	r1, s22
 800871e:	4630      	mov	r0, r6
 8008720:	f009 f8be 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8008724:	22e6      	movs	r2, #230	; 0xe6
 8008726:	ee1b 0a90 	vmov	r0, s23
 800872a:	23f0      	movs	r3, #240	; 0xf0
 800872c:	4629      	mov	r1, r5
 800872e:	f8cd 9000 	str.w	r9, [sp]
 8008732:	f7fa ff60 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008736:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 800873a:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 800873e:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8008742:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008746:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 800874a:	ee1b 1a90 	vmov	r1, s23
 800874e:	4640      	mov	r0, r8
 8008750:	4798      	blx	r3
 8008752:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008756:	f504 7355 	add.w	r3, r4, #852	; 0x354
 800875a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800875e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 8008762:	f504 67cb 	add.w	r7, r4, #1624	; 0x658
 8008766:	2b00      	cmp	r3, #0
 8008768:	f43f af54 	beq.w	8008614 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ac>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800876c:	49a2      	ldr	r1, [pc, #648]	; (80089f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 800876e:	880b      	ldrh	r3, [r1, #0]
 8008770:	2b05      	cmp	r3, #5
 8008772:	f67f af59 	bls.w	8008628 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>
        return texts->getText(typedTextId);
 8008776:	4b9d      	ldr	r3, [pc, #628]	; (80089ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 8008778:	2105      	movs	r1, #5
 800877a:	6818      	ldr	r0, [r3, #0]
 800877c:	f000 ffb4 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8008780:	4a9b      	ldr	r2, [pc, #620]	; (80089f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 8008782:	4603      	mov	r3, r0
 8008784:	210a      	movs	r1, #10
 8008786:	4638      	mov	r0, r7
 8008788:	f012 fb10 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 800878c:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 800878e:	4a99      	ldr	r2, [pc, #612]	; (80089f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 8008790:	f8c4 7360 	str.w	r7, [r4, #864]	; 0x360
 8008794:	2306      	movs	r3, #6
 8008796:	4601      	mov	r1, r0
 8008798:	ee1b 0a90 	vmov	r0, s23
 800879c:	920a      	str	r2, [sp, #40]	; 0x28
 800879e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80087a2:	f00b fea5 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80087a6:	ee1b 1a90 	vmov	r1, s23
 80087aa:	4630      	mov	r0, r6
 80087ac:	f009 f878 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 80087b0:	22d7      	movs	r2, #215	; 0xd7
 80087b2:	ee1c 0a10 	vmov	r0, s24
 80087b6:	23f0      	movs	r3, #240	; 0xf0
 80087b8:	4629      	mov	r1, r5
 80087ba:	f8cd 9000 	str.w	r9, [sp]
 80087be:	f7fa ff1a 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80087c2:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80087c6:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80087ca:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80087ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80087d2:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80087d6:	ee1c 1a10 	vmov	r1, s24
 80087da:	4640      	mov	r0, r8
 80087dc:	4798      	blx	r3
 80087de:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80087e2:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80087e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80087ea:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80087ee:	f204 676c 	addw	r7, r4, #1644	; 0x66c
 80087f2:	2b00      	cmp	r3, #0
 80087f4:	f43f af0e 	beq.w	8008614 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ac>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80087f8:	497f      	ldr	r1, [pc, #508]	; (80089f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 80087fa:	880b      	ldrh	r3, [r1, #0]
 80087fc:	2b1c      	cmp	r3, #28
 80087fe:	f67f af13 	bls.w	8008628 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>
        return texts->getText(typedTextId);
 8008802:	4b7a      	ldr	r3, [pc, #488]	; (80089ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 8008804:	211c      	movs	r1, #28
 8008806:	6818      	ldr	r0, [r3, #0]
 8008808:	f000 ff6e 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 800880c:	4a78      	ldr	r2, [pc, #480]	; (80089f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 800880e:	4603      	mov	r3, r0
 8008810:	210a      	movs	r1, #10
 8008812:	4638      	mov	r0, r7
 8008814:	f012 faca 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008818:	231f      	movs	r3, #31
 800881a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 800881e:	ab0a      	add	r3, sp, #40	; 0x28
 8008820:	4a74      	ldr	r2, [pc, #464]	; (80089f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>)
 8008822:	f8c4 73ac 	str.w	r7, [r4, #940]	; 0x3ac
 8008826:	4619      	mov	r1, r3
 8008828:	ee1c 0a10 	vmov	r0, s24
 800882c:	920a      	str	r2, [sp, #40]	; 0x28
 800882e:	f00b fe5f 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008832:	ee1c 1a10 	vmov	r1, s24
 8008836:	4630      	mov	r0, r6
 8008838:	f009 f832 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 800883c:	22c8      	movs	r2, #200	; 0xc8
 800883e:	4629      	mov	r1, r5
 8008840:	ee1c 0a90 	vmov	r0, s25
 8008844:	23f0      	movs	r3, #240	; 0xf0
 8008846:	f8cd 9000 	str.w	r9, [sp]
 800884a:	f7fa fed4 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800884e:	f04f 33ff 	mov.w	r3, #4294967295
 8008852:	f8c4 33e0 	str.w	r3, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8008856:	f8d4 33b0 	ldr.w	r3, [r4, #944]	; 0x3b0
        linespace = space;
 800885a:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 800885e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008862:	ee1c 1a90 	vmov	r1, s25
 8008866:	4640      	mov	r0, r8
 8008868:	4798      	blx	r3
 800886a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800886e:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 8008872:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008876:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800887a:	f504 65d0 	add.w	r5, r4, #1664	; 0x680
 800887e:	2b00      	cmp	r3, #0
 8008880:	f43f aec8 	beq.w	8008614 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ac>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008884:	495c      	ldr	r1, [pc, #368]	; (80089f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x690>)
 8008886:	880b      	ldrh	r3, [r1, #0]
 8008888:	2b1d      	cmp	r3, #29
 800888a:	f67f aecd 	bls.w	8008628 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>
        return texts->getText(typedTextId);
 800888e:	4b57      	ldr	r3, [pc, #348]	; (80089ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
        : typedTextId(id)
 8008890:	f8df 9160 	ldr.w	r9, [pc, #352]	; 80089f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x68c>
        return texts->getText(typedTextId);
 8008894:	6818      	ldr	r0, [r3, #0]
 8008896:	211d      	movs	r1, #29
 8008898:	f000 ff26 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 800889c:	4a54      	ldr	r2, [pc, #336]	; (80089f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x688>)
 800889e:	4603      	mov	r3, r0
 80088a0:	210a      	movs	r1, #10
 80088a2:	4628      	mov	r0, r5
 80088a4:	f012 fa82 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80088a8:	f04f 0b20 	mov.w	fp, #32
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80088ac:	ee1c 0a90 	vmov	r0, s25
 80088b0:	f8c4 53f8 	str.w	r5, [r4, #1016]	; 0x3f8
 80088b4:	a90a      	add	r1, sp, #40	; 0x28
 80088b6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80088ba:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80088be:	f00b fe17 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80088c2:	ee1c 1a90 	vmov	r1, s25
 80088c6:	4630      	mov	r0, r6
 80088c8:	f008 ffea 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088cc:	ad04      	add	r5, sp, #16
        color = newColor;
 80088ce:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80088d2:	f04f 0800 	mov.w	r8, #0
    textArea4.setXY(113, 76);
 80088d6:	224c      	movs	r2, #76	; 0x4c
 80088d8:	ee18 0a10 	vmov	r0, s16
 80088dc:	2171      	movs	r1, #113	; 0x71
 80088de:	f7fa fe7d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80088e2:	ee18 1a10 	vmov	r1, s16
 80088e6:	4628      	mov	r0, r5
        color = newColor;
 80088e8:	f8c4 742c 	str.w	r7, [r4, #1068]	; 0x42c
        linespace = space;
 80088ec:	f8a4 8430 	strh.w	r8, [r4, #1072]	; 0x430
        boundingArea = calculateBoundingArea();
 80088f0:	f00b fb64 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80088f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80088f8:	ee18 3a10 	vmov	r3, s16
 80088fc:	333c      	adds	r3, #60	; 0x3c
 80088fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008902:	2321      	movs	r3, #33	; 0x21
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8008904:	ee18 0a10 	vmov	r0, s16
 8008908:	a90a      	add	r1, sp, #40	; 0x28
 800890a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800890e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008912:	f00b fded 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008916:	ee18 1a10 	vmov	r1, s16
 800891a:	4630      	mov	r0, r6
 800891c:	f008 ffc0 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8008920:	22b9      	movs	r2, #185	; 0xb9
 8008922:	ee18 0a90 	vmov	r0, s17
 8008926:	4641      	mov	r1, r8
 8008928:	f7fa fe58 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800892c:	ee18 1a90 	vmov	r1, s17
 8008930:	4628      	mov	r0, r5
        color = newColor;
 8008932:	f8c4 7474 	str.w	r7, [r4, #1140]	; 0x474
        linespace = space;
 8008936:	f8a4 8478 	strh.w	r8, [r4, #1144]	; 0x478
        boundingArea = calculateBoundingArea();
 800893a:	f00b fb3f 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800893e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008942:	ee18 3a90 	vmov	r3, s17
 8008946:	333c      	adds	r3, #60	; 0x3c
 8008948:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800894c:	2322      	movs	r3, #34	; 0x22
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 800894e:	ee18 0a90 	vmov	r0, s17
 8008952:	a90a      	add	r1, sp, #40	; 0x28
 8008954:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008958:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800895c:	f00b fdc8 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008960:	ee18 1a90 	vmov	r1, s17
 8008964:	4630      	mov	r0, r6
 8008966:	f008 ff9b 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 800896a:	22b9      	movs	r2, #185	; 0xb9
 800896c:	ee19 0a10 	vmov	r0, s18
 8008970:	21d9      	movs	r1, #217	; 0xd9
 8008972:	f7fa fe33 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008976:	ee19 1a10 	vmov	r1, s18
 800897a:	4628      	mov	r0, r5
        color = newColor;
 800897c:	f8c4 74bc 	str.w	r7, [r4, #1212]	; 0x4bc
        linespace = space;
 8008980:	f8a4 84c0 	strh.w	r8, [r4, #1216]	; 0x4c0
        boundingArea = calculateBoundingArea();
 8008984:	f00b fb1a 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008988:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800898c:	ee19 3a10 	vmov	r3, s18
 8008990:	333c      	adds	r3, #60	; 0x3c
 8008992:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008996:	2323      	movs	r3, #35	; 0x23
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8008998:	ee19 0a10 	vmov	r0, s18
 800899c:	a90a      	add	r1, sp, #40	; 0x28
 800899e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80089a2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80089a6:	f00b fda3 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80089aa:	ee19 1a10 	vmov	r1, s18
 80089ae:	4630      	mov	r0, r6
 80089b0:	f008 ff76 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80089b4:	230a      	movs	r3, #10
 80089b6:	9300      	str	r3, [sp, #0]
 80089b8:	2232      	movs	r2, #50	; 0x32
 80089ba:	23f0      	movs	r3, #240	; 0xf0
 80089bc:	4641      	mov	r1, r8
 80089be:	4650      	mov	r0, sl
 80089c0:	f7fa fe19 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80089c4:	9b03      	ldr	r3, [sp, #12]
 80089c6:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80089ca:	22a0      	movs	r2, #160	; 0xa0
 80089cc:	4611      	mov	r1, r2
 80089ce:	4650      	mov	r0, sl
 80089d0:	f8c4 7550 	str.w	r7, [r4, #1360]	; 0x550
        color565 = LCD16bpp::getNativeColor(painterColor);
 80089d4:	f8a4 7554 	strh.w	r7, [r4, #1364]	; 0x554
 80089d8:	f00b f944 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80089dc:	22a0      	movs	r2, #160	; 0xa0
 80089de:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80089e2:	4650      	mov	r0, sl
 80089e4:	f00b f949 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
 80089e8:	e008      	b.n	80089fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x694>
 80089ea:	bf00      	nop
 80089ec:	200138b0 	.word	0x200138b0
 80089f0:	0802e4b1 	.word	0x0802e4b1
 80089f4:	0802e524 	.word	0x0802e524
 80089f8:	200138a8 	.word	0x200138a8
        if (lineWidthQ5 == widthQ5)
 80089fc:	f8d4 3510 	ldr.w	r3, [r4, #1296]	; 0x510
 8008a00:	455b      	cmp	r3, fp
 8008a02:	d004      	beq.n	8008a0e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x6a6>
        lineWidthQ5 = widthQ5;
 8008a04:	f8c4 b510 	str.w	fp, [r4, #1296]	; 0x510
        updateCachedShape();
 8008a08:	4650      	mov	r0, sl
 8008a0a:	f00b f835 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008a0e:	4650      	mov	r0, sl
 8008a10:	2101      	movs	r1, #1
 8008a12:	f00b f93d 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008a16:	4651      	mov	r1, sl
 8008a18:	4630      	mov	r0, r6
 8008a1a:	f008 ff41 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008a1e:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8008a22:	ee19 0a90 	vmov	r0, s19
 8008a26:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008a28:	f04f 0900 	mov.w	r9, #0
 8008a2c:	2145      	movs	r1, #69	; 0x45
 8008a2e:	f7fa fdd5 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008a32:	ee19 1a90 	vmov	r1, s19
 8008a36:	4628      	mov	r0, r5
        color = newColor;
 8008a38:	f8c4 7588 	str.w	r7, [r4, #1416]	; 0x588
        linespace = space;
 8008a3c:	f8a4 958c 	strh.w	r9, [r4, #1420]	; 0x58c
        boundingArea = calculateBoundingArea();
 8008a40:	f00b fabc 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008a44:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008a48:	ee19 3a90 	vmov	r3, s19
 8008a4c:	333c      	adds	r3, #60	; 0x3c
 8008a4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008a52:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8008b1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x7b4>
 8008a56:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8008a5a:	2342      	movs	r3, #66	; 0x42
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8008a5c:	ee19 0a90 	vmov	r0, s19
 8008a60:	a90a      	add	r1, sp, #40	; 0x28
 8008a62:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008a66:	f00b fd43 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008a6a:	ee19 1a90 	vmov	r1, s19
 8008a6e:	4630      	mov	r0, r6
 8008a70:	f008 ff16 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008a74:	ee1a 0a10 	vmov	r0, s20
 8008a78:	220c      	movs	r2, #12
 8008a7a:	2136      	movs	r1, #54	; 0x36
 8008a7c:	f7fa fdae 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008a80:	ee1a 1a10 	vmov	r1, s20
 8008a84:	4628      	mov	r0, r5
        color = newColor;
 8008a86:	f8c4 75d0 	str.w	r7, [r4, #1488]	; 0x5d0
        linespace = space;
 8008a8a:	f8a4 95d4 	strh.w	r9, [r4, #1492]	; 0x5d4
        boundingArea = calculateBoundingArea();
 8008a8e:	f00b fa95 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008a92:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008a96:	ee1a 3a10 	vmov	r3, s20
 8008a9a:	333c      	adds	r3, #60	; 0x3c
 8008a9c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008aa0:	2341      	movs	r3, #65	; 0x41
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8008aa2:	ee1a 0a10 	vmov	r0, s20
 8008aa6:	a90a      	add	r1, sp, #40	; 0x28
 8008aa8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008aac:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8008ab0:	f00b fd1e 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008ab4:	ee1a 1a10 	vmov	r1, s20
 8008ab8:	4630      	mov	r0, r6
 8008aba:	f008 fef1 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8008abe:	ee1d 0a10 	vmov	r0, s26
 8008ac2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008ac6:	2121      	movs	r1, #33	; 0x21
 8008ac8:	f7fa fd88 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008acc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008ace:	aa0a      	add	r2, sp, #40	; 0x28
 8008ad0:	a909      	add	r1, sp, #36	; 0x24
 8008ad2:	ee1d 0a10 	vmov	r0, s26
 8008ad6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008ada:	2302      	movs	r3, #2
 8008adc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008ae0:	f00c f8c1 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008ae4:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8008ae6:	ee1d 0a10 	vmov	r0, s26
 8008aea:	f8a4 3620 	strh.w	r3, [r4, #1568]	; 0x620
 8008aee:	f7fa fdb9 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008af2:	f504 53a5 	add.w	r3, r4, #5280	; 0x14a0
 8008af6:	3304      	adds	r3, #4
 8008af8:	4630      	mov	r0, r6
 8008afa:	ee1d 1a10 	vmov	r1, s26
        color = col;
 8008afe:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
        colorPressed = col;
 8008b02:	f8c4 7628 	str.w	r7, [r4, #1576]	; 0x628
 8008b06:	f8c4 3610 	str.w	r3, [r4, #1552]	; 0x610
 8008b0a:	f008 fec9 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008b0e:	4620      	mov	r0, r4
 8008b10:	b00d      	add	sp, #52	; 0x34
 8008b12:	ecbd 8b0c 	vpop	{d8-d13}
 8008b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b1a:	bf00      	nop
 8008b1c:	0802e524 	.word	0x0802e524

08008b20 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8008b20:	4770      	bx	lr

08008b22 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008b22:	4770      	bx	lr

08008b24 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008b24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008b26:	68c2      	ldr	r2, [r0, #12]
 8008b28:	6844      	ldr	r4, [r0, #4]
 8008b2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008b2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008b2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008b32:	07d2      	lsls	r2, r2, #31
 8008b34:	bf48      	it	mi
 8008b36:	5962      	ldrmi	r2, [r4, r5]
 8008b38:	689b      	ldr	r3, [r3, #8]
    }
 8008b3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008b3c:	bf48      	it	mi
 8008b3e:	58d3      	ldrmi	r3, [r2, r3]
 8008b40:	4718      	bx	r3

08008b42 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008b42:	6843      	ldr	r3, [r0, #4]
 8008b44:	b12b      	cbz	r3, 8008b52 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008b46:	6883      	ldr	r3, [r0, #8]
 8008b48:	b92b      	cbnz	r3, 8008b56 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008b4a:	68c0      	ldr	r0, [r0, #12]
 8008b4c:	f000 0001 	and.w	r0, r0, #1
 8008b50:	4770      	bx	lr
 8008b52:	4618      	mov	r0, r3
 8008b54:	4770      	bx	lr
 8008b56:	2001      	movs	r0, #1
    }
 8008b58:	4770      	bx	lr

08008b5a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008b5a:	b510      	push	{r4, lr}
 8008b5c:	2110      	movs	r1, #16
 8008b5e:	4604      	mov	r4, r0
 8008b60:	f023 f82b 	bl	802bbba <_ZdlPvj>
 8008b64:	4620      	mov	r0, r4
 8008b66:	bd10      	pop	{r4, pc}

08008b68 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8008b68:	b510      	push	{r4, lr}
 8008b6a:	4b03      	ldr	r3, [pc, #12]	; (8008b78 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8008b6c:	6003      	str	r3, [r0, #0]
 8008b6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008b70:	f00d fa6c 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008b74:	4620      	mov	r0, r4
 8008b76:	bd10      	pop	{r4, pc}
 8008b78:	0802fcdc 	.word	0x0802fcdc

08008b7c <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8008b7c:	b507      	push	{r0, r1, r2, lr}
 8008b7e:	4b07      	ldr	r3, [pc, #28]	; (8008b9c <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8008b80:	6003      	str	r3, [r0, #0]
 8008b82:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008b84:	f00d fa62 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008b88:	9801      	ldr	r0, [sp, #4]
 8008b8a:	f241 015c 	movw	r1, #4188	; 0x105c
 8008b8e:	f023 f814 	bl	802bbba <_ZdlPvj>
 8008b92:	9801      	ldr	r0, [sp, #4]
 8008b94:	b003      	add	sp, #12
 8008b96:	f85d fb04 	ldr.w	pc, [sp], #4
 8008b9a:	bf00      	nop
 8008b9c:	0802fcdc 	.word	0x0802fcdc

08008ba0 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008ba0:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8008ba4:	4288      	cmp	r0, r1
{
 8008ba6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008ba8:	d105      	bne.n	8008bb6 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008baa:	f00e ff51 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8008bae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008bb2:	f7fc bcf7 	b.w	80055a4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008bb6:	bd08      	pop	{r3, pc}

08008bb8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8008bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bbc:	ed2d 8b02 	vpush	{d8}
 8008bc0:	4604      	mov	r4, r0
 8008bc2:	b08d      	sub	sp, #52	; 0x34
 8008bc4:	f010 fbc4 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8008bc8:	4622      	mov	r2, r4
 8008bca:	2500      	movs	r5, #0
 8008bcc:	4ba4      	ldr	r3, [pc, #656]	; (8008e60 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8008bce:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008bd0:	f842 3b40 	str.w	r3, [r2], #64
 8008bd4:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8008bd8:	4629      	mov	r1, r5
 8008bda:	2226      	movs	r2, #38	; 0x26
 8008bdc:	ee18 0a10 	vmov	r0, s16
 8008be0:	f024 f8d7 	bl	802cd92 <memset>
 8008be4:	ee18 0a10 	vmov	r0, s16
 8008be8:	f7fa fd2a 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008bec:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8008bf0:	26ff      	movs	r6, #255	; 0xff
 8008bf2:	4b9c      	ldr	r3, [pc, #624]	; (8008e64 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8008bf4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008bf6:	2226      	movs	r2, #38	; 0x26
 8008bf8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008bfc:	4629      	mov	r1, r5
 8008bfe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008c02:	66a5      	str	r5, [r4, #104]	; 0x68
 8008c04:	4658      	mov	r0, fp
 8008c06:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008c0a:	f024 f8c2 	bl	802cd92 <memset>
 8008c0e:	4658      	mov	r0, fp
 8008c10:	f7fa fd16 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008c14:	4b94      	ldr	r3, [pc, #592]	; (8008e68 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8008c16:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008c18:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008c1c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008c20:	a90a      	add	r1, sp, #40	; 0x28
 8008c22:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008c26:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008c2a:	4658      	mov	r0, fp
 8008c2c:	f00c fa11 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008c30:	4638      	mov	r0, r7
 8008c32:	f00a ff01 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8008c36:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008c3a:	4618      	mov	r0, r3
 8008c3c:	9303      	str	r3, [sp, #12]
 8008c3e:	f7fa fb03 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008c42:	4b8a      	ldr	r3, [pc, #552]	; (8008e6c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8008c44:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8008c48:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8008c4c:	3324      	adds	r3, #36	; 0x24
 8008c4e:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8008c52:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8008c56:	4650      	mov	r0, sl
 8008c58:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8008c5c:	f7fa fd54 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008c60:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8008c64:	4648      	mov	r0, r9
 8008c66:	f7fa fd4f 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008c6a:	4640      	mov	r0, r8
 8008c6c:	f7fa fd4c 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008c70:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008c74:	4618      	mov	r0, r3
 8008c76:	ee08 3a90 	vmov	s17, r3
 8008c7a:	f00c fb21 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008c7e:	4a7c      	ldr	r2, [pc, #496]	; (8008e70 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8008c80:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008c84:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8008c88:	4a7a      	ldr	r2, [pc, #488]	; (8008e74 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008c8a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008c8e:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8008c92:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8008c96:	f00d f9cf 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008c9a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008c9e:	462a      	mov	r2, r5
 8008ca0:	ee18 0a10 	vmov	r0, s16
 8008ca4:	9300      	str	r3, [sp, #0]
 8008ca6:	4629      	mov	r1, r5
 8008ca8:	23f0      	movs	r3, #240	; 0xf0
 8008caa:	f7fa fca4 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008cae:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008cb0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008cb4:	66a3      	str	r3, [r4, #104]	; 0x68
 8008cb6:	ee18 1a10 	vmov	r1, s16
 8008cba:	4630      	mov	r0, r6
 8008cbc:	f008 fdf0 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008cc0:	462a      	mov	r2, r5
 8008cc2:	4629      	mov	r1, r5
 8008cc4:	4658      	mov	r0, fp
 8008cc6:	f7fa fc89 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008cca:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008ccc:	a90a      	add	r1, sp, #40	; 0x28
 8008cce:	4658      	mov	r0, fp
 8008cd0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008cd4:	f00c f9bd 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008cd8:	4659      	mov	r1, fp
 8008cda:	4630      	mov	r0, r6
 8008cdc:	f008 fde0 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008ce0:	230a      	movs	r3, #10
 8008ce2:	9300      	str	r3, [sp, #0]
 8008ce4:	2232      	movs	r2, #50	; 0x32
 8008ce6:	23f0      	movs	r3, #240	; 0xf0
 8008ce8:	4629      	mov	r1, r5
 8008cea:	4638      	mov	r0, r7
 8008cec:	f7fa fc83 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008cf0:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008cf4:	22a0      	movs	r2, #160	; 0xa0
 8008cf6:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008cfa:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008cfe:	9b03      	ldr	r3, [sp, #12]
 8008d00:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008d04:	4611      	mov	r1, r2
 8008d06:	4638      	mov	r0, r7
 8008d08:	f00a ffac 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008d0c:	22a0      	movs	r2, #160	; 0xa0
 8008d0e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008d12:	4638      	mov	r0, r7
 8008d14:	f00a ffb1 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008d18:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008d1c:	2b20      	cmp	r3, #32
 8008d1e:	d005      	beq.n	8008d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8008d20:	2320      	movs	r3, #32
 8008d22:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8008d26:	4638      	mov	r0, r7
 8008d28:	f00a fea6 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008d2c:	4638      	mov	r0, r7
 8008d2e:	2101      	movs	r1, #1
 8008d30:	f00a ffae 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008d34:	4639      	mov	r1, r7
 8008d36:	4630      	mov	r0, r6
 8008d38:	f008 fdb2 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008d3c:	ad04      	add	r5, sp, #16
        color = newColor;
 8008d3e:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8008d42:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8008d46:	2223      	movs	r2, #35	; 0x23
 8008d48:	4650      	mov	r0, sl
 8008d4a:	2145      	movs	r1, #69	; 0x45
 8008d4c:	f7fa fc46 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008d50:	4651      	mov	r1, sl
 8008d52:	4628      	mov	r0, r5
        color = newColor;
 8008d54:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8008d58:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008d5c:	f00b f92e 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d60:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d64:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8008d68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008d6c:	4b42      	ldr	r3, [pc, #264]	; (8008e78 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8008d6e:	930a      	str	r3, [sp, #40]	; 0x28
 8008d70:	2245      	movs	r2, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8008d72:	a90a      	add	r1, sp, #40	; 0x28
 8008d74:	4650      	mov	r0, sl
 8008d76:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8008d7a:	f00b fbb9 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d7e:	4651      	mov	r1, sl
 8008d80:	4630      	mov	r0, r6
 8008d82:	f008 fd8d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008d86:	223c      	movs	r2, #60	; 0x3c
 8008d88:	4648      	mov	r0, r9
 8008d8a:	211f      	movs	r1, #31
 8008d8c:	f7fa fc26 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008d90:	4649      	mov	r1, r9
 8008d92:	4628      	mov	r0, r5
        color = newColor;
 8008d94:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8008d98:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8008d9c:	f00b f90e 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008da0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008da4:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 8008da8:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008dac:	4b32      	ldr	r3, [pc, #200]	; (8008e78 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8008dae:	930a      	str	r3, [sp, #40]	; 0x28
 8008db0:	223a      	movs	r2, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8008db2:	a90a      	add	r1, sp, #40	; 0x28
 8008db4:	4648      	mov	r0, r9
 8008db6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8008dba:	f00b fb99 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008dbe:	4649      	mov	r1, r9
 8008dc0:	4630      	mov	r0, r6
 8008dc2:	f008 fd6d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008dc6:	220c      	movs	r2, #12
 8008dc8:	4640      	mov	r0, r8
 8008dca:	2136      	movs	r1, #54	; 0x36
 8008dcc:	f7fa fc06 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008dd0:	4641      	mov	r1, r8
 8008dd2:	4628      	mov	r0, r5
        color = newColor;
 8008dd4:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8008dd8:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8008ddc:	f00b f8ee 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008de0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008de4:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 8008de8:	4b23      	ldr	r3, [pc, #140]	; (8008e78 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8008dea:	930a      	str	r3, [sp, #40]	; 0x28
 8008dec:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008df0:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8008df2:	a90a      	add	r1, sp, #40	; 0x28
 8008df4:	4640      	mov	r0, r8
 8008df6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008dfa:	f00b fb79 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008dfe:	4641      	mov	r1, r8
 8008e00:	4630      	mov	r0, r6
 8008e02:	f008 fd4d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8008e06:	ee18 0a90 	vmov	r0, s17
 8008e0a:	f240 1201 	movw	r2, #257	; 0x101
 8008e0e:	2121      	movs	r1, #33	; 0x21
 8008e10:	f7fa fbe4 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8008e14:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008e16:	aa0a      	add	r2, sp, #40	; 0x28
 8008e18:	a909      	add	r1, sp, #36	; 0x24
 8008e1a:	ee18 0a90 	vmov	r0, s17
 8008e1e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008e22:	2302      	movs	r3, #2
 8008e24:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008e28:	f00b ff1d 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008e2c:	2343      	movs	r3, #67	; 0x43
        updateTextPosition();
 8008e2e:	ee18 0a90 	vmov	r0, s17
 8008e32:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8008e36:	f7fa fc15 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008e3a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8008e3e:	330c      	adds	r3, #12
 8008e40:	4630      	mov	r0, r6
        colorPressed = col;
 8008e42:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8008e46:	ee18 1a90 	vmov	r1, s17
 8008e4a:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8008e4e:	f008 fd27 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008e52:	4620      	mov	r0, r4
 8008e54:	b00d      	add	sp, #52	; 0x34
 8008e56:	ecbd 8b02 	vpop	{d8}
 8008e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008e5e:	bf00      	nop
 8008e60:	0802fcdc 	.word	0x0802fcdc
 8008e64:	08030a78 	.word	0x08030a78
 8008e68:	08030cc4 	.word	0x08030cc4
 8008e6c:	080307ac 	.word	0x080307ac
 8008e70:	0802fcc4 	.word	0x0802fcc4
 8008e74:	08008ba1 	.word	0x08008ba1
 8008e78:	0802e524 	.word	0x0802e524

08008e7c <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8008e7c:	4770      	bx	lr

08008e7e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008e7e:	4770      	bx	lr

08008e80 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008e80:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008e82:	68c2      	ldr	r2, [r0, #12]
 8008e84:	6844      	ldr	r4, [r0, #4]
 8008e86:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008e88:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008e8a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008e8e:	07d2      	lsls	r2, r2, #31
 8008e90:	bf48      	it	mi
 8008e92:	5962      	ldrmi	r2, [r4, r5]
 8008e94:	689b      	ldr	r3, [r3, #8]
    }
 8008e96:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008e98:	bf48      	it	mi
 8008e9a:	58d3      	ldrmi	r3, [r2, r3]
 8008e9c:	4718      	bx	r3

08008e9e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008e9e:	6843      	ldr	r3, [r0, #4]
 8008ea0:	b12b      	cbz	r3, 8008eae <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008ea2:	6883      	ldr	r3, [r0, #8]
 8008ea4:	b92b      	cbnz	r3, 8008eb2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008ea6:	68c0      	ldr	r0, [r0, #12]
 8008ea8:	f000 0001 	and.w	r0, r0, #1
 8008eac:	4770      	bx	lr
 8008eae:	4618      	mov	r0, r3
 8008eb0:	4770      	bx	lr
 8008eb2:	2001      	movs	r0, #1
    }
 8008eb4:	4770      	bx	lr

08008eb6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008eb6:	b510      	push	{r4, lr}
 8008eb8:	2110      	movs	r1, #16
 8008eba:	4604      	mov	r4, r0
 8008ebc:	f022 fe7d 	bl	802bbba <_ZdlPvj>
 8008ec0:	4620      	mov	r0, r4
 8008ec2:	bd10      	pop	{r4, pc}

08008ec4 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008ec4:	b510      	push	{r4, lr}
 8008ec6:	4b03      	ldr	r3, [pc, #12]	; (8008ed4 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8008ec8:	6003      	str	r3, [r0, #0]
 8008eca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008ecc:	f00d f8be 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008ed0:	4620      	mov	r0, r4
 8008ed2:	bd10      	pop	{r4, pc}
 8008ed4:	0802fd28 	.word	0x0802fd28

08008ed8 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008ed8:	b507      	push	{r0, r1, r2, lr}
 8008eda:	4b07      	ldr	r3, [pc, #28]	; (8008ef8 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008edc:	6003      	str	r3, [r0, #0]
 8008ede:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008ee0:	f00d f8b4 	bl	801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008ee4:	9801      	ldr	r0, [sp, #4]
 8008ee6:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008eea:	f022 fe66 	bl	802bbba <_ZdlPvj>
 8008eee:	9801      	ldr	r0, [sp, #4]
 8008ef0:	b003      	add	sp, #12
 8008ef2:	f85d fb04 	ldr.w	pc, [sp], #4
 8008ef6:	bf00      	nop
 8008ef8:	0802fd28 	.word	0x0802fd28

08008efc <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008efc:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008f00:	4288      	cmp	r0, r1
{
 8008f02:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008f04:	d105      	bne.n	8008f12 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008f06:	f00e fda3 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8008f0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8008f0e:	f7fc bb19 	b.w	8005544 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8008f12:	bd08      	pop	{r3, pc}

08008f14 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f18:	ed2d 8b04 	vpush	{d8-d9}
 8008f1c:	4604      	mov	r4, r0
 8008f1e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8008f20:	46a3      	mov	fp, r4
 8008f22:	2500      	movs	r5, #0
 8008f24:	f010 fa14 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 8008f28:	4bd1      	ldr	r3, [pc, #836]	; (8009270 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8008f2a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008f2c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008f30:	2226      	movs	r2, #38	; 0x26
 8008f32:	4629      	mov	r1, r5
 8008f34:	4658      	mov	r0, fp
 8008f36:	f023 ff2c 	bl	802cd92 <memset>
 8008f3a:	4658      	mov	r0, fp
 8008f3c:	f7fa fb80 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008f40:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008f44:	26ff      	movs	r6, #255	; 0xff
 8008f46:	4bcb      	ldr	r3, [pc, #812]	; (8009274 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8008f48:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008f4a:	2226      	movs	r2, #38	; 0x26
 8008f4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008f50:	4629      	mov	r1, r5
 8008f52:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008f56:	4650      	mov	r0, sl
 8008f58:	66a5      	str	r5, [r4, #104]	; 0x68
 8008f5a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008f5e:	f023 ff18 	bl	802cd92 <memset>
 8008f62:	4650      	mov	r0, sl
 8008f64:	f7fa fb6c 	bl	8003640 <_ZN8touchgfx6WidgetC1Ev>
 8008f68:	4bc3      	ldr	r3, [pc, #780]	; (8009278 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8008f6a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008f6c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008f70:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008f74:	a90a      	add	r1, sp, #40	; 0x28
 8008f76:	4650      	mov	r0, sl
 8008f78:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008f7c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008f80:	f00c f867 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008f84:	4648      	mov	r0, r9
 8008f86:	f7fa fbbf 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008f8a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8008f8e:	4bbb      	ldr	r3, [pc, #748]	; (800927c <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8008f90:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008f94:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8008f98:	4638      	mov	r0, r7
 8008f9a:	f00a fd4d 	bl	8013a38 <_ZN8touchgfx4LineC1Ev>
 8008f9e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008fa2:	4618      	mov	r0, r3
 8008fa4:	9303      	str	r3, [sp, #12]
 8008fa6:	f7fa f94f 	bl	8003248 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008faa:	4bb5      	ldr	r3, [pc, #724]	; (8009280 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8008fac:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8008fb0:	3324      	adds	r3, #36	; 0x24
 8008fb2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8008fb6:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8008fba:	4618      	mov	r0, r3
 8008fbc:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8008fc0:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8008fc4:	ee09 3a10 	vmov	s18, r3
 8008fc8:	f00c f97a 	bl	80152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008fcc:	4640      	mov	r0, r8
 8008fce:	f7fa fb9b 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008fd2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8008fd6:	4618      	mov	r0, r3
 8008fd8:	ee08 3a10 	vmov	s16, r3
 8008fdc:	f7fa fb94 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
 8008fe0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	ee08 3a90 	vmov	s17, r3
 8008fea:	f7fa fb8d 	bl	8003708 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008fee:	4aa5      	ldr	r2, [pc, #660]	; (8009284 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008ff0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008ff4:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008ff8:	4aa3      	ldr	r2, [pc, #652]	; (8009288 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008ffa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008ffe:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8009002:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8009006:	f00d f817 	bl	8016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800900a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800900e:	462a      	mov	r2, r5
 8009010:	4658      	mov	r0, fp
 8009012:	9300      	str	r3, [sp, #0]
 8009014:	4629      	mov	r1, r5
 8009016:	23f0      	movs	r3, #240	; 0xf0
 8009018:	f7fa faed 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800901c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800901e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009022:	66a3      	str	r3, [r4, #104]	; 0x68
 8009024:	4659      	mov	r1, fp
 8009026:	4630      	mov	r0, r6
 8009028:	f008 fc3a 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800902c:	462a      	mov	r2, r5
 800902e:	4650      	mov	r0, sl
 8009030:	4629      	mov	r1, r5
 8009032:	f7fa fad3 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009036:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009038:	4650      	mov	r0, sl
 800903a:	a90a      	add	r1, sp, #40	; 0x28
 800903c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009040:	f00c f807 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009044:	4651      	mov	r1, sl
 8009046:	4630      	mov	r0, r6
 8009048:	f008 fc2a 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800904c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8009050:	2156      	movs	r1, #86	; 0x56
 8009052:	4648      	mov	r0, r9
 8009054:	f7fa fac2 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009058:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800905c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8009060:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8009064:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8009068:	4650      	mov	r0, sl
 800906a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800906e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8009072:	4649      	mov	r1, r9
 8009074:	4798      	blx	r3
 8009076:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800907a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800907e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009082:	4b82      	ldr	r3, [pc, #520]	; (800928c <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8009084:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8009086:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 800908a:	b92b      	cbnz	r3, 8009098 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 800908c:	4b80      	ldr	r3, [pc, #512]	; (8009290 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 800908e:	4a81      	ldr	r2, [pc, #516]	; (8009294 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8009090:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009092:	4881      	ldr	r0, [pc, #516]	; (8009298 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8009094:	f023 fc78 	bl	802c988 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8009098:	4b80      	ldr	r3, [pc, #512]	; (800929c <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800909a:	881b      	ldrh	r3, [r3, #0]
 800909c:	2b28      	cmp	r3, #40	; 0x28
 800909e:	d803      	bhi.n	80090a8 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80090a0:	4b7f      	ldr	r3, [pc, #508]	; (80092a0 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80090a2:	4a7c      	ldr	r2, [pc, #496]	; (8009294 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80090a4:	2161      	movs	r1, #97	; 0x61
 80090a6:	e7f4      	b.n	8009092 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80090a8:	4b7e      	ldr	r3, [pc, #504]	; (80092a4 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80090aa:	2128      	movs	r1, #40	; 0x28
 80090ac:	6818      	ldr	r0, [r3, #0]
 80090ae:	f000 fb1b 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 80090b2:	4a7d      	ldr	r2, [pc, #500]	; (80092a8 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80090b4:	4603      	mov	r3, r0
 80090b6:	2104      	movs	r1, #4
 80090b8:	4650      	mov	r0, sl
 80090ba:	f011 fe77 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80090be:	4648      	mov	r0, r9
        wc1 = value;
 80090c0:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80090c4:	f00b f9f4 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80090c8:	4b78      	ldr	r3, [pc, #480]	; (80092ac <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80090ca:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80090cc:	a90a      	add	r1, sp, #40	; 0x28
 80090ce:	2329      	movs	r3, #41	; 0x29
 80090d0:	4648      	mov	r0, r9
 80090d2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80090d6:	f00b fa0b 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80090da:	4649      	mov	r1, r9
 80090dc:	4630      	mov	r0, r6
 80090de:	f008 fbdf 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80090e2:	230a      	movs	r3, #10
 80090e4:	9300      	str	r3, [sp, #0]
 80090e6:	2232      	movs	r2, #50	; 0x32
 80090e8:	23f0      	movs	r3, #240	; 0xf0
 80090ea:	4629      	mov	r1, r5
 80090ec:	4638      	mov	r0, r7
 80090ee:	f7fa fa82 	bl	80035f6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80090f2:	9b03      	ldr	r3, [sp, #12]
 80090f4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80090f8:	22a0      	movs	r2, #160	; 0xa0
 80090fa:	4611      	mov	r1, r2
 80090fc:	4638      	mov	r0, r7
 80090fe:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009102:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8009106:	f00a fdad 	bl	8013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800910a:	22a0      	movs	r2, #160	; 0xa0
 800910c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009110:	4638      	mov	r0, r7
 8009112:	f00a fdb2 	bl	8013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009116:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800911a:	2b20      	cmp	r3, #32
 800911c:	d005      	beq.n	800912a <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 800911e:	2320      	movs	r3, #32
 8009120:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8009124:	4638      	mov	r0, r7
 8009126:	f00a fca7 	bl	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800912a:	4638      	mov	r0, r7
 800912c:	2101      	movs	r1, #1
 800912e:	f00a fdaf 	bl	8013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009132:	4639      	mov	r1, r7
 8009134:	4630      	mov	r0, r6
 8009136:	f008 fbb3 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800913a:	ee19 0a10 	vmov	r0, s18
 800913e:	22f0      	movs	r2, #240	; 0xf0
 8009140:	2121      	movs	r1, #33	; 0x21
 8009142:	f7fa fa4b 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009146:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009148:	aa0a      	add	r2, sp, #40	; 0x28
 800914a:	a909      	add	r1, sp, #36	; 0x24
 800914c:	ee19 0a10 	vmov	r0, s18
 8009150:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009154:	2302      	movs	r3, #2
 8009156:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800915a:	f00b fd84 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800915e:	2350      	movs	r3, #80	; 0x50
        updateTextPosition();
 8009160:	ee19 0a10 	vmov	r0, s18
 8009164:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8009168:	f7fa fa7c 	bl	8003664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800916c:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8009170:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8009174:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8009178:	ee19 1a10 	vmov	r1, s18
 800917c:	4630      	mov	r0, r6
        colorPressed = col;
 800917e:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8009182:	ad04      	add	r5, sp, #16
 8009184:	f008 fb8c 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8009188:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 800918c:	225b      	movs	r2, #91	; 0x5b
 800918e:	4640      	mov	r0, r8
 8009190:	2105      	movs	r1, #5
 8009192:	f7fa fa23 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009196:	4641      	mov	r1, r8
 8009198:	4628      	mov	r0, r5
        color = newColor;
 800919a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800919e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80091a2:	f00a ff0b 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80091a6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80091aa:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80091ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80091b2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80092ac <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80091b6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80091ba:	2351      	movs	r3, #81	; 0x51
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80091bc:	a90a      	add	r1, sp, #40	; 0x28
 80091be:	4640      	mov	r0, r8
 80091c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80091c4:	f00b f994 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80091c8:	4641      	mov	r1, r8
 80091ca:	4630      	mov	r0, r6
 80091cc:	f008 fb68 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80091d0:	ee18 0a10 	vmov	r0, s16
 80091d4:	2223      	movs	r2, #35	; 0x23
 80091d6:	2145      	movs	r1, #69	; 0x45
 80091d8:	f7fa fa00 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 80091dc:	ee18 1a10 	vmov	r1, s16
 80091e0:	4628      	mov	r0, r5
        color = newColor;
 80091e2:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80091e6:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80091ea:	f00a fee7 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80091ee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80091f2:	ee18 3a10 	vmov	r3, s16
 80091f6:	333c      	adds	r3, #60	; 0x3c
 80091f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80091fc:	2353      	movs	r3, #83	; 0x53
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 80091fe:	ee18 0a10 	vmov	r0, s16
 8009202:	a90a      	add	r1, sp, #40	; 0x28
 8009204:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009208:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800920c:	f00b f970 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009210:	ee18 1a10 	vmov	r1, s16
 8009214:	4630      	mov	r0, r6
 8009216:	f008 fb43 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800921a:	ee18 0a90 	vmov	r0, s17
 800921e:	220c      	movs	r2, #12
 8009220:	2136      	movs	r1, #54	; 0x36
 8009222:	f7fa f9db 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8009226:	ee18 1a90 	vmov	r1, s17
 800922a:	4628      	mov	r0, r5
        color = newColor;
 800922c:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8009230:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8009234:	f00a fec2 	bl	8013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009238:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800923c:	ee18 3a90 	vmov	r3, s17
 8009240:	333c      	adds	r3, #60	; 0x3c
 8009242:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009246:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8009248:	ee18 0a90 	vmov	r0, s17
 800924c:	a90a      	add	r1, sp, #40	; 0x28
 800924e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009252:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8009256:	f00b f94b 	bl	80144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800925a:	4630      	mov	r0, r6
 800925c:	ee18 1a90 	vmov	r1, s17
 8009260:	f008 fb1e 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009264:	4620      	mov	r0, r4
 8009266:	b00d      	add	sp, #52	; 0x34
 8009268:	ecbd 8b04 	vpop	{d8-d9}
 800926c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009270:	0802fd28 	.word	0x0802fd28
 8009274:	08030a78 	.word	0x08030a78
 8009278:	08030cc4 	.word	0x08030cc4
 800927c:	0802e5c4 	.word	0x0802e5c4
 8009280:	080307ac 	.word	0x080307ac
 8009284:	0802fd10 	.word	0x0802fd10
 8009288:	08008efd 	.word	0x08008efd
 800928c:	200138a4 	.word	0x200138a4
 8009290:	0802e374 	.word	0x0802e374
 8009294:	0802e479 	.word	0x0802e479
 8009298:	0802e3f1 	.word	0x0802e3f1
 800929c:	200138a8 	.word	0x200138a8
 80092a0:	0802e438 	.word	0x0802e438
 80092a4:	200138b0 	.word	0x200138b0
 80092a8:	0802e4b1 	.word	0x0802e4b1
 80092ac:	0802e524 	.word	0x0802e524

080092b0 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80092b0:	4770      	bx	lr

080092b2 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80092b2:	4770      	bx	lr

080092b4 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80092b4:	b510      	push	{r4, lr}
}
 80092b6:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80092b8:	4604      	mov	r4, r0
}
 80092ba:	f022 fc7e 	bl	802bbba <_ZdlPvj>
 80092be:	4620      	mov	r0, r4
 80092c0:	bd10      	pop	{r4, pc}
	...

080092c4 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80092c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80092c8:	4604      	mov	r4, r0
 80092ca:	4626      	mov	r6, r4
 80092cc:	f010 f840 	bl	8019350 <_ZN8touchgfx6ScreenC1Ev>
 80092d0:	2500      	movs	r5, #0
 80092d2:	4b2e      	ldr	r3, [pc, #184]	; (800938c <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 80092d4:	63e5      	str	r5, [r4, #60]	; 0x3c
 80092d6:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80092da:	4b2d      	ldr	r3, [pc, #180]	; (8009390 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 80092dc:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 80092de:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 80092e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80092e6:	23ff      	movs	r3, #255	; 0xff
 80092e8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80092ec:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80092f0:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 80092f4:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 80092f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80092fc:	4a25      	ldr	r2, [pc, #148]	; (8009394 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 80092fe:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8009302:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8009306:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8009308:	a901      	add	r1, sp, #4
 800930a:	4638      	mov	r0, r7
 800930c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8009310:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8009314:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8009318:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800931c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8009320:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8009324:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8009328:	66a5      	str	r5, [r4, #104]	; 0x68
 800932a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800932e:	f00b fe90 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8009332:	462a      	mov	r2, r5
 8009334:	4629      	mov	r1, r5
 8009336:	4630      	mov	r0, r6
 8009338:	f7fa f950 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800933c:	4630      	mov	r0, r6
 800933e:	21f0      	movs	r1, #240	; 0xf0
 8009340:	f7f9 fece 	bl	80030e0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8009344:	4630      	mov	r0, r6
 8009346:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800934a:	f7f9 fecb 	bl	80030e4 <_ZN8touchgfx8Drawable9setHeightEs>
 800934e:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8009352:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009356:	66a3      	str	r3, [r4, #104]	; 0x68
 8009358:	4631      	mov	r1, r6
 800935a:	4640      	mov	r0, r8
 800935c:	f008 faa0 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8009360:	462a      	mov	r2, r5
 8009362:	4638      	mov	r0, r7
 8009364:	f06f 0102 	mvn.w	r1, #2
 8009368:	f7fa f938 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 800936c:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800936e:	a901      	add	r1, sp, #4
 8009370:	4638      	mov	r0, r7
 8009372:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009376:	f00b fe6c 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800937a:	4640      	mov	r0, r8
 800937c:	4639      	mov	r1, r7
 800937e:	f008 fa8f 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009382:	4620      	mov	r0, r4
 8009384:	b002      	add	sp, #8
 8009386:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800938a:	bf00      	nop
 800938c:	0802fd5c 	.word	0x0802fd5c
 8009390:	08030a78 	.word	0x08030a78
 8009394:	08030cc4 	.word	0x08030cc4

08009398 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009398:	4770      	bx	lr
	...

0800939c <_Z23getFont_verdana_10_4bppv>:
{
 800939c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800939e:	4d17      	ldr	r5, [pc, #92]	; (80093fc <_Z23getFont_verdana_10_4bppv+0x60>)
 80093a0:	682c      	ldr	r4, [r5, #0]
 80093a2:	f3bf 8f5b 	dmb	ish
 80093a6:	f014 0401 	ands.w	r4, r4, #1
{
 80093aa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80093ac:	d122      	bne.n	80093f4 <_Z23getFont_verdana_10_4bppv+0x58>
 80093ae:	4628      	mov	r0, r5
 80093b0:	f022 fc05 	bl	802bbbe <__cxa_guard_acquire>
 80093b4:	b1f0      	cbz	r0, 80093f4 <_Z23getFont_verdana_10_4bppv+0x58>
 80093b6:	233f      	movs	r3, #63	; 0x3f
 80093b8:	9309      	str	r3, [sp, #36]	; 0x24
 80093ba:	4b11      	ldr	r3, [pc, #68]	; (8009400 <_Z23getFont_verdana_10_4bppv+0x64>)
 80093bc:	9308      	str	r3, [sp, #32]
 80093be:	4b11      	ldr	r3, [pc, #68]	; (8009404 <_Z23getFont_verdana_10_4bppv+0x68>)
 80093c0:	9307      	str	r3, [sp, #28]
 80093c2:	2301      	movs	r3, #1
 80093c4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80093c8:	9304      	str	r3, [sp, #16]
 80093ca:	2304      	movs	r3, #4
 80093cc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80093d0:	230a      	movs	r3, #10
 80093d2:	490d      	ldr	r1, [pc, #52]	; (8009408 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80093d4:	9300      	str	r3, [sp, #0]
 80093d6:	225f      	movs	r2, #95	; 0x5f
 80093d8:	230c      	movs	r3, #12
 80093da:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80093de:	480b      	ldr	r0, [pc, #44]	; (800940c <_Z23getFont_verdana_10_4bppv+0x70>)
 80093e0:	940a      	str	r4, [sp, #40]	; 0x28
 80093e2:	9401      	str	r4, [sp, #4]
 80093e4:	f7fd f994 	bl	8006710 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80093e8:	4809      	ldr	r0, [pc, #36]	; (8009410 <_Z23getFont_verdana_10_4bppv+0x74>)
 80093ea:	f023 faeb 	bl	802c9c4 <atexit>
 80093ee:	4628      	mov	r0, r5
 80093f0:	f022 fbf1 	bl	802bbd6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80093f4:	4805      	ldr	r0, [pc, #20]	; (800940c <_Z23getFont_verdana_10_4bppv+0x70>)
 80093f6:	b00f      	add	sp, #60	; 0x3c
 80093f8:	bd30      	pop	{r4, r5, pc}
 80093fa:	bf00      	nop
 80093fc:	20002948 	.word	0x20002948
 8009400:	08048968 	.word	0x08048968
 8009404:	08048ba4 	.word	0x08048ba4
 8009408:	080479b0 	.word	0x080479b0
 800940c:	2000294c 	.word	0x2000294c
 8009410:	08009399 	.word	0x08009399

08009414 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8009414:	4770      	bx	lr
	...

08009418 <_Z23getFont_verdana_12_4bppv>:
{
 8009418:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800941a:	4d17      	ldr	r5, [pc, #92]	; (8009478 <_Z23getFont_verdana_12_4bppv+0x60>)
 800941c:	682c      	ldr	r4, [r5, #0]
 800941e:	f3bf 8f5b 	dmb	ish
 8009422:	f014 0401 	ands.w	r4, r4, #1
{
 8009426:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8009428:	d122      	bne.n	8009470 <_Z23getFont_verdana_12_4bppv+0x58>
 800942a:	4628      	mov	r0, r5
 800942c:	f022 fbc7 	bl	802bbbe <__cxa_guard_acquire>
 8009430:	b1f0      	cbz	r0, 8009470 <_Z23getFont_verdana_12_4bppv+0x58>
 8009432:	233f      	movs	r3, #63	; 0x3f
 8009434:	9309      	str	r3, [sp, #36]	; 0x24
 8009436:	4b11      	ldr	r3, [pc, #68]	; (800947c <_Z23getFont_verdana_12_4bppv+0x64>)
 8009438:	9308      	str	r3, [sp, #32]
 800943a:	4b11      	ldr	r3, [pc, #68]	; (8009480 <_Z23getFont_verdana_12_4bppv+0x68>)
 800943c:	9307      	str	r3, [sp, #28]
 800943e:	2301      	movs	r3, #1
 8009440:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8009444:	9304      	str	r3, [sp, #16]
 8009446:	2304      	movs	r3, #4
 8009448:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800944c:	230c      	movs	r3, #12
 800944e:	490d      	ldr	r1, [pc, #52]	; (8009484 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8009450:	9300      	str	r3, [sp, #0]
 8009452:	2260      	movs	r2, #96	; 0x60
 8009454:	230f      	movs	r3, #15
 8009456:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800945a:	480b      	ldr	r0, [pc, #44]	; (8009488 <_Z23getFont_verdana_12_4bppv+0x70>)
 800945c:	940a      	str	r4, [sp, #40]	; 0x28
 800945e:	9401      	str	r4, [sp, #4]
 8009460:	f7fd f956 	bl	8006710 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009464:	4809      	ldr	r0, [pc, #36]	; (800948c <_Z23getFont_verdana_12_4bppv+0x74>)
 8009466:	f023 faad 	bl	802c9c4 <atexit>
 800946a:	4628      	mov	r0, r5
 800946c:	f022 fbb3 	bl	802bbd6 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8009470:	4805      	ldr	r0, [pc, #20]	; (8009488 <_Z23getFont_verdana_12_4bppv+0x70>)
 8009472:	b00f      	add	sp, #60	; 0x3c
 8009474:	bd30      	pop	{r4, r5, pc}
 8009476:	bf00      	nop
 8009478:	20002978 	.word	0x20002978
 800947c:	0804899c 	.word	0x0804899c
 8009480:	08048ba8 	.word	0x08048ba8
 8009484:	08047ee4 	.word	0x08047ee4
 8009488:	2000297c 	.word	0x2000297c
 800948c:	08009415 	.word	0x08009415

08009490 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8009490:	4770      	bx	lr
	...

08009494 <_Z23getFont_verdana_19_4bppv>:
{
 8009494:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8009496:	4d17      	ldr	r5, [pc, #92]	; (80094f4 <_Z23getFont_verdana_19_4bppv+0x60>)
 8009498:	682c      	ldr	r4, [r5, #0]
 800949a:	f3bf 8f5b 	dmb	ish
 800949e:	f014 0401 	ands.w	r4, r4, #1
{
 80094a2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80094a4:	d122      	bne.n	80094ec <_Z23getFont_verdana_19_4bppv+0x58>
 80094a6:	4628      	mov	r0, r5
 80094a8:	f022 fb89 	bl	802bbbe <__cxa_guard_acquire>
 80094ac:	b1f0      	cbz	r0, 80094ec <_Z23getFont_verdana_19_4bppv+0x58>
 80094ae:	233f      	movs	r3, #63	; 0x3f
 80094b0:	9309      	str	r3, [sp, #36]	; 0x24
 80094b2:	4b11      	ldr	r3, [pc, #68]	; (80094f8 <_Z23getFont_verdana_19_4bppv+0x64>)
 80094b4:	9308      	str	r3, [sp, #32]
 80094b6:	4b11      	ldr	r3, [pc, #68]	; (80094fc <_Z23getFont_verdana_19_4bppv+0x68>)
 80094b8:	9307      	str	r3, [sp, #28]
 80094ba:	2301      	movs	r3, #1
 80094bc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80094c0:	9304      	str	r3, [sp, #16]
 80094c2:	2304      	movs	r3, #4
 80094c4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80094c8:	2313      	movs	r3, #19
 80094ca:	490d      	ldr	r1, [pc, #52]	; (8009500 <_Z23getFont_verdana_19_4bppv+0x6c>)
 80094cc:	9300      	str	r3, [sp, #0]
 80094ce:	225f      	movs	r2, #95	; 0x5f
 80094d0:	2317      	movs	r3, #23
 80094d2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80094d6:	480b      	ldr	r0, [pc, #44]	; (8009504 <_Z23getFont_verdana_19_4bppv+0x70>)
 80094d8:	940a      	str	r4, [sp, #40]	; 0x28
 80094da:	9401      	str	r4, [sp, #4]
 80094dc:	f7fd f918 	bl	8006710 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80094e0:	4809      	ldr	r0, [pc, #36]	; (8009508 <_Z23getFont_verdana_19_4bppv+0x74>)
 80094e2:	f023 fa6f 	bl	802c9c4 <atexit>
 80094e6:	4628      	mov	r0, r5
 80094e8:	f022 fb75 	bl	802bbd6 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 80094ec:	4805      	ldr	r0, [pc, #20]	; (8009504 <_Z23getFont_verdana_19_4bppv+0x70>)
 80094ee:	b00f      	add	sp, #60	; 0x3c
 80094f0:	bd30      	pop	{r4, r5, pc}
 80094f2:	bf00      	nop
 80094f4:	200029a8 	.word	0x200029a8
 80094f8:	08048a20 	.word	0x08048a20
 80094fc:	08048bac 	.word	0x08048bac
 8009500:	08048424 	.word	0x08048424
 8009504:	200029ac 	.word	0x200029ac
 8009508:	08009491 	.word	0x08009491

0800950c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800950c:	4770      	bx	lr
	...

08009510 <_Z23getFont_verdana_40_4bppv>:
{
 8009510:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8009512:	4d16      	ldr	r5, [pc, #88]	; (800956c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8009514:	682c      	ldr	r4, [r5, #0]
 8009516:	f3bf 8f5b 	dmb	ish
 800951a:	f014 0401 	ands.w	r4, r4, #1
{
 800951e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8009520:	d120      	bne.n	8009564 <_Z23getFont_verdana_40_4bppv+0x54>
 8009522:	4628      	mov	r0, r5
 8009524:	f022 fb4b 	bl	802bbbe <__cxa_guard_acquire>
 8009528:	b1e0      	cbz	r0, 8009564 <_Z23getFont_verdana_40_4bppv+0x54>
 800952a:	233f      	movs	r3, #63	; 0x3f
 800952c:	9309      	str	r3, [sp, #36]	; 0x24
 800952e:	4b10      	ldr	r3, [pc, #64]	; (8009570 <_Z23getFont_verdana_40_4bppv+0x60>)
 8009530:	9308      	str	r3, [sp, #32]
 8009532:	4b10      	ldr	r3, [pc, #64]	; (8009574 <_Z23getFont_verdana_40_4bppv+0x64>)
 8009534:	4910      	ldr	r1, [pc, #64]	; (8009578 <_Z23getFont_verdana_40_4bppv+0x68>)
 8009536:	4811      	ldr	r0, [pc, #68]	; (800957c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8009538:	940a      	str	r4, [sp, #40]	; 0x28
 800953a:	2201      	movs	r2, #1
 800953c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8009540:	2304      	movs	r3, #4
 8009542:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8009546:	2328      	movs	r3, #40	; 0x28
 8009548:	9300      	str	r3, [sp, #0]
 800954a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800954e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8009552:	9405      	str	r4, [sp, #20]
 8009554:	f7fd f8dc 	bl	8006710 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009558:	4809      	ldr	r0, [pc, #36]	; (8009580 <_Z23getFont_verdana_40_4bppv+0x70>)
 800955a:	f023 fa33 	bl	802c9c4 <atexit>
 800955e:	4628      	mov	r0, r5
 8009560:	f022 fb39 	bl	802bbd6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8009564:	4805      	ldr	r0, [pc, #20]	; (800957c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8009566:	b00f      	add	sp, #60	; 0x3c
 8009568:	bd30      	pop	{r4, r5, pc}
 800956a:	bf00      	nop
 800956c:	200029d8 	.word	0x200029d8
 8009570:	08048ba0 	.word	0x08048ba0
 8009574:	08048bb0 	.word	0x08048bb0
 8009578:	08048958 	.word	0x08048958
 800957c:	200029dc 	.word	0x200029dc
 8009580:	0800950d 	.word	0x0800950d

08009584 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8009584:	2000      	movs	r0, #0
 8009586:	4770      	bx	lr

08009588 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8009588:	2000      	movs	r0, #0
 800958a:	4770      	bx	lr

0800958c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800958c:	b40e      	push	{r1, r2, r3}
 800958e:	b503      	push	{r0, r1, lr}
 8009590:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8009592:	2100      	movs	r1, #0
{
 8009594:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8009598:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800959a:	f00f fa17 	bl	80189cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800959e:	b002      	add	sp, #8
 80095a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80095a4:	b003      	add	sp, #12
 80095a6:	4770      	bx	lr

080095a8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80095a8:	b40c      	push	{r2, r3}
 80095aa:	b507      	push	{r0, r1, r2, lr}
 80095ac:	ab04      	add	r3, sp, #16
 80095ae:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80095b2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80095b4:	f00f fa0a 	bl	80189cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80095b8:	b003      	add	sp, #12
 80095ba:	f85d eb04 	ldr.w	lr, [sp], #4
 80095be:	b002      	add	sp, #8
 80095c0:	4770      	bx	lr
	...

080095c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80095c4:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80095c6:	b510      	push	{r4, lr}
 80095c8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80095ca:	b373      	cbz	r3, 800962a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80095cc:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80095ce:	b92b      	cbnz	r3, 80095dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80095d0:	4b18      	ldr	r3, [pc, #96]	; (8009634 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80095d2:	4a19      	ldr	r2, [pc, #100]	; (8009638 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80095d4:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80095d6:	4819      	ldr	r0, [pc, #100]	; (800963c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80095d8:	f023 f9d6 	bl	802c988 <__assert_func>
            return buffer[pos];
 80095dc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80095de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80095e2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80095e4:	b30b      	cbz	r3, 800962a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80095e6:	f010 fe2c 	bl	801a242 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80095ea:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80095ec:	2b01      	cmp	r3, #1
 80095ee:	d803      	bhi.n	80095f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80095f0:	4b13      	ldr	r3, [pc, #76]	; (8009640 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80095f2:	4a14      	ldr	r2, [pc, #80]	; (8009644 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80095f4:	21cb      	movs	r1, #203	; 0xcb
 80095f6:	e7ee      	b.n	80095d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80095f8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80095fa:	1c53      	adds	r3, r2, #1
 80095fc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80095fe:	2b09      	cmp	r3, #9
 8009600:	4619      	mov	r1, r3
 8009602:	bf88      	it	hi
 8009604:	f1a3 010a 	subhi.w	r1, r3, #10
 8009608:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800960c:	f640 103f 	movw	r0, #2367	; 0x93f
 8009610:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8009612:	4281      	cmp	r1, r0
 8009614:	d109      	bne.n	800962a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8009616:	2b0a      	cmp	r3, #10
 8009618:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800961c:	bf28      	it	cs
 800961e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8009620:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8009624:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8009626:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8009628:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800962a:	4620      	mov	r0, r4
}
 800962c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8009630:	f010 bd0a 	b.w	801a048 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009634:	0802fd88 	.word	0x0802fd88
 8009638:	0802fd91 	.word	0x0802fd91
 800963c:	0802fe3c 	.word	0x0802fe3c
 8009640:	0802fe86 	.word	0x0802fe86
 8009644:	0802fe94 	.word	0x0802fe94

08009648 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8009648:	f010 bcc5 	b.w	8019fd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800964c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800964c:	b510      	push	{r4, lr}
 800964e:	b086      	sub	sp, #24
 8009650:	ac02      	add	r4, sp, #8
 8009652:	e884 0006 	stmia.w	r4, {r1, r2}
 8009656:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8009658:	ab0a      	add	r3, sp, #40	; 0x28
 800965a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800965c:	9301      	str	r3, [sp, #4]
 800965e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009660:	9300      	str	r3, [sp, #0]
 8009662:	4621      	mov	r1, r4
 8009664:	9b08      	ldr	r3, [sp, #32]
 8009666:	f00d fd75 	bl	8017154 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800966a:	b006      	add	sp, #24
 800966c:	bd10      	pop	{r4, pc}
	...

08009670 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009670:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8009672:	bb18      	cbnz	r0, 80096bc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8009674:	4b12      	ldr	r3, [pc, #72]	; (80096c0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8009676:	4813      	ldr	r0, [pc, #76]	; (80096c4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8009678:	681c      	ldr	r4, [r3, #0]
 800967a:	4913      	ldr	r1, [pc, #76]	; (80096c8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800967c:	b1b4      	cbz	r4, 80096ac <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800967e:	6822      	ldr	r2, [r4, #0]
 8009680:	4422      	add	r2, r4
 8009682:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8009684:	6862      	ldr	r2, [r4, #4]
 8009686:	4422      	add	r2, r4
 8009688:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800968a:	68a2      	ldr	r2, [r4, #8]
 800968c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800968e:	4b0f      	ldr	r3, [pc, #60]	; (80096cc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8009690:	2200      	movs	r2, #0
 8009692:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8009694:	f000 f838 	bl	8009708 <_ZN17TypedTextDatabase8getFontsEv>
 8009698:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800969a:	f000 f833 	bl	8009704 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800969e:	4b0c      	ldr	r3, [pc, #48]	; (80096d0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80096a0:	601c      	str	r4, [r3, #0]
        fonts = f;
 80096a2:	4b0c      	ldr	r3, [pc, #48]	; (80096d4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80096a4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80096a6:	4b0c      	ldr	r3, [pc, #48]	; (80096d8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80096a8:	8018      	strh	r0, [r3, #0]
    }
}
 80096aa:	e007      	b.n	80096bc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80096ac:	4b0b      	ldr	r3, [pc, #44]	; (80096dc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80096ae:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80096b0:	4b0b      	ldr	r3, [pc, #44]	; (80096e0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80096b2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80096b4:	4b0b      	ldr	r3, [pc, #44]	; (80096e4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80096b6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80096b8:	2c00      	cmp	r4, #0
 80096ba:	d1e8      	bne.n	800968e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80096bc:	bd38      	pop	{r3, r4, r5, pc}
 80096be:	bf00      	nop
 80096c0:	20002a08 	.word	0x20002a08
 80096c4:	20002a0c 	.word	0x20002a0c
 80096c8:	20002a10 	.word	0x20002a10
 80096cc:	20002a14 	.word	0x20002a14
 80096d0:	200138a4 	.word	0x200138a4
 80096d4:	200138ac 	.word	0x200138ac
 80096d8:	200138a8 	.word	0x200138a8
 80096dc:	08048d2c 	.word	0x08048d2c
 80096e0:	08048bb4 	.word	0x08048bb4
 80096e4:	08049274 	.word	0x08049274

080096e8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80096e8:	4b04      	ldr	r3, [pc, #16]	; (80096fc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80096ea:	681b      	ldr	r3, [r3, #0]
 80096ec:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80096f0:	4b03      	ldr	r3, [pc, #12]	; (8009700 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80096f2:	681b      	ldr	r3, [r3, #0]
}
 80096f4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80096f8:	4770      	bx	lr
 80096fa:	bf00      	nop
 80096fc:	20002a10 	.word	0x20002a10
 8009700:	20002a0c 	.word	0x20002a0c

08009704 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8009704:	205e      	movs	r0, #94	; 0x5e
 8009706:	4770      	bx	lr

08009708 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8009708:	4800      	ldr	r0, [pc, #0]	; (800970c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800970a:	4770      	bx	lr
 800970c:	20002a18 	.word	0x20002a18

08009710 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8009710:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8009712:	f7ff febf 	bl	8009494 <_Z23getFont_verdana_19_4bppv>
};
 8009716:	4c06      	ldr	r4, [pc, #24]	; (8009730 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8009718:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800971a:	f7ff fef9 	bl	8009510 <_Z23getFont_verdana_40_4bppv>
};
 800971e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8009720:	f7ff fe3c 	bl	800939c <_Z23getFont_verdana_10_4bppv>
};
 8009724:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8009726:	f7ff fe77 	bl	8009418 <_Z23getFont_verdana_12_4bppv>
};
 800972a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800972c:	bd10      	pop	{r4, pc}
 800972e:	bf00      	nop
 8009730:	20002a18 	.word	0x20002a18

08009734 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8009734:	4770      	bx	lr

08009736 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8009736:	3804      	subs	r0, #4
 8009738:	4770      	bx	lr

0800973a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800973a:	4770      	bx	lr

0800973c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800973c:	4770      	bx	lr

0800973e <_ZN24Calibration_PadPresenterD0Ev>:
 800973e:	b510      	push	{r4, lr}
 8009740:	2110      	movs	r1, #16
 8009742:	4604      	mov	r4, r0
 8009744:	f022 fa39 	bl	802bbba <_ZdlPvj>
 8009748:	4620      	mov	r0, r4
 800974a:	bd10      	pop	{r4, pc}

0800974c <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800974c:	f1a0 0004 	sub.w	r0, r0, #4
 8009750:	e7f5      	b.n	800973e <_ZN24Calibration_PadPresenterD0Ev>

08009752 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8009752:	4770      	bx	lr

08009754 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8009754:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8009756:	2200      	movs	r2, #0
 8009758:	6082      	str	r2, [r0, #8]
    : view(v)
 800975a:	4a04      	ldr	r2, [pc, #16]	; (800976c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800975c:	60c1      	str	r1, [r0, #12]
 800975e:	f102 0408 	add.w	r4, r2, #8
 8009762:	3224      	adds	r2, #36	; 0x24
 8009764:	6004      	str	r4, [r0, #0]
 8009766:	6042      	str	r2, [r0, #4]
}
 8009768:	bd10      	pop	{r4, pc}
 800976a:	bf00      	nop
 800976c:	0802ff68 	.word	0x0802ff68

08009770 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8009770:	4770      	bx	lr

08009772 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8009772:	4770      	bx	lr

08009774 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8009774:	b510      	push	{r4, lr}
 8009776:	4b03      	ldr	r3, [pc, #12]	; (8009784 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8009778:	6003      	str	r3, [r0, #0]
 800977a:	4604      	mov	r4, r0
 800977c:	f7f9 fed8 	bl	8003530 <_ZN23Calibration_PadViewBaseD1Ev>
 8009780:	4620      	mov	r0, r4
 8009782:	bd10      	pop	{r4, pc}
 8009784:	0802ffa0 	.word	0x0802ffa0

08009788 <_ZN19Calibration_PadViewD0Ev>:
 8009788:	b510      	push	{r4, lr}
 800978a:	4604      	mov	r4, r0
 800978c:	f7ff fff2 	bl	8009774 <_ZN19Calibration_PadViewD1Ev>
 8009790:	4620      	mov	r0, r4
 8009792:	f641 5104 	movw	r1, #7428	; 0x1d04
 8009796:	f022 fa10 	bl	802bbba <_ZdlPvj>
 800979a:	4620      	mov	r0, r4
 800979c:	bd10      	pop	{r4, pc}
	...

080097a0 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 80097a0:	b510      	push	{r4, lr}
 80097a2:	4604      	mov	r4, r0
 80097a4:	f7fa fa98 	bl	8003cd8 <_ZN23Calibration_PadViewBaseC1Ev>
 80097a8:	4b01      	ldr	r3, [pc, #4]	; (80097b0 <_ZN19Calibration_PadViewC1Ev+0x10>)
 80097aa:	6023      	str	r3, [r4, #0]
}
 80097ac:	4620      	mov	r0, r4
 80097ae:	bd10      	pop	{r4, pc}
 80097b0:	0802ffa0 	.word	0x0802ffa0

080097b4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 80097b4:	b570      	push	{r4, r5, r6, lr}
 80097b6:	4604      	mov	r4, r0
 80097b8:	b0ca      	sub	sp, #296	; 0x128
 80097ba:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 80097be:	4631      	mov	r1, r6
 80097c0:	a80d      	add	r0, sp, #52	; 0x34
 80097c2:	f7f9 ffcd 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80097c6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80097ca:	9317      	str	r3, [sp, #92]	; 0x5c
 80097cc:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80097d0:	9318      	str	r3, [sp, #96]	; 0x60
 80097d2:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80097d6:	4a57      	ldr	r2, [pc, #348]	; (8009934 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 80097d8:	9319      	str	r3, [sp, #100]	; 0x64
 80097da:	f504 718c 	add.w	r1, r4, #280	; 0x118
 80097de:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80097e2:	920d      	str	r2, [sp, #52]	; 0x34
 80097e4:	a81b      	add	r0, sp, #108	; 0x6c
 80097e6:	931a      	str	r3, [sp, #104]	; 0x68
 80097e8:	f7f9 ffba 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 80097ec:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80097f0:	9325      	str	r3, [sp, #148]	; 0x94
 80097f2:	4b51      	ldr	r3, [pc, #324]	; (8009938 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 80097f4:	931b      	str	r3, [sp, #108]	; 0x6c
 80097f6:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 80097fa:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 80097fe:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8009802:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8009806:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800980a:	a827      	add	r0, sp, #156	; 0x9c
 800980c:	f7f9 ffa8 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 8009810:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8009814:	9331      	str	r3, [sp, #196]	; 0xc4
 8009816:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800981a:	4b48      	ldr	r3, [pc, #288]	; (800993c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800981c:	9327      	str	r3, [sp, #156]	; 0x9c
 800981e:	a832      	add	r0, sp, #200	; 0xc8
 8009820:	f7f9 ff9e 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8009824:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8009828:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800982c:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8009830:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8009834:	4b42      	ldr	r3, [pc, #264]	; (8009940 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 8009836:	9332      	str	r3, [sp, #200]	; 0xc8
 8009838:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800983c:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 8009840:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8009844:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8009848:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800984c:	a83e      	add	r0, sp, #248	; 0xf8
 800984e:	f7f9 ff87 	bl	8003760 <_ZN8touchgfx8DrawableC1ERKS0_>
 8009852:	4b3c      	ldr	r3, [pc, #240]	; (8009944 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 8009854:	933e      	str	r3, [sp, #248]	; 0xf8
 8009856:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800985a:	4d3b      	ldr	r5, [pc, #236]	; (8009948 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800985c:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8009860:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8009864:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 8009868:	a901      	add	r1, sp, #4
 800986a:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800986e:	4837      	ldr	r0, [pc, #220]	; (800994c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 8009870:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 8009874:	220c      	movs	r2, #12
 8009876:	f7f7 fc09 	bl	800108c <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800987a:	9b01      	ldr	r3, [sp, #4]
 800987c:	462a      	mov	r2, r5
 800987e:	210a      	movs	r1, #10
 8009880:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8009884:	f011 fa92 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8009888:	9b02      	ldr	r3, [sp, #8]
 800988a:	462a      	mov	r2, r5
 800988c:	210a      	movs	r1, #10
 800988e:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8009892:	f011 fa8b 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8009896:	9b03      	ldr	r3, [sp, #12]
 8009898:	462a      	mov	r2, r5
 800989a:	210a      	movs	r1, #10
 800989c:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 80098a0:	f011 fa84 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 80098a4:	9b04      	ldr	r3, [sp, #16]
 80098a6:	462a      	mov	r2, r5
 80098a8:	210a      	movs	r1, #10
 80098aa:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 80098ae:	f011 fa7d 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 80098b2:	9b05      	ldr	r3, [sp, #20]
 80098b4:	462a      	mov	r2, r5
 80098b6:	210a      	movs	r1, #10
 80098b8:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 80098bc:	f011 fa76 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 80098c0:	9b06      	ldr	r3, [sp, #24]
 80098c2:	462a      	mov	r2, r5
 80098c4:	210a      	movs	r1, #10
 80098c6:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 80098ca:	f011 fa6f 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 80098ce:	9b07      	ldr	r3, [sp, #28]
 80098d0:	462a      	mov	r2, r5
 80098d2:	210a      	movs	r1, #10
 80098d4:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 80098d8:	f011 fa68 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 80098dc:	9b08      	ldr	r3, [sp, #32]
 80098de:	462a      	mov	r2, r5
 80098e0:	210a      	movs	r1, #10
 80098e2:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 80098e6:	f011 fa61 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 80098ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80098ec:	462a      	mov	r2, r5
 80098ee:	210a      	movs	r1, #10
 80098f0:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 80098f4:	f011 fa5a 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 80098f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80098fa:	462a      	mov	r2, r5
 80098fc:	210a      	movs	r1, #10
 80098fe:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8009902:	f011 fa53 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 8009906:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009908:	462a      	mov	r2, r5
 800990a:	210a      	movs	r1, #10
 800990c:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8009910:	f011 fa4c 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 8009914:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009916:	462a      	mov	r2, r5
 8009918:	210a      	movs	r1, #10
 800991a:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800991e:	f011 fa45 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8009922:	4630      	mov	r0, r6
 8009924:	f00f f97c 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8009928:	a80d      	add	r0, sp, #52	; 0x34
 800992a:	f008 fa47 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
 800992e:	b04a      	add	sp, #296	; 0x128
 8009930:	bd70      	pop	{r4, r5, r6, pc}
 8009932:	bf00      	nop
 8009934:	08030620 	.word	0x08030620
 8009938:	080306e4 	.word	0x080306e4
 800993c:	0802e534 	.word	0x0802e534
 8009940:	08030ae0 	.word	0x08030ae0
 8009944:	08030cc4 	.word	0x08030cc4
 8009948:	0802e476 	.word	0x0802e476
 800994c:	081e0000 	.word	0x081e0000

08009950 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8009950:	f7f9 bdae 	b.w	80034b0 <_ZN23Calibration_PadViewBase11setupScreenEv>

08009954 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009954:	4770      	bx	lr

08009956 <_ZN19FrontendApplicationD0Ev>:
 8009956:	b510      	push	{r4, lr}
 8009958:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800995c:	4604      	mov	r4, r0
 800995e:	f022 f92c 	bl	802bbba <_ZdlPvj>
 8009962:	4620      	mov	r0, r4
 8009964:	bd10      	pop	{r4, pc}

08009966 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009966:	b510      	push	{r4, lr}
 8009968:	4604      	mov	r4, r0
    {
        model.tick();
 800996a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800996e:	f000 fb05 	bl	8009f7c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009972:	4620      	mov	r0, r4
    }
 8009974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8009978:	f00e b92e 	b.w	8017bd8 <_ZN8touchgfx11Application15handleTickEventEv>

0800997c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800997c:	b510      	push	{r4, lr}
 800997e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8009980:	f7fb fda0 	bl	80054c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009984:	4b01      	ldr	r3, [pc, #4]	; (800998c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8009986:	6023      	str	r3, [r4, #0]
{

}
 8009988:	4620      	mov	r0, r4
 800998a:	bd10      	pop	{r4, pc}
 800998c:	0802ffe0 	.word	0x0802ffe0

08009990 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8009990:	4770      	bx	lr

08009992 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8009992:	3804      	subs	r0, #4
 8009994:	4770      	bx	lr

08009996 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8009996:	4770      	bx	lr

08009998 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009998:	68c0      	ldr	r0, [r0, #12]
 800999a:	6803      	ldr	r3, [r0, #0]
 800999c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800999e:	4718      	bx	r3

080099a0 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80099a0:	f1a0 0004 	sub.w	r0, r0, #4
 80099a4:	f7ff bff8 	b.w	8009998 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080099a8 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80099a8:	b510      	push	{r4, lr}
 80099aa:	2110      	movs	r1, #16
 80099ac:	4604      	mov	r4, r0
 80099ae:	f022 f904 	bl	802bbba <_ZdlPvj>
 80099b2:	4620      	mov	r0, r4
 80099b4:	bd10      	pop	{r4, pc}

080099b6 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80099b6:	f1a0 0004 	sub.w	r0, r0, #4
 80099ba:	e7f5      	b.n	80099a8 <_ZN18Main_MenuPresenterD0Ev>

080099bc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80099bc:	b510      	push	{r4, lr}
 80099be:	2200      	movs	r2, #0
 80099c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80099c2:	4a04      	ldr	r2, [pc, #16]	; (80099d4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80099c4:	60c1      	str	r1, [r0, #12]
 80099c6:	f102 0408 	add.w	r4, r2, #8
 80099ca:	3224      	adds	r2, #36	; 0x24
 80099cc:	6004      	str	r4, [r0, #0]
 80099ce:	6042      	str	r2, [r0, #4]
}
 80099d0:	bd10      	pop	{r4, pc}
 80099d2:	bf00      	nop
 80099d4:	0803002c 	.word	0x0803002c

080099d8 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 80099d8:	4770      	bx	lr
	...

080099dc <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 80099dc:	b510      	push	{r4, lr}
 80099de:	4b03      	ldr	r3, [pc, #12]	; (80099ec <_ZN13Main_MenuViewD1Ev+0x10>)
 80099e0:	6003      	str	r3, [r0, #0]
 80099e2:	4604      	mov	r4, r0
 80099e4:	f7fc fee8 	bl	80067b8 <_ZN17Main_MenuViewBaseD1Ev>
 80099e8:	4620      	mov	r0, r4
 80099ea:	bd10      	pop	{r4, pc}
 80099ec:	08030064 	.word	0x08030064

080099f0 <_ZN13Main_MenuViewD0Ev>:
 80099f0:	b510      	push	{r4, lr}
 80099f2:	4604      	mov	r4, r0
 80099f4:	f7ff fff2 	bl	80099dc <_ZN13Main_MenuViewD1Ev>
 80099f8:	4620      	mov	r0, r4
 80099fa:	f241 117c 	movw	r1, #4476	; 0x117c
 80099fe:	f022 f8dc 	bl	802bbba <_ZdlPvj>
 8009a02:	4620      	mov	r0, r4
 8009a04:	bd10      	pop	{r4, pc}
	...

08009a08 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8009a08:	b510      	push	{r4, lr}
 8009a0a:	4604      	mov	r4, r0
 8009a0c:	f7fc ff1e 	bl	800684c <_ZN17Main_MenuViewBaseC1Ev>
 8009a10:	4b01      	ldr	r3, [pc, #4]	; (8009a18 <_ZN13Main_MenuViewC1Ev+0x10>)
 8009a12:	6023      	str	r3, [r4, #0]
}
 8009a14:	4620      	mov	r0, r4
 8009a16:	bd10      	pop	{r4, pc}
 8009a18:	08030064 	.word	0x08030064

08009a1c <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8009a1c:	f7fc bea8 	b.w	8006770 <_ZN17Main_MenuViewBase11setupScreenEv>

08009a20 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8009a20:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8009a22:	4a0a      	ldr	r2, [pc, #40]	; (8009a4c <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8009a24:	4605      	mov	r5, r0
 8009a26:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8009a28:	460b      	mov	r3, r1
 8009a2a:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8009a2e:	2104      	movs	r1, #4
 8009a30:	f011 f9bc 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8009a34:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009a38:	f00f f8f2 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009a3c:	b92c      	cbnz	r4, 8009a4a <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8009a3e:	f00e f807 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009a42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009a46:	f7fb be3d 	b.w	80056c4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009a4a:	bd38      	pop	{r3, r4, r5, pc}
 8009a4c:	0802e476 	.word	0x0802e476

08009a50 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8009a50:	4770      	bx	lr

08009a52 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8009a52:	3804      	subs	r0, #4
 8009a54:	4770      	bx	lr

08009a56 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8009a56:	4770      	bx	lr

08009a58 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009a58:	68c0      	ldr	r0, [r0, #12]
 8009a5a:	6803      	ldr	r3, [r0, #0]
 8009a5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a5e:	4718      	bx	r3

08009a60 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009a60:	f1a0 0004 	sub.w	r0, r0, #4
 8009a64:	f7ff bff8 	b.w	8009a58 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08009a68 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8009a68:	b510      	push	{r4, lr}
 8009a6a:	2110      	movs	r1, #16
 8009a6c:	4604      	mov	r4, r0
 8009a6e:	f022 f8a4 	bl	802bbba <_ZdlPvj>
 8009a72:	4620      	mov	r0, r4
 8009a74:	bd10      	pop	{r4, pc}

08009a76 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8009a76:	f1a0 0004 	sub.w	r0, r0, #4
 8009a7a:	e7f5      	b.n	8009a68 <_ZN20MeasurementPresenterD0Ev>

08009a7c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8009a7c:	b510      	push	{r4, lr}
 8009a7e:	2200      	movs	r2, #0
 8009a80:	6082      	str	r2, [r0, #8]
    : view(v)
 8009a82:	4a04      	ldr	r2, [pc, #16]	; (8009a94 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8009a84:	60c1      	str	r1, [r0, #12]
 8009a86:	f102 0408 	add.w	r4, r2, #8
 8009a8a:	3224      	adds	r2, #36	; 0x24
 8009a8c:	6004      	str	r4, [r0, #0]
 8009a8e:	6042      	str	r2, [r0, #4]
}
 8009a90:	bd10      	pop	{r4, pc}
 8009a92:	bf00      	nop
 8009a94:	08030094 	.word	0x08030094

08009a98 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8009a98:	4770      	bx	lr
	...

08009a9c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8009a9c:	b510      	push	{r4, lr}
 8009a9e:	4b03      	ldr	r3, [pc, #12]	; (8009aac <_ZN15MeasurementViewD1Ev+0x10>)
 8009aa0:	6003      	str	r3, [r0, #0]
 8009aa2:	4604      	mov	r4, r0
 8009aa4:	f7fd f942 	bl	8006d2c <_ZN19MeasurementViewBaseD1Ev>
 8009aa8:	4620      	mov	r0, r4
 8009aaa:	bd10      	pop	{r4, pc}
 8009aac:	080300cc 	.word	0x080300cc

08009ab0 <_ZN15MeasurementViewD0Ev>:
 8009ab0:	b510      	push	{r4, lr}
 8009ab2:	4604      	mov	r4, r0
 8009ab4:	f7ff fff2 	bl	8009a9c <_ZN15MeasurementViewD1Ev>
 8009ab8:	4620      	mov	r0, r4
 8009aba:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009abe:	f022 f87c 	bl	802bbba <_ZdlPvj>
 8009ac2:	4620      	mov	r0, r4
 8009ac4:	bd10      	pop	{r4, pc}
	...

08009ac8 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8009ac8:	b510      	push	{r4, lr}
 8009aca:	4604      	mov	r4, r0
 8009acc:	f7fd f968 	bl	8006da0 <_ZN19MeasurementViewBaseC1Ev>
 8009ad0:	4b01      	ldr	r3, [pc, #4]	; (8009ad8 <_ZN15MeasurementViewC1Ev+0x10>)
 8009ad2:	6023      	str	r3, [r4, #0]
}
 8009ad4:	4620      	mov	r0, r4
 8009ad6:	bd10      	pop	{r4, pc}
 8009ad8:	080300cc 	.word	0x080300cc

08009adc <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8009adc:	f7fd b902 	b.w	8006ce4 <_ZN19MeasurementViewBase11setupScreenEv>

08009ae0 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8009ae0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009ae2:	4a0a      	ldr	r2, [pc, #40]	; (8009b0c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8009ae4:	4605      	mov	r5, r0
 8009ae6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009ae8:	460b      	mov	r3, r1
 8009aea:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009aee:	2104      	movs	r1, #4
 8009af0:	f011 f95c 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009af4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009af8:	f00f f892 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009afc:	b92c      	cbnz	r4, 8009b0a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8009afe:	f00d ffa7 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009b02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009b06:	f7fb bddd 	b.w	80056c4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009b0a:	bd38      	pop	{r3, r4, r5, pc}
 8009b0c:	0802e476 	.word	0x0802e476

08009b10 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8009b10:	4770      	bx	lr

08009b12 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8009b12:	3804      	subs	r0, #4
 8009b14:	4770      	bx	lr

08009b16 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8009b16:	4770      	bx	lr

08009b18 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009b18:	68c0      	ldr	r0, [r0, #12]
 8009b1a:	6803      	ldr	r3, [r0, #0]
 8009b1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b1e:	4718      	bx	r3

08009b20 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009b20:	f1a0 0004 	sub.w	r0, r0, #4
 8009b24:	f7ff bff8 	b.w	8009b18 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08009b28 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8009b28:	b510      	push	{r4, lr}
 8009b2a:	2110      	movs	r1, #16
 8009b2c:	4604      	mov	r4, r0
 8009b2e:	f022 f844 	bl	802bbba <_ZdlPvj>
 8009b32:	4620      	mov	r0, r4
 8009b34:	bd10      	pop	{r4, pc}

08009b36 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8009b36:	f1a0 0004 	sub.w	r0, r0, #4
 8009b3a:	e7f5      	b.n	8009b28 <_ZN29Measurement_AccuratePresenterD0Ev>

08009b3c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8009b3c:	b510      	push	{r4, lr}
 8009b3e:	2200      	movs	r2, #0
 8009b40:	6082      	str	r2, [r0, #8]
    : view(v)
 8009b42:	4a04      	ldr	r2, [pc, #16]	; (8009b54 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8009b44:	60c1      	str	r1, [r0, #12]
 8009b46:	f102 0408 	add.w	r4, r2, #8
 8009b4a:	3224      	adds	r2, #36	; 0x24
 8009b4c:	6004      	str	r4, [r0, #0]
 8009b4e:	6042      	str	r2, [r0, #4]
}
 8009b50:	bd10      	pop	{r4, pc}
 8009b52:	bf00      	nop
 8009b54:	080300fc 	.word	0x080300fc

08009b58 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8009b58:	4770      	bx	lr
	...

08009b5c <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8009b5c:	b510      	push	{r4, lr}
 8009b5e:	4b03      	ldr	r3, [pc, #12]	; (8009b6c <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8009b60:	6003      	str	r3, [r0, #0]
 8009b62:	4604      	mov	r4, r0
 8009b64:	f7fd fb64 	bl	8007230 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8009b68:	4620      	mov	r0, r4
 8009b6a:	bd10      	pop	{r4, pc}
 8009b6c:	08030134 	.word	0x08030134

08009b70 <_ZN24Measurement_AccurateViewD0Ev>:
 8009b70:	b510      	push	{r4, lr}
 8009b72:	4604      	mov	r4, r0
 8009b74:	f7ff fff2 	bl	8009b5c <_ZN24Measurement_AccurateViewD1Ev>
 8009b78:	4620      	mov	r0, r4
 8009b7a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009b7e:	f022 f81c 	bl	802bbba <_ZdlPvj>
 8009b82:	4620      	mov	r0, r4
 8009b84:	bd10      	pop	{r4, pc}
	...

08009b88 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8009b88:	b510      	push	{r4, lr}
 8009b8a:	4604      	mov	r4, r0
 8009b8c:	f7fd fb8a 	bl	80072a4 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8009b90:	4b01      	ldr	r3, [pc, #4]	; (8009b98 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8009b92:	6023      	str	r3, [r4, #0]
}
 8009b94:	4620      	mov	r0, r4
 8009b96:	bd10      	pop	{r4, pc}
 8009b98:	08030134 	.word	0x08030134

08009b9c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8009b9c:	f7fd bb24 	b.w	80071e8 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08009ba0 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8009ba0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009ba2:	4a0a      	ldr	r2, [pc, #40]	; (8009bcc <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8009ba4:	4605      	mov	r5, r0
 8009ba6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009ba8:	460b      	mov	r3, r1
 8009baa:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009bae:	2104      	movs	r1, #4
 8009bb0:	f011 f8fc 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009bb4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009bb8:	f00f f832 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009bbc:	b92c      	cbnz	r4, 8009bca <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8009bbe:	f00d ff47 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009bc2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009bc6:	f7fb bd7d 	b.w	80056c4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009bca:	bd38      	pop	{r3, r4, r5, pc}
 8009bcc:	0802e476 	.word	0x0802e476

08009bd0 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8009bd0:	4770      	bx	lr

08009bd2 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8009bd2:	3804      	subs	r0, #4
 8009bd4:	4770      	bx	lr

08009bd6 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8009bd6:	4770      	bx	lr

08009bd8 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8009bd8:	4770      	bx	lr

08009bda <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8009bda:	b510      	push	{r4, lr}
 8009bdc:	2110      	movs	r1, #16
 8009bde:	4604      	mov	r4, r0
 8009be0:	f021 ffeb 	bl	802bbba <_ZdlPvj>
 8009be4:	4620      	mov	r0, r4
 8009be6:	bd10      	pop	{r4, pc}

08009be8 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8009be8:	f1a0 0004 	sub.w	r0, r0, #4
 8009bec:	e7f5      	b.n	8009bda <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08009bee <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8009bee:	4770      	bx	lr

08009bf0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8009bf0:	b510      	push	{r4, lr}
 8009bf2:	2200      	movs	r2, #0
 8009bf4:	6082      	str	r2, [r0, #8]
    : view(v)
 8009bf6:	4a04      	ldr	r2, [pc, #16]	; (8009c08 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8009bf8:	60c1      	str	r1, [r0, #12]
 8009bfa:	f102 0408 	add.w	r4, r2, #8
 8009bfe:	3224      	adds	r2, #36	; 0x24
 8009c00:	6004      	str	r4, [r0, #0]
 8009c02:	6042      	str	r2, [r0, #4]
}
 8009c04:	bd10      	pop	{r4, pc}
 8009c06:	bf00      	nop
 8009c08:	08030164 	.word	0x08030164

08009c0c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8009c0c:	4770      	bx	lr
	...

08009c10 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8009c10:	b510      	push	{r4, lr}
 8009c12:	4b03      	ldr	r3, [pc, #12]	; (8009c20 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8009c14:	6003      	str	r3, [r0, #0]
 8009c16:	4604      	mov	r4, r0
 8009c18:	f7fd fd88 	bl	800772c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8009c1c:	4620      	mov	r0, r4
 8009c1e:	bd10      	pop	{r4, pc}
 8009c20:	0803019c 	.word	0x0803019c

08009c24 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8009c24:	b510      	push	{r4, lr}
 8009c26:	4604      	mov	r4, r0
 8009c28:	f7ff fff2 	bl	8009c10 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8009c2c:	4620      	mov	r0, r4
 8009c2e:	f241 015c 	movw	r1, #4188	; 0x105c
 8009c32:	f021 ffc2 	bl	802bbba <_ZdlPvj>
 8009c36:	4620      	mov	r0, r4
 8009c38:	bd10      	pop	{r4, pc}
	...

08009c3c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8009c3c:	b510      	push	{r4, lr}
 8009c3e:	4604      	mov	r4, r0
 8009c40:	f7fd fd9c 	bl	800777c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8009c44:	4b01      	ldr	r3, [pc, #4]	; (8009c4c <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8009c46:	6023      	str	r3, [r4, #0]
}
 8009c48:	4620      	mov	r0, r4
 8009c4a:	bd10      	pop	{r4, pc}
 8009c4c:	0803019c 	.word	0x0803019c

08009c50 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8009c50:	f7fd bd48 	b.w	80076e4 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08009c54 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8009c54:	4770      	bx	lr

08009c56 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8009c56:	3804      	subs	r0, #4
 8009c58:	4770      	bx	lr

08009c5a <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8009c5a:	4770      	bx	lr

08009c5c <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8009c5c:	4770      	bx	lr

08009c5e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009c5e:	b510      	push	{r4, lr}
 8009c60:	2110      	movs	r1, #16
 8009c62:	4604      	mov	r4, r0
 8009c64:	f021 ffa9 	bl	802bbba <_ZdlPvj>
 8009c68:	4620      	mov	r0, r4
 8009c6a:	bd10      	pop	{r4, pc}

08009c6c <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009c6c:	f1a0 0004 	sub.w	r0, r0, #4
 8009c70:	e7f5      	b.n	8009c5e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08009c72 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8009c72:	4770      	bx	lr

08009c74 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8009c74:	b510      	push	{r4, lr}
 8009c76:	2200      	movs	r2, #0
 8009c78:	6082      	str	r2, [r0, #8]
    : view(v)
 8009c7a:	4a04      	ldr	r2, [pc, #16]	; (8009c8c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8009c7c:	60c1      	str	r1, [r0, #12]
 8009c7e:	f102 0408 	add.w	r4, r2, #8
 8009c82:	3224      	adds	r2, #36	; 0x24
 8009c84:	6004      	str	r4, [r0, #0]
 8009c86:	6042      	str	r2, [r0, #4]
}
 8009c88:	bd10      	pop	{r4, pc}
 8009c8a:	bf00      	nop
 8009c8c:	080301c8 	.word	0x080301c8

08009c90 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8009c90:	4770      	bx	lr
	...

08009c94 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8009c94:	b510      	push	{r4, lr}
 8009c96:	4b03      	ldr	r3, [pc, #12]	; (8009ca4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8009c98:	6003      	str	r3, [r0, #0]
 8009c9a:	4604      	mov	r4, r0
 8009c9c:	f7fd fef6 	bl	8007a8c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8009ca0:	4620      	mov	r0, r4
 8009ca2:	bd10      	pop	{r4, pc}
 8009ca4:	08030200 	.word	0x08030200

08009ca8 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8009ca8:	b510      	push	{r4, lr}
 8009caa:	4604      	mov	r4, r0
 8009cac:	f7ff fff2 	bl	8009c94 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8009cb0:	4620      	mov	r0, r4
 8009cb2:	f241 015c 	movw	r1, #4188	; 0x105c
 8009cb6:	f021 ff80 	bl	802bbba <_ZdlPvj>
 8009cba:	4620      	mov	r0, r4
 8009cbc:	bd10      	pop	{r4, pc}
	...

08009cc0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8009cc0:	b510      	push	{r4, lr}
 8009cc2:	4604      	mov	r4, r0
 8009cc4:	f7fd ff0a 	bl	8007adc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8009cc8:	4b01      	ldr	r3, [pc, #4]	; (8009cd0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8009cca:	6023      	str	r3, [r4, #0]
}
 8009ccc:	4620      	mov	r0, r4
 8009cce:	bd10      	pop	{r4, pc}
 8009cd0:	08030200 	.word	0x08030200

08009cd4 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009cd4:	f7fd beb6 	b.w	8007a44 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08009cd8 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8009cd8:	4770      	bx	lr

08009cda <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8009cda:	3804      	subs	r0, #4
 8009cdc:	4770      	bx	lr

08009cde <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8009cde:	4770      	bx	lr

08009ce0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009ce0:	68c0      	ldr	r0, [r0, #12]
 8009ce2:	6803      	ldr	r3, [r0, #0]
 8009ce4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ce6:	4718      	bx	r3

08009ce8 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009ce8:	f1a0 0004 	sub.w	r0, r0, #4
 8009cec:	f7ff bff8 	b.w	8009ce0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009cf0 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009cf0:	b510      	push	{r4, lr}
 8009cf2:	2110      	movs	r1, #16
 8009cf4:	4604      	mov	r4, r0
 8009cf6:	f021 ff60 	bl	802bbba <_ZdlPvj>
 8009cfa:	4620      	mov	r0, r4
 8009cfc:	bd10      	pop	{r4, pc}

08009cfe <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8009cfe:	f1a0 0004 	sub.w	r0, r0, #4
 8009d02:	e7f5      	b.n	8009cf0 <_ZN27Measurement_SinglePresenterD0Ev>

08009d04 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009d04:	b510      	push	{r4, lr}
 8009d06:	2200      	movs	r2, #0
 8009d08:	6082      	str	r2, [r0, #8]
    : view(v)
 8009d0a:	4a04      	ldr	r2, [pc, #16]	; (8009d1c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009d0c:	60c1      	str	r1, [r0, #12]
 8009d0e:	f102 0408 	add.w	r4, r2, #8
 8009d12:	3224      	adds	r2, #36	; 0x24
 8009d14:	6004      	str	r4, [r0, #0]
 8009d16:	6042      	str	r2, [r0, #4]
}
 8009d18:	bd10      	pop	{r4, pc}
 8009d1a:	bf00      	nop
 8009d1c:	0803022c 	.word	0x0803022c

08009d20 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009d20:	4770      	bx	lr
	...

08009d24 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009d24:	b510      	push	{r4, lr}
 8009d26:	4b03      	ldr	r3, [pc, #12]	; (8009d34 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8009d28:	6003      	str	r3, [r0, #0]
 8009d2a:	4604      	mov	r4, r0
 8009d2c:	f7fe f85e 	bl	8007dec <_ZN26Measurement_SingleViewBaseD1Ev>
 8009d30:	4620      	mov	r0, r4
 8009d32:	bd10      	pop	{r4, pc}
 8009d34:	08030264 	.word	0x08030264

08009d38 <_ZN22Measurement_SingleViewD0Ev>:
 8009d38:	b510      	push	{r4, lr}
 8009d3a:	4604      	mov	r4, r0
 8009d3c:	f7ff fff2 	bl	8009d24 <_ZN22Measurement_SingleViewD1Ev>
 8009d40:	4620      	mov	r0, r4
 8009d42:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009d46:	f021 ff38 	bl	802bbba <_ZdlPvj>
 8009d4a:	4620      	mov	r0, r4
 8009d4c:	bd10      	pop	{r4, pc}
	...

08009d50 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009d50:	b510      	push	{r4, lr}
 8009d52:	4604      	mov	r4, r0
 8009d54:	f7fe f884 	bl	8007e60 <_ZN26Measurement_SingleViewBaseC1Ev>
 8009d58:	4b01      	ldr	r3, [pc, #4]	; (8009d60 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8009d5a:	6023      	str	r3, [r4, #0]
}
 8009d5c:	4620      	mov	r0, r4
 8009d5e:	bd10      	pop	{r4, pc}
 8009d60:	08030264 	.word	0x08030264

08009d64 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009d64:	f7fe b81e 	b.w	8007da4 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08009d68 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8009d68:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009d6a:	4a0a      	ldr	r2, [pc, #40]	; (8009d94 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8009d6c:	4605      	mov	r5, r0
 8009d6e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009d70:	460b      	mov	r3, r1
 8009d72:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009d76:	2104      	movs	r1, #4
 8009d78:	f011 f818 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009d7c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009d80:	f00e ff4e 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009d84:	b92c      	cbnz	r4, 8009d92 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8009d86:	f00d fe63 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009d8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009d8e:	f7fb bc99 	b.w	80056c4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009d92:	bd38      	pop	{r3, r4, r5, pc}
 8009d94:	0802e476 	.word	0x0802e476

08009d98 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8009d98:	4770      	bx	lr

08009d9a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8009d9a:	3804      	subs	r0, #4
 8009d9c:	4770      	bx	lr

08009d9e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8009d9e:	4770      	bx	lr

08009da0 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8009da0:	4770      	bx	lr

08009da2 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8009da2:	b510      	push	{r4, lr}
 8009da4:	2110      	movs	r1, #16
 8009da6:	4604      	mov	r4, r0
 8009da8:	f021 ff07 	bl	802bbba <_ZdlPvj>
 8009dac:	4620      	mov	r0, r4
 8009dae:	bd10      	pop	{r4, pc}

08009db0 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8009db0:	f1a0 0004 	sub.w	r0, r0, #4
 8009db4:	e7f5      	b.n	8009da2 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08009db6 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8009db6:	4770      	bx	lr

08009db8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8009db8:	b510      	push	{r4, lr}
 8009dba:	2200      	movs	r2, #0
 8009dbc:	6082      	str	r2, [r0, #8]
    : view(v)
 8009dbe:	4a04      	ldr	r2, [pc, #16]	; (8009dd0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8009dc0:	60c1      	str	r1, [r0, #12]
 8009dc2:	f102 0408 	add.w	r4, r2, #8
 8009dc6:	3224      	adds	r2, #36	; 0x24
 8009dc8:	6004      	str	r4, [r0, #0]
 8009dca:	6042      	str	r2, [r0, #4]
}
 8009dcc:	bd10      	pop	{r4, pc}
 8009dce:	bf00      	nop
 8009dd0:	08030294 	.word	0x08030294

08009dd4 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009dd4:	4770      	bx	lr
	...

08009dd8 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8009dd8:	b510      	push	{r4, lr}
 8009dda:	4b03      	ldr	r3, [pc, #12]	; (8009de8 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009ddc:	6003      	str	r3, [r0, #0]
 8009dde:	4604      	mov	r4, r0
 8009de0:	f7fe fa88 	bl	80082f4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009de4:	4620      	mov	r0, r4
 8009de6:	bd10      	pop	{r4, pc}
 8009de8:	080302d4 	.word	0x080302d4

08009dec <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009dec:	b510      	push	{r4, lr}
 8009dee:	4604      	mov	r4, r0
 8009df0:	f7ff fff2 	bl	8009dd8 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009df4:	4620      	mov	r0, r4
 8009df6:	f241 41b8 	movw	r1, #5304	; 0x14b8
 8009dfa:	f021 fede 	bl	802bbba <_ZdlPvj>
 8009dfe:	4620      	mov	r0, r4
 8009e00:	bd10      	pop	{r4, pc}
	...

08009e04 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009e04:	b510      	push	{r4, lr}
 8009e06:	4604      	mov	r4, r0
 8009e08:	f7fe faae 	bl	8008368 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009e0c:	4b01      	ldr	r3, [pc, #4]	; (8009e14 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009e0e:	6023      	str	r3, [r4, #0]
}
 8009e10:	4620      	mov	r0, r4
 8009e12:	bd10      	pop	{r4, pc}
 8009e14:	080302d4 	.word	0x080302d4

08009e18 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8009e18:	f7fe ba47 	b.w	80082aa <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009e1c <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009e1c:	b530      	push	{r4, r5, lr}
 8009e1e:	ed2d 8b02 	vpush	{d8}
 8009e22:	b08d      	sub	sp, #52	; 0x34
 8009e24:	4604      	mov	r4, r0
#ifndef SIMULATOR

	uint32_t* Samples = MEAS_start_measure();
 8009e26:	f7f8 f953 	bl	80020d0 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8009e2a:	2101      	movs	r1, #1
 8009e2c:	4602      	mov	r2, r0
	uint32_t* Samples = MEAS_start_measure();
 8009e2e:	4605      	mov	r5, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8009e30:	a803      	add	r0, sp, #12
 8009e32:	f7f7 f937 	bl	80010a4 <calculate_freq_and_signalstrength>

	DISTANCE_ANGLE distance_angle = calculate_distance_and_angle(Samples);
 8009e36:	4629      	mov	r1, r5
 8009e38:	a806      	add	r0, sp, #24
 8009e3a:	f7f7 fa69 	bl	8001310 <calculate_distance_and_angle>
 8009e3e:	ed9d 8a0b 	vldr	s16, [sp, #44]	; 0x2c

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(distance_angle.angle);
 8009e42:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8009e46:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8009e4a:	ee17 1a90 	vmov	r1, s15
 8009e4e:	9001      	str	r0, [sp, #4]
 8009e50:	f00a fe9c 	bl	8014b8c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009e54:	9801      	ldr	r0, [sp, #4]
 8009e56:	f00e fee3 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8009e5a:	ab02      	add	r3, sp, #8
 8009e5c:	4a22      	ldr	r2, [pc, #136]	; (8009ee8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xcc>)
 8009e5e:	ed8d 8a02 	vstr	s16, [sp, #8]
 8009e62:	210a      	movs	r1, #10
 8009e64:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8009e68:	f011 f98c 	bl	801b184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", distance_angle.angle);
	SMD1_Current.invalidate();
 8009e6c:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8009e70:	f00e fed6 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8009e74:	9b03      	ldr	r3, [sp, #12]
 8009e76:	4a1c      	ldr	r2, [pc, #112]	; (8009ee8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xcc>)
 8009e78:	9302      	str	r3, [sp, #8]
 8009e7a:	210a      	movs	r1, #10
 8009e7c:	ab02      	add	r3, sp, #8
 8009e7e:	f204 606c 	addw	r0, r4, #1644	; 0x66c
 8009e82:	f011 f97f 	bl	801b184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8009e86:	f504 7059 	add.w	r0, r4, #868	; 0x364
 8009e8a:	f00e fec9 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", distance_angle.distance);
 8009e8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009e90:	4a15      	ldr	r2, [pc, #84]	; (8009ee8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xcc>)
 8009e92:	9302      	str	r3, [sp, #8]
 8009e94:	210a      	movs	r1, #10
 8009e96:	ab02      	add	r3, sp, #8
 8009e98:	f504 60d0 	add.w	r0, r4, #1664	; 0x680
 8009e9c:	f011 f972 	bl	801b184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8009ea0:	f504 706c 	add.w	r0, r4, #944	; 0x3b0
 8009ea4:	f00e febc 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>


	//temp
	Unicode::snprintfFloat(Pad_LBuffer, PAD_L_SIZE, "%.2f", distance_angle.distance_l);
 8009ea8:	9b08      	ldr	r3, [sp, #32]
 8009eaa:	4a0f      	ldr	r2, [pc, #60]	; (8009ee8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xcc>)
 8009eac:	9302      	str	r3, [sp, #8]
 8009eae:	210a      	movs	r1, #10
 8009eb0:	ab02      	add	r3, sp, #8
 8009eb2:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 8009eb6:	f011 f965 	bl	801b184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Pad_L.invalidate();
 8009eba:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8009ebe:	f00e feaf 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintfFloat(Pad_RBuffer, PAD_R_SIZE, "%.2f", distance_angle.distance_r);
 8009ec2:	9b06      	ldr	r3, [sp, #24]
 8009ec4:	9302      	str	r3, [sp, #8]
 8009ec6:	4a08      	ldr	r2, [pc, #32]	; (8009ee8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xcc>)
 8009ec8:	ab02      	add	r3, sp, #8
 8009eca:	210a      	movs	r1, #10
 8009ecc:	f204 6044 	addw	r0, r4, #1604	; 0x644
 8009ed0:	f011 f958 	bl	801b184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Pad_R.invalidate();
 8009ed4:	f504 7033 	add.w	r0, r4, #716	; 0x2cc

#endif
}
 8009ed8:	b00d      	add	sp, #52	; 0x34
 8009eda:	ecbd 8b02 	vpop	{d8}
 8009ede:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	Pad_R.invalidate();
 8009ee2:	f00e be9d 	b.w	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009ee6:	bf00      	nop
 8009ee8:	080302c4 	.word	0x080302c4

08009eec <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8009eec:	4770      	bx	lr

08009eee <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8009eee:	3804      	subs	r0, #4
 8009ef0:	4770      	bx	lr

08009ef2 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8009ef2:	4770      	bx	lr

08009ef4 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8009ef4:	4770      	bx	lr

08009ef6 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8009ef6:	b510      	push	{r4, lr}
 8009ef8:	2110      	movs	r1, #16
 8009efa:	4604      	mov	r4, r0
 8009efc:	f021 fe5d 	bl	802bbba <_ZdlPvj>
 8009f00:	4620      	mov	r0, r4
 8009f02:	bd10      	pop	{r4, pc}

08009f04 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009f04:	f1a0 0004 	sub.w	r0, r0, #4
 8009f08:	e7f5      	b.n	8009ef6 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08009f0a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8009f0a:	4770      	bx	lr

08009f0c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009f0c:	b510      	push	{r4, lr}
 8009f0e:	2200      	movs	r2, #0
 8009f10:	6082      	str	r2, [r0, #8]
    : view(v)
 8009f12:	4a04      	ldr	r2, [pc, #16]	; (8009f24 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009f14:	60c1      	str	r1, [r0, #12]
 8009f16:	f102 0408 	add.w	r4, r2, #8
 8009f1a:	3224      	adds	r2, #36	; 0x24
 8009f1c:	6004      	str	r4, [r0, #0]
 8009f1e:	6042      	str	r2, [r0, #4]
}
 8009f20:	bd10      	pop	{r4, pc}
 8009f22:	bf00      	nop
 8009f24:	08030304 	.word	0x08030304

08009f28 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009f28:	4770      	bx	lr
	...

08009f2c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009f2c:	b510      	push	{r4, lr}
 8009f2e:	4b03      	ldr	r3, [pc, #12]	; (8009f3c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009f30:	6003      	str	r3, [r0, #0]
 8009f32:	4604      	mov	r4, r0
 8009f34:	f7fe fe18 	bl	8008b68 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009f38:	4620      	mov	r0, r4
 8009f3a:	bd10      	pop	{r4, pc}
 8009f3c:	0803033c 	.word	0x0803033c

08009f40 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009f40:	b510      	push	{r4, lr}
 8009f42:	4604      	mov	r4, r0
 8009f44:	f7ff fff2 	bl	8009f2c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009f48:	4620      	mov	r0, r4
 8009f4a:	f241 015c 	movw	r1, #4188	; 0x105c
 8009f4e:	f021 fe34 	bl	802bbba <_ZdlPvj>
 8009f52:	4620      	mov	r0, r4
 8009f54:	bd10      	pop	{r4, pc}
	...

08009f58 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009f58:	b510      	push	{r4, lr}
 8009f5a:	4604      	mov	r4, r0
 8009f5c:	f7fe fe2c 	bl	8008bb8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009f60:	4b01      	ldr	r3, [pc, #4]	; (8009f68 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009f62:	6023      	str	r3, [r4, #0]
}
 8009f64:	4620      	mov	r0, r4
 8009f66:	bd10      	pop	{r4, pc}
 8009f68:	0803033c 	.word	0x0803033c

08009f6c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8009f6c:	f7fe bdd8 	b.w	8008b20 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009f70 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009f70:	2100      	movs	r1, #0
 8009f72:	223c      	movs	r2, #60	; 0x3c
 8009f74:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009f78:	4770      	bx	lr
	...

08009f7c <_ZN5Model4tickEv>:

void Model::tick()
{
 8009f7c:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009f7e:	4d0a      	ldr	r5, [pc, #40]	; (8009fa8 <_ZN5Model4tickEv+0x2c>)
{
 8009f80:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009f82:	6828      	ldr	r0, [r5, #0]
 8009f84:	f004 fe80 	bl	800ec88 <osMessageQueueGetCount>
 8009f88:	b168      	cbz	r0, 8009fa6 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8009f8a:	2300      	movs	r3, #0
 8009f8c:	6828      	ldr	r0, [r5, #0]
 8009f8e:	461a      	mov	r2, r3
 8009f90:	1d21      	adds	r1, r4, #4
 8009f92:	f004 fe45 	bl	800ec20 <osMessageQueueGet>
 8009f96:	b930      	cbnz	r0, 8009fa6 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8009f98:	6820      	ldr	r0, [r4, #0]
 8009f9a:	6861      	ldr	r1, [r4, #4]
 8009f9c:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8009f9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8009fa2:	689b      	ldr	r3, [r3, #8]
 8009fa4:	4718      	bx	r3
}
 8009fa6:	bd70      	pop	{r4, r5, r6, pc}
 8009fa8:	200001e4 	.word	0x200001e4

08009fac <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8009fac:	4770      	bx	lr

08009fae <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8009fae:	3804      	subs	r0, #4
 8009fb0:	4770      	bx	lr

08009fb2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8009fb2:	4770      	bx	lr

08009fb4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009fb4:	68c0      	ldr	r0, [r0, #12]
 8009fb6:	6803      	ldr	r3, [r0, #0]
 8009fb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009fba:	4718      	bx	r3

08009fbc <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009fbc:	f1a0 0004 	sub.w	r0, r0, #4
 8009fc0:	f7ff bff8 	b.w	8009fb4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08009fc4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8009fc4:	b510      	push	{r4, lr}
 8009fc6:	2110      	movs	r1, #16
 8009fc8:	4604      	mov	r4, r0
 8009fca:	f021 fdf6 	bl	802bbba <_ZdlPvj>
 8009fce:	4620      	mov	r0, r4
 8009fd0:	bd10      	pop	{r4, pc}

08009fd2 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8009fd2:	f1a0 0004 	sub.w	r0, r0, #4
 8009fd6:	e7f5      	b.n	8009fc4 <_ZN21Project_InfoPresenterD0Ev>

08009fd8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009fd8:	b510      	push	{r4, lr}
 8009fda:	2200      	movs	r2, #0
 8009fdc:	6082      	str	r2, [r0, #8]
    : view(v)
 8009fde:	4a04      	ldr	r2, [pc, #16]	; (8009ff0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009fe0:	60c1      	str	r1, [r0, #12]
 8009fe2:	f102 0408 	add.w	r4, r2, #8
 8009fe6:	3224      	adds	r2, #36	; 0x24
 8009fe8:	6004      	str	r4, [r0, #0]
 8009fea:	6042      	str	r2, [r0, #4]
}
 8009fec:	bd10      	pop	{r4, pc}
 8009fee:	bf00      	nop
 8009ff0:	08030368 	.word	0x08030368

08009ff4 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009ff4:	4770      	bx	lr
	...

08009ff8 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009ff8:	b510      	push	{r4, lr}
 8009ffa:	4b03      	ldr	r3, [pc, #12]	; (800a008 <_ZN16Project_InfoViewD1Ev+0x10>)
 8009ffc:	6003      	str	r3, [r0, #0]
 8009ffe:	4604      	mov	r4, r0
 800a000:	f7fe ff60 	bl	8008ec4 <_ZN20Project_InfoViewBaseD1Ev>
 800a004:	4620      	mov	r0, r4
 800a006:	bd10      	pop	{r4, pc}
 800a008:	080303a0 	.word	0x080303a0

0800a00c <_ZN16Project_InfoViewD0Ev>:
 800a00c:	b510      	push	{r4, lr}
 800a00e:	4604      	mov	r4, r0
 800a010:	f7ff fff2 	bl	8009ff8 <_ZN16Project_InfoViewD1Ev>
 800a014:	4620      	mov	r0, r4
 800a016:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800a01a:	f021 fdce 	bl	802bbba <_ZdlPvj>
 800a01e:	4620      	mov	r0, r4
 800a020:	bd10      	pop	{r4, pc}
	...

0800a024 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800a024:	b510      	push	{r4, lr}
 800a026:	4604      	mov	r4, r0
 800a028:	f7fe ff74 	bl	8008f14 <_ZN20Project_InfoViewBaseC1Ev>
 800a02c:	4b01      	ldr	r3, [pc, #4]	; (800a034 <_ZN16Project_InfoViewC1Ev+0x10>)
 800a02e:	6023      	str	r3, [r4, #0]
}
 800a030:	4620      	mov	r0, r4
 800a032:	bd10      	pop	{r4, pc}
 800a034:	080303a0 	.word	0x080303a0

0800a038 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800a038:	f7fe bf20 	b.w	8008e7c <_ZN20Project_InfoViewBase11setupScreenEv>

0800a03c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800a03c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800a03e:	4a0a      	ldr	r2, [pc, #40]	; (800a068 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800a040:	4605      	mov	r5, r0
 800a042:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800a044:	460b      	mov	r3, r1
 800a046:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800a04a:	2104      	movs	r1, #4
 800a04c:	f010 feae 	bl	801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800a050:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a054:	f00e fde4 	bl	8018c20 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800a058:	b92c      	cbnz	r4, 800a066 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800a05a:	f00d fcf9 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a05e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a062:	f7fb bb2f 	b.w	80056c4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800a066:	bd38      	pop	{r3, r4, r5, pc}
 800a068:	0802e476 	.word	0x0802e476

0800a06c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800a06c:	4770      	bx	lr

0800a06e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800a06e:	3804      	subs	r0, #4
 800a070:	4770      	bx	lr

0800a072 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800a072:	4770      	bx	lr

0800a074 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800a074:	4770      	bx	lr

0800a076 <_ZN21Shutting_OffPresenterD0Ev>:
 800a076:	b510      	push	{r4, lr}
 800a078:	2110      	movs	r1, #16
 800a07a:	4604      	mov	r4, r0
 800a07c:	f021 fd9d 	bl	802bbba <_ZdlPvj>
 800a080:	4620      	mov	r0, r4
 800a082:	bd10      	pop	{r4, pc}

0800a084 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800a084:	f1a0 0004 	sub.w	r0, r0, #4
 800a088:	e7f5      	b.n	800a076 <_ZN21Shutting_OffPresenterD0Ev>

0800a08a <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800a08a:	4770      	bx	lr

0800a08c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800a08c:	b510      	push	{r4, lr}
 800a08e:	2200      	movs	r2, #0
 800a090:	6082      	str	r2, [r0, #8]
    : view(v)
 800a092:	4a04      	ldr	r2, [pc, #16]	; (800a0a4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800a094:	60c1      	str	r1, [r0, #12]
 800a096:	f102 0408 	add.w	r4, r2, #8
 800a09a:	3224      	adds	r2, #36	; 0x24
 800a09c:	6004      	str	r4, [r0, #0]
 800a09e:	6042      	str	r2, [r0, #4]
}
 800a0a0:	bd10      	pop	{r4, pc}
 800a0a2:	bf00      	nop
 800a0a4:	080303d0 	.word	0x080303d0

0800a0a8 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800a0a8:	4770      	bx	lr
	...

0800a0ac <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800a0ac:	b510      	push	{r4, lr}
 800a0ae:	4b03      	ldr	r3, [pc, #12]	; (800a0bc <_ZN16Shutting_OffViewD1Ev+0x10>)
 800a0b0:	6003      	str	r3, [r0, #0]
 800a0b2:	4604      	mov	r4, r0
 800a0b4:	f7ff f8fc 	bl	80092b0 <_ZN20Shutting_OffViewBaseD1Ev>
 800a0b8:	4620      	mov	r0, r4
 800a0ba:	bd10      	pop	{r4, pc}
 800a0bc:	08030408 	.word	0x08030408

0800a0c0 <_ZN16Shutting_OffViewD0Ev>:
 800a0c0:	b510      	push	{r4, lr}
 800a0c2:	4604      	mov	r4, r0
 800a0c4:	f7ff fff2 	bl	800a0ac <_ZN16Shutting_OffViewD1Ev>
 800a0c8:	4620      	mov	r0, r4
 800a0ca:	2198      	movs	r1, #152	; 0x98
 800a0cc:	f021 fd75 	bl	802bbba <_ZdlPvj>
 800a0d0:	4620      	mov	r0, r4
 800a0d2:	bd10      	pop	{r4, pc}

0800a0d4 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800a0d4:	b510      	push	{r4, lr}
 800a0d6:	4604      	mov	r4, r0
 800a0d8:	f7ff f8f4 	bl	80092c4 <_ZN20Shutting_OffViewBaseC1Ev>
 800a0dc:	4b01      	ldr	r3, [pc, #4]	; (800a0e4 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800a0de:	6023      	str	r3, [r4, #0]
}
 800a0e0:	4620      	mov	r0, r4
 800a0e2:	bd10      	pop	{r4, pc}
 800a0e4:	08030408 	.word	0x08030408

0800a0e8 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800a0e8:	f7ff b8e3 	b.w	80092b2 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800a0ec <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800a0ec:	20f0      	movs	r0, #240	; 0xf0
 800a0ee:	4770      	bx	lr

0800a0f0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800a0f0:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800a0f4:	4770      	bx	lr
 800a0f6:	bf00      	nop

0800a0f8 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800a0f8:	2029      	movs	r0, #41	; 0x29
 800a0fa:	f7f7 be61 	b.w	8001dc0 <LCD_IO_WriteReg>
 800a0fe:	bf00      	nop

0800a100 <ili9341_DisplayOff>:
 800a100:	2028      	movs	r0, #40	; 0x28
 800a102:	f7f7 be5d 	b.w	8001dc0 <LCD_IO_WriteReg>
 800a106:	bf00      	nop

0800a108 <ili9341_Init>:
{
 800a108:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800a10a:	f7f7 fe1f 	bl	8001d4c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800a10e:	20ca      	movs	r0, #202	; 0xca
 800a110:	f7f7 fe56 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a114:	20c3      	movs	r0, #195	; 0xc3
 800a116:	f7f7 fe29 	bl	8001d6c <LCD_IO_WriteData>
 800a11a:	2008      	movs	r0, #8
 800a11c:	f7f7 fe26 	bl	8001d6c <LCD_IO_WriteData>
 800a120:	2050      	movs	r0, #80	; 0x50
 800a122:	f7f7 fe23 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a126:	20cf      	movs	r0, #207	; 0xcf
 800a128:	f7f7 fe4a 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a12c:	2000      	movs	r0, #0
 800a12e:	f7f7 fe1d 	bl	8001d6c <LCD_IO_WriteData>
 800a132:	20c1      	movs	r0, #193	; 0xc1
 800a134:	f7f7 fe1a 	bl	8001d6c <LCD_IO_WriteData>
 800a138:	2030      	movs	r0, #48	; 0x30
 800a13a:	f7f7 fe17 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a13e:	20ed      	movs	r0, #237	; 0xed
 800a140:	f7f7 fe3e 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a144:	2064      	movs	r0, #100	; 0x64
 800a146:	f7f7 fe11 	bl	8001d6c <LCD_IO_WriteData>
 800a14a:	2003      	movs	r0, #3
 800a14c:	f7f7 fe0e 	bl	8001d6c <LCD_IO_WriteData>
 800a150:	2012      	movs	r0, #18
 800a152:	f7f7 fe0b 	bl	8001d6c <LCD_IO_WriteData>
 800a156:	2081      	movs	r0, #129	; 0x81
 800a158:	f7f7 fe08 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a15c:	20e8      	movs	r0, #232	; 0xe8
 800a15e:	f7f7 fe2f 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a162:	2085      	movs	r0, #133	; 0x85
 800a164:	f7f7 fe02 	bl	8001d6c <LCD_IO_WriteData>
 800a168:	2000      	movs	r0, #0
 800a16a:	f7f7 fdff 	bl	8001d6c <LCD_IO_WriteData>
 800a16e:	2078      	movs	r0, #120	; 0x78
 800a170:	f7f7 fdfc 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a174:	20cb      	movs	r0, #203	; 0xcb
 800a176:	f7f7 fe23 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a17a:	2039      	movs	r0, #57	; 0x39
 800a17c:	f7f7 fdf6 	bl	8001d6c <LCD_IO_WriteData>
 800a180:	202c      	movs	r0, #44	; 0x2c
 800a182:	f7f7 fdf3 	bl	8001d6c <LCD_IO_WriteData>
 800a186:	2000      	movs	r0, #0
 800a188:	f7f7 fdf0 	bl	8001d6c <LCD_IO_WriteData>
 800a18c:	2034      	movs	r0, #52	; 0x34
 800a18e:	f7f7 fded 	bl	8001d6c <LCD_IO_WriteData>
 800a192:	2002      	movs	r0, #2
 800a194:	f7f7 fdea 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a198:	20f7      	movs	r0, #247	; 0xf7
 800a19a:	f7f7 fe11 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a19e:	2020      	movs	r0, #32
 800a1a0:	f7f7 fde4 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a1a4:	20ea      	movs	r0, #234	; 0xea
 800a1a6:	f7f7 fe0b 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a1aa:	2000      	movs	r0, #0
 800a1ac:	f7f7 fdde 	bl	8001d6c <LCD_IO_WriteData>
 800a1b0:	2000      	movs	r0, #0
 800a1b2:	f7f7 fddb 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a1b6:	20b1      	movs	r0, #177	; 0xb1
 800a1b8:	f7f7 fe02 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a1bc:	2000      	movs	r0, #0
 800a1be:	f7f7 fdd5 	bl	8001d6c <LCD_IO_WriteData>
 800a1c2:	201b      	movs	r0, #27
 800a1c4:	f7f7 fdd2 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a1c8:	20b6      	movs	r0, #182	; 0xb6
 800a1ca:	f7f7 fdf9 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a1ce:	200a      	movs	r0, #10
 800a1d0:	f7f7 fdcc 	bl	8001d6c <LCD_IO_WriteData>
 800a1d4:	20a2      	movs	r0, #162	; 0xa2
 800a1d6:	f7f7 fdc9 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a1da:	20c0      	movs	r0, #192	; 0xc0
 800a1dc:	f7f7 fdf0 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a1e0:	2010      	movs	r0, #16
 800a1e2:	f7f7 fdc3 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a1e6:	20c1      	movs	r0, #193	; 0xc1
 800a1e8:	f7f7 fdea 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a1ec:	2010      	movs	r0, #16
 800a1ee:	f7f7 fdbd 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a1f2:	20c5      	movs	r0, #197	; 0xc5
 800a1f4:	f7f7 fde4 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a1f8:	2045      	movs	r0, #69	; 0x45
 800a1fa:	f7f7 fdb7 	bl	8001d6c <LCD_IO_WriteData>
 800a1fe:	2015      	movs	r0, #21
 800a200:	f7f7 fdb4 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a204:	20c7      	movs	r0, #199	; 0xc7
 800a206:	f7f7 fddb 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a20a:	2090      	movs	r0, #144	; 0x90
 800a20c:	f7f7 fdae 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a210:	2036      	movs	r0, #54	; 0x36
 800a212:	f7f7 fdd5 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a216:	20c8      	movs	r0, #200	; 0xc8
 800a218:	f7f7 fda8 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a21c:	20f2      	movs	r0, #242	; 0xf2
 800a21e:	f7f7 fdcf 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a222:	2000      	movs	r0, #0
 800a224:	f7f7 fda2 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a228:	20b0      	movs	r0, #176	; 0xb0
 800a22a:	f7f7 fdc9 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a22e:	20c2      	movs	r0, #194	; 0xc2
 800a230:	f7f7 fd9c 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a234:	20b6      	movs	r0, #182	; 0xb6
 800a236:	f7f7 fdc3 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a23a:	200a      	movs	r0, #10
 800a23c:	f7f7 fd96 	bl	8001d6c <LCD_IO_WriteData>
 800a240:	20a7      	movs	r0, #167	; 0xa7
 800a242:	f7f7 fd93 	bl	8001d6c <LCD_IO_WriteData>
 800a246:	2027      	movs	r0, #39	; 0x27
 800a248:	f7f7 fd90 	bl	8001d6c <LCD_IO_WriteData>
 800a24c:	2004      	movs	r0, #4
 800a24e:	f7f7 fd8d 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a252:	202a      	movs	r0, #42	; 0x2a
 800a254:	f7f7 fdb4 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a258:	2000      	movs	r0, #0
 800a25a:	f7f7 fd87 	bl	8001d6c <LCD_IO_WriteData>
 800a25e:	2000      	movs	r0, #0
 800a260:	f7f7 fd84 	bl	8001d6c <LCD_IO_WriteData>
 800a264:	2000      	movs	r0, #0
 800a266:	f7f7 fd81 	bl	8001d6c <LCD_IO_WriteData>
 800a26a:	20ef      	movs	r0, #239	; 0xef
 800a26c:	f7f7 fd7e 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a270:	202b      	movs	r0, #43	; 0x2b
 800a272:	f7f7 fda5 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a276:	2000      	movs	r0, #0
 800a278:	f7f7 fd78 	bl	8001d6c <LCD_IO_WriteData>
 800a27c:	2000      	movs	r0, #0
 800a27e:	f7f7 fd75 	bl	8001d6c <LCD_IO_WriteData>
 800a282:	2001      	movs	r0, #1
 800a284:	f7f7 fd72 	bl	8001d6c <LCD_IO_WriteData>
 800a288:	203f      	movs	r0, #63	; 0x3f
 800a28a:	f7f7 fd6f 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a28e:	20f6      	movs	r0, #246	; 0xf6
 800a290:	f7f7 fd96 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a294:	2001      	movs	r0, #1
 800a296:	f7f7 fd69 	bl	8001d6c <LCD_IO_WriteData>
 800a29a:	2000      	movs	r0, #0
 800a29c:	f7f7 fd66 	bl	8001d6c <LCD_IO_WriteData>
 800a2a0:	2006      	movs	r0, #6
 800a2a2:	f7f7 fd63 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a2a6:	202c      	movs	r0, #44	; 0x2c
 800a2a8:	f7f7 fd8a 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800a2ac:	20c8      	movs	r0, #200	; 0xc8
 800a2ae:	f7f7 fdef 	bl	8001e90 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800a2b2:	2026      	movs	r0, #38	; 0x26
 800a2b4:	f7f7 fd84 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a2b8:	2001      	movs	r0, #1
 800a2ba:	f7f7 fd57 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a2be:	20e0      	movs	r0, #224	; 0xe0
 800a2c0:	f7f7 fd7e 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a2c4:	200f      	movs	r0, #15
 800a2c6:	f7f7 fd51 	bl	8001d6c <LCD_IO_WriteData>
 800a2ca:	2029      	movs	r0, #41	; 0x29
 800a2cc:	f7f7 fd4e 	bl	8001d6c <LCD_IO_WriteData>
 800a2d0:	2024      	movs	r0, #36	; 0x24
 800a2d2:	f7f7 fd4b 	bl	8001d6c <LCD_IO_WriteData>
 800a2d6:	200c      	movs	r0, #12
 800a2d8:	f7f7 fd48 	bl	8001d6c <LCD_IO_WriteData>
 800a2dc:	200e      	movs	r0, #14
 800a2de:	f7f7 fd45 	bl	8001d6c <LCD_IO_WriteData>
 800a2e2:	2009      	movs	r0, #9
 800a2e4:	f7f7 fd42 	bl	8001d6c <LCD_IO_WriteData>
 800a2e8:	204e      	movs	r0, #78	; 0x4e
 800a2ea:	f7f7 fd3f 	bl	8001d6c <LCD_IO_WriteData>
 800a2ee:	2078      	movs	r0, #120	; 0x78
 800a2f0:	f7f7 fd3c 	bl	8001d6c <LCD_IO_WriteData>
 800a2f4:	203c      	movs	r0, #60	; 0x3c
 800a2f6:	f7f7 fd39 	bl	8001d6c <LCD_IO_WriteData>
 800a2fa:	2009      	movs	r0, #9
 800a2fc:	f7f7 fd36 	bl	8001d6c <LCD_IO_WriteData>
 800a300:	2013      	movs	r0, #19
 800a302:	f7f7 fd33 	bl	8001d6c <LCD_IO_WriteData>
 800a306:	2005      	movs	r0, #5
 800a308:	f7f7 fd30 	bl	8001d6c <LCD_IO_WriteData>
 800a30c:	2017      	movs	r0, #23
 800a30e:	f7f7 fd2d 	bl	8001d6c <LCD_IO_WriteData>
 800a312:	2011      	movs	r0, #17
 800a314:	f7f7 fd2a 	bl	8001d6c <LCD_IO_WriteData>
 800a318:	2000      	movs	r0, #0
 800a31a:	f7f7 fd27 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a31e:	20e1      	movs	r0, #225	; 0xe1
 800a320:	f7f7 fd4e 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800a324:	2000      	movs	r0, #0
 800a326:	f7f7 fd21 	bl	8001d6c <LCD_IO_WriteData>
 800a32a:	2016      	movs	r0, #22
 800a32c:	f7f7 fd1e 	bl	8001d6c <LCD_IO_WriteData>
 800a330:	201b      	movs	r0, #27
 800a332:	f7f7 fd1b 	bl	8001d6c <LCD_IO_WriteData>
 800a336:	2004      	movs	r0, #4
 800a338:	f7f7 fd18 	bl	8001d6c <LCD_IO_WriteData>
 800a33c:	2011      	movs	r0, #17
 800a33e:	f7f7 fd15 	bl	8001d6c <LCD_IO_WriteData>
 800a342:	2007      	movs	r0, #7
 800a344:	f7f7 fd12 	bl	8001d6c <LCD_IO_WriteData>
 800a348:	2031      	movs	r0, #49	; 0x31
 800a34a:	f7f7 fd0f 	bl	8001d6c <LCD_IO_WriteData>
 800a34e:	2033      	movs	r0, #51	; 0x33
 800a350:	f7f7 fd0c 	bl	8001d6c <LCD_IO_WriteData>
 800a354:	2042      	movs	r0, #66	; 0x42
 800a356:	f7f7 fd09 	bl	8001d6c <LCD_IO_WriteData>
 800a35a:	2005      	movs	r0, #5
 800a35c:	f7f7 fd06 	bl	8001d6c <LCD_IO_WriteData>
 800a360:	200c      	movs	r0, #12
 800a362:	f7f7 fd03 	bl	8001d6c <LCD_IO_WriteData>
 800a366:	200a      	movs	r0, #10
 800a368:	f7f7 fd00 	bl	8001d6c <LCD_IO_WriteData>
 800a36c:	2028      	movs	r0, #40	; 0x28
 800a36e:	f7f7 fcfd 	bl	8001d6c <LCD_IO_WriteData>
 800a372:	202f      	movs	r0, #47	; 0x2f
 800a374:	f7f7 fcfa 	bl	8001d6c <LCD_IO_WriteData>
 800a378:	200f      	movs	r0, #15
 800a37a:	f7f7 fcf7 	bl	8001d6c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800a37e:	2011      	movs	r0, #17
 800a380:	f7f7 fd1e 	bl	8001dc0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800a384:	20c8      	movs	r0, #200	; 0xc8
 800a386:	f7f7 fd83 	bl	8001e90 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800a38a:	2029      	movs	r0, #41	; 0x29
 800a38c:	f7f7 fd18 	bl	8001dc0 <LCD_IO_WriteReg>
}
 800a390:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800a394:	202c      	movs	r0, #44	; 0x2c
 800a396:	f7f7 bd13 	b.w	8001dc0 <LCD_IO_WriteReg>
 800a39a:	bf00      	nop

0800a39c <ili9341_ReadID>:
{
 800a39c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800a39e:	f7f7 fcd5 	bl	8001d4c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800a3a2:	2103      	movs	r1, #3
 800a3a4:	20d3      	movs	r0, #211	; 0xd3
 800a3a6:	f7f7 fd35 	bl	8001e14 <LCD_IO_ReadData>
}
 800a3aa:	b280      	uxth	r0, r0
 800a3ac:	bd08      	pop	{r3, pc}
 800a3ae:	bf00      	nop

0800a3b0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800a3b0:	221f      	movs	r2, #31
 800a3b2:	210b      	movs	r1, #11
 800a3b4:	b2c0      	uxtb	r0, r0
 800a3b6:	f7f7 bc7b 	b.w	8001cb0 <IOE_Write>
 800a3ba:	bf00      	nop

0800a3bc <stmpe811_Reset>:
{
 800a3bc:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800a3be:	b2c4      	uxtb	r4, r0
 800a3c0:	2202      	movs	r2, #2
 800a3c2:	2103      	movs	r1, #3
 800a3c4:	4620      	mov	r0, r4
 800a3c6:	f7f7 fc73 	bl	8001cb0 <IOE_Write>
  IOE_Delay(10); 
 800a3ca:	200a      	movs	r0, #10
 800a3cc:	f7f7 fcbc 	bl	8001d48 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800a3d0:	4620      	mov	r0, r4
 800a3d2:	2200      	movs	r2, #0
 800a3d4:	2103      	movs	r1, #3
 800a3d6:	f7f7 fc6b 	bl	8001cb0 <IOE_Write>
}
 800a3da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800a3de:	2002      	movs	r0, #2
 800a3e0:	f7f7 bcb2 	b.w	8001d48 <IOE_Delay>

0800a3e4 <stmpe811_ReadID>:
{
 800a3e4:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800a3e6:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800a3e8:	f7f7 fc5e 	bl	8001ca8 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800a3ec:	2100      	movs	r1, #0
 800a3ee:	4620      	mov	r0, r4
 800a3f0:	f7f7 fc76 	bl	8001ce0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800a3f4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800a3f6:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800a3f8:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800a3fa:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800a3fc:	f7f7 fc70 	bl	8001ce0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800a400:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800a404:	b280      	uxth	r0, r0
 800a406:	bd10      	pop	{r4, pc}

0800a408 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800a408:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800a40a:	b2c4      	uxtb	r4, r0
 800a40c:	2140      	movs	r1, #64	; 0x40
 800a40e:	4620      	mov	r0, r4
 800a410:	f7f7 fc66 	bl	8001ce0 <IOE_Read>
  
  if(state > 0)
 800a414:	0603      	lsls	r3, r0, #24
 800a416:	d40b      	bmi.n	800a430 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800a418:	4620      	mov	r0, r4
 800a41a:	2201      	movs	r2, #1
 800a41c:	214b      	movs	r1, #75	; 0x4b
 800a41e:	f7f7 fc47 	bl	8001cb0 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800a422:	4620      	mov	r0, r4
 800a424:	2200      	movs	r2, #0
 800a426:	214b      	movs	r1, #75	; 0x4b
 800a428:	f7f7 fc42 	bl	8001cb0 <IOE_Write>
  uint8_t ret = 0;
 800a42c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800a42e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800a430:	214c      	movs	r1, #76	; 0x4c
 800a432:	4620      	mov	r0, r4
 800a434:	f7f7 fc54 	bl	8001ce0 <IOE_Read>
      ret = 1;
 800a438:	3800      	subs	r0, #0
 800a43a:	bf18      	it	ne
 800a43c:	2001      	movne	r0, #1
}
 800a43e:	bd10      	pop	{r4, pc}

0800a440 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800a440:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800a442:	210b      	movs	r1, #11
 800a444:	b2c0      	uxtb	r0, r0
 800a446:	f7f7 fc4b 	bl	8001ce0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800a44a:	f000 001f 	and.w	r0, r0, #31
 800a44e:	bd08      	pop	{r3, pc}

0800a450 <stmpe811_TS_GetXY>:
{
 800a450:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800a452:	2304      	movs	r3, #4
{
 800a454:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800a456:	b2c4      	uxtb	r4, r0
{
 800a458:	4615      	mov	r5, r2
 800a45a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800a45c:	eb0d 0203 	add.w	r2, sp, r3
 800a460:	21d7      	movs	r1, #215	; 0xd7
 800a462:	4620      	mov	r0, r4
 800a464:	f7f7 fc58 	bl	8001d18 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800a468:	9b01      	ldr	r3, [sp, #4]
 800a46a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800a46c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800a46e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800a472:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800a474:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800a476:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800a478:	2201      	movs	r2, #1
 800a47a:	214b      	movs	r1, #75	; 0x4b
 800a47c:	f7f7 fc18 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800a480:	2200      	movs	r2, #0
 800a482:	214b      	movs	r1, #75	; 0x4b
 800a484:	4620      	mov	r0, r4
 800a486:	f7f7 fc13 	bl	8001cb0 <IOE_Write>
}
 800a48a:	b002      	add	sp, #8
 800a48c:	bd70      	pop	{r4, r5, r6, pc}
 800a48e:	bf00      	nop

0800a490 <stmpe811_TS_Start>:
{
 800a490:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800a492:	b2c4      	uxtb	r4, r0
 800a494:	2104      	movs	r1, #4
 800a496:	4620      	mov	r0, r4
 800a498:	f7f7 fc22 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a49c:	2104      	movs	r1, #4
 800a49e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800a4a2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a4a4:	4620      	mov	r0, r4
 800a4a6:	f7f7 fc03 	bl	8001cb0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800a4aa:	2117      	movs	r1, #23
 800a4ac:	4620      	mov	r0, r4
 800a4ae:	f7f7 fc17 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800a4b2:	2117      	movs	r1, #23
 800a4b4:	f000 020f 	and.w	r2, r0, #15
 800a4b8:	4620      	mov	r0, r4
 800a4ba:	f7f7 fbf9 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800a4be:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800a4c2:	4620      	mov	r0, r4
 800a4c4:	2104      	movs	r1, #4
 800a4c6:	f7f7 fbf3 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800a4ca:	2249      	movs	r2, #73	; 0x49
 800a4cc:	2120      	movs	r1, #32
 800a4ce:	4620      	mov	r0, r4
 800a4d0:	f7f7 fbee 	bl	8001cb0 <IOE_Write>
  IOE_Delay(2); 
 800a4d4:	2002      	movs	r0, #2
 800a4d6:	f7f7 fc37 	bl	8001d48 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800a4da:	4620      	mov	r0, r4
 800a4dc:	2201      	movs	r2, #1
 800a4de:	2121      	movs	r1, #33	; 0x21
 800a4e0:	f7f7 fbe6 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800a4e4:	4620      	mov	r0, r4
 800a4e6:	229a      	movs	r2, #154	; 0x9a
 800a4e8:	2141      	movs	r1, #65	; 0x41
 800a4ea:	f7f7 fbe1 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800a4ee:	4620      	mov	r0, r4
 800a4f0:	2201      	movs	r2, #1
 800a4f2:	214a      	movs	r1, #74	; 0x4a
 800a4f4:	f7f7 fbdc 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800a4f8:	4620      	mov	r0, r4
 800a4fa:	2201      	movs	r2, #1
 800a4fc:	214b      	movs	r1, #75	; 0x4b
 800a4fe:	f7f7 fbd7 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800a502:	4620      	mov	r0, r4
 800a504:	2200      	movs	r2, #0
 800a506:	214b      	movs	r1, #75	; 0x4b
 800a508:	f7f7 fbd2 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800a50c:	4620      	mov	r0, r4
 800a50e:	2201      	movs	r2, #1
 800a510:	2156      	movs	r1, #86	; 0x56
 800a512:	f7f7 fbcd 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800a516:	4620      	mov	r0, r4
 800a518:	2201      	movs	r2, #1
 800a51a:	2158      	movs	r1, #88	; 0x58
 800a51c:	f7f7 fbc8 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800a520:	4620      	mov	r0, r4
 800a522:	2201      	movs	r2, #1
 800a524:	2140      	movs	r1, #64	; 0x40
 800a526:	f7f7 fbc3 	bl	8001cb0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800a52a:	4620      	mov	r0, r4
 800a52c:	22ff      	movs	r2, #255	; 0xff
 800a52e:	210b      	movs	r1, #11
 800a530:	f7f7 fbbe 	bl	8001cb0 <IOE_Write>
}
 800a534:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800a538:	2002      	movs	r0, #2
 800a53a:	f7f7 bc05 	b.w	8001d48 <IOE_Delay>
 800a53e:	bf00      	nop

0800a540 <stmpe811_TS_DisableIT>:
{
 800a540:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a542:	b2c4      	uxtb	r4, r0
 800a544:	2109      	movs	r1, #9
 800a546:	4620      	mov	r0, r4
 800a548:	f7f7 fbca 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800a54c:	2109      	movs	r1, #9
 800a54e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800a552:	4620      	mov	r0, r4
 800a554:	f7f7 fbac 	bl	8001cb0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a558:	210a      	movs	r1, #10
 800a55a:	4620      	mov	r0, r4
 800a55c:	f7f7 fbc0 	bl	8001ce0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a560:	210a      	movs	r1, #10
 800a562:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800a566:	4620      	mov	r0, r4
}
 800a568:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a56c:	f7f7 bba0 	b.w	8001cb0 <IOE_Write>

0800a570 <stmpe811_TS_EnableIT>:
{
 800a570:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a572:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800a574:	f7f7 fb9a 	bl	8001cac <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a578:	210a      	movs	r1, #10
 800a57a:	4620      	mov	r0, r4
 800a57c:	f7f7 fbb0 	bl	8001ce0 <IOE_Read>
  tmp |= Source; 
 800a580:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a584:	b2c2      	uxtb	r2, r0
 800a586:	210a      	movs	r1, #10
 800a588:	4620      	mov	r0, r4
 800a58a:	f7f7 fb91 	bl	8001cb0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a58e:	2109      	movs	r1, #9
 800a590:	4620      	mov	r0, r4
 800a592:	f7f7 fba5 	bl	8001ce0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800a596:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a59a:	b2c2      	uxtb	r2, r0
 800a59c:	2109      	movs	r1, #9
 800a59e:	4620      	mov	r0, r4
}
 800a5a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a5a4:	f7f7 bb84 	b.w	8001cb0 <IOE_Write>

0800a5a8 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800a5a8:	4a10      	ldr	r2, [pc, #64]	; (800a5ec <stmpe811_Init+0x44>)
 800a5aa:	7813      	ldrb	r3, [r2, #0]
 800a5ac:	4298      	cmp	r0, r3
 800a5ae:	d004      	beq.n	800a5ba <stmpe811_Init+0x12>
 800a5b0:	7851      	ldrb	r1, [r2, #1]
 800a5b2:	4288      	cmp	r0, r1
 800a5b4:	d001      	beq.n	800a5ba <stmpe811_Init+0x12>
 800a5b6:	b113      	cbz	r3, 800a5be <stmpe811_Init+0x16>
 800a5b8:	b101      	cbz	r1, 800a5bc <stmpe811_Init+0x14>
 800a5ba:	4770      	bx	lr
 800a5bc:	2301      	movs	r3, #1
{
 800a5be:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800a5c0:	b2c4      	uxtb	r4, r0
 800a5c2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800a5c4:	f7f7 fb70 	bl	8001ca8 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800a5c8:	2202      	movs	r2, #2
 800a5ca:	2103      	movs	r1, #3
 800a5cc:	4620      	mov	r0, r4
 800a5ce:	f7f7 fb6f 	bl	8001cb0 <IOE_Write>
  IOE_Delay(10); 
 800a5d2:	200a      	movs	r0, #10
 800a5d4:	f7f7 fbb8 	bl	8001d48 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800a5d8:	4620      	mov	r0, r4
 800a5da:	2200      	movs	r2, #0
 800a5dc:	2103      	movs	r1, #3
 800a5de:	f7f7 fb67 	bl	8001cb0 <IOE_Write>
}
 800a5e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800a5e6:	2002      	movs	r0, #2
 800a5e8:	f7f7 bbae 	b.w	8001d48 <IOE_Delay>
 800a5ec:	20002a28 	.word	0x20002a28

0800a5f0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a5f0:	4b05      	ldr	r3, [pc, #20]	; (800a608 <SystemInit+0x18>)
 800a5f2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a5f6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a5fa:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800a5fe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a602:	6099      	str	r1, [r3, #8]
#endif
}
 800a604:	4770      	bx	lr
 800a606:	bf00      	nop
 800a608:	e000ed00 	.word	0xe000ed00

0800a60c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a60c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a60e:	4b0b      	ldr	r3, [pc, #44]	; (800a63c <HAL_Init+0x30>)
 800a610:	681a      	ldr	r2, [r3, #0]
 800a612:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a616:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a618:	681a      	ldr	r2, [r3, #0]
 800a61a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a61e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a620:	681a      	ldr	r2, [r3, #0]
 800a622:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a626:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a628:	2003      	movs	r0, #3
 800a62a:	f000 f82d 	bl	800a688 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a62e:	2000      	movs	r0, #0
 800a630:	f7f8 f85e 	bl	80026f0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a634:	f7f7 fd80 	bl	8002138 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a638:	2000      	movs	r0, #0
 800a63a:	bd08      	pop	{r3, pc}
 800a63c:	40023c00 	.word	0x40023c00

0800a640 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a640:	4a03      	ldr	r2, [pc, #12]	; (800a650 <HAL_IncTick+0x10>)
 800a642:	4b04      	ldr	r3, [pc, #16]	; (800a654 <HAL_IncTick+0x14>)
 800a644:	6811      	ldr	r1, [r2, #0]
 800a646:	781b      	ldrb	r3, [r3, #0]
 800a648:	440b      	add	r3, r1
 800a64a:	6013      	str	r3, [r2, #0]
}
 800a64c:	4770      	bx	lr
 800a64e:	bf00      	nop
 800a650:	20002a2c 	.word	0x20002a2c
 800a654:	20000080 	.word	0x20000080

0800a658 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a658:	4b01      	ldr	r3, [pc, #4]	; (800a660 <HAL_GetTick+0x8>)
 800a65a:	6818      	ldr	r0, [r3, #0]
}
 800a65c:	4770      	bx	lr
 800a65e:	bf00      	nop
 800a660:	20002a2c 	.word	0x20002a2c

0800a664 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a664:	b538      	push	{r3, r4, r5, lr}
 800a666:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a668:	f7ff fff6 	bl	800a658 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a66c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800a66e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800a670:	d002      	beq.n	800a678 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800a672:	4b04      	ldr	r3, [pc, #16]	; (800a684 <HAL_Delay+0x20>)
 800a674:	781b      	ldrb	r3, [r3, #0]
 800a676:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a678:	f7ff ffee 	bl	800a658 <HAL_GetTick>
 800a67c:	1b43      	subs	r3, r0, r5
 800a67e:	42a3      	cmp	r3, r4
 800a680:	d3fa      	bcc.n	800a678 <HAL_Delay+0x14>
  {
  }
}
 800a682:	bd38      	pop	{r3, r4, r5, pc}
 800a684:	20000080 	.word	0x20000080

0800a688 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a688:	4907      	ldr	r1, [pc, #28]	; (800a6a8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800a68a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a68c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a68e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a692:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a696:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a698:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a69a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800a69e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800a6a2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800a6a4:	4770      	bx	lr
 800a6a6:	bf00      	nop
 800a6a8:	e000ed00 	.word	0xe000ed00

0800a6ac <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a6ac:	4b1c      	ldr	r3, [pc, #112]	; (800a720 <HAL_NVIC_SetPriority+0x74>)
 800a6ae:	68db      	ldr	r3, [r3, #12]
 800a6b0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a6b4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a6b6:	f1c3 0e07 	rsb	lr, r3, #7
 800a6ba:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a6be:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a6c2:	bf28      	it	cs
 800a6c4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a6c8:	f1bc 0f06 	cmp.w	ip, #6
 800a6cc:	d91b      	bls.n	800a706 <HAL_NVIC_SetPriority+0x5a>
 800a6ce:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a6d0:	f04f 3cff 	mov.w	ip, #4294967295
 800a6d4:	fa0c fc03 	lsl.w	ip, ip, r3
 800a6d8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a6dc:	f04f 3cff 	mov.w	ip, #4294967295
 800a6e0:	fa0c fc0e 	lsl.w	ip, ip, lr
 800a6e4:	ea21 010c 	bic.w	r1, r1, ip
 800a6e8:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800a6ea:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a6ec:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800a6f0:	db0c      	blt.n	800a70c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a6f2:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800a6f6:	0109      	lsls	r1, r1, #4
 800a6f8:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800a6fc:	b2c9      	uxtb	r1, r1
 800a6fe:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a702:	f85d fb04 	ldr.w	pc, [sp], #4
 800a706:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a708:	4613      	mov	r3, r2
 800a70a:	e7e7      	b.n	800a6dc <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a70c:	4b05      	ldr	r3, [pc, #20]	; (800a724 <HAL_NVIC_SetPriority+0x78>)
 800a70e:	f000 000f 	and.w	r0, r0, #15
 800a712:	0109      	lsls	r1, r1, #4
 800a714:	4403      	add	r3, r0
 800a716:	b2c9      	uxtb	r1, r1
 800a718:	7619      	strb	r1, [r3, #24]
 800a71a:	f85d fb04 	ldr.w	pc, [sp], #4
 800a71e:	bf00      	nop
 800a720:	e000ed00 	.word	0xe000ed00
 800a724:	e000ecfc 	.word	0xe000ecfc

0800a728 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a728:	2800      	cmp	r0, #0
 800a72a:	db07      	blt.n	800a73c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a72c:	0941      	lsrs	r1, r0, #5
 800a72e:	4a04      	ldr	r2, [pc, #16]	; (800a740 <HAL_NVIC_EnableIRQ+0x18>)
 800a730:	f000 001f 	and.w	r0, r0, #31
 800a734:	2301      	movs	r3, #1
 800a736:	4083      	lsls	r3, r0
 800a738:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a73c:	4770      	bx	lr
 800a73e:	bf00      	nop
 800a740:	e000e100 	.word	0xe000e100

0800a744 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a744:	b180      	cbz	r0, 800a768 <HAL_CRC_Init+0x24>
{
 800a746:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a748:	7943      	ldrb	r3, [r0, #5]
 800a74a:	4604      	mov	r4, r0
 800a74c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a750:	b11b      	cbz	r3, 800a75a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a752:	2301      	movs	r3, #1
 800a754:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a756:	2000      	movs	r0, #0
}
 800a758:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800a75a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800a75c:	f7f7 fd0c 	bl	8002178 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800a760:	2301      	movs	r3, #1
 800a762:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800a764:	2000      	movs	r0, #0
}
 800a766:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a768:	2001      	movs	r0, #1
}
 800a76a:	4770      	bx	lr

0800a76c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a76c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a770:	2b02      	cmp	r3, #2
 800a772:	d003      	beq.n	800a77c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a774:	2380      	movs	r3, #128	; 0x80
 800a776:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800a778:	2001      	movs	r0, #1
 800a77a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800a77c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800a77e:	2305      	movs	r3, #5
 800a780:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800a784:	6813      	ldr	r3, [r2, #0]
 800a786:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800a78a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800a78c:	6013      	str	r3, [r2, #0]
}
 800a78e:	4770      	bx	lr

0800a790 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800a790:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800a794:	4770      	bx	lr
 800a796:	bf00      	nop

0800a798 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800a798:	4b21      	ldr	r3, [pc, #132]	; (800a820 <FLASH_SetErrorCode+0x88>)
 800a79a:	68da      	ldr	r2, [r3, #12]
 800a79c:	06d0      	lsls	r0, r2, #27
 800a79e:	d505      	bpl.n	800a7ac <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800a7a0:	4920      	ldr	r1, [pc, #128]	; (800a824 <FLASH_SetErrorCode+0x8c>)
 800a7a2:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800a7a4:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800a7a6:	4302      	orrs	r2, r0
 800a7a8:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800a7aa:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800a7ac:	4b1c      	ldr	r3, [pc, #112]	; (800a820 <FLASH_SetErrorCode+0x88>)
 800a7ae:	68da      	ldr	r2, [r3, #12]
 800a7b0:	0691      	lsls	r1, r2, #26
 800a7b2:	d506      	bpl.n	800a7c2 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800a7b4:	491b      	ldr	r1, [pc, #108]	; (800a824 <FLASH_SetErrorCode+0x8c>)
 800a7b6:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800a7b8:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800a7ba:	f042 0208 	orr.w	r2, r2, #8
 800a7be:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800a7c0:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800a7c2:	4b17      	ldr	r3, [pc, #92]	; (800a820 <FLASH_SetErrorCode+0x88>)
 800a7c4:	68da      	ldr	r2, [r3, #12]
 800a7c6:	0652      	lsls	r2, r2, #25
 800a7c8:	d506      	bpl.n	800a7d8 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800a7ca:	4916      	ldr	r1, [pc, #88]	; (800a824 <FLASH_SetErrorCode+0x8c>)
 800a7cc:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800a7ce:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800a7d0:	f042 0204 	orr.w	r2, r2, #4
 800a7d4:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800a7d6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800a7d8:	4b11      	ldr	r3, [pc, #68]	; (800a820 <FLASH_SetErrorCode+0x88>)
 800a7da:	68da      	ldr	r2, [r3, #12]
 800a7dc:	0610      	lsls	r0, r2, #24
 800a7de:	d506      	bpl.n	800a7ee <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800a7e0:	4910      	ldr	r1, [pc, #64]	; (800a824 <FLASH_SetErrorCode+0x8c>)
 800a7e2:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800a7e4:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800a7e6:	f042 0202 	orr.w	r2, r2, #2
 800a7ea:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800a7ec:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800a7ee:	4b0c      	ldr	r3, [pc, #48]	; (800a820 <FLASH_SetErrorCode+0x88>)
 800a7f0:	68da      	ldr	r2, [r3, #12]
 800a7f2:	05d1      	lsls	r1, r2, #23
 800a7f4:	d507      	bpl.n	800a806 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800a7f6:	490b      	ldr	r1, [pc, #44]	; (800a824 <FLASH_SetErrorCode+0x8c>)
 800a7f8:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800a7fa:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800a7fe:	f042 0201 	orr.w	r2, r2, #1
 800a802:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800a804:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800a806:	4b06      	ldr	r3, [pc, #24]	; (800a820 <FLASH_SetErrorCode+0x88>)
 800a808:	68da      	ldr	r2, [r3, #12]
 800a80a:	0792      	lsls	r2, r2, #30
 800a80c:	d506      	bpl.n	800a81c <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800a80e:	4905      	ldr	r1, [pc, #20]	; (800a824 <FLASH_SetErrorCode+0x8c>)
 800a810:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800a812:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800a814:	f042 0220 	orr.w	r2, r2, #32
 800a818:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800a81a:	60d8      	str	r0, [r3, #12]
  }
}
 800a81c:	4770      	bx	lr
 800a81e:	bf00      	nop
 800a820:	40023c00 	.word	0x40023c00
 800a824:	20002a30 	.word	0x20002a30

0800a828 <HAL_FLASH_Program>:
{
 800a828:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800a82c:	4f4d      	ldr	r7, [pc, #308]	; (800a964 <HAL_FLASH_Program+0x13c>)
{
 800a82e:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800a830:	7e3b      	ldrb	r3, [r7, #24]
 800a832:	2b01      	cmp	r3, #1
 800a834:	d060      	beq.n	800a8f8 <HAL_FLASH_Program+0xd0>
 800a836:	2301      	movs	r3, #1
 800a838:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800a83a:	2300      	movs	r3, #0
 800a83c:	4681      	mov	r9, r0
 800a83e:	468a      	mov	sl, r1
 800a840:	4690      	mov	r8, r2
 800a842:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800a844:	f7ff ff08 	bl	800a658 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a848:	4d47      	ldr	r5, [pc, #284]	; (800a968 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800a84a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800a84c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a850:	e004      	b.n	800a85c <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800a852:	f7ff ff01 	bl	800a658 <HAL_GetTick>
 800a856:	1b00      	subs	r0, r0, r4
 800a858:	42b0      	cmp	r0, r6
 800a85a:	d848      	bhi.n	800a8ee <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a85c:	68eb      	ldr	r3, [r5, #12]
 800a85e:	03d8      	lsls	r0, r3, #15
 800a860:	d4f7      	bmi.n	800a852 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800a862:	68eb      	ldr	r3, [r5, #12]
 800a864:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800a866:	bf44      	itt	mi
 800a868:	2301      	movmi	r3, #1
 800a86a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800a86c:	4b3e      	ldr	r3, [pc, #248]	; (800a968 <HAL_FLASH_Program+0x140>)
 800a86e:	68da      	ldr	r2, [r3, #12]
 800a870:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800a874:	d154      	bne.n	800a920 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800a876:	f1b9 0f00 	cmp.w	r9, #0
 800a87a:	d040      	beq.n	800a8fe <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800a87c:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800a880:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800a882:	d051      	beq.n	800a928 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800a884:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800a888:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800a88a:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800a88e:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800a890:	d05e      	beq.n	800a950 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800a892:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800a896:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800a898:	691a      	ldr	r2, [r3, #16]
 800a89a:	f042 0201 	orr.w	r2, r2, #1
 800a89e:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800a8a0:	f8ca 8000 	str.w	r8, [sl]
 800a8a4:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800a8a8:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800a8ac:	2300      	movs	r3, #0
 800a8ae:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800a8b0:	f7ff fed2 	bl	800a658 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a8b4:	4d2c      	ldr	r5, [pc, #176]	; (800a968 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800a8b6:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800a8b8:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a8bc:	e004      	b.n	800a8c8 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800a8be:	f7ff fecb 	bl	800a658 <HAL_GetTick>
 800a8c2:	1b00      	subs	r0, r0, r4
 800a8c4:	42b0      	cmp	r0, r6
 800a8c6:	d829      	bhi.n	800a91c <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a8c8:	68eb      	ldr	r3, [r5, #12]
 800a8ca:	03da      	lsls	r2, r3, #15
 800a8cc:	d4f7      	bmi.n	800a8be <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800a8ce:	68eb      	ldr	r3, [r5, #12]
 800a8d0:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800a8d2:	bf44      	itt	mi
 800a8d4:	2301      	movmi	r3, #1
 800a8d6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800a8d8:	4b23      	ldr	r3, [pc, #140]	; (800a968 <HAL_FLASH_Program+0x140>)
 800a8da:	68d8      	ldr	r0, [r3, #12]
 800a8dc:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800a8e0:	d132      	bne.n	800a948 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800a8e2:	4a21      	ldr	r2, [pc, #132]	; (800a968 <HAL_FLASH_Program+0x140>)
 800a8e4:	6913      	ldr	r3, [r2, #16]
 800a8e6:	f023 0301 	bic.w	r3, r3, #1
 800a8ea:	6113      	str	r3, [r2, #16]
 800a8ec:	e000      	b.n	800a8f0 <HAL_FLASH_Program+0xc8>
 800a8ee:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800a8f0:	2300      	movs	r3, #0
 800a8f2:	763b      	strb	r3, [r7, #24]
}
 800a8f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800a8f8:	2002      	movs	r0, #2
}
 800a8fa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800a8fe:	691a      	ldr	r2, [r3, #16]
 800a900:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800a904:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800a906:	691a      	ldr	r2, [r3, #16]
 800a908:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800a90a:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800a90c:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800a910:	f042 0201 	orr.w	r2, r2, #1
 800a914:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800a916:	f88a 8000 	strb.w	r8, [sl]
}
 800a91a:	e7c7      	b.n	800a8ac <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800a91c:	2003      	movs	r0, #3
 800a91e:	e7e0      	b.n	800a8e2 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800a920:	f7ff ff3a 	bl	800a798 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800a924:	2001      	movs	r0, #1
 800a926:	e7e3      	b.n	800a8f0 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800a928:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800a92c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800a92e:	691a      	ldr	r2, [r3, #16]
 800a930:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a934:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800a936:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800a938:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800a93c:	f042 0201 	orr.w	r2, r2, #1
 800a940:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800a942:	f8aa 8000 	strh.w	r8, [sl]
}
 800a946:	e7b1      	b.n	800a8ac <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800a948:	f7ff ff26 	bl	800a798 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800a94c:	2001      	movs	r0, #1
 800a94e:	e7c8      	b.n	800a8e2 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800a950:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a954:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800a956:	691a      	ldr	r2, [r3, #16]
 800a958:	f042 0201 	orr.w	r2, r2, #1
 800a95c:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800a95e:	f8ca 8000 	str.w	r8, [sl]
}
 800a962:	e7a3      	b.n	800a8ac <HAL_FLASH_Program+0x84>
 800a964:	20002a30 	.word	0x20002a30
 800a968:	40023c00 	.word	0x40023c00

0800a96c <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800a96c:	4b06      	ldr	r3, [pc, #24]	; (800a988 <HAL_FLASH_Unlock+0x1c>)
 800a96e:	691a      	ldr	r2, [r3, #16]
 800a970:	2a00      	cmp	r2, #0
 800a972:	db01      	blt.n	800a978 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800a974:	2000      	movs	r0, #0
}
 800a976:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800a978:	4904      	ldr	r1, [pc, #16]	; (800a98c <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800a97a:	4a05      	ldr	r2, [pc, #20]	; (800a990 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800a97c:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800a97e:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800a980:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800a982:	0fc0      	lsrs	r0, r0, #31
 800a984:	4770      	bx	lr
 800a986:	bf00      	nop
 800a988:	40023c00 	.word	0x40023c00
 800a98c:	45670123 	.word	0x45670123
 800a990:	cdef89ab 	.word	0xcdef89ab

0800a994 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800a994:	4a03      	ldr	r2, [pc, #12]	; (800a9a4 <HAL_FLASH_Lock+0x10>)
 800a996:	6913      	ldr	r3, [r2, #16]
 800a998:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800a99c:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800a99e:	6113      	str	r3, [r2, #16]
}
 800a9a0:	4770      	bx	lr
 800a9a2:	bf00      	nop
 800a9a4:	40023c00 	.word	0x40023c00

0800a9a8 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800a9a8:	4b01      	ldr	r3, [pc, #4]	; (800a9b0 <HAL_FLASH_GetError+0x8>)
 800a9aa:	69d8      	ldr	r0, [r3, #28]
}  
 800a9ac:	4770      	bx	lr
 800a9ae:	bf00      	nop
 800a9b0:	20002a30 	.word	0x20002a30

0800a9b4 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800a9b4:	4b14      	ldr	r3, [pc, #80]	; (800aa08 <FLASH_WaitForLastOperation+0x54>)
{ 
 800a9b6:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800a9b8:	2200      	movs	r2, #0
{ 
 800a9ba:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800a9bc:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800a9be:	f7ff fe4b 	bl	800a658 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a9c2:	4e12      	ldr	r6, [pc, #72]	; (800aa0c <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800a9c4:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a9c6:	1c63      	adds	r3, r4, #1
 800a9c8:	d10f      	bne.n	800a9ea <FLASH_WaitForLastOperation+0x36>
 800a9ca:	4a10      	ldr	r2, [pc, #64]	; (800aa0c <FLASH_WaitForLastOperation+0x58>)
 800a9cc:	68d3      	ldr	r3, [r2, #12]
 800a9ce:	03d8      	lsls	r0, r3, #15
 800a9d0:	d4fc      	bmi.n	800a9cc <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800a9d2:	4b0e      	ldr	r3, [pc, #56]	; (800aa0c <FLASH_WaitForLastOperation+0x58>)
 800a9d4:	68da      	ldr	r2, [r3, #12]
 800a9d6:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800a9d8:	bf44      	itt	mi
 800a9da:	2201      	movmi	r2, #1
 800a9dc:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800a9de:	4b0b      	ldr	r3, [pc, #44]	; (800aa0c <FLASH_WaitForLastOperation+0x58>)
 800a9e0:	68d8      	ldr	r0, [r3, #12]
 800a9e2:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800a9e6:	d10b      	bne.n	800aa00 <FLASH_WaitForLastOperation+0x4c>
}  
 800a9e8:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800a9ea:	68f3      	ldr	r3, [r6, #12]
 800a9ec:	03d9      	lsls	r1, r3, #15
 800a9ee:	d5f0      	bpl.n	800a9d2 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800a9f0:	b124      	cbz	r4, 800a9fc <FLASH_WaitForLastOperation+0x48>
 800a9f2:	f7ff fe31 	bl	800a658 <HAL_GetTick>
 800a9f6:	1b40      	subs	r0, r0, r5
 800a9f8:	42a0      	cmp	r0, r4
 800a9fa:	d9e4      	bls.n	800a9c6 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800a9fc:	2003      	movs	r0, #3
}  
 800a9fe:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800aa00:	f7ff feca 	bl	800a798 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800aa04:	2001      	movs	r0, #1
}  
 800aa06:	bd70      	pop	{r4, r5, r6, pc}
 800aa08:	20002a30 	.word	0x20002a30
 800aa0c:	40023c00 	.word	0x40023c00

0800aa10 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800aa10:	4b14      	ldr	r3, [pc, #80]	; (800aa64 <FLASH_FlushCaches+0x54>)
 800aa12:	681a      	ldr	r2, [r3, #0]
 800aa14:	0591      	lsls	r1, r2, #22
 800aa16:	d50f      	bpl.n	800aa38 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800aa18:	681a      	ldr	r2, [r3, #0]
 800aa1a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800aa1e:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800aa20:	681a      	ldr	r2, [r3, #0]
 800aa22:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aa26:	601a      	str	r2, [r3, #0]
 800aa28:	681a      	ldr	r2, [r3, #0]
 800aa2a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aa2e:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800aa30:	681a      	ldr	r2, [r3, #0]
 800aa32:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aa36:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800aa38:	4b0a      	ldr	r3, [pc, #40]	; (800aa64 <FLASH_FlushCaches+0x54>)
 800aa3a:	681a      	ldr	r2, [r3, #0]
 800aa3c:	0552      	lsls	r2, r2, #21
 800aa3e:	d50f      	bpl.n	800aa60 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800aa40:	681a      	ldr	r2, [r3, #0]
 800aa42:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa46:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800aa48:	681a      	ldr	r2, [r3, #0]
 800aa4a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aa4e:	601a      	str	r2, [r3, #0]
 800aa50:	681a      	ldr	r2, [r3, #0]
 800aa52:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800aa56:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800aa58:	681a      	ldr	r2, [r3, #0]
 800aa5a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aa5e:	601a      	str	r2, [r3, #0]
  }
}
 800aa60:	4770      	bx	lr
 800aa62:	bf00      	nop
 800aa64:	40023c00 	.word	0x40023c00

0800aa68 <HAL_FLASHEx_Erase>:
{
 800aa68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800aa6c:	4f44      	ldr	r7, [pc, #272]	; (800ab80 <HAL_FLASHEx_Erase+0x118>)
 800aa6e:	7e3b      	ldrb	r3, [r7, #24]
 800aa70:	2b01      	cmp	r3, #1
 800aa72:	d053      	beq.n	800ab1c <HAL_FLASHEx_Erase+0xb4>
 800aa74:	2301      	movs	r3, #1
 800aa76:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800aa78:	f24c 3050 	movw	r0, #50000	; 0xc350
 800aa7c:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800aa7e:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800aa80:	f7ff ff98 	bl	800a9b4 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800aa84:	4606      	mov	r6, r0
 800aa86:	2800      	cmp	r0, #0
 800aa88:	d143      	bne.n	800ab12 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800aa8a:	f04f 33ff 	mov.w	r3, #4294967295
 800aa8e:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800aa92:	f8d9 3000 	ldr.w	r3, [r9]
 800aa96:	2b01      	cmp	r3, #1
 800aa98:	d044      	beq.n	800ab24 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800aa9a:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800aa9e:	442b      	add	r3, r5
 800aaa0:	429d      	cmp	r5, r3
 800aaa2:	d234      	bcs.n	800ab0e <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800aaa4:	4c37      	ldr	r4, [pc, #220]	; (800ab84 <HAL_FLASHEx_Erase+0x11c>)
 800aaa6:	e005      	b.n	800aab4 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800aaa8:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800aaac:	3501      	adds	r5, #1
 800aaae:	4413      	add	r3, r2
 800aab0:	42ab      	cmp	r3, r5
 800aab2:	d92c      	bls.n	800ab0e <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800aab4:	f899 3010 	ldrb.w	r3, [r9, #16]
 800aab8:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800aaba:	f44f 7140 	mov.w	r1, #768	; 0x300
 800aabe:	bf98      	it	ls
 800aac0:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800aac2:	6923      	ldr	r3, [r4, #16]
 800aac4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800aac8:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800aaca:	6923      	ldr	r3, [r4, #16]
 800aacc:	430b      	orrs	r3, r1
 800aace:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800aad0:	6923      	ldr	r3, [r4, #16]
 800aad2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800aad6:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800aad8:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800aada:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800aadc:	bf8c      	ite	hi
 800aade:	1d2a      	addhi	r2, r5, #4
 800aae0:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800aae2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800aae6:	f043 0302 	orr.w	r3, r3, #2
 800aaea:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800aaec:	6923      	ldr	r3, [r4, #16]
 800aaee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800aaf2:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800aaf4:	f24c 3050 	movw	r0, #50000	; 0xc350
 800aaf8:	f7ff ff5c 	bl	800a9b4 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800aafc:	6923      	ldr	r3, [r4, #16]
 800aafe:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800ab02:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800ab04:	2800      	cmp	r0, #0
 800ab06:	d0cf      	beq.n	800aaa8 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800ab08:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ab0c:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800ab0e:	f7ff ff7f 	bl	800aa10 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800ab12:	2300      	movs	r3, #0
 800ab14:	763b      	strb	r3, [r7, #24]
}
 800ab16:	4630      	mov	r0, r6
 800ab18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800ab1c:	2602      	movs	r6, #2
}
 800ab1e:	4630      	mov	r0, r6
 800ab20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ab24:	4a17      	ldr	r2, [pc, #92]	; (800ab84 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ab26:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ab2a:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ab2c:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ab30:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800ab34:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800ab36:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800ab38:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800ab3a:	d01a      	beq.n	800ab72 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800ab3c:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800ab3e:	bf0c      	ite	eq
 800ab40:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800ab44:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800ab48:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800ab4a:	4c0e      	ldr	r4, [pc, #56]	; (800ab84 <HAL_FLASHEx_Erase+0x11c>)
 800ab4c:	021b      	lsls	r3, r3, #8
 800ab4e:	6922      	ldr	r2, [r4, #16]
 800ab50:	b29b      	uxth	r3, r3
 800ab52:	4313      	orrs	r3, r2
 800ab54:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ab58:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ab5a:	f24c 3050 	movw	r0, #50000	; 0xc350
 800ab5e:	f7ff ff29 	bl	800a9b4 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800ab62:	6923      	ldr	r3, [r4, #16]
 800ab64:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800ab68:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ab6c:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800ab6e:	6123      	str	r3, [r4, #16]
 800ab70:	e7cd      	b.n	800ab0e <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800ab72:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800ab76:	f041 0104 	orr.w	r1, r1, #4
 800ab7a:	6111      	str	r1, [r2, #16]
 800ab7c:	e7e5      	b.n	800ab4a <HAL_FLASHEx_Erase+0xe2>
 800ab7e:	bf00      	nop
 800ab80:	20002a30 	.word	0x20002a30
 800ab84:	40023c00 	.word	0x40023c00

0800ab88 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ab88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ab8c:	2200      	movs	r2, #0
 800ab8e:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ab90:	f8df a260 	ldr.w	sl, [pc, #608]	; 800adf4 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800ab94:	4e90      	ldr	r6, [pc, #576]	; (800add8 <HAL_GPIO_Init+0x250>)
{
 800ab96:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ab98:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ab9a:	4689      	mov	r9, r1
 800ab9c:	e005      	b.n	800abaa <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ab9e:	3301      	adds	r3, #1
 800aba0:	2b10      	cmp	r3, #16
 800aba2:	f102 0202 	add.w	r2, r2, #2
 800aba6:	f000 8095 	beq.w	800acd4 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800abaa:	2101      	movs	r1, #1
 800abac:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800abae:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800abb2:	43a1      	bics	r1, r4
 800abb4:	d1f3      	bne.n	800ab9e <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800abb6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800abba:	f00c 0103 	and.w	r1, ip, #3
 800abbe:	1e4d      	subs	r5, r1, #1
 800abc0:	2d01      	cmp	r5, #1
 800abc2:	f240 808a 	bls.w	800acda <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800abc6:	2903      	cmp	r1, #3
 800abc8:	f040 80ca 	bne.w	800ad60 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800abcc:	4091      	lsls	r1, r2
 800abce:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800abd0:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800abd2:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800abd4:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800abd6:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800abda:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800abdc:	d0df      	beq.n	800ab9e <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800abde:	2100      	movs	r1, #0
 800abe0:	9103      	str	r1, [sp, #12]
 800abe2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800abe6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800abea:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800abee:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800abf2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800abf6:	9103      	str	r1, [sp, #12]
 800abf8:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800abfa:	f023 0103 	bic.w	r1, r3, #3
 800abfe:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800ac02:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac06:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800ac0a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac0c:	00bf      	lsls	r7, r7, #2
 800ac0e:	f04f 0e0f 	mov.w	lr, #15
 800ac12:	fa0e fe07 	lsl.w	lr, lr, r7
 800ac16:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac1a:	4d70      	ldr	r5, [pc, #448]	; (800addc <HAL_GPIO_Init+0x254>)
 800ac1c:	42a8      	cmp	r0, r5
 800ac1e:	d02e      	beq.n	800ac7e <HAL_GPIO_Init+0xf6>
 800ac20:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800ac24:	42a8      	cmp	r0, r5
 800ac26:	f000 809f 	beq.w	800ad68 <HAL_GPIO_Init+0x1e0>
 800ac2a:	4d6d      	ldr	r5, [pc, #436]	; (800ade0 <HAL_GPIO_Init+0x258>)
 800ac2c:	42a8      	cmp	r0, r5
 800ac2e:	f000 80a2 	beq.w	800ad76 <HAL_GPIO_Init+0x1ee>
 800ac32:	4d6c      	ldr	r5, [pc, #432]	; (800ade4 <HAL_GPIO_Init+0x25c>)
 800ac34:	42a8      	cmp	r0, r5
 800ac36:	f000 80a5 	beq.w	800ad84 <HAL_GPIO_Init+0x1fc>
 800ac3a:	4d6b      	ldr	r5, [pc, #428]	; (800ade8 <HAL_GPIO_Init+0x260>)
 800ac3c:	42a8      	cmp	r0, r5
 800ac3e:	f000 80a8 	beq.w	800ad92 <HAL_GPIO_Init+0x20a>
 800ac42:	4d6a      	ldr	r5, [pc, #424]	; (800adec <HAL_GPIO_Init+0x264>)
 800ac44:	42a8      	cmp	r0, r5
 800ac46:	f000 80b2 	beq.w	800adae <HAL_GPIO_Init+0x226>
 800ac4a:	4d69      	ldr	r5, [pc, #420]	; (800adf0 <HAL_GPIO_Init+0x268>)
 800ac4c:	42a8      	cmp	r0, r5
 800ac4e:	f000 80b5 	beq.w	800adbc <HAL_GPIO_Init+0x234>
 800ac52:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800adf8 <HAL_GPIO_Init+0x270>
 800ac56:	4570      	cmp	r0, lr
 800ac58:	f000 80a2 	beq.w	800ada0 <HAL_GPIO_Init+0x218>
 800ac5c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800adfc <HAL_GPIO_Init+0x274>
 800ac60:	4570      	cmp	r0, lr
 800ac62:	f000 80b2 	beq.w	800adca <HAL_GPIO_Init+0x242>
 800ac66:	f8df e198 	ldr.w	lr, [pc, #408]	; 800ae00 <HAL_GPIO_Init+0x278>
 800ac6a:	4570      	cmp	r0, lr
 800ac6c:	bf0c      	ite	eq
 800ac6e:	f04f 0e09 	moveq.w	lr, #9
 800ac72:	f04f 0e0a 	movne.w	lr, #10
 800ac76:	fa0e f707 	lsl.w	r7, lr, r7
 800ac7a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800ac7e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800ac82:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800ac84:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800ac88:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800ac8c:	bf0c      	ite	eq
 800ac8e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800ac90:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800ac94:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800ac96:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800ac98:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800ac9c:	bf0c      	ite	eq
 800ac9e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800aca0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800aca4:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800aca6:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800aca8:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800acac:	bf0c      	ite	eq
 800acae:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800acb0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800acb4:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800acb6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800acb8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800acbc:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800acc0:	bf0c      	ite	eq
 800acc2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800acc4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800acc8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800acca:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800accc:	f102 0202 	add.w	r2, r2, #2
 800acd0:	f47f af6b 	bne.w	800abaa <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800acd4:	b005      	add	sp, #20
 800acd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800acda:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800acde:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800ace2:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ace6:	2503      	movs	r5, #3
 800ace8:	fa05 f802 	lsl.w	r8, r5, r2
 800acec:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800acf0:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800acf4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800acf6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800acf8:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800acfc:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800ad00:	409f      	lsls	r7, r3
 800ad02:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ad06:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800ad0a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800ad0c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ad0e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800ad12:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800ad16:	4097      	lsls	r7, r2
 800ad18:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800ad1c:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800ad1e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800ad20:	fa01 f102 	lsl.w	r1, r1, r2
 800ad24:	f47f af54 	bne.w	800abd0 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800ad28:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800ad2c:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ad30:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800ad34:	f8de 7020 	ldr.w	r7, [lr, #32]
 800ad38:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800ad3a:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ad3e:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800ad42:	fa07 f708 	lsl.w	r7, r7, r8
 800ad46:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ad48:	270f      	movs	r7, #15
 800ad4a:	fa07 f808 	lsl.w	r8, r7, r8
 800ad4e:	9f00      	ldr	r7, [sp, #0]
 800ad50:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800ad54:	9f01      	ldr	r7, [sp, #4]
 800ad56:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800ad5a:	f8ce 7020 	str.w	r7, [lr, #32]
 800ad5e:	e737      	b.n	800abd0 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ad60:	2503      	movs	r5, #3
 800ad62:	4095      	lsls	r5, r2
 800ad64:	43ed      	mvns	r5, r5
 800ad66:	e7d1      	b.n	800ad0c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ad68:	f04f 0e01 	mov.w	lr, #1
 800ad6c:	fa0e f707 	lsl.w	r7, lr, r7
 800ad70:	ea48 0807 	orr.w	r8, r8, r7
 800ad74:	e783      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800ad76:	f04f 0e02 	mov.w	lr, #2
 800ad7a:	fa0e f707 	lsl.w	r7, lr, r7
 800ad7e:	ea48 0807 	orr.w	r8, r8, r7
 800ad82:	e77c      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800ad84:	f04f 0e03 	mov.w	lr, #3
 800ad88:	fa0e f707 	lsl.w	r7, lr, r7
 800ad8c:	ea48 0807 	orr.w	r8, r8, r7
 800ad90:	e775      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800ad92:	f04f 0e04 	mov.w	lr, #4
 800ad96:	fa0e f707 	lsl.w	r7, lr, r7
 800ad9a:	ea48 0807 	orr.w	r8, r8, r7
 800ad9e:	e76e      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800ada0:	f04f 0e07 	mov.w	lr, #7
 800ada4:	fa0e f707 	lsl.w	r7, lr, r7
 800ada8:	ea48 0807 	orr.w	r8, r8, r7
 800adac:	e767      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800adae:	f04f 0e05 	mov.w	lr, #5
 800adb2:	fa0e f707 	lsl.w	r7, lr, r7
 800adb6:	ea48 0807 	orr.w	r8, r8, r7
 800adba:	e760      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800adbc:	f04f 0e06 	mov.w	lr, #6
 800adc0:	fa0e f707 	lsl.w	r7, lr, r7
 800adc4:	ea48 0807 	orr.w	r8, r8, r7
 800adc8:	e759      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800adca:	f04f 0e08 	mov.w	lr, #8
 800adce:	fa0e f707 	lsl.w	r7, lr, r7
 800add2:	ea48 0807 	orr.w	r8, r8, r7
 800add6:	e752      	b.n	800ac7e <HAL_GPIO_Init+0xf6>
 800add8:	40013c00 	.word	0x40013c00
 800addc:	40020000 	.word	0x40020000
 800ade0:	40020800 	.word	0x40020800
 800ade4:	40020c00 	.word	0x40020c00
 800ade8:	40021000 	.word	0x40021000
 800adec:	40021400 	.word	0x40021400
 800adf0:	40021800 	.word	0x40021800
 800adf4:	40023800 	.word	0x40023800
 800adf8:	40021c00 	.word	0x40021c00
 800adfc:	40022000 	.word	0x40022000
 800ae00:	40022400 	.word	0x40022400

0800ae04 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800ae04:	6903      	ldr	r3, [r0, #16]
 800ae06:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800ae08:	bf14      	ite	ne
 800ae0a:	2001      	movne	r0, #1
 800ae0c:	2000      	moveq	r0, #0
 800ae0e:	4770      	bx	lr

0800ae10 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800ae10:	b902      	cbnz	r2, 800ae14 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ae12:	0409      	lsls	r1, r1, #16
 800ae14:	6181      	str	r1, [r0, #24]
  }
}
 800ae16:	4770      	bx	lr

0800ae18 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800ae18:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800ae1a:	ea01 0203 	and.w	r2, r1, r3
 800ae1e:	ea21 0103 	bic.w	r1, r1, r3
 800ae22:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ae26:	6181      	str	r1, [r0, #24]
}
 800ae28:	4770      	bx	lr
 800ae2a:	bf00      	nop

0800ae2c <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800ae2c:	4770      	bx	lr
 800ae2e:	bf00      	nop

0800ae30 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800ae30:	4a04      	ldr	r2, [pc, #16]	; (800ae44 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800ae32:	6951      	ldr	r1, [r2, #20]
 800ae34:	4201      	tst	r1, r0
 800ae36:	d100      	bne.n	800ae3a <HAL_GPIO_EXTI_IRQHandler+0xa>
 800ae38:	4770      	bx	lr
{
 800ae3a:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800ae3c:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800ae3e:	f7ff fff5 	bl	800ae2c <HAL_GPIO_EXTI_Callback>
}
 800ae42:	bd08      	pop	{r3, pc}
 800ae44:	40013c00 	.word	0x40013c00

0800ae48 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800ae48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ae4c:	6804      	ldr	r4, [r0, #0]
{
 800ae4e:	b083      	sub	sp, #12
 800ae50:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ae52:	6823      	ldr	r3, [r4, #0]
{
 800ae54:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800ae58:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ae5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800ae60:	4606      	mov	r6, r0
 800ae62:	468a      	mov	sl, r1
 800ae64:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ae66:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800ae68:	f1b9 3fff 	cmp.w	r9, #4294967295
 800ae6c:	d136      	bne.n	800aedc <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae6e:	6965      	ldr	r5, [r4, #20]
 800ae70:	07e8      	lsls	r0, r5, #31
 800ae72:	d5fc      	bpl.n	800ae6e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800ae74:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800ae78:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800ae7a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800ae7e:	d003      	beq.n	800ae88 <I2C_RequestMemoryWrite+0x40>
 800ae80:	e04f      	b.n	800af22 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ae82:	6961      	ldr	r1, [r4, #20]
 800ae84:	054d      	lsls	r5, r1, #21
 800ae86:	d45d      	bmi.n	800af44 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800ae88:	6961      	ldr	r1, [r4, #20]
 800ae8a:	078b      	lsls	r3, r1, #30
 800ae8c:	d5f9      	bpl.n	800ae82 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae8e:	2300      	movs	r3, #0
 800ae90:	9301      	str	r3, [sp, #4]
 800ae92:	6963      	ldr	r3, [r4, #20]
 800ae94:	9301      	str	r3, [sp, #4]
 800ae96:	69a3      	ldr	r3, [r4, #24]
 800ae98:	9301      	str	r3, [sp, #4]
 800ae9a:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ae9c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800aea0:	f040 8088 	bne.w	800afb4 <I2C_RequestMemoryWrite+0x16c>
 800aea4:	6963      	ldr	r3, [r4, #20]
 800aea6:	061a      	lsls	r2, r3, #24
 800aea8:	d464      	bmi.n	800af74 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aeaa:	6963      	ldr	r3, [r4, #20]
 800aeac:	055b      	lsls	r3, r3, #21
 800aeae:	d5f9      	bpl.n	800aea4 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800aeb0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aeb2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800aeb6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aeb8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800aeba:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800aebc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aec0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aec4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800aec6:	f043 0304 	orr.w	r3, r3, #4
 800aeca:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aecc:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800aece:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aed0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800aed2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aed6:	d066      	beq.n	800afa6 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800aed8:	2001      	movs	r0, #1
 800aeda:	e01f      	b.n	800af1c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aedc:	6963      	ldr	r3, [r4, #20]
 800aede:	07d9      	lsls	r1, r3, #31
 800aee0:	d4c8      	bmi.n	800ae74 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aee2:	f7ff fbb9 	bl	800a658 <HAL_GetTick>
 800aee6:	eba0 000b 	sub.w	r0, r0, fp
 800aeea:	4581      	cmp	r9, r0
 800aeec:	d304      	bcc.n	800aef8 <I2C_RequestMemoryWrite+0xb0>
 800aeee:	f1b9 0f00 	cmp.w	r9, #0
 800aef2:	d001      	beq.n	800aef8 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800aef4:	6834      	ldr	r4, [r6, #0]
 800aef6:	e7b7      	b.n	800ae68 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aef8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800aefa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aefc:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800aefe:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800af02:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af06:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800af08:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800af0a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af0e:	f042 0220 	orr.w	r2, r2, #32
 800af12:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800af14:	680b      	ldr	r3, [r1, #0]
 800af16:	05dc      	lsls	r4, r3, #23
 800af18:	d435      	bmi.n	800af86 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800af1a:	2003      	movs	r0, #3
}
 800af1c:	b003      	add	sp, #12
 800af1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800af22:	6963      	ldr	r3, [r4, #20]
 800af24:	0798      	lsls	r0, r3, #30
 800af26:	d4b2      	bmi.n	800ae8e <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800af28:	6963      	ldr	r3, [r4, #20]
 800af2a:	055a      	lsls	r2, r3, #21
 800af2c:	d40a      	bmi.n	800af44 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af2e:	f7ff fb93 	bl	800a658 <HAL_GetTick>
 800af32:	eba0 000b 	sub.w	r0, r0, fp
 800af36:	4581      	cmp	r9, r0
 800af38:	d34e      	bcc.n	800afd8 <I2C_RequestMemoryWrite+0x190>
 800af3a:	f1b9 0f00 	cmp.w	r9, #0
 800af3e:	d04b      	beq.n	800afd8 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800af40:	6834      	ldr	r4, [r6, #0]
 800af42:	e79a      	b.n	800ae7a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af44:	6823      	ldr	r3, [r4, #0]
 800af46:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800af4a:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800af4c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800af4e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800af52:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800af54:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800af56:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800af58:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af5c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800af60:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800af62:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800af66:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800af6a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800af6c:	6433      	str	r3, [r6, #64]	; 0x40
}
 800af6e:	b003      	add	sp, #12
 800af70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800af74:	f1b8 0f01 	cmp.w	r8, #1
 800af78:	d109      	bne.n	800af8e <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800af7a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800af7c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800af7e:	6127      	str	r7, [r4, #16]
}
 800af80:	b003      	add	sp, #12
 800af82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800af86:	f44f 7300 	mov.w	r3, #512	; 0x200
 800af8a:	6433      	str	r3, [r6, #64]	; 0x40
 800af8c:	e7c5      	b.n	800af1a <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800af8e:	0a3b      	lsrs	r3, r7, #8
 800af90:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800af92:	f1b9 3fff 	cmp.w	r9, #4294967295
 800af96:	d12e      	bne.n	800aff6 <I2C_RequestMemoryWrite+0x1ae>
 800af98:	6963      	ldr	r3, [r4, #20]
 800af9a:	0619      	lsls	r1, r3, #24
 800af9c:	d4ed      	bmi.n	800af7a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800af9e:	6963      	ldr	r3, [r4, #20]
 800afa0:	055a      	lsls	r2, r3, #21
 800afa2:	d5f9      	bpl.n	800af98 <I2C_RequestMemoryWrite+0x150>
 800afa4:	e784      	b.n	800aeb0 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800afa6:	6832      	ldr	r2, [r6, #0]
 800afa8:	6813      	ldr	r3, [r2, #0]
 800afaa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800afae:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800afb0:	6013      	str	r3, [r2, #0]
 800afb2:	e7b3      	b.n	800af1c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800afb4:	6963      	ldr	r3, [r4, #20]
 800afb6:	061d      	lsls	r5, r3, #24
 800afb8:	d4dc      	bmi.n	800af74 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800afba:	6963      	ldr	r3, [r4, #20]
 800afbc:	0559      	lsls	r1, r3, #21
 800afbe:	f53f af77 	bmi.w	800aeb0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800afc2:	f7ff fb49 	bl	800a658 <HAL_GetTick>
 800afc6:	eba0 000b 	sub.w	r0, r0, fp
 800afca:	4581      	cmp	r9, r0
 800afcc:	d325      	bcc.n	800b01a <I2C_RequestMemoryWrite+0x1d2>
 800afce:	f1b9 0f00 	cmp.w	r9, #0
 800afd2:	d022      	beq.n	800b01a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800afd4:	6834      	ldr	r4, [r6, #0]
 800afd6:	e761      	b.n	800ae9c <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800afd8:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800afda:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800afdc:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800afde:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800afe2:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afe6:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800afe8:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afec:	f043 0320 	orr.w	r3, r3, #32
 800aff0:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800aff2:	2001      	movs	r0, #1
 800aff4:	e792      	b.n	800af1c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aff6:	6963      	ldr	r3, [r4, #20]
 800aff8:	061b      	lsls	r3, r3, #24
 800affa:	d4be      	bmi.n	800af7a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800affc:	6963      	ldr	r3, [r4, #20]
 800affe:	0558      	lsls	r0, r3, #21
 800b000:	f53f af56 	bmi.w	800aeb0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b004:	f7ff fb28 	bl	800a658 <HAL_GetTick>
 800b008:	eba0 000b 	sub.w	r0, r0, fp
 800b00c:	4581      	cmp	r9, r0
 800b00e:	d304      	bcc.n	800b01a <I2C_RequestMemoryWrite+0x1d2>
 800b010:	f1b9 0f00 	cmp.w	r9, #0
 800b014:	d001      	beq.n	800b01a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b016:	6834      	ldr	r4, [r6, #0]
 800b018:	e7bb      	b.n	800af92 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b01a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b01c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b01e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b020:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b024:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b028:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800b02a:	4313      	orrs	r3, r2
 800b02c:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800b02e:	e74d      	b.n	800aecc <I2C_RequestMemoryWrite+0x84>

0800b030 <I2C_RequestMemoryRead>:
{
 800b030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b034:	6804      	ldr	r4, [r0, #0]
{
 800b036:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b038:	6823      	ldr	r3, [r4, #0]
 800b03a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b03e:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b040:	6823      	ldr	r3, [r4, #0]
{
 800b042:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b044:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800b048:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800b04c:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b050:	6023      	str	r3, [r4, #0]
{
 800b052:	4606      	mov	r6, r0
 800b054:	468b      	mov	fp, r1
 800b056:	4617      	mov	r7, r2
 800b058:	f1ba 3fff 	cmp.w	sl, #4294967295
 800b05c:	d13a      	bne.n	800b0d4 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b05e:	6965      	ldr	r5, [r4, #20]
 800b060:	07eb      	lsls	r3, r5, #31
 800b062:	d5fc      	bpl.n	800b05e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800b064:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800b068:	6123      	str	r3, [r4, #16]
 800b06a:	fa5f fb8b 	uxtb.w	fp, fp
 800b06e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800b072:	d003      	beq.n	800b07c <I2C_RequestMemoryRead+0x4c>
 800b074:	e069      	b.n	800b14a <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b076:	6965      	ldr	r5, [r4, #20]
 800b078:	056a      	lsls	r2, r5, #21
 800b07a:	d44e      	bmi.n	800b11a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800b07c:	6965      	ldr	r5, [r4, #20]
 800b07e:	07a9      	lsls	r1, r5, #30
 800b080:	d5f9      	bpl.n	800b076 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b082:	2300      	movs	r3, #0
 800b084:	9301      	str	r3, [sp, #4]
 800b086:	6963      	ldr	r3, [r4, #20]
 800b088:	9301      	str	r3, [sp, #4]
 800b08a:	69a3      	ldr	r3, [r4, #24]
 800b08c:	9301      	str	r3, [sp, #4]
 800b08e:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b090:	f1ba 3fff 	cmp.w	sl, #4294967295
 800b094:	f040 80bd 	bne.w	800b212 <I2C_RequestMemoryRead+0x1e2>
 800b098:	6963      	ldr	r3, [r4, #20]
 800b09a:	0618      	lsls	r0, r3, #24
 800b09c:	d468      	bmi.n	800b170 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b09e:	6963      	ldr	r3, [r4, #20]
 800b0a0:	0559      	lsls	r1, r3, #21
 800b0a2:	d5f9      	bpl.n	800b098 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800b0a4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b0a6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800b0aa:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b0ac:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800b0ae:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800b0b0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b0b4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b0b8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800b0ba:	f043 0304 	orr.w	r3, r3, #4
 800b0be:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b0c0:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800b0c2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b0c4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800b0c6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b0ca:	d070      	beq.n	800b1ae <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800b0cc:	2001      	movs	r0, #1
}
 800b0ce:	b003      	add	sp, #12
 800b0d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b0d4:	6963      	ldr	r3, [r4, #20]
 800b0d6:	07dd      	lsls	r5, r3, #31
 800b0d8:	d4c4      	bmi.n	800b064 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b0da:	f7ff fabd 	bl	800a658 <HAL_GetTick>
 800b0de:	eba0 0009 	sub.w	r0, r0, r9
 800b0e2:	4582      	cmp	sl, r0
 800b0e4:	d304      	bcc.n	800b0f0 <I2C_RequestMemoryRead+0xc0>
 800b0e6:	f1ba 0f00 	cmp.w	sl, #0
 800b0ea:	d001      	beq.n	800b0f0 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b0ec:	6834      	ldr	r4, [r6, #0]
 800b0ee:	e7b3      	b.n	800b058 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b0f0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b0f2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b0f4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b0f6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b0fa:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b0fe:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b100:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800b102:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b106:	f042 0220 	orr.w	r2, r2, #32
 800b10a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b10c:	680b      	ldr	r3, [r1, #0]
 800b10e:	05dc      	lsls	r4, r3, #23
 800b110:	d43d      	bmi.n	800b18e <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800b112:	2003      	movs	r0, #3
}
 800b114:	b003      	add	sp, #12
 800b116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b11a:	6823      	ldr	r3, [r4, #0]
 800b11c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b120:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b122:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b124:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800b128:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b12a:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b12c:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800b12e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b132:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b136:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800b138:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b13c:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800b140:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b142:	6433      	str	r3, [r6, #64]	; 0x40
}
 800b144:	b003      	add	sp, #12
 800b146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800b14a:	6963      	ldr	r3, [r4, #20]
 800b14c:	079b      	lsls	r3, r3, #30
 800b14e:	d498      	bmi.n	800b082 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b150:	6963      	ldr	r3, [r4, #20]
 800b152:	0558      	lsls	r0, r3, #21
 800b154:	d4e1      	bmi.n	800b11a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b156:	f7ff fa7f 	bl	800a658 <HAL_GetTick>
 800b15a:	eba0 0009 	sub.w	r0, r0, r9
 800b15e:	4582      	cmp	sl, r0
 800b160:	f0c0 808f 	bcc.w	800b282 <I2C_RequestMemoryRead+0x252>
 800b164:	f1ba 0f00 	cmp.w	sl, #0
 800b168:	f000 808b 	beq.w	800b282 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800b16c:	6834      	ldr	r4, [r6, #0]
 800b16e:	e77e      	b.n	800b06e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b170:	f1b8 0f01 	cmp.w	r8, #1
 800b174:	d10f      	bne.n	800b196 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b176:	b2ff      	uxtb	r7, r7
 800b178:	6127      	str	r7, [r4, #16]
 800b17a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800b17e:	d16e      	bne.n	800b25e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b180:	6963      	ldr	r3, [r4, #20]
 800b182:	061b      	lsls	r3, r3, #24
 800b184:	d41a      	bmi.n	800b1bc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b186:	6963      	ldr	r3, [r4, #20]
 800b188:	055f      	lsls	r7, r3, #21
 800b18a:	d5f9      	bpl.n	800b180 <I2C_RequestMemoryRead+0x150>
 800b18c:	e78a      	b.n	800b0a4 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800b18e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b192:	6433      	str	r3, [r6, #64]	; 0x40
 800b194:	e7bd      	b.n	800b112 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800b196:	0a3b      	lsrs	r3, r7, #8
 800b198:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b19a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800b19e:	d17e      	bne.n	800b29e <I2C_RequestMemoryRead+0x26e>
 800b1a0:	6963      	ldr	r3, [r4, #20]
 800b1a2:	061d      	lsls	r5, r3, #24
 800b1a4:	d4e7      	bmi.n	800b176 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b1a6:	6963      	ldr	r3, [r4, #20]
 800b1a8:	0558      	lsls	r0, r3, #21
 800b1aa:	d5f9      	bpl.n	800b1a0 <I2C_RequestMemoryRead+0x170>
 800b1ac:	e77a      	b.n	800b0a4 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1ae:	6832      	ldr	r2, [r6, #0]
 800b1b0:	6813      	ldr	r3, [r2, #0]
 800b1b2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800b1b6:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1b8:	6013      	str	r3, [r2, #0]
 800b1ba:	e7ab      	b.n	800b114 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b1bc:	6823      	ldr	r3, [r4, #0]
 800b1be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b1c2:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800b1c4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800b1c8:	d113      	bne.n	800b1f2 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b1ca:	6963      	ldr	r3, [r4, #20]
 800b1cc:	07d8      	lsls	r0, r3, #31
 800b1ce:	d5fc      	bpl.n	800b1ca <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800b1d0:	f04b 0301 	orr.w	r3, fp, #1
 800b1d4:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800b1d6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800b1da:	d003      	beq.n	800b1e4 <I2C_RequestMemoryRead+0x1b4>
 800b1dc:	e02b      	b.n	800b236 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b1de:	6963      	ldr	r3, [r4, #20]
 800b1e0:	055b      	lsls	r3, r3, #21
 800b1e2:	d49a      	bmi.n	800b11a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800b1e4:	6963      	ldr	r3, [r4, #20]
 800b1e6:	43db      	mvns	r3, r3
 800b1e8:	f013 0302 	ands.w	r3, r3, #2
 800b1ec:	d1f7      	bne.n	800b1de <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800b1ee:	4618      	mov	r0, r3
 800b1f0:	e790      	b.n	800b114 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b1f2:	6963      	ldr	r3, [r4, #20]
 800b1f4:	07d9      	lsls	r1, r3, #31
 800b1f6:	d4eb      	bmi.n	800b1d0 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b1f8:	f7ff fa2e 	bl	800a658 <HAL_GetTick>
 800b1fc:	eba0 0009 	sub.w	r0, r0, r9
 800b200:	4582      	cmp	sl, r0
 800b202:	f4ff af75 	bcc.w	800b0f0 <I2C_RequestMemoryRead+0xc0>
 800b206:	f1ba 0f00 	cmp.w	sl, #0
 800b20a:	f43f af71 	beq.w	800b0f0 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b20e:	6834      	ldr	r4, [r6, #0]
 800b210:	e7d8      	b.n	800b1c4 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b212:	6963      	ldr	r3, [r4, #20]
 800b214:	061a      	lsls	r2, r3, #24
 800b216:	d4ab      	bmi.n	800b170 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b218:	6963      	ldr	r3, [r4, #20]
 800b21a:	055d      	lsls	r5, r3, #21
 800b21c:	f53f af42 	bmi.w	800b0a4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b220:	f7ff fa1a 	bl	800a658 <HAL_GetTick>
 800b224:	eba0 0009 	sub.w	r0, r0, r9
 800b228:	4582      	cmp	sl, r0
 800b22a:	d34b      	bcc.n	800b2c4 <I2C_RequestMemoryRead+0x294>
 800b22c:	f1ba 0f00 	cmp.w	sl, #0
 800b230:	d048      	beq.n	800b2c4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b232:	6834      	ldr	r4, [r6, #0]
 800b234:	e72c      	b.n	800b090 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800b236:	6963      	ldr	r3, [r4, #20]
 800b238:	43db      	mvns	r3, r3
 800b23a:	f013 0302 	ands.w	r3, r3, #2
 800b23e:	d0d6      	beq.n	800b1ee <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b240:	6963      	ldr	r3, [r4, #20]
 800b242:	055a      	lsls	r2, r3, #21
 800b244:	f53f af69 	bmi.w	800b11a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b248:	f7ff fa06 	bl	800a658 <HAL_GetTick>
 800b24c:	eba0 0009 	sub.w	r0, r0, r9
 800b250:	4582      	cmp	sl, r0
 800b252:	d316      	bcc.n	800b282 <I2C_RequestMemoryRead+0x252>
 800b254:	f1ba 0f00 	cmp.w	sl, #0
 800b258:	d013      	beq.n	800b282 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800b25a:	6834      	ldr	r4, [r6, #0]
 800b25c:	e7bb      	b.n	800b1d6 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b25e:	6963      	ldr	r3, [r4, #20]
 800b260:	061d      	lsls	r5, r3, #24
 800b262:	d4ab      	bmi.n	800b1bc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b264:	6963      	ldr	r3, [r4, #20]
 800b266:	055a      	lsls	r2, r3, #21
 800b268:	f53f af1c 	bmi.w	800b0a4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b26c:	f7ff f9f4 	bl	800a658 <HAL_GetTick>
 800b270:	eba0 0009 	sub.w	r0, r0, r9
 800b274:	4582      	cmp	sl, r0
 800b276:	d325      	bcc.n	800b2c4 <I2C_RequestMemoryRead+0x294>
 800b278:	f1ba 0f00 	cmp.w	sl, #0
 800b27c:	d022      	beq.n	800b2c4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b27e:	6834      	ldr	r4, [r6, #0]
 800b280:	e77b      	b.n	800b17a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b282:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800b284:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b286:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800b288:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b28c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b290:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b292:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b296:	f043 0320 	orr.w	r3, r3, #32
 800b29a:	6433      	str	r3, [r6, #64]	; 0x40
 800b29c:	e716      	b.n	800b0cc <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b29e:	6963      	ldr	r3, [r4, #20]
 800b2a0:	0619      	lsls	r1, r3, #24
 800b2a2:	f53f af68 	bmi.w	800b176 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b2a6:	6963      	ldr	r3, [r4, #20]
 800b2a8:	055b      	lsls	r3, r3, #21
 800b2aa:	f53f aefb 	bmi.w	800b0a4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b2ae:	f7ff f9d3 	bl	800a658 <HAL_GetTick>
 800b2b2:	eba0 0009 	sub.w	r0, r0, r9
 800b2b6:	4582      	cmp	sl, r0
 800b2b8:	d304      	bcc.n	800b2c4 <I2C_RequestMemoryRead+0x294>
 800b2ba:	f1ba 0f00 	cmp.w	sl, #0
 800b2be:	d001      	beq.n	800b2c4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b2c0:	6834      	ldr	r4, [r6, #0]
 800b2c2:	e76a      	b.n	800b19a <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b2c4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b2c6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b2c8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b2ca:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b2ce:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b2d2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800b2d4:	4313      	orrs	r3, r2
 800b2d6:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800b2d8:	e6f2      	b.n	800b0c0 <I2C_RequestMemoryRead+0x90>
 800b2da:	bf00      	nop

0800b2dc <HAL_I2C_Init>:
  if (hi2c == NULL)
 800b2dc:	2800      	cmp	r0, #0
 800b2de:	f000 80b9 	beq.w	800b454 <HAL_I2C_Init+0x178>
{
 800b2e2:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800b2e4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b2e8:	4604      	mov	r4, r0
 800b2ea:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b2ee:	2b00      	cmp	r3, #0
 800b2f0:	f000 8098 	beq.w	800b424 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800b2f4:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b2f6:	2224      	movs	r2, #36	; 0x24
 800b2f8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b2fc:	681a      	ldr	r2, [r3, #0]
 800b2fe:	f022 0201 	bic.w	r2, r2, #1
 800b302:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800b304:	681a      	ldr	r2, [r3, #0]
 800b306:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b30a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800b30c:	681a      	ldr	r2, [r3, #0]
 800b30e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800b312:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800b314:	f001 fe70 	bl	800cff8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800b318:	6865      	ldr	r5, [r4, #4]
 800b31a:	4b4f      	ldr	r3, [pc, #316]	; (800b458 <HAL_I2C_Init+0x17c>)
 800b31c:	429d      	cmp	r5, r3
 800b31e:	d84f      	bhi.n	800b3c0 <HAL_I2C_Init+0xe4>
 800b320:	4b4e      	ldr	r3, [pc, #312]	; (800b45c <HAL_I2C_Init+0x180>)
 800b322:	4298      	cmp	r0, r3
 800b324:	d97c      	bls.n	800b420 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800b326:	4b4e      	ldr	r3, [pc, #312]	; (800b460 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b328:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800b32a:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b32e:	1e43      	subs	r3, r0, #1
 800b330:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b334:	6822      	ldr	r2, [r4, #0]
 800b336:	6851      	ldr	r1, [r2, #4]
 800b338:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800b33c:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800b340:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b342:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800b344:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b348:	f10c 0c01 	add.w	ip, ip, #1
 800b34c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800b350:	ea41 010c 	orr.w	r1, r1, ip
 800b354:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b356:	69d1      	ldr	r1, [r2, #28]
 800b358:	f640 70fc 	movw	r0, #4092	; 0xffc
 800b35c:	3301      	adds	r3, #1
 800b35e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800b362:	4203      	tst	r3, r0
 800b364:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b368:	d161      	bne.n	800b42e <HAL_I2C_Init+0x152>
 800b36a:	2304      	movs	r3, #4
 800b36c:	430b      	orrs	r3, r1
 800b36e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800b370:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800b374:	6811      	ldr	r1, [r2, #0]
 800b376:	4303      	orrs	r3, r0
 800b378:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800b37c:	430b      	orrs	r3, r1
 800b37e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800b380:	6891      	ldr	r1, [r2, #8]
 800b382:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800b386:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800b38a:	4303      	orrs	r3, r0
 800b38c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b390:	430b      	orrs	r3, r1
 800b392:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800b394:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800b398:	68d1      	ldr	r1, [r2, #12]
 800b39a:	4303      	orrs	r3, r0
 800b39c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b3a0:	430b      	orrs	r3, r1
 800b3a2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800b3a4:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b3a6:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800b3a8:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800b3ac:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800b3ae:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b3b0:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800b3b2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b3b6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800b3b8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800b3bc:	4618      	mov	r0, r3
}
 800b3be:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800b3c0:	4b28      	ldr	r3, [pc, #160]	; (800b464 <HAL_I2C_Init+0x188>)
 800b3c2:	4298      	cmp	r0, r3
 800b3c4:	d92c      	bls.n	800b420 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b3c6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800b3c8:	4b25      	ldr	r3, [pc, #148]	; (800b460 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b3ca:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b3cc:	4e26      	ldr	r6, [pc, #152]	; (800b468 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800b3ce:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b3d2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800b3d6:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800b3da:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800b3dc:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b3e0:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800b3e4:	fb01 f303 	mul.w	r3, r1, r3
 800b3e8:	fba6 6303 	umull	r6, r3, r6, r3
 800b3ec:	6a11      	ldr	r1, [r2, #32]
 800b3ee:	099b      	lsrs	r3, r3, #6
 800b3f0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800b3f4:	3301      	adds	r3, #1
 800b3f6:	430b      	orrs	r3, r1
 800b3f8:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b3fa:	69d1      	ldr	r1, [r2, #28]
 800b3fc:	68a3      	ldr	r3, [r4, #8]
 800b3fe:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800b402:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b406:	b9ab      	cbnz	r3, 800b434 <HAL_I2C_Init+0x158>
 800b408:	1e43      	subs	r3, r0, #1
 800b40a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b40e:	fbb3 f3f5 	udiv	r3, r3, r5
 800b412:	3301      	adds	r3, #1
 800b414:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b418:	b1d3      	cbz	r3, 800b450 <HAL_I2C_Init+0x174>
 800b41a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800b41e:	e7a5      	b.n	800b36c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800b420:	2001      	movs	r0, #1
}
 800b422:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800b424:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800b428:	f7f6 fec0 	bl	80021ac <HAL_I2C_MspInit>
 800b42c:	e762      	b.n	800b2f4 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b42e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b432:	e79b      	b.n	800b36c <HAL_I2C_Init+0x90>
 800b434:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800b438:	1e43      	subs	r3, r0, #1
 800b43a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800b43e:	fbb3 f3f5 	udiv	r3, r3, r5
 800b442:	3301      	adds	r3, #1
 800b444:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b448:	b113      	cbz	r3, 800b450 <HAL_I2C_Init+0x174>
 800b44a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800b44e:	e78d      	b.n	800b36c <HAL_I2C_Init+0x90>
 800b450:	2301      	movs	r3, #1
 800b452:	e78b      	b.n	800b36c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800b454:	2001      	movs	r0, #1
}
 800b456:	4770      	bx	lr
 800b458:	000186a0 	.word	0x000186a0
 800b45c:	001e847f 	.word	0x001e847f
 800b460:	431bde83 	.word	0x431bde83
 800b464:	003d08ff 	.word	0x003d08ff
 800b468:	10624dd3 	.word	0x10624dd3

0800b46c <HAL_I2C_Mem_Write>:
{
 800b46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b470:	4604      	mov	r4, r0
 800b472:	b083      	sub	sp, #12
 800b474:	4699      	mov	r9, r3
 800b476:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800b47a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b47c:	460f      	mov	r7, r1
 800b47e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b480:	f7ff f8ea 	bl	800a658 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b484:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b488:	2b20      	cmp	r3, #32
 800b48a:	d004      	beq.n	800b496 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800b48c:	2702      	movs	r7, #2
}
 800b48e:	4638      	mov	r0, r7
 800b490:	b003      	add	sp, #12
 800b492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b496:	4605      	mov	r5, r0
 800b498:	e005      	b.n	800b4a6 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b49a:	f7ff f8dd 	bl	800a658 <HAL_GetTick>
 800b49e:	1b40      	subs	r0, r0, r5
 800b4a0:	2819      	cmp	r0, #25
 800b4a2:	f200 80a8 	bhi.w	800b5f6 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b4a6:	6820      	ldr	r0, [r4, #0]
 800b4a8:	6983      	ldr	r3, [r0, #24]
 800b4aa:	ea6f 0c03 	mvn.w	ip, r3
 800b4ae:	f01c 0b02 	ands.w	fp, ip, #2
 800b4b2:	d0f2      	beq.n	800b49a <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800b4b4:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b4b8:	2b01      	cmp	r3, #1
 800b4ba:	d0e7      	beq.n	800b48c <HAL_I2C_Mem_Write+0x20>
 800b4bc:	2301      	movs	r3, #1
 800b4be:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b4c2:	6803      	ldr	r3, [r0, #0]
 800b4c4:	07db      	lsls	r3, r3, #31
 800b4c6:	d572      	bpl.n	800b5ae <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b4c8:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b4ca:	6807      	ldr	r7, [r0, #0]
 800b4cc:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800b4d0:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800b4d2:	980c      	ldr	r0, [sp, #48]	; 0x30
 800b4d4:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b4d6:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b4d8:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b4dc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b4e0:	2040      	movs	r0, #64	; 0x40
 800b4e2:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b4e6:	2000      	movs	r0, #0
 800b4e8:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800b4ea:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b4ee:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800b4f0:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b4f2:	4856      	ldr	r0, [pc, #344]	; (800b64c <HAL_I2C_Mem_Write+0x1e0>)
 800b4f4:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b4f6:	464b      	mov	r3, r9
 800b4f8:	4642      	mov	r2, r8
 800b4fa:	4620      	mov	r0, r4
 800b4fc:	f7ff fca4 	bl	800ae48 <I2C_RequestMemoryWrite>
 800b500:	4607      	mov	r7, r0
 800b502:	bb00      	cbnz	r0, 800b546 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800b504:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b506:	2b00      	cmp	r3, #0
 800b508:	f000 809e 	beq.w	800b648 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800b50c:	6823      	ldr	r3, [r4, #0]
 800b50e:	1c72      	adds	r2, r6, #1
 800b510:	d159      	bne.n	800b5c6 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b512:	695a      	ldr	r2, [r3, #20]
 800b514:	0610      	lsls	r0, r2, #24
 800b516:	d41b      	bmi.n	800b550 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b518:	695a      	ldr	r2, [r3, #20]
 800b51a:	0551      	lsls	r1, r2, #21
 800b51c:	d5f9      	bpl.n	800b512 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800b51e:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b520:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800b524:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b526:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800b528:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800b52a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b52e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b532:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b534:	f043 0304 	orr.w	r3, r3, #4
 800b538:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b53a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800b53c:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b53e:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800b540:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b544:	d038      	beq.n	800b5b8 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800b546:	2701      	movs	r7, #1
}
 800b548:	4638      	mov	r0, r7
 800b54a:	b003      	add	sp, #12
 800b54c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b550:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800b554:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b558:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800b55a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b55e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b562:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800b564:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b566:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b568:	3a01      	subs	r2, #1
 800b56a:	b292      	uxth	r2, r2
 800b56c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800b56e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b570:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800b572:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b574:	0740      	lsls	r0, r0, #29
 800b576:	d517      	bpl.n	800b5a8 <HAL_I2C_Mem_Write+0x13c>
 800b578:	b942      	cbnz	r2, 800b58c <HAL_I2C_Mem_Write+0x120>
 800b57a:	1c72      	adds	r2, r6, #1
 800b57c:	d156      	bne.n	800b62c <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800b57e:	695a      	ldr	r2, [r3, #20]
 800b580:	0750      	lsls	r0, r2, #29
 800b582:	d446      	bmi.n	800b612 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b584:	695a      	ldr	r2, [r3, #20]
 800b586:	0551      	lsls	r1, r2, #21
 800b588:	d5f9      	bpl.n	800b57e <HAL_I2C_Mem_Write+0x112>
 800b58a:	e7c8      	b.n	800b51e <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b58c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800b590:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800b592:	f10c 0102 	add.w	r1, ip, #2
 800b596:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b598:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800b59a:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800b59e:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800b5a0:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800b5a2:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800b5a4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b5a6:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800b5a8:	2a00      	cmp	r2, #0
 800b5aa:	d1b0      	bne.n	800b50e <HAL_I2C_Mem_Write+0xa2>
 800b5ac:	e7e5      	b.n	800b57a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800b5ae:	6803      	ldr	r3, [r0, #0]
 800b5b0:	f043 0301 	orr.w	r3, r3, #1
 800b5b4:	6003      	str	r3, [r0, #0]
 800b5b6:	e787      	b.n	800b4c8 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b5b8:	6822      	ldr	r2, [r4, #0]
 800b5ba:	6813      	ldr	r3, [r2, #0]
 800b5bc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800b5c0:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b5c2:	6013      	str	r3, [r2, #0]
 800b5c4:	e763      	b.n	800b48e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b5c6:	695a      	ldr	r2, [r3, #20]
 800b5c8:	0612      	lsls	r2, r2, #24
 800b5ca:	d4c1      	bmi.n	800b550 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b5cc:	695a      	ldr	r2, [r3, #20]
 800b5ce:	0551      	lsls	r1, r2, #21
 800b5d0:	d4a5      	bmi.n	800b51e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b5d2:	f7ff f841 	bl	800a658 <HAL_GetTick>
 800b5d6:	1b40      	subs	r0, r0, r5
 800b5d8:	4286      	cmp	r6, r0
 800b5da:	d301      	bcc.n	800b5e0 <HAL_I2C_Mem_Write+0x174>
 800b5dc:	2e00      	cmp	r6, #0
 800b5de:	d195      	bne.n	800b50c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b5e0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b5e2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b5e4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b5e6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b5ea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b5ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b5f0:	4313      	orrs	r3, r2
 800b5f2:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800b5f4:	e7a1      	b.n	800b53a <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800b5f6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b5f8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b5fc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b600:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b604:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b606:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b60a:	f043 0320 	orr.w	r3, r3, #32
 800b60e:	6423      	str	r3, [r4, #64]	; 0x40
 800b610:	e73c      	b.n	800b48c <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b612:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b614:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b616:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800b61a:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b61c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b61e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b622:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b626:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800b62a:	e730      	b.n	800b48e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800b62c:	695a      	ldr	r2, [r3, #20]
 800b62e:	0752      	lsls	r2, r2, #29
 800b630:	d4ef      	bmi.n	800b612 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b632:	695a      	ldr	r2, [r3, #20]
 800b634:	0551      	lsls	r1, r2, #21
 800b636:	f53f af72 	bmi.w	800b51e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b63a:	f7ff f80d 	bl	800a658 <HAL_GetTick>
 800b63e:	1b40      	subs	r0, r0, r5
 800b640:	4286      	cmp	r6, r0
 800b642:	d3cd      	bcc.n	800b5e0 <HAL_I2C_Mem_Write+0x174>
 800b644:	2e00      	cmp	r6, #0
 800b646:	d0cb      	beq.n	800b5e0 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800b648:	6823      	ldr	r3, [r4, #0]
 800b64a:	e796      	b.n	800b57a <HAL_I2C_Mem_Write+0x10e>
 800b64c:	ffff0000 	.word	0xffff0000

0800b650 <HAL_I2C_Mem_Read>:
{
 800b650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b654:	4604      	mov	r4, r0
 800b656:	b087      	sub	sp, #28
 800b658:	4699      	mov	r9, r3
 800b65a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800b65e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800b660:	460f      	mov	r7, r1
 800b662:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b664:	f7fe fff8 	bl	800a658 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b668:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b66c:	2b20      	cmp	r3, #32
 800b66e:	d004      	beq.n	800b67a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800b670:	2702      	movs	r7, #2
}
 800b672:	4638      	mov	r0, r7
 800b674:	b007      	add	sp, #28
 800b676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b67a:	4606      	mov	r6, r0
 800b67c:	e005      	b.n	800b68a <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b67e:	f7fe ffeb 	bl	800a658 <HAL_GetTick>
 800b682:	1b80      	subs	r0, r0, r6
 800b684:	2819      	cmp	r0, #25
 800b686:	f200 80d2 	bhi.w	800b82e <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b68a:	f8d4 c000 	ldr.w	ip, [r4]
 800b68e:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800b692:	43c0      	mvns	r0, r0
 800b694:	f010 0b02 	ands.w	fp, r0, #2
 800b698:	d0f1      	beq.n	800b67e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800b69a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b69e:	2b01      	cmp	r3, #1
 800b6a0:	d0e6      	beq.n	800b670 <HAL_I2C_Mem_Read+0x20>
 800b6a2:	2301      	movs	r3, #1
 800b6a4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b6a8:	f8dc 3000 	ldr.w	r3, [ip]
 800b6ac:	07d9      	lsls	r1, r3, #31
 800b6ae:	d537      	bpl.n	800b720 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b6b0:	f8dc 0000 	ldr.w	r0, [ip]
 800b6b4:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800b6b8:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800b6bc:	9810      	ldr	r0, [sp, #64]	; 0x40
 800b6be:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b6c0:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b6c2:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b6c6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b6ca:	2040      	movs	r0, #64	; 0x40
 800b6cc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b6d0:	2000      	movs	r0, #0
 800b6d2:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800b6d4:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b6d8:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800b6da:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b6dc:	4893      	ldr	r0, [pc, #588]	; (800b92c <HAL_I2C_Mem_Read+0x2dc>)
 800b6de:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b6e0:	4639      	mov	r1, r7
 800b6e2:	464b      	mov	r3, r9
 800b6e4:	4642      	mov	r2, r8
 800b6e6:	4620      	mov	r0, r4
 800b6e8:	f7ff fca2 	bl	800b030 <I2C_RequestMemoryRead>
 800b6ec:	4607      	mov	r7, r0
 800b6ee:	2800      	cmp	r0, #0
 800b6f0:	f040 80ab 	bne.w	800b84a <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800b6f4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800b6f6:	b9d2      	cbnz	r2, 800b72e <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b6f8:	6823      	ldr	r3, [r4, #0]
 800b6fa:	9002      	str	r0, [sp, #8]
 800b6fc:	695a      	ldr	r2, [r3, #20]
 800b6fe:	9202      	str	r2, [sp, #8]
 800b700:	699a      	ldr	r2, [r3, #24]
 800b702:	9202      	str	r2, [sp, #8]
 800b704:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b706:	681a      	ldr	r2, [r3, #0]
 800b708:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b70c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b70e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b710:	2220      	movs	r2, #32
 800b712:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b716:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b71a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800b71e:	e7a8      	b.n	800b672 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800b720:	f8dc 3000 	ldr.w	r3, [ip]
 800b724:	f043 0301 	orr.w	r3, r3, #1
 800b728:	f8cc 3000 	str.w	r3, [ip]
 800b72c:	e7c0      	b.n	800b6b0 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800b72e:	2a01      	cmp	r2, #1
 800b730:	f000 812c 	beq.w	800b98c <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800b734:	2a02      	cmp	r2, #2
 800b736:	f000 80bd 	beq.w	800b8b4 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b73a:	6823      	ldr	r3, [r4, #0]
 800b73c:	9005      	str	r0, [sp, #20]
 800b73e:	6959      	ldr	r1, [r3, #20]
 800b740:	9105      	str	r1, [sp, #20]
 800b742:	6999      	ldr	r1, [r3, #24]
 800b744:	9105      	str	r1, [sp, #20]
 800b746:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800b748:	2a03      	cmp	r2, #3
 800b74a:	d849      	bhi.n	800b7e0 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800b74c:	2a01      	cmp	r2, #1
 800b74e:	f000 80eb 	beq.w	800b928 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800b752:	2a02      	cmp	r2, #2
 800b754:	f000 8089 	beq.w	800b86a <HAL_I2C_Mem_Read+0x21a>
 800b758:	1c69      	adds	r1, r5, #1
 800b75a:	f040 80bb 	bne.w	800b8d4 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b75e:	695a      	ldr	r2, [r3, #20]
 800b760:	0752      	lsls	r2, r2, #29
 800b762:	d5fc      	bpl.n	800b75e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b764:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b766:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b768:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b76c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b76e:	691b      	ldr	r3, [r3, #16]
 800b770:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800b772:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800b774:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b776:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b778:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800b77a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800b77c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800b77e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800b780:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b782:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b784:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800b786:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b788:	6822      	ldr	r2, [r4, #0]
 800b78a:	f040 80af 	bne.w	800b8ec <HAL_I2C_Mem_Read+0x29c>
 800b78e:	6953      	ldr	r3, [r2, #20]
 800b790:	075b      	lsls	r3, r3, #29
 800b792:	d5fc      	bpl.n	800b78e <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b794:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b796:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b798:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b79c:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b79e:	6913      	ldr	r3, [r2, #16]
 800b7a0:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800b7a2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800b7a4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800b7a6:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7a8:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800b7aa:	3b01      	subs	r3, #1
 800b7ac:	b29b      	uxth	r3, r3
 800b7ae:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7b0:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800b7b2:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800b7b4:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800b7b8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800b7ba:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7be:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800b7c0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b7c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800b7c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b7c6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800b7c8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800b7ca:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800b7cc:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800b7ce:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800b7d0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b7d2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b7d4:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800b7d6:	2a00      	cmp	r2, #0
 800b7d8:	d099      	beq.n	800b70e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800b7da:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b7dc:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800b7de:	d9b5      	bls.n	800b74c <HAL_I2C_Mem_Read+0xfc>
 800b7e0:	b95d      	cbnz	r5, 800b7fa <HAL_I2C_Mem_Read+0x1aa>
 800b7e2:	e0c5      	b.n	800b970 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b7e4:	695a      	ldr	r2, [r3, #20]
 800b7e6:	06d0      	lsls	r0, r2, #27
 800b7e8:	f100 80b2 	bmi.w	800b950 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b7ec:	f7fe ff34 	bl	800a658 <HAL_GetTick>
 800b7f0:	1b80      	subs	r0, r0, r6
 800b7f2:	4285      	cmp	r5, r0
 800b7f4:	f0c0 8086 	bcc.w	800b904 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b7f8:	6823      	ldr	r3, [r4, #0]
 800b7fa:	695a      	ldr	r2, [r3, #20]
 800b7fc:	0652      	lsls	r2, r2, #25
 800b7fe:	d5f1      	bpl.n	800b7e4 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b800:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b802:	691b      	ldr	r3, [r3, #16]
 800b804:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800b806:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b808:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800b80a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800b80c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b80e:	3b01      	subs	r3, #1
 800b810:	b29b      	uxth	r3, r3
 800b812:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b814:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800b816:	3a01      	subs	r2, #1
 800b818:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800b81a:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b81e:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800b820:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800b822:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b826:	d5d6      	bpl.n	800b7d6 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b828:	6903      	ldr	r3, [r0, #16]
 800b82a:	704b      	strb	r3, [r1, #1]
 800b82c:	e036      	b.n	800b89c <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800b82e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b830:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b834:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b838:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b83c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b83e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b842:	f043 0320 	orr.w	r3, r3, #32
 800b846:	6423      	str	r3, [r4, #64]	; 0x40
 800b848:	e712      	b.n	800b670 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800b84a:	2701      	movs	r7, #1
}
 800b84c:	4638      	mov	r0, r7
 800b84e:	b007      	add	sp, #28
 800b850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b854:	695a      	ldr	r2, [r3, #20]
 800b856:	0750      	lsls	r0, r2, #29
 800b858:	d40c      	bmi.n	800b874 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b85a:	f7fe fefd 	bl	800a658 <HAL_GetTick>
 800b85e:	1b80      	subs	r0, r0, r6
 800b860:	4285      	cmp	r5, r0
 800b862:	d34f      	bcc.n	800b904 <HAL_I2C_Mem_Read+0x2b4>
 800b864:	2d00      	cmp	r5, #0
 800b866:	d04d      	beq.n	800b904 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b868:	6823      	ldr	r3, [r4, #0]
 800b86a:	1c69      	adds	r1, r5, #1
 800b86c:	d1f2      	bne.n	800b854 <HAL_I2C_Mem_Read+0x204>
 800b86e:	695a      	ldr	r2, [r3, #20]
 800b870:	0752      	lsls	r2, r2, #29
 800b872:	d5fc      	bpl.n	800b86e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b874:	681a      	ldr	r2, [r3, #0]
 800b876:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b87a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b87c:	691a      	ldr	r2, [r3, #16]
 800b87e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b880:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800b882:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800b884:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800b886:	3b01      	subs	r3, #1
 800b888:	b29b      	uxth	r3, r3
 800b88a:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800b88c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b88e:	3b01      	subs	r3, #1
 800b890:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b892:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b894:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b896:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800b898:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b89a:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800b89c:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b89e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800b8a0:	3301      	adds	r3, #1
 800b8a2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800b8a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800b8a6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800b8a8:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800b8aa:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800b8ac:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800b8ae:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b8b0:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b8b2:	e790      	b.n	800b7d6 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8b4:	6823      	ldr	r3, [r4, #0]
 800b8b6:	6819      	ldr	r1, [r3, #0]
 800b8b8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b8bc:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b8be:	6819      	ldr	r1, [r3, #0]
 800b8c0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800b8c4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8c6:	9004      	str	r0, [sp, #16]
 800b8c8:	6959      	ldr	r1, [r3, #20]
 800b8ca:	9104      	str	r1, [sp, #16]
 800b8cc:	6999      	ldr	r1, [r3, #24]
 800b8ce:	9104      	str	r1, [sp, #16]
 800b8d0:	9904      	ldr	r1, [sp, #16]
 800b8d2:	e739      	b.n	800b748 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b8d4:	695a      	ldr	r2, [r3, #20]
 800b8d6:	0750      	lsls	r0, r2, #29
 800b8d8:	f53f af44 	bmi.w	800b764 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b8dc:	f7fe febc 	bl	800a658 <HAL_GetTick>
 800b8e0:	1b80      	subs	r0, r0, r6
 800b8e2:	4285      	cmp	r5, r0
 800b8e4:	d30e      	bcc.n	800b904 <HAL_I2C_Mem_Read+0x2b4>
 800b8e6:	b16d      	cbz	r5, 800b904 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b8e8:	6823      	ldr	r3, [r4, #0]
 800b8ea:	e735      	b.n	800b758 <HAL_I2C_Mem_Read+0x108>
 800b8ec:	6953      	ldr	r3, [r2, #20]
 800b8ee:	0758      	lsls	r0, r3, #29
 800b8f0:	f53f af50 	bmi.w	800b794 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b8f4:	f7fe feb0 	bl	800a658 <HAL_GetTick>
 800b8f8:	1b80      	subs	r0, r0, r6
 800b8fa:	4285      	cmp	r5, r0
 800b8fc:	d302      	bcc.n	800b904 <HAL_I2C_Mem_Read+0x2b4>
 800b8fe:	2d00      	cmp	r5, #0
 800b900:	f47f af41 	bne.w	800b786 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b904:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b906:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b908:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b90a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b90e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b912:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b914:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800b918:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b91a:	f043 0320 	orr.w	r3, r3, #32
}
 800b91e:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b920:	6423      	str	r3, [r4, #64]	; 0x40
}
 800b922:	b007      	add	sp, #28
 800b924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b928:	b95d      	cbnz	r5, 800b942 <HAL_I2C_Mem_Read+0x2f2>
 800b92a:	e02b      	b.n	800b984 <HAL_I2C_Mem_Read+0x334>
 800b92c:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b930:	695a      	ldr	r2, [r3, #20]
 800b932:	06d2      	lsls	r2, r2, #27
 800b934:	d40c      	bmi.n	800b950 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b936:	f7fe fe8f 	bl	800a658 <HAL_GetTick>
 800b93a:	1b80      	subs	r0, r0, r6
 800b93c:	4285      	cmp	r5, r0
 800b93e:	d3e1      	bcc.n	800b904 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b940:	6823      	ldr	r3, [r4, #0]
 800b942:	695a      	ldr	r2, [r3, #20]
 800b944:	0651      	lsls	r1, r2, #25
 800b946:	d5f3      	bpl.n	800b930 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b948:	691a      	ldr	r2, [r3, #16]
 800b94a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b94c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b94e:	e7a5      	b.n	800b89c <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b950:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800b952:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800b956:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800b958:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b95a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800b95c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b960:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800b964:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b966:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800b968:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800b96c:	2701      	movs	r7, #1
 800b96e:	e680      	b.n	800b672 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b970:	695a      	ldr	r2, [r3, #20]
 800b972:	0652      	lsls	r2, r2, #25
 800b974:	f53f af44 	bmi.w	800b800 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b978:	695a      	ldr	r2, [r3, #20]
 800b97a:	06d1      	lsls	r1, r2, #27
 800b97c:	d4e8      	bmi.n	800b950 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b97e:	f7fe fe6b 	bl	800a658 <HAL_GetTick>
 800b982:	e7bf      	b.n	800b904 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b984:	695a      	ldr	r2, [r3, #20]
 800b986:	0650      	lsls	r0, r2, #25
 800b988:	d5f6      	bpl.n	800b978 <HAL_I2C_Mem_Read+0x328>
 800b98a:	e7dd      	b.n	800b948 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b98c:	6823      	ldr	r3, [r4, #0]
 800b98e:	6819      	ldr	r1, [r3, #0]
 800b990:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b994:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b996:	9003      	str	r0, [sp, #12]
 800b998:	6959      	ldr	r1, [r3, #20]
 800b99a:	9103      	str	r1, [sp, #12]
 800b99c:	6999      	ldr	r1, [r3, #24]
 800b99e:	9103      	str	r1, [sp, #12]
 800b9a0:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b9a2:	6819      	ldr	r1, [r3, #0]
 800b9a4:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b9a8:	6019      	str	r1, [r3, #0]
 800b9aa:	e6cd      	b.n	800b748 <HAL_I2C_Mem_Read+0xf8>

0800b9ac <HAL_I2C_MasterTxCpltCallback>:
 800b9ac:	4770      	bx	lr
 800b9ae:	bf00      	nop

0800b9b0 <HAL_I2C_MasterRxCpltCallback>:
 800b9b0:	4770      	bx	lr
 800b9b2:	bf00      	nop

0800b9b4 <HAL_I2C_SlaveTxCpltCallback>:
 800b9b4:	4770      	bx	lr
 800b9b6:	bf00      	nop

0800b9b8 <HAL_I2C_SlaveRxCpltCallback>:
 800b9b8:	4770      	bx	lr
 800b9ba:	bf00      	nop

0800b9bc <HAL_I2C_AddrCallback>:
}
 800b9bc:	4770      	bx	lr
 800b9be:	bf00      	nop

0800b9c0 <HAL_I2C_ListenCpltCallback>:
 800b9c0:	4770      	bx	lr
 800b9c2:	bf00      	nop

0800b9c4 <HAL_I2C_MemTxCpltCallback>:
 800b9c4:	4770      	bx	lr
 800b9c6:	bf00      	nop

0800b9c8 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b9c8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800b9cc:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800b9ce:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800b9d0:	b959      	cbnz	r1, 800b9ea <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b9d2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b9d4:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b9d6:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b9d8:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b9da:	d00d      	beq.n	800b9f8 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800b9dc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800b9e0:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800b9e2:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b9e4:	3201      	adds	r2, #1
 800b9e6:	6502      	str	r2, [r0, #80]	; 0x50
 800b9e8:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800b9ea:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b9ec:	2901      	cmp	r1, #1
 800b9ee:	d009      	beq.n	800ba04 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800b9f0:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b9f2:	2902      	cmp	r1, #2
 800b9f4:	d00e      	beq.n	800ba14 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800b9f6:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b9f8:	b2d2      	uxtb	r2, r2
 800b9fa:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800b9fc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b9fe:	3202      	adds	r2, #2
 800ba00:	6502      	str	r2, [r0, #80]	; 0x50
 800ba02:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ba04:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800ba06:	6801      	ldr	r1, [r0, #0]
 800ba08:	b2d2      	uxtb	r2, r2
 800ba0a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800ba0c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ba0e:	3201      	adds	r2, #1
 800ba10:	6502      	str	r2, [r0, #80]	; 0x50
 800ba12:	4770      	bx	lr
 800ba14:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ba16:	2a22      	cmp	r2, #34	; 0x22
 800ba18:	d01f      	beq.n	800ba5a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ba1a:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ba1c:	b289      	uxth	r1, r1
 800ba1e:	b9c1      	cbnz	r1, 800ba52 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ba20:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ba22:	b289      	uxth	r1, r1
 800ba24:	2900      	cmp	r1, #0
 800ba26:	d1e6      	bne.n	800b9f6 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ba28:	2a21      	cmp	r2, #33	; 0x21
 800ba2a:	d1e4      	bne.n	800b9f6 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba2c:	6802      	ldr	r2, [r0, #0]
{
 800ba2e:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba30:	6854      	ldr	r4, [r2, #4]
 800ba32:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ba36:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ba38:	6814      	ldr	r4, [r2, #0]
 800ba3a:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ba3e:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ba40:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ba42:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ba44:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba48:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ba4c:	f7ff ffba 	bl	800b9c4 <HAL_I2C_MemTxCpltCallback>
}
 800ba50:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ba52:	2a21      	cmp	r2, #33	; 0x21
 800ba54:	d00a      	beq.n	800ba6c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ba56:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ba58:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800ba5a:	6801      	ldr	r1, [r0, #0]
 800ba5c:	680a      	ldr	r2, [r1, #0]
 800ba5e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ba62:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800ba64:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ba66:	3201      	adds	r2, #1
 800ba68:	6502      	str	r2, [r0, #80]	; 0x50
 800ba6a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ba6c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ba6e:	6802      	ldr	r2, [r0, #0]
 800ba70:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ba74:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800ba76:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ba78:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800ba7a:	3a01      	subs	r2, #1
 800ba7c:	b292      	uxth	r2, r2
 800ba7e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800ba80:	4770      	bx	lr
 800ba82:	bf00      	nop

0800ba84 <HAL_I2C_MemRxCpltCallback>:
 800ba84:	4770      	bx	lr
 800ba86:	bf00      	nop

0800ba88 <HAL_I2C_ErrorCallback>:
 800ba88:	4770      	bx	lr
 800ba8a:	bf00      	nop

0800ba8c <HAL_I2C_AbortCpltCallback>:
 800ba8c:	4770      	bx	lr
 800ba8e:	bf00      	nop

0800ba90 <I2C_DMAAbort>:
{
 800ba90:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ba92:	4b3a      	ldr	r3, [pc, #232]	; (800bb7c <I2C_DMAAbort+0xec>)
 800ba94:	4a3a      	ldr	r2, [pc, #232]	; (800bb80 <I2C_DMAAbort+0xf0>)
 800ba96:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800ba98:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800ba9a:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ba9c:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800ba9e:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800baa0:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800baa4:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800baa6:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800baa8:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800baac:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800baae:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800bab2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bab6:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800bab8:	9301      	str	r3, [sp, #4]
 800baba:	e005      	b.n	800bac8 <I2C_DMAAbort+0x38>
    count--;
 800babc:	9b01      	ldr	r3, [sp, #4]
 800babe:	3b01      	subs	r3, #1
 800bac0:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800bac2:	6813      	ldr	r3, [r2, #0]
 800bac4:	059b      	lsls	r3, r3, #22
 800bac6:	d506      	bpl.n	800bad6 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800bac8:	9b01      	ldr	r3, [sp, #4]
 800baca:	2b00      	cmp	r3, #0
 800bacc:	d1f6      	bne.n	800babc <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800bace:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800bad0:	f043 0320 	orr.w	r3, r3, #32
 800bad4:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800bad6:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800bad8:	b34c      	cbz	r4, 800bb2e <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800bada:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800badc:	2500      	movs	r5, #0
 800bade:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800bae0:	b1f3      	cbz	r3, 800bb20 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bae2:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800bae4:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bae6:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800baea:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800baec:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800baee:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800baf0:	2400      	movs	r4, #0
 800baf2:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800baf4:	6813      	ldr	r3, [r2, #0]
 800baf6:	f023 0301 	bic.w	r3, r3, #1
 800bafa:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800bafc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800bb00:	2b60      	cmp	r3, #96	; 0x60
 800bb02:	d02a      	beq.n	800bb5a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800bb04:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800bb08:	2928      	cmp	r1, #40	; 0x28
 800bb0a:	d019      	beq.n	800bb40 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800bb0c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb0e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800bb10:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb14:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800bb18:	f7ff ffb6 	bl	800ba88 <HAL_I2C_ErrorCallback>
}
 800bb1c:	b002      	add	sp, #8
 800bb1e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb20:	6815      	ldr	r5, [r2, #0]
 800bb22:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800bb26:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800bb28:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800bb2a:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800bb2c:	e7e2      	b.n	800baf4 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800bb2e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800bb30:	b1f3      	cbz	r3, 800bb70 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb32:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800bb34:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb36:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800bb3a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800bb3c:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800bb3e:	e7d7      	b.n	800baf0 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800bb40:	6813      	ldr	r3, [r2, #0]
 800bb42:	f043 0301 	orr.w	r3, r3, #1
 800bb46:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb48:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800bb4a:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb4c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800bb50:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800bb52:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800bb54:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800bb58:	e7de      	b.n	800bb18 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800bb5a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800bb5c:	2220      	movs	r2, #32
 800bb5e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800bb62:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800bb66:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800bb68:	f7ff ff90 	bl	800ba8c <HAL_I2C_AbortCpltCallback>
}
 800bb6c:	b002      	add	sp, #8
 800bb6e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb70:	6814      	ldr	r4, [r2, #0]
 800bb72:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800bb76:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800bb78:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800bb7a:	e7bb      	b.n	800baf4 <I2C_DMAAbort+0x64>
 800bb7c:	2000007c 	.word	0x2000007c
 800bb80:	14f8b589 	.word	0x14f8b589

0800bb84 <I2C_ITError>:
{
 800bb84:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bb86:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800bb8a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800bb8e:	2b10      	cmp	r3, #16
{
 800bb90:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bb92:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800bb94:	d039      	beq.n	800bc0a <I2C_ITError+0x86>
 800bb96:	b2d9      	uxtb	r1, r3
 800bb98:	2940      	cmp	r1, #64	; 0x40
 800bb9a:	d036      	beq.n	800bc0a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800bb9c:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800bba0:	2928      	cmp	r1, #40	; 0x28
 800bba2:	d03d      	beq.n	800bc20 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800bba4:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800bba6:	6859      	ldr	r1, [r3, #4]
 800bba8:	0508      	lsls	r0, r1, #20
 800bbaa:	d407      	bmi.n	800bbbc <I2C_ITError+0x38>
 800bbac:	2a60      	cmp	r2, #96	; 0x60
 800bbae:	d005      	beq.n	800bbbc <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800bbb0:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbb2:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800bbb4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbb8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800bbbc:	2200      	movs	r2, #0
 800bbbe:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bbc0:	685a      	ldr	r2, [r3, #4]
 800bbc2:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800bbc6:	d134      	bne.n	800bc32 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800bbc8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800bbcc:	2960      	cmp	r1, #96	; 0x60
 800bbce:	d075      	beq.n	800bcbc <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800bbd0:	695a      	ldr	r2, [r3, #20]
 800bbd2:	0650      	lsls	r0, r2, #25
 800bbd4:	d505      	bpl.n	800bbe2 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bbd6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bbd8:	691b      	ldr	r3, [r3, #16]
 800bbda:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800bbdc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bbde:	3301      	adds	r3, #1
 800bbe0:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800bbe2:	4620      	mov	r0, r4
 800bbe4:	f7ff ff50 	bl	800ba88 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800bbe8:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800bbea:	0719      	lsls	r1, r3, #28
 800bbec:	d004      	beq.n	800bbf8 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bbee:	6822      	ldr	r2, [r4, #0]
 800bbf0:	6853      	ldr	r3, [r2, #4]
 800bbf2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bbf6:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800bbf8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800bbfc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bbfe:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800bc00:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800bc02:	d501      	bpl.n	800bc08 <I2C_ITError+0x84>
 800bc04:	2b28      	cmp	r3, #40	; 0x28
 800bc06:	d02f      	beq.n	800bc68 <I2C_ITError+0xe4>
}
 800bc08:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800bc0a:	2a22      	cmp	r2, #34	; 0x22
 800bc0c:	d1c6      	bne.n	800bb9c <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800bc0e:	6823      	ldr	r3, [r4, #0]
 800bc10:	681a      	ldr	r2, [r3, #0]
 800bc12:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bc16:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800bc18:	685a      	ldr	r2, [r3, #4]
 800bc1a:	0512      	lsls	r2, r2, #20
 800bc1c:	d5c8      	bpl.n	800bbb0 <I2C_ITError+0x2c>
 800bc1e:	e7cd      	b.n	800bbbc <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800bc20:	2300      	movs	r3, #0
 800bc22:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800bc24:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800bc26:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bc2a:	685a      	ldr	r2, [r3, #4]
 800bc2c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800bc30:	d0ca      	beq.n	800bbc8 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800bc32:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800bc34:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800bc36:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bc3a:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800bc3c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800bc40:	2b01      	cmp	r3, #1
 800bc42:	d01e      	beq.n	800bc82 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800bc44:	4b28      	ldr	r3, [pc, #160]	; (800bce8 <I2C_ITError+0x164>)
 800bc46:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800bc48:	f7fe fd90 	bl	800a76c <HAL_DMA_Abort_IT>
 800bc4c:	2800      	cmp	r0, #0
 800bc4e:	d0cb      	beq.n	800bbe8 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800bc50:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800bc52:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800bc54:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800bc56:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800bc58:	f023 0301 	bic.w	r3, r3, #1
 800bc5c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800bc5e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800bc62:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800bc64:	4798      	blx	r3
 800bc66:	e7bf      	b.n	800bbe8 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800bc68:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800bc6a:	4920      	ldr	r1, [pc, #128]	; (800bcec <I2C_ITError+0x168>)
 800bc6c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800bc6e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800bc70:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800bc72:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800bc74:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800bc78:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800bc7c:	f7ff fea0 	bl	800b9c0 <HAL_I2C_ListenCpltCallback>
}
 800bc80:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800bc82:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800bc84:	4b18      	ldr	r3, [pc, #96]	; (800bce8 <I2C_ITError+0x164>)
 800bc86:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800bc88:	f7fe fd70 	bl	800a76c <HAL_DMA_Abort_IT>
 800bc8c:	2800      	cmp	r0, #0
 800bc8e:	d0ab      	beq.n	800bbe8 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800bc90:	6823      	ldr	r3, [r4, #0]
 800bc92:	695a      	ldr	r2, [r3, #20]
 800bc94:	0651      	lsls	r1, r2, #25
 800bc96:	d506      	bpl.n	800bca6 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bc98:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bc9a:	691b      	ldr	r3, [r3, #16]
 800bc9c:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800bc9e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800bca0:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800bca2:	3201      	adds	r2, #1
 800bca4:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800bca6:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800bca8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800bcaa:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800bcae:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800bcb0:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800bcb2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800bcb6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800bcb8:	4798      	blx	r3
 800bcba:	e795      	b.n	800bbe8 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800bcbc:	2120      	movs	r1, #32
 800bcbe:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800bcc2:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800bcc4:	695a      	ldr	r2, [r3, #20]
 800bcc6:	0652      	lsls	r2, r2, #25
 800bcc8:	d506      	bpl.n	800bcd8 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bcca:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bccc:	691b      	ldr	r3, [r3, #16]
 800bcce:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800bcd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800bcd2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800bcd4:	3201      	adds	r2, #1
 800bcd6:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800bcd8:	681a      	ldr	r2, [r3, #0]
 800bcda:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800bcde:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800bce0:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800bce2:	f7ff fed3 	bl	800ba8c <HAL_I2C_AbortCpltCallback>
 800bce6:	e77f      	b.n	800bbe8 <I2C_ITError+0x64>
 800bce8:	0800ba91 	.word	0x0800ba91
 800bcec:	ffff0000 	.word	0xffff0000

0800bcf0 <HAL_I2C_EV_IRQHandler>:
{
 800bcf0:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800bcf2:	6803      	ldr	r3, [r0, #0]
{
 800bcf4:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800bcf6:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800bcf8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800bcfa:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bcfe:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800bd02:	2910      	cmp	r1, #16
{
 800bd04:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bd06:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800bd08:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800bd0c:	d022      	beq.n	800bd54 <HAL_I2C_EV_IRQHandler+0x64>
 800bd0e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800bd12:	d01f      	beq.n	800bd54 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800bd14:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800bd16:	2900      	cmp	r1, #0
 800bd18:	f000 8094 	beq.w	800be44 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800bd1c:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800bd1e:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800bd20:	f011 0602 	ands.w	r6, r1, #2
 800bd24:	d059      	beq.n	800bdda <HAL_I2C_EV_IRQHandler+0xea>
 800bd26:	0586      	lsls	r6, r0, #22
 800bd28:	d559      	bpl.n	800bdde <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800bd2a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bd2c:	b102      	cbz	r2, 800bd30 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800bd2e:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800bd30:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800bd34:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800bd38:	2a28      	cmp	r2, #40	; 0x28
 800bd3a:	f000 821e 	beq.w	800c17a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd3e:	2200      	movs	r2, #0
 800bd40:	920c      	str	r2, [sp, #48]	; 0x30
 800bd42:	6959      	ldr	r1, [r3, #20]
 800bd44:	910c      	str	r1, [sp, #48]	; 0x30
 800bd46:	699b      	ldr	r3, [r3, #24]
 800bd48:	930c      	str	r3, [sp, #48]	; 0x30
 800bd4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800bd4c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800bd50:	b00e      	add	sp, #56	; 0x38
 800bd52:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800bd54:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800bd56:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800bd58:	f011 0f01 	tst.w	r1, #1
 800bd5c:	d11a      	bne.n	800bd94 <HAL_I2C_EV_IRQHandler+0xa4>
 800bd5e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800bd62:	d0f5      	beq.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800bd64:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800bd68:	d0f2      	beq.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800bd6a:	070d      	lsls	r5, r1, #28
 800bd6c:	d56d      	bpl.n	800be4a <HAL_I2C_EV_IRQHandler+0x15a>
 800bd6e:	0585      	lsls	r5, r0, #22
 800bd70:	f140 8083 	bpl.w	800be7a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800bd74:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800bd76:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800bd78:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800bd7a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800bd7c:	2900      	cmp	r1, #0
 800bd7e:	f000 81e3 	beq.w	800c148 <HAL_I2C_EV_IRQHandler+0x458>
 800bd82:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800bd84:	2a00      	cmp	r2, #0
 800bd86:	f000 81df 	beq.w	800c148 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800bd8a:	685a      	ldr	r2, [r3, #4]
 800bd8c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bd90:	605a      	str	r2, [r3, #4]
 800bd92:	e7dd      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800bd94:	0585      	lsls	r5, r0, #22
 800bd96:	d56e      	bpl.n	800be76 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800bd98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bd9a:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800bd9e:	f000 81e9 	beq.w	800c174 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800bda2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bda4:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800bda8:	bf04      	itt	eq
 800bdaa:	2208      	moveq	r2, #8
 800bdac:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bdae:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800bdb2:	2a40      	cmp	r2, #64	; 0x40
 800bdb4:	f000 81d7 	beq.w	800c166 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800bdb8:	6922      	ldr	r2, [r4, #16]
 800bdba:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800bdbe:	f000 81b2 	beq.w	800c126 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800bdc2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800bdc4:	2a00      	cmp	r2, #0
 800bdc6:	f040 81ef 	bne.w	800c1a8 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800bdca:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800bdcc:	11d2      	asrs	r2, r2, #7
 800bdce:	f002 0206 	and.w	r2, r2, #6
 800bdd2:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800bdd6:	611a      	str	r2, [r3, #16]
 800bdd8:	e7ba      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800bdda:	06cd      	lsls	r5, r1, #27
 800bddc:	d47c      	bmi.n	800bed8 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800bdde:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800bde2:	2a21      	cmp	r2, #33	; 0x21
 800bde4:	f000 80f5 	beq.w	800bfd2 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800bde8:	064e      	lsls	r6, r1, #25
 800bdea:	f140 8132 	bpl.w	800c052 <HAL_I2C_EV_IRQHandler+0x362>
 800bdee:	0545      	lsls	r5, r0, #21
 800bdf0:	f140 812f 	bpl.w	800c052 <HAL_I2C_EV_IRQHandler+0x362>
 800bdf4:	0749      	lsls	r1, r1, #29
 800bdf6:	f100 812f 	bmi.w	800c058 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bdfa:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800bdfe:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800be00:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800be02:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800be04:	2a00      	cmp	r2, #0
 800be06:	d0a3      	beq.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800be08:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800be0a:	691b      	ldr	r3, [r3, #16]
 800be0c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800be0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800be10:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800be12:	3b01      	subs	r3, #1
 800be14:	b29b      	uxth	r3, r3
 800be16:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800be18:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800be1a:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800be1c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800be1e:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800be20:	2b00      	cmp	r3, #0
 800be22:	d195      	bne.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800be24:	292a      	cmp	r1, #42	; 0x2a
 800be26:	d193      	bne.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800be28:	6822      	ldr	r2, [r4, #0]
 800be2a:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800be2c:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800be2e:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800be30:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800be34:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800be36:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800be38:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800be3a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800be3e:	f7ff fdbb 	bl	800b9b8 <HAL_I2C_SlaveRxCpltCallback>
 800be42:	e785      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800be44:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800be46:	6959      	ldr	r1, [r3, #20]
 800be48:	e76a      	b.n	800bd20 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800be4a:	078d      	lsls	r5, r1, #30
 800be4c:	d515      	bpl.n	800be7a <HAL_I2C_EV_IRQHandler+0x18a>
 800be4e:	0585      	lsls	r5, r0, #22
 800be50:	d513      	bpl.n	800be7a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800be52:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800be56:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800be58:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800be5a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800be5e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800be60:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800be62:	f000 81b3 	beq.w	800c1cc <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800be66:	2200      	movs	r2, #0
 800be68:	920a      	str	r2, [sp, #40]	; 0x28
 800be6a:	695a      	ldr	r2, [r3, #20]
 800be6c:	920a      	str	r2, [sp, #40]	; 0x28
 800be6e:	699b      	ldr	r3, [r3, #24]
 800be70:	930a      	str	r3, [sp, #40]	; 0x28
 800be72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800be74:	e76c      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800be76:	070d      	lsls	r5, r1, #28
 800be78:	d5e7      	bpl.n	800be4a <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800be7a:	0776      	lsls	r6, r6, #29
 800be7c:	f140 80f5 	bpl.w	800c06a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800be80:	685d      	ldr	r5, [r3, #4]
 800be82:	052d      	lsls	r5, r5, #20
 800be84:	f53f af64 	bmi.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800be88:	060e      	lsls	r6, r1, #24
 800be8a:	f140 8115 	bpl.w	800c0b8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800be8e:	0545      	lsls	r5, r0, #21
 800be90:	f140 8112 	bpl.w	800c0b8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800be94:	074e      	lsls	r6, r1, #29
 800be96:	f100 8112 	bmi.w	800c0be <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800be9a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800be9e:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800bea0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800bea4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bea6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800bea8:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800beaa:	2800      	cmp	r0, #0
 800beac:	f040 8235 	bne.w	800c31a <HAL_I2C_EV_IRQHandler+0x62a>
 800beb0:	2a21      	cmp	r2, #33	; 0x21
 800beb2:	f000 8347 	beq.w	800c544 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800beb6:	2940      	cmp	r1, #64	; 0x40
 800beb8:	f47f af4a 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800bebc:	2a22      	cmp	r2, #34	; 0x22
 800bebe:	f47f af47 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800bec2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800bec4:	b292      	uxth	r2, r2
 800bec6:	2a00      	cmp	r2, #0
 800bec8:	f000 8268 	beq.w	800c39c <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800becc:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800bed0:	2a40      	cmp	r2, #64	; 0x40
 800bed2:	f040 80b4 	bne.w	800c03e <HAL_I2C_EV_IRQHandler+0x34e>
 800bed6:	e0fc      	b.n	800c0d2 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800bed8:	0585      	lsls	r5, r0, #22
 800beda:	d580      	bpl.n	800bdde <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bedc:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bee0:	685a      	ldr	r2, [r3, #4]
 800bee2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bee6:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800bee8:	960d      	str	r6, [sp, #52]	; 0x34
 800beea:	695a      	ldr	r2, [r3, #20]
 800beec:	920d      	str	r2, [sp, #52]	; 0x34
 800beee:	681a      	ldr	r2, [r3, #0]
 800bef0:	f042 0201 	orr.w	r2, r2, #1
 800bef4:	601a      	str	r2, [r3, #0]
 800bef6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bef8:	681a      	ldr	r2, [r3, #0]
 800befa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800befe:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bf00:	685a      	ldr	r2, [r3, #4]
 800bf02:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bf04:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bf06:	d521      	bpl.n	800bf4c <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800bf08:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800bf0c:	2a22      	cmp	r2, #34	; 0x22
 800bf0e:	f000 817a 	beq.w	800c206 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800bf12:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800bf14:	6802      	ldr	r2, [r0, #0]
 800bf16:	6852      	ldr	r2, [r2, #4]
 800bf18:	b292      	uxth	r2, r2
 800bf1a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800bf1c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800bf1e:	b292      	uxth	r2, r2
 800bf20:	b11a      	cbz	r2, 800bf2a <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800bf22:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bf24:	f042 0204 	orr.w	r2, r2, #4
 800bf28:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800bf2a:	685a      	ldr	r2, [r3, #4]
 800bf2c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bf30:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800bf32:	f7fe fc2d 	bl	800a790 <HAL_DMA_GetState>
 800bf36:	2801      	cmp	r0, #1
 800bf38:	d008      	beq.n	800bf4c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800bf3a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800bf3c:	4b99      	ldr	r3, [pc, #612]	; (800c1a4 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800bf3e:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800bf40:	f7fe fc14 	bl	800a76c <HAL_DMA_Abort_IT>
 800bf44:	b110      	cbz	r0, 800bf4c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800bf46:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800bf48:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800bf4a:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800bf4c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bf4e:	b29b      	uxth	r3, r3
 800bf50:	b313      	cbz	r3, 800bf98 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800bf52:	6823      	ldr	r3, [r4, #0]
 800bf54:	695a      	ldr	r2, [r3, #20]
 800bf56:	0752      	lsls	r2, r2, #29
 800bf58:	d50a      	bpl.n	800bf70 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bf5a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bf5c:	691b      	ldr	r3, [r3, #16]
 800bf5e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800bf60:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800bf62:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800bf64:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800bf66:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800bf68:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800bf6a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800bf6c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800bf6e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800bf70:	695a      	ldr	r2, [r3, #20]
 800bf72:	0656      	lsls	r6, r2, #25
 800bf74:	d509      	bpl.n	800bf8a <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bf76:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bf78:	691b      	ldr	r3, [r3, #16]
 800bf7a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800bf7c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800bf7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800bf80:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800bf82:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800bf84:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800bf86:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800bf88:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800bf8a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bf8c:	b29b      	uxth	r3, r3
 800bf8e:	b11b      	cbz	r3, 800bf98 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800bf90:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bf92:	f043 0304 	orr.w	r3, r3, #4
 800bf96:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800bf98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bf9a:	2b00      	cmp	r3, #0
 800bf9c:	f040 80dd 	bne.w	800c15a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800bfa0:	2d2a      	cmp	r5, #42	; 0x2a
 800bfa2:	f000 8151 	beq.w	800c248 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800bfa6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800bfaa:	2b28      	cmp	r3, #40	; 0x28
 800bfac:	f000 8154 	beq.w	800c258 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800bfb0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bfb2:	2b22      	cmp	r3, #34	; 0x22
 800bfb4:	d002      	beq.n	800bfbc <HAL_I2C_EV_IRQHandler+0x2cc>
 800bfb6:	2d22      	cmp	r5, #34	; 0x22
 800bfb8:	f47f aeca 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800bfbc:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800bfbe:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800bfc0:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800bfc2:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800bfc4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800bfc8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800bfcc:	f7ff fcf4 	bl	800b9b8 <HAL_I2C_SlaveRxCpltCallback>
 800bfd0:	e6be      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800bfd2:	060d      	lsls	r5, r1, #24
 800bfd4:	d528      	bpl.n	800c028 <HAL_I2C_EV_IRQHandler+0x338>
 800bfd6:	0546      	lsls	r6, r0, #21
 800bfd8:	d526      	bpl.n	800c028 <HAL_I2C_EV_IRQHandler+0x338>
 800bfda:	074d      	lsls	r5, r1, #29
 800bfdc:	d427      	bmi.n	800c02e <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bfde:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800bfe2:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800bfe4:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800bfe6:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800bfe8:	2900      	cmp	r1, #0
 800bfea:	f43f aeb1 	beq.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800bfee:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bff0:	f811 5b01 	ldrb.w	r5, [r1], #1
 800bff4:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800bff6:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800bff8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800bffa:	3901      	subs	r1, #1
 800bffc:	b289      	uxth	r1, r1
 800bffe:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800c000:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800c002:	b289      	uxth	r1, r1
 800c004:	2900      	cmp	r1, #0
 800c006:	f47f aea3 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c00a:	2829      	cmp	r0, #41	; 0x29
 800c00c:	f47f aea0 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c010:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800c012:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c014:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c018:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800c01a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800c01c:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800c01e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800c022:	f7ff fcc7 	bl	800b9b4 <HAL_I2C_SlaveTxCpltCallback>
 800c026:	e693      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800c028:	0749      	lsls	r1, r1, #29
 800c02a:	f57f ae91 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c02e:	0582      	lsls	r2, r0, #22
 800c030:	f57f ae8e 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800c034:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c036:	b292      	uxth	r2, r2
 800c038:	2a00      	cmp	r2, #0
 800c03a:	f43f ae89 	beq.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c03e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c040:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c044:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800c046:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800c048:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800c04a:	3b01      	subs	r3, #1
 800c04c:	b29b      	uxth	r3, r3
 800c04e:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c050:	e67e      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800c052:	074a      	lsls	r2, r1, #29
 800c054:	f57f ae7c 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c058:	0586      	lsls	r6, r0, #22
 800c05a:	f57f ae79 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800c05e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c060:	b292      	uxth	r2, r2
 800c062:	2a00      	cmp	r2, #0
 800c064:	f43f ae74 	beq.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c068:	e01b      	b.n	800c0a2 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800c06a:	685a      	ldr	r2, [r3, #4]
 800c06c:	0512      	lsls	r2, r2, #20
 800c06e:	f53f ae6f 	bmi.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800c072:	064e      	lsls	r6, r1, #25
 800c074:	d433      	bmi.n	800c0de <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800c076:	0749      	lsls	r1, r1, #29
 800c078:	f57f ae6a 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c07c:	0582      	lsls	r2, r0, #22
 800c07e:	f57f ae67 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800c082:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800c084:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c086:	b292      	uxth	r2, r2
 800c088:	2a04      	cmp	r2, #4
 800c08a:	f000 8113 	beq.w	800c2b4 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800c08e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c090:	b292      	uxth	r2, r2
 800c092:	2a03      	cmp	r2, #3
 800c094:	f000 8153 	beq.w	800c33e <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800c098:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c09a:	b292      	uxth	r2, r2
 800c09c:	2a02      	cmp	r2, #2
 800c09e:	f000 8182 	beq.w	800c3a6 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c0a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c0a4:	691b      	ldr	r3, [r3, #16]
 800c0a6:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800c0a8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800c0aa:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800c0ac:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800c0ae:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800c0b0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800c0b2:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800c0b4:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800c0b6:	e64b      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800c0b8:	074d      	lsls	r5, r1, #29
 800c0ba:	f57f ae49 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c0be:	0581      	lsls	r1, r0, #22
 800c0c0:	f57f ae46 	bpl.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800c0c4:	2a21      	cmp	r2, #33	; 0x21
 800c0c6:	f000 80fd 	beq.w	800c2c4 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800c0ca:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800c0ce:	f47f ae3f 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800c0d2:	4620      	mov	r0, r4
}
 800c0d4:	b00e      	add	sp, #56	; 0x38
 800c0d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800c0da:	f7ff bc75 	b.w	800b9c8 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800c0de:	0545      	lsls	r5, r0, #21
 800c0e0:	d5c9      	bpl.n	800c076 <HAL_I2C_EV_IRQHandler+0x386>
 800c0e2:	f011 0104 	ands.w	r1, r1, #4
 800c0e6:	d1c9      	bne.n	800c07c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800c0e8:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800c0ec:	2a22      	cmp	r2, #34	; 0x22
 800c0ee:	f47f ae2f 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800c0f2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c0f4:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800c0f6:	2a03      	cmp	r2, #3
 800c0f8:	f240 81ec 	bls.w	800c4d4 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c0fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c0fe:	691b      	ldr	r3, [r3, #16]
 800c100:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800c102:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c104:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c106:	3b01      	subs	r3, #1
 800c108:	b29b      	uxth	r3, r3
 800c10a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800c10c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c10e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800c110:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800c112:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800c114:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800c116:	f47f ae1b 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c11a:	6822      	ldr	r2, [r4, #0]
 800c11c:	6853      	ldr	r3, [r2, #4]
 800c11e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c122:	6053      	str	r3, [r2, #4]
 800c124:	e614      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800c126:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800c12a:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800c12c:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800c12e:	bf16      	itet	ne
 800c130:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800c134:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800c138:	b2d2      	uxtbne	r2, r2
 800c13a:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800c13c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800c13e:	b11a      	cbz	r2, 800c148 <HAL_I2C_EV_IRQHandler+0x458>
 800c140:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800c142:	2a00      	cmp	r2, #0
 800c144:	f47f ae21 	bne.w	800bd8a <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800c148:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c14a:	2a00      	cmp	r2, #0
 800c14c:	f43f ae00 	beq.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c150:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800c152:	2a00      	cmp	r2, #0
 800c154:	f47f ae19 	bne.w	800bd8a <HAL_I2C_EV_IRQHandler+0x9a>
 800c158:	e5fa      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800c15a:	4620      	mov	r0, r4
}
 800c15c:	b00e      	add	sp, #56	; 0x38
 800c15e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800c162:	f7ff bd0f 	b.w	800bb84 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800c166:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800c168:	bb52      	cbnz	r2, 800c1c0 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800c16a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800c16c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800c170:	611a      	str	r2, [r3, #16]
 800c172:	e5ed      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800c174:	2201      	movs	r2, #1
 800c176:	62e2      	str	r2, [r4, #44]	; 0x2c
 800c178:	e619      	b.n	800bdae <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800c17a:	685a      	ldr	r2, [r3, #4]
 800c17c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c180:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800c182:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800c184:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800c188:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800c18c:	bf54      	ite	pl
 800c18e:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800c190:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800c192:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800c196:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800c19a:	4620      	mov	r0, r4
 800c19c:	f7ff fc0e 	bl	800b9bc <HAL_I2C_AddrCallback>
 800c1a0:	e5d6      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c1a2:	bf00      	nop
 800c1a4:	0800ba91 	.word	0x0800ba91
      else if (hi2c->EventCount == 1U)
 800c1a8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800c1aa:	2a01      	cmp	r2, #1
 800c1ac:	f47f add0 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800c1b0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800c1b2:	11d2      	asrs	r2, r2, #7
 800c1b4:	f002 0206 	and.w	r2, r2, #6
 800c1b8:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800c1bc:	611a      	str	r2, [r3, #16]
 800c1be:	e5c7      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800c1c0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800c1c2:	f042 0201 	orr.w	r2, r2, #1
 800c1c6:	b2d2      	uxtb	r2, r2
 800c1c8:	611a      	str	r2, [r3, #16]
 800c1ca:	e5c1      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800c1cc:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800c1ce:	b911      	cbnz	r1, 800c1d6 <HAL_I2C_EV_IRQHandler+0x4e6>
 800c1d0:	2a40      	cmp	r2, #64	; 0x40
 800c1d2:	f000 809b 	beq.w	800c30c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800c1d6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800c1d8:	b922      	cbnz	r2, 800c1e4 <HAL_I2C_EV_IRQHandler+0x4f4>
 800c1da:	6921      	ldr	r1, [r4, #16]
 800c1dc:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800c1e0:	f000 809f 	beq.w	800c322 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800c1e4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c1e6:	b292      	uxth	r2, r2
 800c1e8:	2a00      	cmp	r2, #0
 800c1ea:	d142      	bne.n	800c272 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c1ec:	9203      	str	r2, [sp, #12]
 800c1ee:	695a      	ldr	r2, [r3, #20]
 800c1f0:	9203      	str	r2, [sp, #12]
 800c1f2:	699a      	ldr	r2, [r3, #24]
 800c1f4:	9203      	str	r2, [sp, #12]
 800c1f6:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c1f8:	681a      	ldr	r2, [r3, #0]
 800c1fa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c1fe:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800c200:	2300      	movs	r3, #0
 800c202:	6523      	str	r3, [r4, #80]	; 0x50
 800c204:	e5a4      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800c206:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c208:	6802      	ldr	r2, [r0, #0]
 800c20a:	6852      	ldr	r2, [r2, #4]
 800c20c:	b292      	uxth	r2, r2
 800c20e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800c210:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c212:	b292      	uxth	r2, r2
 800c214:	b11a      	cbz	r2, 800c21e <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800c216:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c218:	f042 0204 	orr.w	r2, r2, #4
 800c21c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800c21e:	685a      	ldr	r2, [r3, #4]
 800c220:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800c224:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800c226:	f7fe fab3 	bl	800a790 <HAL_DMA_GetState>
 800c22a:	2801      	cmp	r0, #1
 800c22c:	f43f ae8e 	beq.w	800bf4c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800c230:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c232:	4b98      	ldr	r3, [pc, #608]	; (800c494 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800c234:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800c236:	f7fe fa99 	bl	800a76c <HAL_DMA_Abort_IT>
 800c23a:	2800      	cmp	r0, #0
 800c23c:	f43f ae86 	beq.w	800bf4c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800c240:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c242:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c244:	4798      	blx	r3
 800c246:	e681      	b.n	800bf4c <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800c248:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800c24a:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800c24c:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800c24e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800c252:	f7ff fbb1 	bl	800b9b8 <HAL_I2C_SlaveRxCpltCallback>
 800c256:	e6a6      	b.n	800bfa6 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800c258:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c25a:	498f      	ldr	r1, [pc, #572]	; (800c498 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800c25c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800c25e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800c260:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800c262:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800c264:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c268:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800c26c:	f7ff fba8 	bl	800b9c0 <HAL_I2C_ListenCpltCallback>
 800c270:	e56e      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800c272:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c274:	b292      	uxth	r2, r2
 800c276:	2a01      	cmp	r2, #1
 800c278:	d070      	beq.n	800c35c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800c27a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c27c:	b292      	uxth	r2, r2
 800c27e:	2a02      	cmp	r2, #2
 800c280:	f000 80d6 	beq.w	800c430 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c284:	681a      	ldr	r2, [r3, #0]
 800c286:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800c28a:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800c28c:	685a      	ldr	r2, [r3, #4]
 800c28e:	0511      	lsls	r1, r2, #20
 800c290:	d508      	bpl.n	800c2a4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800c292:	2820      	cmp	r0, #32
 800c294:	f200 80f8 	bhi.w	800c488 <HAL_I2C_EV_IRQHandler+0x798>
 800c298:	2807      	cmp	r0, #7
 800c29a:	f200 80ea 	bhi.w	800c472 <HAL_I2C_EV_IRQHandler+0x782>
 800c29e:	2801      	cmp	r0, #1
 800c2a0:	f000 80ed 	beq.w	800c47e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c2a4:	2200      	movs	r2, #0
 800c2a6:	9209      	str	r2, [sp, #36]	; 0x24
 800c2a8:	695a      	ldr	r2, [r3, #20]
 800c2aa:	9209      	str	r2, [sp, #36]	; 0x24
 800c2ac:	699b      	ldr	r3, [r3, #24]
 800c2ae:	9309      	str	r3, [sp, #36]	; 0x24
 800c2b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2b2:	e7a5      	b.n	800c200 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c2b4:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c2b6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c2b8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c2bc:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c2be:	691b      	ldr	r3, [r3, #16]
 800c2c0:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800c2c2:	e6f1      	b.n	800c0a8 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800c2c4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800c2c6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800c2ca:	2a21      	cmp	r2, #33	; 0x21
 800c2cc:	f47f ad40 	bne.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800c2d0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800c2d2:	b292      	uxth	r2, r2
 800c2d4:	2a00      	cmp	r2, #0
 800c2d6:	f47f aeb2 	bne.w	800c03e <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800c2da:	2908      	cmp	r1, #8
 800c2dc:	f000 80e2 	beq.w	800c4a4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800c2e0:	2920      	cmp	r1, #32
 800c2e2:	f000 80df 	beq.w	800c4a4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800c2e6:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800c2ea:	f000 80db 	beq.w	800c4a4 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c2ee:	6859      	ldr	r1, [r3, #4]
 800c2f0:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800c2f4:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800c2f6:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800c2f8:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800c2fa:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800c2fc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800c300:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800c302:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800c306:	f7ff fb51 	bl	800b9ac <HAL_I2C_MasterTxCpltCallback>
 800c30a:	e521      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c30c:	9101      	str	r1, [sp, #4]
 800c30e:	695a      	ldr	r2, [r3, #20]
 800c310:	9201      	str	r2, [sp, #4]
 800c312:	699b      	ldr	r3, [r3, #24]
 800c314:	9301      	str	r3, [sp, #4]
 800c316:	9b01      	ldr	r3, [sp, #4]
 800c318:	e51a      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800c31a:	2a21      	cmp	r2, #33	; 0x21
 800c31c:	f43f add1 	beq.w	800bec2 <HAL_I2C_EV_IRQHandler+0x1d2>
 800c320:	e5c9      	b.n	800beb6 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c322:	9202      	str	r2, [sp, #8]
 800c324:	695a      	ldr	r2, [r3, #20]
 800c326:	9202      	str	r2, [sp, #8]
 800c328:	699a      	ldr	r2, [r3, #24]
 800c32a:	9202      	str	r2, [sp, #8]
 800c32c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c32e:	681a      	ldr	r2, [r3, #0]
 800c330:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c334:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800c336:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800c338:	3301      	adds	r3, #1
 800c33a:	6523      	str	r3, [r4, #80]	; 0x50
 800c33c:	e508      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c33e:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800c340:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c342:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c346:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800c348:	f43f aeab 	beq.w	800c0a2 <HAL_I2C_EV_IRQHandler+0x3b2>
 800c34c:	2902      	cmp	r1, #2
 800c34e:	f43f aea8 	beq.w	800c0a2 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c352:	681a      	ldr	r2, [r3, #0]
 800c354:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c358:	601a      	str	r2, [r3, #0]
 800c35a:	e6a2      	b.n	800c0a2 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800c35c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800c360:	f000 811b 	beq.w	800c59a <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800c364:	2808      	cmp	r0, #8
 800c366:	f000 8108 	beq.w	800c57a <HAL_I2C_EV_IRQHandler+0x88a>
 800c36a:	2820      	cmp	r0, #32
 800c36c:	f000 8105 	beq.w	800c57a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800c370:	2d12      	cmp	r5, #18
 800c372:	f000 80ff 	beq.w	800c574 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800c376:	2810      	cmp	r0, #16
 800c378:	d804      	bhi.n	800c384 <HAL_I2C_EV_IRQHandler+0x694>
 800c37a:	4a48      	ldr	r2, [pc, #288]	; (800c49c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800c37c:	40c2      	lsrs	r2, r0
 800c37e:	07d1      	lsls	r1, r2, #31
 800c380:	f100 814c 	bmi.w	800c61c <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c384:	681a      	ldr	r2, [r3, #0]
 800c386:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c38a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c38c:	2200      	movs	r2, #0
 800c38e:	9206      	str	r2, [sp, #24]
 800c390:	695a      	ldr	r2, [r3, #20]
 800c392:	9206      	str	r2, [sp, #24]
 800c394:	699b      	ldr	r3, [r3, #24]
 800c396:	9306      	str	r3, [sp, #24]
 800c398:	9b06      	ldr	r3, [sp, #24]
 800c39a:	e731      	b.n	800c200 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800c39c:	685a      	ldr	r2, [r3, #4]
 800c39e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c3a2:	605a      	str	r2, [r3, #4]
 800c3a4:	e4d4      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800c3a6:	3901      	subs	r1, #1
 800c3a8:	290f      	cmp	r1, #15
 800c3aa:	d809      	bhi.n	800c3c0 <HAL_I2C_EV_IRQHandler+0x6d0>
 800c3ac:	e8df f001 	tbb	[pc, r1]
 800c3b0:	3608363b 	.word	0x3608363b
 800c3b4:	08080808 	.word	0x08080808
 800c3b8:	08080808 	.word	0x08080808
 800c3bc:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c3c0:	681a      	ldr	r2, [r3, #0]
 800c3c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c3c6:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c3c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c3ca:	691b      	ldr	r3, [r3, #16]
 800c3cc:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800c3ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800c3d0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c3d2:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800c3d4:	3b01      	subs	r3, #1
 800c3d6:	b29b      	uxth	r3, r3
 800c3d8:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c3da:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800c3dc:	1c51      	adds	r1, r2, #1
 800c3de:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c3e0:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800c3e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800c3e4:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800c3e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800c3e8:	3b01      	subs	r3, #1
 800c3ea:	b29b      	uxth	r3, r3
 800c3ec:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800c3ee:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800c3f0:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800c3f2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800c3f6:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800c3f8:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800c3fa:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800c3fc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800c400:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800c404:	2b40      	cmp	r3, #64	; 0x40
 800c406:	f000 80f5 	beq.w	800c5f4 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c40a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800c40c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c40e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800c412:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800c414:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800c416:	f7ff facb 	bl	800b9b0 <HAL_I2C_MasterRxCpltCallback>
 800c41a:	e499      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c41c:	681a      	ldr	r2, [r3, #0]
 800c41e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800c422:	601a      	str	r2, [r3, #0]
 800c424:	e7d0      	b.n	800c3c8 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c426:	681a      	ldr	r2, [r3, #0]
 800c428:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c42c:	601a      	str	r2, [r3, #0]
 800c42e:	e7cb      	b.n	800c3c8 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800c430:	2810      	cmp	r0, #16
 800c432:	d804      	bhi.n	800c43e <HAL_I2C_EV_IRQHandler+0x74e>
 800c434:	4a19      	ldr	r2, [pc, #100]	; (800c49c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800c436:	40c2      	lsrs	r2, r0
 800c438:	07d2      	lsls	r2, r2, #31
 800c43a:	f100 80c2 	bmi.w	800c5c2 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c43e:	681a      	ldr	r2, [r3, #0]
 800c440:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c444:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c446:	681a      	ldr	r2, [r3, #0]
 800c448:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800c44c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800c44e:	685a      	ldr	r2, [r3, #4]
 800c450:	0516      	lsls	r6, r2, #20
 800c452:	d506      	bpl.n	800c462 <HAL_I2C_EV_IRQHandler+0x772>
 800c454:	2820      	cmp	r0, #32
 800c456:	f240 80bc 	bls.w	800c5d2 <HAL_I2C_EV_IRQHandler+0x8e2>
 800c45a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800c45e:	f000 80bd 	beq.w	800c5dc <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c462:	2200      	movs	r2, #0
 800c464:	9208      	str	r2, [sp, #32]
 800c466:	695a      	ldr	r2, [r3, #20]
 800c468:	9208      	str	r2, [sp, #32]
 800c46a:	699b      	ldr	r3, [r3, #24]
 800c46c:	9308      	str	r3, [sp, #32]
 800c46e:	9b08      	ldr	r3, [sp, #32]
 800c470:	e6c6      	b.n	800c200 <HAL_I2C_EV_IRQHandler+0x510>
 800c472:	4a0b      	ldr	r2, [pc, #44]	; (800c4a0 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800c474:	3808      	subs	r0, #8
 800c476:	40c2      	lsrs	r2, r0
 800c478:	07d2      	lsls	r2, r2, #31
 800c47a:	f57f af13 	bpl.w	800c2a4 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800c47e:	685a      	ldr	r2, [r3, #4]
 800c480:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800c484:	605a      	str	r2, [r3, #4]
 800c486:	e70d      	b.n	800c2a4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800c488:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800c48c:	f47f af0a 	bne.w	800c2a4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800c490:	e7f5      	b.n	800c47e <HAL_I2C_EV_IRQHandler+0x78e>
 800c492:	bf00      	nop
 800c494:	0800ba91 	.word	0x0800ba91
 800c498:	ffff0000 	.word	0xffff0000
 800c49c:	00010014 	.word	0x00010014
 800c4a0:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c4a4:	6859      	ldr	r1, [r3, #4]
 800c4a6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800c4aa:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c4ac:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800c4ae:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800c4b0:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c4b2:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800c4b6:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800c4b8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800c4ba:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800c4be:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800c4c2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800c4c6:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800c4c8:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800c4ca:	f47f af1c 	bne.w	800c306 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800c4ce:	f7ff fa79 	bl	800b9c4 <HAL_I2C_MemTxCpltCallback>
 800c4d2:	e43d      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800c4d4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800c4d6:	2802      	cmp	r0, #2
 800c4d8:	f43f af60 	beq.w	800c39c <HAL_I2C_EV_IRQHandler+0x6ac>
 800c4dc:	2a01      	cmp	r2, #1
 800c4de:	f63f af5d 	bhi.w	800c39c <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800c4e2:	4a62      	ldr	r2, [pc, #392]	; (800c66c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800c4e4:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800c4e6:	6812      	ldr	r2, [r2, #0]
 800c4e8:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800c4ec:	fbb2 f2f0 	udiv	r2, r2, r0
 800c4f0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800c4f4:	920b      	str	r2, [sp, #44]	; 0x2c
 800c4f6:	e004      	b.n	800c502 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800c4f8:	681a      	ldr	r2, [r3, #0]
 800c4fa:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800c4fe:	f000 8092 	beq.w	800c626 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800c502:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c504:	3a01      	subs	r2, #1
 800c506:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800c508:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c50a:	2900      	cmp	r1, #0
 800c50c:	d1f4      	bne.n	800c4f8 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c50e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c510:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c512:	f042 0220 	orr.w	r2, r2, #32
 800c516:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c518:	685a      	ldr	r2, [r3, #4]
 800c51a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800c51e:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c520:	691b      	ldr	r3, [r3, #16]
 800c522:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800c524:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800c526:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c528:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800c52a:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800c52c:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800c52e:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800c530:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800c532:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800c534:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800c538:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800c53a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800c53e:	f7ff faa3 	bl	800ba88 <HAL_I2C_ErrorCallback>
 800c542:	e405      	b.n	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800c544:	2d08      	cmp	r5, #8
 800c546:	d0ad      	beq.n	800c4a4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800c548:	2d20      	cmp	r5, #32
 800c54a:	d0ab      	beq.n	800c4a4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800c54c:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800c550:	d0a8      	beq.n	800c4a4 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c552:	685a      	ldr	r2, [r3, #4]
 800c554:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800c558:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800c55a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c55c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800c55e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800c560:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c562:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800c566:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800c568:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800c56c:	f7ff fa1e 	bl	800b9ac <HAL_I2C_MasterTxCpltCallback>
 800c570:	f7ff bbee 	b.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800c574:	2801      	cmp	r0, #1
 800c576:	f43f af05 	beq.w	800c384 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c57a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c57c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c57e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c582:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c584:	9107      	str	r1, [sp, #28]
 800c586:	695a      	ldr	r2, [r3, #20]
 800c588:	9207      	str	r2, [sp, #28]
 800c58a:	699a      	ldr	r2, [r3, #24]
 800c58c:	9207      	str	r2, [sp, #28]
 800c58e:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c590:	681a      	ldr	r2, [r3, #0]
 800c592:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c596:	601a      	str	r2, [r3, #0]
 800c598:	e632      	b.n	800c200 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c59a:	681a      	ldr	r2, [r3, #0]
 800c59c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c5a0:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800c5a2:	685a      	ldr	r2, [r3, #4]
 800c5a4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800c5a8:	d02d      	beq.n	800c606 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c5aa:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c5ac:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c5ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c5b2:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c5b4:	9104      	str	r1, [sp, #16]
 800c5b6:	695a      	ldr	r2, [r3, #20]
 800c5b8:	9204      	str	r2, [sp, #16]
 800c5ba:	699b      	ldr	r3, [r3, #24]
 800c5bc:	9304      	str	r3, [sp, #16]
 800c5be:	9b04      	ldr	r3, [sp, #16]
 800c5c0:	e61e      	b.n	800c200 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c5c2:	681a      	ldr	r2, [r3, #0]
 800c5c4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800c5c8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800c5ca:	685a      	ldr	r2, [r3, #4]
 800c5cc:	0515      	lsls	r5, r2, #20
 800c5ce:	f57f af48 	bpl.w	800c462 <HAL_I2C_EV_IRQHandler+0x772>
 800c5d2:	2807      	cmp	r0, #7
 800c5d4:	d807      	bhi.n	800c5e6 <HAL_I2C_EV_IRQHandler+0x8f6>
 800c5d6:	2801      	cmp	r0, #1
 800c5d8:	f47f af43 	bne.w	800c462 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800c5dc:	685a      	ldr	r2, [r3, #4]
 800c5de:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800c5e2:	605a      	str	r2, [r3, #4]
 800c5e4:	e73d      	b.n	800c462 <HAL_I2C_EV_IRQHandler+0x772>
 800c5e6:	4a22      	ldr	r2, [pc, #136]	; (800c670 <HAL_I2C_EV_IRQHandler+0x980>)
 800c5e8:	3808      	subs	r0, #8
 800c5ea:	40c2      	lsrs	r2, r0
 800c5ec:	07d0      	lsls	r0, r2, #31
 800c5ee:	f57f af38 	bpl.w	800c462 <HAL_I2C_EV_IRQHandler+0x772>
 800c5f2:	e7f3      	b.n	800c5dc <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c5f4:	2300      	movs	r3, #0
 800c5f6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800c5fa:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800c5fc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800c5fe:	f7ff fa41 	bl	800ba84 <HAL_I2C_MemRxCpltCallback>
 800c602:	f7ff bba5 	b.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c606:	9205      	str	r2, [sp, #20]
 800c608:	695a      	ldr	r2, [r3, #20]
 800c60a:	9205      	str	r2, [sp, #20]
 800c60c:	699a      	ldr	r2, [r3, #24]
 800c60e:	9205      	str	r2, [sp, #20]
 800c610:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c612:	681a      	ldr	r2, [r3, #0]
 800c614:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c618:	601a      	str	r2, [r3, #0]
 800c61a:	e5f1      	b.n	800c200 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c61c:	681a      	ldr	r2, [r3, #0]
 800c61e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800c622:	601a      	str	r2, [r3, #0]
 800c624:	e6b2      	b.n	800c38c <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c626:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c628:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c62a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c62e:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c630:	6859      	ldr	r1, [r3, #4]
 800c632:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800c636:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c638:	691b      	ldr	r3, [r3, #16]
 800c63a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800c63c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800c63e:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800c640:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800c642:	b29b      	uxth	r3, r3
 800c644:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800c646:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800c64a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800c64c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800c650:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800c652:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800c654:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800c656:	f47f aed9 	bne.w	800c40c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800c65a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800c65e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800c660:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800c662:	f7ff fa0f 	bl	800ba84 <HAL_I2C_MemRxCpltCallback>
 800c666:	f7ff bb73 	b.w	800bd50 <HAL_I2C_EV_IRQHandler+0x60>
 800c66a:	bf00      	nop
 800c66c:	2000007c 	.word	0x2000007c
 800c670:	01000101 	.word	0x01000101

0800c674 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800c674:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800c678:	2a20      	cmp	r2, #32
{
 800c67a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c67c:	fa5f fc82 	uxtb.w	ip, r2
 800c680:	d001      	beq.n	800c686 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800c682:	2002      	movs	r0, #2
  }
}
 800c684:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800c686:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800c688:	2024      	movs	r0, #36	; 0x24
 800c68a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800c68e:	6810      	ldr	r0, [r2, #0]
 800c690:	f020 0001 	bic.w	r0, r0, #1
 800c694:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800c696:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800c698:	f020 0010 	bic.w	r0, r0, #16
 800c69c:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800c69e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800c6a0:	4301      	orrs	r1, r0
 800c6a2:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800c6a4:	6811      	ldr	r1, [r2, #0]
 800c6a6:	f041 0101 	orr.w	r1, r1, #1
 800c6aa:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800c6ac:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c6ae:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800c6b2:	4770      	bx	lr

0800c6b4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800c6b4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800c6b8:	2a20      	cmp	r2, #32
 800c6ba:	d001      	beq.n	800c6c0 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800c6bc:	2002      	movs	r0, #2
  }
}
 800c6be:	4770      	bx	lr
{
 800c6c0:	b410      	push	{r4}
 800c6c2:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800c6c6:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800c6c8:	2224      	movs	r2, #36	; 0x24
 800c6ca:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800c6ce:	6822      	ldr	r2, [r4, #0]
 800c6d0:	f022 0201 	bic.w	r2, r2, #1
 800c6d4:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800c6d6:	4603      	mov	r3, r0
 800c6d8:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800c6da:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800c6de:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800c6e0:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800c6e2:	b289      	uxth	r1, r1
 800c6e4:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800c6e6:	6822      	ldr	r2, [r4, #0]
 800c6e8:	f042 0201 	orr.w	r2, r2, #1
 800c6ec:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c6ee:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800c6f2:	2000      	movs	r0, #0
}
 800c6f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c6f8:	4770      	bx	lr
 800c6fa:	bf00      	nop

0800c6fc <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800c6fc:	2800      	cmp	r0, #0
 800c6fe:	d069      	beq.n	800c7d4 <HAL_LTDC_Init+0xd8>
{
 800c700:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800c702:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800c706:	4604      	mov	r4, r0
 800c708:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c70c:	2b00      	cmp	r3, #0
 800c70e:	d05c      	beq.n	800c7ca <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c710:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800c712:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c714:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c718:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800c71c:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c71e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800c720:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800c724:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800c728:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c72a:	6999      	ldr	r1, [r3, #24]
 800c72c:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800c72e:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c730:	430a      	orrs	r2, r1
 800c732:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800c734:	689a      	ldr	r2, [r3, #8]
 800c736:	4928      	ldr	r1, [pc, #160]	; (800c7d8 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800c738:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800c73a:	400a      	ands	r2, r1
 800c73c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800c73e:	689a      	ldr	r2, [r3, #8]
 800c740:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c744:	69a0      	ldr	r0, [r4, #24]
 800c746:	4302      	orrs	r2, r0
 800c748:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800c74a:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800c74c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800c74e:	400a      	ands	r2, r1
 800c750:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800c752:	68da      	ldr	r2, [r3, #12]
 800c754:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c758:	6a20      	ldr	r0, [r4, #32]
 800c75a:	4302      	orrs	r2, r0
 800c75c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800c75e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800c760:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800c762:	400a      	ands	r2, r1
 800c764:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800c766:	691a      	ldr	r2, [r3, #16]
 800c768:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c76c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c76e:	4302      	orrs	r2, r0
 800c770:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800c772:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800c774:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800c776:	400a      	ands	r2, r1
 800c778:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800c77a:	695a      	ldr	r2, [r3, #20]
 800c77c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c77e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c782:	430a      	orrs	r2, r1
 800c784:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800c786:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800c788:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800c78c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800c790:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800c794:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800c796:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800c798:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800c79c:	432a      	orrs	r2, r5
 800c79e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800c7a2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800c7a6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800c7a8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c7aa:	f042 0206 	orr.w	r2, r2, #6
 800c7ae:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800c7b0:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800c7b2:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800c7b6:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800c7b8:	ea42 020c 	orr.w	r2, r2, ip
 800c7bc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800c7be:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800c7c2:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800c7c6:	4608      	mov	r0, r1
}
 800c7c8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800c7ca:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800c7ce:	f7f5 fd55 	bl	800227c <HAL_LTDC_MspInit>
 800c7d2:	e79d      	b.n	800c710 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800c7d4:	2001      	movs	r0, #1
}
 800c7d6:	4770      	bx	lr
 800c7d8:	f000f800 	.word	0xf000f800

0800c7dc <HAL_LTDC_ErrorCallback>:
 800c7dc:	4770      	bx	lr
 800c7de:	bf00      	nop

0800c7e0 <HAL_LTDC_ReloadEventCallback>:
 800c7e0:	4770      	bx	lr
 800c7e2:	bf00      	nop

0800c7e4 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800c7e4:	6803      	ldr	r3, [r0, #0]
{
 800c7e6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800c7e8:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800c7ea:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800c7ec:	076a      	lsls	r2, r5, #29
{
 800c7ee:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800c7f0:	d501      	bpl.n	800c7f6 <HAL_LTDC_IRQHandler+0x12>
 800c7f2:	0771      	lsls	r1, r6, #29
 800c7f4:	d41d      	bmi.n	800c832 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800c7f6:	07aa      	lsls	r2, r5, #30
 800c7f8:	d501      	bpl.n	800c7fe <HAL_LTDC_IRQHandler+0x1a>
 800c7fa:	07b3      	lsls	r3, r6, #30
 800c7fc:	d42d      	bmi.n	800c85a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800c7fe:	07e8      	lsls	r0, r5, #31
 800c800:	d501      	bpl.n	800c806 <HAL_LTDC_IRQHandler+0x22>
 800c802:	07f1      	lsls	r1, r6, #31
 800c804:	d440      	bmi.n	800c888 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800c806:	072a      	lsls	r2, r5, #28
 800c808:	d501      	bpl.n	800c80e <HAL_LTDC_IRQHandler+0x2a>
 800c80a:	0733      	lsls	r3, r6, #28
 800c80c:	d400      	bmi.n	800c810 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800c80e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800c810:	6823      	ldr	r3, [r4, #0]
 800c812:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800c814:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800c816:	f022 0208 	bic.w	r2, r2, #8
 800c81a:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800c81c:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800c81e:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800c820:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800c822:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c826:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800c82a:	4620      	mov	r0, r4
 800c82c:	f7ff ffd8 	bl	800c7e0 <HAL_LTDC_ReloadEventCallback>
}
 800c830:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800c832:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c834:	f022 0204 	bic.w	r2, r2, #4
 800c838:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800c83a:	2204      	movs	r2, #4
 800c83c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800c83e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800c842:	f043 0301 	orr.w	r3, r3, #1
 800c846:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800c84a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c84c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c850:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800c854:	f7ff ffc2 	bl	800c7dc <HAL_LTDC_ErrorCallback>
 800c858:	e7cd      	b.n	800c7f6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800c85a:	6823      	ldr	r3, [r4, #0]
 800c85c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c85e:	f022 0202 	bic.w	r2, r2, #2
 800c862:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800c864:	2202      	movs	r2, #2
 800c866:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800c868:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800c86c:	f043 0302 	orr.w	r3, r3, #2
 800c870:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c874:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800c876:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c878:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c87c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800c880:	4620      	mov	r0, r4
 800c882:	f7ff ffab 	bl	800c7dc <HAL_LTDC_ErrorCallback>
 800c886:	e7ba      	b.n	800c7fe <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c888:	6823      	ldr	r3, [r4, #0]
 800c88a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c88c:	f022 0201 	bic.w	r2, r2, #1
 800c890:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800c892:	2201      	movs	r2, #1
 800c894:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800c896:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800c898:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800c89c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800c8a0:	4620      	mov	r0, r4
 800c8a2:	f7f6 fd45 	bl	8003330 <HAL_LTDC_LineEventCallback>
 800c8a6:	e7ae      	b.n	800c806 <HAL_LTDC_IRQHandler+0x22>

0800c8a8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800c8a8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c8ac:	2b01      	cmp	r3, #1
 800c8ae:	f000 80c2 	beq.w	800ca36 <HAL_LTDC_ConfigLayer+0x18e>
{
 800c8b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c8b6:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c8ba:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c8be:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c8c2:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c8c4:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c8c6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c8ca:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800c8ce:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c8d2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800c8d6:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c8da:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800c8de:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c8e0:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c8e4:	460c      	mov	r4, r1
 800c8e6:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c8e8:	9301      	str	r3, [sp, #4]
 800c8ea:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c8ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c8ee:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800c8f2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c8f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c8f8:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c8fa:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c8fe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c900:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c904:	6823      	ldr	r3, [r4, #0]
 800c906:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c90a:	9b01      	ldr	r3, [sp, #4]
 800c90c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c910:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c914:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c916:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800c918:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c91c:	1c51      	adds	r1, r2, #1
 800c91e:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800c922:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c924:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c926:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c92a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c92e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800c932:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800c936:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800c93a:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c93e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c942:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c944:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c946:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800c94a:	3301      	adds	r3, #1
 800c94c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800c950:	4403      	add	r3, r0
 800c952:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c956:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c95a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c95e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c960:	f023 0307 	bic.w	r3, r3, #7
 800c964:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c968:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c96c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c970:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800c974:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800c978:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c97c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800c980:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800c984:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800c988:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c98c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800c990:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800c994:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800c998:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800c99c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800c9a0:	696b      	ldr	r3, [r5, #20]
 800c9a2:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800c9a6:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800c9aa:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800c9ae:	f023 0307 	bic.w	r3, r3, #7
 800c9b2:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800c9b6:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800c9ba:	4303      	orrs	r3, r0
 800c9bc:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c9c0:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c9c4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c9c6:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c9ca:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c9ce:	bb69      	cbnz	r1, 800ca2c <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800c9d0:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c9d2:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c9d4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c9d6:	fb03 f707 	mul.w	r7, r3, r7
 800c9da:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c9dc:	fb02 f303 	mul.w	r3, r2, r3
 800c9e0:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c9e4:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c9e8:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c9ea:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800c9ee:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c9f2:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800c9f6:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800c9fa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800c9fe:	f023 0307 	bic.w	r3, r3, #7
 800ca02:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800ca06:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800ca0a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800ca0e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800ca10:	4313      	orrs	r3, r2
 800ca12:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800ca16:	2300      	movs	r3, #0
  return HAL_OK;
 800ca18:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800ca1a:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800ca1e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ca22:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800ca26:	b003      	add	sp, #12
 800ca28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800ca2c:	3901      	subs	r1, #1
 800ca2e:	2906      	cmp	r1, #6
 800ca30:	d903      	bls.n	800ca3a <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ca32:	2301      	movs	r3, #1
 800ca34:	e7cd      	b.n	800c9d2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800ca36:	2002      	movs	r0, #2
}
 800ca38:	4770      	bx	lr
 800ca3a:	4b02      	ldr	r3, [pc, #8]	; (800ca44 <HAL_LTDC_ConfigLayer+0x19c>)
 800ca3c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800ca40:	e7c7      	b.n	800c9d2 <HAL_LTDC_ConfigLayer+0x12a>
 800ca42:	bf00      	nop
 800ca44:	0803044c 	.word	0x0803044c

0800ca48 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800ca48:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ca4c:	2b01      	cmp	r3, #1
 800ca4e:	d019      	beq.n	800ca84 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ca50:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ca52:	2302      	movs	r3, #2
{
 800ca54:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ca56:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ca5a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800ca5c:	4c0a      	ldr	r4, [pc, #40]	; (800ca88 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ca5e:	f023 0301 	bic.w	r3, r3, #1
 800ca62:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800ca64:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ca66:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800ca68:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ca6a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800ca6e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ca72:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800ca74:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ca78:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800ca7c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800ca80:	4618      	mov	r0, r3
}
 800ca82:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800ca84:	2002      	movs	r0, #2
}
 800ca86:	4770      	bx	lr
 800ca88:	40016800 	.word	0x40016800

0800ca8c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800ca8c:	2800      	cmp	r0, #0
 800ca8e:	f000 81a2 	beq.w	800cdd6 <HAL_RCC_OscConfig+0x34a>
{
 800ca92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ca96:	6803      	ldr	r3, [r0, #0]
 800ca98:	07dd      	lsls	r5, r3, #31
{
 800ca9a:	b082      	sub	sp, #8
 800ca9c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ca9e:	d52f      	bpl.n	800cb00 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800caa0:	499e      	ldr	r1, [pc, #632]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800caa2:	688a      	ldr	r2, [r1, #8]
 800caa4:	f002 020c 	and.w	r2, r2, #12
 800caa8:	2a04      	cmp	r2, #4
 800caaa:	f000 80ed 	beq.w	800cc88 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800caae:	688a      	ldr	r2, [r1, #8]
 800cab0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800cab4:	2a08      	cmp	r2, #8
 800cab6:	f000 80e3 	beq.w	800cc80 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800caba:	6863      	ldr	r3, [r4, #4]
 800cabc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800cac0:	f000 80ec 	beq.w	800cc9c <HAL_RCC_OscConfig+0x210>
 800cac4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800cac8:	f000 8175 	beq.w	800cdb6 <HAL_RCC_OscConfig+0x32a>
 800cacc:	4d93      	ldr	r5, [pc, #588]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cace:	682a      	ldr	r2, [r5, #0]
 800cad0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800cad4:	602a      	str	r2, [r5, #0]
 800cad6:	682a      	ldr	r2, [r5, #0]
 800cad8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800cadc:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800cade:	2b00      	cmp	r3, #0
 800cae0:	f040 80e1 	bne.w	800cca6 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800cae4:	f7fd fdb8 	bl	800a658 <HAL_GetTick>
 800cae8:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800caea:	e005      	b.n	800caf8 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800caec:	f7fd fdb4 	bl	800a658 <HAL_GetTick>
 800caf0:	1b80      	subs	r0, r0, r6
 800caf2:	2864      	cmp	r0, #100	; 0x64
 800caf4:	f200 8101 	bhi.w	800ccfa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800caf8:	682b      	ldr	r3, [r5, #0]
 800cafa:	039b      	lsls	r3, r3, #14
 800cafc:	d4f6      	bmi.n	800caec <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800cafe:	6823      	ldr	r3, [r4, #0]
 800cb00:	079f      	lsls	r7, r3, #30
 800cb02:	d528      	bpl.n	800cb56 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800cb04:	4a85      	ldr	r2, [pc, #532]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cb06:	6891      	ldr	r1, [r2, #8]
 800cb08:	f011 0f0c 	tst.w	r1, #12
 800cb0c:	f000 8090 	beq.w	800cc30 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800cb10:	6891      	ldr	r1, [r2, #8]
 800cb12:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800cb16:	2908      	cmp	r1, #8
 800cb18:	f000 8086 	beq.w	800cc28 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800cb1c:	68e3      	ldr	r3, [r4, #12]
 800cb1e:	2b00      	cmp	r3, #0
 800cb20:	f000 810e 	beq.w	800cd40 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800cb24:	4b7e      	ldr	r3, [pc, #504]	; (800cd20 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800cb26:	4e7d      	ldr	r6, [pc, #500]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800cb28:	2201      	movs	r2, #1
 800cb2a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800cb2c:	f7fd fd94 	bl	800a658 <HAL_GetTick>
 800cb30:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800cb32:	e005      	b.n	800cb40 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800cb34:	f7fd fd90 	bl	800a658 <HAL_GetTick>
 800cb38:	1b40      	subs	r0, r0, r5
 800cb3a:	2802      	cmp	r0, #2
 800cb3c:	f200 80dd 	bhi.w	800ccfa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800cb40:	6833      	ldr	r3, [r6, #0]
 800cb42:	0798      	lsls	r0, r3, #30
 800cb44:	d5f6      	bpl.n	800cb34 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800cb46:	6833      	ldr	r3, [r6, #0]
 800cb48:	6922      	ldr	r2, [r4, #16]
 800cb4a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800cb4e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800cb52:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800cb54:	6823      	ldr	r3, [r4, #0]
 800cb56:	071a      	lsls	r2, r3, #28
 800cb58:	d451      	bmi.n	800cbfe <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800cb5a:	0758      	lsls	r0, r3, #29
 800cb5c:	d52f      	bpl.n	800cbbe <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800cb5e:	4a6f      	ldr	r2, [pc, #444]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cb60:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800cb62:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800cb66:	d07f      	beq.n	800cc68 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800cb68:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800cb6a:	4e6e      	ldr	r6, [pc, #440]	; (800cd24 <HAL_RCC_OscConfig+0x298>)
 800cb6c:	6833      	ldr	r3, [r6, #0]
 800cb6e:	05d9      	lsls	r1, r3, #23
 800cb70:	f140 80b3 	bpl.w	800ccda <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800cb74:	68a3      	ldr	r3, [r4, #8]
 800cb76:	2b01      	cmp	r3, #1
 800cb78:	f000 80c3 	beq.w	800cd02 <HAL_RCC_OscConfig+0x276>
 800cb7c:	2b05      	cmp	r3, #5
 800cb7e:	f000 812c 	beq.w	800cdda <HAL_RCC_OscConfig+0x34e>
 800cb82:	4e66      	ldr	r6, [pc, #408]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cb84:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800cb86:	f022 0201 	bic.w	r2, r2, #1
 800cb8a:	6732      	str	r2, [r6, #112]	; 0x70
 800cb8c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800cb8e:	f022 0204 	bic.w	r2, r2, #4
 800cb92:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800cb94:	2b00      	cmp	r3, #0
 800cb96:	f040 80b9 	bne.w	800cd0c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800cb9a:	f7fd fd5d 	bl	800a658 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cb9e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800cba2:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800cba4:	e005      	b.n	800cbb2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cba6:	f7fd fd57 	bl	800a658 <HAL_GetTick>
 800cbaa:	1bc0      	subs	r0, r0, r7
 800cbac:	4540      	cmp	r0, r8
 800cbae:	f200 80a4 	bhi.w	800ccfa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800cbb2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800cbb4:	0798      	lsls	r0, r3, #30
 800cbb6:	d4f6      	bmi.n	800cba6 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800cbb8:	2d00      	cmp	r5, #0
 800cbba:	f040 8106 	bne.w	800cdca <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800cbbe:	69a0      	ldr	r0, [r4, #24]
 800cbc0:	b1c8      	cbz	r0, 800cbf6 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800cbc2:	4d56      	ldr	r5, [pc, #344]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cbc4:	68ab      	ldr	r3, [r5, #8]
 800cbc6:	f003 030c 	and.w	r3, r3, #12
 800cbca:	2b08      	cmp	r3, #8
 800cbcc:	f000 80c9 	beq.w	800cd62 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800cbd0:	4b53      	ldr	r3, [pc, #332]	; (800cd20 <HAL_RCC_OscConfig+0x294>)
 800cbd2:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800cbd4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800cbd6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800cbd8:	f000 8109 	beq.w	800cdee <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800cbdc:	f7fd fd3c 	bl	800a658 <HAL_GetTick>
 800cbe0:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800cbe2:	e005      	b.n	800cbf0 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800cbe4:	f7fd fd38 	bl	800a658 <HAL_GetTick>
 800cbe8:	1b00      	subs	r0, r0, r4
 800cbea:	2802      	cmp	r0, #2
 800cbec:	f200 8085 	bhi.w	800ccfa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800cbf0:	682b      	ldr	r3, [r5, #0]
 800cbf2:	019b      	lsls	r3, r3, #6
 800cbf4:	d4f6      	bmi.n	800cbe4 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800cbf6:	2000      	movs	r0, #0
}
 800cbf8:	b002      	add	sp, #8
 800cbfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800cbfe:	6963      	ldr	r3, [r4, #20]
 800cc00:	b30b      	cbz	r3, 800cc46 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800cc02:	4b47      	ldr	r3, [pc, #284]	; (800cd20 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800cc04:	4e45      	ldr	r6, [pc, #276]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800cc06:	2201      	movs	r2, #1
 800cc08:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800cc0c:	f7fd fd24 	bl	800a658 <HAL_GetTick>
 800cc10:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800cc12:	e004      	b.n	800cc1e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800cc14:	f7fd fd20 	bl	800a658 <HAL_GetTick>
 800cc18:	1b40      	subs	r0, r0, r5
 800cc1a:	2802      	cmp	r0, #2
 800cc1c:	d86d      	bhi.n	800ccfa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800cc1e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800cc20:	079b      	lsls	r3, r3, #30
 800cc22:	d5f7      	bpl.n	800cc14 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800cc24:	6823      	ldr	r3, [r4, #0]
 800cc26:	e798      	b.n	800cb5a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800cc28:	6852      	ldr	r2, [r2, #4]
 800cc2a:	0256      	lsls	r6, r2, #9
 800cc2c:	f53f af76 	bmi.w	800cb1c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800cc30:	4a3a      	ldr	r2, [pc, #232]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cc32:	6812      	ldr	r2, [r2, #0]
 800cc34:	0795      	lsls	r5, r2, #30
 800cc36:	d544      	bpl.n	800ccc2 <HAL_RCC_OscConfig+0x236>
 800cc38:	68e2      	ldr	r2, [r4, #12]
 800cc3a:	2a01      	cmp	r2, #1
 800cc3c:	d041      	beq.n	800ccc2 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800cc3e:	2001      	movs	r0, #1
}
 800cc40:	b002      	add	sp, #8
 800cc42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800cc46:	4a36      	ldr	r2, [pc, #216]	; (800cd20 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800cc48:	4e34      	ldr	r6, [pc, #208]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800cc4a:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800cc4e:	f7fd fd03 	bl	800a658 <HAL_GetTick>
 800cc52:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800cc54:	e004      	b.n	800cc60 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800cc56:	f7fd fcff 	bl	800a658 <HAL_GetTick>
 800cc5a:	1b40      	subs	r0, r0, r5
 800cc5c:	2802      	cmp	r0, #2
 800cc5e:	d84c      	bhi.n	800ccfa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800cc60:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800cc62:	079f      	lsls	r7, r3, #30
 800cc64:	d4f7      	bmi.n	800cc56 <HAL_RCC_OscConfig+0x1ca>
 800cc66:	e7dd      	b.n	800cc24 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800cc68:	9301      	str	r3, [sp, #4]
 800cc6a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800cc6c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800cc70:	6413      	str	r3, [r2, #64]	; 0x40
 800cc72:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800cc74:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800cc78:	9301      	str	r3, [sp, #4]
 800cc7a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800cc7c:	2501      	movs	r5, #1
 800cc7e:	e774      	b.n	800cb6a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800cc80:	684a      	ldr	r2, [r1, #4]
 800cc82:	0250      	lsls	r0, r2, #9
 800cc84:	f57f af19 	bpl.w	800caba <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800cc88:	4a24      	ldr	r2, [pc, #144]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cc8a:	6812      	ldr	r2, [r2, #0]
 800cc8c:	0391      	lsls	r1, r2, #14
 800cc8e:	f57f af37 	bpl.w	800cb00 <HAL_RCC_OscConfig+0x74>
 800cc92:	6862      	ldr	r2, [r4, #4]
 800cc94:	2a00      	cmp	r2, #0
 800cc96:	f47f af33 	bne.w	800cb00 <HAL_RCC_OscConfig+0x74>
 800cc9a:	e7d0      	b.n	800cc3e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800cc9c:	4a1f      	ldr	r2, [pc, #124]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cc9e:	6813      	ldr	r3, [r2, #0]
 800cca0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800cca4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800cca6:	f7fd fcd7 	bl	800a658 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ccaa:	4e1c      	ldr	r6, [pc, #112]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800ccac:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ccae:	e004      	b.n	800ccba <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800ccb0:	f7fd fcd2 	bl	800a658 <HAL_GetTick>
 800ccb4:	1b40      	subs	r0, r0, r5
 800ccb6:	2864      	cmp	r0, #100	; 0x64
 800ccb8:	d81f      	bhi.n	800ccfa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ccba:	6833      	ldr	r3, [r6, #0]
 800ccbc:	039a      	lsls	r2, r3, #14
 800ccbe:	d5f7      	bpl.n	800ccb0 <HAL_RCC_OscConfig+0x224>
 800ccc0:	e71d      	b.n	800cafe <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ccc2:	4916      	ldr	r1, [pc, #88]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800ccc4:	6920      	ldr	r0, [r4, #16]
 800ccc6:	680a      	ldr	r2, [r1, #0]
 800ccc8:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800cccc:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800ccd0:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ccd2:	071a      	lsls	r2, r3, #28
 800ccd4:	f57f af41 	bpl.w	800cb5a <HAL_RCC_OscConfig+0xce>
 800ccd8:	e791      	b.n	800cbfe <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800ccda:	6833      	ldr	r3, [r6, #0]
 800ccdc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cce0:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800cce2:	f7fd fcb9 	bl	800a658 <HAL_GetTick>
 800cce6:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800cce8:	6833      	ldr	r3, [r6, #0]
 800ccea:	05da      	lsls	r2, r3, #23
 800ccec:	f53f af42 	bmi.w	800cb74 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800ccf0:	f7fd fcb2 	bl	800a658 <HAL_GetTick>
 800ccf4:	1bc0      	subs	r0, r0, r7
 800ccf6:	2802      	cmp	r0, #2
 800ccf8:	d9f6      	bls.n	800cce8 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800ccfa:	2003      	movs	r0, #3
}
 800ccfc:	b002      	add	sp, #8
 800ccfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800cd02:	4a06      	ldr	r2, [pc, #24]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
 800cd04:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800cd06:	f043 0301 	orr.w	r3, r3, #1
 800cd0a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800cd0c:	f7fd fca4 	bl	800a658 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800cd10:	4f02      	ldr	r7, [pc, #8]	; (800cd1c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800cd12:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cd14:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800cd18:	e00b      	b.n	800cd32 <HAL_RCC_OscConfig+0x2a6>
 800cd1a:	bf00      	nop
 800cd1c:	40023800 	.word	0x40023800
 800cd20:	42470000 	.word	0x42470000
 800cd24:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cd28:	f7fd fc96 	bl	800a658 <HAL_GetTick>
 800cd2c:	1b80      	subs	r0, r0, r6
 800cd2e:	4540      	cmp	r0, r8
 800cd30:	d8e3      	bhi.n	800ccfa <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800cd32:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800cd34:	079b      	lsls	r3, r3, #30
 800cd36:	d5f7      	bpl.n	800cd28 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800cd38:	2d00      	cmp	r5, #0
 800cd3a:	f43f af40 	beq.w	800cbbe <HAL_RCC_OscConfig+0x132>
 800cd3e:	e044      	b.n	800cdca <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800cd40:	4a42      	ldr	r2, [pc, #264]	; (800ce4c <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800cd42:	4e43      	ldr	r6, [pc, #268]	; (800ce50 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800cd44:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800cd46:	f7fd fc87 	bl	800a658 <HAL_GetTick>
 800cd4a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800cd4c:	e004      	b.n	800cd58 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800cd4e:	f7fd fc83 	bl	800a658 <HAL_GetTick>
 800cd52:	1b40      	subs	r0, r0, r5
 800cd54:	2802      	cmp	r0, #2
 800cd56:	d8d0      	bhi.n	800ccfa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800cd58:	6833      	ldr	r3, [r6, #0]
 800cd5a:	0799      	lsls	r1, r3, #30
 800cd5c:	d4f7      	bmi.n	800cd4e <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800cd5e:	6823      	ldr	r3, [r4, #0]
 800cd60:	e6f9      	b.n	800cb56 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800cd62:	2801      	cmp	r0, #1
 800cd64:	f43f af48 	beq.w	800cbf8 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800cd68:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800cd6a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cd6c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800cd70:	4291      	cmp	r1, r2
 800cd72:	f47f af64 	bne.w	800cc3e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cd76:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800cd78:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cd7c:	4291      	cmp	r1, r2
 800cd7e:	f47f af5e 	bne.w	800cc3e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800cd82:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cd84:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800cd88:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800cd8a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800cd8e:	f47f af56 	bne.w	800cc3e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800cd92:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800cd94:	0852      	lsrs	r2, r2, #1
 800cd96:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800cd9a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800cd9c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800cda0:	f47f af4d 	bne.w	800cc3e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800cda4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cda6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800cdaa:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800cdae:	bf14      	ite	ne
 800cdb0:	2001      	movne	r0, #1
 800cdb2:	2000      	moveq	r0, #0
 800cdb4:	e720      	b.n	800cbf8 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800cdb6:	4b26      	ldr	r3, [pc, #152]	; (800ce50 <HAL_RCC_OscConfig+0x3c4>)
 800cdb8:	681a      	ldr	r2, [r3, #0]
 800cdba:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800cdbe:	601a      	str	r2, [r3, #0]
 800cdc0:	681a      	ldr	r2, [r3, #0]
 800cdc2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800cdc6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800cdc8:	e76d      	b.n	800cca6 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800cdca:	4a21      	ldr	r2, [pc, #132]	; (800ce50 <HAL_RCC_OscConfig+0x3c4>)
 800cdcc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800cdce:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800cdd2:	6413      	str	r3, [r2, #64]	; 0x40
 800cdd4:	e6f3      	b.n	800cbbe <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800cdd6:	2001      	movs	r0, #1
}
 800cdd8:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800cdda:	4b1d      	ldr	r3, [pc, #116]	; (800ce50 <HAL_RCC_OscConfig+0x3c4>)
 800cddc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800cdde:	f042 0204 	orr.w	r2, r2, #4
 800cde2:	671a      	str	r2, [r3, #112]	; 0x70
 800cde4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800cde6:	f042 0201 	orr.w	r2, r2, #1
 800cdea:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800cdec:	e78e      	b.n	800cd0c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800cdee:	f7fd fc33 	bl	800a658 <HAL_GetTick>
 800cdf2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800cdf4:	e005      	b.n	800ce02 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800cdf6:	f7fd fc2f 	bl	800a658 <HAL_GetTick>
 800cdfa:	1b80      	subs	r0, r0, r6
 800cdfc:	2802      	cmp	r0, #2
 800cdfe:	f63f af7c 	bhi.w	800ccfa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800ce02:	682b      	ldr	r3, [r5, #0]
 800ce04:	0199      	lsls	r1, r3, #6
 800ce06:	d4f6      	bmi.n	800cdf6 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800ce08:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800ce0c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ce0e:	430b      	orrs	r3, r1
 800ce10:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800ce14:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800ce18:	0852      	lsrs	r2, r2, #1
 800ce1a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800ce1e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800ce20:	490a      	ldr	r1, [pc, #40]	; (800ce4c <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800ce22:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800ce26:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800ce28:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800ce2a:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800ce2c:	f7fd fc14 	bl	800a658 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ce30:	4d07      	ldr	r5, [pc, #28]	; (800ce50 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800ce32:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ce34:	e005      	b.n	800ce42 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800ce36:	f7fd fc0f 	bl	800a658 <HAL_GetTick>
 800ce3a:	1b00      	subs	r0, r0, r4
 800ce3c:	2802      	cmp	r0, #2
 800ce3e:	f63f af5c 	bhi.w	800ccfa <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ce42:	682b      	ldr	r3, [r5, #0]
 800ce44:	019a      	lsls	r2, r3, #6
 800ce46:	d5f6      	bpl.n	800ce36 <HAL_RCC_OscConfig+0x3aa>
 800ce48:	e6d5      	b.n	800cbf6 <HAL_RCC_OscConfig+0x16a>
 800ce4a:	bf00      	nop
 800ce4c:	42470000 	.word	0x42470000
 800ce50:	40023800 	.word	0x40023800

0800ce54 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ce54:	4916      	ldr	r1, [pc, #88]	; (800ceb0 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800ce56:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ce58:	688b      	ldr	r3, [r1, #8]
 800ce5a:	f003 030c 	and.w	r3, r3, #12
 800ce5e:	2b04      	cmp	r3, #4
 800ce60:	d01b      	beq.n	800ce9a <HAL_RCC_GetSysClockFreq+0x46>
 800ce62:	2b08      	cmp	r3, #8
 800ce64:	d117      	bne.n	800ce96 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ce66:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ce68:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ce6a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ce6c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ce70:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ce74:	d113      	bne.n	800ce9e <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ce76:	480f      	ldr	r0, [pc, #60]	; (800ceb4 <HAL_RCC_GetSysClockFreq+0x60>)
 800ce78:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800ce7c:	fba1 0100 	umull	r0, r1, r1, r0
 800ce80:	f7f3 fe84 	bl	8000b8c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800ce84:	4b0a      	ldr	r3, [pc, #40]	; (800ceb0 <HAL_RCC_GetSysClockFreq+0x5c>)
 800ce86:	685b      	ldr	r3, [r3, #4]
 800ce88:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800ce8c:	3301      	adds	r3, #1
 800ce8e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800ce90:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800ce94:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800ce96:	4807      	ldr	r0, [pc, #28]	; (800ceb4 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800ce98:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ce9a:	4807      	ldr	r0, [pc, #28]	; (800ceb8 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800ce9c:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ce9e:	4806      	ldr	r0, [pc, #24]	; (800ceb8 <HAL_RCC_GetSysClockFreq+0x64>)
 800cea0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800cea4:	2300      	movs	r3, #0
 800cea6:	fba1 0100 	umull	r0, r1, r1, r0
 800ceaa:	f7f3 fe6f 	bl	8000b8c <__aeabi_uldivmod>
 800ceae:	e7e9      	b.n	800ce84 <HAL_RCC_GetSysClockFreq+0x30>
 800ceb0:	40023800 	.word	0x40023800
 800ceb4:	00f42400 	.word	0x00f42400
 800ceb8:	007a1200 	.word	0x007a1200

0800cebc <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800cebc:	2800      	cmp	r0, #0
 800cebe:	f000 8087 	beq.w	800cfd0 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800cec2:	4a48      	ldr	r2, [pc, #288]	; (800cfe4 <HAL_RCC_ClockConfig+0x128>)
 800cec4:	6813      	ldr	r3, [r2, #0]
 800cec6:	f003 030f 	and.w	r3, r3, #15
 800ceca:	428b      	cmp	r3, r1
{
 800cecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ced0:	460d      	mov	r5, r1
 800ced2:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ced4:	d209      	bcs.n	800ceea <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800ced6:	b2cb      	uxtb	r3, r1
 800ced8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800ceda:	6813      	ldr	r3, [r2, #0]
 800cedc:	f003 030f 	and.w	r3, r3, #15
 800cee0:	428b      	cmp	r3, r1
 800cee2:	d002      	beq.n	800ceea <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800cee4:	2001      	movs	r0, #1
}
 800cee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800ceea:	6823      	ldr	r3, [r4, #0]
 800ceec:	0798      	lsls	r0, r3, #30
 800ceee:	d514      	bpl.n	800cf1a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800cef0:	0759      	lsls	r1, r3, #29
 800cef2:	d504      	bpl.n	800cefe <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800cef4:	493c      	ldr	r1, [pc, #240]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cef6:	688a      	ldr	r2, [r1, #8]
 800cef8:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800cefc:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800cefe:	071a      	lsls	r2, r3, #28
 800cf00:	d504      	bpl.n	800cf0c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800cf02:	4939      	ldr	r1, [pc, #228]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cf04:	688a      	ldr	r2, [r1, #8]
 800cf06:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800cf0a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800cf0c:	4936      	ldr	r1, [pc, #216]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cf0e:	68a0      	ldr	r0, [r4, #8]
 800cf10:	688a      	ldr	r2, [r1, #8]
 800cf12:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800cf16:	4302      	orrs	r2, r0
 800cf18:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800cf1a:	07df      	lsls	r7, r3, #31
 800cf1c:	d521      	bpl.n	800cf62 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800cf1e:	6862      	ldr	r2, [r4, #4]
 800cf20:	2a01      	cmp	r2, #1
 800cf22:	d057      	beq.n	800cfd4 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800cf24:	1e93      	subs	r3, r2, #2
 800cf26:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cf28:	4b2f      	ldr	r3, [pc, #188]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cf2a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800cf2c:	d94d      	bls.n	800cfca <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800cf2e:	0799      	lsls	r1, r3, #30
 800cf30:	d5d8      	bpl.n	800cee4 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800cf32:	4e2d      	ldr	r6, [pc, #180]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cf34:	68b3      	ldr	r3, [r6, #8]
 800cf36:	f023 0303 	bic.w	r3, r3, #3
 800cf3a:	4313      	orrs	r3, r2
 800cf3c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800cf3e:	f7fd fb8b 	bl	800a658 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800cf42:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800cf46:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800cf48:	e004      	b.n	800cf54 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800cf4a:	f7fd fb85 	bl	800a658 <HAL_GetTick>
 800cf4e:	1bc0      	subs	r0, r0, r7
 800cf50:	4540      	cmp	r0, r8
 800cf52:	d844      	bhi.n	800cfde <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800cf54:	68b3      	ldr	r3, [r6, #8]
 800cf56:	6862      	ldr	r2, [r4, #4]
 800cf58:	f003 030c 	and.w	r3, r3, #12
 800cf5c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800cf60:	d1f3      	bne.n	800cf4a <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800cf62:	4a20      	ldr	r2, [pc, #128]	; (800cfe4 <HAL_RCC_ClockConfig+0x128>)
 800cf64:	6813      	ldr	r3, [r2, #0]
 800cf66:	f003 030f 	and.w	r3, r3, #15
 800cf6a:	42ab      	cmp	r3, r5
 800cf6c:	d906      	bls.n	800cf7c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800cf6e:	b2eb      	uxtb	r3, r5
 800cf70:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800cf72:	6813      	ldr	r3, [r2, #0]
 800cf74:	f003 030f 	and.w	r3, r3, #15
 800cf78:	42ab      	cmp	r3, r5
 800cf7a:	d1b3      	bne.n	800cee4 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800cf7c:	6823      	ldr	r3, [r4, #0]
 800cf7e:	075a      	lsls	r2, r3, #29
 800cf80:	d506      	bpl.n	800cf90 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800cf82:	4919      	ldr	r1, [pc, #100]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cf84:	68e0      	ldr	r0, [r4, #12]
 800cf86:	688a      	ldr	r2, [r1, #8]
 800cf88:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800cf8c:	4302      	orrs	r2, r0
 800cf8e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800cf90:	071b      	lsls	r3, r3, #28
 800cf92:	d507      	bpl.n	800cfa4 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800cf94:	4a14      	ldr	r2, [pc, #80]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cf96:	6921      	ldr	r1, [r4, #16]
 800cf98:	6893      	ldr	r3, [r2, #8]
 800cf9a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800cf9e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800cfa2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800cfa4:	f7ff ff56 	bl	800ce54 <HAL_RCC_GetSysClockFreq>
 800cfa8:	4a0f      	ldr	r2, [pc, #60]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cfaa:	4c10      	ldr	r4, [pc, #64]	; (800cfec <HAL_RCC_ClockConfig+0x130>)
 800cfac:	6892      	ldr	r2, [r2, #8]
 800cfae:	4910      	ldr	r1, [pc, #64]	; (800cff0 <HAL_RCC_ClockConfig+0x134>)
 800cfb0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800cfb4:	4603      	mov	r3, r0
 800cfb6:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800cfb8:	480e      	ldr	r0, [pc, #56]	; (800cff4 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800cfba:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800cfbc:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800cfbe:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800cfc0:	f7f5 fb96 	bl	80026f0 <HAL_InitTick>
  return HAL_OK;
 800cfc4:	2000      	movs	r0, #0
}
 800cfc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cfca:	0198      	lsls	r0, r3, #6
 800cfcc:	d4b1      	bmi.n	800cf32 <HAL_RCC_ClockConfig+0x76>
 800cfce:	e789      	b.n	800cee4 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800cfd0:	2001      	movs	r0, #1
}
 800cfd2:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800cfd4:	4b04      	ldr	r3, [pc, #16]	; (800cfe8 <HAL_RCC_ClockConfig+0x12c>)
 800cfd6:	681b      	ldr	r3, [r3, #0]
 800cfd8:	039e      	lsls	r6, r3, #14
 800cfda:	d4aa      	bmi.n	800cf32 <HAL_RCC_ClockConfig+0x76>
 800cfdc:	e782      	b.n	800cee4 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800cfde:	2003      	movs	r0, #3
 800cfe0:	e781      	b.n	800cee6 <HAL_RCC_ClockConfig+0x2a>
 800cfe2:	bf00      	nop
 800cfe4:	40023c00 	.word	0x40023c00
 800cfe8:	40023800 	.word	0x40023800
 800cfec:	08030434 	.word	0x08030434
 800cff0:	2000007c 	.word	0x2000007c
 800cff4:	20000084 	.word	0x20000084

0800cff8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800cff8:	4b04      	ldr	r3, [pc, #16]	; (800d00c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800cffa:	4905      	ldr	r1, [pc, #20]	; (800d010 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800cffc:	689b      	ldr	r3, [r3, #8]
 800cffe:	4a05      	ldr	r2, [pc, #20]	; (800d014 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800d000:	6808      	ldr	r0, [r1, #0]
 800d002:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800d006:	5cd3      	ldrb	r3, [r2, r3]
}
 800d008:	40d8      	lsrs	r0, r3
 800d00a:	4770      	bx	lr
 800d00c:	40023800 	.word	0x40023800
 800d010:	2000007c 	.word	0x2000007c
 800d014:	08030444 	.word	0x08030444

0800d018 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800d018:	4b0e      	ldr	r3, [pc, #56]	; (800d054 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800d01a:	220f      	movs	r2, #15
 800d01c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800d01e:	689a      	ldr	r2, [r3, #8]
 800d020:	f002 0203 	and.w	r2, r2, #3
 800d024:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800d026:	689a      	ldr	r2, [r3, #8]
 800d028:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800d02c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800d02e:	689a      	ldr	r2, [r3, #8]
 800d030:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800d034:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800d036:	689b      	ldr	r3, [r3, #8]
 800d038:	08db      	lsrs	r3, r3, #3
{
 800d03a:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800d03c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800d040:	4c05      	ldr	r4, [pc, #20]	; (800d058 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800d042:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800d044:	6823      	ldr	r3, [r4, #0]
}
 800d046:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800d04a:	f003 030f 	and.w	r3, r3, #15
 800d04e:	600b      	str	r3, [r1, #0]
}
 800d050:	4770      	bx	lr
 800d052:	bf00      	nop
 800d054:	40023800 	.word	0x40023800
 800d058:	40023c00 	.word	0x40023c00

0800d05c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800d05c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800d05e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d060:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800d064:	b083      	sub	sp, #12
 800d066:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d068:	d111      	bne.n	800d08e <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800d06a:	f013 0f0c 	tst.w	r3, #12
 800d06e:	d16f      	bne.n	800d150 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800d070:	0698      	lsls	r0, r3, #26
 800d072:	f100 80c2 	bmi.w	800d1fa <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800d076:	f013 0310 	ands.w	r3, r3, #16
 800d07a:	f000 80bb 	beq.w	800d1f4 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800d07e:	4b89      	ldr	r3, [pc, #548]	; (800d2a4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800d080:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800d084:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800d088:	2000      	movs	r0, #0
}
 800d08a:	b003      	add	sp, #12
 800d08c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800d08e:	4b86      	ldr	r3, [pc, #536]	; (800d2a8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800d090:	4e86      	ldr	r6, [pc, #536]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800d092:	2200      	movs	r2, #0
 800d094:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800d096:	f7fd fadf 	bl	800a658 <HAL_GetTick>
 800d09a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800d09c:	e004      	b.n	800d0a8 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800d09e:	f7fd fadb 	bl	800a658 <HAL_GetTick>
 800d0a2:	1b43      	subs	r3, r0, r5
 800d0a4:	2b02      	cmp	r3, #2
 800d0a6:	d850      	bhi.n	800d14a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800d0a8:	6833      	ldr	r3, [r6, #0]
 800d0aa:	0118      	lsls	r0, r3, #4
 800d0ac:	d4f7      	bmi.n	800d09e <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800d0ae:	6823      	ldr	r3, [r4, #0]
 800d0b0:	07d9      	lsls	r1, r3, #31
 800d0b2:	d506      	bpl.n	800d0c2 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800d0b4:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800d0b8:	0712      	lsls	r2, r2, #28
 800d0ba:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800d0be:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800d0c2:	079a      	lsls	r2, r3, #30
 800d0c4:	d515      	bpl.n	800d0f2 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800d0c6:	4979      	ldr	r1, [pc, #484]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800d0c8:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800d0ca:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800d0ce:	6865      	ldr	r5, [r4, #4]
 800d0d0:	0612      	lsls	r2, r2, #24
 800d0d2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800d0d6:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800d0da:	4302      	orrs	r2, r0
 800d0dc:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800d0e0:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800d0e4:	69e2      	ldr	r2, [r4, #28]
 800d0e6:	f020 001f 	bic.w	r0, r0, #31
 800d0ea:	3a01      	subs	r2, #1
 800d0ec:	4302      	orrs	r2, r0
 800d0ee:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800d0f2:	065b      	lsls	r3, r3, #25
 800d0f4:	d509      	bpl.n	800d10a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800d0f6:	1d20      	adds	r0, r4, #4
 800d0f8:	c80b      	ldmia	r0, {r0, r1, r3}
 800d0fa:	061b      	lsls	r3, r3, #24
 800d0fc:	4a6b      	ldr	r2, [pc, #428]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800d0fe:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800d102:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800d106:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800d10a:	4b67      	ldr	r3, [pc, #412]	; (800d2a8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800d10c:	4e67      	ldr	r6, [pc, #412]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800d10e:	2201      	movs	r2, #1
 800d110:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800d112:	f7fd faa1 	bl	800a658 <HAL_GetTick>
 800d116:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800d118:	e004      	b.n	800d124 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800d11a:	f7fd fa9d 	bl	800a658 <HAL_GetTick>
 800d11e:	1b40      	subs	r0, r0, r5
 800d120:	2802      	cmp	r0, #2
 800d122:	d812      	bhi.n	800d14a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800d124:	6833      	ldr	r3, [r6, #0]
 800d126:	011f      	lsls	r7, r3, #4
 800d128:	d5f7      	bpl.n	800d11a <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800d12a:	6823      	ldr	r3, [r4, #0]
 800d12c:	e79d      	b.n	800d06a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800d12e:	f7fd fa93 	bl	800a658 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d132:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800d136:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d138:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d13a:	079b      	lsls	r3, r3, #30
 800d13c:	f100 80a5 	bmi.w	800d28a <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d140:	f7fd fa8a 	bl	800a658 <HAL_GetTick>
 800d144:	1b80      	subs	r0, r0, r6
 800d146:	42b8      	cmp	r0, r7
 800d148:	d9f6      	bls.n	800d138 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800d14a:	2003      	movs	r0, #3
}
 800d14c:	b003      	add	sp, #12
 800d14e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800d150:	4b55      	ldr	r3, [pc, #340]	; (800d2a8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d152:	4e56      	ldr	r6, [pc, #344]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800d154:	2200      	movs	r2, #0
 800d156:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800d158:	f7fd fa7e 	bl	800a658 <HAL_GetTick>
 800d15c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d15e:	e004      	b.n	800d16a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800d160:	f7fd fa7a 	bl	800a658 <HAL_GetTick>
 800d164:	1b43      	subs	r3, r0, r5
 800d166:	2b02      	cmp	r3, #2
 800d168:	d8ef      	bhi.n	800d14a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d16a:	6833      	ldr	r3, [r6, #0]
 800d16c:	0098      	lsls	r0, r3, #2
 800d16e:	d4f7      	bmi.n	800d160 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800d170:	6822      	ldr	r2, [r4, #0]
 800d172:	0751      	lsls	r1, r2, #29
 800d174:	d515      	bpl.n	800d1a2 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d176:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800d178:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d17c:	6920      	ldr	r0, [r4, #16]
 800d17e:	061b      	lsls	r3, r3, #24
 800d180:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800d184:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800d188:	430b      	orrs	r3, r1
 800d18a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800d18e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800d192:	6a21      	ldr	r1, [r4, #32]
 800d194:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800d198:	3901      	subs	r1, #1
 800d19a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d19e:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800d1a2:	0713      	lsls	r3, r2, #28
 800d1a4:	d514      	bpl.n	800d1d0 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800d1a6:	4a41      	ldr	r2, [pc, #260]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800d1a8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800d1aa:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800d1ae:	6920      	ldr	r0, [r4, #16]
 800d1b0:	071b      	lsls	r3, r3, #28
 800d1b2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800d1b6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800d1ba:	430b      	orrs	r3, r1
 800d1bc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800d1c0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d1c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d1c6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800d1ca:	430b      	orrs	r3, r1
 800d1cc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800d1d0:	4b35      	ldr	r3, [pc, #212]	; (800d2a8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800d1d2:	4e36      	ldr	r6, [pc, #216]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800d1d4:	2201      	movs	r2, #1
 800d1d6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800d1d8:	f7fd fa3e 	bl	800a658 <HAL_GetTick>
 800d1dc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800d1de:	e004      	b.n	800d1ea <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800d1e0:	f7fd fa3a 	bl	800a658 <HAL_GetTick>
 800d1e4:	1b40      	subs	r0, r0, r5
 800d1e6:	2802      	cmp	r0, #2
 800d1e8:	d8af      	bhi.n	800d14a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800d1ea:	6833      	ldr	r3, [r6, #0]
 800d1ec:	009f      	lsls	r7, r3, #2
 800d1ee:	d5f7      	bpl.n	800d1e0 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800d1f0:	6823      	ldr	r3, [r4, #0]
 800d1f2:	e73d      	b.n	800d070 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800d1f4:	4618      	mov	r0, r3
}
 800d1f6:	b003      	add	sp, #12
 800d1f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800d1fa:	4b2c      	ldr	r3, [pc, #176]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800d1fc:	4d2c      	ldr	r5, [pc, #176]	; (800d2b0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800d1fe:	2200      	movs	r2, #0
 800d200:	9201      	str	r2, [sp, #4]
 800d202:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d204:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800d208:	641a      	str	r2, [r3, #64]	; 0x40
 800d20a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d20c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d210:	9301      	str	r3, [sp, #4]
 800d212:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800d214:	682b      	ldr	r3, [r5, #0]
 800d216:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800d21a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800d21c:	f7fd fa1c 	bl	800a658 <HAL_GetTick>
 800d220:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800d222:	e004      	b.n	800d22e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800d224:	f7fd fa18 	bl	800a658 <HAL_GetTick>
 800d228:	1b83      	subs	r3, r0, r6
 800d22a:	2b02      	cmp	r3, #2
 800d22c:	d88d      	bhi.n	800d14a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800d22e:	682b      	ldr	r3, [r5, #0]
 800d230:	05d9      	lsls	r1, r3, #23
 800d232:	d5f7      	bpl.n	800d224 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800d234:	4d1d      	ldr	r5, [pc, #116]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d236:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800d238:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d23a:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800d23e:	d111      	bne.n	800d264 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800d240:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800d244:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800d248:	d021      	beq.n	800d28e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800d24a:	4918      	ldr	r1, [pc, #96]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800d24c:	688a      	ldr	r2, [r1, #8]
 800d24e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800d252:	608a      	str	r2, [r1, #8]
 800d254:	4a15      	ldr	r2, [pc, #84]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800d256:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800d258:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d25c:	430b      	orrs	r3, r1
 800d25e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800d260:	6823      	ldr	r3, [r4, #0]
 800d262:	e708      	b.n	800d076 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d264:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800d268:	4291      	cmp	r1, r2
 800d26a:	d0eb      	beq.n	800d244 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d26c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800d26e:	4a0e      	ldr	r2, [pc, #56]	; (800d2a8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800d270:	2101      	movs	r1, #1
 800d272:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d276:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800d27a:	2100      	movs	r1, #0
 800d27c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800d280:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800d282:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d284:	07da      	lsls	r2, r3, #31
 800d286:	f53f af52 	bmi.w	800d12e <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800d28a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d28c:	e7d8      	b.n	800d240 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800d28e:	4807      	ldr	r0, [pc, #28]	; (800d2ac <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800d290:	6882      	ldr	r2, [r0, #8]
 800d292:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800d296:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800d29a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800d29e:	430a      	orrs	r2, r1
 800d2a0:	6082      	str	r2, [r0, #8]
 800d2a2:	e7d7      	b.n	800d254 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800d2a4:	42471000 	.word	0x42471000
 800d2a8:	42470000 	.word	0x42470000
 800d2ac:	40023800 	.word	0x40023800
 800d2b0:	40007000 	.word	0x40007000

0800d2b4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800d2b4:	b1f0      	cbz	r0, 800d2f4 <HAL_SDRAM_Init+0x40>
{
 800d2b6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800d2b8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d2bc:	460d      	mov	r5, r1
 800d2be:	4604      	mov	r4, r0
 800d2c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d2c4:	b18b      	cbz	r3, 800d2ea <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800d2c6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d2c8:	2302      	movs	r3, #2
 800d2ca:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800d2ce:	f851 0b04 	ldr.w	r0, [r1], #4
 800d2d2:	f001 fa2d 	bl	800e730 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800d2d6:	e9d4 0200 	ldrd	r0, r2, [r4]
 800d2da:	4629      	mov	r1, r5
 800d2dc:	f001 fa66 	bl	800e7ac <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800d2e0:	2301      	movs	r3, #1
 800d2e2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800d2e6:	2000      	movs	r0, #0
}
 800d2e8:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800d2ea:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800d2ee:	f7f5 f997 	bl	8002620 <HAL_SDRAM_MspInit>
 800d2f2:	e7e8      	b.n	800d2c6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800d2f4:	2001      	movs	r0, #1
}
 800d2f6:	4770      	bx	lr

0800d2f8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800d2f8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d2fa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800d2fe:	2b02      	cmp	r3, #2
{
 800d300:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d302:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800d304:	d004      	beq.n	800d310 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800d306:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800d30a:	2c01      	cmp	r4, #1
 800d30c:	d001      	beq.n	800d312 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800d30e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800d310:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d312:	460e      	mov	r6, r1
 800d314:	2302      	movs	r3, #2
 800d316:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800d31a:	6828      	ldr	r0, [r5, #0]
 800d31c:	f001 fa92 	bl	800e844 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800d320:	6833      	ldr	r3, [r6, #0]
 800d322:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800d324:	bf06      	itte	eq
 800d326:	2305      	moveq	r3, #5
 800d328:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800d32c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800d330:	2000      	movs	r0, #0
}
 800d332:	bd70      	pop	{r4, r5, r6, pc}

0800d334 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800d334:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800d336:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d33a:	2b02      	cmp	r3, #2
{
 800d33c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800d33e:	b2d8      	uxtb	r0, r3
 800d340:	d005      	beq.n	800d34e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800d342:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800d346:	2b01      	cmp	r3, #1
 800d348:	b2dd      	uxtb	r5, r3
 800d34a:	d001      	beq.n	800d350 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800d34c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800d34e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d350:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800d352:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d354:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800d358:	f001 fa9e 	bl	800e898 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800d35c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800d360:	2000      	movs	r0, #0
}
 800d362:	bd38      	pop	{r3, r4, r5, pc}

0800d364 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800d364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d368:	b082      	sub	sp, #8
 800d36a:	461d      	mov	r5, r3
 800d36c:	4616      	mov	r6, r2
 800d36e:	460c      	mov	r4, r1
 800d370:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800d372:	f7fd f971 	bl	800a658 <HAL_GetTick>
 800d376:	4435      	add	r5, r6
 800d378:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800d37a:	f7fd f96d 	bl	800a658 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800d37e:	4b27      	ldr	r3, [pc, #156]	; (800d41c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800d380:	681b      	ldr	r3, [r3, #0]
 800d382:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800d386:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800d38a:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800d38c:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800d38e:	1c73      	adds	r3, r6, #1
 800d390:	6839      	ldr	r1, [r7, #0]
 800d392:	d107      	bne.n	800d3a4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800d394:	688b      	ldr	r3, [r1, #8]
 800d396:	ea34 0303 	bics.w	r3, r4, r3
 800d39a:	d0fb      	beq.n	800d394 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800d39c:	2000      	movs	r0, #0
}
 800d39e:	b002      	add	sp, #8
 800d3a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800d3a4:	688b      	ldr	r3, [r1, #8]
 800d3a6:	ea34 0303 	bics.w	r3, r4, r3
 800d3aa:	d1f7      	bne.n	800d39c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800d3ac:	f7fd f954 	bl	800a658 <HAL_GetTick>
 800d3b0:	eba0 0008 	sub.w	r0, r0, r8
 800d3b4:	42a8      	cmp	r0, r5
 800d3b6:	d208      	bcs.n	800d3ca <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800d3b8:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800d3ba:	2b00      	cmp	r3, #0
      count--;
 800d3bc:	9b01      	ldr	r3, [sp, #4]
 800d3be:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800d3c2:	bf08      	it	eq
 800d3c4:	2500      	moveq	r5, #0
      count--;
 800d3c6:	9301      	str	r3, [sp, #4]
 800d3c8:	e7e1      	b.n	800d38e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d3ca:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800d3ce:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d3d0:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800d3d4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800d3d8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d3da:	d013      	beq.n	800d404 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800d3dc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800d3de:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800d3e2:	d107      	bne.n	800d3f4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800d3e4:	681a      	ldr	r2, [r3, #0]
 800d3e6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800d3ea:	601a      	str	r2, [r3, #0]
 800d3ec:	681a      	ldr	r2, [r3, #0]
 800d3ee:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800d3f2:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800d3f4:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800d3f6:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800d3f8:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800d3fc:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800d400:	2003      	movs	r0, #3
 800d402:	e7cc      	b.n	800d39e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d404:	68ba      	ldr	r2, [r7, #8]
 800d406:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800d40a:	d002      	beq.n	800d412 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800d40c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800d410:	d1e4      	bne.n	800d3dc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800d412:	681a      	ldr	r2, [r3, #0]
 800d414:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d418:	601a      	str	r2, [r3, #0]
 800d41a:	e7df      	b.n	800d3dc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800d41c:	2000007c 	.word	0x2000007c

0800d420 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800d420:	b538      	push	{r3, r4, r5, lr}
 800d422:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d424:	6842      	ldr	r2, [r0, #4]
 800d426:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800d42a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d42c:	d006      	beq.n	800d43c <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800d42e:	460a      	mov	r2, r1
 800d430:	2101      	movs	r1, #1
 800d432:	f7ff ff97 	bl	800d364 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d436:	b978      	cbnz	r0, 800d458 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800d438:	2000      	movs	r0, #0
}
 800d43a:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d43c:	6882      	ldr	r2, [r0, #8]
 800d43e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800d442:	d01c      	beq.n	800d47e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800d444:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800d448:	d00c      	beq.n	800d464 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d44a:	460a      	mov	r2, r1
 800d44c:	4620      	mov	r0, r4
 800d44e:	2180      	movs	r1, #128	; 0x80
 800d450:	f7ff ff88 	bl	800d364 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d454:	2800      	cmp	r0, #0
 800d456:	d0ef      	beq.n	800d438 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d458:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800d45a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800d45e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d460:	6563      	str	r3, [r4, #84]	; 0x54
}
 800d462:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800d464:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800d466:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800d468:	6829      	ldr	r1, [r5, #0]
 800d46a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800d46e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800d470:	2101      	movs	r1, #1
 800d472:	f7ff ff77 	bl	800d364 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d476:	2800      	cmp	r0, #0
 800d478:	d1ee      	bne.n	800d458 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800d47a:	2000      	movs	r0, #0
 800d47c:	e7dd      	b.n	800d43a <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800d47e:	6800      	ldr	r0, [r0, #0]
 800d480:	6802      	ldr	r2, [r0, #0]
 800d482:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d486:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d488:	460a      	mov	r2, r1
 800d48a:	4620      	mov	r0, r4
 800d48c:	2180      	movs	r1, #128	; 0x80
 800d48e:	f7ff ff69 	bl	800d364 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d492:	2800      	cmp	r0, #0
 800d494:	d0d0      	beq.n	800d438 <SPI_EndRxTransaction+0x18>
 800d496:	e7df      	b.n	800d458 <SPI_EndRxTransaction+0x38>

0800d498 <HAL_SPI_Init>:
  if (hspi == NULL)
 800d498:	2800      	cmp	r0, #0
 800d49a:	d05c      	beq.n	800d556 <HAL_SPI_Init+0xbe>
{
 800d49c:	b570      	push	{r4, r5, r6, lr}
 800d49e:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800d4a0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800d4a2:	2800      	cmp	r0, #0
 800d4a4:	d047      	beq.n	800d536 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800d4a6:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800d4a8:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800d4ac:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800d4b0:	2200      	movs	r2, #0
 800d4b2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800d4b4:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800d4b8:	2b00      	cmp	r3, #0
 800d4ba:	d042      	beq.n	800d542 <HAL_SPI_Init+0xaa>
 800d4bc:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800d4be:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d4c0:	68a5      	ldr	r5, [r4, #8]
 800d4c2:	69a2      	ldr	r2, [r4, #24]
 800d4c4:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800d4c6:	2302      	movs	r3, #2
 800d4c8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800d4cc:	680b      	ldr	r3, [r1, #0]
 800d4ce:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d4d2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d4d4:	6863      	ldr	r3, [r4, #4]
 800d4d6:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800d4da:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800d4de:	432b      	orrs	r3, r5
 800d4e0:	68e5      	ldr	r5, [r4, #12]
 800d4e2:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800d4e6:	432b      	orrs	r3, r5
 800d4e8:	6925      	ldr	r5, [r4, #16]
 800d4ea:	f005 0502 	and.w	r5, r5, #2
 800d4ee:	432b      	orrs	r3, r5
 800d4f0:	6965      	ldr	r5, [r4, #20]
 800d4f2:	f005 0501 	and.w	r5, r5, #1
 800d4f6:	432b      	orrs	r3, r5
 800d4f8:	69e5      	ldr	r5, [r4, #28]
 800d4fa:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800d4fe:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800d502:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800d506:	4333      	orrs	r3, r6
 800d508:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800d50a:	0c12      	lsrs	r2, r2, #16
 800d50c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d510:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800d514:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d518:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800d51c:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d51e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800d520:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800d522:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800d524:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800d526:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800d52a:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800d52c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800d52e:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800d530:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800d534:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d536:	6863      	ldr	r3, [r4, #4]
 800d538:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800d53c:	d0b6      	beq.n	800d4ac <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800d53e:	61e0      	str	r0, [r4, #28]
 800d540:	e7b4      	b.n	800d4ac <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800d542:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800d544:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800d548:	f7f4 ff86 	bl	8002458 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800d54c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d550:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800d554:	e7b3      	b.n	800d4be <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800d556:	2001      	movs	r0, #1
}
 800d558:	4770      	bx	lr
 800d55a:	bf00      	nop

0800d55c <HAL_SPI_Transmit>:
{
 800d55c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d560:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800d562:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800d566:	2801      	cmp	r0, #1
{
 800d568:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800d56a:	f000 8085 	beq.w	800d678 <HAL_SPI_Transmit+0x11c>
 800d56e:	461d      	mov	r5, r3
 800d570:	2301      	movs	r3, #1
 800d572:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800d576:	4688      	mov	r8, r1
 800d578:	4617      	mov	r7, r2
 800d57a:	f7fd f86d 	bl	800a658 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800d57e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800d582:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800d584:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800d586:	b2d8      	uxtb	r0, r3
 800d588:	d009      	beq.n	800d59e <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800d58a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800d58c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800d58e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800d590:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d594:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d598:	b002      	add	sp, #8
 800d59a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800d59e:	f1b8 0f00 	cmp.w	r8, #0
 800d5a2:	d0f3      	beq.n	800d58c <HAL_SPI_Transmit+0x30>
 800d5a4:	2f00      	cmp	r7, #0
 800d5a6:	d0f1      	beq.n	800d58c <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d5a8:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800d5aa:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800d5ac:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d5b0:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800d5b2:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d5b4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800d5b8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800d5bc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d5c0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800d5c2:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800d5c4:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800d5c6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800d5c8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800d5ca:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d5cc:	f000 8085 	beq.w	800d6da <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d5d0:	6803      	ldr	r3, [r0, #0]
 800d5d2:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800d5d4:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d5d6:	d403      	bmi.n	800d5e0 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800d5d8:	6803      	ldr	r3, [r0, #0]
 800d5da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d5de:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800d5e0:	68e3      	ldr	r3, [r4, #12]
 800d5e2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800d5e6:	d04b      	beq.n	800d680 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d5e8:	6863      	ldr	r3, [r4, #4]
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	f000 8097 	beq.w	800d71e <HAL_SPI_Transmit+0x1c2>
 800d5f0:	2f01      	cmp	r7, #1
 800d5f2:	f000 8094 	beq.w	800d71e <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800d5f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d5f8:	b29b      	uxth	r3, r3
 800d5fa:	b1ab      	cbz	r3, 800d628 <HAL_SPI_Transmit+0xcc>
 800d5fc:	1c68      	adds	r0, r5, #1
 800d5fe:	f040 8083 	bne.w	800d708 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800d602:	6823      	ldr	r3, [r4, #0]
 800d604:	689a      	ldr	r2, [r3, #8]
 800d606:	0791      	lsls	r1, r2, #30
 800d608:	f140 8094 	bpl.w	800d734 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800d60c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d60e:	7812      	ldrb	r2, [r2, #0]
 800d610:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800d612:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800d614:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d616:	3901      	subs	r1, #1
 800d618:	b289      	uxth	r1, r1
 800d61a:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800d61c:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800d61e:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800d620:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800d622:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800d624:	2900      	cmp	r1, #0
 800d626:	d1ec      	bne.n	800d602 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d628:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d62a:	4b5b      	ldr	r3, [pc, #364]	; (800d798 <HAL_SPI_Transmit+0x23c>)
 800d62c:	4a5b      	ldr	r2, [pc, #364]	; (800d79c <HAL_SPI_Transmit+0x240>)
 800d62e:	681b      	ldr	r3, [r3, #0]
 800d630:	fba2 2303 	umull	r2, r3, r2, r3
 800d634:	0d5b      	lsrs	r3, r3, #21
 800d636:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800d63a:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d63e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d642:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d644:	d107      	bne.n	800d656 <HAL_SPI_Transmit+0xfa>
 800d646:	e098      	b.n	800d77a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800d648:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800d64a:	6822      	ldr	r2, [r4, #0]
      count--;
 800d64c:	3b01      	subs	r3, #1
 800d64e:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800d650:	6893      	ldr	r3, [r2, #8]
 800d652:	061b      	lsls	r3, r3, #24
 800d654:	d502      	bpl.n	800d65c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800d656:	9b01      	ldr	r3, [sp, #4]
 800d658:	2b00      	cmp	r3, #0
 800d65a:	d1f5      	bne.n	800d648 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800d65c:	68a3      	ldr	r3, [r4, #8]
 800d65e:	b933      	cbnz	r3, 800d66e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800d660:	6822      	ldr	r2, [r4, #0]
 800d662:	9300      	str	r3, [sp, #0]
 800d664:	68d3      	ldr	r3, [r2, #12]
 800d666:	9300      	str	r3, [sp, #0]
 800d668:	6893      	ldr	r3, [r2, #8]
 800d66a:	9300      	str	r3, [sp, #0]
 800d66c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d66e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800d670:	3800      	subs	r0, #0
 800d672:	bf18      	it	ne
 800d674:	2001      	movne	r0, #1
error:
 800d676:	e789      	b.n	800d58c <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800d678:	2002      	movs	r0, #2
}
 800d67a:	b002      	add	sp, #8
 800d67c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d680:	6861      	ldr	r1, [r4, #4]
 800d682:	2900      	cmp	r1, #0
 800d684:	d176      	bne.n	800d774 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d686:	4643      	mov	r3, r8
 800d688:	f833 7b02 	ldrh.w	r7, [r3], #2
 800d68c:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800d68e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d690:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d692:	3b01      	subs	r3, #1
 800d694:	b29b      	uxth	r3, r3
 800d696:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800d698:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d69a:	b29b      	uxth	r3, r3
 800d69c:	2b00      	cmp	r3, #0
 800d69e:	d0c4      	beq.n	800d62a <HAL_SPI_Transmit+0xce>
 800d6a0:	1c6b      	adds	r3, r5, #1
 800d6a2:	d15e      	bne.n	800d762 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800d6a4:	6883      	ldr	r3, [r0, #8]
 800d6a6:	079f      	lsls	r7, r3, #30
 800d6a8:	d50f      	bpl.n	800d6ca <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d6aa:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d6ac:	f832 3b02 	ldrh.w	r3, [r2], #2
 800d6b0:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800d6b2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d6b4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d6b6:	3b01      	subs	r3, #1
 800d6b8:	b29b      	uxth	r3, r3
 800d6ba:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800d6bc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d6be:	b29b      	uxth	r3, r3
 800d6c0:	2b00      	cmp	r3, #0
 800d6c2:	d0b1      	beq.n	800d628 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800d6c4:	6883      	ldr	r3, [r0, #8]
 800d6c6:	079f      	lsls	r7, r3, #30
 800d6c8:	d4ef      	bmi.n	800d6aa <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d6ca:	f7fc ffc5 	bl	800a658 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800d6ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d6d0:	b29b      	uxth	r3, r3
 800d6d2:	2b00      	cmp	r3, #0
 800d6d4:	d0a8      	beq.n	800d628 <HAL_SPI_Transmit+0xcc>
 800d6d6:	6820      	ldr	r0, [r4, #0]
 800d6d8:	e7e4      	b.n	800d6a4 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800d6da:	6803      	ldr	r3, [r0, #0]
 800d6dc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d6e0:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800d6e2:	6803      	ldr	r3, [r0, #0]
 800d6e4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800d6e8:	6003      	str	r3, [r0, #0]
 800d6ea:	e771      	b.n	800d5d0 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800d6ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d6ee:	7812      	ldrb	r2, [r2, #0]
 800d6f0:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800d6f2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800d6f4:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d6f6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800d6f8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800d6fa:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800d6fc:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d6fe:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800d700:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d702:	b29b      	uxth	r3, r3
 800d704:	2b00      	cmp	r3, #0
 800d706:	d08f      	beq.n	800d628 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800d708:	6823      	ldr	r3, [r4, #0]
 800d70a:	689a      	ldr	r2, [r3, #8]
 800d70c:	0792      	lsls	r2, r2, #30
 800d70e:	d4ed      	bmi.n	800d6ec <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d710:	f7fc ffa2 	bl	800a658 <HAL_GetTick>
 800d714:	1b80      	subs	r0, r0, r6
 800d716:	42a8      	cmp	r0, r5
 800d718:	d3f2      	bcc.n	800d700 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800d71a:	2003      	movs	r0, #3
 800d71c:	e736      	b.n	800d58c <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800d71e:	f898 3000 	ldrb.w	r3, [r8]
 800d722:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800d724:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d726:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d728:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d72a:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800d72c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d72e:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d730:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d732:	e760      	b.n	800d5f6 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d734:	f7fc ff90 	bl	800a658 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800d738:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d73a:	b29b      	uxth	r3, r3
 800d73c:	2b00      	cmp	r3, #0
 800d73e:	f47f af60 	bne.w	800d602 <HAL_SPI_Transmit+0xa6>
 800d742:	e771      	b.n	800d628 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d744:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d746:	f831 3b02 	ldrh.w	r3, [r1], #2
 800d74a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800d74c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d74e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d750:	3b01      	subs	r3, #1
 800d752:	b29b      	uxth	r3, r3
 800d754:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800d756:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d758:	b29b      	uxth	r3, r3
 800d75a:	2b00      	cmp	r3, #0
 800d75c:	f43f af64 	beq.w	800d628 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800d760:	6822      	ldr	r2, [r4, #0]
 800d762:	6893      	ldr	r3, [r2, #8]
 800d764:	0799      	lsls	r1, r3, #30
 800d766:	d4ed      	bmi.n	800d744 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d768:	f7fc ff76 	bl	800a658 <HAL_GetTick>
 800d76c:	1b80      	subs	r0, r0, r6
 800d76e:	42a8      	cmp	r0, r5
 800d770:	d3f1      	bcc.n	800d756 <HAL_SPI_Transmit+0x1fa>
 800d772:	e7d2      	b.n	800d71a <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d774:	2f01      	cmp	r7, #1
 800d776:	d18f      	bne.n	800d698 <HAL_SPI_Transmit+0x13c>
 800d778:	e785      	b.n	800d686 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d77a:	4633      	mov	r3, r6
 800d77c:	462a      	mov	r2, r5
 800d77e:	2180      	movs	r1, #128	; 0x80
 800d780:	4620      	mov	r0, r4
 800d782:	f7ff fdef 	bl	800d364 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d786:	2800      	cmp	r0, #0
 800d788:	f43f af68 	beq.w	800d65c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d78c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d78e:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d790:	4313      	orrs	r3, r2
 800d792:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d794:	6562      	str	r2, [r4, #84]	; 0x54
 800d796:	e761      	b.n	800d65c <HAL_SPI_Transmit+0x100>
 800d798:	2000007c 	.word	0x2000007c
 800d79c:	165e9f81 	.word	0x165e9f81

0800d7a0 <HAL_SPI_TransmitReceive>:
{
 800d7a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7a4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800d7a6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800d7aa:	2801      	cmp	r0, #1
{
 800d7ac:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800d7ae:	f000 80ac 	beq.w	800d90a <HAL_SPI_TransmitReceive+0x16a>
 800d7b2:	461e      	mov	r6, r3
 800d7b4:	2301      	movs	r3, #1
 800d7b6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800d7ba:	4690      	mov	r8, r2
 800d7bc:	460f      	mov	r7, r1
 800d7be:	f7fc ff4b 	bl	800a658 <HAL_GetTick>
 800d7c2:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800d7c4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800d7c8:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800d7ca:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800d7cc:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800d7ce:	d011      	beq.n	800d7f4 <HAL_SPI_TransmitReceive+0x54>
 800d7d0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800d7d4:	d009      	beq.n	800d7ea <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800d7d6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800d7d8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800d7da:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800d7dc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d7e0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d7e4:	b002      	add	sp, #8
 800d7e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800d7ea:	68a1      	ldr	r1, [r4, #8]
 800d7ec:	2900      	cmp	r1, #0
 800d7ee:	d1f2      	bne.n	800d7d6 <HAL_SPI_TransmitReceive+0x36>
 800d7f0:	2a04      	cmp	r2, #4
 800d7f2:	d1f0      	bne.n	800d7d6 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800d7f4:	2f00      	cmp	r7, #0
 800d7f6:	f000 808c 	beq.w	800d912 <HAL_SPI_TransmitReceive+0x172>
 800d7fa:	f1b8 0f00 	cmp.w	r8, #0
 800d7fe:	f000 8088 	beq.w	800d912 <HAL_SPI_TransmitReceive+0x172>
 800d802:	2e00      	cmp	r6, #0
 800d804:	f000 8085 	beq.w	800d912 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800d808:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800d80c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800d810:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800d812:	bf1c      	itt	ne
 800d814:	2205      	movne	r2, #5
 800d816:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d81a:	2200      	movs	r2, #0
 800d81c:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800d81e:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d822:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800d824:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800d826:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d828:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800d82a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d82c:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800d82e:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800d830:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d832:	d403      	bmi.n	800d83c <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800d834:	6811      	ldr	r1, [r2, #0]
 800d836:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800d83a:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800d83c:	68e1      	ldr	r1, [r4, #12]
 800d83e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800d842:	f000 809e 	beq.w	800d982 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d846:	2b00      	cmp	r3, #0
 800d848:	f000 8091 	beq.w	800d96e <HAL_SPI_TransmitReceive+0x1ce>
 800d84c:	2e01      	cmp	r6, #1
 800d84e:	f000 808e 	beq.w	800d96e <HAL_SPI_TransmitReceive+0x1ce>
 800d852:	9b08      	ldr	r3, [sp, #32]
 800d854:	3301      	adds	r3, #1
        txallowed = 1U;
 800d856:	f04f 0601 	mov.w	r6, #1
 800d85a:	d028      	beq.n	800d8ae <HAL_SPI_TransmitReceive+0x10e>
 800d85c:	e05b      	b.n	800d916 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d85e:	6821      	ldr	r1, [r4, #0]
 800d860:	688b      	ldr	r3, [r1, #8]
 800d862:	0798      	lsls	r0, r3, #30
 800d864:	d50f      	bpl.n	800d886 <HAL_SPI_TransmitReceive+0xe6>
 800d866:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d868:	b29b      	uxth	r3, r3
 800d86a:	b163      	cbz	r3, 800d886 <HAL_SPI_TransmitReceive+0xe6>
 800d86c:	b15e      	cbz	r6, 800d886 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800d86e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d870:	781b      	ldrb	r3, [r3, #0]
 800d872:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800d874:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800d876:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d878:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800d87a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800d87c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800d87e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800d880:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800d882:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800d884:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d886:	688a      	ldr	r2, [r1, #8]
 800d888:	f012 0201 	ands.w	r2, r2, #1
 800d88c:	d00d      	beq.n	800d8aa <HAL_SPI_TransmitReceive+0x10a>
 800d88e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d890:	b29b      	uxth	r3, r3
 800d892:	b153      	cbz	r3, 800d8aa <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800d894:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d896:	68c9      	ldr	r1, [r1, #12]
 800d898:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800d89a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800d89c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d89e:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800d8a0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800d8a2:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800d8a4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d8a6:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800d8a8:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800d8aa:	f7fc fed5 	bl	800a658 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d8ae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d8b0:	b292      	uxth	r2, r2
 800d8b2:	2a00      	cmp	r2, #0
 800d8b4:	d1d3      	bne.n	800d85e <HAL_SPI_TransmitReceive+0xbe>
 800d8b6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d8b8:	b29b      	uxth	r3, r3
 800d8ba:	2b00      	cmp	r3, #0
 800d8bc:	d1cf      	bne.n	800d85e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d8be:	4b79      	ldr	r3, [pc, #484]	; (800daa4 <HAL_SPI_TransmitReceive+0x304>)
 800d8c0:	4a79      	ldr	r2, [pc, #484]	; (800daa8 <HAL_SPI_TransmitReceive+0x308>)
 800d8c2:	681b      	ldr	r3, [r3, #0]
 800d8c4:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d8c8:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d8ca:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d8ce:	0d5b      	lsrs	r3, r3, #21
 800d8d0:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d8d4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d8d8:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d8da:	d107      	bne.n	800d8ec <HAL_SPI_TransmitReceive+0x14c>
 800d8dc:	e0d2      	b.n	800da84 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800d8de:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800d8e0:	6822      	ldr	r2, [r4, #0]
      count--;
 800d8e2:	3b01      	subs	r3, #1
 800d8e4:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800d8e6:	6893      	ldr	r3, [r2, #8]
 800d8e8:	061b      	lsls	r3, r3, #24
 800d8ea:	d502      	bpl.n	800d8f2 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800d8ec:	9b01      	ldr	r3, [sp, #4]
 800d8ee:	2b00      	cmp	r3, #0
 800d8f0:	d1f5      	bne.n	800d8de <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800d8f2:	68a0      	ldr	r0, [r4, #8]
 800d8f4:	2800      	cmp	r0, #0
 800d8f6:	f040 8082 	bne.w	800d9fe <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800d8fa:	6823      	ldr	r3, [r4, #0]
 800d8fc:	9000      	str	r0, [sp, #0]
 800d8fe:	68da      	ldr	r2, [r3, #12]
 800d900:	9200      	str	r2, [sp, #0]
 800d902:	689b      	ldr	r3, [r3, #8]
 800d904:	9300      	str	r3, [sp, #0]
 800d906:	9b00      	ldr	r3, [sp, #0]
 800d908:	e766      	b.n	800d7d8 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800d90a:	2002      	movs	r0, #2
}
 800d90c:	b002      	add	sp, #8
 800d90e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800d912:	2001      	movs	r0, #1
 800d914:	e760      	b.n	800d7d8 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d916:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d918:	b29b      	uxth	r3, r3
 800d91a:	b91b      	cbnz	r3, 800d924 <HAL_SPI_TransmitReceive+0x184>
 800d91c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d91e:	b29b      	uxth	r3, r3
 800d920:	2b00      	cmp	r3, #0
 800d922:	d0cc      	beq.n	800d8be <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d924:	6822      	ldr	r2, [r4, #0]
 800d926:	6893      	ldr	r3, [r2, #8]
 800d928:	0799      	lsls	r1, r3, #30
 800d92a:	d50f      	bpl.n	800d94c <HAL_SPI_TransmitReceive+0x1ac>
 800d92c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d92e:	b29b      	uxth	r3, r3
 800d930:	b163      	cbz	r3, 800d94c <HAL_SPI_TransmitReceive+0x1ac>
 800d932:	b15e      	cbz	r6, 800d94c <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800d934:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d936:	781b      	ldrb	r3, [r3, #0]
 800d938:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800d93a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800d93c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d93e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800d940:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800d942:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800d944:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d946:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800d948:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800d94a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d94c:	6893      	ldr	r3, [r2, #8]
 800d94e:	f013 0301 	ands.w	r3, r3, #1
 800d952:	d004      	beq.n	800d95e <HAL_SPI_TransmitReceive+0x1be>
 800d954:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d956:	b289      	uxth	r1, r1
 800d958:	2900      	cmp	r1, #0
 800d95a:	f040 8087 	bne.w	800da6c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800d95e:	f7fc fe7b 	bl	800a658 <HAL_GetTick>
 800d962:	9b08      	ldr	r3, [sp, #32]
 800d964:	1b40      	subs	r0, r0, r5
 800d966:	4298      	cmp	r0, r3
 800d968:	d3d5      	bcc.n	800d916 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800d96a:	2003      	movs	r0, #3
 800d96c:	e734      	b.n	800d7d8 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800d96e:	783b      	ldrb	r3, [r7, #0]
 800d970:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800d972:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d974:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d976:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d978:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800d97a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d97c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d97e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d980:	e767      	b.n	800d852 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d982:	2b00      	cmp	r3, #0
 800d984:	d13d      	bne.n	800da02 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d986:	f837 3b02 	ldrh.w	r3, [r7], #2
 800d98a:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800d98c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800d98e:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d990:	3b01      	subs	r3, #1
 800d992:	b29b      	uxth	r3, r3
 800d994:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d996:	9b08      	ldr	r3, [sp, #32]
 800d998:	3301      	adds	r3, #1
{
 800d99a:	f04f 0601 	mov.w	r6, #1
 800d99e:	d025      	beq.n	800d9ec <HAL_SPI_TransmitReceive+0x24c>
 800d9a0:	e032      	b.n	800da08 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d9a2:	6823      	ldr	r3, [r4, #0]
 800d9a4:	689a      	ldr	r2, [r3, #8]
 800d9a6:	0792      	lsls	r2, r2, #30
 800d9a8:	d50d      	bpl.n	800d9c6 <HAL_SPI_TransmitReceive+0x226>
 800d9aa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d9ac:	b292      	uxth	r2, r2
 800d9ae:	b152      	cbz	r2, 800d9c6 <HAL_SPI_TransmitReceive+0x226>
 800d9b0:	b14e      	cbz	r6, 800d9c6 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d9b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d9b4:	f831 2b02 	ldrh.w	r2, [r1], #2
 800d9b8:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800d9ba:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d9bc:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d9be:	3a01      	subs	r2, #1
 800d9c0:	b292      	uxth	r2, r2
        txallowed = 0U;
 800d9c2:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800d9c4:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d9c6:	689a      	ldr	r2, [r3, #8]
 800d9c8:	f012 0201 	ands.w	r2, r2, #1
 800d9cc:	d00c      	beq.n	800d9e8 <HAL_SPI_TransmitReceive+0x248>
 800d9ce:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d9d0:	b289      	uxth	r1, r1
 800d9d2:	b149      	cbz	r1, 800d9e8 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d9d4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d9d6:	68db      	ldr	r3, [r3, #12]
 800d9d8:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800d9dc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d9de:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d9e0:	3b01      	subs	r3, #1
 800d9e2:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800d9e4:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800d9e6:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d9e8:	f7fc fe36 	bl	800a658 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d9ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d9ee:	b29b      	uxth	r3, r3
 800d9f0:	2b00      	cmp	r3, #0
 800d9f2:	d1d6      	bne.n	800d9a2 <HAL_SPI_TransmitReceive+0x202>
 800d9f4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d9f6:	b29b      	uxth	r3, r3
 800d9f8:	2b00      	cmp	r3, #0
 800d9fa:	d1d2      	bne.n	800d9a2 <HAL_SPI_TransmitReceive+0x202>
 800d9fc:	e75f      	b.n	800d8be <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800d9fe:	2000      	movs	r0, #0
 800da00:	e6ea      	b.n	800d7d8 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800da02:	2e01      	cmp	r6, #1
 800da04:	d1c7      	bne.n	800d996 <HAL_SPI_TransmitReceive+0x1f6>
 800da06:	e7be      	b.n	800d986 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800da08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800da0a:	b29b      	uxth	r3, r3
 800da0c:	b923      	cbnz	r3, 800da18 <HAL_SPI_TransmitReceive+0x278>
 800da0e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800da10:	b29b      	uxth	r3, r3
 800da12:	2b00      	cmp	r3, #0
 800da14:	f43f af53 	beq.w	800d8be <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800da18:	6822      	ldr	r2, [r4, #0]
 800da1a:	6893      	ldr	r3, [r2, #8]
 800da1c:	079f      	lsls	r7, r3, #30
 800da1e:	d50d      	bpl.n	800da3c <HAL_SPI_TransmitReceive+0x29c>
 800da20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800da22:	b29b      	uxth	r3, r3
 800da24:	b153      	cbz	r3, 800da3c <HAL_SPI_TransmitReceive+0x29c>
 800da26:	b14e      	cbz	r6, 800da3c <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800da28:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800da2a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800da2e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800da30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800da32:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800da34:	3b01      	subs	r3, #1
 800da36:	b29b      	uxth	r3, r3
 800da38:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800da3a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800da3c:	6893      	ldr	r3, [r2, #8]
 800da3e:	f013 0301 	ands.w	r3, r3, #1
 800da42:	d00c      	beq.n	800da5e <HAL_SPI_TransmitReceive+0x2be>
 800da44:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800da46:	b289      	uxth	r1, r1
 800da48:	b149      	cbz	r1, 800da5e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800da4a:	68d1      	ldr	r1, [r2, #12]
 800da4c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800da4e:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800da52:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800da54:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800da56:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800da58:	3b01      	subs	r3, #1
 800da5a:	b29b      	uxth	r3, r3
 800da5c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800da5e:	f7fc fdfb 	bl	800a658 <HAL_GetTick>
 800da62:	9b08      	ldr	r3, [sp, #32]
 800da64:	1b40      	subs	r0, r0, r5
 800da66:	4298      	cmp	r0, r3
 800da68:	d3ce      	bcc.n	800da08 <HAL_SPI_TransmitReceive+0x268>
 800da6a:	e77e      	b.n	800d96a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800da6c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800da6e:	68d2      	ldr	r2, [r2, #12]
 800da70:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800da72:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800da74:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800da76:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800da78:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800da7a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800da7c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800da7e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800da80:	461e      	mov	r6, r3
 800da82:	e76c      	b.n	800d95e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800da84:	9a08      	ldr	r2, [sp, #32]
 800da86:	462b      	mov	r3, r5
 800da88:	2180      	movs	r1, #128	; 0x80
 800da8a:	4620      	mov	r0, r4
 800da8c:	f7ff fc6a 	bl	800d364 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800da90:	2800      	cmp	r0, #0
 800da92:	f43f af2e 	beq.w	800d8f2 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800da96:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800da98:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800da9a:	4313      	orrs	r3, r2
 800da9c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800da9e:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800daa0:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800daa2:	e699      	b.n	800d7d8 <HAL_SPI_TransmitReceive+0x38>
 800daa4:	2000007c 	.word	0x2000007c
 800daa8:	165e9f81 	.word	0x165e9f81

0800daac <HAL_SPI_Receive>:
{
 800daac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800dab0:	6846      	ldr	r6, [r0, #4]
 800dab2:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800dab6:	b082      	sub	sp, #8
 800dab8:	4604      	mov	r4, r0
 800daba:	4690      	mov	r8, r2
 800dabc:	461d      	mov	r5, r3
 800dabe:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800dac0:	d06e      	beq.n	800dba0 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800dac2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800dac6:	2b01      	cmp	r3, #1
 800dac8:	d076      	beq.n	800dbb8 <HAL_SPI_Receive+0x10c>
 800daca:	2301      	movs	r3, #1
 800dacc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800dad0:	f7fc fdc2 	bl	800a658 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800dad4:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800dad8:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800dadc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800dade:	fa5f f08c 	uxtb.w	r0, ip
 800dae2:	d009      	beq.n	800daf8 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800dae4:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800dae6:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800dae8:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800daea:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800daee:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800daf2:	b002      	add	sp, #8
 800daf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800daf8:	2f00      	cmp	r7, #0
 800dafa:	d0f4      	beq.n	800dae6 <HAL_SPI_Receive+0x3a>
 800dafc:	f1b8 0f00 	cmp.w	r8, #0
 800db00:	d0f1      	beq.n	800dae6 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800db02:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800db04:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800db06:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800db0a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800db0c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800db10:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800db14:	f04f 0104 	mov.w	r1, #4
 800db18:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800db1c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800db20:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800db22:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800db24:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800db26:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800db2a:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800db2c:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800db2e:	d107      	bne.n	800db40 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800db30:	6811      	ldr	r1, [r2, #0]
 800db32:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800db36:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800db38:	6811      	ldr	r1, [r2, #0]
 800db3a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800db3e:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800db40:	6811      	ldr	r1, [r2, #0]
 800db42:	0648      	lsls	r0, r1, #25
 800db44:	d403      	bmi.n	800db4e <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800db46:	6811      	ldr	r1, [r2, #0]
 800db48:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800db4c:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800db4e:	68e1      	ldr	r1, [r4, #12]
 800db50:	2900      	cmp	r1, #0
 800db52:	d054      	beq.n	800dbfe <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800db54:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800db56:	b289      	uxth	r1, r1
 800db58:	b1a9      	cbz	r1, 800db86 <HAL_SPI_Receive+0xda>
 800db5a:	1c69      	adds	r1, r5, #1
 800db5c:	d13e      	bne.n	800dbdc <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800db5e:	6893      	ldr	r3, [r2, #8]
 800db60:	07db      	lsls	r3, r3, #31
 800db62:	d544      	bpl.n	800dbee <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800db64:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800db66:	68d1      	ldr	r1, [r2, #12]
 800db68:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800db6c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800db70:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800db72:	f10c 3cff 	add.w	ip, ip, #4294967295
 800db76:	fa1f fc8c 	uxth.w	ip, ip
 800db7a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800db7e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800db80:	b29b      	uxth	r3, r3
 800db82:	2b00      	cmp	r3, #0
 800db84:	d1eb      	bne.n	800db5e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800db86:	4632      	mov	r2, r6
 800db88:	4629      	mov	r1, r5
 800db8a:	4620      	mov	r0, r4
 800db8c:	f7ff fc48 	bl	800d420 <SPI_EndRxTransaction>
 800db90:	b108      	cbz	r0, 800db96 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800db92:	2320      	movs	r3, #32
 800db94:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800db96:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800db98:	3800      	subs	r0, #0
 800db9a:	bf18      	it	ne
 800db9c:	2001      	movne	r0, #1
error :
 800db9e:	e7a2      	b.n	800dae6 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800dba0:	6883      	ldr	r3, [r0, #8]
 800dba2:	2b00      	cmp	r3, #0
 800dba4:	d18d      	bne.n	800dac2 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800dba6:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800dba8:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800dbaa:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800dbac:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800dbb0:	460a      	mov	r2, r1
 800dbb2:	f7ff fdf5 	bl	800d7a0 <HAL_SPI_TransmitReceive>
 800dbb6:	e79c      	b.n	800daf2 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800dbb8:	2002      	movs	r0, #2
}
 800dbba:	b002      	add	sp, #8
 800dbbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800dbc0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dbc2:	68db      	ldr	r3, [r3, #12]
 800dbc4:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800dbc8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800dbca:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800dbcc:	3b01      	subs	r3, #1
 800dbce:	b29b      	uxth	r3, r3
 800dbd0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800dbd2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800dbd4:	b29b      	uxth	r3, r3
 800dbd6:	2b00      	cmp	r3, #0
 800dbd8:	d0d5      	beq.n	800db86 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800dbda:	6823      	ldr	r3, [r4, #0]
 800dbdc:	689a      	ldr	r2, [r3, #8]
 800dbde:	07d2      	lsls	r2, r2, #31
 800dbe0:	d4ee      	bmi.n	800dbc0 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800dbe2:	f7fc fd39 	bl	800a658 <HAL_GetTick>
 800dbe6:	1b80      	subs	r0, r0, r6
 800dbe8:	42a8      	cmp	r0, r5
 800dbea:	d243      	bcs.n	800dc74 <HAL_SPI_Receive+0x1c8>
 800dbec:	e7f1      	b.n	800dbd2 <HAL_SPI_Receive+0x126>
 800dbee:	f7fc fd33 	bl	800a658 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800dbf2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800dbf4:	b29b      	uxth	r3, r3
 800dbf6:	2b00      	cmp	r3, #0
 800dbf8:	d0c5      	beq.n	800db86 <HAL_SPI_Receive+0xda>
 800dbfa:	6822      	ldr	r2, [r4, #0]
 800dbfc:	e7af      	b.n	800db5e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800dbfe:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800dc00:	b292      	uxth	r2, r2
 800dc02:	2a00      	cmp	r2, #0
 800dc04:	d0bf      	beq.n	800db86 <HAL_SPI_Receive+0xda>
 800dc06:	1c6f      	adds	r7, r5, #1
 800dc08:	d013      	beq.n	800dc32 <HAL_SPI_Receive+0x186>
 800dc0a:	e02b      	b.n	800dc64 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800dc0c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc0e:	7b1b      	ldrb	r3, [r3, #12]
 800dc10:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800dc12:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800dc16:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800dc18:	f10c 3cff 	add.w	ip, ip, #4294967295
 800dc1c:	fa1f fc8c 	uxth.w	ip, ip
 800dc20:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800dc24:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800dc26:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800dc28:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800dc2a:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800dc2c:	2b00      	cmp	r3, #0
 800dc2e:	d0aa      	beq.n	800db86 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800dc30:	6823      	ldr	r3, [r4, #0]
 800dc32:	689a      	ldr	r2, [r3, #8]
 800dc34:	07d0      	lsls	r0, r2, #31
 800dc36:	d4e9      	bmi.n	800dc0c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800dc38:	f7fc fd0e 	bl	800a658 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800dc3c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800dc3e:	b29b      	uxth	r3, r3
 800dc40:	2b00      	cmp	r3, #0
 800dc42:	d1f5      	bne.n	800dc30 <HAL_SPI_Receive+0x184>
 800dc44:	e79f      	b.n	800db86 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800dc46:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc48:	7b1b      	ldrb	r3, [r3, #12]
 800dc4a:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800dc4c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800dc4e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800dc50:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800dc52:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800dc54:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800dc56:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800dc58:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800dc5a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800dc5c:	b29b      	uxth	r3, r3
 800dc5e:	2b00      	cmp	r3, #0
 800dc60:	d091      	beq.n	800db86 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800dc62:	6823      	ldr	r3, [r4, #0]
 800dc64:	689a      	ldr	r2, [r3, #8]
 800dc66:	07d1      	lsls	r1, r2, #31
 800dc68:	d4ed      	bmi.n	800dc46 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800dc6a:	f7fc fcf5 	bl	800a658 <HAL_GetTick>
 800dc6e:	1b80      	subs	r0, r0, r6
 800dc70:	42a8      	cmp	r0, r5
 800dc72:	d3f2      	bcc.n	800dc5a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800dc74:	2003      	movs	r0, #3
 800dc76:	e736      	b.n	800dae6 <HAL_SPI_Receive+0x3a>

0800dc78 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800dc78:	2800      	cmp	r0, #0
 800dc7a:	f000 8087 	beq.w	800dd8c <HAL_TIM_Base_Init+0x114>
{
 800dc7e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800dc80:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800dc84:	4604      	mov	r4, r0
 800dc86:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800dc8a:	2b00      	cmp	r3, #0
 800dc8c:	d079      	beq.n	800dd82 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800dc8e:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800dc90:	493f      	ldr	r1, [pc, #252]	; (800dd90 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800dc92:	2302      	movs	r3, #2
 800dc94:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800dc98:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800dc9a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800dc9c:	d05d      	beq.n	800dd5a <HAL_TIM_Base_Init+0xe2>
 800dc9e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800dca2:	d031      	beq.n	800dd08 <HAL_TIM_Base_Init+0x90>
 800dca4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800dca8:	428a      	cmp	r2, r1
 800dcaa:	d02d      	beq.n	800dd08 <HAL_TIM_Base_Init+0x90>
 800dcac:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800dcb0:	428a      	cmp	r2, r1
 800dcb2:	d029      	beq.n	800dd08 <HAL_TIM_Base_Init+0x90>
 800dcb4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800dcb8:	428a      	cmp	r2, r1
 800dcba:	d025      	beq.n	800dd08 <HAL_TIM_Base_Init+0x90>
 800dcbc:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800dcc0:	428a      	cmp	r2, r1
 800dcc2:	d04a      	beq.n	800dd5a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800dcc4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800dcc8:	428a      	cmp	r2, r1
 800dcca:	d021      	beq.n	800dd10 <HAL_TIM_Base_Init+0x98>
 800dccc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800dcd0:	428a      	cmp	r2, r1
 800dcd2:	d01d      	beq.n	800dd10 <HAL_TIM_Base_Init+0x98>
 800dcd4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800dcd8:	428a      	cmp	r2, r1
 800dcda:	d019      	beq.n	800dd10 <HAL_TIM_Base_Init+0x98>
 800dcdc:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800dce0:	428a      	cmp	r2, r1
 800dce2:	d015      	beq.n	800dd10 <HAL_TIM_Base_Init+0x98>
 800dce4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800dce8:	428a      	cmp	r2, r1
 800dcea:	d011      	beq.n	800dd10 <HAL_TIM_Base_Init+0x98>
 800dcec:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800dcf0:	428a      	cmp	r2, r1
 800dcf2:	d00d      	beq.n	800dd10 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800dcf4:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800dcf6:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800dcf8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800dcfc:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800dcfe:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800dd00:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800dd02:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800dd04:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800dd06:	e010      	b.n	800dd2a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800dd08:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800dd0a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800dd0e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800dd10:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800dd12:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800dd14:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800dd18:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800dd1a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800dd1e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800dd20:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800dd22:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800dd24:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800dd26:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800dd28:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800dd2a:	2301      	movs	r3, #1
 800dd2c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800dd2e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800dd32:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800dd36:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800dd3a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800dd3e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800dd42:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800dd46:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800dd4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800dd4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800dd52:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800dd56:	2000      	movs	r0, #0
}
 800dd58:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800dd5a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800dd5c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800dd5e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800dd62:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800dd64:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800dd68:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800dd6a:	69a1      	ldr	r1, [r4, #24]
 800dd6c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800dd70:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800dd72:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800dd74:	68e3      	ldr	r3, [r4, #12]
 800dd76:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800dd78:	6863      	ldr	r3, [r4, #4]
 800dd7a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800dd7c:	6963      	ldr	r3, [r4, #20]
 800dd7e:	6313      	str	r3, [r2, #48]	; 0x30
 800dd80:	e7d3      	b.n	800dd2a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800dd82:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800dd86:	f7f4 fba3 	bl	80024d0 <HAL_TIM_Base_MspInit>
 800dd8a:	e780      	b.n	800dc8e <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800dd8c:	2001      	movs	r0, #1
}
 800dd8e:	4770      	bx	lr
 800dd90:	40010000 	.word	0x40010000

0800dd94 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800dd94:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800dd98:	2b01      	cmp	r3, #1
 800dd9a:	d12f      	bne.n	800ddfc <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800dd9c:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800dd9e:	4919      	ldr	r1, [pc, #100]	; (800de04 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800dda0:	2202      	movs	r2, #2
 800dda2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800dda6:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800dda8:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ddaa:	f042 0201 	orr.w	r2, r2, #1
 800ddae:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ddb0:	d019      	beq.n	800dde6 <HAL_TIM_Base_Start_IT+0x52>
 800ddb2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ddb6:	d016      	beq.n	800dde6 <HAL_TIM_Base_Start_IT+0x52>
 800ddb8:	4a13      	ldr	r2, [pc, #76]	; (800de08 <HAL_TIM_Base_Start_IT+0x74>)
 800ddba:	4293      	cmp	r3, r2
 800ddbc:	d013      	beq.n	800dde6 <HAL_TIM_Base_Start_IT+0x52>
 800ddbe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ddc2:	4293      	cmp	r3, r2
 800ddc4:	d00f      	beq.n	800dde6 <HAL_TIM_Base_Start_IT+0x52>
 800ddc6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ddca:	4293      	cmp	r3, r2
 800ddcc:	d00b      	beq.n	800dde6 <HAL_TIM_Base_Start_IT+0x52>
 800ddce:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ddd2:	4293      	cmp	r3, r2
 800ddd4:	d007      	beq.n	800dde6 <HAL_TIM_Base_Start_IT+0x52>
 800ddd6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ddda:	4293      	cmp	r3, r2
 800dddc:	d003      	beq.n	800dde6 <HAL_TIM_Base_Start_IT+0x52>
 800ddde:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800dde2:	4293      	cmp	r3, r2
 800dde4:	d104      	bne.n	800ddf0 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800dde6:	689a      	ldr	r2, [r3, #8]
 800dde8:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ddec:	2a06      	cmp	r2, #6
 800ddee:	d007      	beq.n	800de00 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ddf0:	681a      	ldr	r2, [r3, #0]
 800ddf2:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ddf6:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ddf8:	601a      	str	r2, [r3, #0]
 800ddfa:	4770      	bx	lr
    return HAL_ERROR;
 800ddfc:	2001      	movs	r0, #1
 800ddfe:	4770      	bx	lr
  return HAL_OK;
 800de00:	2000      	movs	r0, #0
}
 800de02:	4770      	bx	lr
 800de04:	40010000 	.word	0x40010000
 800de08:	40000400 	.word	0x40000400

0800de0c <HAL_TIM_PWM_MspInit>:
 800de0c:	4770      	bx	lr
 800de0e:	bf00      	nop

0800de10 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800de10:	2800      	cmp	r0, #0
 800de12:	f000 8087 	beq.w	800df24 <HAL_TIM_PWM_Init+0x114>
{
 800de16:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800de18:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800de1c:	4604      	mov	r4, r0
 800de1e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800de22:	2b00      	cmp	r3, #0
 800de24:	d079      	beq.n	800df1a <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800de26:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800de28:	493f      	ldr	r1, [pc, #252]	; (800df28 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800de2a:	2302      	movs	r3, #2
 800de2c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800de30:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800de32:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800de34:	d05d      	beq.n	800def2 <HAL_TIM_PWM_Init+0xe2>
 800de36:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800de3a:	d031      	beq.n	800dea0 <HAL_TIM_PWM_Init+0x90>
 800de3c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800de40:	428a      	cmp	r2, r1
 800de42:	d02d      	beq.n	800dea0 <HAL_TIM_PWM_Init+0x90>
 800de44:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800de48:	428a      	cmp	r2, r1
 800de4a:	d029      	beq.n	800dea0 <HAL_TIM_PWM_Init+0x90>
 800de4c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800de50:	428a      	cmp	r2, r1
 800de52:	d025      	beq.n	800dea0 <HAL_TIM_PWM_Init+0x90>
 800de54:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800de58:	428a      	cmp	r2, r1
 800de5a:	d04a      	beq.n	800def2 <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800de5c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800de60:	428a      	cmp	r2, r1
 800de62:	d021      	beq.n	800dea8 <HAL_TIM_PWM_Init+0x98>
 800de64:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800de68:	428a      	cmp	r2, r1
 800de6a:	d01d      	beq.n	800dea8 <HAL_TIM_PWM_Init+0x98>
 800de6c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800de70:	428a      	cmp	r2, r1
 800de72:	d019      	beq.n	800dea8 <HAL_TIM_PWM_Init+0x98>
 800de74:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800de78:	428a      	cmp	r2, r1
 800de7a:	d015      	beq.n	800dea8 <HAL_TIM_PWM_Init+0x98>
 800de7c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800de80:	428a      	cmp	r2, r1
 800de82:	d011      	beq.n	800dea8 <HAL_TIM_PWM_Init+0x98>
 800de84:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800de88:	428a      	cmp	r2, r1
 800de8a:	d00d      	beq.n	800dea8 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800de8c:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800de8e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800de90:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800de94:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800de96:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800de98:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800de9a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800de9c:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800de9e:	e010      	b.n	800dec2 <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800dea0:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800dea2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800dea6:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800dea8:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800deaa:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800deac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800deb0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800deb2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800deb6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800deb8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800deba:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800debc:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800debe:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800dec0:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800dec2:	2301      	movs	r3, #1
 800dec4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800dec6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800deca:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800dece:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ded2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ded6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800deda:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800dede:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800dee2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800dee6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800deea:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800deee:	2000      	movs	r0, #0
}
 800def0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800def2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800def4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800def6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800defa:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800defc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800df00:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800df02:	69a1      	ldr	r1, [r4, #24]
 800df04:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800df08:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800df0a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800df0c:	68e3      	ldr	r3, [r4, #12]
 800df0e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800df10:	6863      	ldr	r3, [r4, #4]
 800df12:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800df14:	6963      	ldr	r3, [r4, #20]
 800df16:	6313      	str	r3, [r2, #48]	; 0x30
 800df18:	e7d3      	b.n	800dec2 <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800df1a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800df1e:	f7ff ff75 	bl	800de0c <HAL_TIM_PWM_MspInit>
 800df22:	e780      	b.n	800de26 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800df24:	2001      	movs	r0, #1
}
 800df26:	4770      	bx	lr
 800df28:	40010000 	.word	0x40010000

0800df2c <HAL_TIM_PWM_Start>:
 800df2c:	2900      	cmp	r1, #0
 800df2e:	d13c      	bne.n	800dfaa <HAL_TIM_PWM_Start+0x7e>
 800df30:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800df34:	2b01      	cmp	r3, #1
 800df36:	d140      	bne.n	800dfba <HAL_TIM_PWM_Start+0x8e>
 800df38:	2302      	movs	r3, #2
 800df3a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800df3e:	6803      	ldr	r3, [r0, #0]
 800df40:	f001 011f 	and.w	r1, r1, #31
 800df44:	6a18      	ldr	r0, [r3, #32]
 800df46:	2201      	movs	r2, #1
 800df48:	408a      	lsls	r2, r1
 800df4a:	ea20 0002 	bic.w	r0, r0, r2
 800df4e:	6218      	str	r0, [r3, #32]
 800df50:	6a18      	ldr	r0, [r3, #32]
 800df52:	492c      	ldr	r1, [pc, #176]	; (800e004 <HAL_TIM_PWM_Start+0xd8>)
 800df54:	4302      	orrs	r2, r0
 800df56:	428b      	cmp	r3, r1
 800df58:	621a      	str	r2, [r3, #32]
 800df5a:	d038      	beq.n	800dfce <HAL_TIM_PWM_Start+0xa2>
 800df5c:	4a2a      	ldr	r2, [pc, #168]	; (800e008 <HAL_TIM_PWM_Start+0xdc>)
 800df5e:	4293      	cmp	r3, r2
 800df60:	d035      	beq.n	800dfce <HAL_TIM_PWM_Start+0xa2>
 800df62:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800df66:	d015      	beq.n	800df94 <HAL_TIM_PWM_Start+0x68>
 800df68:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800df6c:	428b      	cmp	r3, r1
 800df6e:	d011      	beq.n	800df94 <HAL_TIM_PWM_Start+0x68>
 800df70:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800df74:	428b      	cmp	r3, r1
 800df76:	d00d      	beq.n	800df94 <HAL_TIM_PWM_Start+0x68>
 800df78:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800df7c:	428b      	cmp	r3, r1
 800df7e:	d009      	beq.n	800df94 <HAL_TIM_PWM_Start+0x68>
 800df80:	4293      	cmp	r3, r2
 800df82:	d007      	beq.n	800df94 <HAL_TIM_PWM_Start+0x68>
 800df84:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800df88:	4293      	cmp	r3, r2
 800df8a:	d003      	beq.n	800df94 <HAL_TIM_PWM_Start+0x68>
 800df8c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800df90:	4293      	cmp	r3, r2
 800df92:	d104      	bne.n	800df9e <HAL_TIM_PWM_Start+0x72>
 800df94:	689a      	ldr	r2, [r3, #8]
 800df96:	f002 0207 	and.w	r2, r2, #7
 800df9a:	2a06      	cmp	r2, #6
 800df9c:	d020      	beq.n	800dfe0 <HAL_TIM_PWM_Start+0xb4>
 800df9e:	681a      	ldr	r2, [r3, #0]
 800dfa0:	f042 0201 	orr.w	r2, r2, #1
 800dfa4:	2000      	movs	r0, #0
 800dfa6:	601a      	str	r2, [r3, #0]
 800dfa8:	4770      	bx	lr
 800dfaa:	2904      	cmp	r1, #4
 800dfac:	d022      	beq.n	800dff4 <HAL_TIM_PWM_Start+0xc8>
 800dfae:	2908      	cmp	r1, #8
 800dfb0:	d018      	beq.n	800dfe4 <HAL_TIM_PWM_Start+0xb8>
 800dfb2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800dfb6:	2b01      	cmp	r3, #1
 800dfb8:	d001      	beq.n	800dfbe <HAL_TIM_PWM_Start+0x92>
 800dfba:	2001      	movs	r0, #1
 800dfbc:	4770      	bx	lr
 800dfbe:	2904      	cmp	r1, #4
 800dfc0:	d01c      	beq.n	800dffc <HAL_TIM_PWM_Start+0xd0>
 800dfc2:	2908      	cmp	r1, #8
 800dfc4:	d012      	beq.n	800dfec <HAL_TIM_PWM_Start+0xc0>
 800dfc6:	2302      	movs	r3, #2
 800dfc8:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800dfcc:	e7b7      	b.n	800df3e <HAL_TIM_PWM_Start+0x12>
 800dfce:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800dfd0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800dfd4:	645a      	str	r2, [r3, #68]	; 0x44
 800dfd6:	689a      	ldr	r2, [r3, #8]
 800dfd8:	f002 0207 	and.w	r2, r2, #7
 800dfdc:	2a06      	cmp	r2, #6
 800dfde:	d1de      	bne.n	800df9e <HAL_TIM_PWM_Start+0x72>
 800dfe0:	2000      	movs	r0, #0
 800dfe2:	4770      	bx	lr
 800dfe4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800dfe8:	2b01      	cmp	r3, #1
 800dfea:	d1e6      	bne.n	800dfba <HAL_TIM_PWM_Start+0x8e>
 800dfec:	2302      	movs	r3, #2
 800dfee:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800dff2:	e7a4      	b.n	800df3e <HAL_TIM_PWM_Start+0x12>
 800dff4:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800dff8:	2b01      	cmp	r3, #1
 800dffa:	d1de      	bne.n	800dfba <HAL_TIM_PWM_Start+0x8e>
 800dffc:	2302      	movs	r3, #2
 800dffe:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800e002:	e79c      	b.n	800df3e <HAL_TIM_PWM_Start+0x12>
 800e004:	40010000 	.word	0x40010000
 800e008:	40010400 	.word	0x40010400

0800e00c <HAL_TIM_PWM_Stop>:
 800e00c:	6803      	ldr	r3, [r0, #0]
 800e00e:	b410      	push	{r4}
 800e010:	6a1a      	ldr	r2, [r3, #32]
 800e012:	f001 041f 	and.w	r4, r1, #31
 800e016:	f04f 0c01 	mov.w	ip, #1
 800e01a:	fa0c fc04 	lsl.w	ip, ip, r4
 800e01e:	ea22 020c 	bic.w	r2, r2, ip
 800e022:	621a      	str	r2, [r3, #32]
 800e024:	4a20      	ldr	r2, [pc, #128]	; (800e0a8 <HAL_TIM_PWM_Stop+0x9c>)
 800e026:	6a1c      	ldr	r4, [r3, #32]
 800e028:	621c      	str	r4, [r3, #32]
 800e02a:	4293      	cmp	r3, r2
 800e02c:	d015      	beq.n	800e05a <HAL_TIM_PWM_Stop+0x4e>
 800e02e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e032:	4293      	cmp	r3, r2
 800e034:	d011      	beq.n	800e05a <HAL_TIM_PWM_Stop+0x4e>
 800e036:	6a1c      	ldr	r4, [r3, #32]
 800e038:	f241 1211 	movw	r2, #4369	; 0x1111
 800e03c:	4214      	tst	r4, r2
 800e03e:	d104      	bne.n	800e04a <HAL_TIM_PWM_Stop+0x3e>
 800e040:	6a1c      	ldr	r4, [r3, #32]
 800e042:	f240 4244 	movw	r2, #1092	; 0x444
 800e046:	4214      	tst	r4, r2
 800e048:	d022      	beq.n	800e090 <HAL_TIM_PWM_Stop+0x84>
 800e04a:	2301      	movs	r3, #1
 800e04c:	b9a1      	cbnz	r1, 800e078 <HAL_TIM_PWM_Stop+0x6c>
 800e04e:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800e052:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e056:	2000      	movs	r0, #0
 800e058:	4770      	bx	lr
 800e05a:	6a1c      	ldr	r4, [r3, #32]
 800e05c:	f241 1211 	movw	r2, #4369	; 0x1111
 800e060:	4214      	tst	r4, r2
 800e062:	d1e8      	bne.n	800e036 <HAL_TIM_PWM_Stop+0x2a>
 800e064:	6a1c      	ldr	r4, [r3, #32]
 800e066:	f240 4244 	movw	r2, #1092	; 0x444
 800e06a:	4214      	tst	r4, r2
 800e06c:	d1e3      	bne.n	800e036 <HAL_TIM_PWM_Stop+0x2a>
 800e06e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800e070:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800e074:	645a      	str	r2, [r3, #68]	; 0x44
 800e076:	e7de      	b.n	800e036 <HAL_TIM_PWM_Stop+0x2a>
 800e078:	2904      	cmp	r1, #4
 800e07a:	d00e      	beq.n	800e09a <HAL_TIM_PWM_Stop+0x8e>
 800e07c:	2908      	cmp	r1, #8
 800e07e:	bf0c      	ite	eq
 800e080:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800e084:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800e088:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e08c:	2000      	movs	r0, #0
 800e08e:	4770      	bx	lr
 800e090:	681a      	ldr	r2, [r3, #0]
 800e092:	f022 0201 	bic.w	r2, r2, #1
 800e096:	601a      	str	r2, [r3, #0]
 800e098:	e7d7      	b.n	800e04a <HAL_TIM_PWM_Stop+0x3e>
 800e09a:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800e09e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e0a2:	2000      	movs	r0, #0
 800e0a4:	4770      	bx	lr
 800e0a6:	bf00      	nop
 800e0a8:	40010000 	.word	0x40010000

0800e0ac <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800e0ac:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e0b0:	2b01      	cmp	r3, #1
 800e0b2:	f000 80d2 	beq.w	800e25a <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800e0b6:	2301      	movs	r3, #1
{
 800e0b8:	b570      	push	{r4, r5, r6, lr}
 800e0ba:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800e0bc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800e0c0:	2a0c      	cmp	r2, #12
 800e0c2:	d808      	bhi.n	800e0d6 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800e0c4:	e8df f002 	tbb	[pc, r2]
 800e0c8:	0707073e 	.word	0x0707073e
 800e0cc:	0707076b 	.word	0x0707076b
 800e0d0:	0707079b 	.word	0x0707079b
 800e0d4:	0c          	.byte	0x0c
 800e0d5:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800e0d6:	2300      	movs	r3, #0
 800e0d8:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800e0dc:	2001      	movs	r0, #1
}
 800e0de:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800e0e0:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e0e2:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800e0e4:	6a1a      	ldr	r2, [r3, #32]
 800e0e6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800e0ea:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800e0ec:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800e0ee:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800e0f0:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800e0f2:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e0f6:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800e0fa:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800e0fc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800e100:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e104:	4d70      	ldr	r5, [pc, #448]	; (800e2c8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800e106:	42ab      	cmp	r3, r5
 800e108:	f000 80c8 	beq.w	800e29c <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800e10c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e110:	42ab      	cmp	r3, r5
 800e112:	f000 80c3 	beq.w	800e29c <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800e116:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800e118:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800e11a:	6848      	ldr	r0, [r1, #4]
 800e11c:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800e11e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800e120:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e122:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800e124:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800e128:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800e12a:	69da      	ldr	r2, [r3, #28]
 800e12c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e130:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e132:	69da      	ldr	r2, [r3, #28]
 800e134:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800e138:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800e13a:	2300      	movs	r3, #0
 800e13c:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800e140:	2000      	movs	r0, #0
}
 800e142:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800e144:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800e146:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e148:	6a1a      	ldr	r2, [r3, #32]
 800e14a:	f022 0201 	bic.w	r2, r2, #1
 800e14e:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800e150:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800e152:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800e154:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800e156:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800e15a:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800e15c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800e15e:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800e162:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800e164:	4d58      	ldr	r5, [pc, #352]	; (800e2c8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800e166:	42ab      	cmp	r3, r5
 800e168:	d079      	beq.n	800e25e <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800e16a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e16e:	42ab      	cmp	r3, r5
 800e170:	d075      	beq.n	800e25e <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800e172:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800e174:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800e176:	6848      	ldr	r0, [r1, #4]
 800e178:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800e17a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800e17c:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800e17e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800e180:	f042 0208 	orr.w	r2, r2, #8
 800e184:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800e186:	699a      	ldr	r2, [r3, #24]
 800e188:	f022 0204 	bic.w	r2, r2, #4
 800e18c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800e18e:	699a      	ldr	r2, [r3, #24]
 800e190:	430a      	orrs	r2, r1
 800e192:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800e194:	2300      	movs	r3, #0
 800e196:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800e19a:	2000      	movs	r0, #0
}
 800e19c:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800e19e:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e1a0:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e1a2:	6a1a      	ldr	r2, [r3, #32]
 800e1a4:	f022 0210 	bic.w	r2, r2, #16
 800e1a8:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800e1aa:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800e1ac:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800e1ae:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800e1b0:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e1b4:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800e1b8:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800e1ba:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800e1be:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800e1c2:	4d41      	ldr	r5, [pc, #260]	; (800e2c8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800e1c4:	42ab      	cmp	r3, r5
 800e1c6:	d059      	beq.n	800e27c <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800e1c8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e1cc:	42ab      	cmp	r3, r5
 800e1ce:	d055      	beq.n	800e27c <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800e1d0:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800e1d2:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800e1d4:	6848      	ldr	r0, [r1, #4]
 800e1d6:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800e1d8:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800e1da:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e1dc:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800e1de:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800e1e2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800e1e4:	699a      	ldr	r2, [r3, #24]
 800e1e6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e1ea:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e1ec:	699a      	ldr	r2, [r3, #24]
 800e1ee:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800e1f2:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800e1f4:	2300      	movs	r3, #0
 800e1f6:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800e1fa:	2000      	movs	r0, #0
}
 800e1fc:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800e1fe:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800e200:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800e202:	6a1a      	ldr	r2, [r3, #32]
 800e204:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800e208:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800e20a:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800e20c:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800e20e:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800e210:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800e214:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800e216:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800e218:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800e21c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800e220:	4d29      	ldr	r5, [pc, #164]	; (800e2c8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800e222:	42ab      	cmp	r3, r5
 800e224:	d040      	beq.n	800e2a8 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800e226:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e22a:	42ab      	cmp	r3, r5
 800e22c:	d03c      	beq.n	800e2a8 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800e22e:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800e230:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800e232:	6848      	ldr	r0, [r1, #4]
 800e234:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800e236:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800e238:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800e23a:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800e23c:	f042 0208 	orr.w	r2, r2, #8
 800e240:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800e242:	69da      	ldr	r2, [r3, #28]
 800e244:	f022 0204 	bic.w	r2, r2, #4
 800e248:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800e24a:	69da      	ldr	r2, [r3, #28]
 800e24c:	430a      	orrs	r2, r1
 800e24e:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800e250:	2300      	movs	r3, #0
 800e252:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800e256:	2000      	movs	r0, #0
}
 800e258:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800e25a:	2002      	movs	r0, #2
}
 800e25c:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800e25e:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800e260:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800e264:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800e266:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800e26a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800e26e:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800e272:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800e276:	ea4e 0404 	orr.w	r4, lr, r4
 800e27a:	e77a      	b.n	800e172 <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800e27c:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800e27e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800e282:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800e286:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800e28a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800e28e:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800e292:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800e296:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800e29a:	e799      	b.n	800e1d0 <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800e29c:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800e29e:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800e2a2:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800e2a6:	e736      	b.n	800e116 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800e2a8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800e2aa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800e2ae:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800e2b2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800e2b6:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800e2ba:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800e2be:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800e2c2:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800e2c6:	e7b2      	b.n	800e22e <HAL_TIM_PWM_ConfigChannel+0x182>
 800e2c8:	40010000 	.word	0x40010000

0800e2cc <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800e2cc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e2d0:	2b01      	cmp	r3, #1
 800e2d2:	d075      	beq.n	800e3c0 <HAL_TIM_ConfigClockSource+0xf4>
 800e2d4:	4602      	mov	r2, r0
{
 800e2d6:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800e2d8:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800e2da:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e2dc:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800e2e0:	2001      	movs	r0, #1
 800e2e2:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800e2e6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e2e8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800e2ec:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800e2f0:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800e2f2:	680b      	ldr	r3, [r1, #0]
 800e2f4:	2b60      	cmp	r3, #96	; 0x60
 800e2f6:	d065      	beq.n	800e3c4 <HAL_TIM_ConfigClockSource+0xf8>
 800e2f8:	d824      	bhi.n	800e344 <HAL_TIM_ConfigClockSource+0x78>
 800e2fa:	2b40      	cmp	r3, #64	; 0x40
 800e2fc:	d07c      	beq.n	800e3f8 <HAL_TIM_ConfigClockSource+0x12c>
 800e2fe:	d94b      	bls.n	800e398 <HAL_TIM_ConfigClockSource+0xcc>
 800e300:	2b50      	cmp	r3, #80	; 0x50
 800e302:	d117      	bne.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800e304:	684b      	ldr	r3, [r1, #4]
 800e306:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800e308:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800e30a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800e30e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e310:	6a23      	ldr	r3, [r4, #32]
 800e312:	f023 0301 	bic.w	r3, r3, #1
 800e316:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e318:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e31a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800e31e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800e322:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800e324:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800e326:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800e328:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e32c:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800e330:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800e332:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800e334:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800e336:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800e338:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e33c:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800e340:	bc30      	pop	{r4, r5}
 800e342:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800e344:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800e348:	d038      	beq.n	800e3bc <HAL_TIM_ConfigClockSource+0xf0>
 800e34a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e34e:	d110      	bne.n	800e372 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e350:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800e354:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e356:	432b      	orrs	r3, r5
 800e358:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e35a:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e35e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800e362:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800e364:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800e366:	68a3      	ldr	r3, [r4, #8]
 800e368:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800e36c:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800e36e:	60a3      	str	r3, [r4, #8]
      break;
 800e370:	e7e0      	b.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800e372:	2b70      	cmp	r3, #112	; 0x70
 800e374:	d1de      	bne.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e376:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800e37a:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e37c:	432b      	orrs	r3, r5
 800e37e:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e380:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e384:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800e388:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800e38a:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800e38c:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800e38e:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800e392:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800e394:	60a3      	str	r3, [r4, #8]
      break;
 800e396:	e7cd      	b.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800e398:	2b20      	cmp	r3, #32
 800e39a:	d002      	beq.n	800e3a2 <HAL_TIM_ConfigClockSource+0xd6>
 800e39c:	d90a      	bls.n	800e3b4 <HAL_TIM_ConfigClockSource+0xe8>
 800e39e:	2b30      	cmp	r3, #48	; 0x30
 800e3a0:	d1c8      	bne.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800e3a2:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e3a4:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e3a8:	430b      	orrs	r3, r1
 800e3aa:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800e3ae:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800e3b0:	60a3      	str	r3, [r4, #8]
}
 800e3b2:	e7bf      	b.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800e3b4:	f033 0110 	bics.w	r1, r3, #16
 800e3b8:	d1bc      	bne.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
 800e3ba:	e7f2      	b.n	800e3a2 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800e3bc:	2000      	movs	r0, #0
 800e3be:	e7b9      	b.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800e3c0:	2002      	movs	r0, #2
}
 800e3c2:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e3c4:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800e3c6:	6848      	ldr	r0, [r1, #4]
 800e3c8:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e3ca:	f023 0310 	bic.w	r3, r3, #16
 800e3ce:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e3d0:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800e3d2:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800e3d4:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800e3d8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800e3dc:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800e3e0:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800e3e4:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800e3e6:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800e3e8:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e3ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e3ee:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800e3f2:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800e3f4:	60a3      	str	r3, [r4, #8]
}
 800e3f6:	e79d      	b.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800e3f8:	684b      	ldr	r3, [r1, #4]
 800e3fa:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800e3fc:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800e3fe:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800e402:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e404:	6a23      	ldr	r3, [r4, #32]
 800e406:	f023 0301 	bic.w	r3, r3, #1
 800e40a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e40c:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e40e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800e412:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800e416:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800e418:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800e41a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e41c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e420:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800e424:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800e426:	60a3      	str	r3, [r4, #8]
}
 800e428:	e784      	b.n	800e334 <HAL_TIM_ConfigClockSource+0x68>
 800e42a:	bf00      	nop

0800e42c <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800e42c:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800e430:	2a01      	cmp	r2, #1
 800e432:	d050      	beq.n	800e4d6 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800e434:	4603      	mov	r3, r0
{
 800e436:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800e438:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800e43a:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e43c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800e440:	2001      	movs	r0, #1
 800e442:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800e446:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800e448:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800e44a:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e44c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800e450:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800e452:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800e456:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800e458:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800e45a:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800e45c:	d060      	beq.n	800e520 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800e45e:	d90f      	bls.n	800e480 <HAL_TIM_SlaveConfigSynchro+0x54>
 800e460:	2860      	cmp	r0, #96	; 0x60
 800e462:	d03a      	beq.n	800e4da <HAL_TIM_SlaveConfigSynchro+0xae>
 800e464:	2870      	cmp	r0, #112	; 0x70
 800e466:	d10e      	bne.n	800e486 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e468:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800e46c:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e46e:	432a      	orrs	r2, r5
 800e470:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e472:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e476:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800e47a:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800e47c:	60a2      	str	r2, [r4, #8]
 800e47e:	e00f      	b.n	800e4a0 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800e480:	2840      	cmp	r0, #64	; 0x40
 800e482:	d03d      	beq.n	800e500 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800e484:	d907      	bls.n	800e496 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800e486:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800e488:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800e48a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800e48e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800e492:	bc30      	pop	{r4, r5}
 800e494:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800e496:	2820      	cmp	r0, #32
 800e498:	d002      	beq.n	800e4a0 <HAL_TIM_SlaveConfigSynchro+0x74>
 800e49a:	d912      	bls.n	800e4c2 <HAL_TIM_SlaveConfigSynchro+0x96>
 800e49c:	2830      	cmp	r0, #48	; 0x30
 800e49e:	d1f2      	bne.n	800e486 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800e4a0:	68e2      	ldr	r2, [r4, #12]
 800e4a2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e4a6:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800e4a8:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800e4aa:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800e4ac:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800e4ae:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800e4b2:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800e4b4:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e4b8:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800e4bc:	4608      	mov	r0, r1
}
 800e4be:	bc30      	pop	{r4, r5}
 800e4c0:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800e4c2:	f030 0210 	bics.w	r2, r0, #16
 800e4c6:	d0eb      	beq.n	800e4a0 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800e4c8:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800e4ca:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800e4cc:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800e4d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800e4d4:	e7dd      	b.n	800e492 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800e4d6:	2002      	movs	r0, #2
}
 800e4d8:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e4da:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800e4dc:	6888      	ldr	r0, [r1, #8]
 800e4de:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e4e0:	f022 0210 	bic.w	r2, r2, #16
 800e4e4:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e4e6:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800e4e8:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800e4ea:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800e4ee:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800e4f2:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800e4f6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800e4fa:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800e4fc:	6222      	str	r2, [r4, #32]
 800e4fe:	e7cf      	b.n	800e4a0 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800e500:	2d05      	cmp	r5, #5
 800e502:	d0c0      	beq.n	800e486 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800e504:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800e506:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800e508:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800e50a:	f022 0201 	bic.w	r2, r2, #1
 800e50e:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800e510:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e512:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800e516:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800e51a:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800e51c:	6220      	str	r0, [r4, #32]
      break;
 800e51e:	e7bf      	b.n	800e4a0 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800e520:	688a      	ldr	r2, [r1, #8]
 800e522:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800e524:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800e526:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800e52a:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e52c:	6a22      	ldr	r2, [r4, #32]
 800e52e:	f022 0201 	bic.w	r2, r2, #1
 800e532:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e534:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e536:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800e53a:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800e53e:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800e540:	6221      	str	r1, [r4, #32]
 800e542:	e7ad      	b.n	800e4a0 <HAL_TIM_SlaveConfigSynchro+0x74>

0800e544 <HAL_TIM_OC_DelayElapsedCallback>:
 800e544:	4770      	bx	lr
 800e546:	bf00      	nop

0800e548 <HAL_TIM_IC_CaptureCallback>:
 800e548:	4770      	bx	lr
 800e54a:	bf00      	nop

0800e54c <HAL_TIM_PWM_PulseFinishedCallback>:
 800e54c:	4770      	bx	lr
 800e54e:	bf00      	nop

0800e550 <HAL_TIM_TriggerCallback>:
 800e550:	4770      	bx	lr
 800e552:	bf00      	nop

0800e554 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e554:	6803      	ldr	r3, [r0, #0]
 800e556:	691a      	ldr	r2, [r3, #16]
 800e558:	0791      	lsls	r1, r2, #30
{
 800e55a:	b510      	push	{r4, lr}
 800e55c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e55e:	d502      	bpl.n	800e566 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800e560:	68da      	ldr	r2, [r3, #12]
 800e562:	0792      	lsls	r2, r2, #30
 800e564:	d45f      	bmi.n	800e626 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800e566:	691a      	ldr	r2, [r3, #16]
 800e568:	0750      	lsls	r0, r2, #29
 800e56a:	d502      	bpl.n	800e572 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800e56c:	68da      	ldr	r2, [r3, #12]
 800e56e:	0751      	lsls	r1, r2, #29
 800e570:	d446      	bmi.n	800e600 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800e572:	691a      	ldr	r2, [r3, #16]
 800e574:	0712      	lsls	r2, r2, #28
 800e576:	d502      	bpl.n	800e57e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800e578:	68da      	ldr	r2, [r3, #12]
 800e57a:	0710      	lsls	r0, r2, #28
 800e57c:	d42e      	bmi.n	800e5dc <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800e57e:	691a      	ldr	r2, [r3, #16]
 800e580:	06d2      	lsls	r2, r2, #27
 800e582:	d502      	bpl.n	800e58a <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800e584:	68da      	ldr	r2, [r3, #12]
 800e586:	06d0      	lsls	r0, r2, #27
 800e588:	d418      	bmi.n	800e5bc <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800e58a:	691a      	ldr	r2, [r3, #16]
 800e58c:	07d1      	lsls	r1, r2, #31
 800e58e:	d502      	bpl.n	800e596 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800e590:	68da      	ldr	r2, [r3, #12]
 800e592:	07d2      	lsls	r2, r2, #31
 800e594:	d45d      	bmi.n	800e652 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800e596:	691a      	ldr	r2, [r3, #16]
 800e598:	0610      	lsls	r0, r2, #24
 800e59a:	d502      	bpl.n	800e5a2 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800e59c:	68da      	ldr	r2, [r3, #12]
 800e59e:	0611      	lsls	r1, r2, #24
 800e5a0:	d45f      	bmi.n	800e662 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800e5a2:	691a      	ldr	r2, [r3, #16]
 800e5a4:	0652      	lsls	r2, r2, #25
 800e5a6:	d502      	bpl.n	800e5ae <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800e5a8:	68da      	ldr	r2, [r3, #12]
 800e5aa:	0650      	lsls	r0, r2, #25
 800e5ac:	d461      	bmi.n	800e672 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800e5ae:	691a      	ldr	r2, [r3, #16]
 800e5b0:	0691      	lsls	r1, r2, #26
 800e5b2:	d502      	bpl.n	800e5ba <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800e5b4:	68da      	ldr	r2, [r3, #12]
 800e5b6:	0692      	lsls	r2, r2, #26
 800e5b8:	d443      	bmi.n	800e642 <HAL_TIM_IRQHandler+0xee>
}
 800e5ba:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800e5bc:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800e5c0:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800e5c2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800e5c4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e5c6:	69db      	ldr	r3, [r3, #28]
 800e5c8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e5cc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e5ce:	d064      	beq.n	800e69a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800e5d0:	f7ff ffba 	bl	800e548 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e5d4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800e5d6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e5d8:	7722      	strb	r2, [r4, #28]
 800e5da:	e7d6      	b.n	800e58a <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800e5dc:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800e5e0:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800e5e2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800e5e4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e5e6:	69db      	ldr	r3, [r3, #28]
 800e5e8:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800e5ea:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e5ec:	d152      	bne.n	800e694 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e5ee:	f7ff ffa9 	bl	800e544 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e5f2:	4620      	mov	r0, r4
 800e5f4:	f7ff ffaa 	bl	800e54c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e5f8:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800e5fa:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e5fc:	7722      	strb	r2, [r4, #28]
 800e5fe:	e7be      	b.n	800e57e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800e600:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800e604:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800e606:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800e608:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e60a:	699b      	ldr	r3, [r3, #24]
 800e60c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e610:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e612:	d13c      	bne.n	800e68e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e614:	f7ff ff96 	bl	800e544 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e618:	4620      	mov	r0, r4
 800e61a:	f7ff ff97 	bl	800e54c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e61e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800e620:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e622:	7722      	strb	r2, [r4, #28]
 800e624:	e7a5      	b.n	800e572 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800e626:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800e62a:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800e62c:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800e62e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800e630:	699b      	ldr	r3, [r3, #24]
 800e632:	079b      	lsls	r3, r3, #30
 800e634:	d025      	beq.n	800e682 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800e636:	f7ff ff87 	bl	800e548 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e63a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800e63c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e63e:	7722      	strb	r2, [r4, #28]
 800e640:	e791      	b.n	800e566 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e642:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800e646:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e648:	611a      	str	r2, [r3, #16]
}
 800e64a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800e64e:	f000 b86b 	b.w	800e728 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800e652:	f06f 0201 	mvn.w	r2, #1
 800e656:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800e658:	4620      	mov	r0, r4
 800e65a:	f7f3 fc1b 	bl	8001e94 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800e65e:	6823      	ldr	r3, [r4, #0]
 800e660:	e799      	b.n	800e596 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800e662:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800e666:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800e668:	4620      	mov	r0, r4
 800e66a:	f000 f85f 	bl	800e72c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800e66e:	6823      	ldr	r3, [r4, #0]
 800e670:	e797      	b.n	800e5a2 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800e672:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800e676:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800e678:	4620      	mov	r0, r4
 800e67a:	f7ff ff69 	bl	800e550 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800e67e:	6823      	ldr	r3, [r4, #0]
 800e680:	e795      	b.n	800e5ae <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800e682:	f7ff ff5f 	bl	800e544 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e686:	4620      	mov	r0, r4
 800e688:	f7ff ff60 	bl	800e54c <HAL_TIM_PWM_PulseFinishedCallback>
 800e68c:	e7d5      	b.n	800e63a <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800e68e:	f7ff ff5b 	bl	800e548 <HAL_TIM_IC_CaptureCallback>
 800e692:	e7c4      	b.n	800e61e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800e694:	f7ff ff58 	bl	800e548 <HAL_TIM_IC_CaptureCallback>
 800e698:	e7ae      	b.n	800e5f8 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e69a:	f7ff ff53 	bl	800e544 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e69e:	4620      	mov	r0, r4
 800e6a0:	f7ff ff54 	bl	800e54c <HAL_TIM_PWM_PulseFinishedCallback>
 800e6a4:	e796      	b.n	800e5d4 <HAL_TIM_IRQHandler+0x80>
 800e6a6:	bf00      	nop

0800e6a8 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800e6a8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e6ac:	2b01      	cmp	r3, #1
 800e6ae:	d037      	beq.n	800e720 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800e6b0:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e6b2:	2202      	movs	r2, #2
{
 800e6b4:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800e6b6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800e6ba:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800e6bc:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800e6be:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800e6c0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800e6c4:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800e6c6:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800e6c8:	4a16      	ldr	r2, [pc, #88]	; (800e724 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800e6ca:	4293      	cmp	r3, r2
 800e6cc:	d01a      	beq.n	800e704 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800e6ce:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800e6d2:	d017      	beq.n	800e704 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800e6d4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e6d8:	4293      	cmp	r3, r2
 800e6da:	d013      	beq.n	800e704 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800e6dc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e6e0:	4293      	cmp	r3, r2
 800e6e2:	d00f      	beq.n	800e704 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800e6e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e6e8:	4293      	cmp	r3, r2
 800e6ea:	d00b      	beq.n	800e704 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800e6ec:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e6f0:	4293      	cmp	r3, r2
 800e6f2:	d007      	beq.n	800e704 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800e6f4:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800e6f8:	4293      	cmp	r3, r2
 800e6fa:	d003      	beq.n	800e704 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800e6fc:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800e700:	4293      	cmp	r3, r2
 800e702:	d104      	bne.n	800e70e <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800e704:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800e706:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800e70a:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800e70c:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800e70e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800e710:	2201      	movs	r2, #1
 800e712:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e716:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800e71a:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800e71c:	4618      	mov	r0, r3
}
 800e71e:	4770      	bx	lr
  __HAL_LOCK(htim);
 800e720:	2002      	movs	r0, #2
}
 800e722:	4770      	bx	lr
 800e724:	40010000 	.word	0x40010000

0800e728 <HAL_TIMEx_CommutCallback>:
 800e728:	4770      	bx	lr
 800e72a:	bf00      	nop

0800e72c <HAL_TIMEx_BreakCallback>:
 800e72c:	4770      	bx	lr
 800e72e:	bf00      	nop

0800e730 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800e730:	680b      	ldr	r3, [r1, #0]
{
 800e732:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800e734:	b9d3      	cbnz	r3, 800e76c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800e736:	6803      	ldr	r3, [r0, #0]
 800e738:	684c      	ldr	r4, [r1, #4]
 800e73a:	688a      	ldr	r2, [r1, #8]
 800e73c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800e740:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800e744:	4323      	orrs	r3, r4
 800e746:	4313      	orrs	r3, r2
 800e748:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800e74c:	4323      	orrs	r3, r4
 800e74e:	4313      	orrs	r3, r2
 800e750:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800e754:	4323      	orrs	r3, r4
 800e756:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800e75a:	4313      	orrs	r3, r2
 800e75c:	432b      	orrs	r3, r5
 800e75e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800e760:	4323      	orrs	r3, r4
 800e762:	4313      	orrs	r3, r2
 800e764:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800e766:	bc30      	pop	{r4, r5}
 800e768:	2000      	movs	r0, #0
 800e76a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800e76c:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800e770:	6803      	ldr	r3, [r0, #0]
 800e772:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800e776:	4323      	orrs	r3, r4
 800e778:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800e77a:	4313      	orrs	r3, r2
 800e77c:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800e77e:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800e780:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800e782:	6843      	ldr	r3, [r0, #4]
 800e784:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800e788:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800e78c:	4313      	orrs	r3, r2
 800e78e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800e792:	4323      	orrs	r3, r4
 800e794:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800e798:	4313      	orrs	r3, r2
 800e79a:	432b      	orrs	r3, r5
 800e79c:	698a      	ldr	r2, [r1, #24]
 800e79e:	4323      	orrs	r3, r4
 800e7a0:	4313      	orrs	r3, r2
 800e7a2:	6043      	str	r3, [r0, #4]
}
 800e7a4:	bc30      	pop	{r4, r5}
 800e7a6:	2000      	movs	r0, #0
 800e7a8:	4770      	bx	lr
 800e7aa:	bf00      	nop

0800e7ac <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800e7ac:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e7ae:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800e7b0:	bb02      	cbnz	r2, 800e7f4 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e7b2:	e9d1 2400 	ldrd	r2, r4, [r1]
 800e7b6:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800e7ba:	3c01      	subs	r4, #1
 800e7bc:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800e7c0:	3a01      	subs	r2, #1
 800e7c2:	4313      	orrs	r3, r2
 800e7c4:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800e7c8:	3c01      	subs	r4, #1
 800e7ca:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800e7ce:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800e7d2:	3a01      	subs	r2, #1
 800e7d4:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800e7d8:	698a      	ldr	r2, [r1, #24]
 800e7da:	1e69      	subs	r1, r5, #1
 800e7dc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800e7e0:	1e61      	subs	r1, r4, #1
 800e7e2:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800e7e6:	3a01      	subs	r2, #1
 800e7e8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800e7ec:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800e7ee:	bc30      	pop	{r4, r5}
 800e7f0:	2000      	movs	r0, #0
 800e7f2:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e7f4:	68cc      	ldr	r4, [r1, #12]
 800e7f6:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800e7f8:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e7fa:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800e7fe:	3c01      	subs	r4, #1
 800e800:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800e804:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800e808:	3a01      	subs	r2, #1
 800e80a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800e80e:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800e810:	e9d1 2400 	ldrd	r2, r4, [r1]
 800e814:	68c3      	ldr	r3, [r0, #12]
 800e816:	3c01      	subs	r4, #1
 800e818:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800e81c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800e820:	3a01      	subs	r2, #1
 800e822:	690c      	ldr	r4, [r1, #16]
 800e824:	4313      	orrs	r3, r2
 800e826:	698a      	ldr	r2, [r1, #24]
 800e828:	1e69      	subs	r1, r5, #1
 800e82a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e82e:	1e61      	subs	r1, r4, #1
 800e830:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800e834:	3a01      	subs	r2, #1
 800e836:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800e83a:	60c3      	str	r3, [r0, #12]
}
 800e83c:	bc30      	pop	{r4, r5}
 800e83e:	2000      	movs	r0, #0
 800e840:	4770      	bx	lr
 800e842:	bf00      	nop

0800e844 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800e844:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800e846:	680b      	ldr	r3, [r1, #0]
{
 800e848:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800e84a:	684a      	ldr	r2, [r1, #4]
{
 800e84c:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800e84e:	4313      	orrs	r3, r2
 800e850:	6900      	ldr	r0, [r0, #16]
 800e852:	68ca      	ldr	r2, [r1, #12]
 800e854:	0d80      	lsrs	r0, r0, #22
 800e856:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800e85a:	688a      	ldr	r2, [r1, #8]
 800e85c:	0580      	lsls	r0, r0, #22
 800e85e:	4303      	orrs	r3, r0
 800e860:	3a01      	subs	r2, #1
 800e862:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800e866:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800e868:	f7fb fef6 	bl	800a658 <HAL_GetTick>
 800e86c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800e86e:	1c6b      	adds	r3, r5, #1
 800e870:	d105      	bne.n	800e87e <FMC_SDRAM_SendCommand+0x3a>
 800e872:	69a3      	ldr	r3, [r4, #24]
 800e874:	f013 0320 	ands.w	r3, r3, #32
 800e878:	d1fb      	bne.n	800e872 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800e87a:	4618      	mov	r0, r3
}
 800e87c:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800e87e:	69a3      	ldr	r3, [r4, #24]
 800e880:	f013 0320 	ands.w	r3, r3, #32
 800e884:	d0f9      	beq.n	800e87a <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800e886:	b125      	cbz	r5, 800e892 <FMC_SDRAM_SendCommand+0x4e>
 800e888:	f7fb fee6 	bl	800a658 <HAL_GetTick>
 800e88c:	1b80      	subs	r0, r0, r6
 800e88e:	42a8      	cmp	r0, r5
 800e890:	d9ed      	bls.n	800e86e <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800e892:	2003      	movs	r0, #3
}
 800e894:	bd70      	pop	{r4, r5, r6, pc}
 800e896:	bf00      	nop

0800e898 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800e898:	6943      	ldr	r3, [r0, #20]
 800e89a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800e89e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800e8a0:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800e8a4:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800e8a8:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800e8aa:	6151      	str	r1, [r2, #20]
}
 800e8ac:	4770      	bx	lr
 800e8ae:	bf00      	nop

0800e8b0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800e8b0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800e8b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e8b6:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800e8b8:	f002 fb04 	bl	8010ec4 <xTaskGetSchedulerState>
 800e8bc:	2801      	cmp	r0, #1
 800e8be:	d100      	bne.n	800e8c2 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800e8c0:	bd08      	pop	{r3, pc}
 800e8c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800e8c6:	f000 bc45 	b.w	800f154 <xPortSysTickHandler>
 800e8ca:	bf00      	nop

0800e8cc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800e8cc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800e8d0:	b92b      	cbnz	r3, 800e8de <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800e8d2:	4b06      	ldr	r3, [pc, #24]	; (800e8ec <osKernelInitialize+0x20>)
 800e8d4:	6818      	ldr	r0, [r3, #0]
 800e8d6:	b928      	cbnz	r0, 800e8e4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800e8d8:	2201      	movs	r2, #1
 800e8da:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800e8dc:	4770      	bx	lr
    stat = osErrorISR;
 800e8de:	f06f 0005 	mvn.w	r0, #5
 800e8e2:	4770      	bx	lr
    } else {
      stat = osError;
 800e8e4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800e8e8:	4770      	bx	lr
 800e8ea:	bf00      	nop
 800e8ec:	20002cfc 	.word	0x20002cfc

0800e8f0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800e8f0:	b510      	push	{r4, lr}
 800e8f2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800e8f6:	b974      	cbnz	r4, 800e916 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800e8f8:	4b08      	ldr	r3, [pc, #32]	; (800e91c <osKernelStart+0x2c>)
 800e8fa:	681a      	ldr	r2, [r3, #0]
 800e8fc:	2a01      	cmp	r2, #1
 800e8fe:	d107      	bne.n	800e910 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800e900:	4907      	ldr	r1, [pc, #28]	; (800e920 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800e902:	2202      	movs	r2, #2
 800e904:	77cc      	strb	r4, [r1, #31]
 800e906:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800e908:	f002 f8b6 	bl	8010a78 <vTaskStartScheduler>
      stat = osOK;
 800e90c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800e90e:	bd10      	pop	{r4, pc}
      stat = osError;
 800e910:	f04f 30ff 	mov.w	r0, #4294967295
}
 800e914:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800e916:	f06f 0005 	mvn.w	r0, #5
}
 800e91a:	bd10      	pop	{r4, pc}
 800e91c:	20002cfc 	.word	0x20002cfc
 800e920:	e000ed00 	.word	0xe000ed00

0800e924 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e924:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e926:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800e928:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e92a:	4615      	mov	r5, r2
  hTask = NULL;
 800e92c:	9405      	str	r4, [sp, #20]
 800e92e:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800e932:	b9ea      	cbnz	r2, 800e970 <osThreadNew+0x4c>
 800e934:	b350      	cbz	r0, 800e98c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800e936:	b1f5      	cbz	r5, 800e976 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800e938:	69ab      	ldr	r3, [r5, #24]
 800e93a:	bb5b      	cbnz	r3, 800e994 <osThreadNew+0x70>
 800e93c:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800e93e:	686a      	ldr	r2, [r5, #4]
 800e940:	07d2      	lsls	r2, r2, #31
 800e942:	d423      	bmi.n	800e98c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800e944:	696e      	ldr	r6, [r5, #20]
 800e946:	b34e      	cbz	r6, 800e99c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800e948:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e94c:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800e94e:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e950:	b34c      	cbz	r4, 800e9a6 <osThreadNew+0x82>
 800e952:	68ea      	ldr	r2, [r5, #12]
 800e954:	2aab      	cmp	r2, #171	; 0xab
 800e956:	d919      	bls.n	800e98c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e958:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e95a:	b1bd      	cbz	r5, 800e98c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e95c:	b1b6      	cbz	r6, 800e98c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800e95e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800e962:	9300      	str	r3, [sp, #0]
 800e964:	4662      	mov	r2, ip
 800e966:	460b      	mov	r3, r1
 800e968:	4639      	mov	r1, r7
 800e96a:	f001 ffc3 	bl	80108f4 <xTaskCreateStatic>
 800e96e:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800e970:	4620      	mov	r0, r4
 800e972:	b007      	add	sp, #28
 800e974:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e976:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800e978:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800e97a:	ac05      	add	r4, sp, #20
 800e97c:	9300      	str	r3, [sp, #0]
 800e97e:	9401      	str	r4, [sp, #4]
 800e980:	460b      	mov	r3, r1
 800e982:	4629      	mov	r1, r5
 800e984:	f001 fff0 	bl	8010968 <xTaskCreate>
 800e988:	2801      	cmp	r0, #1
 800e98a:	d00a      	beq.n	800e9a2 <osThreadNew+0x7e>
        return (NULL);
 800e98c:	2400      	movs	r4, #0
}
 800e98e:	4620      	mov	r0, r4
 800e990:	b007      	add	sp, #28
 800e992:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800e994:	1e5c      	subs	r4, r3, #1
 800e996:	2c37      	cmp	r4, #55	; 0x37
 800e998:	d9d1      	bls.n	800e93e <osThreadNew+0x1a>
 800e99a:	e7f7      	b.n	800e98c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800e99c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800e9a0:	e7d4      	b.n	800e94c <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800e9a2:	9c05      	ldr	r4, [sp, #20]
 800e9a4:	e7e4      	b.n	800e970 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800e9a6:	68ee      	ldr	r6, [r5, #12]
 800e9a8:	2e00      	cmp	r6, #0
 800e9aa:	d1e1      	bne.n	800e970 <osThreadNew+0x4c>
 800e9ac:	692d      	ldr	r5, [r5, #16]
 800e9ae:	2d00      	cmp	r5, #0
 800e9b0:	d1de      	bne.n	800e970 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800e9b2:	fa1f f28c 	uxth.w	r2, ip
 800e9b6:	463d      	mov	r5, r7
 800e9b8:	e7df      	b.n	800e97a <osThreadNew+0x56>
 800e9ba:	bf00      	nop

0800e9bc <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800e9bc:	b510      	push	{r4, lr}
 800e9be:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800e9c2:	b92c      	cbnz	r4, 800e9d0 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800e9c4:	b900      	cbnz	r0, 800e9c8 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800e9c6:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800e9c8:	f002 f800 	bl	80109cc <vTaskDelay>
    stat = osOK;
 800e9cc:	4620      	mov	r0, r4
}
 800e9ce:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800e9d0:	f06f 0005 	mvn.w	r0, #5
}
 800e9d4:	bd10      	pop	{r4, pc}
 800e9d6:	bf00      	nop

0800e9d8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800e9d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e9da:	b083      	sub	sp, #12
 800e9dc:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800e9e0:	b9fe      	cbnz	r6, 800ea22 <osSemaphoreNew+0x4a>
 800e9e2:	b1f0      	cbz	r0, 800ea22 <osSemaphoreNew+0x4a>
 800e9e4:	4288      	cmp	r0, r1
 800e9e6:	460f      	mov	r7, r1
 800e9e8:	d31b      	bcc.n	800ea22 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800e9ea:	4615      	mov	r5, r2
 800e9ec:	b192      	cbz	r2, 800ea14 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800e9ee:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800e9f2:	b1d2      	cbz	r2, 800ea2a <osSemaphoreNew+0x52>
 800e9f4:	2b4f      	cmp	r3, #79	; 0x4f
 800e9f6:	d914      	bls.n	800ea22 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800e9f8:	2801      	cmp	r0, #1
 800e9fa:	d038      	beq.n	800ea6e <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800e9fc:	f000 fd90 	bl	800f520 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800ea00:	4604      	mov	r4, r0
 800ea02:	b170      	cbz	r0, 800ea22 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800ea04:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800ea06:	4620      	mov	r0, r4
 800ea08:	4629      	mov	r1, r5
 800ea0a:	f001 fc3b 	bl	8010284 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800ea0e:	4620      	mov	r0, r4
 800ea10:	b003      	add	sp, #12
 800ea12:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800ea14:	2801      	cmp	r0, #1
 800ea16:	d012      	beq.n	800ea3e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ea18:	f000 fde2 	bl	800f5e0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ea1c:	4604      	mov	r4, r0
 800ea1e:	2800      	cmp	r0, #0
 800ea20:	d1f1      	bne.n	800ea06 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800ea22:	2400      	movs	r4, #0
}
 800ea24:	4620      	mov	r0, r4
 800ea26:	b003      	add	sp, #12
 800ea28:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800ea2a:	2b00      	cmp	r3, #0
 800ea2c:	d1f9      	bne.n	800ea22 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800ea2e:	2801      	cmp	r0, #1
 800ea30:	d005      	beq.n	800ea3e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ea32:	f000 fdd5 	bl	800f5e0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ea36:	4604      	mov	r4, r0
 800ea38:	2800      	cmp	r0, #0
 800ea3a:	d1e3      	bne.n	800ea04 <osSemaphoreNew+0x2c>
 800ea3c:	e7f1      	b.n	800ea22 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800ea3e:	2203      	movs	r2, #3
 800ea40:	2100      	movs	r1, #0
 800ea42:	2001      	movs	r0, #1
 800ea44:	f000 fd2a 	bl	800f49c <xQueueGenericCreate>
 800ea48:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800ea4a:	2c00      	cmp	r4, #0
 800ea4c:	d0e9      	beq.n	800ea22 <osSemaphoreNew+0x4a>
 800ea4e:	b917      	cbnz	r7, 800ea56 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800ea50:	2d00      	cmp	r5, #0
 800ea52:	d1d7      	bne.n	800ea04 <osSemaphoreNew+0x2c>
 800ea54:	e7d7      	b.n	800ea06 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ea56:	2300      	movs	r3, #0
 800ea58:	461a      	mov	r2, r3
 800ea5a:	4619      	mov	r1, r3
 800ea5c:	4620      	mov	r0, r4
 800ea5e:	f000 fe05 	bl	800f66c <xQueueGenericSend>
 800ea62:	2801      	cmp	r0, #1
 800ea64:	d0f4      	beq.n	800ea50 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800ea66:	4620      	mov	r0, r4
 800ea68:	f001 fbc6 	bl	80101f8 <vQueueDelete>
 800ea6c:	e7d9      	b.n	800ea22 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800ea6e:	4613      	mov	r3, r2
 800ea70:	2203      	movs	r2, #3
 800ea72:	9200      	str	r2, [sp, #0]
 800ea74:	4631      	mov	r1, r6
 800ea76:	4632      	mov	r2, r6
 800ea78:	f000 fca2 	bl	800f3c0 <xQueueGenericCreateStatic>
 800ea7c:	4604      	mov	r4, r0
 800ea7e:	e7e4      	b.n	800ea4a <osSemaphoreNew+0x72>

0800ea80 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ea80:	b370      	cbz	r0, 800eae0 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800ea82:	b510      	push	{r4, lr}
 800ea84:	460c      	mov	r4, r1
 800ea86:	b082      	sub	sp, #8
 800ea88:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ea8c:	b1c3      	cbz	r3, 800eac0 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800ea8e:	bb21      	cbnz	r1, 800eada <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ea90:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ea92:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ea94:	f001 fb2e 	bl	80100f4 <xQueueReceiveFromISR>
 800ea98:	2801      	cmp	r0, #1
 800ea9a:	d11a      	bne.n	800ead2 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ea9c:	9b01      	ldr	r3, [sp, #4]
 800ea9e:	b913      	cbnz	r3, 800eaa6 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800eaa0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800eaa2:	b002      	add	sp, #8
 800eaa4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800eaa6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eaaa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eaae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eab2:	f3bf 8f4f 	dsb	sy
 800eab6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800eaba:	4620      	mov	r0, r4
}
 800eabc:	b002      	add	sp, #8
 800eabe:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800eac0:	f001 f98e 	bl	800fde0 <xQueueSemaphoreTake>
 800eac4:	2801      	cmp	r0, #1
 800eac6:	d0eb      	beq.n	800eaa0 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800eac8:	b11c      	cbz	r4, 800ead2 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800eaca:	f06f 0001 	mvn.w	r0, #1
}
 800eace:	b002      	add	sp, #8
 800ead0:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800ead2:	f06f 0002 	mvn.w	r0, #2
}
 800ead6:	b002      	add	sp, #8
 800ead8:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800eada:	f06f 0003 	mvn.w	r0, #3
 800eade:	e7e0      	b.n	800eaa2 <osSemaphoreAcquire+0x22>
 800eae0:	f06f 0003 	mvn.w	r0, #3
}
 800eae4:	4770      	bx	lr
 800eae6:	bf00      	nop

0800eae8 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800eae8:	b330      	cbz	r0, 800eb38 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800eaea:	b510      	push	{r4, lr}
 800eaec:	b082      	sub	sp, #8
 800eaee:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800eaf2:	b1ab      	cbz	r3, 800eb20 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800eaf4:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800eaf6:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800eaf8:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800eafa:	f000 ff9b 	bl	800fa34 <xQueueGiveFromISR>
 800eafe:	2801      	cmp	r0, #1
 800eb00:	d117      	bne.n	800eb32 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800eb02:	9b01      	ldr	r3, [sp, #4]
 800eb04:	b193      	cbz	r3, 800eb2c <osSemaphoreRelease+0x44>
 800eb06:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb0e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb12:	f3bf 8f4f 	dsb	sy
 800eb16:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800eb1a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800eb1c:	b002      	add	sp, #8
 800eb1e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800eb20:	461a      	mov	r2, r3
 800eb22:	4619      	mov	r1, r3
 800eb24:	f000 fda2 	bl	800f66c <xQueueGenericSend>
 800eb28:	2801      	cmp	r0, #1
 800eb2a:	d102      	bne.n	800eb32 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800eb2c:	2000      	movs	r0, #0
}
 800eb2e:	b002      	add	sp, #8
 800eb30:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800eb32:	f06f 0002 	mvn.w	r0, #2
 800eb36:	e7fa      	b.n	800eb2e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800eb38:	f06f 0003 	mvn.w	r0, #3
}
 800eb3c:	4770      	bx	lr
 800eb3e:	bf00      	nop

0800eb40 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800eb40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb42:	b085      	sub	sp, #20
 800eb44:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800eb48:	b987      	cbnz	r7, 800eb6c <osMessageQueueNew+0x2c>
 800eb4a:	4605      	mov	r5, r0
 800eb4c:	b170      	cbz	r0, 800eb6c <osMessageQueueNew+0x2c>
 800eb4e:	b169      	cbz	r1, 800eb6c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800eb50:	4614      	mov	r4, r2
 800eb52:	b1ea      	cbz	r2, 800eb90 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800eb54:	6893      	ldr	r3, [r2, #8]
 800eb56:	b163      	cbz	r3, 800eb72 <osMessageQueueNew+0x32>
 800eb58:	68d2      	ldr	r2, [r2, #12]
 800eb5a:	2a4f      	cmp	r2, #79	; 0x4f
 800eb5c:	d906      	bls.n	800eb6c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800eb5e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800eb60:	b122      	cbz	r2, 800eb6c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800eb62:	6966      	ldr	r6, [r4, #20]
 800eb64:	fb01 f505 	mul.w	r5, r1, r5
 800eb68:	42ae      	cmp	r6, r5
 800eb6a:	d21c      	bcs.n	800eba6 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800eb6c:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800eb6e:	b005      	add	sp, #20
 800eb70:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800eb72:	68d3      	ldr	r3, [r2, #12]
 800eb74:	2b00      	cmp	r3, #0
 800eb76:	d1f9      	bne.n	800eb6c <osMessageQueueNew+0x2c>
 800eb78:	6913      	ldr	r3, [r2, #16]
 800eb7a:	2b00      	cmp	r3, #0
 800eb7c:	d1f6      	bne.n	800eb6c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800eb7e:	6952      	ldr	r2, [r2, #20]
 800eb80:	2a00      	cmp	r2, #0
 800eb82:	d1f3      	bne.n	800eb6c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800eb84:	f000 fc8a 	bl	800f49c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800eb88:	2800      	cmp	r0, #0
 800eb8a:	d0ef      	beq.n	800eb6c <osMessageQueueNew+0x2c>
        name = attr->name;
 800eb8c:	6824      	ldr	r4, [r4, #0]
 800eb8e:	e003      	b.n	800eb98 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800eb90:	f000 fc84 	bl	800f49c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800eb94:	2800      	cmp	r0, #0
 800eb96:	d0e9      	beq.n	800eb6c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800eb98:	4621      	mov	r1, r4
 800eb9a:	9003      	str	r0, [sp, #12]
 800eb9c:	f001 fb72 	bl	8010284 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800eba0:	9803      	ldr	r0, [sp, #12]
}
 800eba2:	b005      	add	sp, #20
 800eba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800eba6:	9700      	str	r7, [sp, #0]
 800eba8:	f000 fc0a 	bl	800f3c0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800ebac:	2800      	cmp	r0, #0
 800ebae:	d1ed      	bne.n	800eb8c <osMessageQueueNew+0x4c>
 800ebb0:	e7dc      	b.n	800eb6c <osMessageQueueNew+0x2c>
 800ebb2:	bf00      	nop

0800ebb4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800ebb4:	b570      	push	{r4, r5, r6, lr}
 800ebb6:	461c      	mov	r4, r3
 800ebb8:	b082      	sub	sp, #8
 800ebba:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ebbe:	b1be      	cbz	r6, 800ebf0 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ebc0:	b350      	cbz	r0, 800ec18 <osMessageQueuePut+0x64>
 800ebc2:	b349      	cbz	r1, 800ec18 <osMessageQueuePut+0x64>
 800ebc4:	bb43      	cbnz	r3, 800ec18 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ebc6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ebc8:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ebca:	f000 fecd 	bl	800f968 <xQueueGenericSendFromISR>
 800ebce:	2801      	cmp	r0, #1
 800ebd0:	d11e      	bne.n	800ec10 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ebd2:	9b01      	ldr	r3, [sp, #4]
 800ebd4:	b1cb      	cbz	r3, 800ec0a <osMessageQueuePut+0x56>
 800ebd6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ebda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ebde:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ebe2:	f3bf 8f4f 	dsb	sy
 800ebe6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ebea:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ebec:	b002      	add	sp, #8
 800ebee:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ebf0:	b190      	cbz	r0, 800ec18 <osMessageQueuePut+0x64>
 800ebf2:	b189      	cbz	r1, 800ec18 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ebf4:	4633      	mov	r3, r6
 800ebf6:	4622      	mov	r2, r4
 800ebf8:	f000 fd38 	bl	800f66c <xQueueGenericSend>
 800ebfc:	2801      	cmp	r0, #1
 800ebfe:	d004      	beq.n	800ec0a <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800ec00:	b134      	cbz	r4, 800ec10 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800ec02:	f06f 0001 	mvn.w	r0, #1
}
 800ec06:	b002      	add	sp, #8
 800ec08:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800ec0a:	2000      	movs	r0, #0
}
 800ec0c:	b002      	add	sp, #8
 800ec0e:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800ec10:	f06f 0002 	mvn.w	r0, #2
}
 800ec14:	b002      	add	sp, #8
 800ec16:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800ec18:	f06f 0003 	mvn.w	r0, #3
 800ec1c:	e7e6      	b.n	800ebec <osMessageQueuePut+0x38>
 800ec1e:	bf00      	nop

0800ec20 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800ec20:	b530      	push	{r4, r5, lr}
 800ec22:	461c      	mov	r4, r3
 800ec24:	b083      	sub	sp, #12
 800ec26:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ec2a:	b1bb      	cbz	r3, 800ec5c <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ec2c:	b348      	cbz	r0, 800ec82 <osMessageQueueGet+0x62>
 800ec2e:	b341      	cbz	r1, 800ec82 <osMessageQueueGet+0x62>
 800ec30:	bb3c      	cbnz	r4, 800ec82 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ec32:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ec34:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ec36:	f001 fa5d 	bl	80100f4 <xQueueReceiveFromISR>
 800ec3a:	2801      	cmp	r0, #1
 800ec3c:	d11d      	bne.n	800ec7a <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ec3e:	9b01      	ldr	r3, [sp, #4]
 800ec40:	b1c3      	cbz	r3, 800ec74 <osMessageQueueGet+0x54>
 800ec42:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec4e:	f3bf 8f4f 	dsb	sy
 800ec52:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ec56:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ec58:	b003      	add	sp, #12
 800ec5a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ec5c:	b188      	cbz	r0, 800ec82 <osMessageQueueGet+0x62>
 800ec5e:	b181      	cbz	r1, 800ec82 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ec60:	4622      	mov	r2, r4
 800ec62:	f000 ff3f 	bl	800fae4 <xQueueReceive>
 800ec66:	2801      	cmp	r0, #1
 800ec68:	d004      	beq.n	800ec74 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800ec6a:	b134      	cbz	r4, 800ec7a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800ec6c:	f06f 0001 	mvn.w	r0, #1
}
 800ec70:	b003      	add	sp, #12
 800ec72:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800ec74:	2000      	movs	r0, #0
}
 800ec76:	b003      	add	sp, #12
 800ec78:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800ec7a:	f06f 0002 	mvn.w	r0, #2
}
 800ec7e:	b003      	add	sp, #12
 800ec80:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800ec82:	f06f 0003 	mvn.w	r0, #3
 800ec86:	e7e7      	b.n	800ec58 <osMessageQueueGet+0x38>

0800ec88 <osMessageQueueGetCount>:
 800ec88:	b130      	cbz	r0, 800ec98 <osMessageQueueGetCount+0x10>
 800ec8a:	f3ef 8305 	mrs	r3, IPSR
 800ec8e:	b10b      	cbz	r3, 800ec94 <osMessageQueueGetCount+0xc>
 800ec90:	f001 baa4 	b.w	80101dc <uxQueueMessagesWaitingFromISR>
 800ec94:	f001 ba8c 	b.w	80101b0 <uxQueueMessagesWaiting>
 800ec98:	4770      	bx	lr
 800ec9a:	bf00      	nop

0800ec9c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800ec9c:	4b04      	ldr	r3, [pc, #16]	; (800ecb0 <vApplicationGetIdleTaskMemory+0x14>)
 800ec9e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800eca0:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800eca2:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800eca4:	4c03      	ldr	r4, [pc, #12]	; (800ecb4 <vApplicationGetIdleTaskMemory+0x18>)
 800eca6:	600c      	str	r4, [r1, #0]
}
 800eca8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ecac:	6013      	str	r3, [r2, #0]
}
 800ecae:	4770      	bx	lr
 800ecb0:	20002c50 	.word	0x20002c50
 800ecb4:	20002a50 	.word	0x20002a50

0800ecb8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800ecb8:	4b05      	ldr	r3, [pc, #20]	; (800ecd0 <vApplicationGetTimerTaskMemory+0x18>)
 800ecba:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800ecbc:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ecbe:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800ecc2:	4c04      	ldr	r4, [pc, #16]	; (800ecd4 <vApplicationGetTimerTaskMemory+0x1c>)
 800ecc4:	600c      	str	r4, [r1, #0]
}
 800ecc6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ecca:	6013      	str	r3, [r2, #0]
}
 800eccc:	4770      	bx	lr
 800ecce:	bf00      	nop
 800ecd0:	20003100 	.word	0x20003100
 800ecd4:	20002d00 	.word	0x20002d00

0800ecd8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800ecd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ecdc:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800ecde:	f001 ff47 	bl	8010b70 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800ece2:	4a54      	ldr	r2, [pc, #336]	; (800ee34 <pvPortMalloc+0x15c>)
 800ece4:	6816      	ldr	r6, [r2, #0]
 800ece6:	2e00      	cmp	r6, #0
 800ece8:	d06e      	beq.n	800edc8 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800ecea:	4b53      	ldr	r3, [pc, #332]	; (800ee38 <pvPortMalloc+0x160>)
 800ecec:	681f      	ldr	r7, [r3, #0]
 800ecee:	423d      	tst	r5, r7
 800ecf0:	d12e      	bne.n	800ed50 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800ecf2:	b36d      	cbz	r5, 800ed50 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800ecf4:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800ecf8:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800ecfa:	bf1c      	itt	ne
 800ecfc:	f024 0407 	bicne.w	r4, r4, #7
 800ed00:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800ed02:	b32c      	cbz	r4, 800ed50 <pvPortMalloc+0x78>
 800ed04:	f8df c144 	ldr.w	ip, [pc, #324]	; 800ee4c <pvPortMalloc+0x174>
 800ed08:	f8dc 5000 	ldr.w	r5, [ip]
 800ed0c:	42a5      	cmp	r5, r4
 800ed0e:	d31f      	bcc.n	800ed50 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800ed10:	484a      	ldr	r0, [pc, #296]	; (800ee3c <pvPortMalloc+0x164>)
 800ed12:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800ed14:	e003      	b.n	800ed1e <pvPortMalloc+0x46>
 800ed16:	681a      	ldr	r2, [r3, #0]
 800ed18:	b122      	cbz	r2, 800ed24 <pvPortMalloc+0x4c>
 800ed1a:	4618      	mov	r0, r3
 800ed1c:	4613      	mov	r3, r2
 800ed1e:	6859      	ldr	r1, [r3, #4]
 800ed20:	42a1      	cmp	r1, r4
 800ed22:	d3f8      	bcc.n	800ed16 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800ed24:	42b3      	cmp	r3, r6
 800ed26:	d013      	beq.n	800ed50 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800ed28:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ed2a:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800ed2c:	f858 eb08 	ldr.w	lr, [r8], #8
 800ed30:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ed34:	2a10      	cmp	r2, #16
 800ed36:	d929      	bls.n	800ed8c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800ed38:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800ed3a:	0748      	lsls	r0, r1, #29
 800ed3c:	d00f      	beq.n	800ed5e <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800ed3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed42:	f383 8811 	msr	BASEPRI, r3
 800ed46:	f3bf 8f6f 	isb	sy
 800ed4a:	f3bf 8f4f 	dsb	sy
 800ed4e:	e7fe      	b.n	800ed4e <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800ed50:	f001 ff16 	bl	8010b80 <xTaskResumeAll>
 800ed54:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800ed58:	4640      	mov	r0, r8
 800ed5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800ed5e:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ed60:	4a36      	ldr	r2, [pc, #216]	; (800ee3c <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800ed62:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ed64:	4614      	mov	r4, r2
 800ed66:	6812      	ldr	r2, [r2, #0]
 800ed68:	4291      	cmp	r1, r2
 800ed6a:	d8fb      	bhi.n	800ed64 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800ed6c:	6860      	ldr	r0, [r4, #4]
 800ed6e:	eb04 0e00 	add.w	lr, r4, r0
 800ed72:	4571      	cmp	r1, lr
 800ed74:	d04b      	beq.n	800ee0e <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ed76:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ed7a:	eb01 000e 	add.w	r0, r1, lr
 800ed7e:	4282      	cmp	r2, r0
 800ed80:	d051      	beq.n	800ee26 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800ed82:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ed84:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800ed86:	bf18      	it	ne
 800ed88:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ed8a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ed8c:	4a2c      	ldr	r2, [pc, #176]	; (800ee40 <pvPortMalloc+0x168>)
 800ed8e:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ed90:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ed92:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800ed94:	bf38      	it	cc
 800ed96:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800ed98:	4a2a      	ldr	r2, [pc, #168]	; (800ee44 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ed9a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800ed9e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800eda0:	2000      	movs	r0, #0
 800eda2:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800eda6:	6813      	ldr	r3, [r2, #0]
 800eda8:	3301      	adds	r3, #1
 800edaa:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800edac:	f001 fee8 	bl	8010b80 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800edb0:	f018 0f07 	tst.w	r8, #7
 800edb4:	d0d0      	beq.n	800ed58 <pvPortMalloc+0x80>
 800edb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edba:	f383 8811 	msr	BASEPRI, r3
 800edbe:	f3bf 8f6f 	isb	sy
 800edc2:	f3bf 8f4f 	dsb	sy
 800edc6:	e7fe      	b.n	800edc6 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800edc8:	4b1f      	ldr	r3, [pc, #124]	; (800ee48 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800edca:	075e      	lsls	r6, r3, #29
 800edcc:	d118      	bne.n	800ee00 <pvPortMalloc+0x128>
 800edce:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800edd2:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800edd4:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800edd6:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800edda:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800eddc:	4a18      	ldr	r2, [pc, #96]	; (800ee40 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800edde:	4817      	ldr	r0, [pc, #92]	; (800ee3c <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800ede0:	4c15      	ldr	r4, [pc, #84]	; (800ee38 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800ede2:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800ede4:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ede6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ede8:	4a18      	ldr	r2, [pc, #96]	; (800ee4c <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800edea:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800edee:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800edf0:	2200      	movs	r2, #0
 800edf2:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800edf4:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800edf6:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800edfa:	e9c1 6300 	strd	r6, r3, [r1]
}
 800edfe:	e776      	b.n	800ecee <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800ee00:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800ee02:	f021 0107 	bic.w	r1, r1, #7
 800ee06:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800ee0a:	460b      	mov	r3, r1
 800ee0c:	e7e2      	b.n	800edd4 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ee0e:	6849      	ldr	r1, [r1, #4]
 800ee10:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ee14:	eb04 010e 	add.w	r1, r4, lr
 800ee18:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ee1a:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ee1e:	d001      	beq.n	800ee24 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ee20:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800ee22:	e7b2      	b.n	800ed8a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ee24:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ee26:	42b2      	cmp	r2, r6
 800ee28:	d0ab      	beq.n	800ed82 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ee2a:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ee2c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ee2e:	4470      	add	r0, lr
 800ee30:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ee32:	e7a6      	b.n	800ed82 <pvPortMalloc+0xaa>
 800ee34:	200031ac 	.word	0x200031ac
 800ee38:	200131b0 	.word	0x200131b0
 800ee3c:	200131c4 	.word	0x200131c4
 800ee40:	200131b8 	.word	0x200131b8
 800ee44:	200131bc 	.word	0x200131bc
 800ee48:	200031b0 	.word	0x200031b0
 800ee4c:	200131b4 	.word	0x200131b4

0800ee50 <vPortFree>:
	if( pv != NULL )
 800ee50:	b1d0      	cbz	r0, 800ee88 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ee52:	4a2c      	ldr	r2, [pc, #176]	; (800ef04 <vPortFree+0xb4>)
 800ee54:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800ee58:	6812      	ldr	r2, [r2, #0]
 800ee5a:	4213      	tst	r3, r2
 800ee5c:	d00b      	beq.n	800ee76 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ee5e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ee62:	b191      	cbz	r1, 800ee8a <vPortFree+0x3a>
 800ee64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee68:	f383 8811 	msr	BASEPRI, r3
 800ee6c:	f3bf 8f6f 	isb	sy
 800ee70:	f3bf 8f4f 	dsb	sy
 800ee74:	e7fe      	b.n	800ee74 <vPortFree+0x24>
 800ee76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee7a:	f383 8811 	msr	BASEPRI, r3
 800ee7e:	f3bf 8f6f 	isb	sy
 800ee82:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ee86:	e7fe      	b.n	800ee86 <vPortFree+0x36>
 800ee88:	4770      	bx	lr
{
 800ee8a:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ee8c:	ea23 0302 	bic.w	r3, r3, r2
{
 800ee90:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ee92:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ee96:	4c1c      	ldr	r4, [pc, #112]	; (800ef08 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ee98:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800ee9a:	f001 fe69 	bl	8010b70 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ee9e:	9801      	ldr	r0, [sp, #4]
 800eea0:	6822      	ldr	r2, [r4, #0]
 800eea2:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800eea6:	4b19      	ldr	r3, [pc, #100]	; (800ef0c <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800eea8:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800eeaa:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800eeac:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800eeae:	461a      	mov	r2, r3
 800eeb0:	681b      	ldr	r3, [r3, #0]
 800eeb2:	4298      	cmp	r0, r3
 800eeb4:	d8fb      	bhi.n	800eeae <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800eeb6:	6854      	ldr	r4, [r2, #4]
 800eeb8:	eb02 0e04 	add.w	lr, r2, r4
 800eebc:	4570      	cmp	r0, lr
 800eebe:	d010      	beq.n	800eee2 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800eec0:	eb00 0c01 	add.w	ip, r0, r1
 800eec4:	4563      	cmp	r3, ip
 800eec6:	d014      	beq.n	800eef2 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800eec8:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800eeca:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800eecc:	bf18      	it	ne
 800eece:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800eed0:	4a0f      	ldr	r2, [pc, #60]	; (800ef10 <vPortFree+0xc0>)
 800eed2:	6813      	ldr	r3, [r2, #0]
 800eed4:	3301      	adds	r3, #1
 800eed6:	6013      	str	r3, [r2, #0]
}
 800eed8:	b002      	add	sp, #8
 800eeda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800eede:	f001 be4f 	b.w	8010b80 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800eee2:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800eee4:	1850      	adds	r0, r2, r1
 800eee6:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800eee8:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800eeea:	d001      	beq.n	800eef0 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800eeec:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800eeee:	e7ef      	b.n	800eed0 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800eef0:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800eef2:	4c08      	ldr	r4, [pc, #32]	; (800ef14 <vPortFree+0xc4>)
 800eef4:	6824      	ldr	r4, [r4, #0]
 800eef6:	42a3      	cmp	r3, r4
 800eef8:	d0e6      	beq.n	800eec8 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800eefa:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800eefe:	4421      	add	r1, r4
 800ef00:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ef02:	e7e1      	b.n	800eec8 <vPortFree+0x78>
 800ef04:	200131b0 	.word	0x200131b0
 800ef08:	200131b4 	.word	0x200131b4
 800ef0c:	200131c4 	.word	0x200131c4
 800ef10:	200131c0 	.word	0x200131c0
 800ef14:	200031ac 	.word	0x200031ac

0800ef18 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ef18:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ef1c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ef20:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ef22:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ef26:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ef2a:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800ef2c:	4770      	bx	lr
 800ef2e:	bf00      	nop

0800ef30 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800ef30:	2300      	movs	r3, #0
 800ef32:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800ef34:	4770      	bx	lr
 800ef36:	bf00      	nop

0800ef38 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800ef38:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800ef3a:	689a      	ldr	r2, [r3, #8]
 800ef3c:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800ef3e:	6802      	ldr	r2, [r0, #0]
{
 800ef40:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ef42:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800ef44:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800ef46:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ef48:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800ef4a:	6099      	str	r1, [r3, #8]
}
 800ef4c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800ef50:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800ef52:	6002      	str	r2, [r0, #0]
}
 800ef54:	4770      	bx	lr
 800ef56:	bf00      	nop

0800ef58 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800ef58:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800ef5a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800ef5c:	1c6b      	adds	r3, r5, #1
 800ef5e:	d010      	beq.n	800ef82 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800ef60:	f100 0308 	add.w	r3, r0, #8
 800ef64:	461c      	mov	r4, r3
 800ef66:	685b      	ldr	r3, [r3, #4]
 800ef68:	681a      	ldr	r2, [r3, #0]
 800ef6a:	42aa      	cmp	r2, r5
 800ef6c:	d9fa      	bls.n	800ef64 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800ef6e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ef70:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800ef72:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800ef74:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800ef76:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800ef78:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800ef7a:	6108      	str	r0, [r1, #16]
}
 800ef7c:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800ef7e:	6002      	str	r2, [r0, #0]
}
 800ef80:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800ef82:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ef84:	6863      	ldr	r3, [r4, #4]
 800ef86:	e7f2      	b.n	800ef6e <vListInsert+0x16>

0800ef88 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800ef88:	6903      	ldr	r3, [r0, #16]
{
 800ef8a:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ef8c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800ef90:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ef92:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800ef94:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800ef96:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800ef98:	bf08      	it	eq
 800ef9a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800ef9c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800ef9e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800efa2:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800efa4:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800efa6:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800efa8:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800efaa:	6818      	ldr	r0, [r3, #0]
}
 800efac:	4770      	bx	lr
 800efae:	bf00      	nop

0800efb0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800efb0:	4808      	ldr	r0, [pc, #32]	; (800efd4 <prvPortStartFirstTask+0x24>)
 800efb2:	6800      	ldr	r0, [r0, #0]
 800efb4:	6800      	ldr	r0, [r0, #0]
 800efb6:	f380 8808 	msr	MSP, r0
 800efba:	f04f 0000 	mov.w	r0, #0
 800efbe:	f380 8814 	msr	CONTROL, r0
 800efc2:	b662      	cpsie	i
 800efc4:	b661      	cpsie	f
 800efc6:	f3bf 8f4f 	dsb	sy
 800efca:	f3bf 8f6f 	isb	sy
 800efce:	df00      	svc	0
 800efd0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800efd2:	0000      	.short	0x0000
 800efd4:	e000ed08 	.word	0xe000ed08

0800efd8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800efd8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800efe8 <vPortEnableVFP+0x10>
 800efdc:	6801      	ldr	r1, [r0, #0]
 800efde:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800efe2:	6001      	str	r1, [r0, #0]
 800efe4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800efe6:	0000      	.short	0x0000
 800efe8:	e000ed88 	.word	0xe000ed88

0800efec <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800efec:	4b0e      	ldr	r3, [pc, #56]	; (800f028 <prvTaskExitError+0x3c>)
 800efee:	681b      	ldr	r3, [r3, #0]
{
 800eff0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800eff2:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800eff4:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800eff6:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800eff8:	d008      	beq.n	800f00c <prvTaskExitError+0x20>
 800effa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800effe:	f383 8811 	msr	BASEPRI, r3
 800f002:	f3bf 8f6f 	isb	sy
 800f006:	f3bf 8f4f 	dsb	sy
 800f00a:	e7fe      	b.n	800f00a <prvTaskExitError+0x1e>
 800f00c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f010:	f383 8811 	msr	BASEPRI, r3
 800f014:	f3bf 8f6f 	isb	sy
 800f018:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800f01c:	9b01      	ldr	r3, [sp, #4]
 800f01e:	2b00      	cmp	r3, #0
 800f020:	d0fc      	beq.n	800f01c <prvTaskExitError+0x30>
}
 800f022:	b002      	add	sp, #8
 800f024:	4770      	bx	lr
 800f026:	bf00      	nop
 800f028:	20000088 	.word	0x20000088

0800f02c <pxPortInitialiseStack>:
{
 800f02c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800f02e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800f032:	4c07      	ldr	r4, [pc, #28]	; (800f050 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800f034:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800f038:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800f03c:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800f040:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800f044:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800f048:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f04c:	3844      	subs	r0, #68	; 0x44
 800f04e:	4770      	bx	lr
 800f050:	0800efed 	.word	0x0800efed
	...

0800f060 <SVC_Handler>:
	__asm volatile (
 800f060:	4b07      	ldr	r3, [pc, #28]	; (800f080 <pxCurrentTCBConst2>)
 800f062:	6819      	ldr	r1, [r3, #0]
 800f064:	6808      	ldr	r0, [r1, #0]
 800f066:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f06a:	f380 8809 	msr	PSP, r0
 800f06e:	f3bf 8f6f 	isb	sy
 800f072:	f04f 0000 	mov.w	r0, #0
 800f076:	f380 8811 	msr	BASEPRI, r0
 800f07a:	4770      	bx	lr
 800f07c:	f3af 8000 	nop.w

0800f080 <pxCurrentTCBConst2>:
 800f080:	20013218 	.word	0x20013218

0800f084 <vPortEnterCritical>:
 800f084:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f088:	f383 8811 	msr	BASEPRI, r3
 800f08c:	f3bf 8f6f 	isb	sy
 800f090:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800f094:	4a0b      	ldr	r2, [pc, #44]	; (800f0c4 <vPortEnterCritical+0x40>)
 800f096:	6813      	ldr	r3, [r2, #0]
 800f098:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800f09a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800f09c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800f09e:	d000      	beq.n	800f0a2 <vPortEnterCritical+0x1e>
}
 800f0a0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800f0a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f0a6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800f0aa:	b2db      	uxtb	r3, r3
 800f0ac:	2b00      	cmp	r3, #0
 800f0ae:	d0f7      	beq.n	800f0a0 <vPortEnterCritical+0x1c>
 800f0b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0b4:	f383 8811 	msr	BASEPRI, r3
 800f0b8:	f3bf 8f6f 	isb	sy
 800f0bc:	f3bf 8f4f 	dsb	sy
 800f0c0:	e7fe      	b.n	800f0c0 <vPortEnterCritical+0x3c>
 800f0c2:	bf00      	nop
 800f0c4:	20000088 	.word	0x20000088

0800f0c8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800f0c8:	4a08      	ldr	r2, [pc, #32]	; (800f0ec <vPortExitCritical+0x24>)
 800f0ca:	6813      	ldr	r3, [r2, #0]
 800f0cc:	b943      	cbnz	r3, 800f0e0 <vPortExitCritical+0x18>
 800f0ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0d2:	f383 8811 	msr	BASEPRI, r3
 800f0d6:	f3bf 8f6f 	isb	sy
 800f0da:	f3bf 8f4f 	dsb	sy
 800f0de:	e7fe      	b.n	800f0de <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800f0e0:	3b01      	subs	r3, #1
 800f0e2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800f0e4:	b90b      	cbnz	r3, 800f0ea <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800f0e6:	f383 8811 	msr	BASEPRI, r3
}
 800f0ea:	4770      	bx	lr
 800f0ec:	20000088 	.word	0x20000088

0800f0f0 <PendSV_Handler>:
	__asm volatile
 800f0f0:	f3ef 8009 	mrs	r0, PSP
 800f0f4:	f3bf 8f6f 	isb	sy
 800f0f8:	4b15      	ldr	r3, [pc, #84]	; (800f150 <pxCurrentTCBConst>)
 800f0fa:	681a      	ldr	r2, [r3, #0]
 800f0fc:	f01e 0f10 	tst.w	lr, #16
 800f100:	bf08      	it	eq
 800f102:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800f106:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f10a:	6010      	str	r0, [r2, #0]
 800f10c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800f110:	f04f 0050 	mov.w	r0, #80	; 0x50
 800f114:	f380 8811 	msr	BASEPRI, r0
 800f118:	f3bf 8f4f 	dsb	sy
 800f11c:	f3bf 8f6f 	isb	sy
 800f120:	f001 fd54 	bl	8010bcc <vTaskSwitchContext>
 800f124:	f04f 0000 	mov.w	r0, #0
 800f128:	f380 8811 	msr	BASEPRI, r0
 800f12c:	bc09      	pop	{r0, r3}
 800f12e:	6819      	ldr	r1, [r3, #0]
 800f130:	6808      	ldr	r0, [r1, #0]
 800f132:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f136:	f01e 0f10 	tst.w	lr, #16
 800f13a:	bf08      	it	eq
 800f13c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800f140:	f380 8809 	msr	PSP, r0
 800f144:	f3bf 8f6f 	isb	sy
 800f148:	4770      	bx	lr
 800f14a:	bf00      	nop
 800f14c:	f3af 8000 	nop.w

0800f150 <pxCurrentTCBConst>:
 800f150:	20013218 	.word	0x20013218

0800f154 <xPortSysTickHandler>:
{
 800f154:	b508      	push	{r3, lr}
	__asm volatile
 800f156:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f15a:	f383 8811 	msr	BASEPRI, r3
 800f15e:	f3bf 8f6f 	isb	sy
 800f162:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800f166:	f001 fd21 	bl	8010bac <xTaskIncrementTick>
 800f16a:	b128      	cbz	r0, 800f178 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800f16c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f170:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f174:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800f178:	2300      	movs	r3, #0
 800f17a:	f383 8811 	msr	BASEPRI, r3
}
 800f17e:	bd08      	pop	{r3, pc}

0800f180 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800f180:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f184:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800f186:	4906      	ldr	r1, [pc, #24]	; (800f1a0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800f188:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800f18a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800f18c:	680b      	ldr	r3, [r1, #0]
 800f18e:	4905      	ldr	r1, [pc, #20]	; (800f1a4 <vPortSetupTimerInterrupt+0x24>)
 800f190:	fba1 1303 	umull	r1, r3, r1, r3
 800f194:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800f196:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800f198:	3b01      	subs	r3, #1
 800f19a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800f19c:	6110      	str	r0, [r2, #16]
}
 800f19e:	4770      	bx	lr
 800f1a0:	2000007c 	.word	0x2000007c
 800f1a4:	10624dd3 	.word	0x10624dd3

0800f1a8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800f1a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f1ac:	4a49      	ldr	r2, [pc, #292]	; (800f2d4 <xPortStartScheduler+0x12c>)
 800f1ae:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800f1b2:	4291      	cmp	r1, r2
 800f1b4:	d043      	beq.n	800f23e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800f1b6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800f1ba:	4b47      	ldr	r3, [pc, #284]	; (800f2d8 <xPortStartScheduler+0x130>)
 800f1bc:	429a      	cmp	r2, r3
 800f1be:	d035      	beq.n	800f22c <xPortStartScheduler+0x84>
{
 800f1c0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800f1c2:	4b46      	ldr	r3, [pc, #280]	; (800f2dc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f1c4:	4846      	ldr	r0, [pc, #280]	; (800f2e0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800f1c6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800f1c8:	4c46      	ldr	r4, [pc, #280]	; (800f2e4 <xPortStartScheduler+0x13c>)
{
 800f1ca:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800f1cc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800f1ce:	b2d2      	uxtb	r2, r2
 800f1d0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800f1d2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800f1d4:	781b      	ldrb	r3, [r3, #0]
 800f1d6:	b2db      	uxtb	r3, r3
 800f1d8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f1dc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800f1e0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f1e4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800f1e8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f1ea:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800f1ec:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800f1ee:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800f1f0:	bf48      	it	mi
 800f1f2:	2206      	movmi	r2, #6
 800f1f4:	d511      	bpl.n	800f21a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800f1f6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800f1fa:	005b      	lsls	r3, r3, #1
 800f1fc:	b2db      	uxtb	r3, r3
 800f1fe:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800f202:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800f206:	0609      	lsls	r1, r1, #24
 800f208:	4610      	mov	r0, r2
 800f20a:	f102 32ff 	add.w	r2, r2, #4294967295
 800f20e:	d4f2      	bmi.n	800f1f6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800f210:	2803      	cmp	r0, #3
 800f212:	6020      	str	r0, [r4, #0]
 800f214:	f88d 3007 	strb.w	r3, [sp, #7]
 800f218:	d01a      	beq.n	800f250 <xPortStartScheduler+0xa8>
	__asm volatile
 800f21a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f21e:	f383 8811 	msr	BASEPRI, r3
 800f222:	f3bf 8f6f 	isb	sy
 800f226:	f3bf 8f4f 	dsb	sy
 800f22a:	e7fe      	b.n	800f22a <xPortStartScheduler+0x82>
 800f22c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f230:	f383 8811 	msr	BASEPRI, r3
 800f234:	f3bf 8f6f 	isb	sy
 800f238:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800f23c:	e7fe      	b.n	800f23c <xPortStartScheduler+0x94>
 800f23e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f242:	f383 8811 	msr	BASEPRI, r3
 800f246:	f3bf 8f6f 	isb	sy
 800f24a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800f24e:	e7fe      	b.n	800f24e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800f250:	9b02      	ldr	r3, [sp, #8]
 800f252:	4a22      	ldr	r2, [pc, #136]	; (800f2dc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800f254:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800f258:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800f25c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800f25e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800f260:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800f262:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800f266:	4c20      	ldr	r4, [pc, #128]	; (800f2e8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800f268:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800f26c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800f270:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800f274:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800f278:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800f27c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800f27e:	f7ff ff7f 	bl	800f180 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800f282:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800f284:	f7ff fea8 	bl	800efd8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800f288:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800f28c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800f290:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800f294:	f7ff fe8c 	bl	800efb0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800f298:	f001 fc98 	bl	8010bcc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800f29c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800f29e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800f2a0:	3301      	adds	r3, #1
 800f2a2:	d008      	beq.n	800f2b6 <xPortStartScheduler+0x10e>
 800f2a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2a8:	f383 8811 	msr	BASEPRI, r3
 800f2ac:	f3bf 8f6f 	isb	sy
 800f2b0:	f3bf 8f4f 	dsb	sy
 800f2b4:	e7fe      	b.n	800f2b4 <xPortStartScheduler+0x10c>
 800f2b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2ba:	f383 8811 	msr	BASEPRI, r3
 800f2be:	f3bf 8f6f 	isb	sy
 800f2c2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800f2c6:	9b03      	ldr	r3, [sp, #12]
 800f2c8:	2b00      	cmp	r3, #0
 800f2ca:	d0fc      	beq.n	800f2c6 <xPortStartScheduler+0x11e>
}
 800f2cc:	2000      	movs	r0, #0
 800f2ce:	b004      	add	sp, #16
 800f2d0:	bd70      	pop	{r4, r5, r6, pc}
 800f2d2:	bf00      	nop
 800f2d4:	410fc271 	.word	0x410fc271
 800f2d8:	410fc270 	.word	0x410fc270
 800f2dc:	e000e400 	.word	0xe000e400
 800f2e0:	200131cc 	.word	0x200131cc
 800f2e4:	200131d0 	.word	0x200131d0
 800f2e8:	20000088 	.word	0x20000088

0800f2ec <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800f2ec:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800f2f0:	2b0f      	cmp	r3, #15
 800f2f2:	d90e      	bls.n	800f312 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800f2f4:	4911      	ldr	r1, [pc, #68]	; (800f33c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800f2f6:	4a12      	ldr	r2, [pc, #72]	; (800f340 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800f2f8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800f2fa:	7812      	ldrb	r2, [r2, #0]
 800f2fc:	429a      	cmp	r2, r3
 800f2fe:	d908      	bls.n	800f312 <vPortValidateInterruptPriority+0x26>
 800f300:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f304:	f383 8811 	msr	BASEPRI, r3
 800f308:	f3bf 8f6f 	isb	sy
 800f30c:	f3bf 8f4f 	dsb	sy
 800f310:	e7fe      	b.n	800f310 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800f312:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f316:	4a0b      	ldr	r2, [pc, #44]	; (800f344 <vPortValidateInterruptPriority+0x58>)
 800f318:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800f31c:	6812      	ldr	r2, [r2, #0]
 800f31e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800f322:	4293      	cmp	r3, r2
 800f324:	d908      	bls.n	800f338 <vPortValidateInterruptPriority+0x4c>
 800f326:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f32a:	f383 8811 	msr	BASEPRI, r3
 800f32e:	f3bf 8f6f 	isb	sy
 800f332:	f3bf 8f4f 	dsb	sy
 800f336:	e7fe      	b.n	800f336 <vPortValidateInterruptPriority+0x4a>
	}
 800f338:	4770      	bx	lr
 800f33a:	bf00      	nop
 800f33c:	e000e3f0 	.word	0xe000e3f0
 800f340:	200131cc 	.word	0x200131cc
 800f344:	200131d0 	.word	0x200131d0

0800f348 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800f348:	b570      	push	{r4, r5, r6, lr}
 800f34a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800f34c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f34e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800f350:	b920      	cbnz	r0, 800f35c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f352:	6825      	ldr	r5, [r4, #0]
 800f354:	b34d      	cbz	r5, 800f3aa <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f356:	3601      	adds	r6, #1
 800f358:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800f35a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800f35c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f35e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800f360:	b97d      	cbnz	r5, 800f382 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f362:	6860      	ldr	r0, [r4, #4]
 800f364:	f01d fe3b 	bl	802cfde <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f368:	6863      	ldr	r3, [r4, #4]
 800f36a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800f36c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800f36e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f370:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800f372:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800f374:	bf24      	itt	cs
 800f376:	6823      	ldrcs	r3, [r4, #0]
 800f378:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f37a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800f37c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f37e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800f380:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800f382:	68e0      	ldr	r0, [r4, #12]
 800f384:	f01d fe2b 	bl	802cfde <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800f388:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800f38a:	68e3      	ldr	r3, [r4, #12]
 800f38c:	4251      	negs	r1, r2
 800f38e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800f390:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800f392:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800f394:	4293      	cmp	r3, r2
 800f396:	d202      	bcs.n	800f39e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800f398:	68a3      	ldr	r3, [r4, #8]
 800f39a:	440b      	add	r3, r1
 800f39c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800f39e:	2d02      	cmp	r5, #2
 800f3a0:	d008      	beq.n	800f3b4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f3a2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800f3a4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f3a6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800f3a8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f3aa:	68a0      	ldr	r0, [r4, #8]
 800f3ac:	f001 fde0 	bl	8010f70 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800f3b0:	60a5      	str	r5, [r4, #8]
 800f3b2:	e7d0      	b.n	800f356 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f3b4:	2e01      	cmp	r6, #1
 800f3b6:	bf38      	it	cc
 800f3b8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800f3ba:	2000      	movs	r0, #0
 800f3bc:	e7cc      	b.n	800f358 <prvCopyDataToQueue+0x10>
 800f3be:	bf00      	nop

0800f3c0 <xQueueGenericCreateStatic>:
	{
 800f3c0:	b530      	push	{r4, r5, lr}
 800f3c2:	b083      	sub	sp, #12
 800f3c4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800f3c8:	b940      	cbnz	r0, 800f3dc <xQueueGenericCreateStatic+0x1c>
 800f3ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3ce:	f383 8811 	msr	BASEPRI, r3
 800f3d2:	f3bf 8f6f 	isb	sy
 800f3d6:	f3bf 8f4f 	dsb	sy
 800f3da:	e7fe      	b.n	800f3da <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800f3dc:	461d      	mov	r5, r3
 800f3de:	b17b      	cbz	r3, 800f400 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800f3e0:	b302      	cbz	r2, 800f424 <xQueueGenericCreateStatic+0x64>
 800f3e2:	b1b1      	cbz	r1, 800f412 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800f3e4:	2350      	movs	r3, #80	; 0x50
 800f3e6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800f3e8:	9b01      	ldr	r3, [sp, #4]
 800f3ea:	2b50      	cmp	r3, #80	; 0x50
 800f3ec:	d023      	beq.n	800f436 <xQueueGenericCreateStatic+0x76>
 800f3ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3f2:	f383 8811 	msr	BASEPRI, r3
 800f3f6:	f3bf 8f6f 	isb	sy
 800f3fa:	f3bf 8f4f 	dsb	sy
 800f3fe:	e7fe      	b.n	800f3fe <xQueueGenericCreateStatic+0x3e>
 800f400:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f404:	f383 8811 	msr	BASEPRI, r3
 800f408:	f3bf 8f6f 	isb	sy
 800f40c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800f410:	e7fe      	b.n	800f410 <xQueueGenericCreateStatic+0x50>
 800f412:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f416:	f383 8811 	msr	BASEPRI, r3
 800f41a:	f3bf 8f6f 	isb	sy
 800f41e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800f422:	e7fe      	b.n	800f422 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800f424:	bb89      	cbnz	r1, 800f48a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800f426:	2250      	movs	r2, #80	; 0x50
 800f428:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800f42a:	9a01      	ldr	r2, [sp, #4]
 800f42c:	2a50      	cmp	r2, #80	; 0x50
 800f42e:	d1de      	bne.n	800f3ee <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800f430:	9a01      	ldr	r2, [sp, #4]
 800f432:	462a      	mov	r2, r5
 800f434:	e000      	b.n	800f438 <xQueueGenericCreateStatic+0x78>
 800f436:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800f438:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800f43a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800f43c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800f440:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800f444:	f7ff fe1e 	bl	800f084 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f448:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800f44c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800f44e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f450:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f454:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f456:	4401      	add	r1, r0
 800f458:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800f45a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f45c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800f45e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800f460:	21ff      	movs	r1, #255	; 0xff
 800f462:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f466:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800f468:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800f46c:	f105 0010 	add.w	r0, r5, #16
 800f470:	f7ff fd52 	bl	800ef18 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800f474:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f478:	f7ff fd4e 	bl	800ef18 <vListInitialise>
	taskEXIT_CRITICAL();
 800f47c:	f7ff fe24 	bl	800f0c8 <vPortExitCritical>
	}
 800f480:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800f482:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800f486:	b003      	add	sp, #12
 800f488:	bd30      	pop	{r4, r5, pc}
 800f48a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f48e:	f383 8811 	msr	BASEPRI, r3
 800f492:	f3bf 8f6f 	isb	sy
 800f496:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800f49a:	e7fe      	b.n	800f49a <xQueueGenericCreateStatic+0xda>

0800f49c <xQueueGenericCreate>:
	{
 800f49c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800f49e:	b940      	cbnz	r0, 800f4b2 <xQueueGenericCreate+0x16>
 800f4a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4a4:	f383 8811 	msr	BASEPRI, r3
 800f4a8:	f3bf 8f6f 	isb	sy
 800f4ac:	f3bf 8f4f 	dsb	sy
 800f4b0:	e7fe      	b.n	800f4b0 <xQueueGenericCreate+0x14>
 800f4b2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4b4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800f4b8:	3050      	adds	r0, #80	; 0x50
 800f4ba:	460e      	mov	r6, r1
 800f4bc:	4617      	mov	r7, r2
 800f4be:	f7ff fc0b 	bl	800ecd8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800f4c2:	4604      	mov	r4, r0
 800f4c4:	b340      	cbz	r0, 800f518 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800f4c6:	2300      	movs	r3, #0
 800f4c8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800f4cc:	b336      	cbz	r6, 800f51c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f4ce:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800f4d2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800f4d4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800f4d8:	f7ff fdd4 	bl	800f084 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f4dc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800f4e0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800f4e2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f4e4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f4e8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f4ea:	440a      	add	r2, r1
 800f4ec:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800f4ee:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f4f0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800f4f2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800f4f4:	22ff      	movs	r2, #255	; 0xff
 800f4f6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f4fa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800f4fc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800f500:	f104 0010 	add.w	r0, r4, #16
 800f504:	f7ff fd08 	bl	800ef18 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800f508:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f50c:	f7ff fd04 	bl	800ef18 <vListInitialise>
	taskEXIT_CRITICAL();
 800f510:	f7ff fdda 	bl	800f0c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800f514:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800f518:	4620      	mov	r0, r4
 800f51a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f51c:	4603      	mov	r3, r0
 800f51e:	e7d8      	b.n	800f4d2 <xQueueGenericCreate+0x36>

0800f520 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800f520:	b940      	cbnz	r0, 800f534 <xQueueCreateCountingSemaphoreStatic+0x14>
 800f522:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f526:	f383 8811 	msr	BASEPRI, r3
 800f52a:	f3bf 8f6f 	isb	sy
 800f52e:	f3bf 8f4f 	dsb	sy
 800f532:	e7fe      	b.n	800f532 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800f534:	4288      	cmp	r0, r1
 800f536:	d208      	bcs.n	800f54a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800f538:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f53c:	f383 8811 	msr	BASEPRI, r3
 800f540:	f3bf 8f6f 	isb	sy
 800f544:	f3bf 8f4f 	dsb	sy
 800f548:	e7fe      	b.n	800f548 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800f54a:	b530      	push	{r4, r5, lr}
 800f54c:	4615      	mov	r5, r2
 800f54e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800f550:	2a00      	cmp	r2, #0
 800f552:	d03c      	beq.n	800f5ce <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800f554:	2350      	movs	r3, #80	; 0x50
 800f556:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800f558:	9b03      	ldr	r3, [sp, #12]
 800f55a:	2b50      	cmp	r3, #80	; 0x50
 800f55c:	d008      	beq.n	800f570 <xQueueCreateCountingSemaphoreStatic+0x50>
 800f55e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f562:	f383 8811 	msr	BASEPRI, r3
 800f566:	f3bf 8f6f 	isb	sy
 800f56a:	f3bf 8f4f 	dsb	sy
 800f56e:	e7fe      	b.n	800f56e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800f570:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800f572:	2301      	movs	r3, #1
 800f574:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800f578:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800f57a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800f57e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800f580:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800f582:	f7ff fd7f 	bl	800f084 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f586:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800f58a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800f58c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f58e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f592:	1ac3      	subs	r3, r0, r3
 800f594:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f596:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800f598:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800f59c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f5a0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800f5a2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800f5a4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f5a8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800f5aa:	f105 0010 	add.w	r0, r5, #16
 800f5ae:	f7ff fcb3 	bl	800ef18 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800f5b2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f5b6:	f7ff fcaf 	bl	800ef18 <vListInitialise>
	taskEXIT_CRITICAL();
 800f5ba:	f7ff fd85 	bl	800f0c8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800f5be:	9901      	ldr	r1, [sp, #4]
 800f5c0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800f5c2:	2302      	movs	r3, #2
	}
 800f5c4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800f5c6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800f5ca:	b005      	add	sp, #20
 800f5cc:	bd30      	pop	{r4, r5, pc}
 800f5ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5d2:	f383 8811 	msr	BASEPRI, r3
 800f5d6:	f3bf 8f6f 	isb	sy
 800f5da:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800f5de:	e7fe      	b.n	800f5de <xQueueCreateCountingSemaphoreStatic+0xbe>

0800f5e0 <xQueueCreateCountingSemaphore>:
	{
 800f5e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800f5e2:	b940      	cbnz	r0, 800f5f6 <xQueueCreateCountingSemaphore+0x16>
 800f5e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5e8:	f383 8811 	msr	BASEPRI, r3
 800f5ec:	f3bf 8f6f 	isb	sy
 800f5f0:	f3bf 8f4f 	dsb	sy
 800f5f4:	e7fe      	b.n	800f5f4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800f5f6:	4288      	cmp	r0, r1
 800f5f8:	460e      	mov	r6, r1
 800f5fa:	4604      	mov	r4, r0
 800f5fc:	d208      	bcs.n	800f610 <xQueueCreateCountingSemaphore+0x30>
 800f5fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f602:	f383 8811 	msr	BASEPRI, r3
 800f606:	f3bf 8f6f 	isb	sy
 800f60a:	f3bf 8f4f 	dsb	sy
 800f60e:	e7fe      	b.n	800f60e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800f610:	2050      	movs	r0, #80	; 0x50
 800f612:	f7ff fb61 	bl	800ecd8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800f616:	4605      	mov	r5, r0
 800f618:	b330      	cbz	r0, 800f668 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800f61a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800f61c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800f620:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800f624:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800f626:	f7ff fd2d 	bl	800f084 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f62a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800f62e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800f630:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f632:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f636:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f638:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f63a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f63c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800f63e:	22ff      	movs	r2, #255	; 0xff
 800f640:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f644:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800f646:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800f648:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800f64c:	f105 0010 	add.w	r0, r5, #16
 800f650:	f7ff fc62 	bl	800ef18 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800f654:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f658:	f7ff fc5e 	bl	800ef18 <vListInitialise>
	taskEXIT_CRITICAL();
 800f65c:	f7ff fd34 	bl	800f0c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800f660:	2302      	movs	r3, #2
 800f662:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800f666:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800f668:	4628      	mov	r0, r5
 800f66a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f66c <xQueueGenericSend>:
{
 800f66c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f670:	b085      	sub	sp, #20
 800f672:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800f674:	2800      	cmp	r0, #0
 800f676:	f000 80a4 	beq.w	800f7c2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f67a:	4688      	mov	r8, r1
 800f67c:	461f      	mov	r7, r3
 800f67e:	4604      	mov	r4, r0
 800f680:	2900      	cmp	r1, #0
 800f682:	f000 8091 	beq.w	800f7a8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800f686:	2f02      	cmp	r7, #2
 800f688:	d10b      	bne.n	800f6a2 <xQueueGenericSend+0x36>
 800f68a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f68c:	2b01      	cmp	r3, #1
 800f68e:	d008      	beq.n	800f6a2 <xQueueGenericSend+0x36>
 800f690:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f694:	f383 8811 	msr	BASEPRI, r3
 800f698:	f3bf 8f6f 	isb	sy
 800f69c:	f3bf 8f4f 	dsb	sy
 800f6a0:	e7fe      	b.n	800f6a0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f6a2:	f001 fc0f 	bl	8010ec4 <xTaskGetSchedulerState>
 800f6a6:	4605      	mov	r5, r0
 800f6a8:	2800      	cmp	r0, #0
 800f6aa:	f000 8093 	beq.w	800f7d4 <xQueueGenericSend+0x168>
 800f6ae:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f6b0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800f6b4:	f7ff fce6 	bl	800f084 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800f6b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f6ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f6bc:	429a      	cmp	r2, r3
 800f6be:	f0c0 80ef 	bcc.w	800f8a0 <xQueueGenericSend+0x234>
 800f6c2:	2f02      	cmp	r7, #2
 800f6c4:	f000 80ec 	beq.w	800f8a0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f6c8:	9801      	ldr	r0, [sp, #4]
 800f6ca:	2800      	cmp	r0, #0
 800f6cc:	f000 8101 	beq.w	800f8d2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800f6d0:	2d00      	cmp	r5, #0
 800f6d2:	f000 80e1 	beq.w	800f898 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800f6d6:	f7ff fcf7 	bl	800f0c8 <vPortExitCritical>
		vTaskSuspendAll();
 800f6da:	f001 fa49 	bl	8010b70 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f6de:	f7ff fcd1 	bl	800f084 <vPortEnterCritical>
 800f6e2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f6e6:	2bff      	cmp	r3, #255	; 0xff
 800f6e8:	bf04      	itt	eq
 800f6ea:	2300      	moveq	r3, #0
 800f6ec:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800f6f0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f6f4:	2bff      	cmp	r3, #255	; 0xff
 800f6f6:	bf04      	itt	eq
 800f6f8:	2300      	moveq	r3, #0
 800f6fa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800f6fe:	f7ff fce3 	bl	800f0c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f702:	a901      	add	r1, sp, #4
 800f704:	a802      	add	r0, sp, #8
 800f706:	f001 fb8f 	bl	8010e28 <xTaskCheckForTimeOut>
 800f70a:	2800      	cmp	r0, #0
 800f70c:	f040 80e6 	bne.w	800f8dc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800f710:	f7ff fcb8 	bl	800f084 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800f714:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f716:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f718:	429a      	cmp	r2, r3
 800f71a:	d068      	beq.n	800f7ee <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800f71c:	f7ff fcd4 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f720:	f7ff fcb0 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f724:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800f728:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f72a:	2d00      	cmp	r5, #0
 800f72c:	dc04      	bgt.n	800f738 <xQueueGenericSend+0xcc>
 800f72e:	e011      	b.n	800f754 <xQueueGenericSend+0xe8>
			--cTxLock;
 800f730:	1e6a      	subs	r2, r5, #1
 800f732:	b2d3      	uxtb	r3, r2
 800f734:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f736:	b16b      	cbz	r3, 800f754 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f738:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f73a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f73c:	b153      	cbz	r3, 800f754 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f73e:	f001 fb1f 	bl	8010d80 <xTaskRemoveFromEventList>
 800f742:	2800      	cmp	r0, #0
 800f744:	d0f4      	beq.n	800f730 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800f746:	f001 fbb7 	bl	8010eb8 <vTaskMissedYield>
			--cTxLock;
 800f74a:	1e6a      	subs	r2, r5, #1
 800f74c:	b2d3      	uxtb	r3, r2
 800f74e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f750:	2b00      	cmp	r3, #0
 800f752:	d1f1      	bne.n	800f738 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800f754:	23ff      	movs	r3, #255	; 0xff
 800f756:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f75a:	f7ff fcb5 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f75e:	f7ff fc91 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f762:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800f766:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f768:	2d00      	cmp	r5, #0
 800f76a:	dd14      	ble.n	800f796 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f76c:	f104 0910 	add.w	r9, r4, #16
 800f770:	e003      	b.n	800f77a <xQueueGenericSend+0x10e>
				--cRxLock;
 800f772:	1e6a      	subs	r2, r5, #1
 800f774:	b2d3      	uxtb	r3, r2
 800f776:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f778:	b16b      	cbz	r3, 800f796 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f77a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f77c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f77e:	b153      	cbz	r3, 800f796 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f780:	f001 fafe 	bl	8010d80 <xTaskRemoveFromEventList>
 800f784:	2800      	cmp	r0, #0
 800f786:	d0f4      	beq.n	800f772 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800f788:	f001 fb96 	bl	8010eb8 <vTaskMissedYield>
				--cRxLock;
 800f78c:	1e6a      	subs	r2, r5, #1
 800f78e:	b2d3      	uxtb	r3, r2
 800f790:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f792:	2b00      	cmp	r3, #0
 800f794:	d1f1      	bne.n	800f77a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800f796:	23ff      	movs	r3, #255	; 0xff
 800f798:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f79c:	f7ff fc94 	bl	800f0c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800f7a0:	f001 f9ee 	bl	8010b80 <xTaskResumeAll>
 800f7a4:	2501      	movs	r5, #1
 800f7a6:	e785      	b.n	800f6b4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f7a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f7aa:	2b00      	cmp	r3, #0
 800f7ac:	f43f af6b 	beq.w	800f686 <xQueueGenericSend+0x1a>
 800f7b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7b4:	f383 8811 	msr	BASEPRI, r3
 800f7b8:	f3bf 8f6f 	isb	sy
 800f7bc:	f3bf 8f4f 	dsb	sy
 800f7c0:	e7fe      	b.n	800f7c0 <xQueueGenericSend+0x154>
 800f7c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7c6:	f383 8811 	msr	BASEPRI, r3
 800f7ca:	f3bf 8f6f 	isb	sy
 800f7ce:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f7d2:	e7fe      	b.n	800f7d2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f7d4:	9b01      	ldr	r3, [sp, #4]
 800f7d6:	2b00      	cmp	r3, #0
 800f7d8:	f43f af6a 	beq.w	800f6b0 <xQueueGenericSend+0x44>
 800f7dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7e0:	f383 8811 	msr	BASEPRI, r3
 800f7e4:	f3bf 8f6f 	isb	sy
 800f7e8:	f3bf 8f4f 	dsb	sy
 800f7ec:	e7fe      	b.n	800f7ec <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800f7ee:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800f7f2:	f7ff fc69 	bl	800f0c8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800f7f6:	9901      	ldr	r1, [sp, #4]
 800f7f8:	4648      	mov	r0, r9
 800f7fa:	f001 fa33 	bl	8010c64 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800f7fe:	f7ff fc41 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f802:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f806:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f808:	2d00      	cmp	r5, #0
 800f80a:	dc04      	bgt.n	800f816 <xQueueGenericSend+0x1aa>
 800f80c:	e011      	b.n	800f832 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800f80e:	1e6b      	subs	r3, r5, #1
 800f810:	b2da      	uxtb	r2, r3
 800f812:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f814:	b16a      	cbz	r2, 800f832 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f816:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f818:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f81a:	b153      	cbz	r3, 800f832 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f81c:	f001 fab0 	bl	8010d80 <xTaskRemoveFromEventList>
 800f820:	2800      	cmp	r0, #0
 800f822:	d0f4      	beq.n	800f80e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800f824:	f001 fb48 	bl	8010eb8 <vTaskMissedYield>
			--cTxLock;
 800f828:	1e6b      	subs	r3, r5, #1
 800f82a:	b2da      	uxtb	r2, r3
 800f82c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f82e:	2a00      	cmp	r2, #0
 800f830:	d1f1      	bne.n	800f816 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800f832:	23ff      	movs	r3, #255	; 0xff
 800f834:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f838:	f7ff fc46 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f83c:	f7ff fc22 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f840:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f844:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f846:	2d00      	cmp	r5, #0
 800f848:	dc04      	bgt.n	800f854 <xQueueGenericSend+0x1e8>
 800f84a:	e011      	b.n	800f870 <xQueueGenericSend+0x204>
				--cRxLock;
 800f84c:	1e6b      	subs	r3, r5, #1
 800f84e:	b2da      	uxtb	r2, r3
 800f850:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f852:	b16a      	cbz	r2, 800f870 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f854:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f856:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f858:	b153      	cbz	r3, 800f870 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f85a:	f001 fa91 	bl	8010d80 <xTaskRemoveFromEventList>
 800f85e:	2800      	cmp	r0, #0
 800f860:	d0f4      	beq.n	800f84c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800f862:	f001 fb29 	bl	8010eb8 <vTaskMissedYield>
				--cRxLock;
 800f866:	1e6b      	subs	r3, r5, #1
 800f868:	b2da      	uxtb	r2, r3
 800f86a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f86c:	2a00      	cmp	r2, #0
 800f86e:	d1f1      	bne.n	800f854 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800f870:	23ff      	movs	r3, #255	; 0xff
 800f872:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f876:	f7ff fc27 	bl	800f0c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800f87a:	f001 f981 	bl	8010b80 <xTaskResumeAll>
 800f87e:	2800      	cmp	r0, #0
 800f880:	d190      	bne.n	800f7a4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800f882:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f886:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f88a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f88e:	f3bf 8f4f 	dsb	sy
 800f892:	f3bf 8f6f 	isb	sy
 800f896:	e785      	b.n	800f7a4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f898:	a802      	add	r0, sp, #8
 800f89a:	f001 fab9 	bl	8010e10 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800f89e:	e71a      	b.n	800f6d6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f8a0:	463a      	mov	r2, r7
 800f8a2:	4641      	mov	r1, r8
 800f8a4:	4620      	mov	r0, r4
 800f8a6:	f7ff fd4f 	bl	800f348 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f8aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f8ac:	2b00      	cmp	r3, #0
 800f8ae:	d153      	bne.n	800f958 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800f8b0:	b148      	cbz	r0, 800f8c6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800f8b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f8b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f8ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f8be:	f3bf 8f4f 	dsb	sy
 800f8c2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f8c6:	f7ff fbff 	bl	800f0c8 <vPortExitCritical>
				return pdPASS;
 800f8ca:	2001      	movs	r0, #1
}
 800f8cc:	b005      	add	sp, #20
 800f8ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f8d2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800f8d4:	f7ff fbf8 	bl	800f0c8 <vPortExitCritical>
					return errQUEUE_FULL;
 800f8d8:	9800      	ldr	r0, [sp, #0]
 800f8da:	e7f7      	b.n	800f8cc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800f8dc:	f7ff fbd2 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f8e0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f8e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f8e6:	2d00      	cmp	r5, #0
 800f8e8:	dd10      	ble.n	800f90c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f8ea:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800f8ee:	e003      	b.n	800f8f8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800f8f0:	1e6b      	subs	r3, r5, #1
 800f8f2:	b2da      	uxtb	r2, r3
 800f8f4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f8f6:	b14a      	cbz	r2, 800f90c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f8f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f8fa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f8fc:	b133      	cbz	r3, 800f90c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f8fe:	f001 fa3f 	bl	8010d80 <xTaskRemoveFromEventList>
 800f902:	2800      	cmp	r0, #0
 800f904:	d0f4      	beq.n	800f8f0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800f906:	f001 fad7 	bl	8010eb8 <vTaskMissedYield>
 800f90a:	e7f1      	b.n	800f8f0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800f90c:	23ff      	movs	r3, #255	; 0xff
 800f90e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f912:	f7ff fbd9 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f916:	f7ff fbb5 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f91a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f91e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f920:	2d00      	cmp	r5, #0
 800f922:	dd10      	ble.n	800f946 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f924:	f104 0610 	add.w	r6, r4, #16
 800f928:	e003      	b.n	800f932 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800f92a:	1e6b      	subs	r3, r5, #1
 800f92c:	b2da      	uxtb	r2, r3
 800f92e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f930:	b14a      	cbz	r2, 800f946 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f932:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f934:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f936:	b133      	cbz	r3, 800f946 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f938:	f001 fa22 	bl	8010d80 <xTaskRemoveFromEventList>
 800f93c:	2800      	cmp	r0, #0
 800f93e:	d0f4      	beq.n	800f92a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800f940:	f001 faba 	bl	8010eb8 <vTaskMissedYield>
 800f944:	e7f1      	b.n	800f92a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800f946:	23ff      	movs	r3, #255	; 0xff
 800f948:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f94c:	f7ff fbbc 	bl	800f0c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800f950:	f001 f916 	bl	8010b80 <xTaskResumeAll>
			return errQUEUE_FULL;
 800f954:	2000      	movs	r0, #0
 800f956:	e7b9      	b.n	800f8cc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f958:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f95c:	f001 fa10 	bl	8010d80 <xTaskRemoveFromEventList>
 800f960:	2800      	cmp	r0, #0
 800f962:	d0b0      	beq.n	800f8c6 <xQueueGenericSend+0x25a>
 800f964:	e7a5      	b.n	800f8b2 <xQueueGenericSend+0x246>
 800f966:	bf00      	nop

0800f968 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800f968:	2800      	cmp	r0, #0
 800f96a:	d04b      	beq.n	800fa04 <xQueueGenericSendFromISR+0x9c>
{
 800f96c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f970:	460e      	mov	r6, r1
 800f972:	4617      	mov	r7, r2
 800f974:	461d      	mov	r5, r3
 800f976:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f978:	b321      	cbz	r1, 800f9c4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800f97a:	2d02      	cmp	r5, #2
 800f97c:	d10b      	bne.n	800f996 <xQueueGenericSendFromISR+0x2e>
 800f97e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f980:	2b01      	cmp	r3, #1
 800f982:	d008      	beq.n	800f996 <xQueueGenericSendFromISR+0x2e>
 800f984:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f988:	f383 8811 	msr	BASEPRI, r3
 800f98c:	f3bf 8f6f 	isb	sy
 800f990:	f3bf 8f4f 	dsb	sy
 800f994:	e7fe      	b.n	800f994 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f996:	f7ff fca9 	bl	800f2ec <vPortValidateInterruptPriority>
	__asm volatile
 800f99a:	f3ef 8811 	mrs	r8, BASEPRI
 800f99e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9a2:	f383 8811 	msr	BASEPRI, r3
 800f9a6:	f3bf 8f6f 	isb	sy
 800f9aa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800f9ae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f9b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f9b2:	429a      	cmp	r2, r3
 800f9b4:	d312      	bcc.n	800f9dc <xQueueGenericSendFromISR+0x74>
 800f9b6:	2d02      	cmp	r5, #2
 800f9b8:	d010      	beq.n	800f9dc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800f9ba:	2000      	movs	r0, #0
	__asm volatile
 800f9bc:	f388 8811 	msr	BASEPRI, r8
}
 800f9c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f9c4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f9c6:	2b00      	cmp	r3, #0
 800f9c8:	d0d7      	beq.n	800f97a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800f9ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9ce:	f383 8811 	msr	BASEPRI, r3
 800f9d2:	f3bf 8f6f 	isb	sy
 800f9d6:	f3bf 8f4f 	dsb	sy
 800f9da:	e7fe      	b.n	800f9da <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f9dc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800f9de:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f9e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f9e4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800f9e6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f9e8:	4620      	mov	r0, r4
 800f9ea:	f7ff fcad 	bl	800f348 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800f9ee:	1c6b      	adds	r3, r5, #1
 800f9f0:	d011      	beq.n	800fa16 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800f9f2:	1c6b      	adds	r3, r5, #1
 800f9f4:	b25b      	sxtb	r3, r3
 800f9f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800f9fa:	2001      	movs	r0, #1
	__asm volatile
 800f9fc:	f388 8811 	msr	BASEPRI, r8
}
 800fa00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800fa04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa08:	f383 8811 	msr	BASEPRI, r3
 800fa0c:	f3bf 8f6f 	isb	sy
 800fa10:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800fa14:	e7fe      	b.n	800fa14 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fa16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fa18:	2b00      	cmp	r3, #0
 800fa1a:	d0ee      	beq.n	800f9fa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fa1c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800fa20:	f001 f9ae 	bl	8010d80 <xTaskRemoveFromEventList>
 800fa24:	2800      	cmp	r0, #0
 800fa26:	d0e8      	beq.n	800f9fa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800fa28:	2f00      	cmp	r7, #0
 800fa2a:	d0e6      	beq.n	800f9fa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800fa2c:	2001      	movs	r0, #1
 800fa2e:	6038      	str	r0, [r7, #0]
 800fa30:	e7c4      	b.n	800f9bc <xQueueGenericSendFromISR+0x54>
 800fa32:	bf00      	nop

0800fa34 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800fa34:	b370      	cbz	r0, 800fa94 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800fa36:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800fa38:	b570      	push	{r4, r5, r6, lr}
 800fa3a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800fa3c:	b143      	cbz	r3, 800fa50 <xQueueGiveFromISR+0x1c>
 800fa3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa42:	f383 8811 	msr	BASEPRI, r3
 800fa46:	f3bf 8f6f 	isb	sy
 800fa4a:	f3bf 8f4f 	dsb	sy
 800fa4e:	e7fe      	b.n	800fa4e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800fa50:	6803      	ldr	r3, [r0, #0]
 800fa52:	460c      	mov	r4, r1
 800fa54:	b33b      	cbz	r3, 800faa6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800fa56:	f7ff fc49 	bl	800f2ec <vPortValidateInterruptPriority>
	__asm volatile
 800fa5a:	f3ef 8511 	mrs	r5, BASEPRI
 800fa5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa62:	f383 8811 	msr	BASEPRI, r3
 800fa66:	f3bf 8f6f 	isb	sy
 800fa6a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800fa6e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800fa70:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800fa72:	429a      	cmp	r2, r3
 800fa74:	d923      	bls.n	800fabe <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800fa76:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800fa7a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800fa7c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800fa7e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800fa80:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800fa82:	d020      	beq.n	800fac6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800fa84:	3301      	adds	r3, #1
 800fa86:	b25b      	sxtb	r3, r3
 800fa88:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800fa8c:	2001      	movs	r0, #1
	__asm volatile
 800fa8e:	f385 8811 	msr	BASEPRI, r5
}
 800fa92:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800fa94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa98:	f383 8811 	msr	BASEPRI, r3
 800fa9c:	f3bf 8f6f 	isb	sy
 800faa0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800faa4:	e7fe      	b.n	800faa4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800faa6:	6883      	ldr	r3, [r0, #8]
 800faa8:	2b00      	cmp	r3, #0
 800faaa:	d0d4      	beq.n	800fa56 <xQueueGiveFromISR+0x22>
 800faac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fab0:	f383 8811 	msr	BASEPRI, r3
 800fab4:	f3bf 8f6f 	isb	sy
 800fab8:	f3bf 8f4f 	dsb	sy
 800fabc:	e7fe      	b.n	800fabc <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800fabe:	2000      	movs	r0, #0
	__asm volatile
 800fac0:	f385 8811 	msr	BASEPRI, r5
}
 800fac4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fac6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800fac8:	2b00      	cmp	r3, #0
 800faca:	d0df      	beq.n	800fa8c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800facc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800fad0:	f001 f956 	bl	8010d80 <xTaskRemoveFromEventList>
 800fad4:	2800      	cmp	r0, #0
 800fad6:	d0d9      	beq.n	800fa8c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800fad8:	2c00      	cmp	r4, #0
 800fada:	d0d7      	beq.n	800fa8c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800fadc:	2001      	movs	r0, #1
 800fade:	6020      	str	r0, [r4, #0]
 800fae0:	e7ee      	b.n	800fac0 <xQueueGiveFromISR+0x8c>
 800fae2:	bf00      	nop

0800fae4 <xQueueReceive>:
{
 800fae4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fae8:	b085      	sub	sp, #20
 800faea:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800faec:	2800      	cmp	r0, #0
 800faee:	f000 815c 	beq.w	800fdaa <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800faf2:	460f      	mov	r7, r1
 800faf4:	4604      	mov	r4, r0
 800faf6:	2900      	cmp	r1, #0
 800faf8:	d079      	beq.n	800fbee <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800fafa:	f001 f9e3 	bl	8010ec4 <xTaskGetSchedulerState>
 800fafe:	2800      	cmp	r0, #0
 800fb00:	f000 8081 	beq.w	800fc06 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800fb04:	f7ff fabe 	bl	800f084 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800fb08:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800fb0a:	2d00      	cmp	r5, #0
 800fb0c:	f040 8138 	bne.w	800fd80 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800fb10:	9b01      	ldr	r3, [sp, #4]
 800fb12:	2b00      	cmp	r3, #0
 800fb14:	f000 80d5 	beq.w	800fcc2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800fb18:	a802      	add	r0, sp, #8
 800fb1a:	f001 f979 	bl	8010e10 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800fb1e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fb20:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800fb24:	f7ff fad0 	bl	800f0c8 <vPortExitCritical>
		vTaskSuspendAll();
 800fb28:	f001 f822 	bl	8010b70 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800fb2c:	f7ff faaa 	bl	800f084 <vPortEnterCritical>
 800fb30:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fb34:	2bff      	cmp	r3, #255	; 0xff
 800fb36:	bf08      	it	eq
 800fb38:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800fb3c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fb40:	2bff      	cmp	r3, #255	; 0xff
 800fb42:	bf08      	it	eq
 800fb44:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800fb48:	f7ff fabe 	bl	800f0c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800fb4c:	a901      	add	r1, sp, #4
 800fb4e:	a802      	add	r0, sp, #8
 800fb50:	f001 f96a 	bl	8010e28 <xTaskCheckForTimeOut>
 800fb54:	2800      	cmp	r0, #0
 800fb56:	d163      	bne.n	800fc20 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800fb58:	f7ff fa94 	bl	800f084 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800fb5c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800fb5e:	2b00      	cmp	r3, #0
 800fb60:	f000 80b5 	beq.w	800fcce <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800fb64:	f7ff fab0 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800fb68:	f7ff fa8c 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800fb6c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fb70:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fb72:	2d00      	cmp	r5, #0
 800fb74:	dc04      	bgt.n	800fb80 <xQueueReceive+0x9c>
 800fb76:	e011      	b.n	800fb9c <xQueueReceive+0xb8>
			--cTxLock;
 800fb78:	1e6b      	subs	r3, r5, #1
 800fb7a:	b2da      	uxtb	r2, r3
 800fb7c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fb7e:	b16a      	cbz	r2, 800fb9c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fb80:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fb82:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fb84:	b153      	cbz	r3, 800fb9c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fb86:	f001 f8fb 	bl	8010d80 <xTaskRemoveFromEventList>
 800fb8a:	2800      	cmp	r0, #0
 800fb8c:	d0f4      	beq.n	800fb78 <xQueueReceive+0x94>
						vTaskMissedYield();
 800fb8e:	f001 f993 	bl	8010eb8 <vTaskMissedYield>
			--cTxLock;
 800fb92:	1e6b      	subs	r3, r5, #1
 800fb94:	b2da      	uxtb	r2, r3
 800fb96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fb98:	2a00      	cmp	r2, #0
 800fb9a:	d1f1      	bne.n	800fb80 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800fb9c:	23ff      	movs	r3, #255	; 0xff
 800fb9e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800fba2:	f7ff fa91 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800fba6:	f7ff fa6d 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800fbaa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fbae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fbb0:	2d00      	cmp	r5, #0
 800fbb2:	dd14      	ble.n	800fbde <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fbb4:	f104 0910 	add.w	r9, r4, #16
 800fbb8:	e003      	b.n	800fbc2 <xQueueReceive+0xde>
				--cRxLock;
 800fbba:	1e6b      	subs	r3, r5, #1
 800fbbc:	b2da      	uxtb	r2, r3
 800fbbe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fbc0:	b16a      	cbz	r2, 800fbde <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fbc2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fbc4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fbc6:	b153      	cbz	r3, 800fbde <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fbc8:	f001 f8da 	bl	8010d80 <xTaskRemoveFromEventList>
 800fbcc:	2800      	cmp	r0, #0
 800fbce:	d0f4      	beq.n	800fbba <xQueueReceive+0xd6>
					vTaskMissedYield();
 800fbd0:	f001 f972 	bl	8010eb8 <vTaskMissedYield>
				--cRxLock;
 800fbd4:	1e6b      	subs	r3, r5, #1
 800fbd6:	b2da      	uxtb	r2, r3
 800fbd8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fbda:	2a00      	cmp	r2, #0
 800fbdc:	d1f1      	bne.n	800fbc2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800fbde:	23ff      	movs	r3, #255	; 0xff
 800fbe0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800fbe4:	f7ff fa70 	bl	800f0c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800fbe8:	f000 ffca 	bl	8010b80 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800fbec:	e060      	b.n	800fcb0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800fbee:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800fbf0:	2b00      	cmp	r3, #0
 800fbf2:	d082      	beq.n	800fafa <xQueueReceive+0x16>
	__asm volatile
 800fbf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbf8:	f383 8811 	msr	BASEPRI, r3
 800fbfc:	f3bf 8f6f 	isb	sy
 800fc00:	f3bf 8f4f 	dsb	sy
 800fc04:	e7fe      	b.n	800fc04 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800fc06:	9b01      	ldr	r3, [sp, #4]
 800fc08:	2b00      	cmp	r3, #0
 800fc0a:	f43f af7b 	beq.w	800fb04 <xQueueReceive+0x20>
 800fc0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc12:	f383 8811 	msr	BASEPRI, r3
 800fc16:	f3bf 8f6f 	isb	sy
 800fc1a:	f3bf 8f4f 	dsb	sy
 800fc1e:	e7fe      	b.n	800fc1e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800fc20:	f7ff fa30 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800fc24:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fc28:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fc2a:	2d00      	cmp	r5, #0
 800fc2c:	dc04      	bgt.n	800fc38 <xQueueReceive+0x154>
 800fc2e:	e011      	b.n	800fc54 <xQueueReceive+0x170>
			--cTxLock;
 800fc30:	1e6b      	subs	r3, r5, #1
 800fc32:	b2da      	uxtb	r2, r3
 800fc34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fc36:	b16a      	cbz	r2, 800fc54 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fc38:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fc3a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fc3c:	b153      	cbz	r3, 800fc54 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fc3e:	f001 f89f 	bl	8010d80 <xTaskRemoveFromEventList>
 800fc42:	2800      	cmp	r0, #0
 800fc44:	d0f4      	beq.n	800fc30 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800fc46:	f001 f937 	bl	8010eb8 <vTaskMissedYield>
			--cTxLock;
 800fc4a:	1e6b      	subs	r3, r5, #1
 800fc4c:	b2da      	uxtb	r2, r3
 800fc4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fc50:	2a00      	cmp	r2, #0
 800fc52:	d1f1      	bne.n	800fc38 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800fc54:	23ff      	movs	r3, #255	; 0xff
 800fc56:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800fc5a:	f7ff fa35 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800fc5e:	f7ff fa11 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800fc62:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fc66:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fc68:	2d00      	cmp	r5, #0
 800fc6a:	dd14      	ble.n	800fc96 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fc6c:	f104 0910 	add.w	r9, r4, #16
 800fc70:	e003      	b.n	800fc7a <xQueueReceive+0x196>
				--cRxLock;
 800fc72:	1e6b      	subs	r3, r5, #1
 800fc74:	b2da      	uxtb	r2, r3
 800fc76:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fc78:	b16a      	cbz	r2, 800fc96 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fc7a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fc7c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fc7e:	b153      	cbz	r3, 800fc96 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fc80:	f001 f87e 	bl	8010d80 <xTaskRemoveFromEventList>
 800fc84:	2800      	cmp	r0, #0
 800fc86:	d0f4      	beq.n	800fc72 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800fc88:	f001 f916 	bl	8010eb8 <vTaskMissedYield>
				--cRxLock;
 800fc8c:	1e6b      	subs	r3, r5, #1
 800fc8e:	b2da      	uxtb	r2, r3
 800fc90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fc92:	2a00      	cmp	r2, #0
 800fc94:	d1f1      	bne.n	800fc7a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800fc96:	23ff      	movs	r3, #255	; 0xff
 800fc98:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800fc9c:	f7ff fa14 	bl	800f0c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800fca0:	f000 ff6e 	bl	8010b80 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800fca4:	f7ff f9ee 	bl	800f084 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800fca8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800fcaa:	b153      	cbz	r3, 800fcc2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800fcac:	f7ff fa0c 	bl	800f0c8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800fcb0:	f7ff f9e8 	bl	800f084 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800fcb4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800fcb6:	2d00      	cmp	r5, #0
 800fcb8:	d162      	bne.n	800fd80 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800fcba:	9b01      	ldr	r3, [sp, #4]
 800fcbc:	2b00      	cmp	r3, #0
 800fcbe:	f47f af31 	bne.w	800fb24 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800fcc2:	f7ff fa01 	bl	800f0c8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800fcc6:	2000      	movs	r0, #0
}
 800fcc8:	b005      	add	sp, #20
 800fcca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800fcce:	f7ff f9fb 	bl	800f0c8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800fcd2:	9901      	ldr	r1, [sp, #4]
 800fcd4:	4630      	mov	r0, r6
 800fcd6:	f000 ffc5 	bl	8010c64 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800fcda:	f7ff f9d3 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800fcde:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fce2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fce4:	2d00      	cmp	r5, #0
 800fce6:	dc04      	bgt.n	800fcf2 <xQueueReceive+0x20e>
 800fce8:	e011      	b.n	800fd0e <xQueueReceive+0x22a>
			--cTxLock;
 800fcea:	1e6b      	subs	r3, r5, #1
 800fcec:	b2da      	uxtb	r2, r3
 800fcee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fcf0:	b16a      	cbz	r2, 800fd0e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fcf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fcf4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fcf6:	b153      	cbz	r3, 800fd0e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fcf8:	f001 f842 	bl	8010d80 <xTaskRemoveFromEventList>
 800fcfc:	2800      	cmp	r0, #0
 800fcfe:	d0f4      	beq.n	800fcea <xQueueReceive+0x206>
						vTaskMissedYield();
 800fd00:	f001 f8da 	bl	8010eb8 <vTaskMissedYield>
			--cTxLock;
 800fd04:	1e6b      	subs	r3, r5, #1
 800fd06:	b2da      	uxtb	r2, r3
 800fd08:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fd0a:	2a00      	cmp	r2, #0
 800fd0c:	d1f1      	bne.n	800fcf2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800fd0e:	23ff      	movs	r3, #255	; 0xff
 800fd10:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800fd14:	f7ff f9d8 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800fd18:	f7ff f9b4 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800fd1c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fd20:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fd22:	2d00      	cmp	r5, #0
 800fd24:	dd14      	ble.n	800fd50 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fd26:	f104 0910 	add.w	r9, r4, #16
 800fd2a:	e003      	b.n	800fd34 <xQueueReceive+0x250>
				--cRxLock;
 800fd2c:	1e6b      	subs	r3, r5, #1
 800fd2e:	b2da      	uxtb	r2, r3
 800fd30:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fd32:	b16a      	cbz	r2, 800fd50 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fd34:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fd36:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fd38:	b153      	cbz	r3, 800fd50 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fd3a:	f001 f821 	bl	8010d80 <xTaskRemoveFromEventList>
 800fd3e:	2800      	cmp	r0, #0
 800fd40:	d0f4      	beq.n	800fd2c <xQueueReceive+0x248>
					vTaskMissedYield();
 800fd42:	f001 f8b9 	bl	8010eb8 <vTaskMissedYield>
				--cRxLock;
 800fd46:	1e6b      	subs	r3, r5, #1
 800fd48:	b2da      	uxtb	r2, r3
 800fd4a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fd4c:	2a00      	cmp	r2, #0
 800fd4e:	d1f1      	bne.n	800fd34 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800fd50:	23ff      	movs	r3, #255	; 0xff
 800fd52:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800fd56:	f7ff f9b7 	bl	800f0c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800fd5a:	f000 ff11 	bl	8010b80 <xTaskResumeAll>
 800fd5e:	2800      	cmp	r0, #0
 800fd60:	d1a6      	bne.n	800fcb0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800fd62:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fd66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fd6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fd6e:	f3bf 8f4f 	dsb	sy
 800fd72:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800fd76:	f7ff f985 	bl	800f084 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800fd7a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800fd7c:	2d00      	cmp	r5, #0
 800fd7e:	d09c      	beq.n	800fcba <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800fd80:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800fd82:	b152      	cbz	r2, 800fd9a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fd84:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800fd86:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fd88:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800fd8a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fd8c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800fd8e:	bf24      	itt	cs
 800fd90:	6821      	ldrcs	r1, [r4, #0]
 800fd92:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800fd94:	4638      	mov	r0, r7
 800fd96:	f01d f922 	bl	802cfde <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800fd9a:	3d01      	subs	r5, #1
 800fd9c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fd9e:	6923      	ldr	r3, [r4, #16]
 800fda0:	b963      	cbnz	r3, 800fdbc <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800fda2:	f7ff f991 	bl	800f0c8 <vPortExitCritical>
				return pdPASS;
 800fda6:	2001      	movs	r0, #1
 800fda8:	e78e      	b.n	800fcc8 <xQueueReceive+0x1e4>
 800fdaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdae:	f383 8811 	msr	BASEPRI, r3
 800fdb2:	f3bf 8f6f 	isb	sy
 800fdb6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800fdba:	e7fe      	b.n	800fdba <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fdbc:	f104 0010 	add.w	r0, r4, #16
 800fdc0:	f000 ffde 	bl	8010d80 <xTaskRemoveFromEventList>
 800fdc4:	2800      	cmp	r0, #0
 800fdc6:	d0ec      	beq.n	800fda2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800fdc8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fdcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fdd0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fdd4:	f3bf 8f4f 	dsb	sy
 800fdd8:	f3bf 8f6f 	isb	sy
 800fddc:	e7e1      	b.n	800fda2 <xQueueReceive+0x2be>
 800fdde:	bf00      	nop

0800fde0 <xQueueSemaphoreTake>:
{
 800fde0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fde4:	b084      	sub	sp, #16
 800fde6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800fde8:	2800      	cmp	r0, #0
 800fdea:	d05c      	beq.n	800fea6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800fdec:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800fdee:	4604      	mov	r4, r0
 800fdf0:	b147      	cbz	r7, 800fe04 <xQueueSemaphoreTake+0x24>
 800fdf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdf6:	f383 8811 	msr	BASEPRI, r3
 800fdfa:	f3bf 8f6f 	isb	sy
 800fdfe:	f3bf 8f4f 	dsb	sy
 800fe02:	e7fe      	b.n	800fe02 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800fe04:	f001 f85e 	bl	8010ec4 <xTaskGetSchedulerState>
 800fe08:	4605      	mov	r5, r0
 800fe0a:	2800      	cmp	r0, #0
 800fe0c:	d054      	beq.n	800feb8 <xQueueSemaphoreTake+0xd8>
 800fe0e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fe10:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800fe14:	f7ff f936 	bl	800f084 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800fe18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800fe1a:	2b00      	cmp	r3, #0
 800fe1c:	f040 8148 	bne.w	80100b0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800fe20:	9b01      	ldr	r3, [sp, #4]
 800fe22:	2b00      	cmp	r3, #0
 800fe24:	f000 813a 	beq.w	801009c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800fe28:	2d00      	cmp	r5, #0
 800fe2a:	f000 809d 	beq.w	800ff68 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800fe2e:	f7ff f94b 	bl	800f0c8 <vPortExitCritical>
		vTaskSuspendAll();
 800fe32:	f000 fe9d 	bl	8010b70 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800fe36:	f7ff f925 	bl	800f084 <vPortEnterCritical>
 800fe3a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fe3e:	2bff      	cmp	r3, #255	; 0xff
 800fe40:	bf04      	itt	eq
 800fe42:	2300      	moveq	r3, #0
 800fe44:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800fe48:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fe4c:	2bff      	cmp	r3, #255	; 0xff
 800fe4e:	bf04      	itt	eq
 800fe50:	2300      	moveq	r3, #0
 800fe52:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800fe56:	f7ff f937 	bl	800f0c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800fe5a:	a901      	add	r1, sp, #4
 800fe5c:	a802      	add	r0, sp, #8
 800fe5e:	f000 ffe3 	bl	8010e28 <xTaskCheckForTimeOut>
 800fe62:	2800      	cmp	r0, #0
 800fe64:	d135      	bne.n	800fed2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800fe66:	f7ff f90d 	bl	800f084 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800fe6a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800fe6c:	2b00      	cmp	r3, #0
 800fe6e:	f000 80a4 	beq.w	800ffba <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800fe72:	f7ff f929 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800fe76:	f7ff f905 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800fe7a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fe7e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fe80:	2d00      	cmp	r5, #0
 800fe82:	dc05      	bgt.n	800fe90 <xQueueSemaphoreTake+0xb0>
 800fe84:	e074      	b.n	800ff70 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800fe86:	1e6b      	subs	r3, r5, #1
 800fe88:	b2da      	uxtb	r2, r3
 800fe8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fe8c:	2a00      	cmp	r2, #0
 800fe8e:	d06f      	beq.n	800ff70 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fe90:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fe92:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fe94:	2b00      	cmp	r3, #0
 800fe96:	d06b      	beq.n	800ff70 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fe98:	f000 ff72 	bl	8010d80 <xTaskRemoveFromEventList>
 800fe9c:	2800      	cmp	r0, #0
 800fe9e:	d0f2      	beq.n	800fe86 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800fea0:	f001 f80a 	bl	8010eb8 <vTaskMissedYield>
 800fea4:	e7ef      	b.n	800fe86 <xQueueSemaphoreTake+0xa6>
 800fea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800feaa:	f383 8811 	msr	BASEPRI, r3
 800feae:	f3bf 8f6f 	isb	sy
 800feb2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800feb6:	e7fe      	b.n	800feb6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800feb8:	9b01      	ldr	r3, [sp, #4]
 800feba:	2b00      	cmp	r3, #0
 800febc:	f000 80d4 	beq.w	8010068 <xQueueSemaphoreTake+0x288>
 800fec0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fec4:	f383 8811 	msr	BASEPRI, r3
 800fec8:	f3bf 8f6f 	isb	sy
 800fecc:	f3bf 8f4f 	dsb	sy
 800fed0:	e7fe      	b.n	800fed0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800fed2:	f7ff f8d7 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800fed6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800feda:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fedc:	2d00      	cmp	r5, #0
 800fede:	dc04      	bgt.n	800feea <xQueueSemaphoreTake+0x10a>
 800fee0:	e011      	b.n	800ff06 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800fee2:	1e6b      	subs	r3, r5, #1
 800fee4:	b2da      	uxtb	r2, r3
 800fee6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fee8:	b16a      	cbz	r2, 800ff06 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800feea:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800feec:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800feee:	b153      	cbz	r3, 800ff06 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fef0:	f000 ff46 	bl	8010d80 <xTaskRemoveFromEventList>
 800fef4:	2800      	cmp	r0, #0
 800fef6:	d0f4      	beq.n	800fee2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800fef8:	f000 ffde 	bl	8010eb8 <vTaskMissedYield>
			--cTxLock;
 800fefc:	1e6b      	subs	r3, r5, #1
 800fefe:	b2da      	uxtb	r2, r3
 800ff00:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ff02:	2a00      	cmp	r2, #0
 800ff04:	d1f1      	bne.n	800feea <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ff06:	23ff      	movs	r3, #255	; 0xff
 800ff08:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ff0c:	f7ff f8dc 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ff10:	f7ff f8b8 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ff14:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ff18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ff1a:	2d00      	cmp	r5, #0
 800ff1c:	dd14      	ble.n	800ff48 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ff1e:	f104 0810 	add.w	r8, r4, #16
 800ff22:	e003      	b.n	800ff2c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ff24:	1e6b      	subs	r3, r5, #1
 800ff26:	b2da      	uxtb	r2, r3
 800ff28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ff2a:	b16a      	cbz	r2, 800ff48 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ff2c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ff2e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ff30:	b153      	cbz	r3, 800ff48 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ff32:	f000 ff25 	bl	8010d80 <xTaskRemoveFromEventList>
 800ff36:	2800      	cmp	r0, #0
 800ff38:	d0f4      	beq.n	800ff24 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ff3a:	f000 ffbd 	bl	8010eb8 <vTaskMissedYield>
				--cRxLock;
 800ff3e:	1e6b      	subs	r3, r5, #1
 800ff40:	b2da      	uxtb	r2, r3
 800ff42:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ff44:	2a00      	cmp	r2, #0
 800ff46:	d1f1      	bne.n	800ff2c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ff48:	23ff      	movs	r3, #255	; 0xff
 800ff4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ff4e:	f7ff f8bb 	bl	800f0c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ff52:	f000 fe15 	bl	8010b80 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ff56:	f7ff f895 	bl	800f084 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ff5a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ff5c:	2b00      	cmp	r3, #0
 800ff5e:	d07c      	beq.n	801005a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ff60:	f7ff f8b2 	bl	800f0c8 <vPortExitCritical>
	return xReturn;
 800ff64:	2501      	movs	r5, #1
 800ff66:	e755      	b.n	800fe14 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ff68:	a802      	add	r0, sp, #8
 800ff6a:	f000 ff51 	bl	8010e10 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ff6e:	e75e      	b.n	800fe2e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ff70:	23ff      	movs	r3, #255	; 0xff
 800ff72:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ff76:	f7ff f8a7 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ff7a:	f7ff f883 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ff7e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ff82:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ff84:	2d00      	cmp	r5, #0
 800ff86:	dd10      	ble.n	800ffaa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ff88:	f104 0810 	add.w	r8, r4, #16
 800ff8c:	e003      	b.n	800ff96 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800ff8e:	1e6b      	subs	r3, r5, #1
 800ff90:	b2da      	uxtb	r2, r3
 800ff92:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ff94:	b14a      	cbz	r2, 800ffaa <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ff96:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ff98:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ff9a:	b133      	cbz	r3, 800ffaa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ff9c:	f000 fef0 	bl	8010d80 <xTaskRemoveFromEventList>
 800ffa0:	2800      	cmp	r0, #0
 800ffa2:	d0f4      	beq.n	800ff8e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800ffa4:	f000 ff88 	bl	8010eb8 <vTaskMissedYield>
 800ffa8:	e7f1      	b.n	800ff8e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800ffaa:	23ff      	movs	r3, #255	; 0xff
 800ffac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ffb0:	f7ff f88a 	bl	800f0c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ffb4:	f000 fde4 	bl	8010b80 <xTaskResumeAll>
 800ffb8:	e7d4      	b.n	800ff64 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ffba:	f7ff f885 	bl	800f0c8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ffbe:	6823      	ldr	r3, [r4, #0]
 800ffc0:	2b00      	cmp	r3, #0
 800ffc2:	d062      	beq.n	801008a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ffc4:	9901      	ldr	r1, [sp, #4]
 800ffc6:	4630      	mov	r0, r6
 800ffc8:	f000 fe4c 	bl	8010c64 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ffcc:	f7ff f85a 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ffd0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ffd4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ffd6:	2d00      	cmp	r5, #0
 800ffd8:	dc04      	bgt.n	800ffe4 <xQueueSemaphoreTake+0x204>
 800ffda:	e00d      	b.n	800fff8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ffdc:	1e6b      	subs	r3, r5, #1
 800ffde:	b2da      	uxtb	r2, r3
 800ffe0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ffe2:	b14a      	cbz	r2, 800fff8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ffe4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ffe6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ffe8:	b133      	cbz	r3, 800fff8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ffea:	f000 fec9 	bl	8010d80 <xTaskRemoveFromEventList>
 800ffee:	2800      	cmp	r0, #0
 800fff0:	d0f4      	beq.n	800ffdc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800fff2:	f000 ff61 	bl	8010eb8 <vTaskMissedYield>
 800fff6:	e7f1      	b.n	800ffdc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800fff8:	23ff      	movs	r3, #255	; 0xff
 800fffa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800fffe:	f7ff f863 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010002:	f7ff f83f 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010006:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801000a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801000c:	2d00      	cmp	r5, #0
 801000e:	dd10      	ble.n	8010032 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010010:	f104 0810 	add.w	r8, r4, #16
 8010014:	e003      	b.n	801001e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 8010016:	1e6b      	subs	r3, r5, #1
 8010018:	b2da      	uxtb	r2, r3
 801001a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801001c:	b14a      	cbz	r2, 8010032 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801001e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010020:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010022:	b133      	cbz	r3, 8010032 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010024:	f000 feac 	bl	8010d80 <xTaskRemoveFromEventList>
 8010028:	2800      	cmp	r0, #0
 801002a:	d0f4      	beq.n	8010016 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 801002c:	f000 ff44 	bl	8010eb8 <vTaskMissedYield>
 8010030:	e7f1      	b.n	8010016 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 8010032:	23ff      	movs	r3, #255	; 0xff
 8010034:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010038:	f7ff f846 	bl	800f0c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 801003c:	f000 fda0 	bl	8010b80 <xTaskResumeAll>
 8010040:	2800      	cmp	r0, #0
 8010042:	d18f      	bne.n	800ff64 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 8010044:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010048:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801004c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010050:	f3bf 8f4f 	dsb	sy
 8010054:	f3bf 8f6f 	isb	sy
 8010058:	e784      	b.n	800ff64 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 801005a:	f7ff f835 	bl	800f0c8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 801005e:	b92f      	cbnz	r7, 801006c <xQueueSemaphoreTake+0x28c>
}
 8010060:	4638      	mov	r0, r7
 8010062:	b004      	add	sp, #16
 8010064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010068:	4607      	mov	r7, r0
 801006a:	e6d1      	b.n	800fe10 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 801006c:	f7ff f80a 	bl	800f084 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8010070:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010072:	b119      	cbz	r1, 801007c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8010074:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010076:	6819      	ldr	r1, [r3, #0]
 8010078:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 801007c:	68a0      	ldr	r0, [r4, #8]
 801007e:	f000 ffbd 	bl	8010ffc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8010082:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 8010084:	f7ff f820 	bl	800f0c8 <vPortExitCritical>
 8010088:	e7ea      	b.n	8010060 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 801008a:	f7fe fffb 	bl	800f084 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 801008e:	68a0      	ldr	r0, [r4, #8]
 8010090:	f000 ff28 	bl	8010ee4 <xTaskPriorityInherit>
 8010094:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 8010096:	f7ff f817 	bl	800f0c8 <vPortExitCritical>
 801009a:	e793      	b.n	800ffc4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 801009c:	b197      	cbz	r7, 80100c4 <xQueueSemaphoreTake+0x2e4>
 801009e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100a2:	f383 8811 	msr	BASEPRI, r3
 80100a6:	f3bf 8f6f 	isb	sy
 80100aa:	f3bf 8f4f 	dsb	sy
 80100ae:	e7fe      	b.n	80100ae <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80100b0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80100b2:	3b01      	subs	r3, #1
 80100b4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80100b6:	b1ca      	cbz	r2, 80100ec <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80100b8:	6923      	ldr	r3, [r4, #16]
 80100ba:	b933      	cbnz	r3, 80100ca <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 80100bc:	f7ff f804 	bl	800f0c8 <vPortExitCritical>
				return pdPASS;
 80100c0:	2701      	movs	r7, #1
 80100c2:	e7cd      	b.n	8010060 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 80100c4:	f7ff f800 	bl	800f0c8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80100c8:	e7ca      	b.n	8010060 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80100ca:	f104 0010 	add.w	r0, r4, #16
 80100ce:	f000 fe57 	bl	8010d80 <xTaskRemoveFromEventList>
 80100d2:	2800      	cmp	r0, #0
 80100d4:	d0f2      	beq.n	80100bc <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 80100d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100da:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80100de:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80100e2:	f3bf 8f4f 	dsb	sy
 80100e6:	f3bf 8f6f 	isb	sy
 80100ea:	e7e7      	b.n	80100bc <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80100ec:	f000 ffda 	bl	80110a4 <pvTaskIncrementMutexHeldCount>
 80100f0:	60a0      	str	r0, [r4, #8]
 80100f2:	e7e1      	b.n	80100b8 <xQueueSemaphoreTake+0x2d8>

080100f4 <xQueueReceiveFromISR>:
{
 80100f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 80100f8:	b310      	cbz	r0, 8010140 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80100fa:	460e      	mov	r6, r1
 80100fc:	4617      	mov	r7, r2
 80100fe:	4604      	mov	r4, r0
 8010100:	b191      	cbz	r1, 8010128 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010102:	f7ff f8f3 	bl	800f2ec <vPortValidateInterruptPriority>
	__asm volatile
 8010106:	f3ef 8911 	mrs	r9, BASEPRI
 801010a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801010e:	f383 8811 	msr	BASEPRI, r3
 8010112:	f3bf 8f6f 	isb	sy
 8010116:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801011a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801011c:	b9cd      	cbnz	r5, 8010152 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 801011e:	4628      	mov	r0, r5
	__asm volatile
 8010120:	f389 8811 	msr	BASEPRI, r9
}
 8010124:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010128:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801012a:	2b00      	cmp	r3, #0
 801012c:	d0e9      	beq.n	8010102 <xQueueReceiveFromISR+0xe>
	__asm volatile
 801012e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010132:	f383 8811 	msr	BASEPRI, r3
 8010136:	f3bf 8f6f 	isb	sy
 801013a:	f3bf 8f4f 	dsb	sy
 801013e:	e7fe      	b.n	801013e <xQueueReceiveFromISR+0x4a>
 8010140:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010144:	f383 8811 	msr	BASEPRI, r3
 8010148:	f3bf 8f6f 	isb	sy
 801014c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010150:	e7fe      	b.n	8010150 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 8010152:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010156:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 8010158:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 801015c:	b152      	cbz	r2, 8010174 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801015e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010160:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010162:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010164:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010166:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010168:	bf24      	itt	cs
 801016a:	6821      	ldrcs	r1, [r4, #0]
 801016c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801016e:	4630      	mov	r0, r6
 8010170:	f01c ff35 	bl	802cfde <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010174:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8010176:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801017a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 801017c:	d009      	beq.n	8010192 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 801017e:	f108 0301 	add.w	r3, r8, #1
 8010182:	b25b      	sxtb	r3, r3
 8010184:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 8010188:	2001      	movs	r0, #1
	__asm volatile
 801018a:	f389 8811 	msr	BASEPRI, r9
}
 801018e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010192:	6923      	ldr	r3, [r4, #16]
 8010194:	2b00      	cmp	r3, #0
 8010196:	d0f7      	beq.n	8010188 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010198:	f104 0010 	add.w	r0, r4, #16
 801019c:	f000 fdf0 	bl	8010d80 <xTaskRemoveFromEventList>
 80101a0:	2800      	cmp	r0, #0
 80101a2:	d0f1      	beq.n	8010188 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 80101a4:	2f00      	cmp	r7, #0
 80101a6:	d0ef      	beq.n	8010188 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80101a8:	2001      	movs	r0, #1
 80101aa:	6038      	str	r0, [r7, #0]
 80101ac:	e7b8      	b.n	8010120 <xQueueReceiveFromISR+0x2c>
 80101ae:	bf00      	nop

080101b0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 80101b0:	b158      	cbz	r0, 80101ca <uxQueueMessagesWaiting+0x1a>
{
 80101b2:	b510      	push	{r4, lr}
 80101b4:	4604      	mov	r4, r0
 80101b6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 80101b8:	f7fe ff64 	bl	800f084 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 80101bc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80101be:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80101c0:	f7fe ff82 	bl	800f0c8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80101c4:	9801      	ldr	r0, [sp, #4]
 80101c6:	b002      	add	sp, #8
 80101c8:	bd10      	pop	{r4, pc}
	__asm volatile
 80101ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101ce:	f383 8811 	msr	BASEPRI, r3
 80101d2:	f3bf 8f6f 	isb	sy
 80101d6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 80101da:	e7fe      	b.n	80101da <uxQueueMessagesWaiting+0x2a>

080101dc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 80101dc:	b108      	cbz	r0, 80101e2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 80101de:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80101e0:	4770      	bx	lr
 80101e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101e6:	f383 8811 	msr	BASEPRI, r3
 80101ea:	f3bf 8f6f 	isb	sy
 80101ee:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80101f2:	e7fe      	b.n	80101f2 <uxQueueMessagesWaitingFromISR+0x16>
 80101f4:	0000      	movs	r0, r0
	...

080101f8 <vQueueDelete>:
	configASSERT( pxQueue );
 80101f8:	b1f0      	cbz	r0, 8010238 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80101fa:	4b21      	ldr	r3, [pc, #132]	; (8010280 <vQueueDelete+0x88>)
 80101fc:	685a      	ldr	r2, [r3, #4]
 80101fe:	4290      	cmp	r0, r2
 8010200:	d025      	beq.n	801024e <vQueueDelete+0x56>
 8010202:	68da      	ldr	r2, [r3, #12]
 8010204:	4290      	cmp	r0, r2
 8010206:	d02c      	beq.n	8010262 <vQueueDelete+0x6a>
 8010208:	695a      	ldr	r2, [r3, #20]
 801020a:	4290      	cmp	r0, r2
 801020c:	d02b      	beq.n	8010266 <vQueueDelete+0x6e>
 801020e:	69da      	ldr	r2, [r3, #28]
 8010210:	4290      	cmp	r0, r2
 8010212:	d02a      	beq.n	801026a <vQueueDelete+0x72>
 8010214:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8010216:	4290      	cmp	r0, r2
 8010218:	d029      	beq.n	801026e <vQueueDelete+0x76>
 801021a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801021c:	4290      	cmp	r0, r2
 801021e:	d01e      	beq.n	801025e <vQueueDelete+0x66>
 8010220:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8010222:	4290      	cmp	r0, r2
 8010224:	d025      	beq.n	8010272 <vQueueDelete+0x7a>
 8010226:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8010228:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801022a:	bf08      	it	eq
 801022c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801022e:	d00f      	beq.n	8010250 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8010230:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8010234:	b14b      	cbz	r3, 801024a <vQueueDelete+0x52>
}
 8010236:	4770      	bx	lr
 8010238:	f04f 0350 	mov.w	r3, #80	; 0x50
 801023c:	f383 8811 	msr	BASEPRI, r3
 8010240:	f3bf 8f6f 	isb	sy
 8010244:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010248:	e7fe      	b.n	8010248 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 801024a:	f7fe be01 	b.w	800ee50 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801024e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8010250:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8010278 <vQueueDelete+0x80>
 8010254:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010258:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 801025c:	e7e8      	b.n	8010230 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801025e:	2205      	movs	r2, #5
 8010260:	e7f6      	b.n	8010250 <vQueueDelete+0x58>
 8010262:	2201      	movs	r2, #1
 8010264:	e7f4      	b.n	8010250 <vQueueDelete+0x58>
 8010266:	2202      	movs	r2, #2
 8010268:	e7f2      	b.n	8010250 <vQueueDelete+0x58>
 801026a:	2203      	movs	r2, #3
 801026c:	e7f0      	b.n	8010250 <vQueueDelete+0x58>
 801026e:	2204      	movs	r2, #4
 8010270:	e7ee      	b.n	8010250 <vQueueDelete+0x58>
 8010272:	2206      	movs	r2, #6
 8010274:	e7ec      	b.n	8010250 <vQueueDelete+0x58>
 8010276:	bf00      	nop
	...
 8010280:	200131d8 	.word	0x200131d8

08010284 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8010284:	4b12      	ldr	r3, [pc, #72]	; (80102d0 <vQueueAddToRegistry+0x4c>)
 8010286:	681a      	ldr	r2, [r3, #0]
 8010288:	b17a      	cbz	r2, 80102aa <vQueueAddToRegistry+0x26>
 801028a:	689a      	ldr	r2, [r3, #8]
 801028c:	b162      	cbz	r2, 80102a8 <vQueueAddToRegistry+0x24>
 801028e:	691a      	ldr	r2, [r3, #16]
 8010290:	b192      	cbz	r2, 80102b8 <vQueueAddToRegistry+0x34>
 8010292:	699a      	ldr	r2, [r3, #24]
 8010294:	b192      	cbz	r2, 80102bc <vQueueAddToRegistry+0x38>
 8010296:	6a1a      	ldr	r2, [r3, #32]
 8010298:	b192      	cbz	r2, 80102c0 <vQueueAddToRegistry+0x3c>
 801029a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 801029c:	b192      	cbz	r2, 80102c4 <vQueueAddToRegistry+0x40>
 801029e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80102a0:	b192      	cbz	r2, 80102c8 <vQueueAddToRegistry+0x44>
 80102a2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80102a4:	b192      	cbz	r2, 80102cc <vQueueAddToRegistry+0x48>
	}
 80102a6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80102a8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 80102aa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80102ae:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80102b2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 80102b6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80102b8:	2202      	movs	r2, #2
 80102ba:	e7f6      	b.n	80102aa <vQueueAddToRegistry+0x26>
 80102bc:	2203      	movs	r2, #3
 80102be:	e7f4      	b.n	80102aa <vQueueAddToRegistry+0x26>
 80102c0:	2204      	movs	r2, #4
 80102c2:	e7f2      	b.n	80102aa <vQueueAddToRegistry+0x26>
 80102c4:	2205      	movs	r2, #5
 80102c6:	e7f0      	b.n	80102aa <vQueueAddToRegistry+0x26>
 80102c8:	2206      	movs	r2, #6
 80102ca:	e7ee      	b.n	80102aa <vQueueAddToRegistry+0x26>
 80102cc:	2207      	movs	r2, #7
 80102ce:	e7ec      	b.n	80102aa <vQueueAddToRegistry+0x26>
 80102d0:	200131d8 	.word	0x200131d8

080102d4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80102d4:	b570      	push	{r4, r5, r6, lr}
 80102d6:	4605      	mov	r5, r0
 80102d8:	460e      	mov	r6, r1
 80102da:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80102dc:	f7fe fed2 	bl	800f084 <vPortEnterCritical>
 80102e0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 80102e4:	2bff      	cmp	r3, #255	; 0xff
 80102e6:	bf04      	itt	eq
 80102e8:	2300      	moveq	r3, #0
 80102ea:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 80102ee:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 80102f2:	2bff      	cmp	r3, #255	; 0xff
 80102f4:	bf04      	itt	eq
 80102f6:	2300      	moveq	r3, #0
 80102f8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 80102fc:	f7fe fee4 	bl	800f0c8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8010300:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8010302:	2b00      	cmp	r3, #0
 8010304:	d043      	beq.n	801038e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 8010306:	f7fe febd 	bl	800f084 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801030a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 801030e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010310:	2c00      	cmp	r4, #0
 8010312:	dd14      	ble.n	801033e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010314:	f105 0624 	add.w	r6, r5, #36	; 0x24
 8010318:	e003      	b.n	8010322 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 801031a:	1e63      	subs	r3, r4, #1
 801031c:	b2da      	uxtb	r2, r3
 801031e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010320:	b16a      	cbz	r2, 801033e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010322:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010324:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010326:	b153      	cbz	r3, 801033e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010328:	f000 fd2a 	bl	8010d80 <xTaskRemoveFromEventList>
 801032c:	2800      	cmp	r0, #0
 801032e:	d0f4      	beq.n	801031a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 8010330:	f000 fdc2 	bl	8010eb8 <vTaskMissedYield>
			--cTxLock;
 8010334:	1e63      	subs	r3, r4, #1
 8010336:	b2da      	uxtb	r2, r3
 8010338:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801033a:	2a00      	cmp	r2, #0
 801033c:	d1f1      	bne.n	8010322 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 801033e:	23ff      	movs	r3, #255	; 0xff
 8010340:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010344:	f7fe fec0 	bl	800f0c8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010348:	f7fe fe9c 	bl	800f084 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801034c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8010350:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010352:	2c00      	cmp	r4, #0
 8010354:	dd14      	ble.n	8010380 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010356:	f105 0610 	add.w	r6, r5, #16
 801035a:	e003      	b.n	8010364 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 801035c:	1e63      	subs	r3, r4, #1
 801035e:	b2da      	uxtb	r2, r3
 8010360:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010362:	b16a      	cbz	r2, 8010380 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010364:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010366:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010368:	b153      	cbz	r3, 8010380 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801036a:	f000 fd09 	bl	8010d80 <xTaskRemoveFromEventList>
 801036e:	2800      	cmp	r0, #0
 8010370:	d0f4      	beq.n	801035c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 8010372:	f000 fda1 	bl	8010eb8 <vTaskMissedYield>
				--cRxLock;
 8010376:	1e63      	subs	r3, r4, #1
 8010378:	b2da      	uxtb	r2, r3
 801037a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801037c:	2a00      	cmp	r2, #0
 801037e:	d1f1      	bne.n	8010364 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 8010380:	23ff      	movs	r3, #255	; 0xff
 8010382:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 8010386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 801038a:	f7fe be9d 	b.w	800f0c8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 801038e:	4622      	mov	r2, r4
 8010390:	4631      	mov	r1, r6
 8010392:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010396:	f000 fca9 	bl	8010cec <vTaskPlaceOnEventListRestricted>
 801039a:	e7b4      	b.n	8010306 <vQueueWaitForMessageRestricted+0x32>

0801039c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 801039c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80103a0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80103a2:	f7fe fe6f 	bl	800f084 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80103a6:	4a34      	ldr	r2, [pc, #208]	; (8010478 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 80103a8:	4e34      	ldr	r6, [pc, #208]	; (801047c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 80103aa:	6813      	ldr	r3, [r2, #0]
 80103ac:	3301      	adds	r3, #1
 80103ae:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 80103b0:	6833      	ldr	r3, [r6, #0]
 80103b2:	2b00      	cmp	r3, #0
 80103b4:	d032      	beq.n	801041c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 80103b6:	4c32      	ldr	r4, [pc, #200]	; (8010480 <prvAddNewTaskToReadyList+0xe4>)
 80103b8:	6823      	ldr	r3, [r4, #0]
 80103ba:	b33b      	cbz	r3, 801040c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80103bc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80103be:	4f31      	ldr	r7, [pc, #196]	; (8010484 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 80103c0:	4a31      	ldr	r2, [pc, #196]	; (8010488 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 80103c2:	4932      	ldr	r1, [pc, #200]	; (801048c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 80103c4:	6813      	ldr	r3, [r2, #0]
 80103c6:	3301      	adds	r3, #1
 80103c8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80103ca:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80103cc:	680b      	ldr	r3, [r1, #0]
 80103ce:	4283      	cmp	r3, r0
 80103d0:	bf38      	it	cc
 80103d2:	6008      	strcc	r0, [r1, #0]
 80103d4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80103d8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 80103dc:	1d29      	adds	r1, r5, #4
 80103de:	f7fe fdab 	bl	800ef38 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 80103e2:	f7fe fe71 	bl	800f0c8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 80103e6:	6823      	ldr	r3, [r4, #0]
 80103e8:	b173      	cbz	r3, 8010408 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80103ea:	6832      	ldr	r2, [r6, #0]
 80103ec:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80103ee:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80103f0:	429a      	cmp	r2, r3
 80103f2:	d209      	bcs.n	8010408 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 80103f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80103f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80103fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010400:	f3bf 8f4f 	dsb	sy
 8010404:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8010408:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801040c:	6833      	ldr	r3, [r6, #0]
 801040e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8010410:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010412:	4f1c      	ldr	r7, [pc, #112]	; (8010484 <prvAddNewTaskToReadyList+0xe8>)
 8010414:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 8010416:	bf98      	it	ls
 8010418:	6035      	strls	r5, [r6, #0]
 801041a:	e7d1      	b.n	80103c0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 801041c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 801041e:	6813      	ldr	r3, [r2, #0]
 8010420:	2b01      	cmp	r3, #1
 8010422:	d003      	beq.n	801042c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8010424:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8010426:	4f17      	ldr	r7, [pc, #92]	; (8010484 <prvAddNewTaskToReadyList+0xe8>)
 8010428:	4c15      	ldr	r4, [pc, #84]	; (8010480 <prvAddNewTaskToReadyList+0xe4>)
 801042a:	e7c9      	b.n	80103c0 <prvAddNewTaskToReadyList+0x24>
 801042c:	4f15      	ldr	r7, [pc, #84]	; (8010484 <prvAddNewTaskToReadyList+0xe8>)
 801042e:	463c      	mov	r4, r7
 8010430:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8010434:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8010436:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8010438:	f7fe fd6e 	bl	800ef18 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801043c:	45a0      	cmp	r8, r4
 801043e:	d1f9      	bne.n	8010434 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 8010440:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80104a4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 8010444:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80104a8 <prvAddNewTaskToReadyList+0x10c>
 8010448:	4c0d      	ldr	r4, [pc, #52]	; (8010480 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 801044a:	4648      	mov	r0, r9
 801044c:	f7fe fd64 	bl	800ef18 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8010450:	4640      	mov	r0, r8
 8010452:	f7fe fd61 	bl	800ef18 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8010456:	480e      	ldr	r0, [pc, #56]	; (8010490 <prvAddNewTaskToReadyList+0xf4>)
 8010458:	f7fe fd5e 	bl	800ef18 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 801045c:	480d      	ldr	r0, [pc, #52]	; (8010494 <prvAddNewTaskToReadyList+0xf8>)
 801045e:	f7fe fd5b 	bl	800ef18 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8010462:	480d      	ldr	r0, [pc, #52]	; (8010498 <prvAddNewTaskToReadyList+0xfc>)
 8010464:	f7fe fd58 	bl	800ef18 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8010468:	4b0c      	ldr	r3, [pc, #48]	; (801049c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 801046a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 801046c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8010470:	4b0b      	ldr	r3, [pc, #44]	; (80104a0 <prvAddNewTaskToReadyList+0x104>)
 8010472:	f8c3 8000 	str.w	r8, [r3]
}
 8010476:	e7a3      	b.n	80103c0 <prvAddNewTaskToReadyList+0x24>
 8010478:	20013684 	.word	0x20013684
 801047c:	20013218 	.word	0x20013218
 8010480:	200136e0 	.word	0x200136e0
 8010484:	20013224 	.word	0x20013224
 8010488:	20013690 	.word	0x20013690
 801048c:	20013694 	.word	0x20013694
 8010490:	200136cc 	.word	0x200136cc
 8010494:	200136f8 	.word	0x200136f8
 8010498:	200136e4 	.word	0x200136e4
 801049c:	2001321c 	.word	0x2001321c
 80104a0:	20013220 	.word	0x20013220
 80104a4:	20013698 	.word	0x20013698
 80104a8:	200136ac 	.word	0x200136ac

080104ac <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80104ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80104b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80104b2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80104b6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80104ba:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80104bc:	4606      	mov	r6, r0
 80104be:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80104c0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80104c2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80104c4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80104c6:	f01c fc64 	bl	802cd92 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80104ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80104cc:	f1a9 0904 	sub.w	r9, r9, #4
 80104d0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80104d2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 80104d6:	2d00      	cmp	r5, #0
 80104d8:	d079      	beq.n	80105ce <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80104da:	782b      	ldrb	r3, [r5, #0]
 80104dc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 80104e0:	2b00      	cmp	r3, #0
 80104e2:	d03b      	beq.n	801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80104e4:	786b      	ldrb	r3, [r5, #1]
 80104e6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 80104ea:	2b00      	cmp	r3, #0
 80104ec:	d036      	beq.n	801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80104ee:	78ab      	ldrb	r3, [r5, #2]
 80104f0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 80104f4:	b393      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80104f6:	78eb      	ldrb	r3, [r5, #3]
 80104f8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 80104fc:	b373      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80104fe:	792b      	ldrb	r3, [r5, #4]
 8010500:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 8010504:	b353      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010506:	796b      	ldrb	r3, [r5, #5]
 8010508:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 801050c:	b333      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801050e:	79ab      	ldrb	r3, [r5, #6]
 8010510:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 8010514:	b313      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010516:	79eb      	ldrb	r3, [r5, #7]
 8010518:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 801051c:	b1f3      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801051e:	7a2b      	ldrb	r3, [r5, #8]
 8010520:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 8010524:	b1d3      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010526:	7a6b      	ldrb	r3, [r5, #9]
 8010528:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 801052c:	b1b3      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801052e:	7aab      	ldrb	r3, [r5, #10]
 8010530:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 8010534:	b193      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010536:	7aeb      	ldrb	r3, [r5, #11]
 8010538:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 801053c:	b173      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801053e:	7b2b      	ldrb	r3, [r5, #12]
 8010540:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 8010544:	b153      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010546:	7b6b      	ldrb	r3, [r5, #13]
 8010548:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 801054c:	b133      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801054e:	7bab      	ldrb	r3, [r5, #14]
 8010550:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 8010554:	b113      	cbz	r3, 801055c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010556:	7beb      	ldrb	r3, [r5, #15]
 8010558:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 801055c:	2300      	movs	r3, #0
 801055e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8010562:	9d08      	ldr	r5, [sp, #32]
 8010564:	2d37      	cmp	r5, #55	; 0x37
 8010566:	bf28      	it	cs
 8010568:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 801056a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 801056e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8010570:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8010572:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8010574:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8010578:	f7fe fcda 	bl	800ef30 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801057c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8010580:	f104 0018 	add.w	r0, r4, #24
 8010584:	f7fe fcd4 	bl	800ef30 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010588:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 801058a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801058e:	4651      	mov	r1, sl
 8010590:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8010592:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8010594:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8010596:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 801059a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801059e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80105a2:	f01c fbf6 	bl	802cd92 <memset>
 80105a6:	4b0b      	ldr	r3, [pc, #44]	; (80105d4 <prvInitialiseNewTask.constprop.0+0x128>)
 80105a8:	65e3      	str	r3, [r4, #92]	; 0x5c
 80105aa:	f103 0568 	add.w	r5, r3, #104	; 0x68
 80105ae:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80105b0:	463a      	mov	r2, r7
 80105b2:	4631      	mov	r1, r6
 80105b4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80105b6:	6625      	str	r5, [r4, #96]	; 0x60
 80105b8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80105ba:	f7fe fd37 	bl	800f02c <pxPortInitialiseStack>
 80105be:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80105c0:	f1b8 0f00 	cmp.w	r8, #0
 80105c4:	d001      	beq.n	80105ca <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80105c6:	f8c8 4000 	str.w	r4, [r8]
}
 80105ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80105ce:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80105d2:	e7c6      	b.n	8010562 <prvInitialiseNewTask.constprop.0+0xb6>
 80105d4:	200141a8 	.word	0x200141a8

080105d8 <prvIdleTask>:
{
 80105d8:	b580      	push	{r7, lr}
 80105da:	4d23      	ldr	r5, [pc, #140]	; (8010668 <prvIdleTask+0x90>)
 80105dc:	4f23      	ldr	r7, [pc, #140]	; (801066c <prvIdleTask+0x94>)
 80105de:	4e24      	ldr	r6, [pc, #144]	; (8010670 <prvIdleTask+0x98>)
 80105e0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8010674 <prvIdleTask+0x9c>
				taskYIELD();
 80105e4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 80105e8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80105ec:	682b      	ldr	r3, [r5, #0]
 80105ee:	b35b      	cbz	r3, 8010648 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 80105f0:	f7fe fd48 	bl	800f084 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80105f4:	68fb      	ldr	r3, [r7, #12]
 80105f6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80105f8:	1d20      	adds	r0, r4, #4
 80105fa:	f7fe fcc5 	bl	800ef88 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80105fe:	6833      	ldr	r3, [r6, #0]
 8010600:	3b01      	subs	r3, #1
 8010602:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 8010604:	682b      	ldr	r3, [r5, #0]
 8010606:	3b01      	subs	r3, #1
 8010608:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 801060a:	f7fe fd5d 	bl	800f0c8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801060e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8010612:	f01c fc07 	bl	802ce24 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8010616:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 801061a:	b163      	cbz	r3, 8010636 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 801061c:	2b01      	cmp	r3, #1
 801061e:	d01e      	beq.n	801065e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8010620:	2b02      	cmp	r3, #2
 8010622:	d0e3      	beq.n	80105ec <prvIdleTask+0x14>
 8010624:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010628:	f383 8811 	msr	BASEPRI, r3
 801062c:	f3bf 8f6f 	isb	sy
 8010630:	f3bf 8f4f 	dsb	sy
 8010634:	e7fe      	b.n	8010634 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 8010636:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010638:	f7fe fc0a 	bl	800ee50 <vPortFree>
				vPortFree( pxTCB );
 801063c:	4620      	mov	r0, r4
 801063e:	f7fe fc07 	bl	800ee50 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8010642:	682b      	ldr	r3, [r5, #0]
 8010644:	2b00      	cmp	r3, #0
 8010646:	d1d3      	bne.n	80105f0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8010648:	f8d8 3000 	ldr.w	r3, [r8]
 801064c:	2b01      	cmp	r3, #1
 801064e:	d9cd      	bls.n	80105ec <prvIdleTask+0x14>
				taskYIELD();
 8010650:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 8010654:	f3bf 8f4f 	dsb	sy
 8010658:	f3bf 8f6f 	isb	sy
 801065c:	e7c6      	b.n	80105ec <prvIdleTask+0x14>
				vPortFree( pxTCB );
 801065e:	4620      	mov	r0, r4
 8010660:	f7fe fbf6 	bl	800ee50 <vPortFree>
 8010664:	e7c2      	b.n	80105ec <prvIdleTask+0x14>
 8010666:	bf00      	nop
 8010668:	20013688 	.word	0x20013688
 801066c:	200136f8 	.word	0x200136f8
 8010670:	20013684 	.word	0x20013684
 8010674:	20013224 	.word	0x20013224

08010678 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 8010678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 801067c:	4b47      	ldr	r3, [pc, #284]	; (801079c <xTaskIncrementTick.part.0+0x124>)
 801067e:	681e      	ldr	r6, [r3, #0]
 8010680:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 8010682:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 8010684:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8010686:	2e00      	cmp	r6, #0
 8010688:	d040      	beq.n	801070c <xTaskIncrementTick.part.0+0x94>
 801068a:	f8df b124 	ldr.w	fp, [pc, #292]	; 80107b0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 801068e:	f8db 3000 	ldr.w	r3, [fp]
 8010692:	429e      	cmp	r6, r3
 8010694:	d347      	bcc.n	8010726 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8010696:	4f42      	ldr	r7, [pc, #264]	; (80107a0 <xTaskIncrementTick.part.0+0x128>)
 8010698:	f8df 9118 	ldr.w	r9, [pc, #280]	; 80107b4 <xTaskIncrementTick.part.0+0x13c>
 801069c:	683b      	ldr	r3, [r7, #0]
 801069e:	f8df a118 	ldr.w	sl, [pc, #280]	; 80107b8 <xTaskIncrementTick.part.0+0x140>
 80106a2:	681d      	ldr	r5, [r3, #0]
 80106a4:	2d00      	cmp	r5, #0
 80106a6:	d073      	beq.n	8010790 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 80106a8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 80107bc <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 80106ac:	2500      	movs	r5, #0
 80106ae:	e022      	b.n	80106f6 <xTaskIncrementTick.part.0+0x7e>
 80106b0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80106b2:	f7fe fc69 	bl	800ef88 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80106b6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80106b8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80106ba:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80106be:	b113      	cbz	r3, 80106c6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80106c0:	f7fe fc62 	bl	800ef88 <uxListRemove>
 80106c4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80106c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80106c8:	f8d8 2000 	ldr.w	r2, [r8]
 80106cc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 80106d0:	4293      	cmp	r3, r2
 80106d2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80106d6:	bf88      	it	hi
 80106d8:	f8c8 3000 	strhi.w	r3, [r8]
 80106dc:	f7fe fc2c 	bl	800ef38 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80106e0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80106e4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80106e6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80106e8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80106ea:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 80106ec:	4291      	cmp	r1, r2
 80106ee:	bf28      	it	cs
 80106f0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80106f2:	2b00      	cmp	r3, #0
 80106f4:	d04c      	beq.n	8010790 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80106f6:	683b      	ldr	r3, [r7, #0]
 80106f8:	68db      	ldr	r3, [r3, #12]
 80106fa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80106fc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80106fe:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 8010700:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8010702:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 8010704:	d2d4      	bcs.n	80106b0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 8010706:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 801070a:	e011      	b.n	8010730 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 801070c:	4b24      	ldr	r3, [pc, #144]	; (80107a0 <xTaskIncrementTick.part.0+0x128>)
 801070e:	681a      	ldr	r2, [r3, #0]
 8010710:	6812      	ldr	r2, [r2, #0]
 8010712:	b30a      	cbz	r2, 8010758 <xTaskIncrementTick.part.0+0xe0>
 8010714:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010718:	f383 8811 	msr	BASEPRI, r3
 801071c:	f3bf 8f6f 	isb	sy
 8010720:	f3bf 8f4f 	dsb	sy
 8010724:	e7fe      	b.n	8010724 <xTaskIncrementTick.part.0+0xac>
 8010726:	f8df 908c 	ldr.w	r9, [pc, #140]	; 80107b4 <xTaskIncrementTick.part.0+0x13c>
 801072a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 80107b8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 801072e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8010730:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 8010734:	491b      	ldr	r1, [pc, #108]	; (80107a4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8010736:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010738:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801073c:	009b      	lsls	r3, r3, #2
 801073e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 8010742:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 8010744:	2a02      	cmp	r2, #2
 8010746:	bf28      	it	cs
 8010748:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 801074a:	2b00      	cmp	r3, #0
}
 801074c:	bf0c      	ite	eq
 801074e:	4628      	moveq	r0, r5
 8010750:	2001      	movne	r0, #1
 8010752:	b003      	add	sp, #12
 8010754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 8010758:	4a13      	ldr	r2, [pc, #76]	; (80107a8 <xTaskIncrementTick.part.0+0x130>)
 801075a:	6818      	ldr	r0, [r3, #0]
 801075c:	6811      	ldr	r1, [r2, #0]
 801075e:	6019      	str	r1, [r3, #0]
 8010760:	4912      	ldr	r1, [pc, #72]	; (80107ac <xTaskIncrementTick.part.0+0x134>)
 8010762:	6010      	str	r0, [r2, #0]
 8010764:	680a      	ldr	r2, [r1, #0]
 8010766:	3201      	adds	r2, #1
 8010768:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801076a:	681a      	ldr	r2, [r3, #0]
 801076c:	6812      	ldr	r2, [r2, #0]
 801076e:	b932      	cbnz	r2, 801077e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8010770:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80107b0 <xTaskIncrementTick.part.0+0x138>
 8010774:	f04f 33ff 	mov.w	r3, #4294967295
 8010778:	f8cb 3000 	str.w	r3, [fp]
 801077c:	e787      	b.n	801068e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801077e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8010780:	f8df b02c 	ldr.w	fp, [pc, #44]	; 80107b0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010784:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8010786:	68db      	ldr	r3, [r3, #12]
 8010788:	685b      	ldr	r3, [r3, #4]
 801078a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 801078e:	e77e      	b.n	801068e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010790:	f04f 33ff 	mov.w	r3, #4294967295
 8010794:	f8cb 3000 	str.w	r3, [fp]
					break;
 8010798:	e7ca      	b.n	8010730 <xTaskIncrementTick.part.0+0xb8>
 801079a:	bf00      	nop
 801079c:	2001370c 	.word	0x2001370c
 80107a0:	2001321c 	.word	0x2001321c
 80107a4:	20013710 	.word	0x20013710
 80107a8:	20013220 	.word	0x20013220
 80107ac:	200136c4 	.word	0x200136c4
 80107b0:	200136c0 	.word	0x200136c0
 80107b4:	20013224 	.word	0x20013224
 80107b8:	20013218 	.word	0x20013218
 80107bc:	20013694 	.word	0x20013694

080107c0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 80107c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 80107c4:	4d41      	ldr	r5, [pc, #260]	; (80108cc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 80107c6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 80107c8:	f7fe fc5c 	bl	800f084 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80107cc:	682b      	ldr	r3, [r5, #0]
 80107ce:	3b01      	subs	r3, #1
 80107d0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80107d2:	682b      	ldr	r3, [r5, #0]
 80107d4:	2b00      	cmp	r3, #0
 80107d6:	d161      	bne.n	801089c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80107d8:	4b3d      	ldr	r3, [pc, #244]	; (80108d0 <xTaskResumeAll.part.0+0x110>)
 80107da:	681b      	ldr	r3, [r3, #0]
 80107dc:	2b00      	cmp	r3, #0
 80107de:	d05d      	beq.n	801089c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80107e0:	4e3c      	ldr	r6, [pc, #240]	; (80108d4 <xTaskResumeAll.part.0+0x114>)
 80107e2:	6833      	ldr	r3, [r6, #0]
 80107e4:	2b00      	cmp	r3, #0
 80107e6:	d06e      	beq.n	80108c6 <xTaskResumeAll.part.0+0x106>
 80107e8:	4f3b      	ldr	r7, [pc, #236]	; (80108d8 <xTaskResumeAll.part.0+0x118>)
 80107ea:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 80108e8 <xTaskResumeAll.part.0+0x128>
 80107ee:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 80108ec <xTaskResumeAll.part.0+0x12c>
 80107f2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 80108f0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80107f6:	68f3      	ldr	r3, [r6, #12]
 80107f8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80107fa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80107fe:	f104 0018 	add.w	r0, r4, #24
 8010802:	f7fe fbc1 	bl	800ef88 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8010806:	4658      	mov	r0, fp
 8010808:	f7fe fbbe 	bl	800ef88 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 801080c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801080e:	683a      	ldr	r2, [r7, #0]
 8010810:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8010814:	4293      	cmp	r3, r2
 8010816:	4659      	mov	r1, fp
 8010818:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 801081c:	bf88      	it	hi
 801081e:	603b      	strhi	r3, [r7, #0]
 8010820:	f7fe fb8a 	bl	800ef38 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8010824:	f8d8 3000 	ldr.w	r3, [r8]
 8010828:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801082a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801082c:	429a      	cmp	r2, r3
 801082e:	d33d      	bcc.n	80108ac <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 8010830:	2301      	movs	r3, #1
 8010832:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8010836:	6833      	ldr	r3, [r6, #0]
 8010838:	2b00      	cmp	r3, #0
 801083a:	d1dc      	bne.n	80107f6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801083c:	4b27      	ldr	r3, [pc, #156]	; (80108dc <xTaskResumeAll.part.0+0x11c>)
 801083e:	681a      	ldr	r2, [r3, #0]
 8010840:	6812      	ldr	r2, [r2, #0]
 8010842:	2a00      	cmp	r2, #0
 8010844:	d03a      	beq.n	80108bc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010846:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8010848:	4b25      	ldr	r3, [pc, #148]	; (80108e0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801084a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801084c:	68d2      	ldr	r2, [r2, #12]
 801084e:	6852      	ldr	r2, [r2, #4]
 8010850:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8010852:	4e24      	ldr	r6, [pc, #144]	; (80108e4 <xTaskResumeAll.part.0+0x124>)
 8010854:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8010856:	b194      	cbz	r4, 801087e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 8010858:	2701      	movs	r7, #1
 801085a:	e006      	b.n	801086a <xTaskResumeAll.part.0+0xaa>
 801085c:	f7ff ff0c 	bl	8010678 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 8010860:	b108      	cbz	r0, 8010866 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 8010862:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8010866:	3c01      	subs	r4, #1
 8010868:	d008      	beq.n	801087c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801086a:	682b      	ldr	r3, [r5, #0]
 801086c:	2b00      	cmp	r3, #0
 801086e:	d0f5      	beq.n	801085c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 8010870:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8010872:	3c01      	subs	r4, #1
		++xPendedTicks;
 8010874:	f103 0301 	add.w	r3, r3, #1
 8010878:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 801087a:	d1f6      	bne.n	801086a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 801087c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 801087e:	f8da 3000 	ldr.w	r3, [sl]
 8010882:	b15b      	cbz	r3, 801089c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 8010884:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010888:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801088c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010890:	f3bf 8f4f 	dsb	sy
 8010894:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8010898:	2001      	movs	r0, #1
 801089a:	e000      	b.n	801089e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 801089c:	2000      	movs	r0, #0
 801089e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80108a0:	f7fe fc12 	bl	800f0c8 <vPortExitCritical>
}
 80108a4:	9801      	ldr	r0, [sp, #4]
 80108a6:	b003      	add	sp, #12
 80108a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80108ac:	6833      	ldr	r3, [r6, #0]
 80108ae:	2b00      	cmp	r3, #0
 80108b0:	d1a1      	bne.n	80107f6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80108b2:	4b0a      	ldr	r3, [pc, #40]	; (80108dc <xTaskResumeAll.part.0+0x11c>)
 80108b4:	681a      	ldr	r2, [r3, #0]
 80108b6:	6812      	ldr	r2, [r2, #0]
 80108b8:	2a00      	cmp	r2, #0
 80108ba:	d1c4      	bne.n	8010846 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 80108bc:	4b08      	ldr	r3, [pc, #32]	; (80108e0 <xTaskResumeAll.part.0+0x120>)
 80108be:	f04f 32ff 	mov.w	r2, #4294967295
 80108c2:	601a      	str	r2, [r3, #0]
 80108c4:	e7c5      	b.n	8010852 <xTaskResumeAll.part.0+0x92>
 80108c6:	f8df a028 	ldr.w	sl, [pc, #40]	; 80108f0 <xTaskResumeAll.part.0+0x130>
 80108ca:	e7c2      	b.n	8010852 <xTaskResumeAll.part.0+0x92>
 80108cc:	2001368c 	.word	0x2001368c
 80108d0:	20013684 	.word	0x20013684
 80108d4:	200136cc 	.word	0x200136cc
 80108d8:	20013694 	.word	0x20013694
 80108dc:	2001321c 	.word	0x2001321c
 80108e0:	200136c0 	.word	0x200136c0
 80108e4:	200136c8 	.word	0x200136c8
 80108e8:	20013224 	.word	0x20013224
 80108ec:	20013218 	.word	0x20013218
 80108f0:	20013710 	.word	0x20013710

080108f4 <xTaskCreateStatic>:
	{
 80108f4:	b530      	push	{r4, r5, lr}
 80108f6:	b087      	sub	sp, #28
 80108f8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80108fa:	b1c4      	cbz	r4, 801092e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 80108fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80108fe:	b16d      	cbz	r5, 801091c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 8010900:	25ac      	movs	r5, #172	; 0xac
 8010902:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8010904:	9d05      	ldr	r5, [sp, #20]
 8010906:	2dac      	cmp	r5, #172	; 0xac
 8010908:	d01a      	beq.n	8010940 <xTaskCreateStatic+0x4c>
 801090a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801090e:	f383 8811 	msr	BASEPRI, r3
 8010912:	f3bf 8f6f 	isb	sy
 8010916:	f3bf 8f4f 	dsb	sy
 801091a:	e7fe      	b.n	801091a <xTaskCreateStatic+0x26>
 801091c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010920:	f383 8811 	msr	BASEPRI, r3
 8010924:	f3bf 8f6f 	isb	sy
 8010928:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 801092c:	e7fe      	b.n	801092c <xTaskCreateStatic+0x38>
 801092e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010932:	f383 8811 	msr	BASEPRI, r3
 8010936:	f3bf 8f6f 	isb	sy
 801093a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 801093e:	e7fe      	b.n	801093e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8010940:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8010942:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8010944:	2402      	movs	r4, #2
 8010946:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 801094a:	ac04      	add	r4, sp, #16
 801094c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 8010950:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8010952:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8010954:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010956:	f7ff fda9 	bl	80104ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 801095a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801095c:	f7ff fd1e 	bl	801039c <prvAddNewTaskToReadyList>
	}
 8010960:	9804      	ldr	r0, [sp, #16]
 8010962:	b007      	add	sp, #28
 8010964:	bd30      	pop	{r4, r5, pc}
 8010966:	bf00      	nop

08010968 <xTaskCreate>:
	{
 8010968:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801096c:	4607      	mov	r7, r0
 801096e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8010970:	0090      	lsls	r0, r2, #2
	{
 8010972:	4615      	mov	r5, r2
 8010974:	4688      	mov	r8, r1
 8010976:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8010978:	f7fe f9ae 	bl	800ecd8 <pvPortMalloc>
			if( pxStack != NULL )
 801097c:	b1d8      	cbz	r0, 80109b6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 801097e:	4604      	mov	r4, r0
 8010980:	20ac      	movs	r0, #172	; 0xac
 8010982:	f7fe f9a9 	bl	800ecd8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8010986:	4606      	mov	r6, r0
 8010988:	b1d0      	cbz	r0, 80109c0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 801098a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 801098c:	2400      	movs	r4, #0
 801098e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8010992:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8010994:	9401      	str	r4, [sp, #4]
 8010996:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010998:	9602      	str	r6, [sp, #8]
 801099a:	464b      	mov	r3, r9
 801099c:	462a      	mov	r2, r5
 801099e:	4641      	mov	r1, r8
 80109a0:	4638      	mov	r0, r7
 80109a2:	9400      	str	r4, [sp, #0]
 80109a4:	f7ff fd82 	bl	80104ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80109a8:	4630      	mov	r0, r6
 80109aa:	f7ff fcf7 	bl	801039c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80109ae:	2001      	movs	r0, #1
	}
 80109b0:	b005      	add	sp, #20
 80109b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80109b6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80109ba:	b005      	add	sp, #20
 80109bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80109c0:	4620      	mov	r0, r4
 80109c2:	f7fe fa45 	bl	800ee50 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80109c6:	f04f 30ff 	mov.w	r0, #4294967295
 80109ca:	e7f1      	b.n	80109b0 <xTaskCreate+0x48>

080109cc <vTaskDelay>:
	{
 80109cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80109ce:	b950      	cbnz	r0, 80109e6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80109d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80109d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80109d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80109dc:	f3bf 8f4f 	dsb	sy
 80109e0:	f3bf 8f6f 	isb	sy
	}
 80109e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80109e6:	4d1e      	ldr	r5, [pc, #120]	; (8010a60 <vTaskDelay+0x94>)
 80109e8:	682b      	ldr	r3, [r5, #0]
 80109ea:	b143      	cbz	r3, 80109fe <vTaskDelay+0x32>
 80109ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109f0:	f383 8811 	msr	BASEPRI, r3
 80109f4:	f3bf 8f6f 	isb	sy
 80109f8:	f3bf 8f4f 	dsb	sy
 80109fc:	e7fe      	b.n	80109fc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 80109fe:	682b      	ldr	r3, [r5, #0]
 8010a00:	3301      	adds	r3, #1
 8010a02:	4604      	mov	r4, r0
 8010a04:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8010a06:	4b17      	ldr	r3, [pc, #92]	; (8010a64 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010a08:	4e17      	ldr	r6, [pc, #92]	; (8010a68 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 8010a0a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010a0c:	6830      	ldr	r0, [r6, #0]
 8010a0e:	3004      	adds	r0, #4
 8010a10:	f7fe faba 	bl	800ef88 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8010a14:	6833      	ldr	r3, [r6, #0]
 8010a16:	19e4      	adds	r4, r4, r7
 8010a18:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 8010a1a:	d310      	bcc.n	8010a3e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010a1c:	4b13      	ldr	r3, [pc, #76]	; (8010a6c <vTaskDelay+0xa0>)
 8010a1e:	6818      	ldr	r0, [r3, #0]
 8010a20:	6831      	ldr	r1, [r6, #0]
 8010a22:	3104      	adds	r1, #4
 8010a24:	f7fe fa98 	bl	800ef58 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8010a28:	682b      	ldr	r3, [r5, #0]
 8010a2a:	b9a3      	cbnz	r3, 8010a56 <vTaskDelay+0x8a>
 8010a2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a30:	f383 8811 	msr	BASEPRI, r3
 8010a34:	f3bf 8f6f 	isb	sy
 8010a38:	f3bf 8f4f 	dsb	sy
 8010a3c:	e7fe      	b.n	8010a3c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010a3e:	4b0c      	ldr	r3, [pc, #48]	; (8010a70 <vTaskDelay+0xa4>)
 8010a40:	6818      	ldr	r0, [r3, #0]
 8010a42:	6831      	ldr	r1, [r6, #0]
 8010a44:	3104      	adds	r1, #4
 8010a46:	f7fe fa87 	bl	800ef58 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 8010a4a:	4b0a      	ldr	r3, [pc, #40]	; (8010a74 <vTaskDelay+0xa8>)
 8010a4c:	681a      	ldr	r2, [r3, #0]
 8010a4e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 8010a50:	bf38      	it	cc
 8010a52:	601c      	strcc	r4, [r3, #0]
 8010a54:	e7e8      	b.n	8010a28 <vTaskDelay+0x5c>
 8010a56:	f7ff feb3 	bl	80107c0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 8010a5a:	2800      	cmp	r0, #0
 8010a5c:	d0b8      	beq.n	80109d0 <vTaskDelay+0x4>
	}
 8010a5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a60:	2001368c 	.word	0x2001368c
 8010a64:	2001370c 	.word	0x2001370c
 8010a68:	20013218 	.word	0x20013218
 8010a6c:	20013220 	.word	0x20013220
 8010a70:	2001321c 	.word	0x2001321c
 8010a74:	200136c0 	.word	0x200136c0

08010a78 <vTaskStartScheduler>:
{
 8010a78:	b530      	push	{r4, r5, lr}
 8010a7a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8010a7c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8010a7e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8010a80:	a906      	add	r1, sp, #24
 8010a82:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8010a84:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8010a88:	f7fe f908 	bl	800ec9c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8010a8c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010a90:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 8010a92:	b1bb      	cbz	r3, 8010ac4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 8010a94:	b16d      	cbz	r5, 8010ab2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 8010a96:	21ac      	movs	r1, #172	; 0xac
 8010a98:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 8010a9a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010a9c:	29ac      	cmp	r1, #172	; 0xac
 8010a9e:	d01a      	beq.n	8010ad6 <vTaskStartScheduler+0x5e>
 8010aa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010aa4:	f383 8811 	msr	BASEPRI, r3
 8010aa8:	f3bf 8f6f 	isb	sy
 8010aac:	f3bf 8f4f 	dsb	sy
 8010ab0:	e7fe      	b.n	8010ab0 <vTaskStartScheduler+0x38>
 8010ab2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ab6:	f383 8811 	msr	BASEPRI, r3
 8010aba:	f3bf 8f6f 	isb	sy
 8010abe:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8010ac2:	e7fe      	b.n	8010ac2 <vTaskStartScheduler+0x4a>
 8010ac4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ac8:	f383 8811 	msr	BASEPRI, r3
 8010acc:	f3bf 8f6f 	isb	sy
 8010ad0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8010ad4:	e7fe      	b.n	8010ad4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8010ad6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010ad8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8010ada:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8010adc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010ae0:	4623      	mov	r3, r4
 8010ae2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8010ae6:	491b      	ldr	r1, [pc, #108]	; (8010b54 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8010ae8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010aea:	9400      	str	r4, [sp, #0]
 8010aec:	481a      	ldr	r0, [pc, #104]	; (8010b58 <vTaskStartScheduler+0xe0>)
 8010aee:	f7ff fcdd 	bl	80104ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8010af2:	4628      	mov	r0, r5
 8010af4:	f7ff fc52 	bl	801039c <prvAddNewTaskToReadyList>
		return xReturn;
 8010af8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8010afa:	b1eb      	cbz	r3, 8010b38 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 8010afc:	f000 fc6e 	bl	80113dc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8010b00:	2801      	cmp	r0, #1
 8010b02:	d11b      	bne.n	8010b3c <vTaskStartScheduler+0xc4>
 8010b04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b08:	f383 8811 	msr	BASEPRI, r3
 8010b0c:	f3bf 8f6f 	isb	sy
 8010b10:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010b14:	4b11      	ldr	r3, [pc, #68]	; (8010b5c <vTaskStartScheduler+0xe4>)
 8010b16:	4a12      	ldr	r2, [pc, #72]	; (8010b60 <vTaskStartScheduler+0xe8>)
 8010b18:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8010b1a:	4912      	ldr	r1, [pc, #72]	; (8010b64 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010b1c:	3358      	adds	r3, #88	; 0x58
 8010b1e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 8010b20:	4a11      	ldr	r2, [pc, #68]	; (8010b68 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8010b22:	4b12      	ldr	r3, [pc, #72]	; (8010b6c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 8010b24:	f04f 35ff 	mov.w	r5, #4294967295
 8010b28:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8010b2a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8010b2c:	601c      	str	r4, [r3, #0]
}
 8010b2e:	b00b      	add	sp, #44	; 0x2c
 8010b30:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8010b34:	f7fe bb38 	b.w	800f1a8 <xPortStartScheduler>
}
 8010b38:	b00b      	add	sp, #44	; 0x2c
 8010b3a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8010b3c:	3001      	adds	r0, #1
 8010b3e:	d1fb      	bne.n	8010b38 <vTaskStartScheduler+0xc0>
 8010b40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b44:	f383 8811 	msr	BASEPRI, r3
 8010b48:	f3bf 8f6f 	isb	sy
 8010b4c:	f3bf 8f4f 	dsb	sy
 8010b50:	e7fe      	b.n	8010b50 <vTaskStartScheduler+0xd8>
 8010b52:	bf00      	nop
 8010b54:	08030468 	.word	0x08030468
 8010b58:	080105d9 	.word	0x080105d9
 8010b5c:	20013218 	.word	0x20013218
 8010b60:	20000164 	.word	0x20000164
 8010b64:	200136c0 	.word	0x200136c0
 8010b68:	200136e0 	.word	0x200136e0
 8010b6c:	2001370c 	.word	0x2001370c

08010b70 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8010b70:	4a02      	ldr	r2, [pc, #8]	; (8010b7c <vTaskSuspendAll+0xc>)
 8010b72:	6813      	ldr	r3, [r2, #0]
 8010b74:	3301      	adds	r3, #1
 8010b76:	6013      	str	r3, [r2, #0]
}
 8010b78:	4770      	bx	lr
 8010b7a:	bf00      	nop
 8010b7c:	2001368c 	.word	0x2001368c

08010b80 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8010b80:	4b06      	ldr	r3, [pc, #24]	; (8010b9c <xTaskResumeAll+0x1c>)
 8010b82:	681b      	ldr	r3, [r3, #0]
 8010b84:	b943      	cbnz	r3, 8010b98 <xTaskResumeAll+0x18>
 8010b86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b8a:	f383 8811 	msr	BASEPRI, r3
 8010b8e:	f3bf 8f6f 	isb	sy
 8010b92:	f3bf 8f4f 	dsb	sy
 8010b96:	e7fe      	b.n	8010b96 <xTaskResumeAll+0x16>
 8010b98:	f7ff be12 	b.w	80107c0 <xTaskResumeAll.part.0>
 8010b9c:	2001368c 	.word	0x2001368c

08010ba0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8010ba0:	4b01      	ldr	r3, [pc, #4]	; (8010ba8 <xTaskGetTickCount+0x8>)
 8010ba2:	6818      	ldr	r0, [r3, #0]
}
 8010ba4:	4770      	bx	lr
 8010ba6:	bf00      	nop
 8010ba8:	2001370c 	.word	0x2001370c

08010bac <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010bac:	4b05      	ldr	r3, [pc, #20]	; (8010bc4 <xTaskIncrementTick+0x18>)
 8010bae:	681b      	ldr	r3, [r3, #0]
 8010bb0:	b90b      	cbnz	r3, 8010bb6 <xTaskIncrementTick+0xa>
 8010bb2:	f7ff bd61 	b.w	8010678 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8010bb6:	4a04      	ldr	r2, [pc, #16]	; (8010bc8 <xTaskIncrementTick+0x1c>)
 8010bb8:	6813      	ldr	r3, [r2, #0]
 8010bba:	3301      	adds	r3, #1
}
 8010bbc:	2000      	movs	r0, #0
		++xPendedTicks;
 8010bbe:	6013      	str	r3, [r2, #0]
}
 8010bc0:	4770      	bx	lr
 8010bc2:	bf00      	nop
 8010bc4:	2001368c 	.word	0x2001368c
 8010bc8:	200136c8 	.word	0x200136c8

08010bcc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8010bcc:	4b1f      	ldr	r3, [pc, #124]	; (8010c4c <vTaskSwitchContext+0x80>)
 8010bce:	681b      	ldr	r3, [r3, #0]
 8010bd0:	b11b      	cbz	r3, 8010bda <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 8010bd2:	4b1f      	ldr	r3, [pc, #124]	; (8010c50 <vTaskSwitchContext+0x84>)
 8010bd4:	2201      	movs	r2, #1
 8010bd6:	601a      	str	r2, [r3, #0]
 8010bd8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 8010bda:	4a1d      	ldr	r2, [pc, #116]	; (8010c50 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010bdc:	491d      	ldr	r1, [pc, #116]	; (8010c54 <vTaskSwitchContext+0x88>)
{
 8010bde:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010be0:	4c1d      	ldr	r4, [pc, #116]	; (8010c58 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 8010be2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010be4:	6823      	ldr	r3, [r4, #0]
 8010be6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8010bea:	0092      	lsls	r2, r2, #2
 8010bec:	0098      	lsls	r0, r3, #2
 8010bee:	588a      	ldr	r2, [r1, r2]
 8010bf0:	b942      	cbnz	r2, 8010c04 <vTaskSwitchContext+0x38>
 8010bf2:	b313      	cbz	r3, 8010c3a <vTaskSwitchContext+0x6e>
 8010bf4:	3b01      	subs	r3, #1
 8010bf6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8010bfa:	0098      	lsls	r0, r3, #2
 8010bfc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8010c00:	2a00      	cmp	r2, #0
 8010c02:	d0f6      	beq.n	8010bf2 <vTaskSwitchContext+0x26>
 8010c04:	4418      	add	r0, r3
 8010c06:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8010c0a:	4662      	mov	r2, ip
 8010c0c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8010c10:	6849      	ldr	r1, [r1, #4]
 8010c12:	f8cc 1004 	str.w	r1, [ip, #4]
 8010c16:	3208      	adds	r2, #8
 8010c18:	4291      	cmp	r1, r2
 8010c1a:	bf08      	it	eq
 8010c1c:	6849      	ldreq	r1, [r1, #4]
 8010c1e:	4a0f      	ldr	r2, [pc, #60]	; (8010c5c <vTaskSwitchContext+0x90>)
 8010c20:	bf08      	it	eq
 8010c22:	f8cc 1004 	streq.w	r1, [ip, #4]
 8010c26:	68c9      	ldr	r1, [r1, #12]
 8010c28:	6011      	str	r1, [r2, #0]
 8010c2a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010c2c:	6813      	ldr	r3, [r2, #0]
 8010c2e:	4a0c      	ldr	r2, [pc, #48]	; (8010c60 <vTaskSwitchContext+0x94>)
}
 8010c30:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010c34:	3358      	adds	r3, #88	; 0x58
 8010c36:	6013      	str	r3, [r2, #0]
}
 8010c38:	4770      	bx	lr
 8010c3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c3e:	f383 8811 	msr	BASEPRI, r3
 8010c42:	f3bf 8f6f 	isb	sy
 8010c46:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010c4a:	e7fe      	b.n	8010c4a <vTaskSwitchContext+0x7e>
 8010c4c:	2001368c 	.word	0x2001368c
 8010c50:	20013710 	.word	0x20013710
 8010c54:	20013224 	.word	0x20013224
 8010c58:	20013694 	.word	0x20013694
 8010c5c:	20013218 	.word	0x20013218
 8010c60:	20000164 	.word	0x20000164

08010c64 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8010c64:	b1d0      	cbz	r0, 8010c9c <vTaskPlaceOnEventList+0x38>
{
 8010c66:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010c68:	4d1a      	ldr	r5, [pc, #104]	; (8010cd4 <vTaskPlaceOnEventList+0x70>)
 8010c6a:	460c      	mov	r4, r1
 8010c6c:	6829      	ldr	r1, [r5, #0]
 8010c6e:	3118      	adds	r1, #24
 8010c70:	f7fe f972 	bl	800ef58 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8010c74:	4b18      	ldr	r3, [pc, #96]	; (8010cd8 <vTaskPlaceOnEventList+0x74>)
 8010c76:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010c78:	6828      	ldr	r0, [r5, #0]
 8010c7a:	3004      	adds	r0, #4
 8010c7c:	f7fe f984 	bl	800ef88 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8010c80:	1c63      	adds	r3, r4, #1
 8010c82:	d014      	beq.n	8010cae <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8010c84:	682b      	ldr	r3, [r5, #0]
 8010c86:	19a4      	adds	r4, r4, r6
 8010c88:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8010c8a:	d317      	bcc.n	8010cbc <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010c8c:	4b13      	ldr	r3, [pc, #76]	; (8010cdc <vTaskPlaceOnEventList+0x78>)
 8010c8e:	6818      	ldr	r0, [r3, #0]
 8010c90:	6829      	ldr	r1, [r5, #0]
}
 8010c92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010c96:	3104      	adds	r1, #4
 8010c98:	f7fe b95e 	b.w	800ef58 <vListInsert>
 8010c9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ca0:	f383 8811 	msr	BASEPRI, r3
 8010ca4:	f3bf 8f6f 	isb	sy
 8010ca8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8010cac:	e7fe      	b.n	8010cac <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010cae:	6829      	ldr	r1, [r5, #0]
 8010cb0:	480b      	ldr	r0, [pc, #44]	; (8010ce0 <vTaskPlaceOnEventList+0x7c>)
}
 8010cb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010cb6:	3104      	adds	r1, #4
 8010cb8:	f7fe b93e 	b.w	800ef38 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010cbc:	4b09      	ldr	r3, [pc, #36]	; (8010ce4 <vTaskPlaceOnEventList+0x80>)
 8010cbe:	6818      	ldr	r0, [r3, #0]
 8010cc0:	6829      	ldr	r1, [r5, #0]
 8010cc2:	3104      	adds	r1, #4
 8010cc4:	f7fe f948 	bl	800ef58 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8010cc8:	4b07      	ldr	r3, [pc, #28]	; (8010ce8 <vTaskPlaceOnEventList+0x84>)
 8010cca:	681a      	ldr	r2, [r3, #0]
 8010ccc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8010cce:	bf38      	it	cc
 8010cd0:	601c      	strcc	r4, [r3, #0]
}
 8010cd2:	bd70      	pop	{r4, r5, r6, pc}
 8010cd4:	20013218 	.word	0x20013218
 8010cd8:	2001370c 	.word	0x2001370c
 8010cdc:	20013220 	.word	0x20013220
 8010ce0:	200136e4 	.word	0x200136e4
 8010ce4:	2001321c 	.word	0x2001321c
 8010ce8:	200136c0 	.word	0x200136c0

08010cec <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8010cec:	b330      	cbz	r0, 8010d3c <vTaskPlaceOnEventListRestricted+0x50>
	{
 8010cee:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010cf0:	4e1d      	ldr	r6, [pc, #116]	; (8010d68 <vTaskPlaceOnEventListRestricted+0x7c>)
 8010cf2:	460c      	mov	r4, r1
 8010cf4:	6831      	ldr	r1, [r6, #0]
 8010cf6:	4615      	mov	r5, r2
 8010cf8:	3118      	adds	r1, #24
 8010cfa:	f7fe f91d 	bl	800ef38 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8010cfe:	4b1b      	ldr	r3, [pc, #108]	; (8010d6c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8010d00:	b985      	cbnz	r5, 8010d24 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8010d02:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010d04:	6830      	ldr	r0, [r6, #0]
 8010d06:	3004      	adds	r0, #4
 8010d08:	f7fe f93e 	bl	800ef88 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8010d0c:	6833      	ldr	r3, [r6, #0]
 8010d0e:	1964      	adds	r4, r4, r5
 8010d10:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8010d12:	d31c      	bcc.n	8010d4e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010d14:	4b16      	ldr	r3, [pc, #88]	; (8010d70 <vTaskPlaceOnEventListRestricted+0x84>)
 8010d16:	6818      	ldr	r0, [r3, #0]
 8010d18:	6831      	ldr	r1, [r6, #0]
	}
 8010d1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010d1e:	3104      	adds	r1, #4
 8010d20:	f7fe b91a 	b.w	800ef58 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8010d24:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010d26:	6830      	ldr	r0, [r6, #0]
 8010d28:	3004      	adds	r0, #4
 8010d2a:	f7fe f92d 	bl	800ef88 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010d2e:	6831      	ldr	r1, [r6, #0]
 8010d30:	4810      	ldr	r0, [pc, #64]	; (8010d74 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8010d32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010d36:	3104      	adds	r1, #4
 8010d38:	f7fe b8fe 	b.w	800ef38 <vListInsertEnd>
 8010d3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d40:	f383 8811 	msr	BASEPRI, r3
 8010d44:	f3bf 8f6f 	isb	sy
 8010d48:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8010d4c:	e7fe      	b.n	8010d4c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010d4e:	4b0a      	ldr	r3, [pc, #40]	; (8010d78 <vTaskPlaceOnEventListRestricted+0x8c>)
 8010d50:	6818      	ldr	r0, [r3, #0]
 8010d52:	6831      	ldr	r1, [r6, #0]
 8010d54:	3104      	adds	r1, #4
 8010d56:	f7fe f8ff 	bl	800ef58 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8010d5a:	4b08      	ldr	r3, [pc, #32]	; (8010d7c <vTaskPlaceOnEventListRestricted+0x90>)
 8010d5c:	681a      	ldr	r2, [r3, #0]
 8010d5e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8010d60:	bf38      	it	cc
 8010d62:	601c      	strcc	r4, [r3, #0]
	}
 8010d64:	bd70      	pop	{r4, r5, r6, pc}
 8010d66:	bf00      	nop
 8010d68:	20013218 	.word	0x20013218
 8010d6c:	2001370c 	.word	0x2001370c
 8010d70:	20013220 	.word	0x20013220
 8010d74:	200136e4 	.word	0x200136e4
 8010d78:	2001321c 	.word	0x2001321c
 8010d7c:	200136c0 	.word	0x200136c0

08010d80 <xTaskRemoveFromEventList>:
{
 8010d80:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010d82:	68c3      	ldr	r3, [r0, #12]
 8010d84:	68dc      	ldr	r4, [r3, #12]
{
 8010d86:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8010d88:	2c00      	cmp	r4, #0
 8010d8a:	d02b      	beq.n	8010de4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8010d8c:	f104 0518 	add.w	r5, r4, #24
 8010d90:	4628      	mov	r0, r5
 8010d92:	f7fe f8f9 	bl	800ef88 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010d96:	4b18      	ldr	r3, [pc, #96]	; (8010df8 <xTaskRemoveFromEventList+0x78>)
 8010d98:	681b      	ldr	r3, [r3, #0]
 8010d9a:	b17b      	cbz	r3, 8010dbc <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8010d9c:	4817      	ldr	r0, [pc, #92]	; (8010dfc <xTaskRemoveFromEventList+0x7c>)
 8010d9e:	4629      	mov	r1, r5
 8010da0:	f7fe f8ca 	bl	800ef38 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8010da4:	4b16      	ldr	r3, [pc, #88]	; (8010e00 <xTaskRemoveFromEventList+0x80>)
 8010da6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010da8:	681b      	ldr	r3, [r3, #0]
 8010daa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010dac:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8010dae:	bf85      	ittet	hi
 8010db0:	4b14      	ldrhi	r3, [pc, #80]	; (8010e04 <xTaskRemoveFromEventList+0x84>)
 8010db2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8010db4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8010db6:	6018      	strhi	r0, [r3, #0]
}
 8010db8:	b003      	add	sp, #12
 8010dba:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8010dbc:	1d21      	adds	r1, r4, #4
 8010dbe:	4608      	mov	r0, r1
 8010dc0:	9101      	str	r1, [sp, #4]
 8010dc2:	f7fe f8e1 	bl	800ef88 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8010dc6:	4a10      	ldr	r2, [pc, #64]	; (8010e08 <xTaskRemoveFromEventList+0x88>)
 8010dc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010dca:	6810      	ldr	r0, [r2, #0]
 8010dcc:	9901      	ldr	r1, [sp, #4]
 8010dce:	4283      	cmp	r3, r0
 8010dd0:	480e      	ldr	r0, [pc, #56]	; (8010e0c <xTaskRemoveFromEventList+0x8c>)
 8010dd2:	bf88      	it	hi
 8010dd4:	6013      	strhi	r3, [r2, #0]
 8010dd6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010dda:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8010dde:	f7fe f8ab 	bl	800ef38 <vListInsertEnd>
 8010de2:	e7df      	b.n	8010da4 <xTaskRemoveFromEventList+0x24>
 8010de4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010de8:	f383 8811 	msr	BASEPRI, r3
 8010dec:	f3bf 8f6f 	isb	sy
 8010df0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8010df4:	e7fe      	b.n	8010df4 <xTaskRemoveFromEventList+0x74>
 8010df6:	bf00      	nop
 8010df8:	2001368c 	.word	0x2001368c
 8010dfc:	200136cc 	.word	0x200136cc
 8010e00:	20013218 	.word	0x20013218
 8010e04:	20013710 	.word	0x20013710
 8010e08:	20013694 	.word	0x20013694
 8010e0c:	20013224 	.word	0x20013224

08010e10 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010e10:	4a03      	ldr	r2, [pc, #12]	; (8010e20 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010e12:	4b04      	ldr	r3, [pc, #16]	; (8010e24 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010e14:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010e16:	681b      	ldr	r3, [r3, #0]
 8010e18:	e9c0 2300 	strd	r2, r3, [r0]
}
 8010e1c:	4770      	bx	lr
 8010e1e:	bf00      	nop
 8010e20:	200136c4 	.word	0x200136c4
 8010e24:	2001370c 	.word	0x2001370c

08010e28 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8010e28:	b328      	cbz	r0, 8010e76 <xTaskCheckForTimeOut+0x4e>
{
 8010e2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e2c:	460d      	mov	r5, r1
 8010e2e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8010e30:	b1c1      	cbz	r1, 8010e64 <xTaskCheckForTimeOut+0x3c>
 8010e32:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8010e34:	f7fe f926 	bl	800f084 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8010e38:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8010e3a:	4a1d      	ldr	r2, [pc, #116]	; (8010eb0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8010e3c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8010e3e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8010e40:	d030      	beq.n	8010ea4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8010e42:	f8df c070 	ldr.w	ip, [pc, #112]	; 8010eb4 <xTaskCheckForTimeOut+0x8c>
 8010e46:	e9d4 6000 	ldrd	r6, r0, [r4]
 8010e4a:	f8dc 7000 	ldr.w	r7, [ip]
 8010e4e:	42be      	cmp	r6, r7
 8010e50:	d01a      	beq.n	8010e88 <xTaskCheckForTimeOut+0x60>
 8010e52:	4288      	cmp	r0, r1
 8010e54:	d818      	bhi.n	8010e88 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8010e56:	2001      	movs	r0, #1
 8010e58:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8010e5a:	f7fe f935 	bl	800f0c8 <vPortExitCritical>
}
 8010e5e:	9801      	ldr	r0, [sp, #4]
 8010e60:	b003      	add	sp, #12
 8010e62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e68:	f383 8811 	msr	BASEPRI, r3
 8010e6c:	f3bf 8f6f 	isb	sy
 8010e70:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8010e74:	e7fe      	b.n	8010e74 <xTaskCheckForTimeOut+0x4c>
 8010e76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e7a:	f383 8811 	msr	BASEPRI, r3
 8010e7e:	f3bf 8f6f 	isb	sy
 8010e82:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8010e86:	e7fe      	b.n	8010e86 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8010e88:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8010e8c:	4573      	cmp	r3, lr
 8010e8e:	d90b      	bls.n	8010ea8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8010e90:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010e92:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010e96:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8010e98:	4403      	add	r3, r0
 8010e9a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8010e9c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010e9e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8010ea2:	e7d9      	b.n	8010e58 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8010ea4:	2000      	movs	r0, #0
 8010ea6:	e7d7      	b.n	8010e58 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8010ea8:	2300      	movs	r3, #0
 8010eaa:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8010eac:	2001      	movs	r0, #1
 8010eae:	e7d3      	b.n	8010e58 <xTaskCheckForTimeOut+0x30>
 8010eb0:	2001370c 	.word	0x2001370c
 8010eb4:	200136c4 	.word	0x200136c4

08010eb8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8010eb8:	4b01      	ldr	r3, [pc, #4]	; (8010ec0 <vTaskMissedYield+0x8>)
 8010eba:	2201      	movs	r2, #1
 8010ebc:	601a      	str	r2, [r3, #0]
}
 8010ebe:	4770      	bx	lr
 8010ec0:	20013710 	.word	0x20013710

08010ec4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8010ec4:	4b05      	ldr	r3, [pc, #20]	; (8010edc <xTaskGetSchedulerState+0x18>)
 8010ec6:	681b      	ldr	r3, [r3, #0]
 8010ec8:	b133      	cbz	r3, 8010ed8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010eca:	4b05      	ldr	r3, [pc, #20]	; (8010ee0 <xTaskGetSchedulerState+0x1c>)
 8010ecc:	6818      	ldr	r0, [r3, #0]
 8010ece:	fab0 f080 	clz	r0, r0
 8010ed2:	0940      	lsrs	r0, r0, #5
 8010ed4:	0040      	lsls	r0, r0, #1
 8010ed6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8010ed8:	2001      	movs	r0, #1
	}
 8010eda:	4770      	bx	lr
 8010edc:	200136e0 	.word	0x200136e0
 8010ee0:	2001368c 	.word	0x2001368c

08010ee4 <xTaskPriorityInherit>:
	{
 8010ee4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8010ee6:	4604      	mov	r4, r0
	{
 8010ee8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8010eea:	b1c8      	cbz	r0, 8010f20 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8010eec:	4d1d      	ldr	r5, [pc, #116]	; (8010f64 <xTaskPriorityInherit+0x80>)
 8010eee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010ef0:	682a      	ldr	r2, [r5, #0]
 8010ef2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010ef4:	4293      	cmp	r3, r2
 8010ef6:	d215      	bcs.n	8010f24 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010ef8:	6982      	ldr	r2, [r0, #24]
 8010efa:	2a00      	cmp	r2, #0
 8010efc:	db04      	blt.n	8010f08 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010efe:	682a      	ldr	r2, [r5, #0]
 8010f00:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010f02:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8010f06:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010f08:	4e17      	ldr	r6, [pc, #92]	; (8010f68 <xTaskPriorityInherit+0x84>)
 8010f0a:	6962      	ldr	r2, [r4, #20]
 8010f0c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010f10:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010f14:	429a      	cmp	r2, r3
 8010f16:	d00e      	beq.n	8010f36 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010f18:	682b      	ldr	r3, [r5, #0]
 8010f1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f1c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8010f1e:	2001      	movs	r0, #1
	}
 8010f20:	b002      	add	sp, #8
 8010f22:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8010f24:	682b      	ldr	r3, [r5, #0]
 8010f26:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010f28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f2a:	4298      	cmp	r0, r3
 8010f2c:	bf2c      	ite	cs
 8010f2e:	2000      	movcs	r0, #0
 8010f30:	2001      	movcc	r0, #1
	}
 8010f32:	b002      	add	sp, #8
 8010f34:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010f36:	1d21      	adds	r1, r4, #4
 8010f38:	4608      	mov	r0, r1
 8010f3a:	9101      	str	r1, [sp, #4]
 8010f3c:	f7fe f824 	bl	800ef88 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010f40:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010f42:	4b0a      	ldr	r3, [pc, #40]	; (8010f6c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010f44:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010f46:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010f48:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010f4a:	4290      	cmp	r0, r2
 8010f4c:	bf88      	it	hi
 8010f4e:	6018      	strhi	r0, [r3, #0]
 8010f50:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8010f54:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8010f58:	9901      	ldr	r1, [sp, #4]
 8010f5a:	f7fd ffed 	bl	800ef38 <vListInsertEnd>
				xReturn = pdTRUE;
 8010f5e:	2001      	movs	r0, #1
 8010f60:	e7de      	b.n	8010f20 <xTaskPriorityInherit+0x3c>
 8010f62:	bf00      	nop
 8010f64:	20013218 	.word	0x20013218
 8010f68:	20013224 	.word	0x20013224
 8010f6c:	20013694 	.word	0x20013694

08010f70 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8010f70:	b318      	cbz	r0, 8010fba <xTaskPriorityDisinherit+0x4a>
	{
 8010f72:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8010f74:	4b1e      	ldr	r3, [pc, #120]	; (8010ff0 <xTaskPriorityDisinherit+0x80>)
 8010f76:	681c      	ldr	r4, [r3, #0]
 8010f78:	4284      	cmp	r4, r0
	{
 8010f7a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 8010f7c:	d008      	beq.n	8010f90 <xTaskPriorityDisinherit+0x20>
 8010f7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f82:	f383 8811 	msr	BASEPRI, r3
 8010f86:	f3bf 8f6f 	isb	sy
 8010f8a:	f3bf 8f4f 	dsb	sy
 8010f8e:	e7fe      	b.n	8010f8e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8010f90:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8010f92:	b14b      	cbz	r3, 8010fa8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010f94:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010f96:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8010f98:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010f9a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8010f9c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010f9e:	d000      	beq.n	8010fa2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8010fa0:	b16b      	cbz	r3, 8010fbe <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8010fa2:	2000      	movs	r0, #0
	}
 8010fa4:	b002      	add	sp, #8
 8010fa6:	bd10      	pop	{r4, pc}
 8010fa8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010fac:	f383 8811 	msr	BASEPRI, r3
 8010fb0:	f3bf 8f6f 	isb	sy
 8010fb4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8010fb8:	e7fe      	b.n	8010fb8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 8010fba:	2000      	movs	r0, #0
	}
 8010fbc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010fbe:	1d21      	adds	r1, r4, #4
 8010fc0:	4608      	mov	r0, r1
 8010fc2:	9101      	str	r1, [sp, #4]
 8010fc4:	f7fd ffe0 	bl	800ef88 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010fc8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8010fca:	4a0a      	ldr	r2, [pc, #40]	; (8010ff4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010fcc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010fce:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8010fd2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8010fd4:	6810      	ldr	r0, [r2, #0]
 8010fd6:	9901      	ldr	r1, [sp, #4]
 8010fd8:	4283      	cmp	r3, r0
 8010fda:	4807      	ldr	r0, [pc, #28]	; (8010ff8 <xTaskPriorityDisinherit+0x88>)
 8010fdc:	bf88      	it	hi
 8010fde:	6013      	strhi	r3, [r2, #0]
 8010fe0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010fe4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8010fe8:	f7fd ffa6 	bl	800ef38 <vListInsertEnd>
					xReturn = pdTRUE;
 8010fec:	2001      	movs	r0, #1
		return xReturn;
 8010fee:	e7d9      	b.n	8010fa4 <xTaskPriorityDisinherit+0x34>
 8010ff0:	20013218 	.word	0x20013218
 8010ff4:	20013694 	.word	0x20013694
 8010ff8:	20013224 	.word	0x20013224

08010ffc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 8010ffc:	2800      	cmp	r0, #0
 8010ffe:	d041      	beq.n	8011084 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8011000:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8011002:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8011004:	b083      	sub	sp, #12
 8011006:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8011008:	b153      	cbz	r3, 8011020 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 801100a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 801100c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801100e:	4281      	cmp	r1, r0
 8011010:	bf38      	it	cc
 8011012:	4601      	movcc	r1, r0
 8011014:	428a      	cmp	r2, r1
 8011016:	d001      	beq.n	801101c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8011018:	2b01      	cmp	r3, #1
 801101a:	d00a      	beq.n	8011032 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 801101c:	b003      	add	sp, #12
 801101e:	bd30      	pop	{r4, r5, pc}
 8011020:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011024:	f383 8811 	msr	BASEPRI, r3
 8011028:	f3bf 8f6f 	isb	sy
 801102c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011030:	e7fe      	b.n	8011030 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8011032:	4b19      	ldr	r3, [pc, #100]	; (8011098 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8011034:	681b      	ldr	r3, [r3, #0]
 8011036:	42a3      	cmp	r3, r4
 8011038:	d025      	beq.n	8011086 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801103a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 801103c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801103e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011040:	bfa8      	it	ge
 8011042:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011046:	4d15      	ldr	r5, [pc, #84]	; (801109c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011048:	bfa8      	it	ge
 801104a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801104c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8011050:	6961      	ldr	r1, [r4, #20]
 8011052:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8011056:	4299      	cmp	r1, r3
 8011058:	d1e0      	bne.n	801101c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801105a:	1d21      	adds	r1, r4, #4
 801105c:	4608      	mov	r0, r1
 801105e:	9101      	str	r1, [sp, #4]
 8011060:	f7fd ff92 	bl	800ef88 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8011064:	4b0e      	ldr	r3, [pc, #56]	; (80110a0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8011066:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011068:	681a      	ldr	r2, [r3, #0]
 801106a:	9901      	ldr	r1, [sp, #4]
 801106c:	4290      	cmp	r0, r2
 801106e:	bf88      	it	hi
 8011070:	6018      	strhi	r0, [r3, #0]
 8011072:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011076:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 801107a:	b003      	add	sp, #12
 801107c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8011080:	f7fd bf5a 	b.w	800ef38 <vListInsertEnd>
 8011084:	4770      	bx	lr
 8011086:	f04f 0350 	mov.w	r3, #80	; 0x50
 801108a:	f383 8811 	msr	BASEPRI, r3
 801108e:	f3bf 8f6f 	isb	sy
 8011092:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8011096:	e7fe      	b.n	8011096 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8011098:	20013218 	.word	0x20013218
 801109c:	20013224 	.word	0x20013224
 80110a0:	20013694 	.word	0x20013694

080110a4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80110a4:	4b04      	ldr	r3, [pc, #16]	; (80110b8 <pvTaskIncrementMutexHeldCount+0x14>)
 80110a6:	681a      	ldr	r2, [r3, #0]
 80110a8:	b11a      	cbz	r2, 80110b2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80110aa:	6819      	ldr	r1, [r3, #0]
 80110ac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80110ae:	3201      	adds	r2, #1
 80110b0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80110b2:	6818      	ldr	r0, [r3, #0]
	}
 80110b4:	4770      	bx	lr
 80110b6:	bf00      	nop
 80110b8:	20013218 	.word	0x20013218

080110bc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 80110bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80110c0:	4e22      	ldr	r6, [pc, #136]	; (801114c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 80110c2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8011154 <prvSwitchTimerLists+0x98>
{
 80110c6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 80110c8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80110cc:	e00d      	b.n	80110ea <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80110ce:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80110d0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80110d2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80110d4:	1d25      	adds	r5, r4, #4
 80110d6:	4628      	mov	r0, r5
 80110d8:	f7fd ff56 	bl	800ef88 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80110dc:	6a23      	ldr	r3, [r4, #32]
 80110de:	4620      	mov	r0, r4
 80110e0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80110e2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80110e6:	075b      	lsls	r3, r3, #29
 80110e8:	d40a      	bmi.n	8011100 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80110ea:	6833      	ldr	r3, [r6, #0]
 80110ec:	681a      	ldr	r2, [r3, #0]
 80110ee:	2a00      	cmp	r2, #0
 80110f0:	d1ed      	bne.n	80110ce <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 80110f2:	4a17      	ldr	r2, [pc, #92]	; (8011150 <prvSwitchTimerLists+0x94>)
 80110f4:	6811      	ldr	r1, [r2, #0]
 80110f6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 80110f8:	6013      	str	r3, [r2, #0]
}
 80110fa:	b005      	add	sp, #20
 80110fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8011100:	69a3      	ldr	r3, [r4, #24]
 8011102:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8011104:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8011106:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8011108:	d205      	bcs.n	8011116 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801110a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801110c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801110e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8011110:	f7fd ff22 	bl	800ef58 <vListInsert>
 8011114:	e7e9      	b.n	80110ea <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8011116:	f8d9 3000 	ldr.w	r3, [r9]
 801111a:	b16b      	cbz	r3, 8011138 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801111c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8011120:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011122:	f7ff fecf 	bl	8010ec4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8011126:	2300      	movs	r3, #0
 8011128:	f8d9 0000 	ldr.w	r0, [r9]
 801112c:	461a      	mov	r2, r3
 801112e:	4669      	mov	r1, sp
 8011130:	f7fe fa9c 	bl	800f66c <xQueueGenericSend>
				configASSERT( xResult );
 8011134:	2800      	cmp	r0, #0
 8011136:	d1d8      	bne.n	80110ea <prvSwitchTimerLists+0x2e>
 8011138:	f04f 0350 	mov.w	r3, #80	; 0x50
 801113c:	f383 8811 	msr	BASEPRI, r3
 8011140:	f3bf 8f6f 	isb	sy
 8011144:	f3bf 8f4f 	dsb	sy
 8011148:	e7fe      	b.n	8011148 <prvSwitchTimerLists+0x8c>
 801114a:	bf00      	nop
 801114c:	20013714 	.word	0x20013714
 8011150:	20013718 	.word	0x20013718
 8011154:	20013838 	.word	0x20013838

08011158 <prvTimerTask>:
{
 8011158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801115c:	4e9b      	ldr	r6, [pc, #620]	; (80113cc <prvTimerTask+0x274>)
 801115e:	4d9c      	ldr	r5, [pc, #624]	; (80113d0 <prvTimerTask+0x278>)
 8011160:	4c9c      	ldr	r4, [pc, #624]	; (80113d4 <prvTimerTask+0x27c>)
 8011162:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8011164:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8011168:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801116c:	6833      	ldr	r3, [r6, #0]
 801116e:	681f      	ldr	r7, [r3, #0]
 8011170:	2f00      	cmp	r7, #0
 8011172:	f000 80a8 	beq.w	80112c6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8011176:	68db      	ldr	r3, [r3, #12]
 8011178:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 801117a:	f7ff fcf9 	bl	8010b70 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801117e:	f7ff fd0f 	bl	8010ba0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8011182:	682a      	ldr	r2, [r5, #0]
 8011184:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 8011186:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8011188:	f0c0 80ae 	bcc.w	80112e8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801118c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 801118e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8011190:	f240 80b4 	bls.w	80112fc <prvTimerTask+0x1a4>
 8011194:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8011196:	6820      	ldr	r0, [r4, #0]
 8011198:	eba7 010a 	sub.w	r1, r7, sl
 801119c:	f7ff f89a 	bl	80102d4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80111a0:	f7ff fcee 	bl	8010b80 <xTaskResumeAll>
 80111a4:	b928      	cbnz	r0, 80111b2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 80111a6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 80111aa:	f3bf 8f4f 	dsb	sy
 80111ae:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80111b2:	6820      	ldr	r0, [r4, #0]
 80111b4:	2200      	movs	r2, #0
 80111b6:	a902      	add	r1, sp, #8
 80111b8:	f7fe fc94 	bl	800fae4 <xQueueReceive>
 80111bc:	2800      	cmp	r0, #0
 80111be:	d0d5      	beq.n	801116c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80111c0:	9b02      	ldr	r3, [sp, #8]
 80111c2:	2b00      	cmp	r3, #0
 80111c4:	db76      	blt.n	80112b4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80111c6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80111c8:	697b      	ldr	r3, [r7, #20]
 80111ca:	b113      	cbz	r3, 80111d2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80111cc:	1d38      	adds	r0, r7, #4
 80111ce:	f7fd fedb 	bl	800ef88 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 80111d2:	f7ff fce5 	bl	8010ba0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80111d6:	682b      	ldr	r3, [r5, #0]
 80111d8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80111da:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80111dc:	f0c0 808b 	bcc.w	80112f6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 80111e0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 80111e2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 80111e6:	2b09      	cmp	r3, #9
 80111e8:	d8e3      	bhi.n	80111b2 <prvTimerTask+0x5a>
 80111ea:	e8df f003 	tbb	[pc, r3]
 80111ee:	0505      	.short	0x0505
 80111f0:	5a3d5305 	.word	0x5a3d5305
 80111f4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80111f8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80111fc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80111fe:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8011200:	f043 0301 	orr.w	r3, r3, #1
 8011204:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8011208:	9b03      	ldr	r3, [sp, #12]
 801120a:	1899      	adds	r1, r3, r2
 801120c:	bf2c      	ite	cs
 801120e:	2001      	movcs	r0, #1
 8011210:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8011212:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8011214:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8011216:	f200 808c 	bhi.w	8011332 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801121a:	ebaa 0303 	sub.w	r3, sl, r3
 801121e:	429a      	cmp	r2, r3
 8011220:	d832      	bhi.n	8011288 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8011222:	6a3b      	ldr	r3, [r7, #32]
 8011224:	4638      	mov	r0, r7
 8011226:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8011228:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801122c:	075b      	lsls	r3, r3, #29
 801122e:	d5c0      	bpl.n	80111b2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8011230:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8011232:	9903      	ldr	r1, [sp, #12]
 8011234:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8011236:	b172      	cbz	r2, 8011256 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8011238:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801123a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801123e:	2300      	movs	r3, #0
 8011240:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011242:	f7ff fe3f 	bl	8010ec4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8011246:	2300      	movs	r3, #0
 8011248:	6820      	ldr	r0, [r4, #0]
 801124a:	461a      	mov	r2, r3
 801124c:	a906      	add	r1, sp, #24
 801124e:	f7fe fa0d 	bl	800f66c <xQueueGenericSend>
							configASSERT( xResult );
 8011252:	2800      	cmp	r0, #0
 8011254:	d1ad      	bne.n	80111b2 <prvTimerTask+0x5a>
 8011256:	f04f 0350 	mov.w	r3, #80	; 0x50
 801125a:	f383 8811 	msr	BASEPRI, r3
 801125e:	f3bf 8f6f 	isb	sy
 8011262:	f3bf 8f4f 	dsb	sy
 8011266:	e7fe      	b.n	8011266 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8011268:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801126c:	f043 0301 	orr.w	r3, r3, #1
 8011270:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8011274:	9b03      	ldr	r3, [sp, #12]
 8011276:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8011278:	2b00      	cmp	r3, #0
 801127a:	f000 809d 	beq.w	80113b8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801127e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8011280:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8011282:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8011284:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8011286:	d85e      	bhi.n	8011346 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8011288:	4b53      	ldr	r3, [pc, #332]	; (80113d8 <prvTimerTask+0x280>)
 801128a:	1d39      	adds	r1, r7, #4
 801128c:	6818      	ldr	r0, [r3, #0]
 801128e:	f7fd fe63 	bl	800ef58 <vListInsert>
	return xProcessTimerNow;
 8011292:	e78e      	b.n	80111b2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8011294:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8011298:	f023 0301 	bic.w	r3, r3, #1
 801129c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 80112a0:	e787      	b.n	80111b2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80112a2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80112a6:	079a      	lsls	r2, r3, #30
 80112a8:	d552      	bpl.n	8011350 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80112aa:	f023 0301 	bic.w	r3, r3, #1
 80112ae:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80112b2:	e77e      	b.n	80111b2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80112b4:	9b03      	ldr	r3, [sp, #12]
 80112b6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80112ba:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80112bc:	9b02      	ldr	r3, [sp, #8]
 80112be:	2b00      	cmp	r3, #0
 80112c0:	f6ff af77 	blt.w	80111b2 <prvTimerTask+0x5a>
 80112c4:	e77f      	b.n	80111c6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 80112c6:	f7ff fc53 	bl	8010b70 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80112ca:	f7ff fc69 	bl	8010ba0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80112ce:	682a      	ldr	r2, [r5, #0]
 80112d0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 80112d2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80112d4:	d808      	bhi.n	80112e8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80112d6:	4b40      	ldr	r3, [pc, #256]	; (80113d8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 80112d8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80112dc:	681a      	ldr	r2, [r3, #0]
 80112de:	6812      	ldr	r2, [r2, #0]
 80112e0:	fab2 f282 	clz	r2, r2
 80112e4:	0952      	lsrs	r2, r2, #5
 80112e6:	e756      	b.n	8011196 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 80112e8:	f7ff fee8 	bl	80110bc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80112ec:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 80112f0:	f7ff fc46 	bl	8010b80 <xTaskResumeAll>
 80112f4:	e75d      	b.n	80111b2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 80112f6:	f7ff fee1 	bl	80110bc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 80112fa:	e771      	b.n	80111e0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 80112fc:	f7ff fc40 	bl	8010b80 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011300:	6832      	ldr	r2, [r6, #0]
 8011302:	68d2      	ldr	r2, [r2, #12]
 8011304:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8011308:	f10b 0104 	add.w	r1, fp, #4
 801130c:	4608      	mov	r0, r1
 801130e:	9101      	str	r1, [sp, #4]
 8011310:	f7fd fe3a 	bl	800ef88 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8011314:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8011318:	9901      	ldr	r1, [sp, #4]
 801131a:	f010 0f04 	tst.w	r0, #4
 801131e:	d11b      	bne.n	8011358 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8011320:	f020 0001 	bic.w	r0, r0, #1
 8011324:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8011328:	f8db 3020 	ldr.w	r3, [fp, #32]
 801132c:	4658      	mov	r0, fp
 801132e:	4798      	blx	r3
}
 8011330:	e73f      	b.n	80111b2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8011332:	4553      	cmp	r3, sl
 8011334:	d902      	bls.n	801133c <prvTimerTask+0x1e4>
 8011336:	2800      	cmp	r0, #0
 8011338:	f43f af73 	beq.w	8011222 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801133c:	6830      	ldr	r0, [r6, #0]
 801133e:	1d39      	adds	r1, r7, #4
 8011340:	f7fd fe0a 	bl	800ef58 <vListInsert>
	return xProcessTimerNow;
 8011344:	e735      	b.n	80111b2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8011346:	6830      	ldr	r0, [r6, #0]
 8011348:	1d39      	adds	r1, r7, #4
 801134a:	f7fd fe05 	bl	800ef58 <vListInsert>
 801134e:	e730      	b.n	80111b2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8011350:	4638      	mov	r0, r7
 8011352:	f7fd fd7d 	bl	800ee50 <vPortFree>
 8011356:	e72c      	b.n	80111b2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8011358:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801135c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8011360:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8011362:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8011364:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8011368:	d903      	bls.n	8011372 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801136a:	6830      	ldr	r0, [r6, #0]
 801136c:	f7fd fdf4 	bl	800ef58 <vListInsert>
	return xProcessTimerNow;
 8011370:	e7da      	b.n	8011328 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011372:	ebaa 0307 	sub.w	r3, sl, r7
 8011376:	429a      	cmp	r2, r3
 8011378:	d819      	bhi.n	80113ae <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801137a:	6823      	ldr	r3, [r4, #0]
 801137c:	b173      	cbz	r3, 801139c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801137e:	2300      	movs	r3, #0
 8011380:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8011382:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8011384:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011388:	f7ff fd9c 	bl	8010ec4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801138c:	2300      	movs	r3, #0
 801138e:	6820      	ldr	r0, [r4, #0]
 8011390:	461a      	mov	r2, r3
 8011392:	a906      	add	r1, sp, #24
 8011394:	f7fe f96a 	bl	800f66c <xQueueGenericSend>
			configASSERT( xResult );
 8011398:	2800      	cmp	r0, #0
 801139a:	d1c5      	bne.n	8011328 <prvTimerTask+0x1d0>
 801139c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80113a0:	f383 8811 	msr	BASEPRI, r3
 80113a4:	f3bf 8f6f 	isb	sy
 80113a8:	f3bf 8f4f 	dsb	sy
 80113ac:	e7fe      	b.n	80113ac <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80113ae:	4b0a      	ldr	r3, [pc, #40]	; (80113d8 <prvTimerTask+0x280>)
 80113b0:	6818      	ldr	r0, [r3, #0]
 80113b2:	f7fd fdd1 	bl	800ef58 <vListInsert>
	return xProcessTimerNow;
 80113b6:	e7b7      	b.n	8011328 <prvTimerTask+0x1d0>
 80113b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80113bc:	f383 8811 	msr	BASEPRI, r3
 80113c0:	f3bf 8f6f 	isb	sy
 80113c4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80113c8:	e7fe      	b.n	80113c8 <prvTimerTask+0x270>
 80113ca:	bf00      	nop
 80113cc:	20013714 	.word	0x20013714
 80113d0:	200137e4 	.word	0x200137e4
 80113d4:	20013838 	.word	0x20013838
 80113d8:	20013718 	.word	0x20013718

080113dc <xTimerCreateTimerTask>:
{
 80113dc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80113de:	4c23      	ldr	r4, [pc, #140]	; (801146c <xTimerCreateTimerTask+0x90>)
{
 80113e0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 80113e2:	f7fd fe4f 	bl	800f084 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80113e6:	6825      	ldr	r5, [r4, #0]
 80113e8:	b335      	cbz	r5, 8011438 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 80113ea:	f7fd fe6d 	bl	800f0c8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 80113ee:	6823      	ldr	r3, [r4, #0]
 80113f0:	b1cb      	cbz	r3, 8011426 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80113f2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80113f4:	aa07      	add	r2, sp, #28
 80113f6:	a906      	add	r1, sp, #24
 80113f8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80113fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80113fe:	f7fd fc5b 	bl	800ecb8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8011402:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8011406:	2302      	movs	r3, #2
 8011408:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801140c:	9300      	str	r3, [sp, #0]
 801140e:	9a07      	ldr	r2, [sp, #28]
 8011410:	4917      	ldr	r1, [pc, #92]	; (8011470 <xTimerCreateTimerTask+0x94>)
 8011412:	4818      	ldr	r0, [pc, #96]	; (8011474 <xTimerCreateTimerTask+0x98>)
 8011414:	4623      	mov	r3, r4
 8011416:	f7ff fa6d 	bl	80108f4 <xTaskCreateStatic>
 801141a:	4b17      	ldr	r3, [pc, #92]	; (8011478 <xTimerCreateTimerTask+0x9c>)
 801141c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801141e:	b110      	cbz	r0, 8011426 <xTimerCreateTimerTask+0x4a>
}
 8011420:	2001      	movs	r0, #1
 8011422:	b009      	add	sp, #36	; 0x24
 8011424:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011426:	f04f 0350 	mov.w	r3, #80	; 0x50
 801142a:	f383 8811 	msr	BASEPRI, r3
 801142e:	f3bf 8f6f 	isb	sy
 8011432:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8011436:	e7fe      	b.n	8011436 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8011438:	4f10      	ldr	r7, [pc, #64]	; (801147c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801143a:	4e11      	ldr	r6, [pc, #68]	; (8011480 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801143c:	4638      	mov	r0, r7
 801143e:	f7fd fd6b 	bl	800ef18 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8011442:	4630      	mov	r0, r6
 8011444:	f7fd fd68 	bl	800ef18 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8011448:	4a0e      	ldr	r2, [pc, #56]	; (8011484 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801144a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801144c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801144e:	4a0e      	ldr	r2, [pc, #56]	; (8011488 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011450:	4b0e      	ldr	r3, [pc, #56]	; (801148c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8011452:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011454:	2110      	movs	r1, #16
 8011456:	4a0e      	ldr	r2, [pc, #56]	; (8011490 <xTimerCreateTimerTask+0xb4>)
 8011458:	200a      	movs	r0, #10
 801145a:	f7fd ffb1 	bl	800f3c0 <xQueueGenericCreateStatic>
 801145e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8011460:	2800      	cmp	r0, #0
 8011462:	d0c2      	beq.n	80113ea <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8011464:	490b      	ldr	r1, [pc, #44]	; (8011494 <xTimerCreateTimerTask+0xb8>)
 8011466:	f7fe ff0d 	bl	8010284 <vQueueAddToRegistry>
 801146a:	e7be      	b.n	80113ea <xTimerCreateTimerTask+0xe>
 801146c:	20013838 	.word	0x20013838
 8011470:	08030478 	.word	0x08030478
 8011474:	08011159 	.word	0x08011159
 8011478:	2001383c 	.word	0x2001383c
 801147c:	200137bc 	.word	0x200137bc
 8011480:	200137d0 	.word	0x200137d0
 8011484:	20013714 	.word	0x20013714
 8011488:	20013718 	.word	0x20013718
 801148c:	200137e8 	.word	0x200137e8
 8011490:	2001371c 	.word	0x2001371c
 8011494:	08030470 	.word	0x08030470

08011498 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8011498:	8880      	ldrh	r0, [r0, #4]
 801149a:	4770      	bx	lr

0801149c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801149c:	b570      	push	{r4, r5, r6, lr}
 801149e:	6803      	ldr	r3, [r0, #0]
 80114a0:	4605      	mov	r5, r0
 80114a2:	460c      	mov	r4, r1
 80114a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114a6:	2100      	movs	r1, #0
 80114a8:	4798      	blx	r3
 80114aa:	682b      	ldr	r3, [r5, #0]
 80114ac:	4606      	mov	r6, r0
 80114ae:	6a1b      	ldr	r3, [r3, #32]
 80114b0:	4628      	mov	r0, r5
 80114b2:	4798      	blx	r3
 80114b4:	1ba4      	subs	r4, r4, r6
 80114b6:	b2a4      	uxth	r4, r4
 80114b8:	fbb4 f0f0 	udiv	r0, r4, r0
 80114bc:	bd70      	pop	{r4, r5, r6, pc}

080114be <_ZN8touchgfx17AbstractPartition5clearEv>:
 80114be:	2300      	movs	r3, #0
 80114c0:	8083      	strh	r3, [r0, #4]
 80114c2:	4770      	bx	lr

080114c4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80114c4:	b510      	push	{r4, lr}
 80114c6:	6803      	ldr	r3, [r0, #0]
 80114c8:	8881      	ldrh	r1, [r0, #4]
 80114ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114cc:	4604      	mov	r4, r0
 80114ce:	4798      	blx	r3
 80114d0:	88a3      	ldrh	r3, [r4, #4]
 80114d2:	3301      	adds	r3, #1
 80114d4:	80a3      	strh	r3, [r4, #4]
 80114d6:	bd10      	pop	{r4, pc}

080114d8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80114d8:	6803      	ldr	r3, [r0, #0]
 80114da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114dc:	4718      	bx	r3

080114de <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80114de:	4770      	bx	lr

080114e0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80114e0:	4a02      	ldr	r2, [pc, #8]	; (80114ec <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80114e2:	6002      	str	r2, [r0, #0]
 80114e4:	2200      	movs	r2, #0
 80114e6:	8082      	strh	r2, [r0, #4]
 80114e8:	4770      	bx	lr
 80114ea:	bf00      	nop
 80114ec:	08030488 	.word	0x08030488

080114f0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80114f0:	b510      	push	{r4, lr}
 80114f2:	6803      	ldr	r3, [r0, #0]
 80114f4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80114f8:	4604      	mov	r4, r0
 80114fa:	4798      	blx	r3
 80114fc:	b110      	cbz	r0, 8011504 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80114fe:	4620      	mov	r0, r4
 8011500:	f7f1 fe8e 	bl	8003220 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8011504:	bd10      	pop	{r4, pc}

08011506 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8011506:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801150a:	4770      	bx	lr

0801150c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801150c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8011510:	4770      	bx	lr

08011512 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8011512:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8011516:	4770      	bx	lr

08011518 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8011518:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801151c:	4770      	bx	lr

0801151e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801151e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011520:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8011524:	461e      	mov	r6, r3
 8011526:	6803      	ldr	r3, [r0, #0]
 8011528:	460f      	mov	r7, r1
 801152a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801152e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8011532:	4604      	mov	r4, r0
 8011534:	4615      	mov	r5, r2
 8011536:	4798      	blx	r3
 8011538:	b93e      	cbnz	r6, 801154a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801153a:	1bed      	subs	r5, r5, r7
 801153c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8011540:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011544:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8011548:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801154a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801154e:	e7f7      	b.n	8011540 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08011550 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8011550:	b510      	push	{r4, lr}
 8011552:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8011556:	600c      	str	r4, [r1, #0]
 8011558:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801155c:	6011      	str	r1, [r2, #0]
 801155e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8011562:	801a      	strh	r2, [r3, #0]
 8011564:	9b02      	ldr	r3, [sp, #8]
 8011566:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801156a:	801a      	strh	r2, [r3, #0]
 801156c:	bd10      	pop	{r4, pc}

0801156e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801156e:	b510      	push	{r4, lr}
 8011570:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8011574:	600c      	str	r4, [r1, #0]
 8011576:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801157a:	6011      	str	r1, [r2, #0]
 801157c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8011580:	801a      	strh	r2, [r3, #0]
 8011582:	bd10      	pop	{r4, pc}

08011584 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8011584:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8011588:	600b      	str	r3, [r1, #0]
 801158a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801158e:	6013      	str	r3, [r2, #0]
 8011590:	4770      	bx	lr

08011592 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8011592:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8011596:	4770      	bx	lr

08011598 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8011598:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801159c:	4770      	bx	lr

0801159e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801159e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80115a2:	4770      	bx	lr

080115a4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80115a4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80115a8:	4770      	bx	lr

080115aa <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80115aa:	4770      	bx	lr

080115ac <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80115ac:	b510      	push	{r4, lr}
 80115ae:	21b4      	movs	r1, #180	; 0xb4
 80115b0:	4604      	mov	r4, r0
 80115b2:	f01a fb02 	bl	802bbba <_ZdlPvj>
 80115b6:	4620      	mov	r0, r4
 80115b8:	bd10      	pop	{r4, pc}

080115ba <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80115ba:	b570      	push	{r4, r5, r6, lr}
 80115bc:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 80115c0:	428d      	cmp	r5, r1
 80115c2:	bfb8      	it	lt
 80115c4:	460d      	movlt	r5, r1
 80115c6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80115ca:	428d      	cmp	r5, r1
 80115cc:	4604      	mov	r4, r0
 80115ce:	bfa8      	it	ge
 80115d0:	460d      	movge	r5, r1
 80115d2:	4616      	mov	r6, r2
 80115d4:	b99a      	cbnz	r2, 80115fe <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 80115d6:	6803      	ldr	r3, [r0, #0]
 80115d8:	4629      	mov	r1, r5
 80115da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80115de:	4798      	blx	r3
 80115e0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80115e4:	b368      	cbz	r0, 8011642 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80115e6:	6803      	ldr	r3, [r0, #0]
 80115e8:	68db      	ldr	r3, [r3, #12]
 80115ea:	4798      	blx	r3
 80115ec:	b348      	cbz	r0, 8011642 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80115ee:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80115f2:	6803      	ldr	r3, [r0, #0]
 80115f4:	4621      	mov	r1, r4
 80115f6:	689b      	ldr	r3, [r3, #8]
 80115f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80115fc:	4718      	bx	r3
 80115fe:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8011602:	2b00      	cmp	r3, #0
 8011604:	dd08      	ble.n	8011618 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8011606:	f006 fa23 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 801160a:	4621      	mov	r1, r4
 801160c:	3004      	adds	r0, #4
 801160e:	f006 fa6c 	bl	8017aea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011612:	2300      	movs	r3, #0
 8011614:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8011618:	6823      	ldr	r3, [r4, #0]
 801161a:	4620      	mov	r0, r4
 801161c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011620:	4798      	blx	r3
 8011622:	2300      	movs	r3, #0
 8011624:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8011628:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801162c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8011630:	f006 fa0e 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 8011634:	4621      	mov	r1, r4
 8011636:	3004      	adds	r0, #4
 8011638:	f006 fb00 	bl	8017c3c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801163c:	2301      	movs	r3, #1
 801163e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8011642:	bd70      	pop	{r4, r5, r6, pc}

08011644 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8011644:	b510      	push	{r4, lr}
 8011646:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801164a:	4299      	cmp	r1, r3
 801164c:	bfb8      	it	lt
 801164e:	4619      	movlt	r1, r3
 8011650:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8011654:	4299      	cmp	r1, r3
 8011656:	bfa8      	it	ge
 8011658:	4619      	movge	r1, r3
 801165a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801165e:	428b      	cmp	r3, r1
 8011660:	4604      	mov	r4, r0
 8011662:	d010      	beq.n	8011686 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011664:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8011668:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801166c:	b158      	cbz	r0, 8011686 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801166e:	6803      	ldr	r3, [r0, #0]
 8011670:	68db      	ldr	r3, [r3, #12]
 8011672:	4798      	blx	r3
 8011674:	b138      	cbz	r0, 8011686 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011676:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801167a:	6803      	ldr	r3, [r0, #0]
 801167c:	4621      	mov	r1, r4
 801167e:	689b      	ldr	r3, [r3, #8]
 8011680:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011684:	4718      	bx	r3
 8011686:	bd10      	pop	{r4, pc}

08011688 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8011688:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801168a:	4604      	mov	r4, r0
 801168c:	460d      	mov	r5, r1
 801168e:	b1a9      	cbz	r1, 80116bc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8011690:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8011694:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8011698:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801169c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80116a0:	ab01      	add	r3, sp, #4
 80116a2:	1a12      	subs	r2, r2, r0
 80116a4:	1b89      	subs	r1, r1, r6
 80116a6:	1a38      	subs	r0, r7, r0
 80116a8:	f007 fc88 	bl	8018fbc <_ZN8touchgfx6muldivElllRl>
 80116ac:	4629      	mov	r1, r5
 80116ae:	ab01      	add	r3, sp, #4
 80116b0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80116b4:	4430      	add	r0, r6
 80116b6:	f007 fc81 	bl	8018fbc <_ZN8touchgfx6muldivElllRl>
 80116ba:	b285      	uxth	r5, r0
 80116bc:	4628      	mov	r0, r5
 80116be:	b003      	add	sp, #12
 80116c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080116c2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 80116c2:	b570      	push	{r4, r5, r6, lr}
 80116c4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 80116c8:	4604      	mov	r4, r0
 80116ca:	2b00      	cmp	r3, #0
 80116cc:	d035      	beq.n	801173a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80116ce:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 80116d2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 80116d6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 80116da:	3001      	adds	r0, #1
 80116dc:	1ad2      	subs	r2, r2, r3
 80116de:	b212      	sxth	r2, r2
 80116e0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 80116e4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80116e8:	2100      	movs	r1, #0
 80116ea:	b280      	uxth	r0, r0
 80116ec:	47a8      	blx	r5
 80116ee:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 80116f2:	6823      	ldr	r3, [r4, #0]
 80116f4:	4401      	add	r1, r0
 80116f6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80116fa:	4620      	mov	r0, r4
 80116fc:	4798      	blx	r3
 80116fe:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011702:	429a      	cmp	r2, r3
 8011704:	db19      	blt.n	801173a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8011706:	2500      	movs	r5, #0
 8011708:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801170c:	f006 f9a0 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 8011710:	4621      	mov	r1, r4
 8011712:	3004      	adds	r0, #4
 8011714:	f006 f9e9 	bl	8017aea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011718:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801171c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8011720:	b158      	cbz	r0, 801173a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8011722:	6803      	ldr	r3, [r0, #0]
 8011724:	68db      	ldr	r3, [r3, #12]
 8011726:	4798      	blx	r3
 8011728:	b138      	cbz	r0, 801173a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801172a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801172e:	6803      	ldr	r3, [r0, #0]
 8011730:	4621      	mov	r1, r4
 8011732:	689b      	ldr	r3, [r3, #8]
 8011734:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011738:	4718      	bx	r3
 801173a:	bd70      	pop	{r4, r5, r6, pc}

0801173c <_ZN8touchgfx8DrawableC1Ev>:
 801173c:	4a0a      	ldr	r2, [pc, #40]	; (8011768 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801173e:	6002      	str	r2, [r0, #0]
 8011740:	2200      	movs	r2, #0
 8011742:	8082      	strh	r2, [r0, #4]
 8011744:	80c2      	strh	r2, [r0, #6]
 8011746:	8102      	strh	r2, [r0, #8]
 8011748:	8142      	strh	r2, [r0, #10]
 801174a:	8182      	strh	r2, [r0, #12]
 801174c:	81c2      	strh	r2, [r0, #14]
 801174e:	8202      	strh	r2, [r0, #16]
 8011750:	8242      	strh	r2, [r0, #18]
 8011752:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011756:	61c2      	str	r2, [r0, #28]
 8011758:	8402      	strh	r2, [r0, #32]
 801175a:	8442      	strh	r2, [r0, #34]	; 0x22
 801175c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011760:	2201      	movs	r2, #1
 8011762:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8011766:	4770      	bx	lr
 8011768:	08030e08 	.word	0x08030e08

0801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801176c:	b570      	push	{r4, r5, r6, lr}
 801176e:	6803      	ldr	r3, [r0, #0]
 8011770:	4604      	mov	r4, r0
 8011772:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011774:	4615      	mov	r5, r2
 8011776:	4798      	blx	r3
 8011778:	6823      	ldr	r3, [r4, #0]
 801177a:	4629      	mov	r1, r5
 801177c:	4620      	mov	r0, r4
 801177e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011780:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011784:	4718      	bx	r3

08011786 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8011786:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801178a:	4604      	mov	r4, r0
 801178c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8011790:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8011794:	460e      	mov	r6, r1
 8011796:	4615      	mov	r5, r2
 8011798:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801179c:	4619      	mov	r1, r3
 801179e:	463a      	mov	r2, r7
 80117a0:	3058      	adds	r0, #88	; 0x58
 80117a2:	4698      	mov	r8, r3
 80117a4:	f7ff ffe2 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80117a8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80117ac:	4446      	add	r6, r8
 80117ae:	42b3      	cmp	r3, r6
 80117b0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80117b4:	bfb8      	it	lt
 80117b6:	8126      	strhlt	r6, [r4, #8]
 80117b8:	443d      	add	r5, r7
 80117ba:	42ab      	cmp	r3, r5
 80117bc:	bfb8      	it	lt
 80117be:	8165      	strhlt	r5, [r4, #10]
 80117c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080117c4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 80117c4:	b510      	push	{r4, lr}
 80117c6:	4604      	mov	r4, r0
 80117c8:	302c      	adds	r0, #44	; 0x2c
 80117ca:	f003 fc42 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80117ce:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80117d2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80117d6:	4620      	mov	r0, r4
 80117d8:	f7ff ffc8 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80117dc:	bd10      	pop	{r4, pc}
	...

080117e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 80117e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80117e2:	4604      	mov	r4, r0
 80117e4:	4626      	mov	r6, r4
 80117e6:	2500      	movs	r5, #0
 80117e8:	f7ff ffa8 	bl	801173c <_ZN8touchgfx8DrawableC1Ev>
 80117ec:	4b23      	ldr	r3, [pc, #140]	; (801187c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 80117ee:	62a5      	str	r5, [r4, #40]	; 0x28
 80117f0:	f846 3b2c 	str.w	r3, [r6], #44
 80117f4:	2226      	movs	r2, #38	; 0x26
 80117f6:	4629      	mov	r1, r5
 80117f8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80117fc:	4630      	mov	r0, r6
 80117fe:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011802:	f01b fac6 	bl	802cd92 <memset>
 8011806:	4630      	mov	r0, r6
 8011808:	f7ff ff98 	bl	801173c <_ZN8touchgfx8DrawableC1Ev>
 801180c:	a902      	add	r1, sp, #8
 801180e:	4b1c      	ldr	r3, [pc, #112]	; (8011880 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8011810:	62e3      	str	r3, [r4, #44]	; 0x2c
 8011812:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8011816:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801181a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801181e:	4630      	mov	r0, r6
 8011820:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8011824:	f003 fc15 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011828:	4638      	mov	r0, r7
 801182a:	f7ff ff87 	bl	801173c <_ZN8touchgfx8DrawableC1Ev>
 801182e:	4b15      	ldr	r3, [pc, #84]	; (8011884 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8011830:	65a3      	str	r3, [r4, #88]	; 0x58
 8011832:	2364      	movs	r3, #100	; 0x64
 8011834:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8011838:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801183c:	4b12      	ldr	r3, [pc, #72]	; (8011888 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801183e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8011842:	4629      	mov	r1, r5
 8011844:	4630      	mov	r0, r6
 8011846:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801184a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801184e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8011852:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8011856:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801185a:	f7f1 fc3d 	bl	80030d8 <_ZN8touchgfx8Drawable4setXEs>
 801185e:	4629      	mov	r1, r5
 8011860:	4630      	mov	r0, r6
 8011862:	f7f1 fc3b 	bl	80030dc <_ZN8touchgfx8Drawable4setYEs>
 8011866:	4631      	mov	r1, r6
 8011868:	4620      	mov	r0, r4
 801186a:	f000 f819 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801186e:	4620      	mov	r0, r4
 8011870:	4639      	mov	r1, r7
 8011872:	f000 f815 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011876:	4620      	mov	r0, r4
 8011878:	b003      	add	sp, #12
 801187a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801187c:	080304bc 	.word	0x080304bc
 8011880:	08030cc4 	.word	0x08030cc4
 8011884:	08030590 	.word	0x08030590
 8011888:	08019797 	.word	0x08019797

0801188c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801188c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801188e:	2000      	movs	r0, #0
 8011890:	b12b      	cbz	r3, 801189e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011892:	b920      	cbnz	r0, 801189e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011894:	1a5a      	subs	r2, r3, r1
 8011896:	4250      	negs	r0, r2
 8011898:	4150      	adcs	r0, r2
 801189a:	699b      	ldr	r3, [r3, #24]
 801189c:	e7f8      	b.n	8011890 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801189e:	4770      	bx	lr

080118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80118a0:	2300      	movs	r3, #0
 80118a2:	6148      	str	r0, [r1, #20]
 80118a4:	618b      	str	r3, [r1, #24]
 80118a6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80118a8:	b913      	cbnz	r3, 80118b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80118aa:	6281      	str	r1, [r0, #40]	; 0x28
 80118ac:	4770      	bx	lr
 80118ae:	4613      	mov	r3, r2
 80118b0:	699a      	ldr	r2, [r3, #24]
 80118b2:	2a00      	cmp	r2, #0
 80118b4:	d1fb      	bne.n	80118ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80118b6:	6199      	str	r1, [r3, #24]
 80118b8:	4770      	bx	lr

080118ba <_ZN8touchgfx9Container9removeAllEv>:
 80118ba:	2200      	movs	r2, #0
 80118bc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80118be:	b123      	cbz	r3, 80118ca <_ZN8touchgfx9Container9removeAllEv+0x10>
 80118c0:	6999      	ldr	r1, [r3, #24]
 80118c2:	6281      	str	r1, [r0, #40]	; 0x28
 80118c4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80118c8:	e7f8      	b.n	80118bc <_ZN8touchgfx9Container9removeAllEv+0x2>
 80118ca:	4770      	bx	lr

080118cc <_ZN8touchgfx9Container6unlinkEv>:
 80118cc:	2300      	movs	r3, #0
 80118ce:	6283      	str	r3, [r0, #40]	; 0x28
 80118d0:	4770      	bx	lr

080118d2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80118d2:	2200      	movs	r2, #0
 80118d4:	8002      	strh	r2, [r0, #0]
 80118d6:	8042      	strh	r2, [r0, #2]
 80118d8:	8082      	strh	r2, [r0, #4]
 80118da:	80c2      	strh	r2, [r0, #6]
 80118dc:	4770      	bx	lr

080118de <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80118de:	b570      	push	{r4, r5, r6, lr}
 80118e0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80118e2:	460d      	mov	r5, r1
 80118e4:	4616      	mov	r6, r2
 80118e6:	b13c      	cbz	r4, 80118f8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80118e8:	6823      	ldr	r3, [r4, #0]
 80118ea:	4620      	mov	r0, r4
 80118ec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80118ee:	4632      	mov	r2, r6
 80118f0:	4629      	mov	r1, r5
 80118f2:	4798      	blx	r3
 80118f4:	69a4      	ldr	r4, [r4, #24]
 80118f6:	e7f6      	b.n	80118e6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80118f8:	bd70      	pop	{r4, r5, r6, pc}

080118fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80118fa:	b538      	push	{r3, r4, r5, lr}
 80118fc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80118fe:	460d      	mov	r5, r1
 8011900:	b134      	cbz	r4, 8011910 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8011902:	682b      	ldr	r3, [r5, #0]
 8011904:	4621      	mov	r1, r4
 8011906:	689b      	ldr	r3, [r3, #8]
 8011908:	4628      	mov	r0, r5
 801190a:	4798      	blx	r3
 801190c:	69a4      	ldr	r4, [r4, #24]
 801190e:	e7f7      	b.n	8011900 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8011910:	bd38      	pop	{r3, r4, r5, pc}

08011912 <_ZN8touchgfx9ContainerD1Ev>:
 8011912:	4770      	bx	lr

08011914 <_ZN8touchgfx9ContainerD0Ev>:
 8011914:	b510      	push	{r4, lr}
 8011916:	212c      	movs	r1, #44	; 0x2c
 8011918:	4604      	mov	r4, r0
 801191a:	f01a f94e 	bl	802bbba <_ZdlPvj>
 801191e:	4620      	mov	r0, r4
 8011920:	bd10      	pop	{r4, pc}

08011922 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8011922:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011924:	b19b      	cbz	r3, 801194e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011926:	428b      	cmp	r3, r1
 8011928:	d109      	bne.n	801193e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801192a:	699a      	ldr	r2, [r3, #24]
 801192c:	2100      	movs	r1, #0
 801192e:	6159      	str	r1, [r3, #20]
 8011930:	6282      	str	r2, [r0, #40]	; 0x28
 8011932:	b902      	cbnz	r2, 8011936 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8011934:	4770      	bx	lr
 8011936:	6199      	str	r1, [r3, #24]
 8011938:	4770      	bx	lr
 801193a:	4613      	mov	r3, r2
 801193c:	b13a      	cbz	r2, 801194e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801193e:	699a      	ldr	r2, [r3, #24]
 8011940:	428a      	cmp	r2, r1
 8011942:	d1fa      	bne.n	801193a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8011944:	698a      	ldr	r2, [r1, #24]
 8011946:	619a      	str	r2, [r3, #24]
 8011948:	2300      	movs	r3, #0
 801194a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801194e:	4770      	bx	lr

08011950 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8011950:	b410      	push	{r4}
 8011952:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011954:	4604      	mov	r4, r0
 8011956:	b92b      	cbnz	r3, 8011964 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8011958:	6803      	ldr	r3, [r0, #0]
 801195a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801195e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8011960:	4611      	mov	r1, r2
 8011962:	4718      	bx	r3
 8011964:	b941      	cbnz	r1, 8011978 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8011966:	6193      	str	r3, [r2, #24]
 8011968:	6282      	str	r2, [r0, #40]	; 0x28
 801196a:	6154      	str	r4, [r2, #20]
 801196c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011970:	4770      	bx	lr
 8011972:	4603      	mov	r3, r0
 8011974:	2800      	cmp	r0, #0
 8011976:	d0f9      	beq.n	801196c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8011978:	4299      	cmp	r1, r3
 801197a:	6998      	ldr	r0, [r3, #24]
 801197c:	d1f9      	bne.n	8011972 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801197e:	6190      	str	r0, [r2, #24]
 8011980:	618a      	str	r2, [r1, #24]
 8011982:	e7f2      	b.n	801196a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08011984 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8011984:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011988:	461f      	mov	r7, r3
 801198a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801198e:	460d      	mov	r5, r1
 8011990:	4616      	mov	r6, r2
 8011992:	b103      	cbz	r3, 8011996 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8011994:	6038      	str	r0, [r7, #0]
 8011996:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011998:	b314      	cbz	r4, 80119e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801199a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801199e:	b1eb      	cbz	r3, 80119dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80119a0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80119a4:	428d      	cmp	r5, r1
 80119a6:	db19      	blt.n	80119dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80119a8:	8923      	ldrh	r3, [r4, #8]
 80119aa:	b289      	uxth	r1, r1
 80119ac:	440b      	add	r3, r1
 80119ae:	b21b      	sxth	r3, r3
 80119b0:	429d      	cmp	r5, r3
 80119b2:	da13      	bge.n	80119dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80119b4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80119b8:	4296      	cmp	r6, r2
 80119ba:	db0f      	blt.n	80119dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80119bc:	8963      	ldrh	r3, [r4, #10]
 80119be:	b292      	uxth	r2, r2
 80119c0:	4413      	add	r3, r2
 80119c2:	b21b      	sxth	r3, r3
 80119c4:	429e      	cmp	r6, r3
 80119c6:	da09      	bge.n	80119dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80119c8:	6823      	ldr	r3, [r4, #0]
 80119ca:	1ab2      	subs	r2, r6, r2
 80119cc:	1a69      	subs	r1, r5, r1
 80119ce:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80119d2:	b212      	sxth	r2, r2
 80119d4:	463b      	mov	r3, r7
 80119d6:	b209      	sxth	r1, r1
 80119d8:	4620      	mov	r0, r4
 80119da:	47c0      	blx	r8
 80119dc:	69a4      	ldr	r4, [r4, #24]
 80119de:	e7db      	b.n	8011998 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80119e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080119e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80119e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119e8:	4c6e      	ldr	r4, [pc, #440]	; (8011ba4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80119ea:	b0a1      	sub	sp, #132	; 0x84
 80119ec:	6824      	ldr	r4, [r4, #0]
 80119ee:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80119f0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80119f4:	9303      	str	r3, [sp, #12]
 80119f6:	2400      	movs	r4, #0
 80119f8:	802c      	strh	r4, [r5, #0]
 80119fa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80119fc:	802c      	strh	r4, [r5, #0]
 80119fe:	601c      	str	r4, [r3, #0]
 8011a00:	4606      	mov	r6, r0
 8011a02:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8011a06:	f7ff ffbd 	bl	8011984 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011a0a:	f1b9 0f03 	cmp.w	r9, #3
 8011a0e:	f340 80c2 	ble.w	8011b96 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8011a12:	4631      	mov	r1, r6
 8011a14:	a80c      	add	r0, sp, #48	; 0x30
 8011a16:	f007 f99f 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a1a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8011a1e:	9306      	str	r3, [sp, #24]
 8011a20:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011a24:	9307      	str	r3, [sp, #28]
 8011a26:	9b03      	ldr	r3, [sp, #12]
 8011a28:	f8d3 a000 	ldr.w	sl, [r3]
 8011a2c:	f1ba 0f00 	cmp.w	sl, #0
 8011a30:	f000 80b4 	beq.w	8011b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8011a34:	4651      	mov	r1, sl
 8011a36:	a810      	add	r0, sp, #64	; 0x40
 8011a38:	f007 f98e 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a3c:	9b01      	ldr	r3, [sp, #4]
 8011a3e:	9a06      	ldr	r2, [sp, #24]
 8011a40:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8011a44:	189d      	adds	r5, r3, r2
 8011a46:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8011a4a:	9a07      	ldr	r2, [sp, #28]
 8011a4c:	2002      	movs	r0, #2
 8011a4e:	fb91 f1f0 	sdiv	r1, r1, r0
 8011a52:	4419      	add	r1, r3
 8011a54:	1a6d      	subs	r5, r5, r1
 8011a56:	9b02      	ldr	r3, [sp, #8]
 8011a58:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011a5c:	4413      	add	r3, r2
 8011a5e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8011a62:	fb92 f2f0 	sdiv	r2, r2, r0
 8011a66:	440a      	add	r2, r1
 8011a68:	1a9b      	subs	r3, r3, r2
 8011a6a:	435b      	muls	r3, r3
 8011a6c:	fb05 3505 	mla	r5, r5, r5, r3
 8011a70:	4f4d      	ldr	r7, [pc, #308]	; (8011ba8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8011a72:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011a74:	ac10      	add	r4, sp, #64	; 0x40
 8011a76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011a78:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011a7a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011a7c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011a7e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011a80:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8011a84:	f1b9 0f0c 	cmp.w	r9, #12
 8011a88:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8011a8c:	f04f 0303 	mov.w	r3, #3
 8011a90:	bfc8      	it	gt
 8011a92:	4698      	movgt	r8, r3
 8011a94:	f8cd 9000 	str.w	r9, [sp]
 8011a98:	f04f 0400 	mov.w	r4, #0
 8011a9c:	bfdc      	itt	le
 8011a9e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8011aa2:	fb92 f8f3 	sdivle	r8, r2, r3
 8011aa6:	1c63      	adds	r3, r4, #1
 8011aa8:	aa10      	add	r2, sp, #64	; 0x40
 8011aaa:	f004 0401 	and.w	r4, r4, #1
 8011aae:	9308      	str	r3, [sp, #32]
 8011ab0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8011ab4:	9b00      	ldr	r3, [sp, #0]
 8011ab6:	fb93 f3f8 	sdiv	r3, r3, r8
 8011aba:	b29b      	uxth	r3, r3
 8011abc:	3404      	adds	r4, #4
 8011abe:	f04f 0b00 	mov.w	fp, #0
 8011ac2:	9304      	str	r3, [sp, #16]
 8011ac4:	9a04      	ldr	r2, [sp, #16]
 8011ac6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8011aca:	fb13 f302 	smulbb	r3, r3, r2
 8011ace:	9a01      	ldr	r2, [sp, #4]
 8011ad0:	b29b      	uxth	r3, r3
 8011ad2:	1899      	adds	r1, r3, r2
 8011ad4:	9305      	str	r3, [sp, #20]
 8011ad6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011ada:	b209      	sxth	r1, r1
 8011adc:	4299      	cmp	r1, r3
 8011ade:	db4d      	blt.n	8011b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011ae0:	8932      	ldrh	r2, [r6, #8]
 8011ae2:	4413      	add	r3, r2
 8011ae4:	b21b      	sxth	r3, r3
 8011ae6:	4299      	cmp	r1, r3
 8011ae8:	da48      	bge.n	8011b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011aea:	9b04      	ldr	r3, [sp, #16]
 8011aec:	6827      	ldr	r7, [r4, #0]
 8011aee:	fb17 f703 	smulbb	r7, r7, r3
 8011af2:	9b02      	ldr	r3, [sp, #8]
 8011af4:	b2bf      	uxth	r7, r7
 8011af6:	18fa      	adds	r2, r7, r3
 8011af8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011afc:	b212      	sxth	r2, r2
 8011afe:	429a      	cmp	r2, r3
 8011b00:	db3c      	blt.n	8011b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011b02:	8970      	ldrh	r0, [r6, #10]
 8011b04:	4403      	add	r3, r0
 8011b06:	b21b      	sxth	r3, r3
 8011b08:	429a      	cmp	r2, r3
 8011b0a:	da37      	bge.n	8011b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011b0c:	2300      	movs	r3, #0
 8011b0e:	930b      	str	r3, [sp, #44]	; 0x2c
 8011b10:	4630      	mov	r0, r6
 8011b12:	ab0b      	add	r3, sp, #44	; 0x2c
 8011b14:	f7ff ff36 	bl	8011984 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011b18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011b1a:	b37a      	cbz	r2, 8011b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011b1c:	4552      	cmp	r2, sl
 8011b1e:	d02d      	beq.n	8011b7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011b20:	4611      	mov	r1, r2
 8011b22:	a80e      	add	r0, sp, #56	; 0x38
 8011b24:	9209      	str	r2, [sp, #36]	; 0x24
 8011b26:	f007 f917 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b2a:	9a06      	ldr	r2, [sp, #24]
 8011b2c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8011b30:	9b01      	ldr	r3, [sp, #4]
 8011b32:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8011b36:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8011b3a:	4413      	add	r3, r2
 8011b3c:	f04f 0e02 	mov.w	lr, #2
 8011b40:	fb91 f1fe 	sdiv	r1, r1, lr
 8011b44:	4401      	add	r1, r0
 8011b46:	1a58      	subs	r0, r3, r1
 8011b48:	9a07      	ldr	r2, [sp, #28]
 8011b4a:	9b02      	ldr	r3, [sp, #8]
 8011b4c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8011b50:	fb9c fcfe 	sdiv	ip, ip, lr
 8011b54:	4413      	add	r3, r2
 8011b56:	448c      	add	ip, r1
 8011b58:	eba3 030c 	sub.w	r3, r3, ip
 8011b5c:	435b      	muls	r3, r3
 8011b5e:	fb00 3300 	mla	r3, r0, r0, r3
 8011b62:	42ab      	cmp	r3, r5
 8011b64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011b66:	d208      	bcs.n	8011b7a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8011b68:	9803      	ldr	r0, [sp, #12]
 8011b6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011b6c:	6001      	str	r1, [r0, #0]
 8011b6e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8011b70:	9805      	ldr	r0, [sp, #20]
 8011b72:	8008      	strh	r0, [r1, #0]
 8011b74:	992b      	ldr	r1, [sp, #172]	; 0xac
 8011b76:	461d      	mov	r5, r3
 8011b78:	800f      	strh	r7, [r1, #0]
 8011b7a:	4692      	mov	sl, r2
 8011b7c:	f10b 0b01 	add.w	fp, fp, #1
 8011b80:	f1bb 0f04 	cmp.w	fp, #4
 8011b84:	f104 0408 	add.w	r4, r4, #8
 8011b88:	d19c      	bne.n	8011ac4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8011b8a:	9b00      	ldr	r3, [sp, #0]
 8011b8c:	9c08      	ldr	r4, [sp, #32]
 8011b8e:	444b      	add	r3, r9
 8011b90:	4544      	cmp	r4, r8
 8011b92:	9300      	str	r3, [sp, #0]
 8011b94:	d187      	bne.n	8011aa6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8011b96:	b021      	add	sp, #132	; 0x84
 8011b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b9c:	f04f 35ff 	mov.w	r5, #4294967295
 8011ba0:	e766      	b.n	8011a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8011ba2:	bf00      	nop
 8011ba4:	2001384c 	.word	0x2001384c
 8011ba8:	0802daac 	.word	0x0802daac

08011bac <_ZN8touchgfx4RectaNERKS0_>:
 8011bac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011bb0:	f9b1 7000 	ldrsh.w	r7, [r1]
 8011bb4:	888c      	ldrh	r4, [r1, #4]
 8011bb6:	f9b0 9000 	ldrsh.w	r9, [r0]
 8011bba:	443c      	add	r4, r7
 8011bbc:	b2a4      	uxth	r4, r4
 8011bbe:	fa0f f884 	sxth.w	r8, r4
 8011bc2:	45c1      	cmp	r9, r8
 8011bc4:	da2f      	bge.n	8011c26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011bc6:	8882      	ldrh	r2, [r0, #4]
 8011bc8:	444a      	add	r2, r9
 8011bca:	b292      	uxth	r2, r2
 8011bcc:	fa0f fe82 	sxth.w	lr, r2
 8011bd0:	4577      	cmp	r7, lr
 8011bd2:	da28      	bge.n	8011c26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011bd4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8011bd8:	88cb      	ldrh	r3, [r1, #6]
 8011bda:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8011bde:	442b      	add	r3, r5
 8011be0:	b21b      	sxth	r3, r3
 8011be2:	429e      	cmp	r6, r3
 8011be4:	da1f      	bge.n	8011c26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011be6:	88c3      	ldrh	r3, [r0, #6]
 8011be8:	4433      	add	r3, r6
 8011bea:	b29b      	uxth	r3, r3
 8011bec:	fa0f fc83 	sxth.w	ip, r3
 8011bf0:	4565      	cmp	r5, ip
 8011bf2:	da18      	bge.n	8011c26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011bf4:	454f      	cmp	r7, r9
 8011bf6:	bfb8      	it	lt
 8011bf8:	464f      	movlt	r7, r9
 8011bfa:	42b5      	cmp	r5, r6
 8011bfc:	bfb8      	it	lt
 8011bfe:	4635      	movlt	r5, r6
 8011c00:	45f0      	cmp	r8, lr
 8011c02:	bfd8      	it	le
 8011c04:	4622      	movle	r2, r4
 8011c06:	1bd2      	subs	r2, r2, r7
 8011c08:	8082      	strh	r2, [r0, #4]
 8011c0a:	884a      	ldrh	r2, [r1, #2]
 8011c0c:	88c9      	ldrh	r1, [r1, #6]
 8011c0e:	8007      	strh	r7, [r0, #0]
 8011c10:	440a      	add	r2, r1
 8011c12:	b292      	uxth	r2, r2
 8011c14:	b211      	sxth	r1, r2
 8011c16:	458c      	cmp	ip, r1
 8011c18:	bfa8      	it	ge
 8011c1a:	4613      	movge	r3, r2
 8011c1c:	1b5b      	subs	r3, r3, r5
 8011c1e:	80c3      	strh	r3, [r0, #6]
 8011c20:	8045      	strh	r5, [r0, #2]
 8011c22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c26:	2300      	movs	r3, #0
 8011c28:	8003      	strh	r3, [r0, #0]
 8011c2a:	8043      	strh	r3, [r0, #2]
 8011c2c:	8083      	strh	r3, [r0, #4]
 8011c2e:	80c3      	strh	r3, [r0, #6]
 8011c30:	e7f7      	b.n	8011c22 <_ZN8touchgfx4RectaNERKS0_+0x76>

08011c32 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8011c32:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011c36:	2b00      	cmp	r3, #0
 8011c38:	dd06      	ble.n	8011c48 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8011c3a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8011c3e:	2800      	cmp	r0, #0
 8011c40:	bfcc      	ite	gt
 8011c42:	2000      	movgt	r0, #0
 8011c44:	2001      	movle	r0, #1
 8011c46:	4770      	bx	lr
 8011c48:	2001      	movs	r0, #1
 8011c4a:	4770      	bx	lr

08011c4c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8011c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c50:	2300      	movs	r3, #0
 8011c52:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8011c54:	8003      	strh	r3, [r0, #0]
 8011c56:	4604      	mov	r4, r0
 8011c58:	8043      	strh	r3, [r0, #2]
 8011c5a:	8083      	strh	r3, [r0, #4]
 8011c5c:	80c3      	strh	r3, [r0, #6]
 8011c5e:	2d00      	cmp	r5, #0
 8011c60:	d040      	beq.n	8011ce4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8011c62:	1d28      	adds	r0, r5, #4
 8011c64:	f7ff ffe5 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c68:	b988      	cbnz	r0, 8011c8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8011c6a:	4620      	mov	r0, r4
 8011c6c:	f7ff ffe1 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c70:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8011c74:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011c78:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8011c7c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8011c80:	b138      	cbz	r0, 8011c92 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8011c82:	8022      	strh	r2, [r4, #0]
 8011c84:	8063      	strh	r3, [r4, #2]
 8011c86:	f8a4 e004 	strh.w	lr, [r4, #4]
 8011c8a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8011c8e:	69ad      	ldr	r5, [r5, #24]
 8011c90:	e7e5      	b.n	8011c5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8011c92:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011c96:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011c9a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8011c9e:	4290      	cmp	r0, r2
 8011ca0:	4607      	mov	r7, r0
 8011ca2:	bfa8      	it	ge
 8011ca4:	4617      	movge	r7, r2
 8011ca6:	4472      	add	r2, lr
 8011ca8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8011cac:	8027      	strh	r7, [r4, #0]
 8011cae:	4299      	cmp	r1, r3
 8011cb0:	460e      	mov	r6, r1
 8011cb2:	4440      	add	r0, r8
 8011cb4:	bfa8      	it	ge
 8011cb6:	461e      	movge	r6, r3
 8011cb8:	4471      	add	r1, lr
 8011cba:	4463      	add	r3, ip
 8011cbc:	b200      	sxth	r0, r0
 8011cbe:	b212      	sxth	r2, r2
 8011cc0:	b209      	sxth	r1, r1
 8011cc2:	b21b      	sxth	r3, r3
 8011cc4:	4290      	cmp	r0, r2
 8011cc6:	bfac      	ite	ge
 8011cc8:	ebc7 0200 	rsbge	r2, r7, r0
 8011ccc:	ebc7 0202 	rsblt	r2, r7, r2
 8011cd0:	4299      	cmp	r1, r3
 8011cd2:	bfac      	ite	ge
 8011cd4:	ebc6 0301 	rsbge	r3, r6, r1
 8011cd8:	ebc6 0303 	rsblt	r3, r6, r3
 8011cdc:	8066      	strh	r6, [r4, #2]
 8011cde:	80a2      	strh	r2, [r4, #4]
 8011ce0:	80e3      	strh	r3, [r4, #6]
 8011ce2:	e7d4      	b.n	8011c8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8011ce4:	4620      	mov	r0, r4
 8011ce6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011cea <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8011cea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011cee:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8011cf2:	b383      	cbz	r3, 8011d56 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011cf4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011cf6:	b374      	cbz	r4, 8011d56 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011cf8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8011cfc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8011d00:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8011d04:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8011d08:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011d0c:	b303      	cbz	r3, 8011d50 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011d0e:	4668      	mov	r0, sp
 8011d10:	1d21      	adds	r1, r4, #4
 8011d12:	f8ad 5000 	strh.w	r5, [sp]
 8011d16:	f8ad 6002 	strh.w	r6, [sp, #2]
 8011d1a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011d1e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8011d22:	f7ff ff43 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8011d26:	4668      	mov	r0, sp
 8011d28:	f7ff ff83 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d2c:	b980      	cbnz	r0, 8011d50 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011d2e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d32:	88a2      	ldrh	r2, [r4, #4]
 8011d34:	1a9b      	subs	r3, r3, r2
 8011d36:	f8ad 3000 	strh.w	r3, [sp]
 8011d3a:	88e2      	ldrh	r2, [r4, #6]
 8011d3c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d40:	1a9b      	subs	r3, r3, r2
 8011d42:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011d46:	6823      	ldr	r3, [r4, #0]
 8011d48:	4669      	mov	r1, sp
 8011d4a:	689b      	ldr	r3, [r3, #8]
 8011d4c:	4620      	mov	r0, r4
 8011d4e:	4798      	blx	r3
 8011d50:	69a4      	ldr	r4, [r4, #24]
 8011d52:	2c00      	cmp	r4, #0
 8011d54:	d1d8      	bne.n	8011d08 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8011d56:	b002      	add	sp, #8
 8011d58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011d5c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8011d5c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011d5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8011d62:	460d      	mov	r5, r1
 8011d64:	4616      	mov	r6, r2
 8011d66:	b323      	cbz	r3, 8011db2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011d68:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011d6a:	b314      	cbz	r4, 8011db2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011d6c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011d70:	b1eb      	cbz	r3, 8011dae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011d72:	6828      	ldr	r0, [r5, #0]
 8011d74:	6869      	ldr	r1, [r5, #4]
 8011d76:	466b      	mov	r3, sp
 8011d78:	c303      	stmia	r3!, {r0, r1}
 8011d7a:	4668      	mov	r0, sp
 8011d7c:	1d21      	adds	r1, r4, #4
 8011d7e:	f7ff ff15 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8011d82:	4668      	mov	r0, sp
 8011d84:	f7ff ff55 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d88:	b988      	cbnz	r0, 8011dae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011d8a:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d8e:	88a2      	ldrh	r2, [r4, #4]
 8011d90:	1a9b      	subs	r3, r3, r2
 8011d92:	f8ad 3000 	strh.w	r3, [sp]
 8011d96:	88e2      	ldrh	r2, [r4, #6]
 8011d98:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d9c:	1a9b      	subs	r3, r3, r2
 8011d9e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011da2:	6823      	ldr	r3, [r4, #0]
 8011da4:	4632      	mov	r2, r6
 8011da6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011da8:	4669      	mov	r1, sp
 8011daa:	4620      	mov	r0, r4
 8011dac:	4798      	blx	r3
 8011dae:	69a4      	ldr	r4, [r4, #24]
 8011db0:	e7db      	b.n	8011d6a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8011db2:	b002      	add	sp, #8
 8011db4:	bd70      	pop	{r4, r5, r6, pc}

08011db6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8011db6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8011db8:	4770      	bx	lr
	...

08011dbc <_ZN8touchgfx14SwipeContainerD1Ev>:
 8011dbc:	4b05      	ldr	r3, [pc, #20]	; (8011dd4 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8011dbe:	b510      	push	{r4, lr}
 8011dc0:	6003      	str	r3, [r0, #0]
 8011dc2:	4604      	mov	r4, r0
 8011dc4:	f005 fe44 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 8011dc8:	4621      	mov	r1, r4
 8011dca:	3004      	adds	r0, #4
 8011dcc:	f005 fe8d 	bl	8017aea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011dd0:	4620      	mov	r0, r4
 8011dd2:	bd10      	pop	{r4, pc}
 8011dd4:	08030620 	.word	0x08030620

08011dd8 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8011dd8:	b510      	push	{r4, lr}
 8011dda:	4604      	mov	r4, r0
 8011ddc:	f7ff ffee 	bl	8011dbc <_ZN8touchgfx14SwipeContainerD1Ev>
 8011de0:	4620      	mov	r0, r4
 8011de2:	21f4      	movs	r1, #244	; 0xf4
 8011de4:	f019 fee9 	bl	802bbba <_ZdlPvj>
 8011de8:	4620      	mov	r0, r4
 8011dea:	bd10      	pop	{r4, pc}

08011dec <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8011dec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011df0:	2b04      	cmp	r3, #4
 8011df2:	d117      	bne.n	8011e24 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8011df4:	790b      	ldrb	r3, [r1, #4]
 8011df6:	2b01      	cmp	r3, #1
 8011df8:	d114      	bne.n	8011e24 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8011dfa:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8011dfe:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8011e00:	8643      	strh	r3, [r0, #50]	; 0x32
 8011e02:	2b00      	cmp	r3, #0
 8011e04:	8682      	strh	r2, [r0, #52]	; 0x34
 8011e06:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8011e0a:	da0e      	bge.n	8011e2a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8011e0c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011e10:	3a01      	subs	r2, #1
 8011e12:	4291      	cmp	r1, r2
 8011e14:	d007      	beq.n	8011e26 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8011e16:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011e18:	4252      	negs	r2, r2
 8011e1a:	4293      	cmp	r3, r2
 8011e1c:	dc03      	bgt.n	8011e26 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8011e1e:	2302      	movs	r3, #2
 8011e20:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011e24:	4770      	bx	lr
 8011e26:	2300      	movs	r3, #0
 8011e28:	e7fa      	b.n	8011e20 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8011e2a:	d0fb      	beq.n	8011e24 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8011e2c:	b111      	cbz	r1, 8011e34 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8011e2e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011e30:	4293      	cmp	r3, r2
 8011e32:	da01      	bge.n	8011e38 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8011e34:	2301      	movs	r3, #1
 8011e36:	e7f3      	b.n	8011e20 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8011e38:	2303      	movs	r3, #3
 8011e3a:	e7f1      	b.n	8011e20 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08011e3c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8011e3c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011e40:	2b04      	cmp	r3, #4
 8011e42:	d113      	bne.n	8011e6c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011e44:	790b      	ldrb	r3, [r1, #4]
 8011e46:	b98b      	cbnz	r3, 8011e6c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011e48:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011e4a:	8643      	strh	r3, [r0, #50]	; 0x32
 8011e4c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8011e4e:	8683      	strh	r3, [r0, #52]	; 0x34
 8011e50:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011e54:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8011e58:	2b00      	cmp	r3, #0
 8011e5a:	da08      	bge.n	8011e6e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8011e5c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8011e60:	3b01      	subs	r3, #1
 8011e62:	429a      	cmp	r2, r3
 8011e64:	da02      	bge.n	8011e6c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011e66:	2302      	movs	r3, #2
 8011e68:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011e6c:	4770      	bx	lr
 8011e6e:	d0fd      	beq.n	8011e6c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011e70:	2a00      	cmp	r2, #0
 8011e72:	d0fb      	beq.n	8011e6c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011e74:	2303      	movs	r3, #3
 8011e76:	e7f7      	b.n	8011e68 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08011e78 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8011e78:	b538      	push	{r3, r4, r5, lr}
 8011e7a:	2226      	movs	r2, #38	; 0x26
 8011e7c:	4604      	mov	r4, r0
 8011e7e:	460d      	mov	r5, r1
 8011e80:	2100      	movs	r1, #0
 8011e82:	f01a ff86 	bl	802cd92 <memset>
 8011e86:	4620      	mov	r0, r4
 8011e88:	f7ff fc58 	bl	801173c <_ZN8touchgfx8DrawableC1Ev>
 8011e8c:	4b06      	ldr	r3, [pc, #24]	; (8011ea8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8011e8e:	6023      	str	r3, [r4, #0]
 8011e90:	882b      	ldrh	r3, [r5, #0]
 8011e92:	84e3      	strh	r3, [r4, #38]	; 0x26
 8011e94:	23ff      	movs	r3, #255	; 0xff
 8011e96:	4620      	mov	r0, r4
 8011e98:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8011e9c:	4629      	mov	r1, r5
 8011e9e:	f003 f8d8 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011ea2:	4620      	mov	r0, r4
 8011ea4:	bd38      	pop	{r3, r4, r5, pc}
 8011ea6:	bf00      	nop
 8011ea8:	08030cc4 	.word	0x08030cc4

08011eac <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8011eac:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011eae:	4770      	bx	lr

08011eb0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8011eb0:	b508      	push	{r3, lr}
 8011eb2:	3068      	adds	r0, #104	; 0x68
 8011eb4:	f7f1 fb92 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8011eb8:	bd08      	pop	{r3, pc}

08011eba <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8011eba:	b508      	push	{r3, lr}
 8011ebc:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8011ebe:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8011ec2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011ec6:	fb03 2111 	mls	r1, r3, r1, r2
 8011eca:	b209      	sxth	r1, r1
 8011ecc:	2200      	movs	r2, #0
 8011ece:	3038      	adds	r0, #56	; 0x38
 8011ed0:	f7f1 f90f 	bl	80030f2 <_ZN8touchgfx8Drawable6moveToEss>
 8011ed4:	bd08      	pop	{r3, pc}

08011ed6 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8011ed6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011eda:	2b04      	cmp	r3, #4
 8011edc:	d119      	bne.n	8011f12 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8011ede:	88ca      	ldrh	r2, [r1, #6]
 8011ee0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011ee2:	1a9b      	subs	r3, r3, r2
 8011ee4:	894a      	ldrh	r2, [r1, #10]
 8011ee6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8011eea:	4413      	add	r3, r2
 8011eec:	b21b      	sxth	r3, r3
 8011eee:	8603      	strh	r3, [r0, #48]	; 0x30
 8011ef0:	b921      	cbnz	r1, 8011efc <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011ef2:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011ef4:	4293      	cmp	r3, r2
 8011ef6:	dd01      	ble.n	8011efc <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011ef8:	8602      	strh	r2, [r0, #48]	; 0x30
 8011efa:	e008      	b.n	8011f0e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8011efc:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011f00:	3a01      	subs	r2, #1
 8011f02:	4291      	cmp	r1, r2
 8011f04:	d103      	bne.n	8011f0e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8011f06:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011f08:	4252      	negs	r2, r2
 8011f0a:	4293      	cmp	r3, r2
 8011f0c:	dbf4      	blt.n	8011ef8 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8011f0e:	f7ff bfd4 	b.w	8011eba <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011f12:	4770      	bx	lr

08011f14 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8011f14:	b538      	push	{r3, r4, r5, lr}
 8011f16:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8011f1a:	2d0e      	cmp	r5, #14
 8011f1c:	4604      	mov	r4, r0
 8011f1e:	d813      	bhi.n	8011f48 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8011f20:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8011f22:	4252      	negs	r2, r2
 8011f24:	230e      	movs	r3, #14
 8011f26:	b212      	sxth	r2, r2
 8011f28:	2100      	movs	r1, #0
 8011f2a:	4628      	mov	r0, r5
 8011f2c:	f007 fbc2 	bl	80196b4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8011f30:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011f32:	4418      	add	r0, r3
 8011f34:	8620      	strh	r0, [r4, #48]	; 0x30
 8011f36:	4620      	mov	r0, r4
 8011f38:	f7ff ffbf 	bl	8011eba <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011f3c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011f40:	3301      	adds	r3, #1
 8011f42:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011f46:	bd38      	pop	{r3, r4, r5, pc}
 8011f48:	2304      	movs	r3, #4
 8011f4a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011f4e:	2300      	movs	r3, #0
 8011f50:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8011f54:	8603      	strh	r3, [r0, #48]	; 0x30
 8011f56:	e7ef      	b.n	8011f38 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08011f58 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8011f58:	b538      	push	{r3, r4, r5, lr}
 8011f5a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8011f5e:	2d0e      	cmp	r5, #14
 8011f60:	4604      	mov	r4, r0
 8011f62:	d812      	bhi.n	8011f8a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8011f64:	230e      	movs	r3, #14
 8011f66:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8011f6a:	2100      	movs	r1, #0
 8011f6c:	4628      	mov	r0, r5
 8011f6e:	f007 fba1 	bl	80196b4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8011f72:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011f74:	1a18      	subs	r0, r3, r0
 8011f76:	8620      	strh	r0, [r4, #48]	; 0x30
 8011f78:	4620      	mov	r0, r4
 8011f7a:	f7ff ff9e 	bl	8011eba <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011f7e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011f82:	3301      	adds	r3, #1
 8011f84:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011f88:	bd38      	pop	{r3, r4, r5, pc}
 8011f8a:	2304      	movs	r3, #4
 8011f8c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011f90:	2300      	movs	r3, #0
 8011f92:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8011f96:	8603      	strh	r3, [r0, #48]	; 0x30
 8011f98:	e7ef      	b.n	8011f7a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08011f9c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8011f9c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011fa0:	4604      	mov	r4, r0
 8011fa2:	4626      	mov	r6, r4
 8011fa4:	af02      	add	r7, sp, #8
 8011fa6:	f7ff fbc9 	bl	801173c <_ZN8touchgfx8DrawableC1Ev>
 8011faa:	2500      	movs	r5, #0
 8011fac:	4b18      	ldr	r3, [pc, #96]	; (8012010 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8011fae:	62a5      	str	r5, [r4, #40]	; 0x28
 8011fb0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8011fb4:	f846 3b2c 	str.w	r3, [r6], #44
 8011fb8:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8011fbc:	4630      	mov	r0, r6
 8011fbe:	4639      	mov	r1, r7
 8011fc0:	f7ff ff5a 	bl	8011e78 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011fc4:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8011fc8:	4b12      	ldr	r3, [pc, #72]	; (8012014 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8011fca:	62e3      	str	r3, [r4, #44]	; 0x2c
 8011fcc:	4639      	mov	r1, r7
 8011fce:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8011fd2:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8011fd6:	4640      	mov	r0, r8
 8011fd8:	f8ad 9004 	strh.w	r9, [sp, #4]
 8011fdc:	f7ff ff4c 	bl	8011e78 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011fe0:	462a      	mov	r2, r5
 8011fe2:	4629      	mov	r1, r5
 8011fe4:	4630      	mov	r0, r6
 8011fe6:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8011fea:	f7f1 faf7 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8011fee:	462a      	mov	r2, r5
 8011ff0:	4629      	mov	r1, r5
 8011ff2:	4640      	mov	r0, r8
 8011ff4:	f7f1 faf2 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8011ff8:	4631      	mov	r1, r6
 8011ffa:	4620      	mov	r0, r4
 8011ffc:	f7ff fc50 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012000:	4620      	mov	r0, r4
 8012002:	4641      	mov	r1, r8
 8012004:	f7ff fc4c 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012008:	4620      	mov	r0, r4
 801200a:	b003      	add	sp, #12
 801200c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012010:	0802e534 	.word	0x0802e534
 8012014:	08030ae0 	.word	0x08030ae0

08012018 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8012018:	b570      	push	{r4, r5, r6, lr}
 801201a:	4604      	mov	r4, r0
 801201c:	f7ff fb8e 	bl	801173c <_ZN8touchgfx8DrawableC1Ev>
 8012020:	4b1a      	ldr	r3, [pc, #104]	; (801208c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8012022:	6023      	str	r3, [r4, #0]
 8012024:	2304      	movs	r3, #4
 8012026:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801202a:	2350      	movs	r3, #80	; 0x50
 801202c:	2500      	movs	r5, #0
 801202e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8012030:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8012034:	231e      	movs	r3, #30
 8012036:	62a5      	str	r5, [r4, #40]	; 0x28
 8012038:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 801203c:	8625      	strh	r5, [r4, #48]	; 0x30
 801203e:	8665      	strh	r5, [r4, #50]	; 0x32
 8012040:	86a5      	strh	r5, [r4, #52]	; 0x34
 8012042:	86e3      	strh	r3, [r4, #54]	; 0x36
 8012044:	4630      	mov	r0, r6
 8012046:	f7ff fb79 	bl	801173c <_ZN8touchgfx8DrawableC1Ev>
 801204a:	4b11      	ldr	r3, [pc, #68]	; (8012090 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 801204c:	6625      	str	r5, [r4, #96]	; 0x60
 801204e:	63a3      	str	r3, [r4, #56]	; 0x38
 8012050:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8012054:	2302      	movs	r3, #2
 8012056:	f104 0568 	add.w	r5, r4, #104	; 0x68
 801205a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801205e:	4628      	mov	r0, r5
 8012060:	f7ff ff9c 	bl	8011f9c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8012064:	f005 fcf4 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 8012068:	4621      	mov	r1, r4
 801206a:	3004      	adds	r0, #4
 801206c:	f005 fde6 	bl	8017c3c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012070:	2301      	movs	r3, #1
 8012072:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8012076:	4631      	mov	r1, r6
 8012078:	4620      	mov	r0, r4
 801207a:	f7ff fc11 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801207e:	4620      	mov	r0, r4
 8012080:	4629      	mov	r1, r5
 8012082:	f7ff fc0d 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012086:	4620      	mov	r0, r4
 8012088:	bd70      	pop	{r4, r5, r6, pc}
 801208a:	bf00      	nop
 801208c:	08030620 	.word	0x08030620
 8012090:	080306e4 	.word	0x080306e4

08012094 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8012094:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012096:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801209a:	428b      	cmp	r3, r1
 801209c:	4604      	mov	r4, r0
 801209e:	460d      	mov	r5, r1
 80120a0:	d915      	bls.n	80120ce <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80120a2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 80120a6:	428b      	cmp	r3, r1
 80120a8:	d011      	beq.n	80120ce <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80120aa:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 80120ae:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80120b2:	a802      	add	r0, sp, #8
 80120b4:	f820 3d04 	strh.w	r3, [r0, #-4]!
 80120b8:	f009 f91a 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80120bc:	fb15 f100 	smulbb	r1, r5, r0
 80120c0:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 80120c4:	b209      	sxth	r1, r1
 80120c6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80120ca:	f7f1 f812 	bl	80030f2 <_ZN8touchgfx8Drawable6moveToEss>
 80120ce:	b003      	add	sp, #12
 80120d0:	bd30      	pop	{r4, r5, pc}

080120d2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 80120d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80120d4:	4604      	mov	r4, r0
 80120d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80120da:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 80120de:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80120e2:	4293      	cmp	r3, r2
 80120e4:	460d      	mov	r5, r1
 80120e6:	d01e      	beq.n	8012126 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 80120e8:	a802      	add	r0, sp, #8
 80120ea:	f820 3d04 	strh.w	r3, [r0, #-4]!
 80120ee:	f009 f8ff 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80120f2:	6823      	ldr	r3, [r4, #0]
 80120f4:	fb15 f000 	smulbb	r0, r5, r0
 80120f8:	86a0      	strh	r0, [r4, #52]	; 0x34
 80120fa:	695b      	ldr	r3, [r3, #20]
 80120fc:	4620      	mov	r0, r4
 80120fe:	4798      	blx	r3
 8012100:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012104:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012108:	4620      	mov	r0, r4
 801210a:	f7ff fb2f 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801210e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8012112:	42a9      	cmp	r1, r5
 8012114:	4620      	mov	r0, r4
 8012116:	bf28      	it	cs
 8012118:	4629      	movcs	r1, r5
 801211a:	f7ff ffbb 	bl	8012094 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801211e:	6823      	ldr	r3, [r4, #0]
 8012120:	4620      	mov	r0, r4
 8012122:	695b      	ldr	r3, [r3, #20]
 8012124:	4798      	blx	r3
 8012126:	b003      	add	sp, #12
 8012128:	bd30      	pop	{r4, r5, pc}

0801212a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801212a:	b538      	push	{r3, r4, r5, lr}
 801212c:	4604      	mov	r4, r0
 801212e:	460d      	mov	r5, r1
 8012130:	305c      	adds	r0, #92	; 0x5c
 8012132:	4611      	mov	r1, r2
 8012134:	f002 ff8d 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012138:	4629      	mov	r1, r5
 801213a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801213e:	f002 fa53 	bl	80145e8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8012142:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8012146:	b121      	cbz	r1, 8012152 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8012148:	4620      	mov	r0, r4
 801214a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801214e:	f7ff bfc0 	b.w	80120d2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8012152:	bd38      	pop	{r3, r4, r5, pc}

08012154 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8012154:	3068      	adds	r0, #104	; 0x68
 8012156:	f7ff bfe8 	b.w	801212a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

0801215a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 801215a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 801215e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8012162:	3101      	adds	r1, #1
 8012164:	fb91 f3f2 	sdiv	r3, r1, r2
 8012168:	fb02 1113 	mls	r1, r2, r3, r1
 801216c:	b2c9      	uxtb	r1, r1
 801216e:	f7ff bf91 	b.w	8012094 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08012172 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8012172:	b510      	push	{r4, lr}
 8012174:	4604      	mov	r4, r0
 8012176:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 801217a:	280a      	cmp	r0, #10
 801217c:	d813      	bhi.n	80121a6 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 801217e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012180:	8922      	ldrh	r2, [r4, #8]
 8012182:	441a      	add	r2, r3
 8012184:	b212      	sxth	r2, r2
 8012186:	230a      	movs	r3, #10
 8012188:	2100      	movs	r1, #0
 801218a:	f007 fad1 	bl	8019730 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 801218e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012190:	1a18      	subs	r0, r3, r0
 8012192:	8620      	strh	r0, [r4, #48]	; 0x30
 8012194:	4620      	mov	r0, r4
 8012196:	f7ff fe90 	bl	8011eba <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801219a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 801219e:	3301      	adds	r3, #1
 80121a0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80121a4:	bd10      	pop	{r4, pc}
 80121a6:	2304      	movs	r3, #4
 80121a8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80121ac:	2300      	movs	r3, #0
 80121ae:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80121b2:	8623      	strh	r3, [r4, #48]	; 0x30
 80121b4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80121b8:	f7ff ffcf 	bl	801215a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 80121bc:	e7ea      	b.n	8012194 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

080121be <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 80121be:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80121c2:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80121c6:	4411      	add	r1, r2
 80121c8:	3901      	subs	r1, #1
 80121ca:	fb91 f3f2 	sdiv	r3, r1, r2
 80121ce:	fb02 1113 	mls	r1, r2, r3, r1
 80121d2:	b2c9      	uxtb	r1, r1
 80121d4:	f7ff bf5e 	b.w	8012094 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080121d8 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 80121d8:	b510      	push	{r4, lr}
 80121da:	4604      	mov	r4, r0
 80121dc:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80121e0:	280a      	cmp	r0, #10
 80121e2:	d813      	bhi.n	801220c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 80121e4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80121e6:	8922      	ldrh	r2, [r4, #8]
 80121e8:	1ad2      	subs	r2, r2, r3
 80121ea:	b212      	sxth	r2, r2
 80121ec:	230a      	movs	r3, #10
 80121ee:	2100      	movs	r1, #0
 80121f0:	f007 fa9e 	bl	8019730 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80121f4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80121f6:	4418      	add	r0, r3
 80121f8:	8620      	strh	r0, [r4, #48]	; 0x30
 80121fa:	4620      	mov	r0, r4
 80121fc:	f7ff fe5d 	bl	8011eba <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012200:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012204:	3301      	adds	r3, #1
 8012206:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801220a:	bd10      	pop	{r4, pc}
 801220c:	2304      	movs	r3, #4
 801220e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012212:	2300      	movs	r3, #0
 8012214:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012218:	8623      	strh	r3, [r4, #48]	; 0x30
 801221a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801221e:	f7ff ffce 	bl	80121be <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8012222:	e7ea      	b.n	80121fa <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08012224 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8012224:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012228:	b90b      	cbnz	r3, 801222e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801222a:	f7ff be73 	b.w	8011f14 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801222e:	2b01      	cmp	r3, #1
 8012230:	d101      	bne.n	8012236 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8012232:	f7ff be91 	b.w	8011f58 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8012236:	2b02      	cmp	r3, #2
 8012238:	d101      	bne.n	801223e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801223a:	f7ff bf9a 	b.w	8012172 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801223e:	2b03      	cmp	r3, #3
 8012240:	d101      	bne.n	8012246 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8012242:	f7ff bfc9 	b.w	80121d8 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8012246:	4770      	bx	lr

08012248 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8012248:	b510      	push	{r4, lr}
 801224a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801224e:	428b      	cmp	r3, r1
 8012250:	4604      	mov	r4, r0
 8012252:	d907      	bls.n	8012264 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8012254:	3068      	adds	r0, #104	; 0x68
 8012256:	f7ff ff1d 	bl	8012094 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801225a:	4620      	mov	r0, r4
 801225c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012260:	f7ff be2b 	b.w	8011eba <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012264:	bd10      	pop	{r4, pc}

08012266 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8012266:	b538      	push	{r3, r4, r5, lr}
 8012268:	4604      	mov	r4, r0
 801226a:	3038      	adds	r0, #56	; 0x38
 801226c:	460d      	mov	r5, r1
 801226e:	f000 f963 	bl	8012538 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8012272:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8012276:	3101      	adds	r1, #1
 8012278:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801227c:	b2c9      	uxtb	r1, r1
 801227e:	f7ff ff28 	bl	80120d2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8012282:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8012286:	4620      	mov	r0, r4
 8012288:	f7ff ffde 	bl	8012248 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801228c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8012290:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8012294:	4620      	mov	r0, r4
 8012296:	f7ff fa69 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801229a:	bd38      	pop	{r3, r4, r5, pc}

0801229c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801229c:	b538      	push	{r3, r4, r5, lr}
 801229e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80122a2:	4604      	mov	r4, r0
 80122a4:	b1e3      	cbz	r3, 80122e0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80122a6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80122a8:	b1d3      	cbz	r3, 80122e0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80122aa:	428b      	cmp	r3, r1
 80122ac:	d125      	bne.n	80122fa <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 80122ae:	4619      	mov	r1, r3
 80122b0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80122b4:	f000 f9c0 	bl	8012638 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 80122b8:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80122bc:	3901      	subs	r1, #1
 80122be:	b2c9      	uxtb	r1, r1
 80122c0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80122c4:	f7ff ff05 	bl	80120d2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80122c8:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 80122cc:	b94d      	cbnz	r5, 80122e2 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 80122ce:	6823      	ldr	r3, [r4, #0]
 80122d0:	4620      	mov	r0, r4
 80122d2:	695b      	ldr	r3, [r3, #20]
 80122d4:	4798      	blx	r3
 80122d6:	462a      	mov	r2, r5
 80122d8:	4629      	mov	r1, r5
 80122da:	4620      	mov	r0, r4
 80122dc:	f7ff fa46 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80122e0:	bd38      	pop	{r3, r4, r5, pc}
 80122e2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80122e6:	3d01      	subs	r5, #1
 80122e8:	42a9      	cmp	r1, r5
 80122ea:	bfa8      	it	ge
 80122ec:	4629      	movge	r1, r5
 80122ee:	4620      	mov	r0, r4
 80122f0:	b2c9      	uxtb	r1, r1
 80122f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80122f6:	f7ff bfa7 	b.w	8012248 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80122fa:	699b      	ldr	r3, [r3, #24]
 80122fc:	e7d4      	b.n	80122a8 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

080122fe <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 80122fe:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012302:	4770      	bx	lr

08012304 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8012304:	b538      	push	{r3, r4, r5, lr}
 8012306:	7882      	ldrb	r2, [r0, #2]
 8012308:	6843      	ldr	r3, [r0, #4]
 801230a:	4604      	mov	r4, r0
 801230c:	460d      	mov	r5, r1
 801230e:	b98a      	cbnz	r2, 8012334 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8012310:	4299      	cmp	r1, r3
 8012312:	d101      	bne.n	8012318 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8012314:	2301      	movs	r3, #1
 8012316:	7083      	strb	r3, [r0, #2]
 8012318:	6863      	ldr	r3, [r4, #4]
 801231a:	42ab      	cmp	r3, r5
 801231c:	d009      	beq.n	8012332 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801231e:	7a23      	ldrb	r3, [r4, #8]
 8012320:	2b01      	cmp	r3, #1
 8012322:	d11b      	bne.n	801235c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8012324:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8012328:	f9b4 2000 	ldrsh.w	r2, [r4]
 801232c:	429a      	cmp	r2, r3
 801232e:	bfb8      	it	lt
 8012330:	8023      	strhlt	r3, [r4, #0]
 8012332:	bd38      	pop	{r3, r4, r5, pc}
 8012334:	7a02      	ldrb	r2, [r0, #8]
 8012336:	2a01      	cmp	r2, #1
 8012338:	d108      	bne.n	801234c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801233a:	895b      	ldrh	r3, [r3, #10]
 801233c:	88c9      	ldrh	r1, [r1, #6]
 801233e:	1ac9      	subs	r1, r1, r3
 8012340:	682b      	ldr	r3, [r5, #0]
 8012342:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012344:	b209      	sxth	r1, r1
 8012346:	4628      	mov	r0, r5
 8012348:	4798      	blx	r3
 801234a:	e7e5      	b.n	8012318 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801234c:	2a02      	cmp	r2, #2
 801234e:	d1e3      	bne.n	8012318 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8012350:	891b      	ldrh	r3, [r3, #8]
 8012352:	8889      	ldrh	r1, [r1, #4]
 8012354:	1ac9      	subs	r1, r1, r3
 8012356:	682b      	ldr	r3, [r5, #0]
 8012358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801235a:	e7f3      	b.n	8012344 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801235c:	2b02      	cmp	r3, #2
 801235e:	d1e8      	bne.n	8012332 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8012360:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8012364:	e7e0      	b.n	8012328 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08012366 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8012366:	4770      	bx	lr

08012368 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8012368:	4770      	bx	lr

0801236a <_ZN8touchgfx10ListLayoutD1Ev>:
 801236a:	4770      	bx	lr

0801236c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 801236c:	b430      	push	{r4, r5}
 801236e:	68c5      	ldr	r5, [r0, #12]
 8012370:	6844      	ldr	r4, [r0, #4]
 8012372:	106a      	asrs	r2, r5, #1
 8012374:	4603      	mov	r3, r0
 8012376:	07ed      	lsls	r5, r5, #31
 8012378:	eb04 0002 	add.w	r0, r4, r2
 801237c:	689b      	ldr	r3, [r3, #8]
 801237e:	bf48      	it	mi
 8012380:	58a2      	ldrmi	r2, [r4, r2]
 8012382:	bc30      	pop	{r4, r5}
 8012384:	bf48      	it	mi
 8012386:	58d3      	ldrmi	r3, [r2, r3]
 8012388:	4718      	bx	r3

0801238a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801238a:	6843      	ldr	r3, [r0, #4]
 801238c:	b12b      	cbz	r3, 801239a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 801238e:	6883      	ldr	r3, [r0, #8]
 8012390:	b92b      	cbnz	r3, 801239e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8012392:	68c0      	ldr	r0, [r0, #12]
 8012394:	f000 0001 	and.w	r0, r0, #1
 8012398:	4770      	bx	lr
 801239a:	4618      	mov	r0, r3
 801239c:	4770      	bx	lr
 801239e:	2001      	movs	r0, #1
 80123a0:	4770      	bx	lr

080123a2 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 80123a2:	b430      	push	{r4, r5}
 80123a4:	68c5      	ldr	r5, [r0, #12]
 80123a6:	6844      	ldr	r4, [r0, #4]
 80123a8:	106a      	asrs	r2, r5, #1
 80123aa:	4603      	mov	r3, r0
 80123ac:	07ed      	lsls	r5, r5, #31
 80123ae:	eb04 0002 	add.w	r0, r4, r2
 80123b2:	689b      	ldr	r3, [r3, #8]
 80123b4:	bf48      	it	mi
 80123b6:	58a2      	ldrmi	r2, [r4, r2]
 80123b8:	bc30      	pop	{r4, r5}
 80123ba:	bf48      	it	mi
 80123bc:	58d3      	ldrmi	r3, [r2, r3]
 80123be:	4718      	bx	r3

080123c0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 80123c0:	6843      	ldr	r3, [r0, #4]
 80123c2:	b12b      	cbz	r3, 80123d0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 80123c4:	6883      	ldr	r3, [r0, #8]
 80123c6:	b92b      	cbnz	r3, 80123d4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 80123c8:	68c0      	ldr	r0, [r0, #12]
 80123ca:	f000 0001 	and.w	r0, r0, #1
 80123ce:	4770      	bx	lr
 80123d0:	4618      	mov	r0, r3
 80123d2:	4770      	bx	lr
 80123d4:	2001      	movs	r0, #1
 80123d6:	4770      	bx	lr

080123d8 <_ZN8touchgfx10ListLayoutD0Ev>:
 80123d8:	b510      	push	{r4, lr}
 80123da:	2130      	movs	r1, #48	; 0x30
 80123dc:	4604      	mov	r4, r0
 80123de:	f019 fbec 	bl	802bbba <_ZdlPvj>
 80123e2:	4620      	mov	r0, r4
 80123e4:	bd10      	pop	{r4, pc}

080123e6 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 80123e6:	b510      	push	{r4, lr}
 80123e8:	2110      	movs	r1, #16
 80123ea:	4604      	mov	r4, r0
 80123ec:	f019 fbe5 	bl	802bbba <_ZdlPvj>
 80123f0:	4620      	mov	r0, r4
 80123f2:	bd10      	pop	{r4, pc}

080123f4 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 80123f4:	b510      	push	{r4, lr}
 80123f6:	2110      	movs	r1, #16
 80123f8:	4604      	mov	r4, r0
 80123fa:	f019 fbde 	bl	802bbba <_ZdlPvj>
 80123fe:	4620      	mov	r0, r4
 8012400:	bd10      	pop	{r4, pc}

08012402 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8012402:	4603      	mov	r3, r0
 8012404:	4608      	mov	r0, r1
 8012406:	789a      	ldrb	r2, [r3, #2]
 8012408:	b992      	cbnz	r2, 8012430 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801240a:	685a      	ldr	r2, [r3, #4]
 801240c:	428a      	cmp	r2, r1
 801240e:	d102      	bne.n	8012416 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8012410:	2201      	movs	r2, #1
 8012412:	709a      	strb	r2, [r3, #2]
 8012414:	4770      	bx	lr
 8012416:	7a1a      	ldrb	r2, [r3, #8]
 8012418:	2a01      	cmp	r2, #1
 801241a:	d104      	bne.n	8012426 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801241c:	88ca      	ldrh	r2, [r1, #6]
 801241e:	8949      	ldrh	r1, [r1, #10]
 8012420:	440a      	add	r2, r1
 8012422:	801a      	strh	r2, [r3, #0]
 8012424:	4770      	bx	lr
 8012426:	2a02      	cmp	r2, #2
 8012428:	d116      	bne.n	8012458 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801242a:	888a      	ldrh	r2, [r1, #4]
 801242c:	8909      	ldrh	r1, [r1, #8]
 801242e:	e7f7      	b.n	8012420 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8012430:	7a1a      	ldrb	r2, [r3, #8]
 8012432:	2a01      	cmp	r2, #1
 8012434:	d107      	bne.n	8012446 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8012436:	685b      	ldr	r3, [r3, #4]
 8012438:	8959      	ldrh	r1, [r3, #10]
 801243a:	88c3      	ldrh	r3, [r0, #6]
 801243c:	4419      	add	r1, r3
 801243e:	6803      	ldr	r3, [r0, #0]
 8012440:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012442:	b209      	sxth	r1, r1
 8012444:	4718      	bx	r3
 8012446:	2a02      	cmp	r2, #2
 8012448:	d106      	bne.n	8012458 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801244a:	685b      	ldr	r3, [r3, #4]
 801244c:	8919      	ldrh	r1, [r3, #8]
 801244e:	8883      	ldrh	r3, [r0, #4]
 8012450:	4419      	add	r1, r3
 8012452:	6803      	ldr	r3, [r0, #0]
 8012454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012456:	e7f4      	b.n	8012442 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8012458:	4770      	bx	lr

0801245a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801245a:	2200      	movs	r2, #0
 801245c:	b510      	push	{r4, lr}
 801245e:	4611      	mov	r1, r2
 8012460:	4604      	mov	r4, r0
 8012462:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8012464:	f7ff f982 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012468:	4620      	mov	r0, r4
 801246a:	f7ff fa26 	bl	80118ba <_ZN8touchgfx9Container9removeAllEv>
 801246e:	6960      	ldr	r0, [r4, #20]
 8012470:	b120      	cbz	r0, 801247c <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8012472:	6803      	ldr	r3, [r0, #0]
 8012474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012478:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801247a:	4718      	bx	r3
 801247c:	bd10      	pop	{r4, pc}
	...

08012480 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8012480:	b530      	push	{r4, r5, lr}
 8012482:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012486:	428b      	cmp	r3, r1
 8012488:	b085      	sub	sp, #20
 801248a:	4604      	mov	r4, r0
 801248c:	d017      	beq.n	80124be <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801248e:	2500      	movs	r5, #0
 8012490:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8012494:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8012496:	462a      	mov	r2, r5
 8012498:	4629      	mov	r1, r5
 801249a:	f7ff f967 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801249e:	4b09      	ldr	r3, [pc, #36]	; (80124c4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 80124a0:	e9cd 3400 	strd	r3, r4, [sp]
 80124a4:	4b08      	ldr	r3, [pc, #32]	; (80124c8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 80124a6:	e9cd 3502 	strd	r3, r5, [sp, #8]
 80124aa:	6823      	ldr	r3, [r4, #0]
 80124ac:	4620      	mov	r0, r4
 80124ae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80124b0:	4669      	mov	r1, sp
 80124b2:	4798      	blx	r3
 80124b4:	6960      	ldr	r0, [r4, #20]
 80124b6:	b110      	cbz	r0, 80124be <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80124b8:	6803      	ldr	r3, [r0, #0]
 80124ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80124bc:	4798      	blx	r3
 80124be:	b005      	add	sp, #20
 80124c0:	bd30      	pop	{r4, r5, pc}
 80124c2:	bf00      	nop
 80124c4:	080306b4 	.word	0x080306b4
 80124c8:	08012531 	.word	0x08012531

080124cc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 80124cc:	b538      	push	{r3, r4, r5, lr}
 80124ce:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80124d2:	2b01      	cmp	r3, #1
 80124d4:	460d      	mov	r5, r1
 80124d6:	4604      	mov	r4, r0
 80124d8:	4611      	mov	r1, r2
 80124da:	d002      	beq.n	80124e2 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 80124dc:	2b02      	cmp	r3, #2
 80124de:	d015      	beq.n	801250c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 80124e0:	bd38      	pop	{r3, r4, r5, pc}
 80124e2:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80124e6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80124ea:	429a      	cmp	r2, r3
 80124ec:	bfb8      	it	lt
 80124ee:	8103      	strhlt	r3, [r0, #8]
 80124f0:	896a      	ldrh	r2, [r5, #10]
 80124f2:	8943      	ldrh	r3, [r0, #10]
 80124f4:	4413      	add	r3, r2
 80124f6:	8143      	strh	r3, [r0, #10]
 80124f8:	460a      	mov	r2, r1
 80124fa:	4628      	mov	r0, r5
 80124fc:	2100      	movs	r1, #0
 80124fe:	f7f1 f86d 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8012502:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012504:	896a      	ldrh	r2, [r5, #10]
 8012506:	4413      	add	r3, r2
 8012508:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801250a:	e7e9      	b.n	80124e0 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801250c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8012510:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012514:	429a      	cmp	r2, r3
 8012516:	bfb8      	it	lt
 8012518:	8143      	strhlt	r3, [r0, #10]
 801251a:	892a      	ldrh	r2, [r5, #8]
 801251c:	8903      	ldrh	r3, [r0, #8]
 801251e:	4413      	add	r3, r2
 8012520:	8103      	strh	r3, [r0, #8]
 8012522:	2200      	movs	r2, #0
 8012524:	4628      	mov	r0, r5
 8012526:	f7f1 f859 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 801252a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801252c:	892a      	ldrh	r2, [r5, #8]
 801252e:	e7ea      	b.n	8012506 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08012530 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8012530:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8012534:	f7ff bfca 	b.w	80124cc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08012538 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8012538:	b570      	push	{r4, r5, r6, lr}
 801253a:	4604      	mov	r4, r0
 801253c:	460d      	mov	r5, r1
 801253e:	f7ff fff7 	bl	8012530 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8012542:	4620      	mov	r0, r4
 8012544:	4629      	mov	r1, r5
 8012546:	f7ff f9ab 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801254a:	6960      	ldr	r0, [r4, #20]
 801254c:	b120      	cbz	r0, 8012558 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801254e:	6803      	ldr	r3, [r0, #0]
 8012550:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012554:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012556:	4718      	bx	r3
 8012558:	bd70      	pop	{r4, r5, r6, pc}
	...

0801255c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801255c:	b530      	push	{r4, r5, lr}
 801255e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012560:	b089      	sub	sp, #36	; 0x24
 8012562:	4604      	mov	r4, r0
 8012564:	4615      	mov	r5, r2
 8012566:	b92b      	cbnz	r3, 8012574 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8012568:	6803      	ldr	r3, [r0, #0]
 801256a:	4611      	mov	r1, r2
 801256c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801256e:	4798      	blx	r3
 8012570:	b009      	add	sp, #36	; 0x24
 8012572:	bd30      	pop	{r4, r5, pc}
 8012574:	f7ff f9ec 	bl	8011950 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8012578:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 801257c:	f88d 200c 	strb.w	r2, [sp, #12]
 8012580:	4a0f      	ldr	r2, [pc, #60]	; (80125c0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8012582:	9204      	str	r2, [sp, #16]
 8012584:	aa01      	add	r2, sp, #4
 8012586:	9205      	str	r2, [sp, #20]
 8012588:	4a0e      	ldr	r2, [pc, #56]	; (80125c4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801258a:	9502      	str	r5, [sp, #8]
 801258c:	2300      	movs	r3, #0
 801258e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8012592:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012596:	f88d 3006 	strb.w	r3, [sp, #6]
 801259a:	6823      	ldr	r3, [r4, #0]
 801259c:	a904      	add	r1, sp, #16
 801259e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80125a0:	4620      	mov	r0, r4
 80125a2:	4798      	blx	r3
 80125a4:	4620      	mov	r0, r4
 80125a6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80125aa:	4629      	mov	r1, r5
 80125ac:	f7ff ff8e 	bl	80124cc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 80125b0:	6960      	ldr	r0, [r4, #20]
 80125b2:	2800      	cmp	r0, #0
 80125b4:	d0dc      	beq.n	8012570 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80125b6:	6803      	ldr	r3, [r0, #0]
 80125b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80125ba:	4798      	blx	r3
 80125bc:	e7d8      	b.n	8012570 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80125be:	bf00      	nop
 80125c0:	080306cc 	.word	0x080306cc
 80125c4:	08012403 	.word	0x08012403

080125c8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 80125c8:	b538      	push	{r3, r4, r5, lr}
 80125ca:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80125ce:	2b01      	cmp	r3, #1
 80125d0:	4604      	mov	r4, r0
 80125d2:	460d      	mov	r5, r1
 80125d4:	d002      	beq.n	80125dc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 80125d6:	2b02      	cmp	r3, #2
 80125d8:	d018      	beq.n	801260c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 80125da:	bd38      	pop	{r3, r4, r5, pc}
 80125dc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80125e0:	4293      	cmp	r3, r2
 80125e2:	bfc8      	it	gt
 80125e4:	8102      	strhgt	r2, [r0, #8]
 80125e6:	894a      	ldrh	r2, [r1, #10]
 80125e8:	8943      	ldrh	r3, [r0, #10]
 80125ea:	1a9b      	subs	r3, r3, r2
 80125ec:	8143      	strh	r3, [r0, #10]
 80125ee:	680b      	ldr	r3, [r1, #0]
 80125f0:	4628      	mov	r0, r5
 80125f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80125f4:	2100      	movs	r1, #0
 80125f6:	4798      	blx	r3
 80125f8:	682b      	ldr	r3, [r5, #0]
 80125fa:	2100      	movs	r1, #0
 80125fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80125fe:	4628      	mov	r0, r5
 8012600:	4798      	blx	r3
 8012602:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012604:	896a      	ldrh	r2, [r5, #10]
 8012606:	1a9b      	subs	r3, r3, r2
 8012608:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801260a:	e7e6      	b.n	80125da <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801260c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012610:	4293      	cmp	r3, r2
 8012612:	bfc8      	it	gt
 8012614:	8142      	strhgt	r2, [r0, #10]
 8012616:	890a      	ldrh	r2, [r1, #8]
 8012618:	8903      	ldrh	r3, [r0, #8]
 801261a:	1a9b      	subs	r3, r3, r2
 801261c:	8103      	strh	r3, [r0, #8]
 801261e:	680b      	ldr	r3, [r1, #0]
 8012620:	4628      	mov	r0, r5
 8012622:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012624:	2100      	movs	r1, #0
 8012626:	4798      	blx	r3
 8012628:	682b      	ldr	r3, [r5, #0]
 801262a:	2100      	movs	r1, #0
 801262c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801262e:	4628      	mov	r0, r5
 8012630:	4798      	blx	r3
 8012632:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012634:	892a      	ldrh	r2, [r5, #8]
 8012636:	e7e6      	b.n	8012606 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08012638 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8012638:	b530      	push	{r4, r5, lr}
 801263a:	b089      	sub	sp, #36	; 0x24
 801263c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8012640:	f88d 200c 	strb.w	r2, [sp, #12]
 8012644:	4a13      	ldr	r2, [pc, #76]	; (8012694 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8012646:	9204      	str	r2, [sp, #16]
 8012648:	aa01      	add	r2, sp, #4
 801264a:	9205      	str	r2, [sp, #20]
 801264c:	4a12      	ldr	r2, [pc, #72]	; (8012698 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801264e:	9102      	str	r1, [sp, #8]
 8012650:	2300      	movs	r3, #0
 8012652:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012656:	f88d 3006 	strb.w	r3, [sp, #6]
 801265a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801265e:	6803      	ldr	r3, [r0, #0]
 8012660:	460d      	mov	r5, r1
 8012662:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012664:	a904      	add	r1, sp, #16
 8012666:	4604      	mov	r4, r0
 8012668:	4798      	blx	r3
 801266a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 801266e:	b14b      	cbz	r3, 8012684 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8012670:	4629      	mov	r1, r5
 8012672:	4620      	mov	r0, r4
 8012674:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8012678:	f7ff ffa6 	bl	80125c8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 801267c:	4629      	mov	r1, r5
 801267e:	4620      	mov	r0, r4
 8012680:	f7ff f94f 	bl	8011922 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012684:	6960      	ldr	r0, [r4, #20]
 8012686:	b110      	cbz	r0, 801268e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8012688:	6803      	ldr	r3, [r0, #0]
 801268a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801268c:	4798      	blx	r3
 801268e:	b009      	add	sp, #36	; 0x24
 8012690:	bd30      	pop	{r4, r5, pc}
 8012692:	bf00      	nop
 8012694:	080306cc 	.word	0x080306cc
 8012698:	08012305 	.word	0x08012305

0801269c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801269c:	b513      	push	{r0, r1, r4, lr}
 801269e:	6803      	ldr	r3, [r0, #0]
 80126a0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80126a4:	2300      	movs	r3, #0
 80126a6:	e9cd 3300 	strd	r3, r3, [sp]
 80126aa:	466b      	mov	r3, sp
 80126ac:	47a0      	blx	r4
 80126ae:	b002      	add	sp, #8
 80126b0:	bd10      	pop	{r4, pc}

080126b2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80126b2:	2301      	movs	r3, #1
 80126b4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80126b8:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80126bc:	4770      	bx	lr

080126be <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80126be:	2301      	movs	r3, #1
 80126c0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80126c4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80126c8:	4770      	bx	lr

080126ca <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80126ca:	6843      	ldr	r3, [r0, #4]
 80126cc:	2201      	movs	r2, #1
 80126ce:	725a      	strb	r2, [r3, #9]
 80126d0:	6840      	ldr	r0, [r0, #4]
 80126d2:	6803      	ldr	r3, [r0, #0]
 80126d4:	691b      	ldr	r3, [r3, #16]
 80126d6:	4718      	bx	r3

080126d8 <_ZN8touchgfx3HAL8flushDMAEv>:
 80126d8:	6840      	ldr	r0, [r0, #4]
 80126da:	6803      	ldr	r3, [r0, #0]
 80126dc:	689b      	ldr	r3, [r3, #8]
 80126de:	4718      	bx	r3

080126e0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80126e0:	b530      	push	{r4, r5, lr}
 80126e2:	b08b      	sub	sp, #44	; 0x2c
 80126e4:	6804      	ldr	r4, [r0, #0]
 80126e6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80126ea:	9509      	str	r5, [sp, #36]	; 0x24
 80126ec:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80126f0:	9508      	str	r5, [sp, #32]
 80126f2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80126f6:	9507      	str	r5, [sp, #28]
 80126f8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80126fc:	9506      	str	r5, [sp, #24]
 80126fe:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8012702:	9505      	str	r5, [sp, #20]
 8012704:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8012708:	9504      	str	r5, [sp, #16]
 801270a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801270e:	9503      	str	r5, [sp, #12]
 8012710:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8012714:	9502      	str	r5, [sp, #8]
 8012716:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801271a:	e9cd 3500 	strd	r3, r5, [sp]
 801271e:	4613      	mov	r3, r2
 8012720:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8012722:	2200      	movs	r2, #0
 8012724:	47a0      	blx	r4
 8012726:	b00b      	add	sp, #44	; 0x2c
 8012728:	bd30      	pop	{r4, r5, pc}
	...

0801272c <_ZN8touchgfx3HAL10beginFrameEv>:
 801272c:	4b04      	ldr	r3, [pc, #16]	; (8012740 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801272e:	781b      	ldrb	r3, [r3, #0]
 8012730:	b123      	cbz	r3, 801273c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8012732:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8012736:	f080 0001 	eor.w	r0, r0, #1
 801273a:	4770      	bx	lr
 801273c:	2001      	movs	r0, #1
 801273e:	4770      	bx	lr
 8012740:	2001384a 	.word	0x2001384a

08012744 <_ZN8touchgfx3HAL8endFrameEv>:
 8012744:	b510      	push	{r4, lr}
 8012746:	4604      	mov	r4, r0
 8012748:	6840      	ldr	r0, [r0, #4]
 801274a:	6803      	ldr	r3, [r0, #0]
 801274c:	689b      	ldr	r3, [r3, #8]
 801274e:	4798      	blx	r3
 8012750:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8012754:	b113      	cbz	r3, 801275c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8012756:	2301      	movs	r3, #1
 8012758:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801275c:	bd10      	pop	{r4, pc}

0801275e <_ZN8touchgfx3HAL10initializeEv>:
 801275e:	b510      	push	{r4, lr}
 8012760:	4604      	mov	r4, r0
 8012762:	f7f0 faa3 	bl	8002cac <_ZN8touchgfx10OSWrappers10initializeEv>
 8012766:	f7f0 f9af 	bl	8002ac8 <_ZN8touchgfx4GPIO4initEv>
 801276a:	6860      	ldr	r0, [r4, #4]
 801276c:	6803      	ldr	r3, [r0, #0]
 801276e:	68db      	ldr	r3, [r3, #12]
 8012770:	4798      	blx	r3
 8012772:	68e0      	ldr	r0, [r4, #12]
 8012774:	6803      	ldr	r3, [r0, #0]
 8012776:	689b      	ldr	r3, [r3, #8]
 8012778:	4798      	blx	r3
 801277a:	6823      	ldr	r3, [r4, #0]
 801277c:	4620      	mov	r0, r4
 801277e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012780:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012784:	4718      	bx	r3
	...

08012788 <_ZN8touchgfx3HAL4tickEv>:
 8012788:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801278a:	6803      	ldr	r3, [r0, #0]
 801278c:	4d5b      	ldr	r5, [pc, #364]	; (80128fc <_ZN8touchgfx3HAL4tickEv+0x174>)
 801278e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012792:	4604      	mov	r4, r0
 8012794:	4798      	blx	r3
 8012796:	2800      	cmp	r0, #0
 8012798:	f000 8095 	beq.w	80128c6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801279c:	2001      	movs	r0, #1
 801279e:	f7f0 f945 	bl	8002a2c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80127a2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80127a6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80127aa:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80127ae:	2600      	movs	r6, #0
 80127b0:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80127b4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80127b8:	b133      	cbz	r3, 80127c8 <_ZN8touchgfx3HAL4tickEv+0x40>
 80127ba:	6823      	ldr	r3, [r4, #0]
 80127bc:	4620      	mov	r0, r4
 80127be:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80127c2:	4798      	blx	r3
 80127c4:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 80127c8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80127cc:	6862      	ldr	r2, [r4, #4]
 80127ce:	f083 0301 	eor.w	r3, r3, #1
 80127d2:	7253      	strb	r3, [r2, #9]
 80127d4:	2601      	movs	r6, #1
 80127d6:	702e      	strb	r6, [r5, #0]
 80127d8:	f005 f93a 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 80127dc:	6803      	ldr	r3, [r0, #0]
 80127de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80127e0:	4798      	blx	r3
 80127e2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80127e6:	b90b      	cbnz	r3, 80127ec <_ZN8touchgfx3HAL4tickEv+0x64>
 80127e8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80127ec:	f005 f930 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 80127f0:	6803      	ldr	r3, [r0, #0]
 80127f2:	695b      	ldr	r3, [r3, #20]
 80127f4:	4798      	blx	r3
 80127f6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80127f8:	6803      	ldr	r3, [r0, #0]
 80127fa:	691b      	ldr	r3, [r3, #16]
 80127fc:	4798      	blx	r3
 80127fe:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8012802:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8012806:	3b01      	subs	r3, #1
 8012808:	b2db      	uxtb	r3, r3
 801280a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801280e:	b10a      	cbz	r2, 8012814 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8012810:	2b00      	cmp	r3, #0
 8012812:	d1eb      	bne.n	80127ec <_ZN8touchgfx3HAL4tickEv+0x64>
 8012814:	4a3a      	ldr	r2, [pc, #232]	; (8012900 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8012816:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801281a:	7813      	ldrb	r3, [r2, #0]
 801281c:	3301      	adds	r3, #1
 801281e:	b25b      	sxtb	r3, r3
 8012820:	4299      	cmp	r1, r3
 8012822:	7013      	strb	r3, [r2, #0]
 8012824:	dc10      	bgt.n	8012848 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012826:	68e0      	ldr	r0, [r4, #12]
 8012828:	2300      	movs	r3, #0
 801282a:	7013      	strb	r3, [r2, #0]
 801282c:	6803      	ldr	r3, [r0, #0]
 801282e:	aa03      	add	r2, sp, #12
 8012830:	68db      	ldr	r3, [r3, #12]
 8012832:	a902      	add	r1, sp, #8
 8012834:	4798      	blx	r3
 8012836:	6823      	ldr	r3, [r4, #0]
 8012838:	2800      	cmp	r0, #0
 801283a:	d050      	beq.n	80128de <_ZN8touchgfx3HAL4tickEv+0x156>
 801283c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012840:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8012844:	4620      	mov	r0, r4
 8012846:	4798      	blx	r3
 8012848:	6960      	ldr	r0, [r4, #20]
 801284a:	2300      	movs	r3, #0
 801284c:	f88d 3007 	strb.w	r3, [sp, #7]
 8012850:	b158      	cbz	r0, 801286a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8012852:	6803      	ldr	r3, [r0, #0]
 8012854:	f10d 0107 	add.w	r1, sp, #7
 8012858:	68db      	ldr	r3, [r3, #12]
 801285a:	4798      	blx	r3
 801285c:	b128      	cbz	r0, 801286a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801285e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8012860:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8012864:	6803      	ldr	r3, [r0, #0]
 8012866:	68db      	ldr	r3, [r3, #12]
 8012868:	4798      	blx	r3
 801286a:	f104 001c 	add.w	r0, r4, #28
 801286e:	f016 f8c3 	bl	80289f8 <_ZN8touchgfx8Gestures4tickEv>
 8012872:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8012876:	b30b      	cbz	r3, 80128bc <_ZN8touchgfx3HAL4tickEv+0x134>
 8012878:	6920      	ldr	r0, [r4, #16]
 801287a:	6803      	ldr	r3, [r0, #0]
 801287c:	691b      	ldr	r3, [r3, #16]
 801287e:	4798      	blx	r3
 8012880:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8012882:	4606      	mov	r6, r0
 8012884:	b903      	cbnz	r3, 8012888 <_ZN8touchgfx3HAL4tickEv+0x100>
 8012886:	6760      	str	r0, [r4, #116]	; 0x74
 8012888:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801288a:	4a1e      	ldr	r2, [pc, #120]	; (8012904 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801288c:	1af3      	subs	r3, r6, r3
 801288e:	4293      	cmp	r3, r2
 8012890:	d914      	bls.n	80128bc <_ZN8touchgfx3HAL4tickEv+0x134>
 8012892:	6920      	ldr	r0, [r4, #16]
 8012894:	6803      	ldr	r3, [r0, #0]
 8012896:	699b      	ldr	r3, [r3, #24]
 8012898:	4798      	blx	r3
 801289a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801289c:	2264      	movs	r2, #100	; 0x64
 801289e:	1af3      	subs	r3, r6, r3
 80128a0:	fbb3 f3f2 	udiv	r3, r3, r2
 80128a4:	fbb0 f0f3 	udiv	r0, r0, r3
 80128a8:	2800      	cmp	r0, #0
 80128aa:	dc1d      	bgt.n	80128e8 <_ZN8touchgfx3HAL4tickEv+0x160>
 80128ac:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 80128b0:	6920      	ldr	r0, [r4, #16]
 80128b2:	6803      	ldr	r3, [r0, #0]
 80128b4:	2100      	movs	r1, #0
 80128b6:	69db      	ldr	r3, [r3, #28]
 80128b8:	4798      	blx	r3
 80128ba:	6766      	str	r6, [r4, #116]	; 0x74
 80128bc:	f005 f8c8 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 80128c0:	6803      	ldr	r3, [r0, #0]
 80128c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80128c4:	4798      	blx	r3
 80128c6:	6823      	ldr	r3, [r4, #0]
 80128c8:	4620      	mov	r0, r4
 80128ca:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80128ce:	4798      	blx	r3
 80128d0:	2001      	movs	r0, #1
 80128d2:	f7f0 f8c3 	bl	8002a5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80128d6:	2300      	movs	r3, #0
 80128d8:	702b      	strb	r3, [r5, #0]
 80128da:	b004      	add	sp, #16
 80128dc:	bd70      	pop	{r4, r5, r6, pc}
 80128de:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80128e2:	4620      	mov	r0, r4
 80128e4:	4798      	blx	r3
 80128e6:	e7af      	b.n	8012848 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80128e8:	2863      	cmp	r0, #99	; 0x63
 80128ea:	bfcb      	itete	gt
 80128ec:	2300      	movgt	r3, #0
 80128ee:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80128f2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80128f6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80128fa:	e7d9      	b.n	80128b0 <_ZN8touchgfx3HAL4tickEv+0x128>
 80128fc:	20013850 	.word	0x20013850
 8012900:	20013851 	.word	0x20013851
 8012904:	05f5e100 	.word	0x05f5e100

08012908 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8012908:	b510      	push	{r4, lr}
 801290a:	4604      	mov	r4, r0
 801290c:	f7f0 f9fe 	bl	8002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8012910:	6863      	ldr	r3, [r4, #4]
 8012912:	2200      	movs	r2, #0
 8012914:	729a      	strb	r2, [r3, #10]
 8012916:	bd10      	pop	{r4, pc}

08012918 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8012918:	65c1      	str	r1, [r0, #92]	; 0x5c
 801291a:	301c      	adds	r0, #28
 801291c:	f016 b86a 	b.w	80289f4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08012920 <_ZN8touchgfx3HAL5touchEll>:
 8012920:	b530      	push	{r4, r5, lr}
 8012922:	b087      	sub	sp, #28
 8012924:	4604      	mov	r4, r0
 8012926:	a804      	add	r0, sp, #16
 8012928:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801292c:	f004 fe5c 	bl	80175e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8012930:	9b04      	ldr	r3, [sp, #16]
 8012932:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012936:	a906      	add	r1, sp, #24
 8012938:	9b05      	ldr	r3, [sp, #20]
 801293a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801293e:	a803      	add	r0, sp, #12
 8012940:	f004 fea4 	bl	801768c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8012944:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8012948:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801294c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8012950:	f104 001c 	add.w	r0, r4, #28
 8012954:	b189      	cbz	r1, 801297a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8012956:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 801295a:	9300      	str	r3, [sp, #0]
 801295c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8012960:	4613      	mov	r3, r2
 8012962:	462a      	mov	r2, r5
 8012964:	f016 f856 	bl	8028a14 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8012968:	b128      	cbz	r0, 8012976 <_ZN8touchgfx3HAL5touchEll+0x56>
 801296a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801296e:	6623      	str	r3, [r4, #96]	; 0x60
 8012970:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012974:	6663      	str	r3, [r4, #100]	; 0x64
 8012976:	b007      	add	sp, #28
 8012978:	bd30      	pop	{r4, r5, pc}
 801297a:	f016 f88b 	bl	8028a94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801297e:	2301      	movs	r3, #1
 8012980:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8012984:	e7f1      	b.n	801296a <_ZN8touchgfx3HAL5touchEll+0x4a>

08012986 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8012986:	b510      	push	{r4, lr}
 8012988:	2b00      	cmp	r3, #0
 801298a:	d046      	beq.n	8012a1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801298c:	ea81 0002 	eor.w	r0, r1, r2
 8012990:	07c4      	lsls	r4, r0, #31
 8012992:	d508      	bpl.n	80129a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8012994:	440b      	add	r3, r1
 8012996:	3a01      	subs	r2, #1
 8012998:	428b      	cmp	r3, r1
 801299a:	d93e      	bls.n	8012a1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801299c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80129a0:	f801 0b01 	strb.w	r0, [r1], #1
 80129a4:	e7f8      	b.n	8012998 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80129a6:	07d0      	lsls	r0, r2, #31
 80129a8:	bf42      	ittt	mi
 80129aa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80129ae:	f801 0b01 	strbmi.w	r0, [r1], #1
 80129b2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80129b6:	2b01      	cmp	r3, #1
 80129b8:	d911      	bls.n	80129de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80129ba:	ea81 0402 	eor.w	r4, r1, r2
 80129be:	07a4      	lsls	r4, r4, #30
 80129c0:	4610      	mov	r0, r2
 80129c2:	d022      	beq.n	8012a0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80129c4:	f023 0401 	bic.w	r4, r3, #1
 80129c8:	440c      	add	r4, r1
 80129ca:	428c      	cmp	r4, r1
 80129cc:	4602      	mov	r2, r0
 80129ce:	d904      	bls.n	80129da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80129d0:	8812      	ldrh	r2, [r2, #0]
 80129d2:	f821 2b02 	strh.w	r2, [r1], #2
 80129d6:	3002      	adds	r0, #2
 80129d8:	e7f7      	b.n	80129ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80129da:	f003 0301 	and.w	r3, r3, #1
 80129de:	f023 0003 	bic.w	r0, r3, #3
 80129e2:	4408      	add	r0, r1
 80129e4:	4288      	cmp	r0, r1
 80129e6:	4614      	mov	r4, r2
 80129e8:	d904      	bls.n	80129f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80129ea:	6824      	ldr	r4, [r4, #0]
 80129ec:	f841 4b04 	str.w	r4, [r1], #4
 80129f0:	3204      	adds	r2, #4
 80129f2:	e7f7      	b.n	80129e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80129f4:	f003 0303 	and.w	r3, r3, #3
 80129f8:	440b      	add	r3, r1
 80129fa:	3a01      	subs	r2, #1
 80129fc:	428b      	cmp	r3, r1
 80129fe:	d90c      	bls.n	8012a1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012a00:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012a04:	f801 0b01 	strb.w	r0, [r1], #1
 8012a08:	e7f8      	b.n	80129fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8012a0a:	0790      	lsls	r0, r2, #30
 8012a0c:	d0e7      	beq.n	80129de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012a0e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8012a12:	f821 0b02 	strh.w	r0, [r1], #2
 8012a16:	3b02      	subs	r3, #2
 8012a18:	e7e1      	b.n	80129de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012a1a:	2001      	movs	r0, #1
 8012a1c:	bd10      	pop	{r4, pc}

08012a1e <_ZN8touchgfx3HAL7noTouchEv>:
 8012a1e:	b510      	push	{r4, lr}
 8012a20:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8012a24:	4604      	mov	r4, r0
 8012a26:	b153      	cbz	r3, 8012a3e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8012a28:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8012a2c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8012a30:	2101      	movs	r1, #1
 8012a32:	301c      	adds	r0, #28
 8012a34:	f016 f82e 	bl	8028a94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012a38:	2300      	movs	r3, #0
 8012a3a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8012a3e:	bd10      	pop	{r4, pc}

08012a40 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8012a40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a44:	b085      	sub	sp, #20
 8012a46:	ad04      	add	r5, sp, #16
 8012a48:	4604      	mov	r4, r0
 8012a4a:	2000      	movs	r0, #0
 8012a4c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8012a50:	69a0      	ldr	r0, [r4, #24]
 8012a52:	6806      	ldr	r6, [r0, #0]
 8012a54:	9501      	str	r5, [sp, #4]
 8012a56:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8012a5a:	9500      	str	r5, [sp, #0]
 8012a5c:	6835      	ldr	r5, [r6, #0]
 8012a5e:	4699      	mov	r9, r3
 8012a60:	460f      	mov	r7, r1
 8012a62:	4690      	mov	r8, r2
 8012a64:	47a8      	blx	r5
 8012a66:	4d10      	ldr	r5, [pc, #64]	; (8012aa8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8012a68:	4606      	mov	r6, r0
 8012a6a:	f8a5 9000 	strh.w	r9, [r5]
 8012a6e:	f7f2 fd1d 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8012a72:	6803      	ldr	r3, [r0, #0]
 8012a74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a76:	4798      	blx	r3
 8012a78:	b128      	cbz	r0, 8012a86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8012a7a:	2801      	cmp	r0, #1
 8012a7c:	d00b      	beq.n	8012a96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8012a7e:	4630      	mov	r0, r6
 8012a80:	b005      	add	sp, #20
 8012a82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012a86:	882b      	ldrh	r3, [r5, #0]
 8012a88:	fb08 7203 	mla	r2, r8, r3, r7
 8012a8c:	9b03      	ldr	r3, [sp, #12]
 8012a8e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8012a92:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012a94:	e7f3      	b.n	8012a7e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012a96:	882a      	ldrh	r2, [r5, #0]
 8012a98:	9b03      	ldr	r3, [sp, #12]
 8012a9a:	fb08 7202 	mla	r2, r8, r2, r7
 8012a9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012aa2:	1a9a      	subs	r2, r3, r2
 8012aa4:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012aa6:	e7ea      	b.n	8012a7e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012aa8:	20013846 	.word	0x20013846

08012aac <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012aac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012aae:	b08b      	sub	sp, #44	; 0x2c
 8012ab0:	4617      	mov	r7, r2
 8012ab2:	4604      	mov	r4, r0
 8012ab4:	460e      	mov	r6, r1
 8012ab6:	461d      	mov	r5, r3
 8012ab8:	f7f2 fcf8 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8012abc:	6803      	ldr	r3, [r0, #0]
 8012abe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012ac0:	4798      	blx	r3
 8012ac2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8012ac6:	9007      	str	r0, [sp, #28]
 8012ac8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012acc:	4b0d      	ldr	r3, [pc, #52]	; (8012b04 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8012ace:	6822      	ldr	r2, [r4, #0]
 8012ad0:	881b      	ldrh	r3, [r3, #0]
 8012ad2:	9306      	str	r3, [sp, #24]
 8012ad4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012ad8:	9305      	str	r3, [sp, #20]
 8012ada:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8012ade:	9304      	str	r3, [sp, #16]
 8012ae0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012ae4:	9303      	str	r3, [sp, #12]
 8012ae6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012aea:	9302      	str	r3, [sp, #8]
 8012aec:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012af0:	e9cd 5300 	strd	r5, r3, [sp]
 8012af4:	4631      	mov	r1, r6
 8012af6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8012af8:	463b      	mov	r3, r7
 8012afa:	2200      	movs	r2, #0
 8012afc:	4620      	mov	r0, r4
 8012afe:	47a8      	blx	r5
 8012b00:	b00b      	add	sp, #44	; 0x2c
 8012b02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b04:	20013846 	.word	0x20013846

08012b08 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8012b08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b0c:	4698      	mov	r8, r3
 8012b0e:	6803      	ldr	r3, [r0, #0]
 8012b10:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8012b12:	4b15      	ldr	r3, [pc, #84]	; (8012b68 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8012b14:	b08b      	sub	sp, #44	; 0x2c
 8012b16:	4617      	mov	r7, r2
 8012b18:	f8b3 9000 	ldrh.w	r9, [r3]
 8012b1c:	460e      	mov	r6, r1
 8012b1e:	4604      	mov	r4, r0
 8012b20:	f7f2 fcc4 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8012b24:	6803      	ldr	r3, [r0, #0]
 8012b26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b28:	4798      	blx	r3
 8012b2a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012b2e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012b32:	2302      	movs	r3, #2
 8012b34:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8012b38:	2301      	movs	r3, #1
 8012b3a:	9305      	str	r3, [sp, #20]
 8012b3c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8012b40:	9304      	str	r3, [sp, #16]
 8012b42:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012b46:	9303      	str	r3, [sp, #12]
 8012b48:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012b4c:	9302      	str	r3, [sp, #8]
 8012b4e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012b52:	2200      	movs	r2, #0
 8012b54:	e9cd 8300 	strd	r8, r3, [sp]
 8012b58:	4631      	mov	r1, r6
 8012b5a:	463b      	mov	r3, r7
 8012b5c:	4620      	mov	r0, r4
 8012b5e:	47a8      	blx	r5
 8012b60:	b00b      	add	sp, #44	; 0x2c
 8012b62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b66:	bf00      	nop
 8012b68:	20013846 	.word	0x20013846

08012b6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8012b6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b70:	4698      	mov	r8, r3
 8012b72:	6803      	ldr	r3, [r0, #0]
 8012b74:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8012b76:	4b11      	ldr	r3, [pc, #68]	; (8012bbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8012b78:	b087      	sub	sp, #28
 8012b7a:	f8b3 9000 	ldrh.w	r9, [r3]
 8012b7e:	460e      	mov	r6, r1
 8012b80:	4617      	mov	r7, r2
 8012b82:	4604      	mov	r4, r0
 8012b84:	f7f2 fc92 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8012b88:	6803      	ldr	r3, [r0, #0]
 8012b8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b8c:	4798      	blx	r3
 8012b8e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8012b92:	f8cd 900c 	str.w	r9, [sp, #12]
 8012b96:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8012b9a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8012b9e:	9302      	str	r3, [sp, #8]
 8012ba0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8012ba4:	9301      	str	r3, [sp, #4]
 8012ba6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012baa:	9300      	str	r3, [sp, #0]
 8012bac:	463a      	mov	r2, r7
 8012bae:	4643      	mov	r3, r8
 8012bb0:	4631      	mov	r1, r6
 8012bb2:	4620      	mov	r0, r4
 8012bb4:	47a8      	blx	r5
 8012bb6:	b007      	add	sp, #28
 8012bb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012bbc:	20013846 	.word	0x20013846

08012bc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bc4:	4604      	mov	r4, r0
 8012bc6:	b08f      	sub	sp, #60	; 0x3c
 8012bc8:	4610      	mov	r0, r2
 8012bca:	460d      	mov	r5, r1
 8012bcc:	4691      	mov	r9, r2
 8012bce:	461e      	mov	r6, r3
 8012bd0:	f008 fafa 	bl	801b1c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012bd4:	2800      	cmp	r0, #0
 8012bd6:	f000 809d 	beq.w	8012d14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8012bda:	6823      	ldr	r3, [r4, #0]
 8012bdc:	f8df b198 	ldr.w	fp, [pc, #408]	; 8012d78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8012be0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012be2:	f8df a198 	ldr.w	sl, [pc, #408]	; 8012d7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8012be6:	4f61      	ldr	r7, [pc, #388]	; (8012d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012be8:	4620      	mov	r0, r4
 8012bea:	4798      	blx	r3
 8012bec:	6823      	ldr	r3, [r4, #0]
 8012bee:	4620      	mov	r0, r4
 8012bf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012bf2:	4798      	blx	r3
 8012bf4:	f8bb 3000 	ldrh.w	r3, [fp]
 8012bf8:	9301      	str	r3, [sp, #4]
 8012bfa:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8012bfe:	f8ba 3000 	ldrh.w	r3, [sl]
 8012c02:	9302      	str	r3, [sp, #8]
 8012c04:	883b      	ldrh	r3, [r7, #0]
 8012c06:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8012c0a:	9303      	str	r3, [sp, #12]
 8012c0c:	4b58      	ldr	r3, [pc, #352]	; (8012d70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012c0e:	9305      	str	r3, [sp, #20]
 8012c10:	881a      	ldrh	r2, [r3, #0]
 8012c12:	9204      	str	r2, [sp, #16]
 8012c14:	4640      	mov	r0, r8
 8012c16:	f008 fb6b 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012c1a:	8038      	strh	r0, [r7, #0]
 8012c1c:	4640      	mov	r0, r8
 8012c1e:	f008 fb9b 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012c22:	9b05      	ldr	r3, [sp, #20]
 8012c24:	b280      	uxth	r0, r0
 8012c26:	8018      	strh	r0, [r3, #0]
 8012c28:	4b52      	ldr	r3, [pc, #328]	; (8012d74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8012c2a:	781b      	ldrb	r3, [r3, #0]
 8012c2c:	2b00      	cmp	r3, #0
 8012c2e:	d174      	bne.n	8012d1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8012c30:	883b      	ldrh	r3, [r7, #0]
 8012c32:	f8ab 3000 	strh.w	r3, [fp]
 8012c36:	f8aa 0000 	strh.w	r0, [sl]
 8012c3a:	4648      	mov	r0, r9
 8012c3c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8012c40:	f008 fac2 	bl	801b1c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012c44:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8012c48:	2200      	movs	r2, #0
 8012c4a:	4611      	mov	r1, r2
 8012c4c:	4628      	mov	r0, r5
 8012c4e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8012c52:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8012c56:	f7f0 fcc1 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8012c5a:	2301      	movs	r3, #1
 8012c5c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8012c60:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8012c64:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012c68:	2b00      	cmp	r3, #0
 8012c6a:	dd5c      	ble.n	8012d26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012c6c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012c70:	2b00      	cmp	r3, #0
 8012c72:	dd58      	ble.n	8012d26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012c74:	462a      	mov	r2, r5
 8012c76:	ab0a      	add	r3, sp, #40	; 0x28
 8012c78:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012c7c:	6851      	ldr	r1, [r2, #4]
 8012c7e:	c303      	stmia	r3!, {r0, r1}
 8012c80:	4631      	mov	r1, r6
 8012c82:	a80a      	add	r0, sp, #40	; 0x28
 8012c84:	f7fe ff92 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8012c88:	4b38      	ldr	r3, [pc, #224]	; (8012d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012c8a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012c8e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012c92:	2100      	movs	r1, #0
 8012c94:	aa0a      	add	r2, sp, #40	; 0x28
 8012c96:	4b36      	ldr	r3, [pc, #216]	; (8012d70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012c98:	910c      	str	r1, [sp, #48]	; 0x30
 8012c9a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012c9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012ca2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012ca6:	ab08      	add	r3, sp, #32
 8012ca8:	e883 0003 	stmia.w	r3, {r0, r1}
 8012cac:	4618      	mov	r0, r3
 8012cae:	a90c      	add	r1, sp, #48	; 0x30
 8012cb0:	f7fe ff7c 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8012cb4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8012cb6:	2b00      	cmp	r3, #0
 8012cb8:	d13c      	bne.n	8012d34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8012cba:	2000      	movs	r0, #0
 8012cbc:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8012cc0:	2600      	movs	r6, #0
 8012cc2:	682a      	ldr	r2, [r5, #0]
 8012cc4:	696b      	ldr	r3, [r5, #20]
 8012cc6:	616e      	str	r6, [r5, #20]
 8012cc8:	9305      	str	r3, [sp, #20]
 8012cca:	6892      	ldr	r2, [r2, #8]
 8012ccc:	a908      	add	r1, sp, #32
 8012cce:	4628      	mov	r0, r5
 8012cd0:	4790      	blx	r2
 8012cd2:	9b05      	ldr	r3, [sp, #20]
 8012cd4:	616b      	str	r3, [r5, #20]
 8012cd6:	4652      	mov	r2, sl
 8012cd8:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8012cdc:	4649      	mov	r1, r9
 8012cde:	4628      	mov	r0, r5
 8012ce0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8012ce4:	f7f0 fc7a 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8012ce8:	4b23      	ldr	r3, [pc, #140]	; (8012d78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8012cea:	9a01      	ldr	r2, [sp, #4]
 8012cec:	801a      	strh	r2, [r3, #0]
 8012cee:	4b23      	ldr	r3, [pc, #140]	; (8012d7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8012cf0:	9a02      	ldr	r2, [sp, #8]
 8012cf2:	801a      	strh	r2, [r3, #0]
 8012cf4:	4b1d      	ldr	r3, [pc, #116]	; (8012d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012cf6:	9a03      	ldr	r2, [sp, #12]
 8012cf8:	801a      	strh	r2, [r3, #0]
 8012cfa:	4b1d      	ldr	r3, [pc, #116]	; (8012d70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012cfc:	9a04      	ldr	r2, [sp, #16]
 8012cfe:	801a      	strh	r2, [r3, #0]
 8012d00:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8012d04:	6823      	ldr	r3, [r4, #0]
 8012d06:	4620      	mov	r0, r4
 8012d08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012d0a:	4798      	blx	r3
 8012d0c:	6823      	ldr	r3, [r4, #0]
 8012d0e:	4620      	mov	r0, r4
 8012d10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d12:	4798      	blx	r3
 8012d14:	b00f      	add	sp, #60	; 0x3c
 8012d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d1a:	883b      	ldrh	r3, [r7, #0]
 8012d1c:	f8ab 0000 	strh.w	r0, [fp]
 8012d20:	f8aa 3000 	strh.w	r3, [sl]
 8012d24:	e789      	b.n	8012c3a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8012d26:	462a      	mov	r2, r5
 8012d28:	ab0a      	add	r3, sp, #40	; 0x28
 8012d2a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012d2e:	6851      	ldr	r1, [r2, #4]
 8012d30:	c303      	stmia	r3!, {r0, r1}
 8012d32:	e7a9      	b.n	8012c88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8012d34:	a807      	add	r0, sp, #28
 8012d36:	f008 fc4b 	bl	801b5d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012d3a:	4606      	mov	r6, r0
 8012d3c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8012d3e:	6803      	ldr	r3, [r0, #0]
 8012d40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d42:	4798      	blx	r3
 8012d44:	4286      	cmp	r6, r0
 8012d46:	d1b8      	bne.n	8012cba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8012d48:	f7f2 fbb0 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8012d4c:	6803      	ldr	r3, [r0, #0]
 8012d4e:	4606      	mov	r6, r0
 8012d50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012d52:	9305      	str	r3, [sp, #20]
 8012d54:	a807      	add	r0, sp, #28
 8012d56:	f008 fc3b 	bl	801b5d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012d5a:	9b05      	ldr	r3, [sp, #20]
 8012d5c:	4601      	mov	r1, r0
 8012d5e:	4630      	mov	r0, r6
 8012d60:	4798      	blx	r3
 8012d62:	f080 0001 	eor.w	r0, r0, #1
 8012d66:	b2c0      	uxtb	r0, r0
 8012d68:	e7a8      	b.n	8012cbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8012d6a:	bf00      	nop
 8012d6c:	20013840 	.word	0x20013840
 8012d70:	20013842 	.word	0x20013842
 8012d74:	20013844 	.word	0x20013844
 8012d78:	20013846 	.word	0x20013846
 8012d7c:	20013848 	.word	0x20013848

08012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012d80:	b510      	push	{r4, lr}
 8012d82:	4b07      	ldr	r3, [pc, #28]	; (8012da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012d84:	781b      	ldrb	r3, [r3, #0]
 8012d86:	4604      	mov	r4, r0
 8012d88:	b13b      	cbz	r3, 8012d9a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012d8a:	6803      	ldr	r3, [r0, #0]
 8012d8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d8e:	4798      	blx	r3
 8012d90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012d92:	4283      	cmp	r3, r0
 8012d94:	d101      	bne.n	8012d9a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012d96:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012d98:	bd10      	pop	{r4, pc}
 8012d9a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012d9c:	e7fc      	b.n	8012d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8012d9e:	bf00      	nop
 8012da0:	2001384a 	.word	0x2001384a

08012da4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012da4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012da8:	b08a      	sub	sp, #40	; 0x28
 8012daa:	461d      	mov	r5, r3
 8012dac:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012db0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012db4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012db8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012dbc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012dc0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012dc4:	2400      	movs	r4, #0
 8012dc6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012dca:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8012dce:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012dd2:	4690      	mov	r8, r2
 8012dd4:	4607      	mov	r7, r0
 8012dd6:	9404      	str	r4, [sp, #16]
 8012dd8:	f88d 4020 	strb.w	r4, [sp, #32]
 8012ddc:	f7ff ffd0 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012de0:	fb06 8505 	mla	r5, r6, r5, r8
 8012de4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012de8:	6878      	ldr	r0, [r7, #4]
 8012dea:	9505      	str	r5, [sp, #20]
 8012dec:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012df0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012df4:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012df8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012dfc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012e00:	6803      	ldr	r3, [r0, #0]
 8012e02:	a901      	add	r1, sp, #4
 8012e04:	685b      	ldr	r3, [r3, #4]
 8012e06:	4798      	blx	r3
 8012e08:	b00a      	add	sp, #40	; 0x28
 8012e0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012e0e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8012e0e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012e12:	b08b      	sub	sp, #44	; 0x2c
 8012e14:	2400      	movs	r4, #0
 8012e16:	461d      	mov	r5, r3
 8012e18:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012e1c:	4688      	mov	r8, r1
 8012e1e:	4691      	mov	r9, r2
 8012e20:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012e24:	9404      	str	r4, [sp, #16]
 8012e26:	4607      	mov	r7, r0
 8012e28:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012e2c:	f7ff ffa8 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012e30:	fb06 9505 	mla	r5, r6, r5, r9
 8012e34:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012e38:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012e3c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012e40:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012e44:	6878      	ldr	r0, [r7, #4]
 8012e46:	9505      	str	r5, [sp, #20]
 8012e48:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012e4c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012e50:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012e54:	f8cd 8010 	str.w	r8, [sp, #16]
 8012e58:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012e5c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012e60:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012e64:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012e68:	6803      	ldr	r3, [r0, #0]
 8012e6a:	a901      	add	r1, sp, #4
 8012e6c:	685b      	ldr	r3, [r3, #4]
 8012e6e:	4798      	blx	r3
 8012e70:	b00b      	add	sp, #44	; 0x2c
 8012e72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012e78 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8012e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e7c:	b08a      	sub	sp, #40	; 0x28
 8012e7e:	4698      	mov	r8, r3
 8012e80:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8012e84:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8012e88:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8012e8c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8012e90:	2300      	movs	r3, #0
 8012e92:	2d0b      	cmp	r5, #11
 8012e94:	4606      	mov	r6, r0
 8012e96:	9304      	str	r3, [sp, #16]
 8012e98:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8012e9c:	d138      	bne.n	8012f10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8012e9e:	2380      	movs	r3, #128	; 0x80
 8012ea0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012ea4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012ea8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012eac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012eb0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012eb4:	f88d 0020 	strb.w	r0, [sp, #32]
 8012eb8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012ebc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012ec0:	4630      	mov	r0, r6
 8012ec2:	9203      	str	r2, [sp, #12]
 8012ec4:	f7ff ff5c 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012ec8:	2c0b      	cmp	r4, #11
 8012eca:	bf98      	it	ls
 8012ecc:	4b1b      	ldrls	r3, [pc, #108]	; (8012f3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8012ece:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012ed2:	bf98      	it	ls
 8012ed4:	5d19      	ldrbls	r1, [r3, r4]
 8012ed6:	f8ad 701e 	strh.w	r7, [sp, #30]
 8012eda:	bf88      	it	hi
 8012edc:	2100      	movhi	r1, #0
 8012ede:	fb02 8307 	mla	r3, r2, r7, r8
 8012ee2:	10c9      	asrs	r1, r1, #3
 8012ee4:	fb01 0003 	mla	r0, r1, r3, r0
 8012ee8:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8012eec:	9005      	str	r0, [sp, #20]
 8012eee:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012ef2:	6870      	ldr	r0, [r6, #4]
 8012ef4:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8012ef8:	2300      	movs	r3, #0
 8012efa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012efe:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012f02:	6803      	ldr	r3, [r0, #0]
 8012f04:	a901      	add	r1, sp, #4
 8012f06:	685b      	ldr	r3, [r3, #4]
 8012f08:	4798      	blx	r3
 8012f0a:	b00a      	add	sp, #40	; 0x28
 8012f0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012f10:	2d02      	cmp	r5, #2
 8012f12:	d109      	bne.n	8012f28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8012f14:	28ff      	cmp	r0, #255	; 0xff
 8012f16:	d105      	bne.n	8012f24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8012f18:	f1bc 0f00 	cmp.w	ip, #0
 8012f1c:	bf14      	ite	ne
 8012f1e:	2340      	movne	r3, #64	; 0x40
 8012f20:	2320      	moveq	r3, #32
 8012f22:	e7bd      	b.n	8012ea0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012f24:	2340      	movs	r3, #64	; 0x40
 8012f26:	e7bb      	b.n	8012ea0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012f28:	28ff      	cmp	r0, #255	; 0xff
 8012f2a:	d105      	bne.n	8012f38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8012f2c:	f1bc 0f00 	cmp.w	ip, #0
 8012f30:	bf14      	ite	ne
 8012f32:	2304      	movne	r3, #4
 8012f34:	2301      	moveq	r3, #1
 8012f36:	e7b3      	b.n	8012ea0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012f38:	2304      	movs	r3, #4
 8012f3a:	e7b1      	b.n	8012ea0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012f3c:	08030774 	.word	0x08030774

08012f40 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f44:	b08b      	sub	sp, #44	; 0x2c
 8012f46:	461d      	mov	r5, r3
 8012f48:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8012f4c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8012f50:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8012f54:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012f58:	bf14      	ite	ne
 8012f5a:	2308      	movne	r3, #8
 8012f5c:	2302      	moveq	r3, #2
 8012f5e:	2400      	movs	r4, #0
 8012f60:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012f64:	4688      	mov	r8, r1
 8012f66:	4693      	mov	fp, r2
 8012f68:	9404      	str	r4, [sp, #16]
 8012f6a:	4607      	mov	r7, r0
 8012f6c:	f7ff ff08 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012f70:	2e0b      	cmp	r6, #11
 8012f72:	bf98      	it	ls
 8012f74:	4b15      	ldrls	r3, [pc, #84]	; (8012fcc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8012f76:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012f7a:	bf98      	it	ls
 8012f7c:	5d9c      	ldrbls	r4, [r3, r6]
 8012f7e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012f82:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012f86:	fb05 b50a 	mla	r5, r5, sl, fp
 8012f8a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012f8e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012f92:	10e4      	asrs	r4, r4, #3
 8012f94:	fb04 0405 	mla	r4, r4, r5, r0
 8012f98:	2300      	movs	r3, #0
 8012f9a:	6878      	ldr	r0, [r7, #4]
 8012f9c:	9405      	str	r4, [sp, #20]
 8012f9e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012fa2:	f8ad a01e 	strh.w	sl, [sp, #30]
 8012fa6:	f8cd 8010 	str.w	r8, [sp, #16]
 8012faa:	f88d 9020 	strb.w	r9, [sp, #32]
 8012fae:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8012fb2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012fb6:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8012fba:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8012fbe:	6803      	ldr	r3, [r0, #0]
 8012fc0:	a901      	add	r1, sp, #4
 8012fc2:	685b      	ldr	r3, [r3, #4]
 8012fc4:	4798      	blx	r3
 8012fc6:	b00b      	add	sp, #44	; 0x2c
 8012fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fcc:	08030774 	.word	0x08030774

08012fd0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fd4:	461e      	mov	r6, r3
 8012fd6:	4b0a      	ldr	r3, [pc, #40]	; (8013000 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012fd8:	460f      	mov	r7, r1
 8012fda:	881d      	ldrh	r5, [r3, #0]
 8012fdc:	4690      	mov	r8, r2
 8012fde:	f7f2 fa65 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8012fe2:	6803      	ldr	r3, [r0, #0]
 8012fe4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012fe6:	4798      	blx	r3
 8012fe8:	280b      	cmp	r0, #11
 8012fea:	bf9a      	itte	ls
 8012fec:	4b05      	ldrls	r3, [pc, #20]	; (8013004 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8012fee:	5c1c      	ldrbls	r4, [r3, r0]
 8012ff0:	2400      	movhi	r4, #0
 8012ff2:	fb08 7005 	mla	r0, r8, r5, r7
 8012ff6:	10e4      	asrs	r4, r4, #3
 8012ff8:	fb04 6000 	mla	r0, r4, r0, r6
 8012ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013000:	20013846 	.word	0x20013846
 8013004:	08030774 	.word	0x08030774

08013008 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013008:	b5f0      	push	{r4, r5, r6, r7, lr}
 801300a:	b08b      	sub	sp, #44	; 0x2c
 801300c:	461f      	mov	r7, r3
 801300e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013012:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013016:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801301a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801301e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013022:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013026:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801302a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801302e:	2500      	movs	r5, #0
 8013030:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013034:	f88d 3020 	strb.w	r3, [sp, #32]
 8013038:	4604      	mov	r4, r0
 801303a:	4616      	mov	r6, r2
 801303c:	9504      	str	r5, [sp, #16]
 801303e:	f7ff fe9f 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013042:	463a      	mov	r2, r7
 8013044:	4631      	mov	r1, r6
 8013046:	4603      	mov	r3, r0
 8013048:	4620      	mov	r0, r4
 801304a:	f7ff ffc1 	bl	8012fd0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801304e:	4b0e      	ldr	r3, [pc, #56]	; (8013088 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013050:	9005      	str	r0, [sp, #20]
 8013052:	881b      	ldrh	r3, [r3, #0]
 8013054:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013058:	f7f2 fa28 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 801305c:	6803      	ldr	r3, [r0, #0]
 801305e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013060:	4798      	blx	r3
 8013062:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013064:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013068:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801306c:	9304      	str	r3, [sp, #16]
 801306e:	6860      	ldr	r0, [r4, #4]
 8013070:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013074:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013078:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801307c:	6803      	ldr	r3, [r0, #0]
 801307e:	a901      	add	r1, sp, #4
 8013080:	685b      	ldr	r3, [r3, #4]
 8013082:	4798      	blx	r3
 8013084:	b00b      	add	sp, #44	; 0x2c
 8013086:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013088:	20013846 	.word	0x20013846

0801308c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801308c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801308e:	b08d      	sub	sp, #52	; 0x34
 8013090:	466b      	mov	r3, sp
 8013092:	e883 0006 	stmia.w	r3, {r1, r2}
 8013096:	2300      	movs	r3, #0
 8013098:	9306      	str	r3, [sp, #24]
 801309a:	6803      	ldr	r3, [r0, #0]
 801309c:	f8bd 6000 	ldrh.w	r6, [sp]
 80130a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80130a2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80130a6:	2501      	movs	r5, #1
 80130a8:	9503      	str	r5, [sp, #12]
 80130aa:	4604      	mov	r4, r0
 80130ac:	4798      	blx	r3
 80130ae:	463a      	mov	r2, r7
 80130b0:	4631      	mov	r1, r6
 80130b2:	4603      	mov	r3, r0
 80130b4:	4620      	mov	r0, r4
 80130b6:	f7ff ff8b 	bl	8012fd0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80130ba:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80130bc:	9307      	str	r3, [sp, #28]
 80130be:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80130c2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80130c6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80130ca:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80130ce:	4b0f      	ldr	r3, [pc, #60]	; (801310c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80130d0:	9004      	str	r0, [sp, #16]
 80130d2:	881b      	ldrh	r3, [r3, #0]
 80130d4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80130d8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80130dc:	f7f2 f9e6 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 80130e0:	6803      	ldr	r3, [r0, #0]
 80130e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80130e4:	4798      	blx	r3
 80130e6:	23ff      	movs	r3, #255	; 0xff
 80130e8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80130ec:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80130f0:	6860      	ldr	r0, [r4, #4]
 80130f2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80130f6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80130fa:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80130fe:	6803      	ldr	r3, [r0, #0]
 8013100:	a903      	add	r1, sp, #12
 8013102:	685b      	ldr	r3, [r3, #4]
 8013104:	4798      	blx	r3
 8013106:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013108:	b00d      	add	sp, #52	; 0x34
 801310a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801310c:	20013846 	.word	0x20013846

08013110 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8013110:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013114:	b08c      	sub	sp, #48	; 0x30
 8013116:	461e      	mov	r6, r3
 8013118:	466d      	mov	r5, sp
 801311a:	2300      	movs	r3, #0
 801311c:	e885 0006 	stmia.w	r5, {r1, r2}
 8013120:	9306      	str	r3, [sp, #24]
 8013122:	6803      	ldr	r3, [r0, #0]
 8013124:	f8bd 7000 	ldrh.w	r7, [sp]
 8013128:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801312a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801312e:	2501      	movs	r5, #1
 8013130:	9503      	str	r5, [sp, #12]
 8013132:	4604      	mov	r4, r0
 8013134:	4798      	blx	r3
 8013136:	4642      	mov	r2, r8
 8013138:	4639      	mov	r1, r7
 801313a:	4603      	mov	r3, r0
 801313c:	4620      	mov	r0, r4
 801313e:	f7ff ff47 	bl	8012fd0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013142:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013146:	f8ad 3020 	strh.w	r3, [sp, #32]
 801314a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801314e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013152:	4b11      	ldr	r3, [pc, #68]	; (8013198 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8013154:	9004      	str	r0, [sp, #16]
 8013156:	881b      	ldrh	r3, [r3, #0]
 8013158:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801315c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801315e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013162:	9607      	str	r6, [sp, #28]
 8013164:	f7f2 f9a2 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8013168:	6803      	ldr	r3, [r0, #0]
 801316a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801316c:	4798      	blx	r3
 801316e:	23ff      	movs	r3, #255	; 0xff
 8013170:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013174:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013178:	6860      	ldr	r0, [r4, #4]
 801317a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801317e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013182:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013186:	6803      	ldr	r3, [r0, #0]
 8013188:	a903      	add	r1, sp, #12
 801318a:	685b      	ldr	r3, [r3, #4]
 801318c:	4798      	blx	r3
 801318e:	4630      	mov	r0, r6
 8013190:	b00c      	add	sp, #48	; 0x30
 8013192:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013196:	bf00      	nop
 8013198:	20013846 	.word	0x20013846

0801319c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801319c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801319e:	b085      	sub	sp, #20
 80131a0:	ac02      	add	r4, sp, #8
 80131a2:	e884 0006 	stmia.w	r4, {r1, r2}
 80131a6:	4605      	mov	r5, r0
 80131a8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80131ac:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80131b0:	f7ff fde6 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80131b4:	463a      	mov	r2, r7
 80131b6:	4603      	mov	r3, r0
 80131b8:	4631      	mov	r1, r6
 80131ba:	4628      	mov	r0, r5
 80131bc:	f7ff ff08 	bl	8012fd0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80131c0:	4a05      	ldr	r2, [pc, #20]	; (80131d8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80131c2:	682b      	ldr	r3, [r5, #0]
 80131c4:	8812      	ldrh	r2, [r2, #0]
 80131c6:	9200      	str	r2, [sp, #0]
 80131c8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80131ca:	e894 0006 	ldmia.w	r4, {r1, r2}
 80131ce:	4603      	mov	r3, r0
 80131d0:	4628      	mov	r0, r5
 80131d2:	47b0      	blx	r6
 80131d4:	b005      	add	sp, #20
 80131d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80131d8:	20013846 	.word	0x20013846

080131dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80131dc:	b570      	push	{r4, r5, r6, lr}
 80131de:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80131e2:	4604      	mov	r4, r0
 80131e4:	b19b      	cbz	r3, 801320e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80131e6:	2002      	movs	r0, #2
 80131e8:	f7ef fc50 	bl	8002a8c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80131ec:	2300      	movs	r3, #0
 80131ee:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80131f2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80131f6:	6823      	ldr	r3, [r4, #0]
 80131f8:	4620      	mov	r0, r4
 80131fa:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80131fe:	f7ff fdbf 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013202:	462b      	mov	r3, r5
 8013204:	4601      	mov	r1, r0
 8013206:	4620      	mov	r0, r4
 8013208:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801320c:	4718      	bx	r3
 801320e:	bd70      	pop	{r4, r5, r6, pc}

08013210 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013210:	b538      	push	{r3, r4, r5, lr}
 8013212:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8013216:	428b      	cmp	r3, r1
 8013218:	4604      	mov	r4, r0
 801321a:	460d      	mov	r5, r1
 801321c:	d006      	beq.n	801322c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801321e:	6803      	ldr	r3, [r0, #0]
 8013220:	b929      	cbnz	r1, 801322e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013222:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013226:	4798      	blx	r3
 8013228:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801322c:	bd38      	pop	{r3, r4, r5, pc}
 801322e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8013232:	e7f8      	b.n	8013226 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013234 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013234:	b510      	push	{r4, lr}
 8013236:	4b0d      	ldr	r3, [pc, #52]	; (801326c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8013238:	781b      	ldrb	r3, [r3, #0]
 801323a:	4604      	mov	r4, r0
 801323c:	b95b      	cbnz	r3, 8013256 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801323e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8013242:	2b02      	cmp	r3, #2
 8013244:	d007      	beq.n	8013256 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013246:	6840      	ldr	r0, [r0, #4]
 8013248:	f000 f92c 	bl	80134a4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801324c:	b118      	cbz	r0, 8013256 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801324e:	6862      	ldr	r2, [r4, #4]
 8013250:	7a53      	ldrb	r3, [r2, #9]
 8013252:	2b00      	cmp	r3, #0
 8013254:	d0fc      	beq.n	8013250 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8013256:	f7ef fd51 	bl	8002cfc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801325a:	4620      	mov	r0, r4
 801325c:	2100      	movs	r1, #0
 801325e:	f7ff ffd7 	bl	8013210 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013262:	4620      	mov	r0, r4
 8013264:	f7ff fd8c 	bl	8012d80 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013268:	bd10      	pop	{r4, pc}
 801326a:	bf00      	nop
 801326c:	2001384a 	.word	0x2001384a

08013270 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8013270:	b570      	push	{r4, r5, r6, lr}
 8013272:	4604      	mov	r4, r0
 8013274:	6803      	ldr	r3, [r0, #0]
 8013276:	b919      	cbnz	r1, 8013280 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8013278:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801327a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801327e:	4718      	bx	r3
 8013280:	2200      	movs	r2, #0
 8013282:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8013286:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 801328a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801328c:	4798      	blx	r3
 801328e:	6863      	ldr	r3, [r4, #4]
 8013290:	2101      	movs	r1, #1
 8013292:	4605      	mov	r5, r0
 8013294:	7299      	strb	r1, [r3, #10]
 8013296:	4620      	mov	r0, r4
 8013298:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801329c:	f7ff ffb8 	bl	8013210 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80132a0:	4628      	mov	r0, r5
 80132a2:	bd70      	pop	{r4, r5, r6, pc}

080132a4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80132a4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80132a8:	1a13      	subs	r3, r2, r0
 80132aa:	4258      	negs	r0, r3
 80132ac:	4158      	adcs	r0, r3
 80132ae:	4770      	bx	lr

080132b0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80132b0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80132b4:	1a9b      	subs	r3, r3, r2
 80132b6:	2b00      	cmp	r3, #0
 80132b8:	bfdc      	itt	le
 80132ba:	6882      	ldrle	r2, [r0, #8]
 80132bc:	189b      	addle	r3, r3, r2
 80132be:	2b01      	cmp	r3, #1
 80132c0:	bfcc      	ite	gt
 80132c2:	2000      	movgt	r0, #0
 80132c4:	2001      	movle	r0, #1
 80132c6:	4770      	bx	lr

080132c8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80132c8:	6902      	ldr	r2, [r0, #16]
 80132ca:	6843      	ldr	r3, [r0, #4]
 80132cc:	2024      	movs	r0, #36	; 0x24
 80132ce:	fb00 3002 	mla	r0, r0, r2, r3
 80132d2:	4770      	bx	lr

080132d4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80132d4:	6803      	ldr	r3, [r0, #0]
 80132d6:	691b      	ldr	r3, [r3, #16]
 80132d8:	4718      	bx	r3

080132da <_ZN8touchgfx13DMA_Interface7executeEv>:
 80132da:	b570      	push	{r4, r5, r6, lr}
 80132dc:	2301      	movs	r3, #1
 80132de:	7203      	strb	r3, [r0, #8]
 80132e0:	4604      	mov	r4, r0
 80132e2:	6840      	ldr	r0, [r0, #4]
 80132e4:	6803      	ldr	r3, [r0, #0]
 80132e6:	699b      	ldr	r3, [r3, #24]
 80132e8:	4798      	blx	r3
 80132ea:	6803      	ldr	r3, [r0, #0]
 80132ec:	2b40      	cmp	r3, #64	; 0x40
 80132ee:	4605      	mov	r5, r0
 80132f0:	d00c      	beq.n	801330c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80132f2:	d810      	bhi.n	8013316 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80132f4:	2b04      	cmp	r3, #4
 80132f6:	d01d      	beq.n	8013334 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80132f8:	d804      	bhi.n	8013304 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80132fa:	2b01      	cmp	r3, #1
 80132fc:	d006      	beq.n	801330c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80132fe:	2b02      	cmp	r3, #2
 8013300:	d02c      	beq.n	801335c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8013302:	bd70      	pop	{r4, r5, r6, pc}
 8013304:	2b08      	cmp	r3, #8
 8013306:	d01d      	beq.n	8013344 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8013308:	2b20      	cmp	r3, #32
 801330a:	d1fa      	bne.n	8013302 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801330c:	6823      	ldr	r3, [r4, #0]
 801330e:	4620      	mov	r0, r4
 8013310:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013312:	4798      	blx	r3
 8013314:	e013      	b.n	801333e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8013316:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801331a:	d0f7      	beq.n	801330c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801331c:	d804      	bhi.n	8013328 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801331e:	2b80      	cmp	r3, #128	; 0x80
 8013320:	d0f4      	beq.n	801330c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013322:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013326:	e7f0      	b.n	801330a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8013328:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801332c:	d0ee      	beq.n	801330c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801332e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8013332:	e7e5      	b.n	8013300 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013334:	6823      	ldr	r3, [r4, #0]
 8013336:	7f01      	ldrb	r1, [r0, #28]
 8013338:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801333a:	4620      	mov	r0, r4
 801333c:	4798      	blx	r3
 801333e:	6823      	ldr	r3, [r4, #0]
 8013340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013342:	e006      	b.n	8013352 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8013344:	6823      	ldr	r3, [r4, #0]
 8013346:	7f01      	ldrb	r1, [r0, #28]
 8013348:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801334a:	4620      	mov	r0, r4
 801334c:	4798      	blx	r3
 801334e:	6823      	ldr	r3, [r4, #0]
 8013350:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013352:	4629      	mov	r1, r5
 8013354:	4620      	mov	r0, r4
 8013356:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801335a:	4718      	bx	r3
 801335c:	6823      	ldr	r3, [r4, #0]
 801335e:	4620      	mov	r0, r4
 8013360:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013362:	4798      	blx	r3
 8013364:	e7f3      	b.n	801334e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08013366 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8013366:	4770      	bx	lr

08013368 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8013368:	4770      	bx	lr

0801336a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801336a:	4770      	bx	lr

0801336c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801336c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8013370:	1ad2      	subs	r2, r2, r3
 8013372:	2a00      	cmp	r2, #0
 8013374:	b510      	push	{r4, lr}
 8013376:	bfdc      	itt	le
 8013378:	6884      	ldrle	r4, [r0, #8]
 801337a:	1912      	addle	r2, r2, r4
 801337c:	2a01      	cmp	r2, #1
 801337e:	dd16      	ble.n	80133ae <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8013380:	6842      	ldr	r2, [r0, #4]
 8013382:	2424      	movs	r4, #36	; 0x24
 8013384:	fb04 2303 	mla	r3, r4, r3, r2
 8013388:	f101 0220 	add.w	r2, r1, #32
 801338c:	f851 4b04 	ldr.w	r4, [r1], #4
 8013390:	f843 4b04 	str.w	r4, [r3], #4
 8013394:	4291      	cmp	r1, r2
 8013396:	d1f9      	bne.n	801338c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013398:	780a      	ldrb	r2, [r1, #0]
 801339a:	701a      	strb	r2, [r3, #0]
 801339c:	68c3      	ldr	r3, [r0, #12]
 801339e:	6882      	ldr	r2, [r0, #8]
 80133a0:	f3bf 8f5b 	dmb	ish
 80133a4:	3301      	adds	r3, #1
 80133a6:	429a      	cmp	r2, r3
 80133a8:	bfd8      	it	le
 80133aa:	1a9b      	suble	r3, r3, r2
 80133ac:	60c3      	str	r3, [r0, #12]
 80133ae:	bd10      	pop	{r4, pc}

080133b0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80133b0:	6903      	ldr	r3, [r0, #16]
 80133b2:	6882      	ldr	r2, [r0, #8]
 80133b4:	f3bf 8f5b 	dmb	ish
 80133b8:	3301      	adds	r3, #1
 80133ba:	429a      	cmp	r2, r3
 80133bc:	bfd8      	it	le
 80133be:	1a9b      	suble	r3, r3, r2
 80133c0:	6103      	str	r3, [r0, #16]
 80133c2:	4770      	bx	lr

080133c4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80133c4:	b570      	push	{r4, r5, r6, lr}
 80133c6:	4604      	mov	r4, r0
 80133c8:	460e      	mov	r6, r1
 80133ca:	6860      	ldr	r0, [r4, #4]
 80133cc:	6803      	ldr	r3, [r0, #0]
 80133ce:	685b      	ldr	r3, [r3, #4]
 80133d0:	4798      	blx	r3
 80133d2:	2800      	cmp	r0, #0
 80133d4:	d1f9      	bne.n	80133ca <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80133d6:	4d0d      	ldr	r5, [pc, #52]	; (801340c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80133d8:	6828      	ldr	r0, [r5, #0]
 80133da:	6803      	ldr	r3, [r0, #0]
 80133dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80133de:	4798      	blx	r3
 80133e0:	f7ef fc9a 	bl	8002d18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80133e4:	6828      	ldr	r0, [r5, #0]
 80133e6:	2101      	movs	r1, #1
 80133e8:	f7ff ff12 	bl	8013210 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80133ec:	6860      	ldr	r0, [r4, #4]
 80133ee:	6803      	ldr	r3, [r0, #0]
 80133f0:	4631      	mov	r1, r6
 80133f2:	689b      	ldr	r3, [r3, #8]
 80133f4:	4798      	blx	r3
 80133f6:	6823      	ldr	r3, [r4, #0]
 80133f8:	4620      	mov	r0, r4
 80133fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80133fc:	4798      	blx	r3
 80133fe:	6828      	ldr	r0, [r5, #0]
 8013400:	6803      	ldr	r3, [r0, #0]
 8013402:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013406:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013408:	4718      	bx	r3
 801340a:	bf00      	nop
 801340c:	2001384c 	.word	0x2001384c

08013410 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8013410:	b508      	push	{r3, lr}
 8013412:	f7ef fc73 	bl	8002cfc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013416:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801341a:	f7ef bc77 	b.w	8002d0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801341e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801341e:	b510      	push	{r4, lr}
 8013420:	2114      	movs	r1, #20
 8013422:	4604      	mov	r4, r0
 8013424:	f018 fbc9 	bl	802bbba <_ZdlPvj>
 8013428:	4620      	mov	r0, r4
 801342a:	bd10      	pop	{r4, pc}

0801342c <_ZN8touchgfx13DMA_Interface5startEv>:
 801342c:	b510      	push	{r4, lr}
 801342e:	4604      	mov	r4, r0
 8013430:	6840      	ldr	r0, [r0, #4]
 8013432:	6803      	ldr	r3, [r0, #0]
 8013434:	681b      	ldr	r3, [r3, #0]
 8013436:	4798      	blx	r3
 8013438:	b948      	cbnz	r0, 801344e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801343a:	7a63      	ldrb	r3, [r4, #9]
 801343c:	b13b      	cbz	r3, 801344e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801343e:	7a23      	ldrb	r3, [r4, #8]
 8013440:	b92b      	cbnz	r3, 801344e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013442:	6823      	ldr	r3, [r4, #0]
 8013444:	4620      	mov	r0, r4
 8013446:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013448:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801344c:	4718      	bx	r3
 801344e:	bd10      	pop	{r4, pc}

08013450 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8013450:	b570      	push	{r4, r5, r6, lr}
 8013452:	4604      	mov	r4, r0
 8013454:	6840      	ldr	r0, [r0, #4]
 8013456:	6803      	ldr	r3, [r0, #0]
 8013458:	681b      	ldr	r3, [r3, #0]
 801345a:	4798      	blx	r3
 801345c:	4605      	mov	r5, r0
 801345e:	b930      	cbnz	r0, 801346e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013460:	7a23      	ldrb	r3, [r4, #8]
 8013462:	b123      	cbz	r3, 801346e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013464:	6860      	ldr	r0, [r4, #4]
 8013466:	6803      	ldr	r3, [r0, #0]
 8013468:	695b      	ldr	r3, [r3, #20]
 801346a:	4798      	blx	r3
 801346c:	7225      	strb	r5, [r4, #8]
 801346e:	6860      	ldr	r0, [r4, #4]
 8013470:	6803      	ldr	r3, [r0, #0]
 8013472:	681b      	ldr	r3, [r3, #0]
 8013474:	4798      	blx	r3
 8013476:	b928      	cbnz	r0, 8013484 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8013478:	6823      	ldr	r3, [r4, #0]
 801347a:	4620      	mov	r0, r4
 801347c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801347e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013482:	4718      	bx	r3
 8013484:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013488:	f7ef bc4e 	b.w	8002d28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801348c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801348c:	b510      	push	{r4, lr}
 801348e:	4c04      	ldr	r4, [pc, #16]	; (80134a0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8013490:	6082      	str	r2, [r0, #8]
 8013492:	2200      	movs	r2, #0
 8013494:	e9c0 4100 	strd	r4, r1, [r0]
 8013498:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801349c:	bd10      	pop	{r4, pc}
 801349e:	bf00      	nop
 80134a0:	08030788 	.word	0x08030788

080134a4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80134a4:	6840      	ldr	r0, [r0, #4]
 80134a6:	6803      	ldr	r3, [r0, #0]
 80134a8:	681b      	ldr	r3, [r3, #0]
 80134aa:	4718      	bx	r3

080134ac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80134ac:	4b06      	ldr	r3, [pc, #24]	; (80134c8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80134ae:	60c1      	str	r1, [r0, #12]
 80134b0:	094a      	lsrs	r2, r1, #5
 80134b2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80134b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80134ba:	4313      	orrs	r3, r2
 80134bc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80134c0:	4319      	orrs	r1, r3
 80134c2:	8201      	strh	r1, [r0, #16]
 80134c4:	4770      	bx	lr
 80134c6:	bf00      	nop
 80134c8:	fffff800 	.word	0xfffff800

080134cc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80134cc:	f1a0 0008 	sub.w	r0, r0, #8
 80134d0:	e7ec      	b.n	80134ac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80134d2:	bf00      	nop

080134d4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80134d4:	b508      	push	{r3, lr}
 80134d6:	4b05      	ldr	r3, [pc, #20]	; (80134ec <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80134d8:	6818      	ldr	r0, [r3, #0]
 80134da:	6803      	ldr	r3, [r0, #0]
 80134dc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80134e0:	4798      	blx	r3
 80134e2:	1e43      	subs	r3, r0, #1
 80134e4:	4258      	negs	r0, r3
 80134e6:	4158      	adcs	r0, r3
 80134e8:	bd08      	pop	{r3, pc}
 80134ea:	bf00      	nop
 80134ec:	2001384c 	.word	0x2001384c

080134f0 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80134f0:	4770      	bx	lr

080134f2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80134f2:	3808      	subs	r0, #8
 80134f4:	4770      	bx	lr

080134f6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80134f6:	b430      	push	{r4, r5}
 80134f8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80134fc:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8013500:	8a02      	ldrh	r2, [r0, #16]
 8013502:	9202      	str	r2, [sp, #8]
 8013504:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013508:	68c2      	ldr	r2, [r0, #12]
 801350a:	4629      	mov	r1, r5
 801350c:	4620      	mov	r0, r4
 801350e:	bc30      	pop	{r4, r5}
 8013510:	f7ef bece 	b.w	80032b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08013514 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8013514:	f7ef beca 	b.w	80032ac <_ZN8touchgfx5paint8tearDownEv>

08013518 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8013518:	b510      	push	{r4, lr}
 801351a:	2114      	movs	r1, #20
 801351c:	4604      	mov	r4, r0
 801351e:	f018 fb4c 	bl	802bbba <_ZdlPvj>
 8013522:	4620      	mov	r0, r4
 8013524:	bd10      	pop	{r4, pc}

08013526 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8013526:	f1a0 0008 	sub.w	r0, r0, #8
 801352a:	e7f5      	b.n	8013518 <_ZN8touchgfx13PainterRGB565D0Ev>

0801352c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801352c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801352e:	6803      	ldr	r3, [r0, #0]
 8013530:	460d      	mov	r5, r1
 8013532:	4604      	mov	r4, r0
 8013534:	4601      	mov	r1, r0
 8013536:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8013538:	a802      	add	r0, sp, #8
 801353a:	4798      	blx	r3
 801353c:	6828      	ldr	r0, [r5, #0]
 801353e:	6869      	ldr	r1, [r5, #4]
 8013540:	466b      	mov	r3, sp
 8013542:	c303      	stmia	r3!, {r0, r1}
 8013544:	4668      	mov	r0, sp
 8013546:	4619      	mov	r1, r3
 8013548:	f7fe fb30 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 801354c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801354e:	b188      	cbz	r0, 8013574 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013550:	6803      	ldr	r3, [r0, #0]
 8013552:	1d21      	adds	r1, r4, #4
 8013554:	68db      	ldr	r3, [r3, #12]
 8013556:	4798      	blx	r3
 8013558:	b160      	cbz	r0, 8013574 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801355a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801355e:	2b00      	cmp	r3, #0
 8013560:	dd08      	ble.n	8013574 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013562:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8013566:	2d00      	cmp	r5, #0
 8013568:	dd04      	ble.n	8013574 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801356a:	4a2b      	ldr	r2, [pc, #172]	; (8013618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 801356c:	7812      	ldrb	r2, [r2, #0]
 801356e:	b11a      	cbz	r2, 8013578 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8013570:	2a01      	cmp	r2, #1
 8013572:	d029      	beq.n	80135c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8013574:	b004      	add	sp, #16
 8013576:	bd70      	pop	{r4, r5, r6, pc}
 8013578:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801357c:	441d      	add	r5, r3
 801357e:	b2ad      	uxth	r5, r5
 8013580:	b22e      	sxth	r6, r5
 8013582:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8013586:	42b3      	cmp	r3, r6
 8013588:	daf4      	bge.n	8013574 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801358a:	6823      	ldr	r3, [r4, #0]
 801358c:	4669      	mov	r1, sp
 801358e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013590:	4620      	mov	r0, r4
 8013592:	4798      	blx	r3
 8013594:	b940      	cbnz	r0, 80135a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8013596:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801359a:	2b01      	cmp	r3, #1
 801359c:	d004      	beq.n	80135a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801359e:	3301      	adds	r3, #1
 80135a0:	105b      	asrs	r3, r3, #1
 80135a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80135a6:	e7f0      	b.n	801358a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80135a8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80135ac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80135b0:	4413      	add	r3, r2
 80135b2:	b29b      	uxth	r3, r3
 80135b4:	441a      	add	r2, r3
 80135b6:	b212      	sxth	r2, r2
 80135b8:	4296      	cmp	r6, r2
 80135ba:	f8ad 3002 	strh.w	r3, [sp, #2]
 80135be:	dae0      	bge.n	8013582 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80135c0:	1aeb      	subs	r3, r5, r3
 80135c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80135c6:	e7dc      	b.n	8013582 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80135c8:	f8bd 5000 	ldrh.w	r5, [sp]
 80135cc:	441d      	add	r5, r3
 80135ce:	b2ad      	uxth	r5, r5
 80135d0:	b22e      	sxth	r6, r5
 80135d2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80135d6:	42b3      	cmp	r3, r6
 80135d8:	dacc      	bge.n	8013574 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80135da:	6823      	ldr	r3, [r4, #0]
 80135dc:	4669      	mov	r1, sp
 80135de:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80135e0:	4620      	mov	r0, r4
 80135e2:	4798      	blx	r3
 80135e4:	b940      	cbnz	r0, 80135f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80135e6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80135ea:	2b01      	cmp	r3, #1
 80135ec:	d004      	beq.n	80135f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80135ee:	3301      	adds	r3, #1
 80135f0:	105b      	asrs	r3, r3, #1
 80135f2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80135f6:	e7f0      	b.n	80135da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80135f8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80135fc:	f8bd 3000 	ldrh.w	r3, [sp]
 8013600:	4413      	add	r3, r2
 8013602:	b29b      	uxth	r3, r3
 8013604:	441a      	add	r2, r3
 8013606:	b212      	sxth	r2, r2
 8013608:	4296      	cmp	r6, r2
 801360a:	f8ad 3000 	strh.w	r3, [sp]
 801360e:	dae0      	bge.n	80135d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8013610:	1aeb      	subs	r3, r5, r3
 8013612:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013616:	e7dc      	b.n	80135d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8013618:	20013844 	.word	0x20013844

0801361c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801361c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801361e:	6803      	ldr	r3, [r0, #0]
 8013620:	4604      	mov	r4, r0
 8013622:	4601      	mov	r1, r0
 8013624:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8013626:	4668      	mov	r0, sp
 8013628:	4798      	blx	r3
 801362a:	2100      	movs	r1, #0
 801362c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013630:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013634:	9102      	str	r1, [sp, #8]
 8013636:	4668      	mov	r0, sp
 8013638:	a902      	add	r1, sp, #8
 801363a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801363e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8013642:	f7fe fab3 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8013646:	6823      	ldr	r3, [r4, #0]
 8013648:	4669      	mov	r1, sp
 801364a:	691b      	ldr	r3, [r3, #16]
 801364c:	4620      	mov	r0, r4
 801364e:	4798      	blx	r3
 8013650:	b004      	add	sp, #16
 8013652:	bd10      	pop	{r4, pc}

08013654 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8013654:	2101      	movs	r1, #1
 8013656:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801365a:	490b      	ldr	r1, [pc, #44]	; (8013688 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801365c:	6001      	str	r1, [r0, #0]
 801365e:	2200      	movs	r2, #0
 8013660:	21ff      	movs	r1, #255	; 0xff
 8013662:	8082      	strh	r2, [r0, #4]
 8013664:	80c2      	strh	r2, [r0, #6]
 8013666:	8102      	strh	r2, [r0, #8]
 8013668:	8142      	strh	r2, [r0, #10]
 801366a:	8182      	strh	r2, [r0, #12]
 801366c:	81c2      	strh	r2, [r0, #14]
 801366e:	8202      	strh	r2, [r0, #16]
 8013670:	8242      	strh	r2, [r0, #18]
 8013672:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013676:	61c2      	str	r2, [r0, #28]
 8013678:	8402      	strh	r2, [r0, #32]
 801367a:	8442      	strh	r2, [r0, #34]	; 0x22
 801367c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8013680:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8013684:	6282      	str	r2, [r0, #40]	; 0x28
 8013686:	4770      	bx	lr
 8013688:	080307e4 	.word	0x080307e4

0801368c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801368c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8013690:	4602      	mov	r2, r0
 8013692:	cb03      	ldmia	r3!, {r0, r1}
 8013694:	6010      	str	r0, [r2, #0]
 8013696:	6051      	str	r1, [r2, #4]
 8013698:	4610      	mov	r0, r2
 801369a:	4770      	bx	lr

0801369c <_ZN8touchgfx4LineD1Ev>:
 801369c:	4770      	bx	lr

0801369e <_ZN8touchgfx4LineD0Ev>:
 801369e:	b510      	push	{r4, lr}
 80136a0:	2170      	movs	r1, #112	; 0x70
 80136a2:	4604      	mov	r4, r0
 80136a4:	f018 fa89 	bl	802bbba <_ZdlPvj>
 80136a8:	4620      	mov	r0, r4
 80136aa:	bd10      	pop	{r4, pc}

080136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80136ac:	b507      	push	{r0, r1, r2, lr}
 80136ae:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80136b2:	ab01      	add	r3, sp, #4
 80136b4:	6809      	ldr	r1, [r1, #0]
 80136b6:	6800      	ldr	r0, [r0, #0]
 80136b8:	f005 fc80 	bl	8018fbc <_ZN8touchgfx6muldivElllRl>
 80136bc:	b003      	add	sp, #12
 80136be:	f85d fb04 	ldr.w	pc, [sp], #4

080136c2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80136c2:	6800      	ldr	r0, [r0, #0]
 80136c4:	2800      	cmp	r0, #0
 80136c6:	bfb9      	ittee	lt
 80136c8:	2320      	movlt	r3, #32
 80136ca:	fb90 f0f3 	sdivlt	r0, r0, r3
 80136ce:	301f      	addge	r0, #31
 80136d0:	1140      	asrge	r0, r0, #5
 80136d2:	4770      	bx	lr

080136d4 <_ZNK8touchgfx4Line17invalidateContentEv>:
 80136d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136d8:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80136dc:	b089      	sub	sp, #36	; 0x24
 80136de:	4604      	mov	r4, r0
 80136e0:	b353      	cbz	r3, 8013738 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80136e2:	6803      	ldr	r3, [r0, #0]
 80136e4:	4601      	mov	r1, r0
 80136e6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80136e8:	a802      	add	r0, sp, #8
 80136ea:	4798      	blx	r3
 80136ec:	2220      	movs	r2, #32
 80136ee:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80136f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80136f4:	fb9a f0f2 	sdiv	r0, sl, r2
 80136f8:	fb91 f5f2 	sdiv	r5, r1, r2
 80136fc:	1b40      	subs	r0, r0, r5
 80136fe:	2800      	cmp	r0, #0
 8013700:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013702:	fb93 f6f2 	sdiv	r6, r3, r2
 8013706:	bfb8      	it	lt
 8013708:	4240      	neglt	r0, r0
 801370a:	0076      	lsls	r6, r6, #1
 801370c:	4286      	cmp	r6, r0
 801370e:	f8d4 b000 	ldr.w	fp, [r4]
 8013712:	dc0c      	bgt.n	801372e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8013714:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8013716:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801371a:	fb95 f0f2 	sdiv	r0, r5, r2
 801371e:	fb98 f7f2 	sdiv	r7, r8, r2
 8013722:	1bc0      	subs	r0, r0, r7
 8013724:	2800      	cmp	r0, #0
 8013726:	bfb8      	it	lt
 8013728:	4240      	neglt	r0, r0
 801372a:	4286      	cmp	r6, r0
 801372c:	dd07      	ble.n	801373e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801372e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8013732:	a902      	add	r1, sp, #8
 8013734:	4620      	mov	r0, r4
 8013736:	4798      	blx	r3
 8013738:	b009      	add	sp, #36	; 0x24
 801373a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801373e:	3301      	adds	r3, #1
 8013740:	2002      	movs	r0, #2
 8013742:	f10d 0920 	add.w	r9, sp, #32
 8013746:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801374a:	4103      	asrs	r3, r0
 801374c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8013750:	eb01 060a 	add.w	r6, r1, sl
 8013754:	eb08 0705 	add.w	r7, r8, r5
 8013758:	fb96 f6f0 	sdiv	r6, r6, r0
 801375c:	fb97 f7f0 	sdiv	r7, r7, r0
 8013760:	4648      	mov	r0, r9
 8013762:	9101      	str	r1, [sp, #4]
 8013764:	b236      	sxth	r6, r6
 8013766:	b23f      	sxth	r7, r7
 8013768:	fb96 f6f2 	sdiv	r6, r6, r2
 801376c:	fb97 f7f2 	sdiv	r7, r7, r2
 8013770:	f7ff ffa7 	bl	80136c2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013774:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013778:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801377c:	9901      	ldr	r1, [sp, #4]
 801377e:	4293      	cmp	r3, r2
 8013780:	fa1f fe87 	uxth.w	lr, r7
 8013784:	fa1f fc86 	uxth.w	ip, r6
 8013788:	eba1 0a0a 	sub.w	sl, r1, sl
 801378c:	b280      	uxth	r0, r0
 801378e:	da54      	bge.n	801383a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8013790:	ebac 0100 	sub.w	r1, ip, r0
 8013794:	b289      	uxth	r1, r1
 8013796:	4460      	add	r0, ip
 8013798:	f1ba 0f00 	cmp.w	sl, #0
 801379c:	b20e      	sxth	r6, r1
 801379e:	b280      	uxth	r0, r0
 80137a0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80137a4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80137a8:	da29      	bge.n	80137fe <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80137aa:	eba8 0505 	sub.w	r5, r8, r5
 80137ae:	2d00      	cmp	r5, #0
 80137b0:	da2a      	bge.n	8013808 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80137b2:	fa1f f88a 	uxth.w	r8, sl
 80137b6:	eba0 0008 	sub.w	r0, r0, r8
 80137ba:	fa1f f58c 	uxth.w	r5, ip
 80137be:	4443      	add	r3, r8
 80137c0:	f8ad 0014 	strh.w	r0, [sp, #20]
 80137c4:	1a59      	subs	r1, r3, r1
 80137c6:	ebae 0005 	sub.w	r0, lr, r5
 80137ca:	f8ad a010 	strh.w	sl, [sp, #16]
 80137ce:	f8ad c012 	strh.w	ip, [sp, #18]
 80137d2:	f8ad 0016 	strh.w	r0, [sp, #22]
 80137d6:	f8ad 6018 	strh.w	r6, [sp, #24]
 80137da:	f8ad 701a 	strh.w	r7, [sp, #26]
 80137de:	f8ad 101c 	strh.w	r1, [sp, #28]
 80137e2:	442a      	add	r2, r5
 80137e4:	eba2 0e0e 	sub.w	lr, r2, lr
 80137e8:	f8ad e01e 	strh.w	lr, [sp, #30]
 80137ec:	f8db 3010 	ldr.w	r3, [fp, #16]
 80137f0:	a904      	add	r1, sp, #16
 80137f2:	4620      	mov	r0, r4
 80137f4:	4798      	blx	r3
 80137f6:	6823      	ldr	r3, [r4, #0]
 80137f8:	4649      	mov	r1, r9
 80137fa:	691b      	ldr	r3, [r3, #16]
 80137fc:	e79a      	b.n	8013734 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80137fe:	d003      	beq.n	8013808 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8013800:	eba8 0505 	sub.w	r5, r8, r5
 8013804:	2d00      	cmp	r5, #0
 8013806:	dcd4      	bgt.n	80137b2 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8013808:	fa1f f88a 	uxth.w	r8, sl
 801380c:	4443      	add	r3, r8
 801380e:	fa1f f58c 	uxth.w	r5, ip
 8013812:	1a59      	subs	r1, r3, r1
 8013814:	eba0 0008 	sub.w	r0, r0, r8
 8013818:	ebae 0305 	sub.w	r3, lr, r5
 801381c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8013820:	f8ad c012 	strh.w	ip, [sp, #18]
 8013824:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013828:	f8ad 3016 	strh.w	r3, [sp, #22]
 801382c:	f8ad a018 	strh.w	sl, [sp, #24]
 8013830:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013834:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013838:	e7d3      	b.n	80137e2 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801383a:	ebae 0100 	sub.w	r1, lr, r0
 801383e:	b289      	uxth	r1, r1
 8013840:	4470      	add	r0, lr
 8013842:	f1ba 0f00 	cmp.w	sl, #0
 8013846:	b20f      	sxth	r7, r1
 8013848:	b280      	uxth	r0, r0
 801384a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801384e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8013852:	da20      	bge.n	8013896 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8013854:	eba8 0505 	sub.w	r5, r8, r5
 8013858:	2d00      	cmp	r5, #0
 801385a:	da21      	bge.n	80138a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801385c:	fa1f f88e 	uxth.w	r8, lr
 8013860:	fa1f f58a 	uxth.w	r5, sl
 8013864:	4443      	add	r3, r8
 8013866:	442a      	add	r2, r5
 8013868:	f8ad e010 	strh.w	lr, [sp, #16]
 801386c:	1b40      	subs	r0, r0, r5
 801386e:	ebac 0e08 	sub.w	lr, ip, r8
 8013872:	1a51      	subs	r1, r2, r1
 8013874:	eba3 0c0c 	sub.w	ip, r3, ip
 8013878:	f8ad a012 	strh.w	sl, [sp, #18]
 801387c:	f8ad e014 	strh.w	lr, [sp, #20]
 8013880:	f8ad 0016 	strh.w	r0, [sp, #22]
 8013884:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013888:	f8ad 701a 	strh.w	r7, [sp, #26]
 801388c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8013890:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013894:	e7aa      	b.n	80137ec <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8013896:	d003      	beq.n	80138a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8013898:	eba8 0505 	sub.w	r5, r8, r5
 801389c:	2d00      	cmp	r5, #0
 801389e:	dcdd      	bgt.n	801385c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80138a0:	fa1f f58e 	uxth.w	r5, lr
 80138a4:	fa1f f88a 	uxth.w	r8, sl
 80138a8:	4442      	add	r2, r8
 80138aa:	442b      	add	r3, r5
 80138ac:	f8ad 7012 	strh.w	r7, [sp, #18]
 80138b0:	1a51      	subs	r1, r2, r1
 80138b2:	ebac 0705 	sub.w	r7, ip, r5
 80138b6:	eba0 0008 	sub.w	r0, r0, r8
 80138ba:	eba3 0c0c 	sub.w	ip, r3, ip
 80138be:	f8ad e010 	strh.w	lr, [sp, #16]
 80138c2:	f8ad 7014 	strh.w	r7, [sp, #20]
 80138c6:	f8ad 1016 	strh.w	r1, [sp, #22]
 80138ca:	f8ad 6018 	strh.w	r6, [sp, #24]
 80138ce:	f8ad a01a 	strh.w	sl, [sp, #26]
 80138d2:	f8ad c01c 	strh.w	ip, [sp, #28]
 80138d6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80138da:	e787      	b.n	80137ec <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080138dc <_ZN8touchgfx7CWRUtil4sineEi>:
 80138dc:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80138e0:	fb90 f2f3 	sdiv	r2, r0, r3
 80138e4:	fb02 0013 	mls	r0, r2, r3, r0
 80138e8:	2800      	cmp	r0, #0
 80138ea:	bfb8      	it	lt
 80138ec:	18c0      	addlt	r0, r0, r3
 80138ee:	285a      	cmp	r0, #90	; 0x5a
 80138f0:	4b09      	ldr	r3, [pc, #36]	; (8013918 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80138f2:	dc02      	bgt.n	80138fa <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80138f4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80138f8:	4770      	bx	lr
 80138fa:	28b4      	cmp	r0, #180	; 0xb4
 80138fc:	dc02      	bgt.n	8013904 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80138fe:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8013902:	e7f7      	b.n	80138f4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8013904:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8013908:	bfd4      	ite	le
 801390a:	38b4      	suble	r0, #180	; 0xb4
 801390c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8013910:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013914:	4240      	negs	r0, r0
 8013916:	4770      	bx	lr
 8013918:	080308b0 	.word	0x080308b0

0801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801391c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8013920:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013922:	fb90 f2f3 	sdiv	r2, r0, r3
 8013926:	fb02 0013 	mls	r0, r2, r3, r0
 801392a:	2800      	cmp	r0, #0
 801392c:	bfb8      	it	lt
 801392e:	18c0      	addlt	r0, r0, r3
 8013930:	1144      	asrs	r4, r0, #5
 8013932:	f000 061f 	and.w	r6, r0, #31
 8013936:	4620      	mov	r0, r4
 8013938:	f7ff ffd0 	bl	80138dc <_ZN8touchgfx7CWRUtil4sineEi>
 801393c:	4605      	mov	r5, r0
 801393e:	b90e      	cbnz	r6, 8013944 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8013940:	b002      	add	sp, #8
 8013942:	bd70      	pop	{r4, r5, r6, pc}
 8013944:	1c60      	adds	r0, r4, #1
 8013946:	f7ff ffc9 	bl	80138dc <_ZN8touchgfx7CWRUtil4sineEi>
 801394a:	ab01      	add	r3, sp, #4
 801394c:	2220      	movs	r2, #32
 801394e:	4631      	mov	r1, r6
 8013950:	1b40      	subs	r0, r0, r5
 8013952:	f005 fb33 	bl	8018fbc <_ZN8touchgfx6muldivElllRl>
 8013956:	4428      	add	r0, r5
 8013958:	e7f2      	b.n	8013940 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801395a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 801395a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 801395e:	bf2c      	ite	cs
 8013960:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8013964:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8013968:	2300      	movs	r3, #0
 801396a:	1899      	adds	r1, r3, r2
 801396c:	4288      	cmp	r0, r1
 801396e:	bf24      	itt	cs
 8013970:	1853      	addcs	r3, r2, r1
 8013972:	1a40      	subcs	r0, r0, r1
 8013974:	0892      	lsrs	r2, r2, #2
 8013976:	ea4f 0353 	mov.w	r3, r3, lsr #1
 801397a:	d1f6      	bne.n	801396a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 801397c:	4618      	mov	r0, r3
 801397e:	4770      	bx	lr

08013980 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8013980:	b510      	push	{r4, lr}
 8013982:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8013986:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801398a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801398e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8013992:	13a4      	asrs	r4, r4, #14
 8013994:	139b      	asrs	r3, r3, #14
 8013996:	429c      	cmp	r4, r3
 8013998:	bfb8      	it	lt
 801399a:	461c      	movlt	r4, r3
 801399c:	2c01      	cmp	r4, #1
 801399e:	dd07      	ble.n	80139b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80139a0:	fb91 f1f4 	sdiv	r1, r1, r4
 80139a4:	fb90 f0f4 	sdiv	r0, r0, r4
 80139a8:	f7ff ffea 	bl	8013980 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80139ac:	4360      	muls	r0, r4
 80139ae:	bd10      	pop	{r4, pc}
 80139b0:	4340      	muls	r0, r0
 80139b2:	fb01 0001 	mla	r0, r1, r1, r0
 80139b6:	f7ff ffd0 	bl	801395a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80139ba:	e7f8      	b.n	80139ae <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080139bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 80139bc:	2800      	cmp	r0, #0
 80139be:	b508      	push	{r3, lr}
 80139c0:	da05      	bge.n	80139ce <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 80139c2:	4240      	negs	r0, r0
 80139c4:	f7ff fffa 	bl	80139bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80139c8:	4240      	negs	r0, r0
 80139ca:	b240      	sxtb	r0, r0
 80139cc:	bd08      	pop	{r3, pc}
 80139ce:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80139d2:	dc11      	bgt.n	80139f8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 80139d4:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80139d8:	dd09      	ble.n	80139ee <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80139da:	4340      	muls	r0, r0
 80139dc:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80139e0:	f7ff ffbb 	bl	801395a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80139e4:	f7ff ffea 	bl	80139bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80139e8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80139ec:	e7ed      	b.n	80139ca <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80139ee:	3003      	adds	r0, #3
 80139f0:	10c0      	asrs	r0, r0, #3
 80139f2:	4b02      	ldr	r3, [pc, #8]	; (80139fc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80139f4:	5618      	ldrsb	r0, [r3, r0]
 80139f6:	e7e9      	b.n	80139cc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80139f8:	2000      	movs	r0, #0
 80139fa:	e7e7      	b.n	80139cc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80139fc:	08030854 	.word	0x08030854

08013a00 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8013a00:	4281      	cmp	r1, r0
 8013a02:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013a04:	460c      	mov	r4, r1
 8013a06:	4615      	mov	r5, r2
 8013a08:	dd07      	ble.n	8013a1a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8013a0a:	4601      	mov	r1, r0
 8013a0c:	4620      	mov	r0, r4
 8013a0e:	f7ff fff7 	bl	8013a00 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013a12:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8013a16:	b003      	add	sp, #12
 8013a18:	bd30      	pop	{r4, r5, pc}
 8013a1a:	f7ff ffb1 	bl	8013980 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013a1e:	6028      	str	r0, [r5, #0]
 8013a20:	2800      	cmp	r0, #0
 8013a22:	d0f8      	beq.n	8013a16 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8013a24:	4602      	mov	r2, r0
 8013a26:	ab01      	add	r3, sp, #4
 8013a28:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013a2c:	4620      	mov	r0, r4
 8013a2e:	f005 fac5 	bl	8018fbc <_ZN8touchgfx6muldivElllRl>
 8013a32:	f7ff ffc3 	bl	80139bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8013a36:	e7ee      	b.n	8013a16 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08013a38 <_ZN8touchgfx4LineC1Ev>:
 8013a38:	b510      	push	{r4, lr}
 8013a3a:	4604      	mov	r4, r0
 8013a3c:	f7ff fe0a 	bl	8013654 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8013a40:	4b0c      	ldr	r3, [pc, #48]	; (8013a74 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8013a42:	6023      	str	r3, [r4, #0]
 8013a44:	2220      	movs	r2, #32
 8013a46:	2300      	movs	r3, #0
 8013a48:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013a4a:	2212      	movs	r2, #18
 8013a4c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8013a50:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8013a54:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8013a58:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8013a5c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8013a60:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8013a64:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8013a68:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8013a6c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8013a6e:	60a3      	str	r3, [r4, #8]
 8013a70:	4620      	mov	r0, r4
 8013a72:	bd10      	pop	{r4, pc}
 8013a74:	08030970 	.word	0x08030970

08013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8013a78:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8013a7c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8013a7e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013a80:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8013a82:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8013a84:	1aff      	subs	r7, r7, r3
 8013a86:	4604      	mov	r4, r0
 8013a88:	eba5 0502 	sub.w	r5, r5, r2
 8013a8c:	d142      	bne.n	8013b14 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8013a8e:	b955      	cbnz	r5, 8013aa6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8013a90:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8013a94:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8013a98:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8013a9c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8013aa0:	b002      	add	sp, #8
 8013aa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013aa6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8013aaa:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8013aae:	4629      	mov	r1, r5
 8013ab0:	4642      	mov	r2, r8
 8013ab2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013ab4:	f005 faa1 	bl	8018ffa <_ZN8touchgfx6muldivElll>
 8013ab8:	2502      	movs	r5, #2
 8013aba:	4642      	mov	r2, r8
 8013abc:	fb90 f6f5 	sdiv	r6, r0, r5
 8013ac0:	4639      	mov	r1, r7
 8013ac2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013ac4:	f005 fa99 	bl	8018ffa <_ZN8touchgfx6muldivElll>
 8013ac8:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8013acc:	fb90 f5f5 	sdiv	r5, r0, r5
 8013ad0:	f1b9 0f00 	cmp.w	r9, #0
 8013ad4:	d067      	beq.n	8013ba6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8013ad6:	f1b9 0f02 	cmp.w	r9, #2
 8013ada:	d878      	bhi.n	8013bce <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8013adc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013ade:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8013ae0:	1b93      	subs	r3, r2, r6
 8013ae2:	1b5b      	subs	r3, r3, r5
 8013ae4:	6463      	str	r3, [r4, #68]	; 0x44
 8013ae6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013ae8:	18e9      	adds	r1, r5, r3
 8013aea:	1b89      	subs	r1, r1, r6
 8013aec:	6561      	str	r1, [r4, #84]	; 0x54
 8013aee:	1b81      	subs	r1, r0, r6
 8013af0:	4429      	add	r1, r5
 8013af2:	64a1      	str	r1, [r4, #72]	; 0x48
 8013af4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8013af6:	4430      	add	r0, r6
 8013af8:	186f      	adds	r7, r5, r1
 8013afa:	4432      	add	r2, r6
 8013afc:	1b49      	subs	r1, r1, r5
 8013afe:	4437      	add	r7, r6
 8013b00:	4428      	add	r0, r5
 8013b02:	4431      	add	r1, r6
 8013b04:	1b52      	subs	r2, r2, r5
 8013b06:	1b5b      	subs	r3, r3, r5
 8013b08:	65a7      	str	r7, [r4, #88]	; 0x58
 8013b0a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8013b0c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8013b0e:	6522      	str	r2, [r4, #80]	; 0x50
 8013b10:	1b9b      	subs	r3, r3, r6
 8013b12:	e05b      	b.n	8013bcc <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8013b14:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8013b18:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8013b1c:	2d00      	cmp	r5, #0
 8013b1e:	d0c6      	beq.n	8013aae <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8013b20:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8013b24:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8013b28:	fb93 f2f8 	sdiv	r2, r3, r8
 8013b2c:	fb08 3312 	mls	r3, r8, r2, r3
 8013b30:	b353      	cbz	r3, 8013b88 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8013b32:	fb98 f2f3 	sdiv	r2, r8, r3
 8013b36:	fb03 8812 	mls	r8, r3, r2, r8
 8013b3a:	f1b8 0f00 	cmp.w	r8, #0
 8013b3e:	d1f3      	bne.n	8013b28 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8013b40:	2b01      	cmp	r3, #1
 8013b42:	bf1c      	itt	ne
 8013b44:	fb95 f5f3 	sdivne	r5, r5, r3
 8013b48:	fb97 f7f3 	sdivne	r7, r7, r3
 8013b4c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8013b50:	f24b 5104 	movw	r1, #46340	; 0xb504
 8013b54:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8013b58:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8013b5c:	428b      	cmp	r3, r1
 8013b5e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8013b62:	4608      	mov	r0, r1
 8013b64:	dd01      	ble.n	8013b6a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8013b66:	428a      	cmp	r2, r1
 8013b68:	dc10      	bgt.n	8013b8c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8013b6a:	fb90 f3f3 	sdiv	r3, r0, r3
 8013b6e:	fb90 f2f2 	sdiv	r2, r0, r2
 8013b72:	4293      	cmp	r3, r2
 8013b74:	bfa8      	it	ge
 8013b76:	4613      	movge	r3, r2
 8013b78:	435f      	muls	r7, r3
 8013b7a:	435d      	muls	r5, r3
 8013b7c:	4629      	mov	r1, r5
 8013b7e:	4638      	mov	r0, r7
 8013b80:	f7ff fefe 	bl	8013980 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013b84:	4680      	mov	r8, r0
 8013b86:	e792      	b.n	8013aae <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8013b88:	4643      	mov	r3, r8
 8013b8a:	e7d9      	b.n	8013b40 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8013b8c:	fb93 f3f1 	sdiv	r3, r3, r1
 8013b90:	fb92 f2f1 	sdiv	r2, r2, r1
 8013b94:	4293      	cmp	r3, r2
 8013b96:	bfcc      	ite	gt
 8013b98:	3301      	addgt	r3, #1
 8013b9a:	1c53      	addle	r3, r2, #1
 8013b9c:	fb97 f7f3 	sdiv	r7, r7, r3
 8013ba0:	fb95 f5f3 	sdiv	r5, r5, r3
 8013ba4:	e7ea      	b.n	8013b7c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8013ba6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013ba8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8013baa:	1b93      	subs	r3, r2, r6
 8013bac:	6463      	str	r3, [r4, #68]	; 0x44
 8013bae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013bb0:	18e9      	adds	r1, r5, r3
 8013bb2:	6561      	str	r1, [r4, #84]	; 0x54
 8013bb4:	1b81      	subs	r1, r0, r6
 8013bb6:	64a1      	str	r1, [r4, #72]	; 0x48
 8013bb8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8013bba:	4430      	add	r0, r6
 8013bbc:	186f      	adds	r7, r5, r1
 8013bbe:	4432      	add	r2, r6
 8013bc0:	1b49      	subs	r1, r1, r5
 8013bc2:	65a7      	str	r7, [r4, #88]	; 0x58
 8013bc4:	64e0      	str	r0, [r4, #76]	; 0x4c
 8013bc6:	65e1      	str	r1, [r4, #92]	; 0x5c
 8013bc8:	6522      	str	r2, [r4, #80]	; 0x50
 8013bca:	1b5b      	subs	r3, r3, r5
 8013bcc:	6623      	str	r3, [r4, #96]	; 0x60
 8013bce:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8013bd0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8013bd2:	9200      	str	r2, [sp, #0]
 8013bd4:	9301      	str	r3, [sp, #4]
 8013bd6:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8013bda:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8013bde:	680f      	ldr	r7, [r1, #0]
 8013be0:	9800      	ldr	r0, [sp, #0]
 8013be2:	42ba      	cmp	r2, r7
 8013be4:	bfa8      	it	ge
 8013be6:	463a      	movge	r2, r7
 8013be8:	4287      	cmp	r7, r0
 8013bea:	bfc8      	it	gt
 8013bec:	9700      	strgt	r7, [sp, #0]
 8013bee:	690f      	ldr	r7, [r1, #16]
 8013bf0:	9801      	ldr	r0, [sp, #4]
 8013bf2:	42bb      	cmp	r3, r7
 8013bf4:	bfa8      	it	ge
 8013bf6:	463b      	movge	r3, r7
 8013bf8:	3104      	adds	r1, #4
 8013bfa:	4287      	cmp	r7, r0
 8013bfc:	bfc8      	it	gt
 8013bfe:	9701      	strgt	r7, [sp, #4]
 8013c00:	458c      	cmp	ip, r1
 8013c02:	d1ec      	bne.n	8013bde <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8013c04:	4668      	mov	r0, sp
 8013c06:	2720      	movs	r7, #32
 8013c08:	fb92 f8f7 	sdiv	r8, r2, r7
 8013c0c:	fb93 f7f7 	sdiv	r7, r3, r7
 8013c10:	f7ff fd57 	bl	80136c2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013c14:	4682      	mov	sl, r0
 8013c16:	a801      	add	r0, sp, #4
 8013c18:	f7ff fd53 	bl	80136c2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013c1c:	ebaa 0208 	sub.w	r2, sl, r8
 8013c20:	1bc0      	subs	r0, r0, r7
 8013c22:	f1b9 0f01 	cmp.w	r9, #1
 8013c26:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8013c2a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8013c2e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8013c32:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8013c36:	f47f af33 	bne.w	8013aa0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8013c3a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8013c3c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8013c3e:	1b83      	subs	r3, r0, r6
 8013c40:	6463      	str	r3, [r4, #68]	; 0x44
 8013c42:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013c44:	18ea      	adds	r2, r5, r3
 8013c46:	6562      	str	r2, [r4, #84]	; 0x54
 8013c48:	1b8a      	subs	r2, r1, r6
 8013c4a:	64a2      	str	r2, [r4, #72]	; 0x48
 8013c4c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013c4e:	4431      	add	r1, r6
 8013c50:	18af      	adds	r7, r5, r2
 8013c52:	4406      	add	r6, r0
 8013c54:	1b52      	subs	r2, r2, r5
 8013c56:	1b5d      	subs	r5, r3, r5
 8013c58:	65a7      	str	r7, [r4, #88]	; 0x58
 8013c5a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8013c5c:	65e2      	str	r2, [r4, #92]	; 0x5c
 8013c5e:	6526      	str	r6, [r4, #80]	; 0x50
 8013c60:	6625      	str	r5, [r4, #96]	; 0x60
 8013c62:	e71d      	b.n	8013aa0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08013c64 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8013c64:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013c66:	428b      	cmp	r3, r1
 8013c68:	d102      	bne.n	8013c70 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8013c6a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8013c6c:	4293      	cmp	r3, r2
 8013c6e:	d003      	beq.n	8013c78 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8013c70:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8013c74:	f7ff bf00 	b.w	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8013c78:	4770      	bx	lr

08013c7a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8013c7a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8013c7c:	428b      	cmp	r3, r1
 8013c7e:	d102      	bne.n	8013c86 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8013c80:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013c82:	4293      	cmp	r3, r2
 8013c84:	d003      	beq.n	8013c8e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8013c86:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8013c8a:	f7ff bef5 	b.w	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8013c8e:	4770      	bx	lr

08013c90 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8013c90:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8013c94:	f7ff bef0 	b.w	8013a78 <_ZN8touchgfx4Line17updateCachedShapeEv>

08013c98 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8013c98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c9c:	b0a0      	sub	sp, #128	; 0x80
 8013c9e:	4604      	mov	r4, r0
 8013ca0:	460a      	mov	r2, r1
 8013ca2:	4601      	mov	r1, r0
 8013ca4:	a804      	add	r0, sp, #16
 8013ca6:	f015 f845 	bl	8028d34 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8013caa:	2300      	movs	r3, #0
 8013cac:	9301      	str	r3, [sp, #4]
 8013cae:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8013cb2:	2b01      	cmp	r3, #1
 8013cb4:	d17c      	bne.n	8013db0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8013cb6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013cb8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013cba:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8013cbc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013cbe:	1ac0      	subs	r0, r0, r3
 8013cc0:	eba1 0102 	sub.w	r1, r1, r2
 8013cc4:	d437      	bmi.n	8013d36 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8013cc6:	2900      	cmp	r1, #0
 8013cc8:	aa01      	add	r2, sp, #4
 8013cca:	db2e      	blt.n	8013d2a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8013ccc:	f7ff fe98 	bl	8013a00 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013cd0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8013cd4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8013cd6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8013cd8:	a804      	add	r0, sp, #16
 8013cda:	f015 f9ab 	bl	8029034 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013cde:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8013ce0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8013ce2:	a804      	add	r0, sp, #16
 8013ce4:	f015 f9f3 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013ce8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8013cea:	2db3      	cmp	r5, #179	; 0xb3
 8013cec:	dc33      	bgt.n	8013d56 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8013cee:	eba6 0805 	sub.w	r8, r6, r5
 8013cf2:	4640      	mov	r0, r8
 8013cf4:	f7ff fdf2 	bl	80138dc <_ZN8touchgfx7CWRUtil4sineEi>
 8013cf8:	a902      	add	r1, sp, #8
 8013cfa:	9002      	str	r0, [sp, #8]
 8013cfc:	a801      	add	r0, sp, #4
 8013cfe:	f7ff fcd5 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d02:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8013d04:	1847      	adds	r7, r0, r1
 8013d06:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8013d0a:	f7ff fde7 	bl	80138dc <_ZN8touchgfx7CWRUtil4sineEi>
 8013d0e:	a903      	add	r1, sp, #12
 8013d10:	9003      	str	r0, [sp, #12]
 8013d12:	a801      	add	r0, sp, #4
 8013d14:	f7ff fcca 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013d1a:	4639      	mov	r1, r7
 8013d1c:	1a12      	subs	r2, r2, r0
 8013d1e:	a804      	add	r0, sp, #16
 8013d20:	f015 f9d5 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d24:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8013d26:	441d      	add	r5, r3
 8013d28:	e7df      	b.n	8013cea <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8013d2a:	4249      	negs	r1, r1
 8013d2c:	f7ff fe68 	bl	8013a00 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013d30:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8013d34:	e7ce      	b.n	8013cd4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013d36:	2900      	cmp	r1, #0
 8013d38:	f1c0 0000 	rsb	r0, r0, #0
 8013d3c:	aa01      	add	r2, sp, #4
 8013d3e:	db04      	blt.n	8013d4a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8013d40:	f7ff fe5e 	bl	8013a00 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013d44:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8013d48:	e7c4      	b.n	8013cd4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013d4a:	4249      	negs	r1, r1
 8013d4c:	f7ff fe58 	bl	8013a00 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013d50:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8013d54:	e7be      	b.n	8013cd4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013d56:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013d58:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8013d5a:	a804      	add	r0, sp, #16
 8013d5c:	f015 f9b7 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d60:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013d62:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013d64:	a804      	add	r0, sp, #16
 8013d66:	f015 f9b2 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d6a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8013d6c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8013d70:	2d00      	cmp	r5, #0
 8013d72:	dd31      	ble.n	8013dd8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8013d74:	eb05 0806 	add.w	r8, r5, r6
 8013d78:	4640      	mov	r0, r8
 8013d7a:	f7ff fdaf 	bl	80138dc <_ZN8touchgfx7CWRUtil4sineEi>
 8013d7e:	a902      	add	r1, sp, #8
 8013d80:	9002      	str	r0, [sp, #8]
 8013d82:	a801      	add	r0, sp, #4
 8013d84:	f7ff fc92 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d88:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013d8a:	1847      	adds	r7, r0, r1
 8013d8c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8013d90:	f7ff fda4 	bl	80138dc <_ZN8touchgfx7CWRUtil4sineEi>
 8013d94:	a903      	add	r1, sp, #12
 8013d96:	9003      	str	r0, [sp, #12]
 8013d98:	a801      	add	r0, sp, #4
 8013d9a:	f7ff fc87 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d9e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013da0:	4639      	mov	r1, r7
 8013da2:	1a12      	subs	r2, r2, r0
 8013da4:	a804      	add	r0, sp, #16
 8013da6:	f015 f992 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013daa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8013dac:	1aed      	subs	r5, r5, r3
 8013dae:	e7df      	b.n	8013d70 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8013db0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8013db2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8013db4:	a804      	add	r0, sp, #16
 8013db6:	f015 f93d 	bl	8029034 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013dba:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8013dbc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8013dbe:	a804      	add	r0, sp, #16
 8013dc0:	f015 f985 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013dc4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013dc6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8013dc8:	a804      	add	r0, sp, #16
 8013dca:	f015 f980 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013dce:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013dd0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013dd2:	a804      	add	r0, sp, #16
 8013dd4:	f015 f97b 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013dd8:	21ff      	movs	r1, #255	; 0xff
 8013dda:	a804      	add	r0, sp, #16
 8013ddc:	f015 f866 	bl	8028eac <_ZN8touchgfx6Canvas6renderEh>
 8013de0:	4b04      	ldr	r3, [pc, #16]	; (8013df4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8013de2:	9304      	str	r3, [sp, #16]
 8013de4:	4604      	mov	r4, r0
 8013de6:	a80c      	add	r0, sp, #48	; 0x30
 8013de8:	f001 fa98 	bl	801531c <_ZN8touchgfx7OutlineD1Ev>
 8013dec:	4620      	mov	r0, r4
 8013dee:	b020      	add	sp, #128	; 0x80
 8013df0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013df4:	0803121c 	.word	0x0803121c

08013df8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8013df8:	2000      	movs	r0, #0
 8013dfa:	4770      	bx	lr

08013dfc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8013dfc:	4b07      	ldr	r3, [pc, #28]	; (8013e1c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8013dfe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013e00:	881b      	ldrh	r3, [r3, #0]
 8013e02:	4293      	cmp	r3, r2
 8013e04:	bf81      	itttt	hi
 8013e06:	4b06      	ldrhi	r3, [pc, #24]	; (8013e20 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8013e08:	681b      	ldrhi	r3, [r3, #0]
 8013e0a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8013e0e:	7858      	ldrbhi	r0, [r3, #1]
 8013e10:	bf8c      	ite	hi
 8013e12:	f000 0003 	andhi.w	r0, r0, #3
 8013e16:	2000      	movls	r0, #0
 8013e18:	4770      	bx	lr
 8013e1a:	bf00      	nop
 8013e1c:	200138a8 	.word	0x200138a8
 8013e20:	200138a4 	.word	0x200138a4

08013e24 <_ZN8touchgfx8TextAreaD1Ev>:
 8013e24:	4770      	bx	lr
	...

08013e28 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8013e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e2c:	4b10      	ldr	r3, [pc, #64]	; (8013e70 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8013e2e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013e30:	881b      	ldrh	r3, [r3, #0]
 8013e32:	428b      	cmp	r3, r1
 8013e34:	4604      	mov	r4, r0
 8013e36:	d918      	bls.n	8013e6a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8013e38:	6803      	ldr	r3, [r0, #0]
 8013e3a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8013e3c:	4b0d      	ldr	r3, [pc, #52]	; (8013e74 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8013e3e:	6818      	ldr	r0, [r3, #0]
 8013e40:	f7f5 fc52 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8013e44:	6823      	ldr	r3, [r4, #0]
 8013e46:	4606      	mov	r6, r0
 8013e48:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013e4a:	4620      	mov	r0, r4
 8013e4c:	4798      	blx	r3
 8013e4e:	6823      	ldr	r3, [r4, #0]
 8013e50:	4607      	mov	r7, r0
 8013e52:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013e56:	4620      	mov	r0, r4
 8013e58:	4798      	blx	r3
 8013e5a:	463a      	mov	r2, r7
 8013e5c:	4603      	mov	r3, r0
 8013e5e:	4631      	mov	r1, r6
 8013e60:	4620      	mov	r0, r4
 8013e62:	46ac      	mov	ip, r5
 8013e64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013e68:	4760      	bx	ip
 8013e6a:	2000      	movs	r0, #0
 8013e6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e70:	200138a8 	.word	0x200138a8
 8013e74:	200138b0 	.word	0x200138b0

08013e78 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8013e78:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013e7c:	4b17      	ldr	r3, [pc, #92]	; (8013edc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8013e7e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013e80:	881b      	ldrh	r3, [r3, #0]
 8013e82:	428b      	cmp	r3, r1
 8013e84:	4604      	mov	r4, r0
 8013e86:	d926      	bls.n	8013ed6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8013e88:	4b15      	ldr	r3, [pc, #84]	; (8013ee0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8013e8a:	681b      	ldr	r3, [r3, #0]
 8013e8c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013e90:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013e94:	4b13      	ldr	r3, [pc, #76]	; (8013ee4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8013e96:	7855      	ldrb	r5, [r2, #1]
 8013e98:	681b      	ldr	r3, [r3, #0]
 8013e9a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8013e9e:	6833      	ldr	r3, [r6, #0]
 8013ea0:	69df      	ldr	r7, [r3, #28]
 8013ea2:	4b11      	ldr	r3, [pc, #68]	; (8013ee8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013ea4:	6818      	ldr	r0, [r3, #0]
 8013ea6:	f7f5 fc1f 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8013eaa:	6823      	ldr	r3, [r4, #0]
 8013eac:	4680      	mov	r8, r0
 8013eae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013eb0:	4620      	mov	r0, r4
 8013eb2:	4798      	blx	r3
 8013eb4:	6823      	ldr	r3, [r4, #0]
 8013eb6:	4681      	mov	r9, r0
 8013eb8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013ebc:	4620      	mov	r0, r4
 8013ebe:	4798      	blx	r3
 8013ec0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8013ec4:	9000      	str	r0, [sp, #0]
 8013ec6:	464b      	mov	r3, r9
 8013ec8:	4642      	mov	r2, r8
 8013eca:	4629      	mov	r1, r5
 8013ecc:	4630      	mov	r0, r6
 8013ece:	47b8      	blx	r7
 8013ed0:	b003      	add	sp, #12
 8013ed2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013ed6:	2000      	movs	r0, #0
 8013ed8:	e7fa      	b.n	8013ed0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8013eda:	bf00      	nop
 8013edc:	200138a8 	.word	0x200138a8
 8013ee0:	200138a4 	.word	0x200138a4
 8013ee4:	200138ac 	.word	0x200138ac
 8013ee8:	200138b0 	.word	0x200138b0

08013eec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8013eec:	b40e      	push	{r1, r2, r3}
 8013eee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013ef2:	4b2f      	ldr	r3, [pc, #188]	; (8013fb0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013ef4:	881a      	ldrh	r2, [r3, #0]
 8013ef6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013ef8:	429a      	cmp	r2, r3
 8013efa:	b09d      	sub	sp, #116	; 0x74
 8013efc:	4604      	mov	r4, r0
 8013efe:	d954      	bls.n	8013faa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013f00:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8013fb4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8013f04:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8013fb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8013f08:	aa26      	add	r2, sp, #152	; 0x98
 8013f0a:	9202      	str	r2, [sp, #8]
 8013f0c:	f8d9 2000 	ldr.w	r2, [r9]
 8013f10:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013f14:	f8d8 3000 	ldr.w	r3, [r8]
 8013f18:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013f1c:	682b      	ldr	r3, [r5, #0]
 8013f1e:	4628      	mov	r0, r5
 8013f20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013f22:	4798      	blx	r3
 8013f24:	b207      	sxth	r7, r0
 8013f26:	4606      	mov	r6, r0
 8013f28:	a803      	add	r0, sp, #12
 8013f2a:	f005 fc61 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 8013f2e:	682b      	ldr	r3, [r5, #0]
 8013f30:	4628      	mov	r0, r5
 8013f32:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013f34:	4798      	blx	r3
 8013f36:	682b      	ldr	r3, [r5, #0]
 8013f38:	4682      	mov	sl, r0
 8013f3a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013f3c:	4628      	mov	r0, r5
 8013f3e:	4798      	blx	r3
 8013f40:	4653      	mov	r3, sl
 8013f42:	9000      	str	r0, [sp, #0]
 8013f44:	9a02      	ldr	r2, [sp, #8]
 8013f46:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013f48:	a803      	add	r0, sp, #12
 8013f4a:	f005 fcac 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013f4e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013f50:	f8d9 3000 	ldr.w	r3, [r9]
 8013f54:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8013f58:	8925      	ldrh	r5, [r4, #8]
 8013f5a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8013f5e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8013f62:	eba5 050c 	sub.w	r5, r5, ip
 8013f66:	784a      	ldrb	r2, [r1, #1]
 8013f68:	f8d8 3000 	ldr.w	r3, [r8]
 8013f6c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8013f70:	b22d      	sxth	r5, r5
 8013f72:	9500      	str	r5, [sp, #0]
 8013f74:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8013f78:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013f7c:	a803      	add	r0, sp, #12
 8013f7e:	f003 f8b9 	bl	80170f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8013f82:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8013f86:	18b9      	adds	r1, r7, r2
 8013f88:	2900      	cmp	r1, #0
 8013f8a:	b203      	sxth	r3, r0
 8013f8c:	dd0b      	ble.n	8013fa6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8013f8e:	3b01      	subs	r3, #1
 8013f90:	fb13 f302 	smulbb	r3, r3, r2
 8013f94:	fb16 3300 	smlabb	r3, r6, r0, r3
 8013f98:	b21f      	sxth	r7, r3
 8013f9a:	4638      	mov	r0, r7
 8013f9c:	b01d      	add	sp, #116	; 0x74
 8013f9e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013fa2:	b003      	add	sp, #12
 8013fa4:	4770      	bx	lr
 8013fa6:	2b00      	cmp	r3, #0
 8013fa8:	dcf7      	bgt.n	8013f9a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8013faa:	2700      	movs	r7, #0
 8013fac:	e7f5      	b.n	8013f9a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8013fae:	bf00      	nop
 8013fb0:	200138a8 	.word	0x200138a8
 8013fb4:	200138a4 	.word	0x200138a4
 8013fb8:	200138ac 	.word	0x200138ac

08013fbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8013fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fc0:	4bbc      	ldr	r3, [pc, #752]	; (80142b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013fc2:	460c      	mov	r4, r1
 8013fc4:	881b      	ldrh	r3, [r3, #0]
 8013fc6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8013fc8:	428b      	cmp	r3, r1
 8013fca:	b0a9      	sub	sp, #164	; 0xa4
 8013fcc:	4680      	mov	r8, r0
 8013fce:	d809      	bhi.n	8013fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013fd0:	2300      	movs	r3, #0
 8013fd2:	f04f 32ff 	mov.w	r2, #4294967295
 8013fd6:	e9c0 3200 	strd	r3, r2, [r0]
 8013fda:	6083      	str	r3, [r0, #8]
 8013fdc:	4640      	mov	r0, r8
 8013fde:	b029      	add	sp, #164	; 0xa4
 8013fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fe4:	4eb4      	ldr	r6, [pc, #720]	; (80142b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8013fe6:	6833      	ldr	r3, [r6, #0]
 8013fe8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8013fec:	4bb3      	ldr	r3, [pc, #716]	; (80142bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8013fee:	681b      	ldr	r3, [r3, #0]
 8013ff0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013ff4:	4bb2      	ldr	r3, [pc, #712]	; (80142c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013ff6:	6818      	ldr	r0, [r3, #0]
 8013ff8:	f7f5 fb76 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8013ffc:	682b      	ldr	r3, [r5, #0]
 8013ffe:	4681      	mov	r9, r0
 8014000:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014002:	4628      	mov	r0, r5
 8014004:	4798      	blx	r3
 8014006:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014008:	b203      	sxth	r3, r0
 801400a:	4407      	add	r7, r0
 801400c:	9304      	str	r3, [sp, #16]
 801400e:	b2bb      	uxth	r3, r7
 8014010:	9303      	str	r3, [sp, #12]
 8014012:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014016:	4682      	mov	sl, r0
 8014018:	a80f      	add	r0, sp, #60	; 0x3c
 801401a:	2b00      	cmp	r3, #0
 801401c:	f040 80a6 	bne.w	801416c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014020:	f005 fbe6 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 8014024:	682b      	ldr	r3, [r5, #0]
 8014026:	4628      	mov	r0, r5
 8014028:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801402a:	4798      	blx	r3
 801402c:	682b      	ldr	r3, [r5, #0]
 801402e:	4606      	mov	r6, r0
 8014030:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014032:	4628      	mov	r0, r5
 8014034:	4798      	blx	r3
 8014036:	6823      	ldr	r3, [r4, #0]
 8014038:	4607      	mov	r7, r0
 801403a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801403c:	4620      	mov	r0, r4
 801403e:	4798      	blx	r3
 8014040:	6823      	ldr	r3, [r4, #0]
 8014042:	4683      	mov	fp, r0
 8014044:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014048:	4620      	mov	r0, r4
 801404a:	4798      	blx	r3
 801404c:	463b      	mov	r3, r7
 801404e:	e9cd b000 	strd	fp, r0, [sp]
 8014052:	4649      	mov	r1, r9
 8014054:	4632      	mov	r2, r6
 8014056:	a80f      	add	r0, sp, #60	; 0x3c
 8014058:	f005 fc3a 	bl	80198d0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801405c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014060:	f8df b254 	ldr.w	fp, [pc, #596]	; 80142b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014064:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014068:	f04f 0600 	mov.w	r6, #0
 801406c:	bf0c      	ite	eq
 801406e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8014072:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8014076:	4637      	mov	r7, r6
 8014078:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801407a:	f8db 3000 	ldr.w	r3, [fp]
 801407e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014082:	4629      	mov	r1, r5
 8014084:	785b      	ldrb	r3, [r3, #1]
 8014086:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801408a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801408e:	a80f      	add	r0, sp, #60	; 0x3c
 8014090:	f002 fd4b 	bl	8016b2a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014094:	9b03      	ldr	r3, [sp, #12]
 8014096:	4286      	cmp	r6, r0
 8014098:	bfb8      	it	lt
 801409a:	4606      	movlt	r6, r0
 801409c:	3701      	adds	r7, #1
 801409e:	eba9 0903 	sub.w	r9, r9, r3
 80140a2:	a80f      	add	r0, sp, #60	; 0x3c
 80140a4:	b236      	sxth	r6, r6
 80140a6:	b2bf      	uxth	r7, r7
 80140a8:	fa0f f989 	sxth.w	r9, r9
 80140ac:	f005 fbc7 	bl	801983e <_ZN8touchgfx12TextProvider11endOfStringEv>
 80140b0:	b918      	cbnz	r0, 80140ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80140b2:	7a2b      	ldrb	r3, [r5, #8]
 80140b4:	444b      	add	r3, r9
 80140b6:	2b00      	cmp	r3, #0
 80140b8:	dcde      	bgt.n	8014078 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80140ba:	9b03      	ldr	r3, [sp, #12]
 80140bc:	9a04      	ldr	r2, [sp, #16]
 80140be:	f895 9009 	ldrb.w	r9, [r5, #9]
 80140c2:	fb13 f707 	smulbb	r7, r3, r7
 80140c6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80140c8:	1aff      	subs	r7, r7, r3
 80140ca:	b2bf      	uxth	r7, r7
 80140cc:	b23b      	sxth	r3, r7
 80140ce:	429a      	cmp	r2, r3
 80140d0:	bfa8      	it	ge
 80140d2:	4657      	movge	r7, sl
 80140d4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80140d8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80140dc:	6823      	ldr	r3, [r4, #0]
 80140de:	bf08      	it	eq
 80140e0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80140e4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80140e6:	bf18      	it	ne
 80140e8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80140ec:	4620      	mov	r0, r4
 80140ee:	4798      	blx	r3
 80140f0:	444f      	add	r7, r9
 80140f2:	fa1f f987 	uxth.w	r9, r7
 80140f6:	2801      	cmp	r0, #1
 80140f8:	fa0f f789 	sxth.w	r7, r9
 80140fc:	b2b3      	uxth	r3, r6
 80140fe:	f000 80e1 	beq.w	80142c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8014102:	2802      	cmp	r0, #2
 8014104:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8014108:	f000 80e2 	beq.w	80142d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801410c:	7aea      	ldrb	r2, [r5, #11]
 801410e:	7b2d      	ldrb	r5, [r5, #12]
 8014110:	b236      	sxth	r6, r6
 8014112:	1ab6      	subs	r6, r6, r2
 8014114:	442a      	add	r2, r5
 8014116:	4413      	add	r3, r2
 8014118:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801411c:	fa1f fa86 	uxth.w	sl, r6
 8014120:	b29b      	uxth	r3, r3
 8014122:	2a02      	cmp	r2, #2
 8014124:	fa0f fb8a 	sxth.w	fp, sl
 8014128:	b21e      	sxth	r6, r3
 801412a:	f000 80d5 	beq.w	80142d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801412e:	2a03      	cmp	r2, #3
 8014130:	f000 80dd 	beq.w	80142ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8014134:	2a01      	cmp	r2, #1
 8014136:	f040 80e5 	bne.w	8014304 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801413a:	8925      	ldrh	r5, [r4, #8]
 801413c:	4633      	mov	r3, r6
 801413e:	eba5 0909 	sub.w	r9, r5, r9
 8014142:	463e      	mov	r6, r7
 8014144:	465d      	mov	r5, fp
 8014146:	461f      	mov	r7, r3
 8014148:	fa0f fb89 	sxth.w	fp, r9
 801414c:	4b5c      	ldr	r3, [pc, #368]	; (80142c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801414e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014150:	6818      	ldr	r0, [r3, #0]
 8014152:	f7f5 fac9 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8014156:	f8a8 b000 	strh.w	fp, [r8]
 801415a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801415e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8014162:	f8a8 7006 	strh.w	r7, [r8, #6]
 8014166:	f8c8 0008 	str.w	r0, [r8, #8]
 801416a:	e737      	b.n	8013fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801416c:	f005 fb40 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 8014170:	682b      	ldr	r3, [r5, #0]
 8014172:	4628      	mov	r0, r5
 8014174:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014176:	4798      	blx	r3
 8014178:	682b      	ldr	r3, [r5, #0]
 801417a:	4607      	mov	r7, r0
 801417c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801417e:	4628      	mov	r0, r5
 8014180:	4798      	blx	r3
 8014182:	6823      	ldr	r3, [r4, #0]
 8014184:	4683      	mov	fp, r0
 8014186:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014188:	4620      	mov	r0, r4
 801418a:	4798      	blx	r3
 801418c:	6822      	ldr	r2, [r4, #0]
 801418e:	9005      	str	r0, [sp, #20]
 8014190:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8014194:	4620      	mov	r0, r4
 8014196:	4790      	blx	r2
 8014198:	9b05      	ldr	r3, [sp, #20]
 801419a:	9001      	str	r0, [sp, #4]
 801419c:	463a      	mov	r2, r7
 801419e:	4649      	mov	r1, r9
 80141a0:	9300      	str	r3, [sp, #0]
 80141a2:	a80f      	add	r0, sp, #60	; 0x3c
 80141a4:	465b      	mov	r3, fp
 80141a6:	f005 fb93 	bl	80198d0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80141aa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80141ae:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80141b2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80141b4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80141b8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80141bc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80141c0:	bf0a      	itet	eq
 80141c2:	464a      	moveq	r2, r9
 80141c4:	461a      	movne	r2, r3
 80141c6:	4699      	moveq	r9, r3
 80141c8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80141cc:	1ad2      	subs	r2, r2, r3
 80141ce:	6833      	ldr	r3, [r6, #0]
 80141d0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80141d4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80141d8:	af0f      	add	r7, sp, #60	; 0x3c
 80141da:	7859      	ldrb	r1, [r3, #1]
 80141dc:	9707      	str	r7, [sp, #28]
 80141de:	2300      	movs	r3, #0
 80141e0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80141e4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80141e8:	f88d 1020 	strb.w	r1, [sp, #32]
 80141ec:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80141f0:	9509      	str	r5, [sp, #36]	; 0x24
 80141f2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80141f6:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80141fa:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80141fe:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014202:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8014206:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801420a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801420e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014212:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8014216:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801421a:	b350      	cbz	r0, 8014272 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801421c:	682b      	ldr	r3, [r5, #0]
 801421e:	4628      	mov	r0, r5
 8014220:	695b      	ldr	r3, [r3, #20]
 8014222:	4798      	blx	r3
 8014224:	4607      	mov	r7, r0
 8014226:	b320      	cbz	r0, 8014272 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014228:	9809      	ldr	r0, [sp, #36]	; 0x24
 801422a:	6803      	ldr	r3, [r0, #0]
 801422c:	4639      	mov	r1, r7
 801422e:	68db      	ldr	r3, [r3, #12]
 8014230:	4798      	blx	r3
 8014232:	4606      	mov	r6, r0
 8014234:	b1e8      	cbz	r0, 8014272 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014236:	7b43      	ldrb	r3, [r0, #13]
 8014238:	7a82      	ldrb	r2, [r0, #10]
 801423a:	005b      	lsls	r3, r3, #1
 801423c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014240:	4313      	orrs	r3, r2
 8014242:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8014246:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801424a:	2b06      	cmp	r3, #6
 801424c:	d111      	bne.n	8014272 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801424e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014250:	6803      	ldr	r3, [r0, #0]
 8014252:	4632      	mov	r2, r6
 8014254:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014256:	4639      	mov	r1, r7
 8014258:	4798      	blx	r3
 801425a:	7b73      	ldrb	r3, [r6, #13]
 801425c:	005b      	lsls	r3, r3, #1
 801425e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014262:	7ab3      	ldrb	r3, [r6, #10]
 8014264:	4313      	orrs	r3, r2
 8014266:	4418      	add	r0, r3
 8014268:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801426c:	4418      	add	r0, r3
 801426e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8014272:	2600      	movs	r6, #0
 8014274:	4637      	mov	r7, r6
 8014276:	a806      	add	r0, sp, #24
 8014278:	f002 fe38 	bl	8016eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801427c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8014280:	9b03      	ldr	r3, [sp, #12]
 8014282:	4286      	cmp	r6, r0
 8014284:	eba9 0903 	sub.w	r9, r9, r3
 8014288:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801428c:	bfb8      	it	lt
 801428e:	4606      	movlt	r6, r0
 8014290:	3701      	adds	r7, #1
 8014292:	b236      	sxth	r6, r6
 8014294:	b2bf      	uxth	r7, r7
 8014296:	fa0f f989 	sxth.w	r9, r9
 801429a:	2b00      	cmp	r3, #0
 801429c:	f43f af0d 	beq.w	80140ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80142a0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80142a4:	2b00      	cmp	r3, #0
 80142a6:	f47f af08 	bne.w	80140ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80142aa:	7a2b      	ldrb	r3, [r5, #8]
 80142ac:	444b      	add	r3, r9
 80142ae:	2b00      	cmp	r3, #0
 80142b0:	dce1      	bgt.n	8014276 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80142b2:	e702      	b.n	80140ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80142b4:	200138a8 	.word	0x200138a8
 80142b8:	200138a4 	.word	0x200138a4
 80142bc:	200138ac 	.word	0x200138ac
 80142c0:	200138b0 	.word	0x200138b0
 80142c4:	ebaa 0606 	sub.w	r6, sl, r6
 80142c8:	2002      	movs	r0, #2
 80142ca:	fb96 f6f0 	sdiv	r6, r6, r0
 80142ce:	e71d      	b.n	801410c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80142d0:	441e      	add	r6, r3
 80142d2:	ebaa 0606 	sub.w	r6, sl, r6
 80142d6:	e719      	b.n	801410c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80142d8:	8925      	ldrh	r5, [r4, #8]
 80142da:	1aed      	subs	r5, r5, r3
 80142dc:	eba5 050a 	sub.w	r5, r5, sl
 80142e0:	fa0f fb85 	sxth.w	fp, r5
 80142e4:	8965      	ldrh	r5, [r4, #10]
 80142e6:	eba5 0509 	sub.w	r5, r5, r9
 80142ea:	b22d      	sxth	r5, r5
 80142ec:	e72e      	b.n	801414c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80142ee:	8965      	ldrh	r5, [r4, #10]
 80142f0:	1aed      	subs	r5, r5, r3
 80142f2:	eba5 050a 	sub.w	r5, r5, sl
 80142f6:	4633      	mov	r3, r6
 80142f8:	b22d      	sxth	r5, r5
 80142fa:	463e      	mov	r6, r7
 80142fc:	f04f 0b00 	mov.w	fp, #0
 8014300:	461f      	mov	r7, r3
 8014302:	e723      	b.n	801414c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8014304:	2500      	movs	r5, #0
 8014306:	e721      	b.n	801414c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08014308 <_ZN8touchgfx8TextAreaD0Ev>:
 8014308:	b510      	push	{r4, lr}
 801430a:	2148      	movs	r1, #72	; 0x48
 801430c:	4604      	mov	r4, r0
 801430e:	f017 fc54 	bl	802bbba <_ZdlPvj>
 8014312:	4620      	mov	r0, r4
 8014314:	bd10      	pop	{r4, pc}
	...

08014318 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8014318:	b513      	push	{r0, r1, r4, lr}
 801431a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801431e:	4604      	mov	r4, r0
 8014320:	b1fb      	cbz	r3, 8014362 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014322:	4b16      	ldr	r3, [pc, #88]	; (801437c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8014324:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014326:	881b      	ldrh	r3, [r3, #0]
 8014328:	428b      	cmp	r3, r1
 801432a:	d91a      	bls.n	8014362 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801432c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014330:	2b00      	cmp	r3, #0
 8014332:	dd16      	ble.n	8014362 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014334:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014338:	2b00      	cmp	r3, #0
 801433a:	dd12      	ble.n	8014362 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801433c:	4b10      	ldr	r3, [pc, #64]	; (8014380 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801433e:	6818      	ldr	r0, [r3, #0]
 8014340:	f7f5 f9d2 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8014344:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8014348:	6822      	ldr	r2, [r4, #0]
 801434a:	2b00      	cmp	r3, #0
 801434c:	db06      	blt.n	801435c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801434e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8014352:	2b00      	cmp	r3, #0
 8014354:	db02      	blt.n	801435c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8014356:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8014358:	4298      	cmp	r0, r3
 801435a:	d004      	beq.n	8014366 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801435c:	6953      	ldr	r3, [r2, #20]
 801435e:	4620      	mov	r0, r4
 8014360:	4798      	blx	r3
 8014362:	b002      	add	sp, #8
 8014364:	bd10      	pop	{r4, pc}
 8014366:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801436a:	c903      	ldmia	r1, {r0, r1}
 801436c:	466b      	mov	r3, sp
 801436e:	e883 0003 	stmia.w	r3, {r0, r1}
 8014372:	6912      	ldr	r2, [r2, #16]
 8014374:	4619      	mov	r1, r3
 8014376:	4620      	mov	r0, r4
 8014378:	4790      	blx	r2
 801437a:	e7f2      	b.n	8014362 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801437c:	200138a8 	.word	0x200138a8
 8014380:	200138b0 	.word	0x200138b0

08014384 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8014384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014388:	4b44      	ldr	r3, [pc, #272]	; (801449c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801438a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801438c:	881b      	ldrh	r3, [r3, #0]
 801438e:	4293      	cmp	r3, r2
 8014390:	b08e      	sub	sp, #56	; 0x38
 8014392:	4604      	mov	r4, r0
 8014394:	d97e      	bls.n	8014494 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8014396:	6808      	ldr	r0, [r1, #0]
 8014398:	4d41      	ldr	r5, [pc, #260]	; (80144a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801439a:	6849      	ldr	r1, [r1, #4]
 801439c:	ab05      	add	r3, sp, #20
 801439e:	c303      	stmia	r3!, {r0, r1}
 80143a0:	4611      	mov	r1, r2
 80143a2:	6828      	ldr	r0, [r5, #0]
 80143a4:	f7f5 f9a0 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 80143a8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80143ac:	2b00      	cmp	r3, #0
 80143ae:	db11      	blt.n	80143d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80143b0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80143b4:	2b00      	cmp	r3, #0
 80143b6:	db0d      	blt.n	80143d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80143b8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80143ba:	4298      	cmp	r0, r3
 80143bc:	d10a      	bne.n	80143d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80143be:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80143c2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80143c6:	ab09      	add	r3, sp, #36	; 0x24
 80143c8:	e883 0003 	stmia.w	r3, {r0, r1}
 80143cc:	4619      	mov	r1, r3
 80143ce:	a805      	add	r0, sp, #20
 80143d0:	f7fd fbec 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 80143d4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80143d8:	2b00      	cmp	r3, #0
 80143da:	dd5b      	ble.n	8014494 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80143dc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80143e0:	2b00      	cmp	r3, #0
 80143e2:	dd57      	ble.n	8014494 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80143e4:	4f2f      	ldr	r7, [pc, #188]	; (80144a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80143e6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80143e8:	683b      	ldr	r3, [r7, #0]
 80143ea:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80143ee:	4b2e      	ldr	r3, [pc, #184]	; (80144a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80143f0:	681b      	ldr	r3, [r3, #0]
 80143f2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80143f6:	2e00      	cmp	r6, #0
 80143f8:	d04c      	beq.n	8014494 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80143fa:	6823      	ldr	r3, [r4, #0]
 80143fc:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8014400:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014402:	4620      	mov	r0, r4
 8014404:	4798      	blx	r3
 8014406:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014408:	683b      	ldr	r3, [r7, #0]
 801440a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801440e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8014412:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8014416:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8014418:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801441c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8014420:	785b      	ldrb	r3, [r3, #1]
 8014422:	9609      	str	r6, [sp, #36]	; 0x24
 8014424:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014428:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801442c:	4b1f      	ldr	r3, [pc, #124]	; (80144ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801442e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8014432:	681b      	ldr	r3, [r3, #0]
 8014434:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8014438:	910b      	str	r1, [sp, #44]	; 0x2c
 801443a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801443e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8014442:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8014446:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801444a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801444e:	b10a      	cbz	r2, 8014454 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8014450:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8014452:	b906      	cbnz	r6, 8014456 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8014454:	689e      	ldr	r6, [r3, #8]
 8014456:	af07      	add	r7, sp, #28
 8014458:	4621      	mov	r1, r4
 801445a:	4638      	mov	r0, r7
 801445c:	f004 fc7c 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014460:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014462:	6828      	ldr	r0, [r5, #0]
 8014464:	f7f5 f940 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8014468:	6823      	ldr	r3, [r4, #0]
 801446a:	4605      	mov	r5, r0
 801446c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801446e:	4620      	mov	r0, r4
 8014470:	4798      	blx	r3
 8014472:	6823      	ldr	r3, [r4, #0]
 8014474:	4680      	mov	r8, r0
 8014476:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801447a:	4620      	mov	r0, r4
 801447c:	4798      	blx	r3
 801447e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8014482:	ab09      	add	r3, sp, #36	; 0x24
 8014484:	9300      	str	r3, [sp, #0]
 8014486:	9501      	str	r5, [sp, #4]
 8014488:	ab05      	add	r3, sp, #20
 801448a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801448e:	4630      	mov	r0, r6
 8014490:	f7f5 f8dc 	bl	800964c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014494:	b00e      	add	sp, #56	; 0x38
 8014496:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801449a:	bf00      	nop
 801449c:	200138a8 	.word	0x200138a8
 80144a0:	200138b0 	.word	0x200138b0
 80144a4:	200138a4 	.word	0x200138a4
 80144a8:	200138ac 	.word	0x200138ac
 80144ac:	2001384c 	.word	0x2001384c

080144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80144b0:	b538      	push	{r3, r4, r5, lr}
 80144b2:	4b0e      	ldr	r3, [pc, #56]	; (80144ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80144b4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80144b6:	881b      	ldrh	r3, [r3, #0]
 80144b8:	429a      	cmp	r2, r3
 80144ba:	4604      	mov	r4, r0
 80144bc:	d214      	bcs.n	80144e8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80144be:	6803      	ldr	r3, [r0, #0]
 80144c0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80144c2:	4798      	blx	r3
 80144c4:	6823      	ldr	r3, [r4, #0]
 80144c6:	4605      	mov	r5, r0
 80144c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80144ca:	4620      	mov	r0, r4
 80144cc:	4798      	blx	r3
 80144ce:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80144d2:	b22d      	sxth	r5, r5
 80144d4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80144d8:	4601      	mov	r1, r0
 80144da:	bf06      	itte	eq
 80144dc:	4602      	moveq	r2, r0
 80144de:	4629      	moveq	r1, r5
 80144e0:	462a      	movne	r2, r5
 80144e2:	4620      	mov	r0, r4
 80144e4:	f7fd f942 	bl	801176c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80144e8:	bd38      	pop	{r3, r4, r5, pc}
 80144ea:	bf00      	nop
 80144ec:	200138a8 	.word	0x200138a8

080144f0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80144f0:	b530      	push	{r4, r5, lr}
 80144f2:	888b      	ldrh	r3, [r1, #4]
 80144f4:	8583      	strh	r3, [r0, #44]	; 0x2c
 80144f6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80144fa:	b085      	sub	sp, #20
 80144fc:	4604      	mov	r4, r0
 80144fe:	b923      	cbnz	r3, 801450a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8014500:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014504:	b90b      	cbnz	r3, 801450a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8014506:	f7ff ffd3 	bl	80144b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801450a:	6823      	ldr	r3, [r4, #0]
 801450c:	466d      	mov	r5, sp
 801450e:	4621      	mov	r1, r4
 8014510:	4628      	mov	r0, r5
 8014512:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014516:	4798      	blx	r3
 8014518:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801451c:	343c      	adds	r4, #60	; 0x3c
 801451e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8014522:	b005      	add	sp, #20
 8014524:	bd30      	pop	{r4, r5, pc}

08014526 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8014526:	2300      	movs	r3, #0
 8014528:	8083      	strh	r3, [r0, #4]
 801452a:	80c3      	strh	r3, [r0, #6]
 801452c:	8003      	strh	r3, [r0, #0]
 801452e:	8043      	strh	r3, [r0, #2]
 8014530:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8014534:	2bff      	cmp	r3, #255	; 0xff
 8014536:	bf01      	itttt	eq
 8014538:	890b      	ldrheq	r3, [r1, #8]
 801453a:	8083      	strheq	r3, [r0, #4]
 801453c:	894b      	ldrheq	r3, [r1, #10]
 801453e:	80c3      	strheq	r3, [r0, #6]
 8014540:	4770      	bx	lr
	...

08014544 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8014544:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014546:	4604      	mov	r4, r0
 8014548:	6808      	ldr	r0, [r1, #0]
 801454a:	6849      	ldr	r1, [r1, #4]
 801454c:	466b      	mov	r3, sp
 801454e:	c303      	stmia	r3!, {r0, r1}
 8014550:	6823      	ldr	r3, [r4, #0]
 8014552:	4669      	mov	r1, sp
 8014554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014556:	4620      	mov	r0, r4
 8014558:	4798      	blx	r3
 801455a:	4b08      	ldr	r3, [pc, #32]	; (801457c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801455c:	681b      	ldr	r3, [r3, #0]
 801455e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014562:	b10a      	cbz	r2, 8014568 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8014564:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014566:	b900      	cbnz	r0, 801456a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8014568:	6898      	ldr	r0, [r3, #8]
 801456a:	6803      	ldr	r3, [r0, #0]
 801456c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801456e:	6a1d      	ldr	r5, [r3, #32]
 8014570:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014574:	4669      	mov	r1, sp
 8014576:	47a8      	blx	r5
 8014578:	b003      	add	sp, #12
 801457a:	bd30      	pop	{r4, r5, pc}
 801457c:	2001384c 	.word	0x2001384c

08014580 <_ZN8touchgfx3BoxD1Ev>:
 8014580:	4770      	bx	lr

08014582 <_ZN8touchgfx3BoxD0Ev>:
 8014582:	b510      	push	{r4, lr}
 8014584:	212c      	movs	r1, #44	; 0x2c
 8014586:	4604      	mov	r4, r0
 8014588:	f017 fb17 	bl	802bbba <_ZdlPvj>
 801458c:	4620      	mov	r0, r4
 801458e:	bd10      	pop	{r4, pc}

08014590 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8014590:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8014594:	b12a      	cbz	r2, 80145a2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8014596:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801459a:	b112      	cbz	r2, 80145a2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801459c:	6803      	ldr	r3, [r0, #0]
 801459e:	695b      	ldr	r3, [r3, #20]
 80145a0:	4718      	bx	r3
 80145a2:	4770      	bx	lr

080145a4 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 80145a4:	b570      	push	{r4, r5, r6, lr}
 80145a6:	6803      	ldr	r3, [r0, #0]
 80145a8:	4604      	mov	r4, r0
 80145aa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80145ac:	4615      	mov	r5, r2
 80145ae:	4798      	blx	r3
 80145b0:	6823      	ldr	r3, [r4, #0]
 80145b2:	4629      	mov	r1, r5
 80145b4:	4620      	mov	r0, r4
 80145b6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80145b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80145bc:	4718      	bx	r3

080145be <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 80145be:	b570      	push	{r4, r5, r6, lr}
 80145c0:	6803      	ldr	r3, [r0, #0]
 80145c2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80145c4:	4604      	mov	r4, r0
 80145c6:	460e      	mov	r6, r1
 80145c8:	4615      	mov	r5, r2
 80145ca:	4798      	blx	r3
 80145cc:	8030      	strh	r0, [r6, #0]
 80145ce:	6823      	ldr	r3, [r4, #0]
 80145d0:	4620      	mov	r0, r4
 80145d2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80145d4:	4798      	blx	r3
 80145d6:	8028      	strh	r0, [r5, #0]
 80145d8:	bd70      	pop	{r4, r5, r6, pc}

080145da <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 80145da:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 80145de:	4770      	bx	lr

080145e0 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 80145e0:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 80145e4:	4770      	bx	lr

080145e6 <_ZN8touchgfx10TiledImageD1Ev>:
 80145e6:	4770      	bx	lr

080145e8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 80145e8:	b510      	push	{r4, lr}
 80145ea:	4604      	mov	r4, r0
 80145ec:	f000 fd31 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80145f0:	6823      	ldr	r3, [r4, #0]
 80145f2:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80145f6:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 80145fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80145fc:	4620      	mov	r0, r4
 80145fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014602:	4718      	bx	r3

08014604 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8014604:	b538      	push	{r3, r4, r5, lr}
 8014606:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801460a:	4604      	mov	r4, r0
 801460c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801460e:	4628      	mov	r0, r5
 8014610:	f006 fe6e 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014614:	b188      	cbz	r0, 801463a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8014616:	4628      	mov	r0, r5
 8014618:	f006 fe6a 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801461c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8014620:	fb92 f3f0 	sdiv	r3, r2, r0
 8014624:	fb03 2010 	mls	r0, r3, r0, r2
 8014628:	2800      	cmp	r0, #0
 801462a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801462c:	da05      	bge.n	801463a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801462e:	4628      	mov	r0, r5
 8014630:	f006 fe5e 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014634:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8014636:	4418      	add	r0, r3
 8014638:	8560      	strh	r0, [r4, #42]	; 0x2a
 801463a:	bd38      	pop	{r3, r4, r5, pc}

0801463c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801463c:	b538      	push	{r3, r4, r5, lr}
 801463e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8014642:	4604      	mov	r4, r0
 8014644:	8581      	strh	r1, [r0, #44]	; 0x2c
 8014646:	4628      	mov	r0, r5
 8014648:	f006 fe86 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801464c:	b188      	cbz	r0, 8014672 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801464e:	4628      	mov	r0, r5
 8014650:	f006 fe82 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014654:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8014658:	fb92 f3f0 	sdiv	r3, r2, r0
 801465c:	fb03 2010 	mls	r0, r3, r0, r2
 8014660:	2800      	cmp	r0, #0
 8014662:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8014664:	da05      	bge.n	8014672 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8014666:	4628      	mov	r0, r5
 8014668:	f006 fe76 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801466c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 801466e:	4418      	add	r0, r3
 8014670:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8014672:	bd38      	pop	{r3, r4, r5, pc}

08014674 <_ZN8touchgfx10TiledImageD0Ev>:
 8014674:	b510      	push	{r4, lr}
 8014676:	2130      	movs	r1, #48	; 0x30
 8014678:	4604      	mov	r4, r0
 801467a:	f017 fa9e 	bl	802bbba <_ZdlPvj>
 801467e:	4620      	mov	r0, r4
 8014680:	bd10      	pop	{r4, pc}
	...

08014684 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8014684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014688:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801468c:	b093      	sub	sp, #76	; 0x4c
 801468e:	4607      	mov	r7, r0
 8014690:	4658      	mov	r0, fp
 8014692:	460e      	mov	r6, r1
 8014694:	f006 fe2c 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014698:	4681      	mov	r9, r0
 801469a:	4658      	mov	r0, fp
 801469c:	f006 fe5c 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80146a0:	4605      	mov	r5, r0
 80146a2:	f1b9 0f00 	cmp.w	r9, #0
 80146a6:	f000 80c4 	beq.w	8014832 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80146aa:	2800      	cmp	r0, #0
 80146ac:	f000 80c1 	beq.w	8014832 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80146b0:	2300      	movs	r3, #0
 80146b2:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 80146b6:	683b      	ldr	r3, [r7, #0]
 80146b8:	a90e      	add	r1, sp, #56	; 0x38
 80146ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80146bc:	4638      	mov	r0, r7
 80146be:	4798      	blx	r3
 80146c0:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 80146c4:	f9b6 3000 	ldrsh.w	r3, [r6]
 80146c8:	88b1      	ldrh	r1, [r6, #4]
 80146ca:	fa1f f889 	uxth.w	r8, r9
 80146ce:	189c      	adds	r4, r3, r2
 80146d0:	440b      	add	r3, r1
 80146d2:	fa02 f383 	sxtah	r3, r2, r3
 80146d6:	fb94 f4f9 	sdiv	r4, r4, r9
 80146da:	fb14 f408 	smulbb	r4, r4, r8
 80146de:	1aa4      	subs	r4, r4, r2
 80146e0:	3b01      	subs	r3, #1
 80146e2:	b2aa      	uxth	r2, r5
 80146e4:	fb93 f3f9 	sdiv	r3, r3, r9
 80146e8:	fb13 f308 	smulbb	r3, r3, r8
 80146ec:	b21b      	sxth	r3, r3
 80146ee:	9205      	str	r2, [sp, #20]
 80146f0:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 80146f4:	9805      	ldr	r0, [sp, #20]
 80146f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80146f8:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80146fc:	185a      	adds	r2, r3, r1
 80146fe:	fb92 f2f5 	sdiv	r2, r2, r5
 8014702:	fb12 f200 	smulbb	r2, r2, r0
 8014706:	1a52      	subs	r2, r2, r1
 8014708:	b212      	sxth	r2, r2
 801470a:	920c      	str	r2, [sp, #48]	; 0x30
 801470c:	88f2      	ldrh	r2, [r6, #6]
 801470e:	4413      	add	r3, r2
 8014710:	fa01 f383 	sxtah	r3, r1, r3
 8014714:	3b01      	subs	r3, #1
 8014716:	fb93 f3f5 	sdiv	r3, r3, r5
 801471a:	fb13 f300 	smulbb	r3, r3, r0
 801471e:	b2a4      	uxth	r4, r4
 8014720:	b21b      	sxth	r3, r3
 8014722:	930d      	str	r3, [sp, #52]	; 0x34
 8014724:	eb08 0504 	add.w	r5, r8, r4
 8014728:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801472a:	b223      	sxth	r3, r4
 801472c:	4293      	cmp	r3, r2
 801472e:	b2ad      	uxth	r5, r5
 8014730:	9306      	str	r3, [sp, #24]
 8014732:	dc7e      	bgt.n	8014832 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8014734:	b22b      	sxth	r3, r5
 8014736:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801473a:	930a      	str	r3, [sp, #40]	; 0x28
 801473c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801473e:	4599      	cmp	r9, r3
 8014740:	dd03      	ble.n	801474a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8014742:	4444      	add	r4, r8
 8014744:	b2a4      	uxth	r4, r4
 8014746:	4445      	add	r5, r8
 8014748:	e7ee      	b.n	8014728 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801474a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801474e:	88b2      	ldrh	r2, [r6, #4]
 8014750:	9806      	ldr	r0, [sp, #24]
 8014752:	9905      	ldr	r1, [sp, #20]
 8014754:	4462      	add	r2, ip
 8014756:	b292      	uxth	r2, r2
 8014758:	b213      	sxth	r3, r2
 801475a:	9308      	str	r3, [sp, #32]
 801475c:	fa1f f389 	uxth.w	r3, r9
 8014760:	4419      	add	r1, r3
 8014762:	9307      	str	r3, [sp, #28]
 8014764:	4603      	mov	r3, r0
 8014766:	9808      	ldr	r0, [sp, #32]
 8014768:	b289      	uxth	r1, r1
 801476a:	4283      	cmp	r3, r0
 801476c:	fa0f fa81 	sxth.w	sl, r1
 8014770:	da5b      	bge.n	801482a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8014772:	980a      	ldr	r0, [sp, #40]	; 0x28
 8014774:	4584      	cmp	ip, r0
 8014776:	da58      	bge.n	801482a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8014778:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 801477c:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8014780:	4486      	add	lr, r0
 8014782:	fa1f fe8e 	uxth.w	lr, lr
 8014786:	fa0f f38e 	sxth.w	r3, lr
 801478a:	4599      	cmp	r9, r3
 801478c:	9309      	str	r3, [sp, #36]	; 0x24
 801478e:	da4c      	bge.n	801482a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8014790:	4550      	cmp	r0, sl
 8014792:	da4a      	bge.n	801482a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8014794:	9b06      	ldr	r3, [sp, #24]
 8014796:	459c      	cmp	ip, r3
 8014798:	bfb8      	it	lt
 801479a:	469c      	movlt	ip, r3
 801479c:	9b08      	ldr	r3, [sp, #32]
 801479e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 80147a2:	4548      	cmp	r0, r9
 80147a4:	bfb8      	it	lt
 80147a6:	4648      	movlt	r0, r9
 80147a8:	4699      	mov	r9, r3
 80147aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80147ac:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 80147b0:	4599      	cmp	r9, r3
 80147b2:	bfc8      	it	gt
 80147b4:	462a      	movgt	r2, r5
 80147b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147b8:	4553      	cmp	r3, sl
 80147ba:	bfd8      	it	le
 80147bc:	4671      	movle	r1, lr
 80147be:	eba2 020c 	sub.w	r2, r2, ip
 80147c2:	1a09      	subs	r1, r1, r0
 80147c4:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 80147c8:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 80147cc:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80147d0:	9b07      	ldr	r3, [sp, #28]
 80147d2:	1b12      	subs	r2, r2, r4
 80147d4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80147d8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80147dc:	1ad2      	subs	r2, r2, r3
 80147de:	4b16      	ldr	r3, [pc, #88]	; (8014838 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 80147e0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80147e4:	681a      	ldr	r2, [r3, #0]
 80147e6:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 80147ea:	b109      	cbz	r1, 80147f0 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 80147ec:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 80147ee:	b900      	cbnz	r0, 80147f2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 80147f0:	6890      	ldr	r0, [r2, #8]
 80147f2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80147f6:	9b07      	ldr	r3, [sp, #28]
 80147f8:	6801      	ldr	r1, [r0, #0]
 80147fa:	f04f 0c01 	mov.w	ip, #1
 80147fe:	f8cd c008 	str.w	ip, [sp, #8]
 8014802:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8014806:	f8cd c004 	str.w	ip, [sp, #4]
 801480a:	4413      	add	r3, r2
 801480c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8014810:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8014814:	f8cd c000 	str.w	ip, [sp]
 8014818:	4422      	add	r2, r4
 801481a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801481e:	b21b      	sxth	r3, r3
 8014820:	b212      	sxth	r2, r2
 8014822:	4659      	mov	r1, fp
 8014824:	47c8      	blx	r9
 8014826:	46d1      	mov	r9, sl
 8014828:	e788      	b.n	801473c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801482a:	2300      	movs	r3, #0
 801482c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8014830:	e7cc      	b.n	80147cc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8014832:	b013      	add	sp, #76	; 0x4c
 8014834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014838:	2001384c 	.word	0x2001384c

0801483c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801483c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014840:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8014844:	2bff      	cmp	r3, #255	; 0xff
 8014846:	4606      	mov	r6, r0
 8014848:	4689      	mov	r9, r1
 801484a:	d008      	beq.n	801485e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 801484c:	2300      	movs	r3, #0
 801484e:	8003      	strh	r3, [r0, #0]
 8014850:	8043      	strh	r3, [r0, #2]
 8014852:	8083      	strh	r3, [r0, #4]
 8014854:	4630      	mov	r0, r6
 8014856:	80f3      	strh	r3, [r6, #6]
 8014858:	b003      	add	sp, #12
 801485a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801485e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8014862:	4659      	mov	r1, fp
 8014864:	4668      	mov	r0, sp
 8014866:	f006 fdab 	bl	801b3c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801486a:	4658      	mov	r0, fp
 801486c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8014870:	f9bd 7000 	ldrsh.w	r7, [sp]
 8014874:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8014878:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 801487c:	f006 fd38 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014880:	4284      	cmp	r4, r0
 8014882:	d10d      	bne.n	80148a0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8014884:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8014888:	4658      	mov	r0, fp
 801488a:	f006 fd65 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801488e:	4580      	cmp	r8, r0
 8014890:	d129      	bne.n	80148e6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8014892:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8014896:	8037      	strh	r7, [r6, #0]
 8014898:	f8a6 a002 	strh.w	sl, [r6, #2]
 801489c:	80b5      	strh	r5, [r6, #4]
 801489e:	e7d9      	b.n	8014854 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 80148a0:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 80148a4:	4658      	mov	r0, fp
 80148a6:	f006 fd23 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80148aa:	1b7f      	subs	r7, r7, r5
 80148ac:	b2bd      	uxth	r5, r7
 80148ae:	b22f      	sxth	r7, r5
 80148b0:	4428      	add	r0, r5
 80148b2:	2f00      	cmp	r7, #0
 80148b4:	b2a3      	uxth	r3, r4
 80148b6:	b280      	uxth	r0, r0
 80148b8:	bfb8      	it	lt
 80148ba:	18ed      	addlt	r5, r5, r3
 80148bc:	4403      	add	r3, r0
 80148be:	b29b      	uxth	r3, r3
 80148c0:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 80148c4:	bfb8      	it	lt
 80148c6:	b22d      	sxthlt	r5, r5
 80148c8:	b219      	sxth	r1, r3
 80148ca:	bfae      	itee	ge
 80148cc:	4625      	movge	r5, r4
 80148ce:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 80148d2:	2700      	movlt	r7, #0
 80148d4:	4291      	cmp	r1, r2
 80148d6:	bfc4      	itt	gt
 80148d8:	1a9c      	subgt	r4, r3, r2
 80148da:	b224      	sxthgt	r4, r4
 80148dc:	42ac      	cmp	r4, r5
 80148de:	bfc4      	itt	gt
 80148e0:	b207      	sxthgt	r7, r0
 80148e2:	4625      	movgt	r5, r4
 80148e4:	e7d0      	b.n	8014888 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 80148e6:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 80148ea:	4658      	mov	r0, fp
 80148ec:	f006 fd34 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80148f0:	ebaa 0404 	sub.w	r4, sl, r4
 80148f4:	b2a4      	uxth	r4, r4
 80148f6:	fa0f fa84 	sxth.w	sl, r4
 80148fa:	4420      	add	r0, r4
 80148fc:	f1ba 0f00 	cmp.w	sl, #0
 8014900:	fa1f f288 	uxth.w	r2, r8
 8014904:	b280      	uxth	r0, r0
 8014906:	bfb8      	it	lt
 8014908:	18a3      	addlt	r3, r4, r2
 801490a:	4402      	add	r2, r0
 801490c:	b292      	uxth	r2, r2
 801490e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8014912:	bfb8      	it	lt
 8014914:	b21b      	sxthlt	r3, r3
 8014916:	b214      	sxth	r4, r2
 8014918:	bfae      	itee	ge
 801491a:	4643      	movge	r3, r8
 801491c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014920:	f04f 0a00 	movlt.w	sl, #0
 8014924:	428c      	cmp	r4, r1
 8014926:	bfc4      	itt	gt
 8014928:	eba2 0801 	subgt.w	r8, r2, r1
 801492c:	fa0f f888 	sxthgt.w	r8, r8
 8014930:	4598      	cmp	r8, r3
 8014932:	bfc4      	itt	gt
 8014934:	fa0f fa80 	sxthgt.w	sl, r0
 8014938:	4643      	movgt	r3, r8
 801493a:	e7ac      	b.n	8014896 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801493c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801493c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8014940:	b12a      	cbz	r2, 801494e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8014942:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014946:	b112      	cbz	r2, 801494e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8014948:	6803      	ldr	r3, [r0, #0]
 801494a:	695b      	ldr	r3, [r3, #20]
 801494c:	4718      	bx	r3
 801494e:	4770      	bx	lr

08014950 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8014950:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8014954:	600b      	str	r3, [r1, #0]
 8014956:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 801495a:	6013      	str	r3, [r2, #0]
 801495c:	4770      	bx	lr

0801495e <_ZN8touchgfx5Gauge8setWidthEs>:
 801495e:	8101      	strh	r1, [r0, #8]
 8014960:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8014964:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8014968:	4770      	bx	lr

0801496a <_ZN8touchgfx5Gauge9setHeightEs>:
 801496a:	8141      	strh	r1, [r0, #10]
 801496c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8014970:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8014974:	4770      	bx	lr

08014976 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8014976:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 801497a:	4770      	bx	lr

0801497c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 801497c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8014980:	4770      	bx	lr

08014982 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8014982:	4770      	bx	lr

08014984 <_ZN8touchgfx5GaugeD1Ev>:
 8014984:	4770      	bx	lr

08014986 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8014986:	b538      	push	{r3, r4, r5, lr}
 8014988:	4604      	mov	r4, r0
 801498a:	460d      	mov	r5, r1
 801498c:	f7fc fe07 	bl	801159e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8014990:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8014994:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8014998:	bd38      	pop	{r3, r4, r5, pc}

0801499a <_ZN8touchgfx5GaugeD0Ev>:
 801499a:	b510      	push	{r4, lr}
 801499c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80149a0:	4604      	mov	r4, r0
 80149a2:	f017 f90a 	bl	802bbba <_ZdlPvj>
 80149a6:	4620      	mov	r0, r4
 80149a8:	bd10      	pop	{r4, pc}

080149aa <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80149aa:	b510      	push	{r4, lr}
 80149ac:	6803      	ldr	r3, [r0, #0]
 80149ae:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80149b2:	4604      	mov	r4, r0
 80149b4:	4798      	blx	r3
 80149b6:	b170      	cbz	r0, 80149d6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80149b8:	6823      	ldr	r3, [r4, #0]
 80149ba:	4620      	mov	r0, r4
 80149bc:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80149c0:	4798      	blx	r3
 80149c2:	b140      	cbz	r0, 80149d6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80149c4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80149c8:	b12b      	cbz	r3, 80149d6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80149ca:	6823      	ldr	r3, [r4, #0]
 80149cc:	4620      	mov	r0, r4
 80149ce:	695b      	ldr	r3, [r3, #20]
 80149d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80149d4:	4718      	bx	r3
 80149d6:	bd10      	pop	{r4, pc}

080149d8 <_ZN8touchgfx5GaugeC1Ev>:
 80149d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80149da:	4604      	mov	r4, r0
 80149dc:	4626      	mov	r6, r4
 80149de:	f7fc feff 	bl	80117e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80149e2:	4b18      	ldr	r3, [pc, #96]	; (8014a44 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 80149e4:	f846 3bb4 	str.w	r3, [r6], #180
 80149e8:	a902      	add	r1, sp, #8
 80149ea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80149ee:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80149f2:	4630      	mov	r0, r6
 80149f4:	f015 f9a4 	bl	8029d40 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 80149f8:	2500      	movs	r5, #0
 80149fa:	2301      	movs	r3, #1
 80149fc:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8014a00:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8014a04:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8014a08:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8014a0c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8014a10:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8014a14:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8014a18:	4638      	mov	r0, r7
 8014a1a:	f014 fbd5 	bl	80291c8 <_ZN8touchgfx6CircleC1Ev>
 8014a1e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8014a22:	4620      	mov	r0, r4
 8014a24:	f7fc ff7d 	bl	8011922 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8014a28:	4639      	mov	r1, r7
 8014a2a:	4620      	mov	r0, r4
 8014a2c:	f7fc ff38 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014a30:	4620      	mov	r0, r4
 8014a32:	4631      	mov	r1, r6
 8014a34:	f7fc ff34 	bl	80118a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014a38:	4620      	mov	r0, r4
 8014a3a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8014a3e:	b003      	add	sp, #12
 8014a40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014a42:	bf00      	nop
 8014a44:	08030b64 	.word	0x08030b64

08014a48 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8014a48:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8014a4c:	4770      	bx	lr

08014a4e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8014a4e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8014a52:	4770      	bx	lr

08014a54 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8014a54:	b538      	push	{r3, r4, r5, lr}
 8014a56:	8902      	ldrh	r2, [r0, #8]
 8014a58:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014a5c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8014a60:	4604      	mov	r4, r0
 8014a62:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8014a66:	2200      	movs	r2, #0
 8014a68:	4611      	mov	r1, r2
 8014a6a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8014a6e:	4628      	mov	r0, r5
 8014a70:	f7ee fdb4 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8014a74:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8014a78:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8014a7c:	1a9b      	subs	r3, r3, r2
 8014a7e:	ee07 3a90 	vmov	s15, r3
 8014a82:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8014a86:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8014a8a:	1a9b      	subs	r3, r3, r2
 8014a8c:	ee07 3a10 	vmov	s14, r3
 8014a90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014a94:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014a98:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8014a9c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8014aa0:	4628      	mov	r0, r5
 8014aa2:	f015 f999 	bl	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8014aa6:	4b16      	ldr	r3, [pc, #88]	; (8014b00 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8014aa8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8014aac:	4628      	mov	r0, r5
 8014aae:	f015 f993 	bl	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8014ab2:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8014ab6:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8014aba:	ee07 3a90 	vmov	s15, r3
 8014abe:	ee07 2a10 	vmov	s14, r2
 8014ac2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014ac6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014aca:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8014ace:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8014ad2:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8014ad6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8014ada:	4628      	mov	r0, r5
 8014adc:	f015 f97c 	bl	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8014ae0:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8014ae4:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8014ae8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8014aec:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8014af0:	4628      	mov	r0, r5
 8014af2:	f015 f971 	bl	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8014af6:	2301      	movs	r3, #1
 8014af8:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8014afc:	bd38      	pop	{r3, r4, r5, pc}
 8014afe:	bf00      	nop
 8014b00:	43960000 	.word	0x43960000

08014b04 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8014b04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014b06:	4604      	mov	r4, r0
 8014b08:	a802      	add	r0, sp, #8
 8014b0a:	4616      	mov	r6, r2
 8014b0c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8014b10:	461d      	mov	r5, r3
 8014b12:	4601      	mov	r1, r0
 8014b14:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8014b18:	f015 fab4 	bl	802a084 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8014b1c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8014b20:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8014b24:	4620      	mov	r0, r4
 8014b26:	f7ff ff95 	bl	8014a54 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8014b2a:	b002      	add	sp, #8
 8014b2c:	bd70      	pop	{r4, r5, r6, pc}

08014b2e <_ZN8touchgfx5Gauge9setCenterEii>:
 8014b2e:	b570      	push	{r4, r5, r6, lr}
 8014b30:	4606      	mov	r6, r0
 8014b32:	460d      	mov	r5, r1
 8014b34:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8014b38:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8014b3c:	4614      	mov	r4, r2
 8014b3e:	f7ff ff89 	bl	8014a54 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8014b42:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8014b46:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8014b4a:	1aa4      	subs	r4, r4, r2
 8014b4c:	1a6d      	subs	r5, r5, r1
 8014b4e:	0164      	lsls	r4, r4, #5
 8014b50:	016d      	lsls	r5, r5, #5
 8014b52:	3410      	adds	r4, #16
 8014b54:	3510      	adds	r5, #16
 8014b56:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8014b5a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8014b5e:	bd70      	pop	{r4, r5, r6, pc}

08014b60 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8014b60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014b62:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8014b64:	0149      	lsls	r1, r1, #5
 8014b66:	4299      	cmp	r1, r3
 8014b68:	4604      	mov	r4, r0
 8014b6a:	9101      	str	r1, [sp, #4]
 8014b6c:	d00b      	beq.n	8014b86 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8014b6e:	4601      	mov	r1, r0
 8014b70:	aa01      	add	r2, sp, #4
 8014b72:	a802      	add	r0, sp, #8
 8014b74:	f014 fd26 	bl	80295c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8014b78:	9b01      	ldr	r3, [sp, #4]
 8014b7a:	63e3      	str	r3, [r4, #60]	; 0x3c
 8014b7c:	6823      	ldr	r3, [r4, #0]
 8014b7e:	a902      	add	r1, sp, #8
 8014b80:	691b      	ldr	r3, [r3, #16]
 8014b82:	4620      	mov	r0, r4
 8014b84:	4798      	blx	r3
 8014b86:	b004      	add	sp, #16
 8014b88:	bd10      	pop	{r4, pc}
	...

08014b8c <_ZN8touchgfx5Gauge8setValueEi>:
 8014b8c:	b570      	push	{r4, r5, r6, lr}
 8014b8e:	4604      	mov	r4, r0
 8014b90:	f7fc fd58 	bl	8011644 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8014b94:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8014b98:	429a      	cmp	r2, r3
 8014b9a:	bfac      	ite	ge
 8014b9c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8014ba0:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8014ba4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8014ba8:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8014bac:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8014bb0:	1ac9      	subs	r1, r1, r3
 8014bb2:	2900      	cmp	r1, #0
 8014bb4:	bfb8      	it	lt
 8014bb6:	4249      	neglt	r1, r1
 8014bb8:	b289      	uxth	r1, r1
 8014bba:	4620      	mov	r0, r4
 8014bbc:	f7fc fd64 	bl	8011688 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8014bc0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8014bc4:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8014bc8:	eddf 6a19 	vldr	s13, [pc, #100]	; 8014c30 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8014bcc:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8014c34 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8014bd0:	429a      	cmp	r2, r3
 8014bd2:	4605      	mov	r5, r0
 8014bd4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8014bd8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8014bdc:	da15      	bge.n	8014c0a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8014bde:	1b5b      	subs	r3, r3, r5
 8014be0:	ee07 3a90 	vmov	s15, r3
 8014be4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014be8:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8014bec:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8014bf0:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8014bf4:	ee21 1a07 	vmul.f32	s2, s2, s14
 8014bf8:	f015 f85d 	bl	8029cb6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8014bfc:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8014c00:	1b49      	subs	r1, r1, r5
 8014c02:	4630      	mov	r0, r6
 8014c04:	f7ff ffac 	bl	8014b60 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8014c08:	bd70      	pop	{r4, r5, r6, pc}
 8014c0a:	442b      	add	r3, r5
 8014c0c:	ee07 3a90 	vmov	s15, r3
 8014c10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014c14:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8014c18:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8014c1c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8014c20:	ee21 1a07 	vmul.f32	s2, s2, s14
 8014c24:	f015 f847 	bl	8029cb6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8014c28:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8014c2c:	4429      	add	r1, r5
 8014c2e:	e7e8      	b.n	8014c02 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8014c30:	43340000 	.word	0x43340000
 8014c34:	40490fdb 	.word	0x40490fdb

08014c38 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8014c38:	b510      	push	{r4, lr}
 8014c3a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8014c3e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8014c42:	0149      	lsls	r1, r1, #5
 8014c44:	0152      	lsls	r2, r2, #5
 8014c46:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8014c4a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8014c4e:	4604      	mov	r4, r0
 8014c50:	f7fc fca2 	bl	8011598 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8014c54:	4601      	mov	r1, r0
 8014c56:	4620      	mov	r0, r4
 8014c58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c5c:	f7ff bf96 	b.w	8014b8c <_ZN8touchgfx5Gauge8setValueEi>

08014c60 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8014c60:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8014c64:	4770      	bx	lr

08014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8014c66:	b570      	push	{r4, r5, r6, lr}
 8014c68:	880b      	ldrh	r3, [r1, #0]
 8014c6a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8014c6c:	4605      	mov	r5, r0
 8014c6e:	8813      	ldrh	r3, [r2, #0]
 8014c70:	f825 3f30 	strh.w	r3, [r5, #48]!
 8014c74:	4604      	mov	r4, r0
 8014c76:	4628      	mov	r0, r5
 8014c78:	f006 fb3a 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014c7c:	4606      	mov	r6, r0
 8014c7e:	4628      	mov	r0, r5
 8014c80:	f006 fb6a 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014c84:	6823      	ldr	r3, [r4, #0]
 8014c86:	4605      	mov	r5, r0
 8014c88:	4631      	mov	r1, r6
 8014c8a:	4620      	mov	r0, r4
 8014c8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014c8e:	4798      	blx	r3
 8014c90:	6823      	ldr	r3, [r4, #0]
 8014c92:	4629      	mov	r1, r5
 8014c94:	4620      	mov	r0, r4
 8014c96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014c98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c9c:	4718      	bx	r3

08014c9e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8014c9e:	b510      	push	{r4, lr}
 8014ca0:	4604      	mov	r4, r0
 8014ca2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014ca4:	b150      	cbz	r0, 8014cbc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014ca6:	6803      	ldr	r3, [r0, #0]
 8014ca8:	68db      	ldr	r3, [r3, #12]
 8014caa:	4798      	blx	r3
 8014cac:	b130      	cbz	r0, 8014cbc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014cae:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8014cb0:	6803      	ldr	r3, [r0, #0]
 8014cb2:	4621      	mov	r1, r4
 8014cb4:	689b      	ldr	r3, [r3, #8]
 8014cb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014cba:	4718      	bx	r3
 8014cbc:	bd10      	pop	{r4, pc}

08014cbe <_ZNK8touchgfx6Button12getSolidRectEv>:
 8014cbe:	b510      	push	{r4, lr}
 8014cc0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8014cc4:	2bff      	cmp	r3, #255	; 0xff
 8014cc6:	4604      	mov	r4, r0
 8014cc8:	d006      	beq.n	8014cd8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8014cca:	2300      	movs	r3, #0
 8014ccc:	8003      	strh	r3, [r0, #0]
 8014cce:	8043      	strh	r3, [r0, #2]
 8014cd0:	8083      	strh	r3, [r0, #4]
 8014cd2:	80c3      	strh	r3, [r0, #6]
 8014cd4:	4620      	mov	r0, r4
 8014cd6:	bd10      	pop	{r4, pc}
 8014cd8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8014cdc:	b11b      	cbz	r3, 8014ce6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8014cde:	3130      	adds	r1, #48	; 0x30
 8014ce0:	f006 fb6e 	bl	801b3c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014ce4:	e7f6      	b.n	8014cd4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8014ce6:	312e      	adds	r1, #46	; 0x2e
 8014ce8:	e7fa      	b.n	8014ce0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08014cec <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8014cec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014cf0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8014cf4:	b08a      	sub	sp, #40	; 0x28
 8014cf6:	4604      	mov	r4, r0
 8014cf8:	4688      	mov	r8, r1
 8014cfa:	2b00      	cmp	r3, #0
 8014cfc:	d066      	beq.n	8014dcc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8014cfe:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8014d00:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014d04:	a805      	add	r0, sp, #20
 8014d06:	f006 faf3 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014d0a:	4607      	mov	r7, r0
 8014d0c:	a805      	add	r0, sp, #20
 8014d0e:	f006 fb23 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014d12:	f9b8 6000 	ldrsh.w	r6, [r8]
 8014d16:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8014d1a:	4432      	add	r2, r6
 8014d1c:	b292      	uxth	r2, r2
 8014d1e:	2300      	movs	r3, #0
 8014d20:	fa0f fc82 	sxth.w	ip, r2
 8014d24:	459c      	cmp	ip, r3
 8014d26:	9306      	str	r3, [sp, #24]
 8014d28:	dd52      	ble.n	8014dd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014d2a:	42b7      	cmp	r7, r6
 8014d2c:	dd50      	ble.n	8014dd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014d2e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8014d32:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8014d36:	442b      	add	r3, r5
 8014d38:	b29b      	uxth	r3, r3
 8014d3a:	b219      	sxth	r1, r3
 8014d3c:	2900      	cmp	r1, #0
 8014d3e:	dd47      	ble.n	8014dd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014d40:	42a8      	cmp	r0, r5
 8014d42:	dd45      	ble.n	8014dd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014d44:	4567      	cmp	r7, ip
 8014d46:	bfb8      	it	lt
 8014d48:	b2ba      	uxthlt	r2, r7
 8014d4a:	4288      	cmp	r0, r1
 8014d4c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8014d50:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8014d54:	bfb8      	it	lt
 8014d56:	b283      	uxthlt	r3, r0
 8014d58:	1b92      	subs	r2, r2, r6
 8014d5a:	1b5b      	subs	r3, r3, r5
 8014d5c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014d60:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014d64:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014d68:	f8ad 501a 	strh.w	r5, [sp, #26]
 8014d6c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8014d70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014d74:	429a      	cmp	r2, r3
 8014d76:	d026      	beq.n	8014dc6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014d78:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014d7c:	2b00      	cmp	r3, #0
 8014d7e:	dd22      	ble.n	8014dc6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014d80:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014d84:	2b00      	cmp	r3, #0
 8014d86:	dd1e      	ble.n	8014dc6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014d88:	2300      	movs	r3, #0
 8014d8a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8014d8e:	6823      	ldr	r3, [r4, #0]
 8014d90:	a908      	add	r1, sp, #32
 8014d92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d94:	4620      	mov	r0, r4
 8014d96:	4798      	blx	r3
 8014d98:	4b0f      	ldr	r3, [pc, #60]	; (8014dd8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8014d9a:	681b      	ldr	r3, [r3, #0]
 8014d9c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014da0:	b10a      	cbz	r2, 8014da6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8014da2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014da4:	b900      	cbnz	r0, 8014da8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8014da6:	6898      	ldr	r0, [r3, #8]
 8014da8:	6801      	ldr	r1, [r0, #0]
 8014daa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8014dae:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014db2:	2501      	movs	r5, #1
 8014db4:	9502      	str	r5, [sp, #8]
 8014db6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8014dba:	9401      	str	r4, [sp, #4]
 8014dbc:	ac06      	add	r4, sp, #24
 8014dbe:	9400      	str	r4, [sp, #0]
 8014dc0:	688c      	ldr	r4, [r1, #8]
 8014dc2:	a905      	add	r1, sp, #20
 8014dc4:	47a0      	blx	r4
 8014dc6:	b00a      	add	sp, #40	; 0x28
 8014dc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014dcc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8014dce:	e797      	b.n	8014d00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8014dd0:	2300      	movs	r3, #0
 8014dd2:	9307      	str	r3, [sp, #28]
 8014dd4:	e7ca      	b.n	8014d6c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8014dd6:	bf00      	nop
 8014dd8:	2001384c 	.word	0x2001384c

08014ddc <_ZNK8touchgfx6Button17invalidateContentEv>:
 8014ddc:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8014de0:	b12a      	cbz	r2, 8014dee <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014de2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014de6:	b112      	cbz	r2, 8014dee <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014de8:	6803      	ldr	r3, [r0, #0]
 8014dea:	695b      	ldr	r3, [r3, #20]
 8014dec:	4718      	bx	r3
 8014dee:	4770      	bx	lr

08014df0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8014df0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014df4:	4b2f      	ldr	r3, [pc, #188]	; (8014eb4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8014df6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014df8:	881b      	ldrh	r3, [r3, #0]
 8014dfa:	4293      	cmp	r3, r2
 8014dfc:	b08d      	sub	sp, #52	; 0x34
 8014dfe:	4604      	mov	r4, r0
 8014e00:	460f      	mov	r7, r1
 8014e02:	d954      	bls.n	8014eae <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014e04:	4b2c      	ldr	r3, [pc, #176]	; (8014eb8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8014e06:	6819      	ldr	r1, [r3, #0]
 8014e08:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8014e0c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8014e10:	4a2a      	ldr	r2, [pc, #168]	; (8014ebc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8014e12:	6812      	ldr	r2, [r2, #0]
 8014e14:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8014e18:	2900      	cmp	r1, #0
 8014e1a:	d048      	beq.n	8014eae <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014e1c:	785a      	ldrb	r2, [r3, #1]
 8014e1e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014e22:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8014e26:	4b26      	ldr	r3, [pc, #152]	; (8014ec0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8014e28:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8014e2c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8014e30:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8014e34:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8014e36:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8014e3a:	9107      	str	r1, [sp, #28]
 8014e3c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8014e40:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014e44:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8014e48:	681a      	ldr	r2, [r3, #0]
 8014e4a:	f88d 8020 	strb.w	r8, [sp, #32]
 8014e4e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8014e52:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8014e56:	9609      	str	r6, [sp, #36]	; 0x24
 8014e58:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8014e5c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8014e60:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8014e64:	b10b      	cbz	r3, 8014e6a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8014e66:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8014e68:	b905      	cbnz	r5, 8014e6c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8014e6a:	6895      	ldr	r5, [r2, #8]
 8014e6c:	ae05      	add	r6, sp, #20
 8014e6e:	4621      	mov	r1, r4
 8014e70:	4630      	mov	r0, r6
 8014e72:	f003 ff71 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014e76:	4b13      	ldr	r3, [pc, #76]	; (8014ec4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8014e78:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014e7a:	6818      	ldr	r0, [r3, #0]
 8014e7c:	f7f4 fc34 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8014e80:	6823      	ldr	r3, [r4, #0]
 8014e82:	4680      	mov	r8, r0
 8014e84:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014e86:	4620      	mov	r0, r4
 8014e88:	4798      	blx	r3
 8014e8a:	6823      	ldr	r3, [r4, #0]
 8014e8c:	4681      	mov	r9, r0
 8014e8e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e92:	4620      	mov	r0, r4
 8014e94:	4798      	blx	r3
 8014e96:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8014e9a:	ab07      	add	r3, sp, #28
 8014e9c:	9300      	str	r3, [sp, #0]
 8014e9e:	f8cd 8004 	str.w	r8, [sp, #4]
 8014ea2:	463b      	mov	r3, r7
 8014ea4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014ea8:	4628      	mov	r0, r5
 8014eaa:	f7f4 fbcf 	bl	800964c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014eae:	b00d      	add	sp, #52	; 0x34
 8014eb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014eb4:	200138a8 	.word	0x200138a8
 8014eb8:	200138a4 	.word	0x200138a4
 8014ebc:	200138ac 	.word	0x200138ac
 8014ec0:	2001384c 	.word	0x2001384c
 8014ec4:	200138b0 	.word	0x200138b0

08014ec8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8014ec8:	4770      	bx	lr

08014eca <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8014eca:	4770      	bx	lr

08014ecc <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8014ecc:	b510      	push	{r4, lr}
 8014ece:	213c      	movs	r1, #60	; 0x3c
 8014ed0:	4604      	mov	r4, r0
 8014ed2:	f016 fe72 	bl	802bbba <_ZdlPvj>
 8014ed6:	4620      	mov	r0, r4
 8014ed8:	bd10      	pop	{r4, pc}

08014eda <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8014eda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014ede:	461c      	mov	r4, r3
 8014ee0:	4606      	mov	r6, r0
 8014ee2:	9f06      	ldr	r7, [sp, #24]
 8014ee4:	f7ff febf 	bl	8014c66 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8014ee8:	8823      	ldrh	r3, [r4, #0]
 8014eea:	86b3      	strh	r3, [r6, #52]	; 0x34
 8014eec:	883b      	ldrh	r3, [r7, #0]
 8014eee:	86f3      	strh	r3, [r6, #54]	; 0x36
 8014ef0:	4638      	mov	r0, r7
 8014ef2:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8014ef6:	f006 f9fb 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014efa:	f04f 0802 	mov.w	r8, #2
 8014efe:	fb95 f5f8 	sdiv	r5, r5, r8
 8014f02:	b2ad      	uxth	r5, r5
 8014f04:	fb90 f0f8 	sdiv	r0, r0, r8
 8014f08:	1a2d      	subs	r5, r5, r0
 8014f0a:	8735      	strh	r5, [r6, #56]	; 0x38
 8014f0c:	4638      	mov	r0, r7
 8014f0e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8014f12:	fb94 f4f8 	sdiv	r4, r4, r8
 8014f16:	f006 fa1f 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014f1a:	b2a4      	uxth	r4, r4
 8014f1c:	fb90 f0f8 	sdiv	r0, r0, r8
 8014f20:	1a24      	subs	r4, r4, r0
 8014f22:	8774      	strh	r4, [r6, #58]	; 0x3a
 8014f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014f28 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8014f28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014f2c:	4604      	mov	r4, r0
 8014f2e:	b08c      	sub	sp, #48	; 0x30
 8014f30:	460d      	mov	r5, r1
 8014f32:	f7ff fedb 	bl	8014cec <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8014f36:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8014f3a:	2b00      	cmp	r3, #0
 8014f3c:	d05d      	beq.n	8014ffa <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8014f3e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8014f40:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014f44:	a805      	add	r0, sp, #20
 8014f46:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8014f4a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8014f4e:	f006 f9cf 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014f52:	4606      	mov	r6, r0
 8014f54:	a805      	add	r0, sp, #20
 8014f56:	f006 f9ff 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014f5a:	6869      	ldr	r1, [r5, #4]
 8014f5c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014f60:	6828      	ldr	r0, [r5, #0]
 8014f62:	f8ad 8018 	strh.w	r8, [sp, #24]
 8014f66:	ab08      	add	r3, sp, #32
 8014f68:	ad08      	add	r5, sp, #32
 8014f6a:	c303      	stmia	r3!, {r0, r1}
 8014f6c:	a906      	add	r1, sp, #24
 8014f6e:	4628      	mov	r0, r5
 8014f70:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014f74:	f8ad 601c 	strh.w	r6, [sp, #28]
 8014f78:	f7fc fe18 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8014f7c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8014f80:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014f84:	429a      	cmp	r2, r3
 8014f86:	d035      	beq.n	8014ff4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014f88:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8014f8c:	2b00      	cmp	r3, #0
 8014f8e:	dd31      	ble.n	8014ff4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014f90:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8014f94:	2b00      	cmp	r3, #0
 8014f96:	dd2d      	ble.n	8014ff4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014f98:	2300      	movs	r3, #0
 8014f9a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8014f9e:	6823      	ldr	r3, [r4, #0]
 8014fa0:	a90a      	add	r1, sp, #40	; 0x28
 8014fa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014fa4:	4620      	mov	r0, r4
 8014fa6:	4798      	blx	r3
 8014fa8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014fac:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8014fae:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8014fb2:	1a9b      	subs	r3, r3, r2
 8014fb4:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014fb8:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8014fba:	1ac9      	subs	r1, r1, r3
 8014fbc:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8014fc0:	490f      	ldr	r1, [pc, #60]	; (8015000 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8014fc2:	6809      	ldr	r1, [r1, #0]
 8014fc4:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8014fc8:	b108      	cbz	r0, 8014fce <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8014fca:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8014fcc:	b900      	cbnz	r0, 8014fd0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8014fce:	6888      	ldr	r0, [r1, #8]
 8014fd0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8014fd4:	440b      	add	r3, r1
 8014fd6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8014fda:	2601      	movs	r6, #1
 8014fdc:	440a      	add	r2, r1
 8014fde:	6801      	ldr	r1, [r0, #0]
 8014fe0:	9602      	str	r6, [sp, #8]
 8014fe2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8014fe6:	e9cd 5400 	strd	r5, r4, [sp]
 8014fea:	b21b      	sxth	r3, r3
 8014fec:	688c      	ldr	r4, [r1, #8]
 8014fee:	b212      	sxth	r2, r2
 8014ff0:	a905      	add	r1, sp, #20
 8014ff2:	47a0      	blx	r4
 8014ff4:	b00c      	add	sp, #48	; 0x30
 8014ff6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014ffa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014ffc:	e7a0      	b.n	8014f40 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8014ffe:	bf00      	nop
 8015000:	2001384c 	.word	0x2001384c

08015004 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8015004:	b510      	push	{r4, lr}
 8015006:	2101      	movs	r1, #1
 8015008:	2200      	movs	r2, #0
 801500a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801500e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8015012:	4c0e      	ldr	r4, [pc, #56]	; (801504c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8015014:	8082      	strh	r2, [r0, #4]
 8015016:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801501a:	80c2      	strh	r2, [r0, #6]
 801501c:	8102      	strh	r2, [r0, #8]
 801501e:	8142      	strh	r2, [r0, #10]
 8015020:	8182      	strh	r2, [r0, #12]
 8015022:	81c2      	strh	r2, [r0, #14]
 8015024:	8202      	strh	r2, [r0, #16]
 8015026:	8242      	strh	r2, [r0, #18]
 8015028:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801502c:	61c2      	str	r2, [r0, #28]
 801502e:	8402      	strh	r2, [r0, #32]
 8015030:	8442      	strh	r2, [r0, #34]	; 0x22
 8015032:	6282      	str	r2, [r0, #40]	; 0x28
 8015034:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8015038:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801503a:	8601      	strh	r1, [r0, #48]	; 0x30
 801503c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8015040:	6004      	str	r4, [r0, #0]
 8015042:	8681      	strh	r1, [r0, #52]	; 0x34
 8015044:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015046:	8702      	strh	r2, [r0, #56]	; 0x38
 8015048:	8742      	strh	r2, [r0, #58]	; 0x3a
 801504a:	bd10      	pop	{r4, pc}
 801504c:	08030c4c 	.word	0x08030c4c

08015050 <_ZN8touchgfx5ImageD1Ev>:
 8015050:	4770      	bx	lr

08015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015052:	b570      	push	{r4, r5, r6, lr}
 8015054:	880b      	ldrh	r3, [r1, #0]
 8015056:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015058:	4604      	mov	r4, r0
 801505a:	4608      	mov	r0, r1
 801505c:	460d      	mov	r5, r1
 801505e:	f006 f947 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015062:	4606      	mov	r6, r0
 8015064:	4628      	mov	r0, r5
 8015066:	f006 f977 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801506a:	6823      	ldr	r3, [r4, #0]
 801506c:	4605      	mov	r5, r0
 801506e:	4631      	mov	r1, r6
 8015070:	4620      	mov	r0, r4
 8015072:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015074:	4798      	blx	r3
 8015076:	6823      	ldr	r3, [r4, #0]
 8015078:	4629      	mov	r1, r5
 801507a:	4620      	mov	r0, r4
 801507c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801507e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015082:	4718      	bx	r3

08015084 <_ZN8touchgfx5ImageD0Ev>:
 8015084:	b510      	push	{r4, lr}
 8015086:	212c      	movs	r1, #44	; 0x2c
 8015088:	4604      	mov	r4, r0
 801508a:	f016 fd96 	bl	802bbba <_ZdlPvj>
 801508e:	4620      	mov	r0, r4
 8015090:	bd10      	pop	{r4, pc}

08015092 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8015092:	b510      	push	{r4, lr}
 8015094:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015098:	2bff      	cmp	r3, #255	; 0xff
 801509a:	4604      	mov	r4, r0
 801509c:	d006      	beq.n	80150ac <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801509e:	2300      	movs	r3, #0
 80150a0:	8003      	strh	r3, [r0, #0]
 80150a2:	8043      	strh	r3, [r0, #2]
 80150a4:	8083      	strh	r3, [r0, #4]
 80150a6:	80c3      	strh	r3, [r0, #6]
 80150a8:	4620      	mov	r0, r4
 80150aa:	bd10      	pop	{r4, pc}
 80150ac:	3126      	adds	r1, #38	; 0x26
 80150ae:	f006 f987 	bl	801b3c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80150b2:	e7f9      	b.n	80150a8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080150b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80150b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80150b8:	4604      	mov	r4, r0
 80150ba:	b088      	sub	sp, #32
 80150bc:	f854 3b26 	ldr.w	r3, [r4], #38
 80150c0:	2500      	movs	r5, #0
 80150c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80150c4:	460f      	mov	r7, r1
 80150c6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80150ca:	a904      	add	r1, sp, #16
 80150cc:	4606      	mov	r6, r0
 80150ce:	4798      	blx	r3
 80150d0:	4620      	mov	r0, r4
 80150d2:	f006 f90d 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80150d6:	4680      	mov	r8, r0
 80150d8:	4620      	mov	r0, r4
 80150da:	f006 f93d 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80150de:	9506      	str	r5, [sp, #24]
 80150e0:	ad06      	add	r5, sp, #24
 80150e2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80150e6:	4639      	mov	r1, r7
 80150e8:	4628      	mov	r0, r5
 80150ea:	f8ad 801c 	strh.w	r8, [sp, #28]
 80150ee:	f7fc fd5d 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 80150f2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80150f6:	2b00      	cmp	r3, #0
 80150f8:	dd19      	ble.n	801512e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80150fa:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80150fe:	2b00      	cmp	r3, #0
 8015100:	dd15      	ble.n	801512e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8015102:	4b0c      	ldr	r3, [pc, #48]	; (8015134 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8015104:	681b      	ldr	r3, [r3, #0]
 8015106:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801510a:	b10a      	cbz	r2, 8015110 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801510c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801510e:	b900      	cbnz	r0, 8015112 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8015110:	6898      	ldr	r0, [r3, #8]
 8015112:	6801      	ldr	r1, [r0, #0]
 8015114:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015118:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801511c:	2701      	movs	r7, #1
 801511e:	9702      	str	r7, [sp, #8]
 8015120:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8015124:	e9cd 5600 	strd	r5, r6, [sp]
 8015128:	688d      	ldr	r5, [r1, #8]
 801512a:	4621      	mov	r1, r4
 801512c:	47a8      	blx	r5
 801512e:	b008      	add	sp, #32
 8015130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015134:	2001384c 	.word	0x2001384c

08015138 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8015138:	4770      	bx	lr

0801513a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801513a:	b510      	push	{r4, lr}
 801513c:	2148      	movs	r1, #72	; 0x48
 801513e:	4604      	mov	r4, r0
 8015140:	f016 fd3b 	bl	802bbba <_ZdlPvj>
 8015144:	4620      	mov	r0, r4
 8015146:	bd10      	pop	{r4, pc}

08015148 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8015148:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801514c:	b08d      	sub	sp, #52	; 0x34
 801514e:	4604      	mov	r4, r0
 8015150:	460f      	mov	r7, r1
 8015152:	f7ff fdcb 	bl	8014cec <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015156:	4a55      	ldr	r2, [pc, #340]	; (80152ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8015158:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801515a:	8812      	ldrh	r2, [r2, #0]
 801515c:	429a      	cmp	r2, r3
 801515e:	f240 8082 	bls.w	8015266 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8015162:	4d53      	ldr	r5, [pc, #332]	; (80152b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8015164:	682a      	ldr	r2, [r5, #0]
 8015166:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801516a:	4b52      	ldr	r3, [pc, #328]	; (80152b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801516c:	681b      	ldr	r3, [r3, #0]
 801516e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015172:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8015176:	2200      	movs	r2, #0
 8015178:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801517c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8015180:	2a03      	cmp	r2, #3
 8015182:	d811      	bhi.n	80151a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8015184:	e8df f002 	tbb	[pc, r2]
 8015188:	89727902 	.word	0x89727902
 801518c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8015190:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8015194:	1ad2      	subs	r2, r2, r3
 8015196:	2002      	movs	r0, #2
 8015198:	f8ad 1010 	strh.w	r1, [sp, #16]
 801519c:	fb92 f2f0 	sdiv	r2, r2, r0
 80151a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80151a4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80151a8:	f10d 080c 	add.w	r8, sp, #12
 80151ac:	e898 0003 	ldmia.w	r8, {r0, r1}
 80151b0:	f10d 0914 	add.w	r9, sp, #20
 80151b4:	e889 0003 	stmia.w	r9, {r0, r1}
 80151b8:	4639      	mov	r1, r7
 80151ba:	4648      	mov	r0, r9
 80151bc:	f7fc fcf6 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 80151c0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80151c4:	2b00      	cmp	r3, #0
 80151c6:	dd4e      	ble.n	8015266 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80151c8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80151cc:	2b00      	cmp	r3, #0
 80151ce:	dd4a      	ble.n	8015266 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80151d0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80151d4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80151d8:	1a9b      	subs	r3, r3, r2
 80151da:	f8ad 3014 	strh.w	r3, [sp, #20]
 80151de:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80151e2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80151e6:	1a9b      	subs	r3, r3, r2
 80151e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80151ec:	6823      	ldr	r3, [r4, #0]
 80151ee:	4641      	mov	r1, r8
 80151f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80151f2:	4620      	mov	r0, r4
 80151f4:	4798      	blx	r3
 80151f6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80151fa:	2b00      	cmp	r3, #0
 80151fc:	d053      	beq.n	80152a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80151fe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8015200:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8015202:	682b      	ldr	r3, [r5, #0]
 8015204:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8015208:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801520c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015210:	785b      	ldrb	r3, [r3, #1]
 8015212:	9209      	str	r2, [sp, #36]	; 0x24
 8015214:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8015218:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801521c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8015220:	2300      	movs	r3, #0
 8015222:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8015226:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801522a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801522e:	4b22      	ldr	r3, [pc, #136]	; (80152b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8015230:	9607      	str	r6, [sp, #28]
 8015232:	681b      	ldr	r3, [r3, #0]
 8015234:	f88d 5020 	strb.w	r5, [sp, #32]
 8015238:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801523c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8015240:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8015244:	b10a      	cbz	r2, 801524a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8015246:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8015248:	b904      	cbnz	r4, 801524c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801524a:	689c      	ldr	r4, [r3, #8]
 801524c:	4b1b      	ldr	r3, [pc, #108]	; (80152bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801524e:	6818      	ldr	r0, [r3, #0]
 8015250:	f7f4 fa4a 	bl	80096e8 <_ZNK8touchgfx5Texts7getTextEt>
 8015254:	ab07      	add	r3, sp, #28
 8015256:	9001      	str	r0, [sp, #4]
 8015258:	9300      	str	r3, [sp, #0]
 801525a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801525e:	464b      	mov	r3, r9
 8015260:	4620      	mov	r0, r4
 8015262:	f7f4 f9f3 	bl	800964c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015266:	b00d      	add	sp, #52	; 0x34
 8015268:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801526c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8015270:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8015274:	1ad2      	subs	r2, r2, r3
 8015276:	3201      	adds	r2, #1
 8015278:	e78d      	b.n	8015196 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801527a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801527e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8015282:	1ad2      	subs	r2, r2, r3
 8015284:	3201      	adds	r2, #1
 8015286:	2002      	movs	r0, #2
 8015288:	f8ad 3010 	strh.w	r3, [sp, #16]
 801528c:	fb92 f2f0 	sdiv	r2, r2, r0
 8015290:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015294:	f8ad 200c 	strh.w	r2, [sp, #12]
 8015298:	e786      	b.n	80151a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801529a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801529e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80152a2:	1ad2      	subs	r2, r2, r3
 80152a4:	e7ef      	b.n	8015286 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80152a6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80152a8:	e7aa      	b.n	8015200 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80152aa:	bf00      	nop
 80152ac:	200138a8 	.word	0x200138a8
 80152b0:	200138a4 	.word	0x200138a4
 80152b4:	200138ac 	.word	0x200138ac
 80152b8:	2001384c 	.word	0x2001384c
 80152bc:	200138b0 	.word	0x200138b0

080152c0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80152c0:	b510      	push	{r4, lr}
 80152c2:	2101      	movs	r1, #1
 80152c4:	4c13      	ldr	r4, [pc, #76]	; (8015314 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80152c6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80152ca:	2200      	movs	r2, #0
 80152cc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80152d0:	6004      	str	r4, [r0, #0]
 80152d2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80152d6:	4c10      	ldr	r4, [pc, #64]	; (8015318 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80152d8:	8082      	strh	r2, [r0, #4]
 80152da:	80c2      	strh	r2, [r0, #6]
 80152dc:	8102      	strh	r2, [r0, #8]
 80152de:	8142      	strh	r2, [r0, #10]
 80152e0:	8182      	strh	r2, [r0, #12]
 80152e2:	81c2      	strh	r2, [r0, #14]
 80152e4:	8202      	strh	r2, [r0, #16]
 80152e6:	8242      	strh	r2, [r0, #18]
 80152e8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80152ec:	61c2      	str	r2, [r0, #28]
 80152ee:	8402      	strh	r2, [r0, #32]
 80152f0:	8442      	strh	r2, [r0, #34]	; 0x22
 80152f2:	6282      	str	r2, [r0, #40]	; 0x28
 80152f4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80152f8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80152fa:	8601      	strh	r1, [r0, #48]	; 0x30
 80152fc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8015300:	6344      	str	r4, [r0, #52]	; 0x34
 8015302:	8701      	strh	r1, [r0, #56]	; 0x38
 8015304:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8015308:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801530c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8015310:	bd10      	pop	{r4, pc}
 8015312:	bf00      	nop
 8015314:	08030d30 	.word	0x08030d30
 8015318:	0802e524 	.word	0x0802e524

0801531c <_ZN8touchgfx7OutlineD1Ev>:
 801531c:	4770      	bx	lr

0801531e <_ZN8touchgfx7OutlineD0Ev>:
 801531e:	b510      	push	{r4, lr}
 8015320:	2130      	movs	r1, #48	; 0x30
 8015322:	4604      	mov	r4, r0
 8015324:	f016 fc49 	bl	802bbba <_ZdlPvj>
 8015328:	4620      	mov	r0, r4
 801532a:	bd10      	pop	{r4, pc}

0801532c <_ZN8touchgfx7Outline5resetEv>:
 801532c:	b510      	push	{r4, lr}
 801532e:	4604      	mov	r4, r0
 8015330:	f000 fe96 	bl	8016060 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8015334:	60e0      	str	r0, [r4, #12]
 8015336:	f000 fe99 	bl	801606c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801533a:	68e3      	ldr	r3, [r4, #12]
 801533c:	6123      	str	r3, [r4, #16]
 801533e:	08c0      	lsrs	r0, r0, #3
 8015340:	2200      	movs	r2, #0
 8015342:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8015346:	3801      	subs	r0, #1
 8015348:	6060      	str	r0, [r4, #4]
 801534a:	60a2      	str	r2, [r4, #8]
 801534c:	8019      	strh	r1, [r3, #0]
 801534e:	8059      	strh	r1, [r3, #2]
 8015350:	809a      	strh	r2, [r3, #4]
 8015352:	80da      	strh	r2, [r3, #6]
 8015354:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8015356:	f023 0301 	bic.w	r3, r3, #1
 801535a:	f043 0302 	orr.w	r3, r3, #2
 801535e:	6263      	str	r3, [r4, #36]	; 0x24
 8015360:	bd10      	pop	{r4, pc}
	...

08015364 <_ZN8touchgfx7OutlineC1Ev>:
 8015364:	b510      	push	{r4, lr}
 8015366:	4b0a      	ldr	r3, [pc, #40]	; (8015390 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8015368:	6003      	str	r3, [r0, #0]
 801536a:	2300      	movs	r3, #0
 801536c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8015370:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8015374:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8015378:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801537c:	6243      	str	r3, [r0, #36]	; 0x24
 801537e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8015382:	4604      	mov	r4, r0
 8015384:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8015388:	f7ff ffd0 	bl	801532c <_ZN8touchgfx7Outline5resetEv>
 801538c:	4620      	mov	r0, r4
 801538e:	bd10      	pop	{r4, pc}
 8015390:	08030da4 	.word	0x08030da4

08015394 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8015394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015398:	b093      	sub	sp, #76	; 0x4c
 801539a:	1156      	asrs	r6, r2, #5
 801539c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801539e:	9305      	str	r3, [sp, #20]
 80153a0:	f004 051f 	and.w	r5, r4, #31
 80153a4:	1153      	asrs	r3, r2, #5
 80153a6:	9504      	str	r5, [sp, #16]
 80153a8:	1165      	asrs	r5, r4, #5
 80153aa:	9303      	str	r3, [sp, #12]
 80153ac:	42ae      	cmp	r6, r5
 80153ae:	ea4f 1364 	mov.w	r3, r4, asr #5
 80153b2:	9306      	str	r3, [sp, #24]
 80153b4:	f002 031f 	and.w	r3, r2, #31
 80153b8:	f040 80f8 	bne.w	80155ac <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80153bc:	9c04      	ldr	r4, [sp, #16]
 80153be:	9a05      	ldr	r2, [sp, #20]
 80153c0:	42a3      	cmp	r3, r4
 80153c2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80153c6:	6902      	ldr	r2, [r0, #16]
 80153c8:	d125      	bne.n	8015416 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80153ca:	f9b2 3000 	ldrsh.w	r3, [r2]
 80153ce:	459e      	cmp	lr, r3
 80153d0:	d103      	bne.n	80153da <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80153d2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80153d6:	429e      	cmp	r6, r3
 80153d8:	d035      	beq.n	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80153da:	88d1      	ldrh	r1, [r2, #6]
 80153dc:	8893      	ldrh	r3, [r2, #4]
 80153de:	430b      	orrs	r3, r1
 80153e0:	d010      	beq.n	8015404 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80153e2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80153e6:	2b00      	cmp	r3, #0
 80153e8:	db0c      	blt.n	8015404 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80153ea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80153ec:	428b      	cmp	r3, r1
 80153ee:	da09      	bge.n	8015404 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80153f0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80153f4:	428b      	cmp	r3, r1
 80153f6:	bf38      	it	cc
 80153f8:	3208      	addcc	r2, #8
 80153fa:	f103 0301 	add.w	r3, r3, #1
 80153fe:	bf38      	it	cc
 8015400:	6102      	strcc	r2, [r0, #16]
 8015402:	6083      	str	r3, [r0, #8]
 8015404:	6903      	ldr	r3, [r0, #16]
 8015406:	9a03      	ldr	r2, [sp, #12]
 8015408:	f8a3 e000 	strh.w	lr, [r3]
 801540c:	805a      	strh	r2, [r3, #2]
 801540e:	2200      	movs	r2, #0
 8015410:	809a      	strh	r2, [r3, #4]
 8015412:	80da      	strh	r2, [r3, #6]
 8015414:	e017      	b.n	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015416:	9c05      	ldr	r4, [sp, #20]
 8015418:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801541c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8015420:	f004 041f 	and.w	r4, r4, #31
 8015424:	114e      	asrs	r6, r1, #5
 8015426:	9402      	str	r4, [sp, #8]
 8015428:	9c04      	ldr	r4, [sp, #16]
 801542a:	4576      	cmp	r6, lr
 801542c:	f001 0c1f 	and.w	ip, r1, #31
 8015430:	eba4 0403 	sub.w	r4, r4, r3
 8015434:	d10a      	bne.n	801544c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8015436:	9b02      	ldr	r3, [sp, #8]
 8015438:	449c      	add	ip, r3
 801543a:	44a0      	add	r8, r4
 801543c:	fb04 a40c 	mla	r4, r4, ip, sl
 8015440:	f8a2 8004 	strh.w	r8, [r2, #4]
 8015444:	80d4      	strh	r4, [r2, #6]
 8015446:	b013      	add	sp, #76	; 0x4c
 8015448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801544c:	9d05      	ldr	r5, [sp, #20]
 801544e:	1a69      	subs	r1, r5, r1
 8015450:	bf5b      	ittet	pl
 8015452:	f1cc 0520 	rsbpl	r5, ip, #32
 8015456:	436c      	mulpl	r4, r5
 8015458:	2500      	movmi	r5, #0
 801545a:	2520      	movpl	r5, #32
 801545c:	bf44      	itt	mi
 801545e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8015462:	4249      	negmi	r1, r1
 8015464:	9501      	str	r5, [sp, #4]
 8015466:	9f01      	ldr	r7, [sp, #4]
 8015468:	fb94 f5f1 	sdiv	r5, r4, r1
 801546c:	fb01 4415 	mls	r4, r1, r5, r4
 8015470:	bf54      	ite	pl
 8015472:	f04f 0901 	movpl.w	r9, #1
 8015476:	f04f 39ff 	movmi.w	r9, #4294967295
 801547a:	2c00      	cmp	r4, #0
 801547c:	bfb8      	it	lt
 801547e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8015482:	44bc      	add	ip, r7
 8015484:	44a8      	add	r8, r5
 8015486:	fb05 ac0c 	mla	ip, r5, ip, sl
 801548a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801548e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015492:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015496:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801549a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801549e:	bfb8      	it	lt
 80154a0:	1864      	addlt	r4, r4, r1
 80154a2:	ea58 0202 	orrs.w	r2, r8, r2
 80154a6:	444e      	add	r6, r9
 80154a8:	d011      	beq.n	80154ce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80154aa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80154ae:	f1b8 0f00 	cmp.w	r8, #0
 80154b2:	db0c      	blt.n	80154ce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80154b4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80154b6:	4590      	cmp	r8, r2
 80154b8:	da09      	bge.n	80154ce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80154ba:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80154be:	4590      	cmp	r8, r2
 80154c0:	bf3c      	itt	cc
 80154c2:	f10c 0208 	addcc.w	r2, ip, #8
 80154c6:	6102      	strcc	r2, [r0, #16]
 80154c8:	f108 0201 	add.w	r2, r8, #1
 80154cc:	6082      	str	r2, [r0, #8]
 80154ce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80154d2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80154d6:	f8ac 6000 	strh.w	r6, [ip]
 80154da:	2700      	movs	r7, #0
 80154dc:	45b6      	cmp	lr, r6
 80154de:	f8ac 2002 	strh.w	r2, [ip, #2]
 80154e2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80154e6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80154ea:	442b      	add	r3, r5
 80154ec:	d04d      	beq.n	801558a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80154ee:	9f04      	ldr	r7, [sp, #16]
 80154f0:	1aff      	subs	r7, r7, r3
 80154f2:	443d      	add	r5, r7
 80154f4:	016d      	lsls	r5, r5, #5
 80154f6:	fb95 f8f1 	sdiv	r8, r5, r1
 80154fa:	fb01 5518 	mls	r5, r1, r8, r5
 80154fe:	2d00      	cmp	r5, #0
 8015500:	bfb8      	it	lt
 8015502:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8015506:	f108 0701 	add.w	r7, r8, #1
 801550a:	bfb8      	it	lt
 801550c:	186d      	addlt	r5, r5, r1
 801550e:	1a64      	subs	r4, r4, r1
 8015510:	9703      	str	r7, [sp, #12]
 8015512:	f04f 0a00 	mov.w	sl, #0
 8015516:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801551a:	1964      	adds	r4, r4, r5
 801551c:	bf58      	it	pl
 801551e:	9f03      	ldrpl	r7, [sp, #12]
 8015520:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8015524:	bf48      	it	mi
 8015526:	4647      	movmi	r7, r8
 8015528:	44bb      	add	fp, r7
 801552a:	f8ac b004 	strh.w	fp, [ip, #4]
 801552e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015532:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8015536:	f8ac b006 	strh.w	fp, [ip, #6]
 801553a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801553e:	443b      	add	r3, r7
 8015540:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015544:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015548:	bf58      	it	pl
 801554a:	1a64      	subpl	r4, r4, r1
 801554c:	ea5b 0707 	orrs.w	r7, fp, r7
 8015550:	444e      	add	r6, r9
 8015552:	d011      	beq.n	8015578 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8015554:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8015558:	f1bb 0f00 	cmp.w	fp, #0
 801555c:	db0c      	blt.n	8015578 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801555e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015560:	45bb      	cmp	fp, r7
 8015562:	da09      	bge.n	8015578 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8015564:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015568:	45bb      	cmp	fp, r7
 801556a:	bf3c      	itt	cc
 801556c:	f10c 0708 	addcc.w	r7, ip, #8
 8015570:	6107      	strcc	r7, [r0, #16]
 8015572:	f10b 0701 	add.w	r7, fp, #1
 8015576:	6087      	str	r7, [r0, #8]
 8015578:	6907      	ldr	r7, [r0, #16]
 801557a:	45b6      	cmp	lr, r6
 801557c:	803e      	strh	r6, [r7, #0]
 801557e:	807a      	strh	r2, [r7, #2]
 8015580:	f8a7 a004 	strh.w	sl, [r7, #4]
 8015584:	f8a7 a006 	strh.w	sl, [r7, #6]
 8015588:	d1c5      	bne.n	8015516 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801558a:	9a04      	ldr	r2, [sp, #16]
 801558c:	1ad3      	subs	r3, r2, r3
 801558e:	6902      	ldr	r2, [r0, #16]
 8015590:	8891      	ldrh	r1, [r2, #4]
 8015592:	88d6      	ldrh	r6, [r2, #6]
 8015594:	4419      	add	r1, r3
 8015596:	8091      	strh	r1, [r2, #4]
 8015598:	9902      	ldr	r1, [sp, #8]
 801559a:	f101 0c20 	add.w	ip, r1, #32
 801559e:	9901      	ldr	r1, [sp, #4]
 80155a0:	ebac 0c01 	sub.w	ip, ip, r1
 80155a4:	fb03 630c 	mla	r3, r3, ip, r6
 80155a8:	80d3      	strh	r3, [r2, #6]
 80155aa:	e74c      	b.n	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80155ac:	9d05      	ldr	r5, [sp, #20]
 80155ae:	1aa2      	subs	r2, r4, r2
 80155b0:	eba5 0501 	sub.w	r5, r5, r1
 80155b4:	9508      	str	r5, [sp, #32]
 80155b6:	9202      	str	r2, [sp, #8]
 80155b8:	f140 8128 	bpl.w	801580c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80155bc:	9a03      	ldr	r2, [sp, #12]
 80155be:	2a00      	cmp	r2, #0
 80155c0:	f6ff af41 	blt.w	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80155c4:	9a02      	ldr	r2, [sp, #8]
 80155c6:	4252      	negs	r2, r2
 80155c8:	9202      	str	r2, [sp, #8]
 80155ca:	9a06      	ldr	r2, [sp, #24]
 80155cc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80155d0:	f04f 34ff 	mov.w	r4, #4294967295
 80155d4:	9206      	str	r2, [sp, #24]
 80155d6:	462a      	mov	r2, r5
 80155d8:	940b      	str	r4, [sp, #44]	; 0x2c
 80155da:	435a      	muls	r2, r3
 80155dc:	2400      	movs	r4, #0
 80155de:	9d02      	ldr	r5, [sp, #8]
 80155e0:	9401      	str	r4, [sp, #4]
 80155e2:	9c02      	ldr	r4, [sp, #8]
 80155e4:	fb92 f4f4 	sdiv	r4, r2, r4
 80155e8:	fb05 2214 	mls	r2, r5, r4, r2
 80155ec:	2a00      	cmp	r2, #0
 80155ee:	9207      	str	r2, [sp, #28]
 80155f0:	bfbc      	itt	lt
 80155f2:	1952      	addlt	r2, r2, r5
 80155f4:	9207      	strlt	r2, [sp, #28]
 80155f6:	9a01      	ldr	r2, [sp, #4]
 80155f8:	6905      	ldr	r5, [r0, #16]
 80155fa:	bfb8      	it	lt
 80155fc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8015600:	eb04 0901 	add.w	r9, r4, r1
 8015604:	429a      	cmp	r2, r3
 8015606:	ea4f 1669 	mov.w	r6, r9, asr #5
 801560a:	f040 8112 	bne.w	8015832 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801560e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8015612:	429e      	cmp	r6, r3
 8015614:	d104      	bne.n	8015620 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8015616:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801561a:	9a03      	ldr	r2, [sp, #12]
 801561c:	429a      	cmp	r2, r3
 801561e:	d01b      	beq.n	8015658 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015620:	88ea      	ldrh	r2, [r5, #6]
 8015622:	88ab      	ldrh	r3, [r5, #4]
 8015624:	4313      	orrs	r3, r2
 8015626:	d010      	beq.n	801564a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8015628:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801562c:	2a00      	cmp	r2, #0
 801562e:	db0c      	blt.n	801564a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8015630:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015632:	429a      	cmp	r2, r3
 8015634:	da09      	bge.n	801564a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8015636:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801563a:	429a      	cmp	r2, r3
 801563c:	bf38      	it	cc
 801563e:	3508      	addcc	r5, #8
 8015640:	f102 0201 	add.w	r2, r2, #1
 8015644:	bf38      	it	cc
 8015646:	6105      	strcc	r5, [r0, #16]
 8015648:	6082      	str	r2, [r0, #8]
 801564a:	6903      	ldr	r3, [r0, #16]
 801564c:	9a03      	ldr	r2, [sp, #12]
 801564e:	805a      	strh	r2, [r3, #2]
 8015650:	2200      	movs	r2, #0
 8015652:	801e      	strh	r6, [r3, #0]
 8015654:	809a      	strh	r2, [r3, #4]
 8015656:	80da      	strh	r2, [r3, #6]
 8015658:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801565a:	9a03      	ldr	r2, [sp, #12]
 801565c:	6901      	ldr	r1, [r0, #16]
 801565e:	441a      	add	r2, r3
 8015660:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015664:	42b3      	cmp	r3, r6
 8015666:	d103      	bne.n	8015670 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8015668:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801566c:	429a      	cmp	r2, r3
 801566e:	d01a      	beq.n	80156a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8015670:	88cc      	ldrh	r4, [r1, #6]
 8015672:	888b      	ldrh	r3, [r1, #4]
 8015674:	4323      	orrs	r3, r4
 8015676:	d010      	beq.n	801569a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8015678:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801567c:	2c00      	cmp	r4, #0
 801567e:	db0c      	blt.n	801569a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8015680:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015682:	429c      	cmp	r4, r3
 8015684:	da09      	bge.n	801569a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8015686:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801568a:	429c      	cmp	r4, r3
 801568c:	bf38      	it	cc
 801568e:	3108      	addcc	r1, #8
 8015690:	f104 0401 	add.w	r4, r4, #1
 8015694:	bf38      	it	cc
 8015696:	6101      	strcc	r1, [r0, #16]
 8015698:	6084      	str	r4, [r0, #8]
 801569a:	6903      	ldr	r3, [r0, #16]
 801569c:	2100      	movs	r1, #0
 801569e:	801e      	strh	r6, [r3, #0]
 80156a0:	805a      	strh	r2, [r3, #2]
 80156a2:	8099      	strh	r1, [r3, #4]
 80156a4:	80d9      	strh	r1, [r3, #6]
 80156a6:	9b06      	ldr	r3, [sp, #24]
 80156a8:	4293      	cmp	r3, r2
 80156aa:	f000 8082 	beq.w	80157b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80156ae:	9b08      	ldr	r3, [sp, #32]
 80156b0:	9c02      	ldr	r4, [sp, #8]
 80156b2:	9902      	ldr	r1, [sp, #8]
 80156b4:	015b      	lsls	r3, r3, #5
 80156b6:	fb93 f1f1 	sdiv	r1, r3, r1
 80156ba:	fb04 3311 	mls	r3, r4, r1, r3
 80156be:	2b00      	cmp	r3, #0
 80156c0:	9103      	str	r1, [sp, #12]
 80156c2:	9308      	str	r3, [sp, #32]
 80156c4:	da04      	bge.n	80156d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80156c6:	1e4b      	subs	r3, r1, #1
 80156c8:	9303      	str	r3, [sp, #12]
 80156ca:	9b08      	ldr	r3, [sp, #32]
 80156cc:	4423      	add	r3, r4
 80156ce:	9308      	str	r3, [sp, #32]
 80156d0:	9b07      	ldr	r3, [sp, #28]
 80156d2:	9902      	ldr	r1, [sp, #8]
 80156d4:	1a5b      	subs	r3, r3, r1
 80156d6:	9307      	str	r3, [sp, #28]
 80156d8:	9b01      	ldr	r3, [sp, #4]
 80156da:	f1c3 0320 	rsb	r3, r3, #32
 80156de:	930e      	str	r3, [sp, #56]	; 0x38
 80156e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80156e2:	9b01      	ldr	r3, [sp, #4]
 80156e4:	1a5b      	subs	r3, r3, r1
 80156e6:	464f      	mov	r7, r9
 80156e8:	930a      	str	r3, [sp, #40]	; 0x28
 80156ea:	2600      	movs	r6, #0
 80156ec:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80156f0:	185b      	adds	r3, r3, r1
 80156f2:	bf58      	it	pl
 80156f4:	9902      	ldrpl	r1, [sp, #8]
 80156f6:	9307      	str	r3, [sp, #28]
 80156f8:	bf5d      	ittte	pl
 80156fa:	1a5b      	subpl	r3, r3, r1
 80156fc:	9307      	strpl	r3, [sp, #28]
 80156fe:	9b03      	ldrpl	r3, [sp, #12]
 8015700:	9903      	ldrmi	r1, [sp, #12]
 8015702:	bf58      	it	pl
 8015704:	1c59      	addpl	r1, r3, #1
 8015706:	4489      	add	r9, r1
 8015708:	2a00      	cmp	r2, #0
 801570a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801570e:	db2e      	blt.n	801576e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015710:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015712:	4293      	cmp	r3, r2
 8015714:	dd2b      	ble.n	801576e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015716:	9c01      	ldr	r4, [sp, #4]
 8015718:	6905      	ldr	r5, [r0, #16]
 801571a:	46a0      	mov	r8, r4
 801571c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801571e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8015722:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8015726:	45a0      	cmp	r8, r4
 8015728:	f040 814f 	bne.w	80159ca <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801572c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8015730:	4551      	cmp	r1, sl
 8015732:	d103      	bne.n	801573c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8015734:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8015738:	4291      	cmp	r1, r2
 801573a:	d018      	beq.n	801576e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801573c:	ea5c 010e 	orrs.w	r1, ip, lr
 8015740:	d00f      	beq.n	8015762 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8015742:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8015746:	2900      	cmp	r1, #0
 8015748:	db0b      	blt.n	8015762 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801574a:	428b      	cmp	r3, r1
 801574c:	dd09      	ble.n	8015762 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801574e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8015752:	4299      	cmp	r1, r3
 8015754:	bf38      	it	cc
 8015756:	3508      	addcc	r5, #8
 8015758:	f101 0101 	add.w	r1, r1, #1
 801575c:	bf38      	it	cc
 801575e:	6105      	strcc	r5, [r0, #16]
 8015760:	6081      	str	r1, [r0, #8]
 8015762:	6903      	ldr	r3, [r0, #16]
 8015764:	f8a3 a000 	strh.w	sl, [r3]
 8015768:	805a      	strh	r2, [r3, #2]
 801576a:	809e      	strh	r6, [r3, #4]
 801576c:	80de      	strh	r6, [r3, #6]
 801576e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015770:	6901      	ldr	r1, [r0, #16]
 8015772:	441a      	add	r2, r3
 8015774:	88cc      	ldrh	r4, [r1, #6]
 8015776:	888b      	ldrh	r3, [r1, #4]
 8015778:	4323      	orrs	r3, r4
 801577a:	d010      	beq.n	801579e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801577c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8015780:	2c00      	cmp	r4, #0
 8015782:	db0c      	blt.n	801579e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8015784:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015786:	429c      	cmp	r4, r3
 8015788:	da09      	bge.n	801579e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801578a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801578e:	429c      	cmp	r4, r3
 8015790:	bf38      	it	cc
 8015792:	3108      	addcc	r1, #8
 8015794:	f104 0401 	add.w	r4, r4, #1
 8015798:	bf38      	it	cc
 801579a:	6101      	strcc	r1, [r0, #16]
 801579c:	6084      	str	r4, [r0, #8]
 801579e:	6903      	ldr	r3, [r0, #16]
 80157a0:	f8a3 a000 	strh.w	sl, [r3]
 80157a4:	805a      	strh	r2, [r3, #2]
 80157a6:	809e      	strh	r6, [r3, #4]
 80157a8:	80de      	strh	r6, [r3, #6]
 80157aa:	9b06      	ldr	r3, [sp, #24]
 80157ac:	4293      	cmp	r3, r2
 80157ae:	464f      	mov	r7, r9
 80157b0:	d19c      	bne.n	80156ec <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80157b2:	9b01      	ldr	r3, [sp, #4]
 80157b4:	6907      	ldr	r7, [r0, #16]
 80157b6:	f1c3 0620 	rsb	r6, r3, #32
 80157ba:	9b05      	ldr	r3, [sp, #20]
 80157bc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80157c0:	9b04      	ldr	r3, [sp, #16]
 80157c2:	429e      	cmp	r6, r3
 80157c4:	f040 81cc 	bne.w	8015b60 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80157c8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80157cc:	459e      	cmp	lr, r3
 80157ce:	d104      	bne.n	80157da <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80157d0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80157d4:	429a      	cmp	r2, r3
 80157d6:	f43f ae36 	beq.w	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80157da:	88f9      	ldrh	r1, [r7, #6]
 80157dc:	88bb      	ldrh	r3, [r7, #4]
 80157de:	430b      	orrs	r3, r1
 80157e0:	d010      	beq.n	8015804 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80157e2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80157e6:	2b00      	cmp	r3, #0
 80157e8:	db0c      	blt.n	8015804 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80157ea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80157ec:	428b      	cmp	r3, r1
 80157ee:	da09      	bge.n	8015804 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80157f0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80157f4:	428b      	cmp	r3, r1
 80157f6:	bf38      	it	cc
 80157f8:	3708      	addcc	r7, #8
 80157fa:	f103 0301 	add.w	r3, r3, #1
 80157fe:	bf38      	it	cc
 8015800:	6107      	strcc	r7, [r0, #16]
 8015802:	6083      	str	r3, [r0, #8]
 8015804:	6903      	ldr	r3, [r0, #16]
 8015806:	f8a3 e000 	strh.w	lr, [r3]
 801580a:	e5ff      	b.n	801540c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801580c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801580e:	9c03      	ldr	r4, [sp, #12]
 8015810:	42a2      	cmp	r2, r4
 8015812:	f6ff ae18 	blt.w	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015816:	9c06      	ldr	r4, [sp, #24]
 8015818:	42a2      	cmp	r2, r4
 801581a:	bfb8      	it	lt
 801581c:	3201      	addlt	r2, #1
 801581e:	9c08      	ldr	r4, [sp, #32]
 8015820:	bfb8      	it	lt
 8015822:	9206      	strlt	r2, [sp, #24]
 8015824:	f1c3 0220 	rsb	r2, r3, #32
 8015828:	4362      	muls	r2, r4
 801582a:	2401      	movs	r4, #1
 801582c:	940b      	str	r4, [sp, #44]	; 0x2c
 801582e:	2420      	movs	r4, #32
 8015830:	e6d5      	b.n	80155de <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8015832:	f009 021f 	and.w	r2, r9, #31
 8015836:	ea4f 1861 	mov.w	r8, r1, asr #5
 801583a:	920c      	str	r2, [sp, #48]	; 0x30
 801583c:	9a01      	ldr	r2, [sp, #4]
 801583e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8015842:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8015846:	45b0      	cmp	r8, r6
 8015848:	f001 011f 	and.w	r1, r1, #31
 801584c:	eba2 0203 	sub.w	r2, r2, r3
 8015850:	d108      	bne.n	8015864 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8015852:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015854:	4419      	add	r1, r3
 8015856:	4496      	add	lr, r2
 8015858:	fb02 a101 	mla	r1, r2, r1, sl
 801585c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8015860:	80e9      	strh	r1, [r5, #6]
 8015862:	e6f9      	b.n	8015658 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015864:	2c00      	cmp	r4, #0
 8015866:	f2c0 80a9 	blt.w	80159bc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801586a:	2701      	movs	r7, #1
 801586c:	f1c1 0c20 	rsb	ip, r1, #32
 8015870:	970a      	str	r7, [sp, #40]	; 0x28
 8015872:	fb02 f20c 	mul.w	r2, r2, ip
 8015876:	2720      	movs	r7, #32
 8015878:	9709      	str	r7, [sp, #36]	; 0x24
 801587a:	fb92 fcf4 	sdiv	ip, r2, r4
 801587e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015880:	fb04 221c 	mls	r2, r4, ip, r2
 8015884:	2a00      	cmp	r2, #0
 8015886:	bfb8      	it	lt
 8015888:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801588c:	4439      	add	r1, r7
 801588e:	fb0c a101 	mla	r1, ip, r1, sl
 8015892:	80e9      	strh	r1, [r5, #6]
 8015894:	44e6      	add	lr, ip
 8015896:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015898:	f8a5 e004 	strh.w	lr, [r5, #4]
 801589c:	eb08 0501 	add.w	r5, r8, r1
 80158a0:	6901      	ldr	r1, [r0, #16]
 80158a2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80158a6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80158aa:	bfb8      	it	lt
 80158ac:	1912      	addlt	r2, r2, r4
 80158ae:	ea58 070e 	orrs.w	r7, r8, lr
 80158b2:	d010      	beq.n	80158d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80158b4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80158b8:	f1be 0f00 	cmp.w	lr, #0
 80158bc:	db0b      	blt.n	80158d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80158be:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80158c0:	45be      	cmp	lr, r7
 80158c2:	da08      	bge.n	80158d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80158c4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80158c8:	45be      	cmp	lr, r7
 80158ca:	bf3c      	itt	cc
 80158cc:	3108      	addcc	r1, #8
 80158ce:	6101      	strcc	r1, [r0, #16]
 80158d0:	f10e 0101 	add.w	r1, lr, #1
 80158d4:	6081      	str	r1, [r0, #8]
 80158d6:	6901      	ldr	r1, [r0, #16]
 80158d8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80158dc:	800d      	strh	r5, [r1, #0]
 80158de:	f04f 0e00 	mov.w	lr, #0
 80158e2:	42ae      	cmp	r6, r5
 80158e4:	f8a1 8002 	strh.w	r8, [r1, #2]
 80158e8:	f8a1 e004 	strh.w	lr, [r1, #4]
 80158ec:	f8a1 e006 	strh.w	lr, [r1, #6]
 80158f0:	4463      	add	r3, ip
 80158f2:	d054      	beq.n	801599e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80158f4:	9901      	ldr	r1, [sp, #4]
 80158f6:	1ac9      	subs	r1, r1, r3
 80158f8:	4461      	add	r1, ip
 80158fa:	0149      	lsls	r1, r1, #5
 80158fc:	fb91 fef4 	sdiv	lr, r1, r4
 8015900:	fb04 111e 	mls	r1, r4, lr, r1
 8015904:	2900      	cmp	r1, #0
 8015906:	bfb8      	it	lt
 8015908:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801590c:	f10e 0701 	add.w	r7, lr, #1
 8015910:	bfb8      	it	lt
 8015912:	1909      	addlt	r1, r1, r4
 8015914:	1b12      	subs	r2, r2, r4
 8015916:	970d      	str	r7, [sp, #52]	; 0x34
 8015918:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801591c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801591e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8015922:	1852      	adds	r2, r2, r1
 8015924:	bf54      	ite	pl
 8015926:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801592a:	46f4      	movmi	ip, lr
 801592c:	44e3      	add	fp, ip
 801592e:	f8aa b004 	strh.w	fp, [sl, #4]
 8015932:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8015936:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801593a:	f8aa b006 	strh.w	fp, [sl, #6]
 801593e:	4463      	add	r3, ip
 8015940:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015944:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015948:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801594c:	bf58      	it	pl
 801594e:	1b12      	subpl	r2, r2, r4
 8015950:	443d      	add	r5, r7
 8015952:	ea5b 070a 	orrs.w	r7, fp, sl
 8015956:	d014      	beq.n	8015982 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8015958:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801595c:	f1ba 0f00 	cmp.w	sl, #0
 8015960:	db0f      	blt.n	8015982 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8015962:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015964:	45ba      	cmp	sl, r7
 8015966:	da0c      	bge.n	8015982 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8015968:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801596c:	45ba      	cmp	sl, r7
 801596e:	bf38      	it	cc
 8015970:	f10c 0c08 	addcc.w	ip, ip, #8
 8015974:	f10a 0a01 	add.w	sl, sl, #1
 8015978:	bf38      	it	cc
 801597a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801597e:	f8c0 a008 	str.w	sl, [r0, #8]
 8015982:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015986:	f04f 0700 	mov.w	r7, #0
 801598a:	42ae      	cmp	r6, r5
 801598c:	f8ac 5000 	strh.w	r5, [ip]
 8015990:	f8ac 8002 	strh.w	r8, [ip, #2]
 8015994:	f8ac 7004 	strh.w	r7, [ip, #4]
 8015998:	f8ac 7006 	strh.w	r7, [ip, #6]
 801599c:	d1bc      	bne.n	8015918 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801599e:	6904      	ldr	r4, [r0, #16]
 80159a0:	9a01      	ldr	r2, [sp, #4]
 80159a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80159a4:	1ad3      	subs	r3, r2, r3
 80159a6:	88a2      	ldrh	r2, [r4, #4]
 80159a8:	441a      	add	r2, r3
 80159aa:	80a2      	strh	r2, [r4, #4]
 80159ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80159ae:	3120      	adds	r1, #32
 80159b0:	1a89      	subs	r1, r1, r2
 80159b2:	88e2      	ldrh	r2, [r4, #6]
 80159b4:	fb03 2301 	mla	r3, r3, r1, r2
 80159b8:	80e3      	strh	r3, [r4, #6]
 80159ba:	e64d      	b.n	8015658 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80159bc:	f04f 37ff 	mov.w	r7, #4294967295
 80159c0:	970a      	str	r7, [sp, #40]	; 0x28
 80159c2:	434a      	muls	r2, r1
 80159c4:	4264      	negs	r4, r4
 80159c6:	2700      	movs	r7, #0
 80159c8:	e756      	b.n	8015878 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80159ca:	ea4f 1867 	mov.w	r8, r7, asr #5
 80159ce:	f009 031f 	and.w	r3, r9, #31
 80159d2:	45d0      	cmp	r8, sl
 80159d4:	f007 071f 	and.w	r7, r7, #31
 80159d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80159da:	fa1f fc8c 	uxth.w	ip, ip
 80159de:	fa1f fe8e 	uxth.w	lr, lr
 80159e2:	d10a      	bne.n	80159fa <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80159e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159e6:	449c      	add	ip, r3
 80159e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80159ea:	f8a5 c004 	strh.w	ip, [r5, #4]
 80159ee:	441f      	add	r7, r3
 80159f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159f2:	fb03 e707 	mla	r7, r3, r7, lr
 80159f6:	80ef      	strh	r7, [r5, #6]
 80159f8:	e6b9      	b.n	801576e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80159fa:	2900      	cmp	r1, #0
 80159fc:	f2c0 80a8 	blt.w	8015b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8015a00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015a02:	f1c7 0320 	rsb	r3, r7, #32
 8015a06:	4363      	muls	r3, r4
 8015a08:	2401      	movs	r4, #1
 8015a0a:	940d      	str	r4, [sp, #52]	; 0x34
 8015a0c:	2420      	movs	r4, #32
 8015a0e:	940c      	str	r4, [sp, #48]	; 0x30
 8015a10:	fb93 f4f1 	sdiv	r4, r3, r1
 8015a14:	fb01 3b14 	mls	fp, r1, r4, r3
 8015a18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a1a:	f1bb 0f00 	cmp.w	fp, #0
 8015a1e:	bfb8      	it	lt
 8015a20:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8015a24:	441f      	add	r7, r3
 8015a26:	fb04 e707 	mla	r7, r4, r7, lr
 8015a2a:	44a4      	add	ip, r4
 8015a2c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8015a30:	80ef      	strh	r7, [r5, #6]
 8015a32:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015a36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a38:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8015a3c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015a40:	bfb8      	it	lt
 8015a42:	448b      	addlt	fp, r1
 8015a44:	eb08 0503 	add.w	r5, r8, r3
 8015a48:	ea5e 0307 	orrs.w	r3, lr, r7
 8015a4c:	d011      	beq.n	8015a72 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8015a4e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8015a52:	f1be 0f00 	cmp.w	lr, #0
 8015a56:	db0c      	blt.n	8015a72 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8015a58:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015a5a:	45be      	cmp	lr, r7
 8015a5c:	da09      	bge.n	8015a72 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8015a5e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8015a62:	45be      	cmp	lr, r7
 8015a64:	bf3c      	itt	cc
 8015a66:	f10c 0708 	addcc.w	r7, ip, #8
 8015a6a:	6107      	strcc	r7, [r0, #16]
 8015a6c:	f10e 0701 	add.w	r7, lr, #1
 8015a70:	6087      	str	r7, [r0, #8]
 8015a72:	6907      	ldr	r7, [r0, #16]
 8015a74:	b213      	sxth	r3, r2
 8015a76:	9310      	str	r3, [sp, #64]	; 0x40
 8015a78:	807b      	strh	r3, [r7, #2]
 8015a7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a7c:	803d      	strh	r5, [r7, #0]
 8015a7e:	4555      	cmp	r5, sl
 8015a80:	80be      	strh	r6, [r7, #4]
 8015a82:	80fe      	strh	r6, [r7, #6]
 8015a84:	eb04 0c03 	add.w	ip, r4, r3
 8015a88:	d051      	beq.n	8015b2e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8015a8a:	9b01      	ldr	r3, [sp, #4]
 8015a8c:	eba3 070c 	sub.w	r7, r3, ip
 8015a90:	443c      	add	r4, r7
 8015a92:	0164      	lsls	r4, r4, #5
 8015a94:	fb94 f8f1 	sdiv	r8, r4, r1
 8015a98:	fb01 4418 	mls	r4, r1, r8, r4
 8015a9c:	2c00      	cmp	r4, #0
 8015a9e:	bfb8      	it	lt
 8015aa0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8015aa4:	ebab 0301 	sub.w	r3, fp, r1
 8015aa8:	f108 0701 	add.w	r7, r8, #1
 8015aac:	bfb8      	it	lt
 8015aae:	1864      	addlt	r4, r4, r1
 8015ab0:	9309      	str	r3, [sp, #36]	; 0x24
 8015ab2:	9711      	str	r7, [sp, #68]	; 0x44
 8015ab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ab6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8015aba:	191b      	adds	r3, r3, r4
 8015abc:	bf58      	it	pl
 8015abe:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8015ac0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8015ac4:	9309      	str	r3, [sp, #36]	; 0x24
 8015ac6:	bf48      	it	mi
 8015ac8:	4647      	movmi	r7, r8
 8015aca:	44bb      	add	fp, r7
 8015acc:	f8ae b004 	strh.w	fp, [lr, #4]
 8015ad0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8015ad4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8015ad8:	f8ae b006 	strh.w	fp, [lr, #6]
 8015adc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8015ae0:	44bc      	add	ip, r7
 8015ae2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8015ae4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8015ae8:	443d      	add	r5, r7
 8015aea:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8015aee:	bf5c      	itt	pl
 8015af0:	1a5b      	subpl	r3, r3, r1
 8015af2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8015af4:	ea5b 0307 	orrs.w	r3, fp, r7
 8015af8:	d011      	beq.n	8015b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015afa:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8015afe:	f1bb 0f00 	cmp.w	fp, #0
 8015b02:	db0c      	blt.n	8015b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015b04:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015b06:	45bb      	cmp	fp, r7
 8015b08:	da09      	bge.n	8015b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015b0a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015b0e:	45bb      	cmp	fp, r7
 8015b10:	bf3c      	itt	cc
 8015b12:	f10e 0708 	addcc.w	r7, lr, #8
 8015b16:	6107      	strcc	r7, [r0, #16]
 8015b18:	f10b 0701 	add.w	r7, fp, #1
 8015b1c:	6087      	str	r7, [r0, #8]
 8015b1e:	6907      	ldr	r7, [r0, #16]
 8015b20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b22:	803d      	strh	r5, [r7, #0]
 8015b24:	4555      	cmp	r5, sl
 8015b26:	807b      	strh	r3, [r7, #2]
 8015b28:	80be      	strh	r6, [r7, #4]
 8015b2a:	80fe      	strh	r6, [r7, #6]
 8015b2c:	d1c2      	bne.n	8015ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8015b2e:	9b01      	ldr	r3, [sp, #4]
 8015b30:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015b32:	eba3 0c0c 	sub.w	ip, r3, ip
 8015b36:	6903      	ldr	r3, [r0, #16]
 8015b38:	8899      	ldrh	r1, [r3, #4]
 8015b3a:	4461      	add	r1, ip
 8015b3c:	8099      	strh	r1, [r3, #4]
 8015b3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015b40:	3720      	adds	r7, #32
 8015b42:	1a7f      	subs	r7, r7, r1
 8015b44:	88d9      	ldrh	r1, [r3, #6]
 8015b46:	fb0c 1c07 	mla	ip, ip, r7, r1
 8015b4a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8015b4e:	e60e      	b.n	801576e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8015b50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015b52:	f04f 34ff 	mov.w	r4, #4294967295
 8015b56:	940d      	str	r4, [sp, #52]	; 0x34
 8015b58:	437b      	muls	r3, r7
 8015b5a:	4249      	negs	r1, r1
 8015b5c:	2400      	movs	r4, #0
 8015b5e:	e756      	b.n	8015a0e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8015b60:	9905      	ldr	r1, [sp, #20]
 8015b62:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8015b66:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8015b6a:	f001 011f 	and.w	r1, r1, #31
 8015b6e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8015b72:	9102      	str	r1, [sp, #8]
 8015b74:	9904      	ldr	r1, [sp, #16]
 8015b76:	45f3      	cmp	fp, lr
 8015b78:	f009 0c1f 	and.w	ip, r9, #31
 8015b7c:	eba1 0406 	sub.w	r4, r1, r6
 8015b80:	d108      	bne.n	8015b94 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8015b82:	9b02      	ldr	r3, [sp, #8]
 8015b84:	449c      	add	ip, r3
 8015b86:	44a0      	add	r8, r4
 8015b88:	fb04 a40c 	mla	r4, r4, ip, sl
 8015b8c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8015b90:	80fc      	strh	r4, [r7, #6]
 8015b92:	e458      	b.n	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015b94:	9905      	ldr	r1, [sp, #20]
 8015b96:	ebb1 0109 	subs.w	r1, r1, r9
 8015b9a:	bf5b      	ittet	pl
 8015b9c:	f1cc 0520 	rsbpl	r5, ip, #32
 8015ba0:	436c      	mulpl	r4, r5
 8015ba2:	2500      	movmi	r5, #0
 8015ba4:	2520      	movpl	r5, #32
 8015ba6:	bf44      	itt	mi
 8015ba8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8015bac:	4249      	negmi	r1, r1
 8015bae:	9501      	str	r5, [sp, #4]
 8015bb0:	9b01      	ldr	r3, [sp, #4]
 8015bb2:	fb94 f5f1 	sdiv	r5, r4, r1
 8015bb6:	fb01 4415 	mls	r4, r1, r5, r4
 8015bba:	bf54      	ite	pl
 8015bbc:	f04f 0901 	movpl.w	r9, #1
 8015bc0:	f04f 39ff 	movmi.w	r9, #4294967295
 8015bc4:	2c00      	cmp	r4, #0
 8015bc6:	bfb8      	it	lt
 8015bc8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8015bcc:	449c      	add	ip, r3
 8015bce:	44a8      	add	r8, r5
 8015bd0:	fb05 ac0c 	mla	ip, r5, ip, sl
 8015bd4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8015bd8:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015bdc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015be0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8015be4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015be8:	bfb8      	it	lt
 8015bea:	1864      	addlt	r4, r4, r1
 8015bec:	ea58 0707 	orrs.w	r7, r8, r7
 8015bf0:	eb0b 0309 	add.w	r3, fp, r9
 8015bf4:	d011      	beq.n	8015c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015bf6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8015bfa:	f1b8 0f00 	cmp.w	r8, #0
 8015bfe:	db0c      	blt.n	8015c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015c00:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015c02:	45b8      	cmp	r8, r7
 8015c04:	da09      	bge.n	8015c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015c06:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8015c0a:	45b8      	cmp	r8, r7
 8015c0c:	bf3c      	itt	cc
 8015c0e:	f10c 0708 	addcc.w	r7, ip, #8
 8015c12:	6107      	strcc	r7, [r0, #16]
 8015c14:	f108 0701 	add.w	r7, r8, #1
 8015c18:	6087      	str	r7, [r0, #8]
 8015c1a:	6907      	ldr	r7, [r0, #16]
 8015c1c:	f04f 0c00 	mov.w	ip, #0
 8015c20:	b212      	sxth	r2, r2
 8015c22:	459e      	cmp	lr, r3
 8015c24:	803b      	strh	r3, [r7, #0]
 8015c26:	807a      	strh	r2, [r7, #2]
 8015c28:	f8a7 c004 	strh.w	ip, [r7, #4]
 8015c2c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015c30:	442e      	add	r6, r5
 8015c32:	d04d      	beq.n	8015cd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8015c34:	9f04      	ldr	r7, [sp, #16]
 8015c36:	1bbf      	subs	r7, r7, r6
 8015c38:	443d      	add	r5, r7
 8015c3a:	016d      	lsls	r5, r5, #5
 8015c3c:	fb95 f8f1 	sdiv	r8, r5, r1
 8015c40:	fb01 5518 	mls	r5, r1, r8, r5
 8015c44:	4565      	cmp	r5, ip
 8015c46:	bfb8      	it	lt
 8015c48:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8015c4c:	f108 0701 	add.w	r7, r8, #1
 8015c50:	bfb8      	it	lt
 8015c52:	186d      	addlt	r5, r5, r1
 8015c54:	1a64      	subs	r4, r4, r1
 8015c56:	9703      	str	r7, [sp, #12]
 8015c58:	f04f 0a00 	mov.w	sl, #0
 8015c5c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015c60:	1964      	adds	r4, r4, r5
 8015c62:	bf58      	it	pl
 8015c64:	9f03      	ldrpl	r7, [sp, #12]
 8015c66:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8015c6a:	bf48      	it	mi
 8015c6c:	4647      	movmi	r7, r8
 8015c6e:	44bb      	add	fp, r7
 8015c70:	f8ac b004 	strh.w	fp, [ip, #4]
 8015c74:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015c78:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8015c7c:	f8ac b006 	strh.w	fp, [ip, #6]
 8015c80:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015c84:	443e      	add	r6, r7
 8015c86:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015c8a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015c8e:	bf58      	it	pl
 8015c90:	1a64      	subpl	r4, r4, r1
 8015c92:	ea5b 0707 	orrs.w	r7, fp, r7
 8015c96:	444b      	add	r3, r9
 8015c98:	d011      	beq.n	8015cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015c9a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8015c9e:	f1bb 0f00 	cmp.w	fp, #0
 8015ca2:	db0c      	blt.n	8015cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015ca4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015ca6:	45bb      	cmp	fp, r7
 8015ca8:	da09      	bge.n	8015cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015caa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015cae:	45bb      	cmp	fp, r7
 8015cb0:	bf3c      	itt	cc
 8015cb2:	f10c 0708 	addcc.w	r7, ip, #8
 8015cb6:	6107      	strcc	r7, [r0, #16]
 8015cb8:	f10b 0701 	add.w	r7, fp, #1
 8015cbc:	6087      	str	r7, [r0, #8]
 8015cbe:	6907      	ldr	r7, [r0, #16]
 8015cc0:	459e      	cmp	lr, r3
 8015cc2:	803b      	strh	r3, [r7, #0]
 8015cc4:	807a      	strh	r2, [r7, #2]
 8015cc6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8015cca:	f8a7 a006 	strh.w	sl, [r7, #6]
 8015cce:	d1c5      	bne.n	8015c5c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8015cd0:	9b04      	ldr	r3, [sp, #16]
 8015cd2:	1b9e      	subs	r6, r3, r6
 8015cd4:	6903      	ldr	r3, [r0, #16]
 8015cd6:	889a      	ldrh	r2, [r3, #4]
 8015cd8:	4432      	add	r2, r6
 8015cda:	809a      	strh	r2, [r3, #4]
 8015cdc:	9a02      	ldr	r2, [sp, #8]
 8015cde:	f102 0c20 	add.w	ip, r2, #32
 8015ce2:	9a01      	ldr	r2, [sp, #4]
 8015ce4:	ebac 0c02 	sub.w	ip, ip, r2
 8015ce8:	88da      	ldrh	r2, [r3, #6]
 8015cea:	fb06 260c 	mla	r6, r6, ip, r2
 8015cee:	80de      	strh	r6, [r3, #6]
 8015cf0:	f7ff bba9 	b.w	8015446 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08015cf4 <_ZN8touchgfx7Outline6lineToEii>:
 8015cf4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015cf6:	079b      	lsls	r3, r3, #30
 8015cf8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015cfa:	460e      	mov	r6, r1
 8015cfc:	4615      	mov	r5, r2
 8015cfe:	d511      	bpl.n	8015d24 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8015d00:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8015d04:	ea86 0701 	eor.w	r7, r6, r1
 8015d08:	ea85 0302 	eor.w	r3, r5, r2
 8015d0c:	433b      	orrs	r3, r7
 8015d0e:	d009      	beq.n	8015d24 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8015d10:	4633      	mov	r3, r6
 8015d12:	9500      	str	r5, [sp, #0]
 8015d14:	f7ff fb3e 	bl	8015394 <_ZN8touchgfx7Outline10renderLineEiiii>
 8015d18:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015d1a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8015d1e:	f043 0301 	orr.w	r3, r3, #1
 8015d22:	6243      	str	r3, [r0, #36]	; 0x24
 8015d24:	b003      	add	sp, #12
 8015d26:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015d28 <_ZN8touchgfx7Outline6moveToEii>:
 8015d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d2a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015d2c:	4615      	mov	r5, r2
 8015d2e:	079a      	lsls	r2, r3, #30
 8015d30:	4604      	mov	r4, r0
 8015d32:	460e      	mov	r6, r1
 8015d34:	d401      	bmi.n	8015d3a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8015d36:	f7ff faf9 	bl	801532c <_ZN8touchgfx7Outline5resetEv>
 8015d3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8015d3c:	07db      	lsls	r3, r3, #31
 8015d3e:	d504      	bpl.n	8015d4a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8015d40:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8015d44:	4620      	mov	r0, r4
 8015d46:	f7ff ffd5 	bl	8015cf4 <_ZN8touchgfx7Outline6lineToEii>
 8015d4a:	6923      	ldr	r3, [r4, #16]
 8015d4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015d50:	1170      	asrs	r0, r6, #5
 8015d52:	4290      	cmp	r0, r2
 8015d54:	ea4f 1165 	mov.w	r1, r5, asr #5
 8015d58:	d103      	bne.n	8015d62 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8015d5a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8015d5e:	4291      	cmp	r1, r2
 8015d60:	d01a      	beq.n	8015d98 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8015d62:	88df      	ldrh	r7, [r3, #6]
 8015d64:	889a      	ldrh	r2, [r3, #4]
 8015d66:	433a      	orrs	r2, r7
 8015d68:	d010      	beq.n	8015d8c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8015d6a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8015d6e:	2a00      	cmp	r2, #0
 8015d70:	db0c      	blt.n	8015d8c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8015d72:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8015d74:	42ba      	cmp	r2, r7
 8015d76:	da09      	bge.n	8015d8c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8015d78:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8015d7c:	42ba      	cmp	r2, r7
 8015d7e:	bf38      	it	cc
 8015d80:	3308      	addcc	r3, #8
 8015d82:	f102 0201 	add.w	r2, r2, #1
 8015d86:	bf38      	it	cc
 8015d88:	6123      	strcc	r3, [r4, #16]
 8015d8a:	60a2      	str	r2, [r4, #8]
 8015d8c:	6923      	ldr	r3, [r4, #16]
 8015d8e:	2200      	movs	r2, #0
 8015d90:	8018      	strh	r0, [r3, #0]
 8015d92:	8059      	strh	r1, [r3, #2]
 8015d94:	809a      	strh	r2, [r3, #4]
 8015d96:	80da      	strh	r2, [r3, #6]
 8015d98:	6166      	str	r6, [r4, #20]
 8015d9a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8015d9e:	6225      	str	r5, [r4, #32]
 8015da0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015da2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8015da2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015da6:	b0d0      	sub	sp, #320	; 0x140
 8015da8:	466c      	mov	r4, sp
 8015daa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8015dae:	4627      	mov	r7, r4
 8015db0:	1a0d      	subs	r5, r1, r0
 8015db2:	2d48      	cmp	r5, #72	; 0x48
 8015db4:	f100 0308 	add.w	r3, r0, #8
 8015db8:	f340 80d5 	ble.w	8015f66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015dbc:	112d      	asrs	r5, r5, #4
 8015dbe:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8015dc2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8015dc6:	6816      	ldr	r6, [r2, #0]
 8015dc8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8015dcc:	6006      	str	r6, [r0, #0]
 8015dce:	6856      	ldr	r6, [r2, #4]
 8015dd0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8015dd4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015dd8:	6046      	str	r6, [r0, #4]
 8015dda:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015dde:	f8a2 8002 	strh.w	r8, [r2, #2]
 8015de2:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015de6:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015dea:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8015dee:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8015df2:	4565      	cmp	r5, ip
 8015df4:	f1a1 0208 	sub.w	r2, r1, #8
 8015df8:	db06      	blt.n	8015e08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8015dfa:	d119      	bne.n	8015e30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015dfc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8015e00:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8015e04:	42ae      	cmp	r6, r5
 8015e06:	dd13      	ble.n	8015e30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015e08:	460e      	mov	r6, r1
 8015e0a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8015e0e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015e12:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8015e16:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8015e1a:	601d      	str	r5, [r3, #0]
 8015e1c:	6875      	ldr	r5, [r6, #4]
 8015e1e:	605d      	str	r5, [r3, #4]
 8015e20:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015e24:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015e28:	f821 8c04 	strh.w	r8, [r1, #-4]
 8015e2c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015e30:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8015e34:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8015e38:	42ae      	cmp	r6, r5
 8015e3a:	db06      	blt.n	8015e4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8015e3c:	d116      	bne.n	8015e6c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8015e3e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8015e42:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8015e46:	45ac      	cmp	ip, r5
 8015e48:	da10      	bge.n	8015e6c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8015e4a:	681d      	ldr	r5, [r3, #0]
 8015e4c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8015e50:	6005      	str	r5, [r0, #0]
 8015e52:	685d      	ldr	r5, [r3, #4]
 8015e54:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015e58:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8015e5c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8015e60:	6045      	str	r5, [r0, #4]
 8015e62:	8146      	strh	r6, [r0, #10]
 8015e64:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8015e68:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8015e6c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8015e70:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8015e74:	4565      	cmp	r5, ip
 8015e76:	db06      	blt.n	8015e86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8015e78:	d119      	bne.n	8015eae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015e7a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8015e7e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015e82:	42ae      	cmp	r6, r5
 8015e84:	da13      	bge.n	8015eae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015e86:	460e      	mov	r6, r1
 8015e88:	f9b0 9000 	ldrsh.w	r9, [r0]
 8015e8c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015e90:	6005      	str	r5, [r0, #0]
 8015e92:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8015e96:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8015e9a:	6875      	ldr	r5, [r6, #4]
 8015e9c:	6045      	str	r5, [r0, #4]
 8015e9e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015ea2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015ea6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8015eaa:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015eae:	3308      	adds	r3, #8
 8015eb0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8015eb4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8015eb8:	45e6      	cmp	lr, ip
 8015eba:	dbf8      	blt.n	8015eae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015ebc:	d105      	bne.n	8015eca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015ebe:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015ec2:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015ec6:	42ae      	cmp	r6, r5
 8015ec8:	dbf1      	blt.n	8015eae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015eca:	4615      	mov	r5, r2
 8015ecc:	3a08      	subs	r2, #8
 8015ece:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8015ed2:	45b4      	cmp	ip, r6
 8015ed4:	dbf9      	blt.n	8015eca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015ed6:	d105      	bne.n	8015ee4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8015ed8:	f9b0 8000 	ldrsh.w	r8, [r0]
 8015edc:	f9b2 6000 	ldrsh.w	r6, [r2]
 8015ee0:	45b0      	cmp	r8, r6
 8015ee2:	dbf2      	blt.n	8015eca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015ee4:	4293      	cmp	r3, r2
 8015ee6:	f1a5 0608 	sub.w	r6, r5, #8
 8015eea:	d816      	bhi.n	8015f1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8015eec:	f8d6 c000 	ldr.w	ip, [r6]
 8015ef0:	f9b3 a000 	ldrsh.w	sl, [r3]
 8015ef4:	f8c3 c000 	str.w	ip, [r3]
 8015ef8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8015efc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8015f00:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8015f04:	f8c3 c004 	str.w	ip, [r3, #4]
 8015f08:	f825 ac08 	strh.w	sl, [r5, #-8]
 8015f0c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015f10:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015f14:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015f18:	e7c9      	b.n	8015eae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015f1a:	f8d6 e000 	ldr.w	lr, [r6]
 8015f1e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8015f22:	f8c0 e000 	str.w	lr, [r0]
 8015f26:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8015f2a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8015f2e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8015f32:	f8c0 e004 	str.w	lr, [r0, #4]
 8015f36:	f825 ac08 	strh.w	sl, [r5, #-8]
 8015f3a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8015f3e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015f42:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015f46:	1acd      	subs	r5, r1, r3
 8015f48:	1a16      	subs	r6, r2, r0
 8015f4a:	10ed      	asrs	r5, r5, #3
 8015f4c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8015f50:	bfb5      	itete	lt
 8015f52:	e9c4 0200 	strdlt	r0, r2, [r4]
 8015f56:	e9c4 3100 	strdge	r3, r1, [r4]
 8015f5a:	460a      	movlt	r2, r1
 8015f5c:	4603      	movge	r3, r0
 8015f5e:	3408      	adds	r4, #8
 8015f60:	4618      	mov	r0, r3
 8015f62:	4611      	mov	r1, r2
 8015f64:	e724      	b.n	8015db0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8015f66:	4299      	cmp	r1, r3
 8015f68:	d928      	bls.n	8015fbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8015f6a:	f1a3 0210 	sub.w	r2, r3, #16
 8015f6e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8015f72:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8015f76:	45ac      	cmp	ip, r5
 8015f78:	db06      	blt.n	8015f88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8015f7a:	d11d      	bne.n	8015fb8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8015f7c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8015f80:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8015f84:	42ae      	cmp	r6, r5
 8015f86:	da17      	bge.n	8015fb8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8015f88:	4615      	mov	r5, r2
 8015f8a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8015f8e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8015f92:	6116      	str	r6, [r2, #16]
 8015f94:	686e      	ldr	r6, [r5, #4]
 8015f96:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8015f9a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8015f9e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8015fa2:	42a8      	cmp	r0, r5
 8015fa4:	6156      	str	r6, [r2, #20]
 8015fa6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8015faa:	f8a2 800c 	strh.w	r8, [r2, #12]
 8015fae:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8015fb2:	f1a2 0208 	sub.w	r2, r2, #8
 8015fb6:	d1da      	bne.n	8015f6e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8015fb8:	3308      	adds	r3, #8
 8015fba:	e7d4      	b.n	8015f66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015fbc:	42bc      	cmp	r4, r7
 8015fbe:	d903      	bls.n	8015fc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8015fc0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8015fc4:	3c08      	subs	r4, #8
 8015fc6:	e6f3      	b.n	8015db0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8015fc8:	b050      	add	sp, #320	; 0x140
 8015fca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08015fce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8015fce:	b510      	push	{r4, lr}
 8015fd0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015fd2:	07da      	lsls	r2, r3, #31
 8015fd4:	4604      	mov	r4, r0
 8015fd6:	d507      	bpl.n	8015fe8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8015fd8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8015fdc:	f7ff fe8a 	bl	8015cf4 <_ZN8touchgfx7Outline6lineToEii>
 8015fe0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015fe2:	f023 0301 	bic.w	r3, r3, #1
 8015fe6:	6243      	str	r3, [r0, #36]	; 0x24
 8015fe8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8015fea:	079b      	lsls	r3, r3, #30
 8015fec:	d521      	bpl.n	8016032 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8015fee:	6923      	ldr	r3, [r4, #16]
 8015ff0:	88d9      	ldrh	r1, [r3, #6]
 8015ff2:	889a      	ldrh	r2, [r3, #4]
 8015ff4:	430a      	orrs	r2, r1
 8015ff6:	d010      	beq.n	801601a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015ff8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8015ffc:	2a00      	cmp	r2, #0
 8015ffe:	db0c      	blt.n	801601a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016000:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8016002:	428a      	cmp	r2, r1
 8016004:	da09      	bge.n	801601a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016006:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801600a:	4291      	cmp	r1, r2
 801600c:	bf88      	it	hi
 801600e:	3308      	addhi	r3, #8
 8016010:	f102 0201 	add.w	r2, r2, #1
 8016014:	bf88      	it	hi
 8016016:	6123      	strhi	r3, [r4, #16]
 8016018:	60a2      	str	r2, [r4, #8]
 801601a:	68a1      	ldr	r1, [r4, #8]
 801601c:	b129      	cbz	r1, 801602a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801601e:	6863      	ldr	r3, [r4, #4]
 8016020:	4299      	cmp	r1, r3
 8016022:	d802      	bhi.n	801602a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016024:	68e0      	ldr	r0, [r4, #12]
 8016026:	f7ff febc 	bl	8015da2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801602a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801602c:	f023 0302 	bic.w	r3, r3, #2
 8016030:	6263      	str	r3, [r4, #36]	; 0x24
 8016032:	68e0      	ldr	r0, [r4, #12]
 8016034:	bd10      	pop	{r4, pc}
	...

08016038 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8016038:	4b02      	ldr	r3, [pc, #8]	; (8016044 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801603a:	6018      	str	r0, [r3, #0]
 801603c:	4b02      	ldr	r3, [pc, #8]	; (8016048 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801603e:	6019      	str	r1, [r3, #0]
 8016040:	4770      	bx	lr
 8016042:	bf00      	nop
 8016044:	20013854 	.word	0x20013854
 8016048:	20013858 	.word	0x20013858

0801604c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801604c:	4a02      	ldr	r2, [pc, #8]	; (8016058 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801604e:	2300      	movs	r3, #0
 8016050:	6013      	str	r3, [r2, #0]
 8016052:	4a02      	ldr	r2, [pc, #8]	; (801605c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8016054:	6013      	str	r3, [r2, #0]
 8016056:	4770      	bx	lr
 8016058:	20013854 	.word	0x20013854
 801605c:	20013858 	.word	0x20013858

08016060 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8016060:	4b01      	ldr	r3, [pc, #4]	; (8016068 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8016062:	6818      	ldr	r0, [r3, #0]
 8016064:	4770      	bx	lr
 8016066:	bf00      	nop
 8016068:	20013854 	.word	0x20013854

0801606c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801606c:	4b01      	ldr	r3, [pc, #4]	; (8016074 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801606e:	6818      	ldr	r0, [r3, #0]
 8016070:	4770      	bx	lr
 8016072:	bf00      	nop
 8016074:	20013858 	.word	0x20013858

08016078 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8016078:	b510      	push	{r4, lr}
 801607a:	6803      	ldr	r3, [r0, #0]
 801607c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801607e:	460c      	mov	r4, r1
 8016080:	4798      	blx	r3
 8016082:	1b03      	subs	r3, r0, r4
 8016084:	4258      	negs	r0, r3
 8016086:	4158      	adcs	r0, r3
 8016088:	bd10      	pop	{r4, pc}
	...

0801608c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801608c:	4b01      	ldr	r3, [pc, #4]	; (8016094 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801608e:	6019      	str	r1, [r3, #0]
 8016090:	4770      	bx	lr
 8016092:	bf00      	nop
 8016094:	2001385c 	.word	0x2001385c

08016098 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8016098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801609c:	4696      	mov	lr, r2
 801609e:	4605      	mov	r5, r0
 80160a0:	4614      	mov	r4, r2
 80160a2:	460e      	mov	r6, r1
 80160a4:	461f      	mov	r7, r3
 80160a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80160aa:	b097      	sub	sp, #92	; 0x5c
 80160ac:	f10d 0c1c 	add.w	ip, sp, #28
 80160b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80160b4:	f8de 3000 	ldr.w	r3, [lr]
 80160b8:	f8cc 3000 	str.w	r3, [ip]
 80160bc:	f104 0e14 	add.w	lr, r4, #20
 80160c0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80160c4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80160c8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80160cc:	f8de 3000 	ldr.w	r3, [lr]
 80160d0:	f8cc 3000 	str.w	r3, [ip]
 80160d4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80160d8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80160dc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80160e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80160e4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80160e8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80160ec:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80160f0:	f8de 3000 	ldr.w	r3, [lr]
 80160f4:	f8cc 3000 	str.w	r3, [ip]
 80160f8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80160fa:	682b      	ldr	r3, [r5, #0]
 80160fc:	9201      	str	r2, [sp, #4]
 80160fe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8016102:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016104:	9200      	str	r2, [sp, #0]
 8016106:	f8cd 8008 	str.w	r8, [sp, #8]
 801610a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801610e:	aa07      	add	r2, sp, #28
 8016110:	463b      	mov	r3, r7
 8016112:	4631      	mov	r1, r6
 8016114:	4628      	mov	r0, r5
 8016116:	47d8      	blx	fp
 8016118:	46a6      	mov	lr, r4
 801611a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801611e:	f10d 0c1c 	add.w	ip, sp, #28
 8016122:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016126:	f8de 3000 	ldr.w	r3, [lr]
 801612a:	f8cc 3000 	str.w	r3, [ip]
 801612e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8016132:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016136:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801613a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801613e:	343c      	adds	r4, #60	; 0x3c
 8016140:	f8de 3000 	ldr.w	r3, [lr]
 8016144:	f8cc 3000 	str.w	r3, [ip]
 8016148:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801614a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801614e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016152:	6823      	ldr	r3, [r4, #0]
 8016154:	f8cc 3000 	str.w	r3, [ip]
 8016158:	682b      	ldr	r3, [r5, #0]
 801615a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801615e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016160:	9201      	str	r2, [sp, #4]
 8016162:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016164:	9200      	str	r2, [sp, #0]
 8016166:	f8cd 8008 	str.w	r8, [sp, #8]
 801616a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801616c:	aa07      	add	r2, sp, #28
 801616e:	463b      	mov	r3, r7
 8016170:	4631      	mov	r1, r6
 8016172:	4628      	mov	r0, r5
 8016174:	47a0      	blx	r4
 8016176:	b017      	add	sp, #92	; 0x5c
 8016178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801617c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801617c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016180:	b08d      	sub	sp, #52	; 0x34
 8016182:	4688      	mov	r8, r1
 8016184:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016186:	f8d3 c000 	ldr.w	ip, [r3]
 801618a:	680f      	ldr	r7, [r1, #0]
 801618c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8016190:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8016194:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8016198:	edd3 6a07 	vldr	s13, [r3, #28]
 801619c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801619e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80161a2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80161a6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80161aa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80161ae:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80161b2:	eba7 070c 	sub.w	r7, r7, ip
 80161b6:	42bc      	cmp	r4, r7
 80161b8:	bfa8      	it	ge
 80161ba:	463c      	movge	r4, r7
 80161bc:	ee07 4a90 	vmov	s15, r4
 80161c0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80161c4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80161c8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80161cc:	ee65 4a24 	vmul.f32	s9, s10, s9
 80161d0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80161d4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80161d8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80161dc:	eb09 0e0c 	add.w	lr, r9, ip
 80161e0:	4571      	cmp	r1, lr
 80161e2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80161e6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80161ea:	ee36 0a84 	vadd.f32	s0, s13, s8
 80161ee:	ee61 1a87 	vmul.f32	s3, s3, s14
 80161f2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80161f6:	f340 808d 	ble.w	8016314 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80161fa:	eba1 060e 	sub.w	r6, r1, lr
 80161fe:	fb96 f5f4 	sdiv	r5, r6, r4
 8016202:	ee07 5a10 	vmov	s14, r5
 8016206:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801620a:	2d00      	cmp	r5, #0
 801620c:	fb04 6615 	mls	r6, r4, r5, r6
 8016210:	eea7 0a04 	vfma.f32	s0, s14, s8
 8016214:	eee7 0a24 	vfma.f32	s1, s14, s9
 8016218:	eea7 1a05 	vfma.f32	s2, s14, s10
 801621c:	dd13      	ble.n	8016246 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801621e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8016222:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8016226:	eef5 6a40 	vcmp.f32	s13, #0.0
 801622a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801622e:	bf18      	it	ne
 8016230:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8016234:	ee31 2a45 	vsub.f32	s4, s2, s10
 8016238:	bf08      	it	eq
 801623a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801623e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8016242:	ee22 2a07 	vmul.f32	s4, s4, s14
 8016246:	fb05 f204 	mul.w	r2, r5, r4
 801624a:	1abf      	subs	r7, r7, r2
 801624c:	4494      	add	ip, r2
 801624e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8016252:	4411      	add	r1, r2
 8016254:	eb09 020c 	add.w	r2, r9, ip
 8016258:	443a      	add	r2, r7
 801625a:	b209      	sxth	r1, r1
 801625c:	428a      	cmp	r2, r1
 801625e:	bfc4      	itt	gt
 8016260:	eba1 0209 	subgt.w	r2, r1, r9
 8016264:	eba2 070c 	subgt.w	r7, r2, ip
 8016268:	2f00      	cmp	r7, #0
 801626a:	dd50      	ble.n	801630e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801626c:	fb97 f1f4 	sdiv	r1, r7, r4
 8016270:	fb04 7211 	mls	r2, r4, r1, r7
 8016274:	b90a      	cbnz	r2, 801627a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8016276:	3901      	subs	r1, #1
 8016278:	4622      	mov	r2, r4
 801627a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801627e:	6840      	ldr	r0, [r0, #4]
 8016280:	900b      	str	r0, [sp, #44]	; 0x2c
 8016282:	f8d0 a000 	ldr.w	sl, [r0]
 8016286:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016288:	9008      	str	r0, [sp, #32]
 801628a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801628e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8016290:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8016294:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8016298:	695b      	ldr	r3, [r3, #20]
 801629a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801629c:	445b      	add	r3, fp
 801629e:	eef0 6a42 	vmov.f32	s13, s4
 80162a2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80162a6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80162aa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80162ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80162b2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80162b6:	9307      	str	r3, [sp, #28]
 80162b8:	ee17 7a90 	vmov	r7, s15
 80162bc:	ee73 7a42 	vsub.f32	s15, s6, s4
 80162c0:	eeb0 7a61 	vmov.f32	s14, s3
 80162c4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80162c8:	ee16 3a90 	vmov	r3, s13
 80162cc:	fb97 f7f4 	sdiv	r7, r7, r4
 80162d0:	ee17 ca90 	vmov	ip, s15
 80162d4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80162d8:	fb9c fcf4 	sdiv	ip, ip, r4
 80162dc:	fb0c 3306 	mla	r3, ip, r6, r3
 80162e0:	9302      	str	r3, [sp, #8]
 80162e2:	ee17 3a10 	vmov	r3, s14
 80162e6:	44b6      	add	lr, r6
 80162e8:	fb04 e505 	mla	r5, r4, r5, lr
 80162ec:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80162f0:	fb07 3706 	mla	r7, r7, r6, r3
 80162f4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80162f8:	e9cd 4700 	strd	r4, r7, [sp]
 80162fc:	2900      	cmp	r1, #0
 80162fe:	bfcc      	ite	gt
 8016300:	46a1      	movgt	r9, r4
 8016302:	4691      	movle	r9, r2
 8016304:	eba9 0306 	sub.w	r3, r9, r6
 8016308:	f8da 4008 	ldr.w	r4, [sl, #8]
 801630c:	47a0      	blx	r4
 801630e:	b00d      	add	sp, #52	; 0x34
 8016310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016314:	2500      	movs	r5, #0
 8016316:	462e      	mov	r6, r5
 8016318:	e799      	b.n	801624e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801631c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801631c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016320:	b0db      	sub	sp, #364	; 0x16c
 8016322:	461d      	mov	r5, r3
 8016324:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8016328:	930a      	str	r3, [sp, #40]	; 0x28
 801632a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801632e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016330:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8016334:	9310      	str	r3, [sp, #64]	; 0x40
 8016336:	6803      	ldr	r3, [r0, #0]
 8016338:	910f      	str	r1, [sp, #60]	; 0x3c
 801633a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801633c:	9009      	str	r0, [sp, #36]	; 0x24
 801633e:	4614      	mov	r4, r2
 8016340:	4629      	mov	r1, r5
 8016342:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8016346:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801634a:	47b8      	blx	r7
 801634c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801634e:	6058      	str	r0, [r3, #4]
 8016350:	2800      	cmp	r0, #0
 8016352:	f000 83a1 	beq.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016356:	682b      	ldr	r3, [r5, #0]
 8016358:	9314      	str	r3, [sp, #80]	; 0x50
 801635a:	686b      	ldr	r3, [r5, #4]
 801635c:	9315      	str	r3, [sp, #84]	; 0x54
 801635e:	4bc4      	ldr	r3, [pc, #784]	; (8016670 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8016360:	ed94 7a02 	vldr	s14, [r4, #8]
 8016364:	7819      	ldrb	r1, [r3, #0]
 8016366:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801636a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801636e:	2900      	cmp	r1, #0
 8016370:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016374:	bf16      	itet	ne
 8016376:	4619      	movne	r1, r3
 8016378:	4611      	moveq	r1, r2
 801637a:	4613      	movne	r3, r2
 801637c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016380:	9116      	str	r1, [sp, #88]	; 0x58
 8016382:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8016386:	f240 8387 	bls.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801638a:	ed94 7a07 	vldr	s14, [r4, #28]
 801638e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8016392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016396:	f240 837f 	bls.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801639a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801639e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80163a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80163a6:	f240 8377 	bls.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80163aa:	6822      	ldr	r2, [r4, #0]
 80163ac:	4bb1      	ldr	r3, [pc, #708]	; (8016674 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80163ae:	429a      	cmp	r2, r3
 80163b0:	f2c0 8372 	blt.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80163b4:	49b0      	ldr	r1, [pc, #704]	; (8016678 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80163b6:	6963      	ldr	r3, [r4, #20]
 80163b8:	428a      	cmp	r2, r1
 80163ba:	f300 836d 	bgt.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80163be:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80163c2:	48ae      	ldr	r0, [pc, #696]	; (801667c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80163c4:	33ff      	adds	r3, #255	; 0xff
 80163c6:	4283      	cmp	r3, r0
 80163c8:	f200 8366 	bhi.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80163cc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80163ce:	4dac      	ldr	r5, [pc, #688]	; (8016680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80163d0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80163d4:	33ff      	adds	r3, #255	; 0xff
 80163d6:	42ab      	cmp	r3, r5
 80163d8:	f200 835e 	bhi.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80163dc:	6862      	ldr	r2, [r4, #4]
 80163de:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80163e2:	33ff      	adds	r3, #255	; 0xff
 80163e4:	4283      	cmp	r3, r0
 80163e6:	f200 8357 	bhi.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80163ea:	69a1      	ldr	r1, [r4, #24]
 80163ec:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80163f0:	33ff      	adds	r3, #255	; 0xff
 80163f2:	4283      	cmp	r3, r0
 80163f4:	f200 8350 	bhi.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80163f8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80163fa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80163fe:	30ff      	adds	r0, #255	; 0xff
 8016400:	42a8      	cmp	r0, r5
 8016402:	f200 8349 	bhi.w	8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016406:	428a      	cmp	r2, r1
 8016408:	f280 8110 	bge.w	801662c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801640c:	429a      	cmp	r2, r3
 801640e:	f300 8119 	bgt.w	8016644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8016412:	4299      	cmp	r1, r3
 8016414:	f280 811d 	bge.w	8016652 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8016418:	2502      	movs	r5, #2
 801641a:	2701      	movs	r7, #1
 801641c:	46a9      	mov	r9, r5
 801641e:	46b8      	mov	r8, r7
 8016420:	f04f 0a00 	mov.w	sl, #0
 8016424:	4621      	mov	r1, r4
 8016426:	a849      	add	r0, sp, #292	; 0x124
 8016428:	f003 ff2a 	bl	801a280 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801642c:	4622      	mov	r2, r4
 801642e:	4653      	mov	r3, sl
 8016430:	a949      	add	r1, sp, #292	; 0x124
 8016432:	f8cd 9000 	str.w	r9, [sp]
 8016436:	a819      	add	r0, sp, #100	; 0x64
 8016438:	f004 f852 	bl	801a4e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801643c:	4622      	mov	r2, r4
 801643e:	4653      	mov	r3, sl
 8016440:	a949      	add	r1, sp, #292	; 0x124
 8016442:	f8cd 8000 	str.w	r8, [sp]
 8016446:	a829      	add	r0, sp, #164	; 0xa4
 8016448:	f004 f84a 	bl	801a4e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801644c:	4643      	mov	r3, r8
 801644e:	4622      	mov	r2, r4
 8016450:	a949      	add	r1, sp, #292	; 0x124
 8016452:	f8cd 9000 	str.w	r9, [sp]
 8016456:	a839      	add	r0, sp, #228	; 0xe4
 8016458:	f004 f842 	bl	801a4e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801645c:	42af      	cmp	r7, r5
 801645e:	bfb5      	itete	lt
 8016460:	2300      	movlt	r3, #0
 8016462:	2301      	movge	r3, #1
 8016464:	930e      	strlt	r3, [sp, #56]	; 0x38
 8016466:	930e      	strge	r3, [sp, #56]	; 0x38
 8016468:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801646a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801646e:	af12      	add	r7, sp, #72	; 0x48
 8016470:	bfb9      	ittee	lt
 8016472:	ad29      	addlt	r5, sp, #164	; 0xa4
 8016474:	ac19      	addlt	r4, sp, #100	; 0x64
 8016476:	ad19      	addge	r5, sp, #100	; 0x64
 8016478:	ac29      	addge	r4, sp, #164	; 0xa4
 801647a:	e887 0003 	stmia.w	r7, {r0, r1}
 801647e:	b928      	cbnz	r0, 801648c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8016480:	4b80      	ldr	r3, [pc, #512]	; (8016684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8016482:	6818      	ldr	r0, [r3, #0]
 8016484:	6803      	ldr	r3, [r0, #0]
 8016486:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016488:	4798      	blx	r3
 801648a:	6038      	str	r0, [r7, #0]
 801648c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801648e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8016492:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016496:	930c      	str	r3, [sp, #48]	; 0x30
 8016498:	990c      	ldr	r1, [sp, #48]	; 0x30
 801649a:	6963      	ldr	r3, [r4, #20]
 801649c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801649e:	440b      	add	r3, r1
 80164a0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80164a4:	4408      	add	r0, r1
 80164a6:	b200      	sxth	r0, r0
 80164a8:	4283      	cmp	r3, r0
 80164aa:	900d      	str	r0, [sp, #52]	; 0x34
 80164ac:	f280 80dd 	bge.w	801666a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80164b0:	428b      	cmp	r3, r1
 80164b2:	da08      	bge.n	80164c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80164b4:	2a00      	cmp	r2, #0
 80164b6:	dd06      	ble.n	80164c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80164b8:	1acb      	subs	r3, r1, r3
 80164ba:	429a      	cmp	r2, r3
 80164bc:	f2c0 80e4 	blt.w	8016688 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80164c0:	2b00      	cmp	r3, #0
 80164c2:	f300 80e2 	bgt.w	801668a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80164c6:	6967      	ldr	r7, [r4, #20]
 80164c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80164ca:	443b      	add	r3, r7
 80164cc:	461f      	mov	r7, r3
 80164ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80164d0:	1bdf      	subs	r7, r3, r7
 80164d2:	4297      	cmp	r7, r2
 80164d4:	bfa8      	it	ge
 80164d6:	4617      	movge	r7, r2
 80164d8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80164dc:	2f00      	cmp	r7, #0
 80164de:	f340 8166 	ble.w	80167ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80164e2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80164e4:	6829      	ldr	r1, [r5, #0]
 80164e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80164ea:	f9bb 3000 	ldrsh.w	r3, [fp]
 80164ee:	6820      	ldr	r0, [r4, #0]
 80164f0:	4411      	add	r1, r2
 80164f2:	4299      	cmp	r1, r3
 80164f4:	dd1a      	ble.n	801652c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80164f6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80164fa:	440b      	add	r3, r1
 80164fc:	4402      	add	r2, r0
 80164fe:	b21b      	sxth	r3, r3
 8016500:	429a      	cmp	r2, r3
 8016502:	dc13      	bgt.n	801652c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8016504:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016506:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016508:	681b      	ldr	r3, [r3, #0]
 801650a:	9206      	str	r2, [sp, #24]
 801650c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801650e:	9205      	str	r2, [sp, #20]
 8016510:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016512:	9500      	str	r5, [sp, #0]
 8016514:	e9cd b203 	strd	fp, r2, [sp, #12]
 8016518:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801651a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801651c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8016520:	a912      	add	r1, sp, #72	; 0x48
 8016522:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8016526:	aa49      	add	r2, sp, #292	; 0x124
 8016528:	4623      	mov	r3, r4
 801652a:	47c8      	blx	r9
 801652c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8016530:	441a      	add	r2, r3
 8016532:	6963      	ldr	r3, [r4, #20]
 8016534:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8016538:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801653c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8016540:	68a1      	ldr	r1, [r4, #8]
 8016542:	ed94 6a08 	vldr	s12, [r4, #32]
 8016546:	6022      	str	r2, [r4, #0]
 8016548:	3301      	adds	r3, #1
 801654a:	6163      	str	r3, [r4, #20]
 801654c:	69a3      	ldr	r3, [r4, #24]
 801654e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8016552:	3b01      	subs	r3, #1
 8016554:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8016558:	61a3      	str	r3, [r4, #24]
 801655a:	6923      	ldr	r3, [r4, #16]
 801655c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8016560:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016564:	edd4 6a07 	vldr	s13, [r4, #28]
 8016568:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801656c:	440b      	add	r3, r1
 801656e:	68e1      	ldr	r1, [r4, #12]
 8016570:	6123      	str	r3, [r4, #16]
 8016572:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016576:	428b      	cmp	r3, r1
 8016578:	edc4 6a07 	vstr	s13, [r4, #28]
 801657c:	db15      	blt.n	80165aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801657e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8016582:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016586:	3201      	adds	r2, #1
 8016588:	edc4 6a07 	vstr	s13, [r4, #28]
 801658c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8016590:	6022      	str	r2, [r4, #0]
 8016592:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016596:	1a5b      	subs	r3, r3, r1
 8016598:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801659c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80165a0:	6123      	str	r3, [r4, #16]
 80165a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80165a6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80165aa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80165ae:	441a      	add	r2, r3
 80165b0:	696b      	ldr	r3, [r5, #20]
 80165b2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80165b6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80165ba:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80165be:	68a9      	ldr	r1, [r5, #8]
 80165c0:	ed95 6a08 	vldr	s12, [r5, #32]
 80165c4:	602a      	str	r2, [r5, #0]
 80165c6:	3301      	adds	r3, #1
 80165c8:	616b      	str	r3, [r5, #20]
 80165ca:	69ab      	ldr	r3, [r5, #24]
 80165cc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80165d0:	3b01      	subs	r3, #1
 80165d2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80165d6:	61ab      	str	r3, [r5, #24]
 80165d8:	692b      	ldr	r3, [r5, #16]
 80165da:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80165de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80165e2:	edd5 6a07 	vldr	s13, [r5, #28]
 80165e6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80165ea:	440b      	add	r3, r1
 80165ec:	68e9      	ldr	r1, [r5, #12]
 80165ee:	612b      	str	r3, [r5, #16]
 80165f0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80165f4:	428b      	cmp	r3, r1
 80165f6:	edc5 6a07 	vstr	s13, [r5, #28]
 80165fa:	db15      	blt.n	8016628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80165fc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8016600:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016604:	3201      	adds	r2, #1
 8016606:	edc5 6a07 	vstr	s13, [r5, #28]
 801660a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801660e:	602a      	str	r2, [r5, #0]
 8016610:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016614:	1a5b      	subs	r3, r3, r1
 8016616:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801661a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801661e:	612b      	str	r3, [r5, #16]
 8016620:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016624:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016628:	3f01      	subs	r7, #1
 801662a:	e757      	b.n	80164dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801662c:	4299      	cmp	r1, r3
 801662e:	dc13      	bgt.n	8016658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8016630:	429a      	cmp	r2, r3
 8016632:	da14      	bge.n	801665e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8016634:	2502      	movs	r5, #2
 8016636:	2703      	movs	r7, #3
 8016638:	46a9      	mov	r9, r5
 801663a:	f04f 0800 	mov.w	r8, #0
 801663e:	f04f 0a01 	mov.w	sl, #1
 8016642:	e6ef      	b.n	8016424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8016644:	2501      	movs	r5, #1
 8016646:	2700      	movs	r7, #0
 8016648:	46a9      	mov	r9, r5
 801664a:	46b8      	mov	r8, r7
 801664c:	f04f 0a02 	mov.w	sl, #2
 8016650:	e6e8      	b.n	8016424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8016652:	2501      	movs	r5, #1
 8016654:	2702      	movs	r7, #2
 8016656:	e6e1      	b.n	801641c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8016658:	2500      	movs	r5, #0
 801665a:	2701      	movs	r7, #1
 801665c:	e7f4      	b.n	8016648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801665e:	2702      	movs	r7, #2
 8016660:	2503      	movs	r5, #3
 8016662:	f04f 0900 	mov.w	r9, #0
 8016666:	46b8      	mov	r8, r7
 8016668:	e7e9      	b.n	801663e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801666a:	4613      	mov	r3, r2
 801666c:	e728      	b.n	80164c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801666e:	bf00      	nop
 8016670:	20013844 	.word	0x20013844
 8016674:	fffd8f01 	.word	0xfffd8f01
 8016678:	00027100 	.word	0x00027100
 801667c:	0004e1ff 	.word	0x0004e1ff
 8016680:	0004e1fe 	.word	0x0004e1fe
 8016684:	2001384c 	.word	0x2001384c
 8016688:	4613      	mov	r3, r2
 801668a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801668c:	9111      	str	r1, [sp, #68]	; 0x44
 801668e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8016692:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8016696:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8016698:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801669c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80166a0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80166a4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80166a8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80166ac:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80166b0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80166b4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80166b8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80166bc:	469e      	mov	lr, r3
 80166be:	469c      	mov	ip, r3
 80166c0:	f04f 0900 	mov.w	r9, #0
 80166c4:	f1bc 0f00 	cmp.w	ip, #0
 80166c8:	d147      	bne.n	801675a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80166ca:	eb03 0c07 	add.w	ip, r3, r7
 80166ce:	1ad7      	subs	r7, r2, r3
 80166d0:	f1b9 0f00 	cmp.w	r9, #0
 80166d4:	d009      	beq.n	80166ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80166d6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80166da:	9029      	str	r0, [sp, #164]	; 0xa4
 80166dc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80166e0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80166e4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80166e8:	912d      	str	r1, [sp, #180]	; 0xb4
 80166ea:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80166ec:	9111      	str	r1, [sp, #68]	; 0x44
 80166ee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80166f2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80166f6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80166fa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80166fe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8016702:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8016706:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801670a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801670e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8016712:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8016716:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801671a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801671e:	f04f 0800 	mov.w	r8, #0
 8016722:	f1be 0f00 	cmp.w	lr, #0
 8016726:	d031      	beq.n	801678c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8016728:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801672a:	4431      	add	r1, r6
 801672c:	4549      	cmp	r1, r9
 801672e:	4450      	add	r0, sl
 8016730:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8016734:	ee37 7a04 	vadd.f32	s14, s14, s8
 8016738:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801673c:	db08      	blt.n	8016750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801673e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8016742:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8016746:	ee37 7a06 	vadd.f32	s14, s14, s12
 801674a:	3001      	adds	r0, #1
 801674c:	eba1 0109 	sub.w	r1, r1, r9
 8016750:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016754:	f04f 0801 	mov.w	r8, #1
 8016758:	e7e3      	b.n	8016722 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801675a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801675c:	4431      	add	r1, r6
 801675e:	4541      	cmp	r1, r8
 8016760:	4450      	add	r0, sl
 8016762:	ee37 7a24 	vadd.f32	s14, s14, s9
 8016766:	ee77 7a84 	vadd.f32	s15, s15, s8
 801676a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801676e:	db08      	blt.n	8016782 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8016770:	ee76 6a85 	vadd.f32	s13, s13, s10
 8016774:	ee37 7a25 	vadd.f32	s14, s14, s11
 8016778:	ee77 7a86 	vadd.f32	s15, s15, s12
 801677c:	3001      	adds	r0, #1
 801677e:	eba1 0108 	sub.w	r1, r1, r8
 8016782:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016786:	f04f 0901 	mov.w	r9, #1
 801678a:	e79b      	b.n	80166c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801678c:	449c      	add	ip, r3
 801678e:	1aff      	subs	r7, r7, r3
 8016790:	f1b8 0f00 	cmp.w	r8, #0
 8016794:	d009      	beq.n	80167aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8016796:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801679a:	9019      	str	r0, [sp, #100]	; 0x64
 801679c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80167a0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80167a4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80167a8:	911d      	str	r1, [sp, #116]	; 0x74
 80167aa:	1ad2      	subs	r2, r2, r3
 80167ac:	e68b      	b.n	80164c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80167ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80167b0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80167b2:	2b00      	cmp	r3, #0
 80167b4:	f000 80d1 	beq.w	801695a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80167b8:	ad19      	add	r5, sp, #100	; 0x64
 80167ba:	ac39      	add	r4, sp, #228	; 0xe4
 80167bc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80167be:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80167c2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80167c6:	930c      	str	r3, [sp, #48]	; 0x30
 80167c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80167ca:	6963      	ldr	r3, [r4, #20]
 80167cc:	440b      	add	r3, r1
 80167ce:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80167d2:	4408      	add	r0, r1
 80167d4:	b200      	sxth	r0, r0
 80167d6:	4283      	cmp	r3, r0
 80167d8:	900d      	str	r0, [sp, #52]	; 0x34
 80167da:	f280 80c1 	bge.w	8016960 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80167de:	428b      	cmp	r3, r1
 80167e0:	da08      	bge.n	80167f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80167e2:	2a00      	cmp	r2, #0
 80167e4:	dd06      	ble.n	80167f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80167e6:	1acb      	subs	r3, r1, r3
 80167e8:	429a      	cmp	r2, r3
 80167ea:	f2c0 80bb 	blt.w	8016964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80167ee:	2b00      	cmp	r3, #0
 80167f0:	f300 80b9 	bgt.w	8016966 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80167f4:	6967      	ldr	r7, [r4, #20]
 80167f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167f8:	443b      	add	r3, r7
 80167fa:	461f      	mov	r7, r3
 80167fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80167fe:	1bdf      	subs	r7, r3, r7
 8016800:	4297      	cmp	r7, r2
 8016802:	bfa8      	it	ge
 8016804:	4617      	movge	r7, r2
 8016806:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801680a:	2f00      	cmp	r7, #0
 801680c:	f340 813c 	ble.w	8016a88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8016810:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8016812:	6829      	ldr	r1, [r5, #0]
 8016814:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016818:	f9bb 3000 	ldrsh.w	r3, [fp]
 801681c:	6820      	ldr	r0, [r4, #0]
 801681e:	4411      	add	r1, r2
 8016820:	4299      	cmp	r1, r3
 8016822:	dd1a      	ble.n	801685a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8016824:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8016828:	440b      	add	r3, r1
 801682a:	4402      	add	r2, r0
 801682c:	b21b      	sxth	r3, r3
 801682e:	429a      	cmp	r2, r3
 8016830:	dc13      	bgt.n	801685a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8016832:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016834:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016836:	681b      	ldr	r3, [r3, #0]
 8016838:	9206      	str	r2, [sp, #24]
 801683a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801683c:	9205      	str	r2, [sp, #20]
 801683e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016840:	9500      	str	r5, [sp, #0]
 8016842:	e9cd b203 	strd	fp, r2, [sp, #12]
 8016846:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8016848:	9809      	ldr	r0, [sp, #36]	; 0x24
 801684a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801684e:	a912      	add	r1, sp, #72	; 0x48
 8016850:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8016854:	aa49      	add	r2, sp, #292	; 0x124
 8016856:	4623      	mov	r3, r4
 8016858:	47c8      	blx	r9
 801685a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801685e:	441a      	add	r2, r3
 8016860:	6963      	ldr	r3, [r4, #20]
 8016862:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8016866:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801686a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801686e:	68a1      	ldr	r1, [r4, #8]
 8016870:	ed94 6a08 	vldr	s12, [r4, #32]
 8016874:	6022      	str	r2, [r4, #0]
 8016876:	3301      	adds	r3, #1
 8016878:	6163      	str	r3, [r4, #20]
 801687a:	69a3      	ldr	r3, [r4, #24]
 801687c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8016880:	3b01      	subs	r3, #1
 8016882:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8016886:	61a3      	str	r3, [r4, #24]
 8016888:	6923      	ldr	r3, [r4, #16]
 801688a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801688e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016892:	edd4 6a07 	vldr	s13, [r4, #28]
 8016896:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801689a:	440b      	add	r3, r1
 801689c:	68e1      	ldr	r1, [r4, #12]
 801689e:	6123      	str	r3, [r4, #16]
 80168a0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80168a4:	428b      	cmp	r3, r1
 80168a6:	edc4 6a07 	vstr	s13, [r4, #28]
 80168aa:	db15      	blt.n	80168d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80168ac:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80168b0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80168b4:	3201      	adds	r2, #1
 80168b6:	edc4 6a07 	vstr	s13, [r4, #28]
 80168ba:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80168be:	6022      	str	r2, [r4, #0]
 80168c0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80168c4:	1a5b      	subs	r3, r3, r1
 80168c6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80168ca:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80168ce:	6123      	str	r3, [r4, #16]
 80168d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80168d4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80168d8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80168dc:	441a      	add	r2, r3
 80168de:	696b      	ldr	r3, [r5, #20]
 80168e0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80168e4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80168e8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80168ec:	68a9      	ldr	r1, [r5, #8]
 80168ee:	ed95 6a08 	vldr	s12, [r5, #32]
 80168f2:	602a      	str	r2, [r5, #0]
 80168f4:	3301      	adds	r3, #1
 80168f6:	616b      	str	r3, [r5, #20]
 80168f8:	69ab      	ldr	r3, [r5, #24]
 80168fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80168fe:	3b01      	subs	r3, #1
 8016900:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8016904:	61ab      	str	r3, [r5, #24]
 8016906:	692b      	ldr	r3, [r5, #16]
 8016908:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801690c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016910:	edd5 6a07 	vldr	s13, [r5, #28]
 8016914:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016918:	440b      	add	r3, r1
 801691a:	68e9      	ldr	r1, [r5, #12]
 801691c:	612b      	str	r3, [r5, #16]
 801691e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016922:	428b      	cmp	r3, r1
 8016924:	edc5 6a07 	vstr	s13, [r5, #28]
 8016928:	db15      	blt.n	8016956 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801692a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801692e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016932:	3201      	adds	r2, #1
 8016934:	edc5 6a07 	vstr	s13, [r5, #28]
 8016938:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801693c:	602a      	str	r2, [r5, #0]
 801693e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016942:	1a5b      	subs	r3, r3, r1
 8016944:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8016948:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801694c:	612b      	str	r3, [r5, #16]
 801694e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016952:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8016956:	3f01      	subs	r7, #1
 8016958:	e757      	b.n	801680a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801695a:	ad39      	add	r5, sp, #228	; 0xe4
 801695c:	ac19      	add	r4, sp, #100	; 0x64
 801695e:	e72d      	b.n	80167bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8016960:	4613      	mov	r3, r2
 8016962:	e744      	b.n	80167ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8016964:	4613      	mov	r3, r2
 8016966:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801696a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801696c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8016970:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8016974:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8016978:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801697c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8016980:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8016984:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8016988:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801698a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801698e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8016992:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8016996:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801699a:	960e      	str	r6, [sp, #56]	; 0x38
 801699c:	469e      	mov	lr, r3
 801699e:	461f      	mov	r7, r3
 80169a0:	f04f 0900 	mov.w	r9, #0
 80169a4:	2f00      	cmp	r7, #0
 80169a6:	d146      	bne.n	8016a36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80169a8:	449c      	add	ip, r3
 80169aa:	1ad7      	subs	r7, r2, r3
 80169ac:	f1b9 0f00 	cmp.w	r9, #0
 80169b0:	d009      	beq.n	80169c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80169b2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80169b6:	9039      	str	r0, [sp, #228]	; 0xe4
 80169b8:	913d      	str	r1, [sp, #244]	; 0xf4
 80169ba:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80169be:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80169c2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80169c6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80169c8:	910e      	str	r1, [sp, #56]	; 0x38
 80169ca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80169ce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80169d2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80169d6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80169da:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80169de:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80169e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80169e6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80169ea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80169ee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80169f2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80169f6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80169fa:	f04f 0800 	mov.w	r8, #0
 80169fe:	f1be 0f00 	cmp.w	lr, #0
 8016a02:	d030      	beq.n	8016a66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8016a04:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016a06:	4431      	add	r1, r6
 8016a08:	4549      	cmp	r1, r9
 8016a0a:	4450      	add	r0, sl
 8016a0c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8016a10:	ee37 7a04 	vadd.f32	s14, s14, s8
 8016a14:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8016a18:	db08      	blt.n	8016a2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8016a1a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8016a1e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8016a22:	ee37 7a06 	vadd.f32	s14, s14, s12
 8016a26:	3001      	adds	r0, #1
 8016a28:	eba1 0109 	sub.w	r1, r1, r9
 8016a2c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016a30:	f04f 0801 	mov.w	r8, #1
 8016a34:	e7e3      	b.n	80169fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8016a36:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016a38:	4431      	add	r1, r6
 8016a3a:	4541      	cmp	r1, r8
 8016a3c:	4450      	add	r0, sl
 8016a3e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8016a42:	ee77 7a84 	vadd.f32	s15, s15, s8
 8016a46:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8016a4a:	db08      	blt.n	8016a5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8016a4c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8016a50:	ee37 7a25 	vadd.f32	s14, s14, s11
 8016a54:	ee77 7a86 	vadd.f32	s15, s15, s12
 8016a58:	3001      	adds	r0, #1
 8016a5a:	eba1 0108 	sub.w	r1, r1, r8
 8016a5e:	3f01      	subs	r7, #1
 8016a60:	f04f 0901 	mov.w	r9, #1
 8016a64:	e79e      	b.n	80169a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8016a66:	449c      	add	ip, r3
 8016a68:	1aff      	subs	r7, r7, r3
 8016a6a:	f1b8 0f00 	cmp.w	r8, #0
 8016a6e:	d009      	beq.n	8016a84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8016a70:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8016a74:	9019      	str	r0, [sp, #100]	; 0x64
 8016a76:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8016a7a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8016a7e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8016a82:	911d      	str	r1, [sp, #116]	; 0x74
 8016a84:	1ad2      	subs	r2, r2, r3
 8016a86:	e6b5      	b.n	80167f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8016a88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a8a:	681b      	ldr	r3, [r3, #0]
 8016a8c:	b923      	cbnz	r3, 8016a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016a8e:	4b04      	ldr	r3, [pc, #16]	; (8016aa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8016a90:	6818      	ldr	r0, [r3, #0]
 8016a92:	6803      	ldr	r3, [r0, #0]
 8016a94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016a96:	4798      	blx	r3
 8016a98:	b05b      	add	sp, #364	; 0x16c
 8016a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a9e:	bf00      	nop
 8016aa0:	2001384c 	.word	0x2001384c

08016aa4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8016aa4:	b570      	push	{r4, r5, r6, lr}
 8016aa6:	4604      	mov	r4, r0
 8016aa8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8016aac:	9805      	ldr	r0, [sp, #20]
 8016aae:	6061      	str	r1, [r4, #4]
 8016ab0:	2500      	movs	r5, #0
 8016ab2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8016ab6:	8263      	strh	r3, [r4, #18]
 8016ab8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016abc:	8025      	strh	r5, [r4, #0]
 8016abe:	7221      	strb	r1, [r4, #8]
 8016ac0:	7266      	strb	r6, [r4, #9]
 8016ac2:	60e0      	str	r0, [r4, #12]
 8016ac4:	8222      	strh	r2, [r4, #16]
 8016ac6:	82a3      	strh	r3, [r4, #20]
 8016ac8:	82e5      	strh	r5, [r4, #22]
 8016aca:	8325      	strh	r5, [r4, #24]
 8016acc:	8365      	strh	r5, [r4, #26]
 8016ace:	83a5      	strh	r5, [r4, #28]
 8016ad0:	83e5      	strh	r5, [r4, #30]
 8016ad2:	8425      	strh	r5, [r4, #32]
 8016ad4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8016ad8:	b32e      	cbz	r6, 8016b26 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016ada:	6803      	ldr	r3, [r0, #0]
 8016adc:	695b      	ldr	r3, [r3, #20]
 8016ade:	4798      	blx	r3
 8016ae0:	4606      	mov	r6, r0
 8016ae2:	b300      	cbz	r0, 8016b26 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016ae4:	68e0      	ldr	r0, [r4, #12]
 8016ae6:	6803      	ldr	r3, [r0, #0]
 8016ae8:	4631      	mov	r1, r6
 8016aea:	68db      	ldr	r3, [r3, #12]
 8016aec:	4798      	blx	r3
 8016aee:	4605      	mov	r5, r0
 8016af0:	b1c8      	cbz	r0, 8016b26 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016af2:	7b43      	ldrb	r3, [r0, #13]
 8016af4:	7a82      	ldrb	r2, [r0, #10]
 8016af6:	005b      	lsls	r3, r3, #1
 8016af8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016afc:	4313      	orrs	r3, r2
 8016afe:	8423      	strh	r3, [r4, #32]
 8016b00:	7a63      	ldrb	r3, [r4, #9]
 8016b02:	2b06      	cmp	r3, #6
 8016b04:	d10f      	bne.n	8016b26 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016b06:	68e0      	ldr	r0, [r4, #12]
 8016b08:	6803      	ldr	r3, [r0, #0]
 8016b0a:	462a      	mov	r2, r5
 8016b0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016b0e:	4631      	mov	r1, r6
 8016b10:	4798      	blx	r3
 8016b12:	7b6b      	ldrb	r3, [r5, #13]
 8016b14:	005b      	lsls	r3, r3, #1
 8016b16:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b1a:	7aab      	ldrb	r3, [r5, #10]
 8016b1c:	4313      	orrs	r3, r2
 8016b1e:	4418      	add	r0, r3
 8016b20:	8c23      	ldrh	r3, [r4, #32]
 8016b22:	4418      	add	r0, r3
 8016b24:	8420      	strh	r0, [r4, #32]
 8016b26:	4620      	mov	r0, r4
 8016b28:	bd70      	pop	{r4, r5, r6, pc}

08016b2a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8016b2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b2e:	2400      	movs	r4, #0
 8016b30:	b085      	sub	sp, #20
 8016b32:	4681      	mov	r9, r0
 8016b34:	4688      	mov	r8, r1
 8016b36:	4692      	mov	sl, r2
 8016b38:	469b      	mov	fp, r3
 8016b3a:	4627      	mov	r7, r4
 8016b3c:	4625      	mov	r5, r4
 8016b3e:	4626      	mov	r6, r4
 8016b40:	4554      	cmp	r4, sl
 8016b42:	da2a      	bge.n	8016b9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8016b44:	2300      	movs	r3, #0
 8016b46:	9303      	str	r3, [sp, #12]
 8016b48:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016b4c:	429d      	cmp	r5, r3
 8016b4e:	d004      	beq.n	8016b5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8016b50:	f242 030b 	movw	r3, #8203	; 0x200b
 8016b54:	429d      	cmp	r5, r3
 8016b56:	bf18      	it	ne
 8016b58:	462f      	movne	r7, r5
 8016b5a:	ab03      	add	r3, sp, #12
 8016b5c:	4642      	mov	r2, r8
 8016b5e:	4659      	mov	r1, fp
 8016b60:	4648      	mov	r0, r9
 8016b62:	f003 f9a3 	bl	8019eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016b66:	4605      	mov	r5, r0
 8016b68:	b1b8      	cbz	r0, 8016b9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8016b6a:	280a      	cmp	r0, #10
 8016b6c:	d015      	beq.n	8016b9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8016b6e:	9a03      	ldr	r2, [sp, #12]
 8016b70:	b18a      	cbz	r2, 8016b96 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8016b72:	7b50      	ldrb	r0, [r2, #13]
 8016b74:	7a93      	ldrb	r3, [r2, #10]
 8016b76:	8895      	ldrh	r5, [r2, #4]
 8016b78:	0040      	lsls	r0, r0, #1
 8016b7a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016b7e:	4303      	orrs	r3, r0
 8016b80:	9301      	str	r3, [sp, #4]
 8016b82:	f8d8 3000 	ldr.w	r3, [r8]
 8016b86:	4639      	mov	r1, r7
 8016b88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016b8a:	4640      	mov	r0, r8
 8016b8c:	4798      	blx	r3
 8016b8e:	9b01      	ldr	r3, [sp, #4]
 8016b90:	4418      	add	r0, r3
 8016b92:	4406      	add	r6, r0
 8016b94:	b2b6      	uxth	r6, r6
 8016b96:	3401      	adds	r4, #1
 8016b98:	e7d2      	b.n	8016b40 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8016b9a:	4630      	mov	r0, r6
 8016b9c:	b005      	add	sp, #20
 8016b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016ba2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8016ba2:	2a02      	cmp	r2, #2
 8016ba4:	b530      	push	{r4, r5, lr}
 8016ba6:	d011      	beq.n	8016bcc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8016ba8:	2a03      	cmp	r2, #3
 8016baa:	d01c      	beq.n	8016be6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8016bac:	2a01      	cmp	r2, #1
 8016bae:	d10c      	bne.n	8016bca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016bb0:	888b      	ldrh	r3, [r1, #4]
 8016bb2:	8801      	ldrh	r1, [r0, #0]
 8016bb4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8016bb8:	8844      	ldrh	r4, [r0, #2]
 8016bba:	8004      	strh	r4, [r0, #0]
 8016bbc:	1a5b      	subs	r3, r3, r1
 8016bbe:	1a9b      	subs	r3, r3, r2
 8016bc0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016bc4:	8043      	strh	r3, [r0, #2]
 8016bc6:	8081      	strh	r1, [r0, #4]
 8016bc8:	80c2      	strh	r2, [r0, #6]
 8016bca:	bd30      	pop	{r4, r5, pc}
 8016bcc:	88cb      	ldrh	r3, [r1, #6]
 8016bce:	8842      	ldrh	r2, [r0, #2]
 8016bd0:	1a9b      	subs	r3, r3, r2
 8016bd2:	88c2      	ldrh	r2, [r0, #6]
 8016bd4:	1a9b      	subs	r3, r3, r2
 8016bd6:	888a      	ldrh	r2, [r1, #4]
 8016bd8:	8801      	ldrh	r1, [r0, #0]
 8016bda:	8043      	strh	r3, [r0, #2]
 8016bdc:	1a52      	subs	r2, r2, r1
 8016bde:	8881      	ldrh	r1, [r0, #4]
 8016be0:	1a52      	subs	r2, r2, r1
 8016be2:	8002      	strh	r2, [r0, #0]
 8016be4:	e7f1      	b.n	8016bca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016be6:	88cb      	ldrh	r3, [r1, #6]
 8016be8:	8841      	ldrh	r1, [r0, #2]
 8016bea:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8016bee:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016bf2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8016bf6:	8045      	strh	r5, [r0, #2]
 8016bf8:	1a5b      	subs	r3, r3, r1
 8016bfa:	1a9b      	subs	r3, r3, r2
 8016bfc:	8003      	strh	r3, [r0, #0]
 8016bfe:	8082      	strh	r2, [r0, #4]
 8016c00:	80c4      	strh	r4, [r0, #6]
 8016c02:	e7e2      	b.n	8016bca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08016c04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8016c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c08:	b09f      	sub	sp, #124	; 0x7c
 8016c0a:	9116      	str	r1, [sp, #88]	; 0x58
 8016c0c:	9317      	str	r3, [sp, #92]	; 0x5c
 8016c0e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016c10:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016c12:	8809      	ldrh	r1, [r1, #0]
 8016c14:	889b      	ldrh	r3, [r3, #4]
 8016c16:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8016c1a:	9212      	str	r2, [sp, #72]	; 0x48
 8016c1c:	440b      	add	r3, r1
 8016c1e:	b21b      	sxth	r3, r3
 8016c20:	9310      	str	r3, [sp, #64]	; 0x40
 8016c22:	f8d8 3000 	ldr.w	r3, [r8]
 8016c26:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8016c2a:	7b19      	ldrb	r1, [r3, #12]
 8016c2c:	7adb      	ldrb	r3, [r3, #11]
 8016c2e:	9011      	str	r0, [sp, #68]	; 0x44
 8016c30:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8016c34:	9114      	str	r1, [sp, #80]	; 0x50
 8016c36:	9315      	str	r3, [sp, #84]	; 0x54
 8016c38:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8016c3c:	2a00      	cmp	r2, #0
 8016c3e:	d06a      	beq.n	8016d16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8016c40:	f898 3010 	ldrb.w	r3, [r8, #16]
 8016c44:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016c46:	2b06      	cmp	r3, #6
 8016c48:	bf14      	ite	ne
 8016c4a:	2301      	movne	r3, #1
 8016c4c:	2302      	moveq	r3, #2
 8016c4e:	4413      	add	r3, r2
 8016c50:	f04f 0900 	mov.w	r9, #0
 8016c54:	930f      	str	r3, [sp, #60]	; 0x3c
 8016c56:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8016c5a:	464c      	mov	r4, r9
 8016c5c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8016c60:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8016c64:	4293      	cmp	r3, r2
 8016c66:	f280 808f 	bge.w	8016d88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8016c6a:	2300      	movs	r3, #0
 8016c6c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8016c70:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8016c74:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016c78:	429c      	cmp	r4, r3
 8016c7a:	d006      	beq.n	8016c8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8016c7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016c7e:	f242 020b 	movw	r2, #8203	; 0x200b
 8016c82:	4294      	cmp	r4, r2
 8016c84:	bf18      	it	ne
 8016c86:	4623      	movne	r3, r4
 8016c88:	930d      	str	r3, [sp, #52]	; 0x34
 8016c8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016c8c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8016c8e:	f8d8 2000 	ldr.w	r2, [r8]
 8016c92:	428b      	cmp	r3, r1
 8016c94:	db41      	blt.n	8016d1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8016c96:	6813      	ldr	r3, [r2, #0]
 8016c98:	4610      	mov	r0, r2
 8016c9a:	695b      	ldr	r3, [r3, #20]
 8016c9c:	4798      	blx	r3
 8016c9e:	4604      	mov	r4, r0
 8016ca0:	f8d8 0000 	ldr.w	r0, [r8]
 8016ca4:	6803      	ldr	r3, [r0, #0]
 8016ca6:	aa1d      	add	r2, sp, #116	; 0x74
 8016ca8:	689d      	ldr	r5, [r3, #8]
 8016caa:	4621      	mov	r1, r4
 8016cac:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8016cb0:	47a8      	blx	r5
 8016cb2:	901c      	str	r0, [sp, #112]	; 0x70
 8016cb4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016cb8:	429c      	cmp	r4, r3
 8016cba:	f000 80eb 	beq.w	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016cbe:	f242 030b 	movw	r3, #8203	; 0x200b
 8016cc2:	429c      	cmp	r4, r3
 8016cc4:	f000 80e6 	beq.w	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016cc8:	2c00      	cmp	r4, #0
 8016cca:	f000 80f8 	beq.w	8016ebe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8016cce:	2c0a      	cmp	r4, #10
 8016cd0:	d060      	beq.n	8016d94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8016cd2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8016cd4:	b36a      	cbz	r2, 8016d32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8016cd6:	8894      	ldrh	r4, [r2, #4]
 8016cd8:	f1bb 0f00 	cmp.w	fp, #0
 8016cdc:	d03b      	beq.n	8016d56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8016cde:	f892 900d 	ldrb.w	r9, [r2, #13]
 8016ce2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016ce6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8016cea:	f892 900a 	ldrb.w	r9, [r2, #10]
 8016cee:	f1bb 0f01 	cmp.w	fp, #1
 8016cf2:	ea49 0903 	orr.w	r9, r9, r3
 8016cf6:	d134      	bne.n	8016d62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8016cf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016cfa:	eba6 0609 	sub.w	r6, r6, r9
 8016cfe:	2b00      	cmp	r3, #0
 8016d00:	d14f      	bne.n	8016da2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8016d02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d04:	eb09 0306 	add.w	r3, r9, r6
 8016d08:	4413      	add	r3, r2
 8016d0a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016d0c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016d10:	4293      	cmp	r3, r2
 8016d12:	da51      	bge.n	8016db8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8016d14:	e038      	b.n	8016d88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8016d16:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016d18:	e79a      	b.n	8016c50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8016d1a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8016d1e:	9301      	str	r3, [sp, #4]
 8016d20:	ab1d      	add	r3, sp, #116	; 0x74
 8016d22:	9300      	str	r3, [sp, #0]
 8016d24:	4659      	mov	r1, fp
 8016d26:	ab1c      	add	r3, sp, #112	; 0x70
 8016d28:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8016d2a:	f003 f908 	bl	8019f3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8016d2e:	4604      	mov	r4, r0
 8016d30:	e7c0      	b.n	8016cb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8016d32:	f8d8 0000 	ldr.w	r0, [r8]
 8016d36:	6803      	ldr	r3, [r0, #0]
 8016d38:	691b      	ldr	r3, [r3, #16]
 8016d3a:	4798      	blx	r3
 8016d3c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016d40:	4298      	cmp	r0, r3
 8016d42:	f000 80a7 	beq.w	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016d46:	f242 030b 	movw	r3, #8203	; 0x200b
 8016d4a:	4298      	cmp	r0, r3
 8016d4c:	f000 80a2 	beq.w	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016d50:	f1bb 0f00 	cmp.w	fp, #0
 8016d54:	d100      	bne.n	8016d58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8016d56:	444e      	add	r6, r9
 8016d58:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8016d5a:	2a00      	cmp	r2, #0
 8016d5c:	d1bf      	bne.n	8016cde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8016d5e:	4691      	mov	r9, r2
 8016d60:	e098      	b.n	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016d62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016d64:	2b00      	cmp	r3, #0
 8016d66:	f000 80ac 	beq.w	8016ec2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8016d6a:	f1bb 0f00 	cmp.w	fp, #0
 8016d6e:	d118      	bne.n	8016da2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8016d70:	f8d8 0000 	ldr.w	r0, [r8]
 8016d74:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016d76:	6803      	ldr	r3, [r0, #0]
 8016d78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016d7a:	4798      	blx	r3
 8016d7c:	4406      	add	r6, r0
 8016d7e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016d80:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016d82:	1af3      	subs	r3, r6, r3
 8016d84:	4293      	cmp	r3, r2
 8016d86:	dd17      	ble.n	8016db8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8016d88:	2c00      	cmp	r4, #0
 8016d8a:	f000 8098 	beq.w	8016ebe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8016d8e:	2c0a      	cmp	r4, #10
 8016d90:	f040 8086 	bne.w	8016ea0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8016d94:	240a      	movs	r4, #10
 8016d96:	fab4 f084 	clz	r0, r4
 8016d9a:	0940      	lsrs	r0, r0, #5
 8016d9c:	b01f      	add	sp, #124	; 0x7c
 8016d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016da2:	f8d8 0000 	ldr.w	r0, [r8]
 8016da6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016da8:	6803      	ldr	r3, [r0, #0]
 8016daa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016dac:	4798      	blx	r3
 8016dae:	f1bb 0f01 	cmp.w	fp, #1
 8016db2:	eba6 0600 	sub.w	r6, r6, r0
 8016db6:	d0a4      	beq.n	8016d02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8016db8:	981c      	ldr	r0, [sp, #112]	; 0x70
 8016dba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016dbc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8016dc0:	f9b3 7000 	ldrsh.w	r7, [r3]
 8016dc4:	7b43      	ldrb	r3, [r0, #13]
 8016dc6:	015b      	lsls	r3, r3, #5
 8016dc8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016dcc:	7983      	ldrb	r3, [r0, #6]
 8016dce:	4431      	add	r1, r6
 8016dd0:	4313      	orrs	r3, r2
 8016dd2:	440b      	add	r3, r1
 8016dd4:	42bb      	cmp	r3, r7
 8016dd6:	db5d      	blt.n	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016dd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016dda:	4299      	cmp	r1, r3
 8016ddc:	da5a      	bge.n	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016dde:	f8d8 0000 	ldr.w	r0, [r8]
 8016de2:	6803      	ldr	r3, [r0, #0]
 8016de4:	42b7      	cmp	r7, r6
 8016de6:	bfc8      	it	gt
 8016de8:	1bbf      	subgt	r7, r7, r6
 8016dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016dec:	bfcc      	ite	gt
 8016dee:	b2bf      	uxthgt	r7, r7
 8016df0:	2700      	movle	r7, #0
 8016df2:	4798      	blx	r3
 8016df4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016df6:	7b5a      	ldrb	r2, [r3, #13]
 8016df8:	00d1      	lsls	r1, r2, #3
 8016dfa:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8016dfe:	7a19      	ldrb	r1, [r3, #8]
 8016e00:	4329      	orrs	r1, r5
 8016e02:	0655      	lsls	r5, r2, #25
 8016e04:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8016e06:	bf44      	itt	mi
 8016e08:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8016e0c:	b209      	sxthmi	r1, r1
 8016e0e:	1945      	adds	r5, r0, r5
 8016e10:	1a6d      	subs	r5, r5, r1
 8016e12:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016e14:	b2ad      	uxth	r5, r5
 8016e16:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8016e1a:	fa0f fa85 	sxth.w	sl, r5
 8016e1e:	4551      	cmp	r1, sl
 8016e20:	dd3c      	ble.n	8016e9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8016e22:	0112      	lsls	r2, r2, #4
 8016e24:	79d8      	ldrb	r0, [r3, #7]
 8016e26:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016e2a:	4302      	orrs	r2, r0
 8016e2c:	4492      	add	sl, r2
 8016e2e:	4551      	cmp	r1, sl
 8016e30:	dc30      	bgt.n	8016e94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016e32:	1b4d      	subs	r5, r1, r5
 8016e34:	b22d      	sxth	r5, r5
 8016e36:	468a      	mov	sl, r1
 8016e38:	9319      	str	r3, [sp, #100]	; 0x64
 8016e3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016e3c:	f8d8 0000 	ldr.w	r0, [r8]
 8016e40:	681a      	ldr	r2, [r3, #0]
 8016e42:	6801      	ldr	r1, [r0, #0]
 8016e44:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8016e46:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8016e48:	9313      	str	r3, [sp, #76]	; 0x4c
 8016e4a:	9218      	str	r2, [sp, #96]	; 0x60
 8016e4c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8016e4e:	4788      	blx	r1
 8016e50:	f898 1006 	ldrb.w	r1, [r8, #6]
 8016e54:	910b      	str	r1, [sp, #44]	; 0x2c
 8016e56:	f898 100e 	ldrb.w	r1, [r8, #14]
 8016e5a:	910a      	str	r1, [sp, #40]	; 0x28
 8016e5c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8016e60:	9109      	str	r1, [sp, #36]	; 0x24
 8016e62:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8016e66:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016e68:	9305      	str	r3, [sp, #20]
 8016e6a:	b2ad      	uxth	r5, r5
 8016e6c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8016e70:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8016e74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016e76:	9304      	str	r3, [sp, #16]
 8016e78:	4437      	add	r7, r6
 8016e7a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016e7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016e7e:	9206      	str	r2, [sp, #24]
 8016e80:	b23f      	sxth	r7, r7
 8016e82:	f8cd a004 	str.w	sl, [sp, #4]
 8016e86:	9700      	str	r7, [sp, #0]
 8016e88:	681a      	ldr	r2, [r3, #0]
 8016e8a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016e8c:	685b      	ldr	r3, [r3, #4]
 8016e8e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016e90:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016e92:	47a8      	blx	r5
 8016e94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016e96:	3301      	adds	r3, #1
 8016e98:	930e      	str	r3, [sp, #56]	; 0x38
 8016e9a:	e6e1      	b.n	8016c60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8016e9c:	2500      	movs	r5, #0
 8016e9e:	e7cb      	b.n	8016e38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8016ea0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016ea2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016ea4:	3501      	adds	r5, #1
 8016ea6:	429d      	cmp	r5, r3
 8016ea8:	f6bf af75 	bge.w	8016d96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8016eac:	4659      	mov	r1, fp
 8016eae:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8016eb0:	f7f2 fb88 	bl	80095c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016eb4:	4604      	mov	r4, r0
 8016eb6:	b110      	cbz	r0, 8016ebe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8016eb8:	280a      	cmp	r0, #10
 8016eba:	d1f2      	bne.n	8016ea2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8016ebc:	e76a      	b.n	8016d94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8016ebe:	2400      	movs	r4, #0
 8016ec0:	e769      	b.n	8016d96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8016ec2:	f1bb 0f00 	cmp.w	fp, #0
 8016ec6:	f43f af5a 	beq.w	8016d7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8016eca:	e775      	b.n	8016db8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08016ecc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8016ecc:	b530      	push	{r4, r5, lr}
 8016ece:	8ac4      	ldrh	r4, [r0, #22]
 8016ed0:	8b45      	ldrh	r5, [r0, #26]
 8016ed2:	8343      	strh	r3, [r0, #26]
 8016ed4:	442c      	add	r4, r5
 8016ed6:	1ae4      	subs	r4, r4, r3
 8016ed8:	82c4      	strh	r4, [r0, #22]
 8016eda:	8b83      	ldrh	r3, [r0, #28]
 8016edc:	8b04      	ldrh	r4, [r0, #24]
 8016ede:	4422      	add	r2, r4
 8016ee0:	440c      	add	r4, r1
 8016ee2:	1a59      	subs	r1, r3, r1
 8016ee4:	83c2      	strh	r2, [r0, #30]
 8016ee6:	8304      	strh	r4, [r0, #24]
 8016ee8:	8381      	strh	r1, [r0, #28]
 8016eea:	bd30      	pop	{r4, r5, pc}

08016eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8016eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ef0:	4604      	mov	r4, r0
 8016ef2:	8a47      	ldrh	r7, [r0, #18]
 8016ef4:	68c0      	ldr	r0, [r0, #12]
 8016ef6:	6803      	ldr	r3, [r0, #0]
 8016ef8:	b085      	sub	sp, #20
 8016efa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016efc:	4798      	blx	r3
 8016efe:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8016f02:	7a63      	ldrb	r3, [r4, #9]
 8016f04:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8016f08:	42b7      	cmp	r7, r6
 8016f0a:	f103 33ff 	add.w	r3, r3, #4294967295
 8016f0e:	bfac      	ite	ge
 8016f10:	f04f 0900 	movge.w	r9, #0
 8016f14:	f04f 0901 	movlt.w	r9, #1
 8016f18:	2b05      	cmp	r3, #5
 8016f1a:	d804      	bhi.n	8016f26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8016f1c:	e8df f003 	tbb	[pc, r3]
 8016f20:	470e0854 	.word	0x470e0854
 8016f24:	4c4c      	.short	0x4c4c
 8016f26:	2500      	movs	r5, #0
 8016f28:	46a9      	mov	r9, r5
 8016f2a:	462e      	mov	r6, r5
 8016f2c:	462f      	mov	r7, r5
 8016f2e:	e00d      	b.n	8016f4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016f30:	42b7      	cmp	r7, r6
 8016f32:	bfb4      	ite	lt
 8016f34:	2600      	movlt	r6, #0
 8016f36:	2601      	movge	r6, #1
 8016f38:	2500      	movs	r5, #0
 8016f3a:	e7f7      	b.n	8016f2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8016f3c:	42b7      	cmp	r7, r6
 8016f3e:	464d      	mov	r5, r9
 8016f40:	f04f 0900 	mov.w	r9, #0
 8016f44:	bfb4      	ite	lt
 8016f46:	2600      	movlt	r6, #0
 8016f48:	2601      	movge	r6, #1
 8016f4a:	464f      	mov	r7, r9
 8016f4c:	f04f 0800 	mov.w	r8, #0
 8016f50:	f8a4 8016 	strh.w	r8, [r4, #22]
 8016f54:	f8a4 8018 	strh.w	r8, [r4, #24]
 8016f58:	f8cd 8004 	str.w	r8, [sp, #4]
 8016f5c:	2300      	movs	r3, #0
 8016f5e:	9303      	str	r3, [sp, #12]
 8016f60:	8823      	ldrh	r3, [r4, #0]
 8016f62:	2b20      	cmp	r3, #32
 8016f64:	d034      	beq.n	8016fd0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8016f66:	f242 010b 	movw	r1, #8203	; 0x200b
 8016f6a:	1a5a      	subs	r2, r3, r1
 8016f6c:	f1d2 0a00 	rsbs	sl, r2, #0
 8016f70:	eb4a 0a02 	adc.w	sl, sl, r2
 8016f74:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016f78:	4293      	cmp	r3, r2
 8016f7a:	d009      	beq.n	8016f90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016f7c:	428b      	cmp	r3, r1
 8016f7e:	9a01      	ldr	r2, [sp, #4]
 8016f80:	bf18      	it	ne
 8016f82:	461a      	movne	r2, r3
 8016f84:	9201      	str	r2, [sp, #4]
 8016f86:	bf0c      	ite	eq
 8016f88:	f04f 0a01 	moveq.w	sl, #1
 8016f8c:	f04f 0a00 	movne.w	sl, #0
 8016f90:	ab03      	add	r3, sp, #12
 8016f92:	68e2      	ldr	r2, [r4, #12]
 8016f94:	7a21      	ldrb	r1, [r4, #8]
 8016f96:	6860      	ldr	r0, [r4, #4]
 8016f98:	f002 ff88 	bl	8019eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016f9c:	8020      	strh	r0, [r4, #0]
 8016f9e:	b9d8      	cbnz	r0, 8016fd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8016fa0:	8ba2      	ldrh	r2, [r4, #28]
 8016fa2:	2300      	movs	r3, #0
 8016fa4:	4611      	mov	r1, r2
 8016fa6:	4620      	mov	r0, r4
 8016fa8:	f7ff ff90 	bl	8016ecc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016fac:	e06e      	b.n	801708c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8016fae:	2500      	movs	r5, #0
 8016fb0:	46a9      	mov	r9, r5
 8016fb2:	462e      	mov	r6, r5
 8016fb4:	2701      	movs	r7, #1
 8016fb6:	e7c9      	b.n	8016f4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016fb8:	42b7      	cmp	r7, r6
 8016fba:	f04f 0500 	mov.w	r5, #0
 8016fbe:	bfb4      	ite	lt
 8016fc0:	2700      	movlt	r7, #0
 8016fc2:	2701      	movge	r7, #1
 8016fc4:	462e      	mov	r6, r5
 8016fc6:	e7c1      	b.n	8016f4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016fc8:	2500      	movs	r5, #0
 8016fca:	46a9      	mov	r9, r5
 8016fcc:	2601      	movs	r6, #1
 8016fce:	e7ad      	b.n	8016f2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8016fd0:	9301      	str	r3, [sp, #4]
 8016fd2:	f04f 0a01 	mov.w	sl, #1
 8016fd6:	e7db      	b.n	8016f90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016fd8:	8b63      	ldrh	r3, [r4, #26]
 8016fda:	280a      	cmp	r0, #10
 8016fdc:	f103 0301 	add.w	r3, r3, #1
 8016fe0:	8363      	strh	r3, [r4, #26]
 8016fe2:	d0dd      	beq.n	8016fa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8016fe4:	9a03      	ldr	r2, [sp, #12]
 8016fe6:	bb62      	cbnz	r2, 8017042 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8016fe8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016fec:	4298      	cmp	r0, r3
 8016fee:	d003      	beq.n	8016ff8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8016ff0:	f242 030b 	movw	r3, #8203	; 0x200b
 8016ff4:	4298      	cmp	r0, r3
 8016ff6:	d1b1      	bne.n	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016ff8:	8823      	ldrh	r3, [r4, #0]
 8016ffa:	8ba1      	ldrh	r1, [r4, #28]
 8016ffc:	2b20      	cmp	r3, #32
 8016ffe:	d003      	beq.n	8017008 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8017000:	f242 000b 	movw	r0, #8203	; 0x200b
 8017004:	4283      	cmp	r3, r0
 8017006:	d131      	bne.n	801706c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8017008:	f1ba 0f00 	cmp.w	sl, #0
 801700c:	bf0a      	itet	eq
 801700e:	4688      	moveq	r8, r1
 8017010:	4650      	movne	r0, sl
 8017012:	2001      	moveq	r0, #1
 8017014:	440a      	add	r2, r1
 8017016:	8b23      	ldrh	r3, [r4, #24]
 8017018:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801701c:	b292      	uxth	r2, r2
 801701e:	83a2      	strh	r2, [r4, #28]
 8017020:	4413      	add	r3, r2
 8017022:	f1b9 0f00 	cmp.w	r9, #0
 8017026:	d102      	bne.n	801702e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8017028:	2d00      	cmp	r5, #0
 801702a:	d042      	beq.n	80170b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801702c:	b300      	cbz	r0, 8017070 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801702e:	8c21      	ldrh	r1, [r4, #32]
 8017030:	4419      	add	r1, r3
 8017032:	458c      	cmp	ip, r1
 8017034:	da37      	bge.n	80170a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017036:	8ae1      	ldrh	r1, [r4, #22]
 8017038:	2900      	cmp	r1, #0
 801703a:	d034      	beq.n	80170a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801703c:	4563      	cmp	r3, ip
 801703e:	dd8d      	ble.n	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017040:	e01d      	b.n	801707e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8017042:	8893      	ldrh	r3, [r2, #4]
 8017044:	8023      	strh	r3, [r4, #0]
 8017046:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801704a:	9901      	ldr	r1, [sp, #4]
 801704c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8017050:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8017054:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8017058:	ea4b 0b00 	orr.w	fp, fp, r0
 801705c:	68e0      	ldr	r0, [r4, #12]
 801705e:	6803      	ldr	r3, [r0, #0]
 8017060:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017062:	4798      	blx	r3
 8017064:	eb0b 0200 	add.w	r2, fp, r0
 8017068:	b292      	uxth	r2, r2
 801706a:	e7c5      	b.n	8016ff8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801706c:	2000      	movs	r0, #0
 801706e:	e7d1      	b.n	8017014 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8017070:	4563      	cmp	r3, ip
 8017072:	f77f af73 	ble.w	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017076:	8ae3      	ldrh	r3, [r4, #22]
 8017078:	2b00      	cmp	r3, #0
 801707a:	f43f af6f 	beq.w	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801707e:	2301      	movs	r3, #1
 8017080:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8017084:	8c22      	ldrh	r2, [r4, #32]
 8017086:	8be3      	ldrh	r3, [r4, #30]
 8017088:	4413      	add	r3, r2
 801708a:	83e3      	strh	r3, [r4, #30]
 801708c:	68e0      	ldr	r0, [r4, #12]
 801708e:	6803      	ldr	r3, [r0, #0]
 8017090:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017092:	4798      	blx	r3
 8017094:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8017098:	4418      	add	r0, r3
 801709a:	8a63      	ldrh	r3, [r4, #18]
 801709c:	1a18      	subs	r0, r3, r0
 801709e:	8260      	strh	r0, [r4, #18]
 80170a0:	b005      	add	sp, #20
 80170a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170a6:	2300      	movs	r3, #0
 80170a8:	4611      	mov	r1, r2
 80170aa:	4620      	mov	r0, r4
 80170ac:	f7ff ff0e 	bl	8016ecc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80170b0:	e754      	b.n	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80170b2:	4563      	cmp	r3, ip
 80170b4:	dd14      	ble.n	80170e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80170b6:	b117      	cbz	r7, 80170be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80170b8:	2301      	movs	r3, #1
 80170ba:	460a      	mov	r2, r1
 80170bc:	e772      	b.n	8016fa4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80170be:	2e00      	cmp	r6, #0
 80170c0:	f43f af4c 	beq.w	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80170c4:	2800      	cmp	r0, #0
 80170c6:	f47f af49 	bne.w	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80170ca:	f1ba 0f00 	cmp.w	sl, #0
 80170ce:	d002      	beq.n	80170d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80170d0:	2301      	movs	r3, #1
 80170d2:	4642      	mov	r2, r8
 80170d4:	e767      	b.n	8016fa6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80170d6:	8ae3      	ldrh	r3, [r4, #22]
 80170d8:	2b00      	cmp	r3, #0
 80170da:	f43f af3f 	beq.w	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80170de:	e7d5      	b.n	801708c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80170e0:	2800      	cmp	r0, #0
 80170e2:	f47f af3b 	bne.w	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80170e6:	f1ba 0f00 	cmp.w	sl, #0
 80170ea:	f43f af37 	beq.w	8016f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80170ee:	2301      	movs	r3, #1
 80170f0:	4642      	mov	r2, r8
 80170f2:	e7da      	b.n	80170aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080170f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80170f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80170f6:	4605      	mov	r5, r0
 80170f8:	b08f      	sub	sp, #60	; 0x3c
 80170fa:	4617      	mov	r7, r2
 80170fc:	461c      	mov	r4, r3
 80170fe:	460e      	mov	r6, r1
 8017100:	b1d1      	cbz	r1, 8017138 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8017102:	681b      	ldr	r3, [r3, #0]
 8017104:	4620      	mov	r0, r4
 8017106:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017108:	4798      	blx	r3
 801710a:	4240      	negs	r0, r0
 801710c:	b200      	sxth	r0, r0
 801710e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8017112:	9603      	str	r6, [sp, #12]
 8017114:	9700      	str	r7, [sp, #0]
 8017116:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801711a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801711e:	4629      	mov	r1, r5
 8017120:	a805      	add	r0, sp, #20
 8017122:	f7ff fcbf 	bl	8016aa4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8017126:	2401      	movs	r4, #1
 8017128:	a805      	add	r0, sp, #20
 801712a:	f7ff fedf 	bl	8016eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801712e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8017132:	b163      	cbz	r3, 801714e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8017134:	3401      	adds	r4, #1
 8017136:	e7f7      	b.n	8017128 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8017138:	f002 ff86 	bl	801a048 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801713c:	2401      	movs	r4, #1
 801713e:	280a      	cmp	r0, #10
 8017140:	4628      	mov	r0, r5
 8017142:	bf08      	it	eq
 8017144:	3401      	addeq	r4, #1
 8017146:	f002 ff7f 	bl	801a048 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801714a:	2800      	cmp	r0, #0
 801714c:	d1f7      	bne.n	801713e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801714e:	b2a0      	uxth	r0, r4
 8017150:	b00f      	add	sp, #60	; 0x3c
 8017152:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017154 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8017154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017158:	b0e3      	sub	sp, #396	; 0x18c
 801715a:	461c      	mov	r4, r3
 801715c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801715e:	4683      	mov	fp, r0
 8017160:	4688      	mov	r8, r1
 8017162:	2b00      	cmp	r3, #0
 8017164:	f000 8112 	beq.w	801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8017168:	6823      	ldr	r3, [r4, #0]
 801716a:	2b00      	cmp	r3, #0
 801716c:	f000 810e 	beq.w	801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8017170:	7ba3      	ldrb	r3, [r4, #14]
 8017172:	2b00      	cmp	r3, #0
 8017174:	f000 810a 	beq.w	801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8017178:	6810      	ldr	r0, [r2, #0]
 801717a:	6851      	ldr	r1, [r2, #4]
 801717c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8017180:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8017184:	ad0a      	add	r5, sp, #40	; 0x28
 8017186:	462b      	mov	r3, r5
 8017188:	c303      	stmia	r3!, {r0, r1}
 801718a:	2100      	movs	r1, #0
 801718c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8017190:	910c      	str	r1, [sp, #48]	; 0x30
 8017192:	79a2      	ldrb	r2, [r4, #6]
 8017194:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017198:	a90c      	add	r1, sp, #48	; 0x30
 801719a:	4628      	mov	r0, r5
 801719c:	f7ff fd01 	bl	8016ba2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80171a0:	a90c      	add	r1, sp, #48	; 0x30
 80171a2:	4608      	mov	r0, r1
 80171a4:	79a2      	ldrb	r2, [r4, #6]
 80171a6:	f7ff fcfc 	bl	8016ba2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80171aa:	a817      	add	r0, sp, #92	; 0x5c
 80171ac:	f002 fb20 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 80171b0:	6820      	ldr	r0, [r4, #0]
 80171b2:	6803      	ldr	r3, [r0, #0]
 80171b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80171b6:	4798      	blx	r3
 80171b8:	4606      	mov	r6, r0
 80171ba:	6820      	ldr	r0, [r4, #0]
 80171bc:	6803      	ldr	r3, [r0, #0]
 80171be:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80171c0:	4798      	blx	r3
 80171c2:	4633      	mov	r3, r6
 80171c4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80171c6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80171c8:	9000      	str	r0, [sp, #0]
 80171ca:	a817      	add	r0, sp, #92	; 0x5c
 80171cc:	f002 fb6b 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80171d0:	6820      	ldr	r0, [r4, #0]
 80171d2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80171d6:	6803      	ldr	r3, [r0, #0]
 80171d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80171da:	4798      	blx	r3
 80171dc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80171e0:	6823      	ldr	r3, [r4, #0]
 80171e2:	4607      	mov	r7, r0
 80171e4:	4406      	add	r6, r0
 80171e6:	a830      	add	r0, sp, #192	; 0xc0
 80171e8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80171ec:	f002 fb00 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 80171f0:	7c23      	ldrb	r3, [r4, #16]
 80171f2:	b17b      	cbz	r3, 8017214 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80171f4:	6820      	ldr	r0, [r4, #0]
 80171f6:	6803      	ldr	r3, [r0, #0]
 80171f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80171fa:	4798      	blx	r3
 80171fc:	9009      	str	r0, [sp, #36]	; 0x24
 80171fe:	6820      	ldr	r0, [r4, #0]
 8017200:	6802      	ldr	r2, [r0, #0]
 8017202:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8017204:	4790      	blx	r2
 8017206:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017208:	9000      	str	r0, [sp, #0]
 801720a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801720c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801720e:	a830      	add	r0, sp, #192	; 0xc0
 8017210:	f002 fb49 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017214:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017218:	7be2      	ldrb	r2, [r4, #15]
 801721a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801721e:	1a8a      	subs	r2, r1, r2
 8017220:	7c21      	ldrb	r1, [r4, #16]
 8017222:	9103      	str	r1, [sp, #12]
 8017224:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8017228:	9102      	str	r1, [sp, #8]
 801722a:	6821      	ldr	r1, [r4, #0]
 801722c:	9101      	str	r1, [sp, #4]
 801722e:	7961      	ldrb	r1, [r4, #5]
 8017230:	9100      	str	r1, [sp, #0]
 8017232:	b292      	uxth	r2, r2
 8017234:	a930      	add	r1, sp, #192	; 0xc0
 8017236:	a80e      	add	r0, sp, #56	; 0x38
 8017238:	f7ff fc34 	bl	8016aa4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801723c:	2e00      	cmp	r6, #0
 801723e:	dc5b      	bgt.n	80172f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8017240:	af17      	add	r7, sp, #92	; 0x5c
 8017242:	f04f 0900 	mov.w	r9, #0
 8017246:	7c23      	ldrb	r3, [r4, #16]
 8017248:	2b00      	cmp	r3, #0
 801724a:	f000 80b1 	beq.w	80173b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801724e:	a80e      	add	r0, sp, #56	; 0x38
 8017250:	f7ff fe4c 	bl	8016eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8017254:	f1ba 0f00 	cmp.w	sl, #0
 8017258:	f000 80a5 	beq.w	80173a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801725c:	7c23      	ldrb	r3, [r4, #16]
 801725e:	9309      	str	r3, [sp, #36]	; 0x24
 8017260:	2264      	movs	r2, #100	; 0x64
 8017262:	4639      	mov	r1, r7
 8017264:	a849      	add	r0, sp, #292	; 0x124
 8017266:	f015 feba 	bl	802cfde <memcpy>
 801726a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801726c:	2b00      	cmp	r3, #0
 801726e:	f000 80a7 	beq.w	80173c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8017272:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8017276:	7922      	ldrb	r2, [r4, #4]
 8017278:	2a01      	cmp	r2, #1
 801727a:	f040 808a 	bne.w	8017392 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801727e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8017282:	1ac0      	subs	r0, r0, r3
 8017284:	2302      	movs	r3, #2
 8017286:	fb90 f0f3 	sdiv	r0, r0, r3
 801728a:	b200      	sxth	r0, r0
 801728c:	7c23      	ldrb	r3, [r4, #16]
 801728e:	2b00      	cmp	r3, #0
 8017290:	f000 808b 	beq.w	80173aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8017294:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8017298:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801729c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80172a0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80172a4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80172a8:	4410      	add	r0, r2
 80172aa:	b200      	sxth	r0, r0
 80172ac:	9000      	str	r0, [sp, #0]
 80172ae:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80172b2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80172b6:	4642      	mov	r2, r8
 80172b8:	2100      	movs	r1, #0
 80172ba:	4658      	mov	r0, fp
 80172bc:	f7ff fca2 	bl	8016c04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80172c0:	2800      	cmp	r0, #0
 80172c2:	d163      	bne.n	801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80172c4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80172c8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80172cc:	b2b2      	uxth	r2, r6
 80172ce:	4413      	add	r3, r2
 80172d0:	1a8a      	subs	r2, r1, r2
 80172d2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80172d6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80172da:	b21b      	sxth	r3, r3
 80172dc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80172e0:	2a00      	cmp	r2, #0
 80172e2:	d153      	bne.n	801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80172e4:	6822      	ldr	r2, [r4, #0]
 80172e6:	8869      	ldrh	r1, [r5, #2]
 80172e8:	7a12      	ldrb	r2, [r2, #8]
 80172ea:	1a9b      	subs	r3, r3, r2
 80172ec:	88ea      	ldrh	r2, [r5, #6]
 80172ee:	440a      	add	r2, r1
 80172f0:	b212      	sxth	r2, r2
 80172f2:	4293      	cmp	r3, r2
 80172f4:	dda7      	ble.n	8017246 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80172f6:	e049      	b.n	801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80172f8:	7c23      	ldrb	r3, [r4, #16]
 80172fa:	444f      	add	r7, r9
 80172fc:	b1c3      	cbz	r3, 8017330 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80172fe:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8017302:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017306:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801730a:	443b      	add	r3, r7
 801730c:	4293      	cmp	r3, r2
 801730e:	da97      	bge.n	8017240 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8017310:	a80e      	add	r0, sp, #56	; 0x38
 8017312:	f7ff fdeb 	bl	8016eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8017316:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801731a:	3b01      	subs	r3, #1
 801731c:	b29b      	uxth	r3, r3
 801731e:	454b      	cmp	r3, r9
 8017320:	9309      	str	r3, [sp, #36]	; 0x24
 8017322:	d021      	beq.n	8017368 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8017324:	7961      	ldrb	r1, [r4, #5]
 8017326:	a817      	add	r0, sp, #92	; 0x5c
 8017328:	f7f2 f94c 	bl	80095c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801732c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801732e:	e7f4      	b.n	801731a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8017330:	fa1f f986 	uxth.w	r9, r6
 8017334:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017338:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801733c:	443b      	add	r3, r7
 801733e:	4293      	cmp	r3, r2
 8017340:	f6bf af7e 	bge.w	8017240 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8017344:	a817      	add	r0, sp, #92	; 0x5c
 8017346:	f002 fe7f 	bl	801a048 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801734a:	b1f8      	cbz	r0, 801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801734c:	280a      	cmp	r0, #10
 801734e:	d1f1      	bne.n	8017334 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8017350:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017354:	444b      	add	r3, r9
 8017356:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801735a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801735e:	eba3 0309 	sub.w	r3, r3, r9
 8017362:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017366:	e7e5      	b.n	8017334 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8017368:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801736c:	b2b3      	uxth	r3, r6
 801736e:	441a      	add	r2, r3
 8017370:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8017374:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8017378:	1ad3      	subs	r3, r2, r3
 801737a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801737e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017382:	b11b      	cbz	r3, 801738c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8017384:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8017388:	2b00      	cmp	r3, #0
 801738a:	d0ba      	beq.n	8017302 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801738c:	b063      	add	sp, #396	; 0x18c
 801738e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017392:	2a02      	cmp	r2, #2
 8017394:	d105      	bne.n	80173a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8017396:	7be2      	ldrb	r2, [r4, #15]
 8017398:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801739c:	1a80      	subs	r0, r0, r2
 801739e:	1ac0      	subs	r0, r0, r3
 80173a0:	e773      	b.n	801728a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80173a2:	2000      	movs	r0, #0
 80173a4:	e772      	b.n	801728c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80173a6:	7be0      	ldrb	r0, [r4, #15]
 80173a8:	e770      	b.n	801728c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80173aa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80173ae:	e773      	b.n	8017298 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80173b0:	f1ba 0f00 	cmp.w	sl, #0
 80173b4:	d0f7      	beq.n	80173a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80173b6:	2264      	movs	r2, #100	; 0x64
 80173b8:	4639      	mov	r1, r7
 80173ba:	a849      	add	r0, sp, #292	; 0x124
 80173bc:	f015 fe0f 	bl	802cfde <memcpy>
 80173c0:	2300      	movs	r3, #0
 80173c2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80173c6:	6821      	ldr	r1, [r4, #0]
 80173c8:	a849      	add	r0, sp, #292	; 0x124
 80173ca:	f7ff fbae 	bl	8016b2a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80173ce:	b203      	sxth	r3, r0
 80173d0:	e751      	b.n	8017276 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080173d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80173d2:	2b03      	cmp	r3, #3
 80173d4:	d818      	bhi.n	8017408 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80173d6:	e8df f003 	tbb	[pc, r3]
 80173da:	0602      	.short	0x0602
 80173dc:	130d      	.short	0x130d
 80173de:	f9b0 2000 	ldrsh.w	r2, [r0]
 80173e2:	1850      	adds	r0, r2, r1
 80173e4:	4770      	bx	lr
 80173e6:	8803      	ldrh	r3, [r0, #0]
 80173e8:	8880      	ldrh	r0, [r0, #4]
 80173ea:	4418      	add	r0, r3
 80173ec:	b200      	sxth	r0, r0
 80173ee:	1a80      	subs	r0, r0, r2
 80173f0:	3801      	subs	r0, #1
 80173f2:	4770      	bx	lr
 80173f4:	8803      	ldrh	r3, [r0, #0]
 80173f6:	8880      	ldrh	r0, [r0, #4]
 80173f8:	4418      	add	r0, r3
 80173fa:	b200      	sxth	r0, r0
 80173fc:	1a40      	subs	r0, r0, r1
 80173fe:	e7f7      	b.n	80173f0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8017400:	f9b0 0000 	ldrsh.w	r0, [r0]
 8017404:	4410      	add	r0, r2
 8017406:	4770      	bx	lr
 8017408:	2000      	movs	r0, #0
 801740a:	4770      	bx	lr

0801740c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801740c:	2b03      	cmp	r3, #3
 801740e:	d817      	bhi.n	8017440 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8017410:	e8df f003 	tbb	[pc, r3]
 8017414:	10090602 	.word	0x10090602
 8017418:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801741c:	1850      	adds	r0, r2, r1
 801741e:	4770      	bx	lr
 8017420:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8017424:	e7fa      	b.n	801741c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8017426:	8843      	ldrh	r3, [r0, #2]
 8017428:	88c0      	ldrh	r0, [r0, #6]
 801742a:	4418      	add	r0, r3
 801742c:	b200      	sxth	r0, r0
 801742e:	1a80      	subs	r0, r0, r2
 8017430:	3801      	subs	r0, #1
 8017432:	4770      	bx	lr
 8017434:	8843      	ldrh	r3, [r0, #2]
 8017436:	88c0      	ldrh	r0, [r0, #6]
 8017438:	4418      	add	r0, r3
 801743a:	b200      	sxth	r0, r0
 801743c:	1a40      	subs	r0, r0, r1
 801743e:	e7f7      	b.n	8017430 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8017440:	2000      	movs	r0, #0
 8017442:	4770      	bx	lr

08017444 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8017444:	4b01      	ldr	r3, [pc, #4]	; (801744c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8017446:	2200      	movs	r2, #0
 8017448:	601a      	str	r2, [r3, #0]
 801744a:	4770      	bx	lr
 801744c:	2001385c 	.word	0x2001385c

08017450 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8017450:	4603      	mov	r3, r0
 8017452:	b1c8      	cbz	r0, 8017488 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8017454:	0c02      	lsrs	r2, r0, #16
 8017456:	0412      	lsls	r2, r2, #16
 8017458:	b9a2      	cbnz	r2, 8017484 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801745a:	0403      	lsls	r3, r0, #16
 801745c:	2010      	movs	r0, #16
 801745e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017462:	bf04      	itt	eq
 8017464:	021b      	lsleq	r3, r3, #8
 8017466:	3008      	addeq	r0, #8
 8017468:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801746c:	bf04      	itt	eq
 801746e:	011b      	lsleq	r3, r3, #4
 8017470:	3004      	addeq	r0, #4
 8017472:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017476:	bf04      	itt	eq
 8017478:	009b      	lsleq	r3, r3, #2
 801747a:	3002      	addeq	r0, #2
 801747c:	2b00      	cmp	r3, #0
 801747e:	db04      	blt.n	801748a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8017480:	3001      	adds	r0, #1
 8017482:	4770      	bx	lr
 8017484:	2000      	movs	r0, #0
 8017486:	e7ea      	b.n	801745e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8017488:	2020      	movs	r0, #32
 801748a:	4770      	bx	lr

0801748c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801748c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017490:	b087      	sub	sp, #28
 8017492:	460d      	mov	r5, r1
 8017494:	4616      	mov	r6, r2
 8017496:	4698      	mov	r8, r3
 8017498:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801749c:	4601      	mov	r1, r0
 801749e:	b120      	cbz	r0, 80174aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80174a0:	b11a      	cbz	r2, 80174aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80174a2:	2d1f      	cmp	r5, #31
 80174a4:	d801      	bhi.n	80174aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80174a6:	2b1f      	cmp	r3, #31
 80174a8:	d904      	bls.n	80174b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80174aa:	2000      	movs	r0, #0
 80174ac:	6038      	str	r0, [r7, #0]
 80174ae:	b007      	add	sp, #28
 80174b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174b4:	b97d      	cbnz	r5, 80174d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80174b6:	b143      	cbz	r3, 80174ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80174b8:	4602      	mov	r2, r0
 80174ba:	e9cd 4700 	strd	r4, r7, [sp]
 80174be:	462b      	mov	r3, r5
 80174c0:	4641      	mov	r1, r8
 80174c2:	4630      	mov	r0, r6
 80174c4:	f7ff ffe2 	bl	801748c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80174c8:	e7f1      	b.n	80174ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80174ca:	f04f 33ff 	mov.w	r3, #4294967295
 80174ce:	603b      	str	r3, [r7, #0]
 80174d0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80174d4:	e7eb      	b.n	80174ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80174d6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80174da:	d106      	bne.n	80174ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80174dc:	4346      	muls	r6, r0
 80174de:	fbb6 f0f4 	udiv	r0, r6, r4
 80174e2:	fb04 6610 	mls	r6, r4, r0, r6
 80174e6:	603e      	str	r6, [r7, #0]
 80174e8:	e7e1      	b.n	80174ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80174ea:	2201      	movs	r2, #1
 80174ec:	40aa      	lsls	r2, r5
 80174ee:	3a01      	subs	r2, #1
 80174f0:	4016      	ands	r6, r2
 80174f2:	fa00 fb05 	lsl.w	fp, r0, r5
 80174f6:	4630      	mov	r0, r6
 80174f8:	fbbb f9f4 	udiv	r9, fp, r4
 80174fc:	fb0a f309 	mul.w	r3, sl, r9
 8017500:	9303      	str	r3, [sp, #12]
 8017502:	f7ff ffa5 	bl	8017450 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8017506:	462b      	mov	r3, r5
 8017508:	460a      	mov	r2, r1
 801750a:	e9cd 4700 	strd	r4, r7, [sp]
 801750e:	4601      	mov	r1, r0
 8017510:	4630      	mov	r0, r6
 8017512:	f7ff ffbb 	bl	801748c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8017516:	fb04 b919 	mls	r9, r4, r9, fp
 801751a:	4606      	mov	r6, r0
 801751c:	4648      	mov	r0, r9
 801751e:	eb05 0108 	add.w	r1, r5, r8
 8017522:	f7ff ff95 	bl	8017450 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8017526:	ab05      	add	r3, sp, #20
 8017528:	e9cd 4300 	strd	r4, r3, [sp]
 801752c:	464a      	mov	r2, r9
 801752e:	4603      	mov	r3, r0
 8017530:	4650      	mov	r0, sl
 8017532:	f7ff ffab 	bl	801748c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8017536:	6839      	ldr	r1, [r7, #0]
 8017538:	9a05      	ldr	r2, [sp, #20]
 801753a:	9b03      	ldr	r3, [sp, #12]
 801753c:	4411      	add	r1, r2
 801753e:	fbb1 f2f4 	udiv	r2, r1, r4
 8017542:	18d3      	adds	r3, r2, r3
 8017544:	441e      	add	r6, r3
 8017546:	fb04 1412 	mls	r4, r4, r2, r1
 801754a:	4430      	add	r0, r6
 801754c:	603c      	str	r4, [r7, #0]
 801754e:	e7ae      	b.n	80174ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08017550 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8017550:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017554:	b085      	sub	sp, #20
 8017556:	f1b0 0900 	subs.w	r9, r0, #0
 801755a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801755c:	461d      	mov	r5, r3
 801755e:	bfbf      	itttt	lt
 8017560:	6823      	ldrlt	r3, [r4, #0]
 8017562:	425b      	neglt	r3, r3
 8017564:	f1c9 0900 	rsblt	r9, r9, #0
 8017568:	6023      	strlt	r3, [r4, #0]
 801756a:	bfb4      	ite	lt
 801756c:	f04f 36ff 	movlt.w	r6, #4294967295
 8017570:	2601      	movge	r6, #1
 8017572:	2a00      	cmp	r2, #0
 8017574:	4617      	mov	r7, r2
 8017576:	da04      	bge.n	8017582 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8017578:	6823      	ldr	r3, [r4, #0]
 801757a:	425b      	negs	r3, r3
 801757c:	4257      	negs	r7, r2
 801757e:	4276      	negs	r6, r6
 8017580:	6023      	str	r3, [r4, #0]
 8017582:	2d00      	cmp	r5, #0
 8017584:	4638      	mov	r0, r7
 8017586:	bfba      	itte	lt
 8017588:	426d      	neglt	r5, r5
 801758a:	f04f 38ff 	movlt.w	r8, #4294967295
 801758e:	f04f 0801 	movge.w	r8, #1
 8017592:	f7ff ff5d 	bl	8017450 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8017596:	ab03      	add	r3, sp, #12
 8017598:	e9cd 5300 	strd	r5, r3, [sp]
 801759c:	463a      	mov	r2, r7
 801759e:	4603      	mov	r3, r0
 80175a0:	4648      	mov	r0, r9
 80175a2:	f7ff ff73 	bl	801748c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80175a6:	6823      	ldr	r3, [r4, #0]
 80175a8:	9a03      	ldr	r2, [sp, #12]
 80175aa:	4546      	cmp	r6, r8
 80175ac:	441a      	add	r2, r3
 80175ae:	fb92 f3f5 	sdiv	r3, r2, r5
 80175b2:	4418      	add	r0, r3
 80175b4:	bf18      	it	ne
 80175b6:	4240      	negne	r0, r0
 80175b8:	fb05 2313 	mls	r3, r5, r3, r2
 80175bc:	1c72      	adds	r2, r6, #1
 80175be:	6023      	str	r3, [r4, #0]
 80175c0:	d105      	bne.n	80175ce <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80175c2:	2b00      	cmp	r3, #0
 80175c4:	f1c3 0200 	rsb	r2, r3, #0
 80175c8:	db0b      	blt.n	80175e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80175ca:	6022      	str	r2, [r4, #0]
 80175cc:	e006      	b.n	80175dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80175ce:	2e01      	cmp	r6, #1
 80175d0:	d104      	bne.n	80175dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80175d2:	2b00      	cmp	r3, #0
 80175d4:	da02      	bge.n	80175dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80175d6:	442b      	add	r3, r5
 80175d8:	3801      	subs	r0, #1
 80175da:	6023      	str	r3, [r4, #0]
 80175dc:	b005      	add	sp, #20
 80175de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80175e2:	3801      	subs	r0, #1
 80175e4:	1b52      	subs	r2, r2, r5
 80175e6:	e7f0      	b.n	80175ca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080175e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80175e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80175ec:	4c1c      	ldr	r4, [pc, #112]	; (8017660 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80175ee:	6807      	ldr	r7, [r0, #0]
 80175f0:	69a3      	ldr	r3, [r4, #24]
 80175f2:	4605      	mov	r5, r0
 80175f4:	b92b      	cbnz	r3, 8017602 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80175f6:	6840      	ldr	r0, [r0, #4]
 80175f8:	e9c5 7000 	strd	r7, r0, [r5]
 80175fc:	b004      	add	sp, #16
 80175fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017602:	68a2      	ldr	r2, [r4, #8]
 8017604:	6820      	ldr	r0, [r4, #0]
 8017606:	ae04      	add	r6, sp, #16
 8017608:	f04f 0802 	mov.w	r8, #2
 801760c:	fb93 f1f8 	sdiv	r1, r3, r8
 8017610:	440a      	add	r2, r1
 8017612:	f846 2d04 	str.w	r2, [r6, #-4]!
 8017616:	69e1      	ldr	r1, [r4, #28]
 8017618:	9600      	str	r6, [sp, #0]
 801761a:	463a      	mov	r2, r7
 801761c:	f7ff ff98 	bl	8017550 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8017620:	69a3      	ldr	r3, [r4, #24]
 8017622:	686a      	ldr	r2, [r5, #4]
 8017624:	6a21      	ldr	r1, [r4, #32]
 8017626:	9600      	str	r6, [sp, #0]
 8017628:	4607      	mov	r7, r0
 801762a:	6860      	ldr	r0, [r4, #4]
 801762c:	f7ff ff90 	bl	8017550 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8017630:	6962      	ldr	r2, [r4, #20]
 8017632:	69a3      	ldr	r3, [r4, #24]
 8017634:	fb93 f8f8 	sdiv	r8, r3, r8
 8017638:	4442      	add	r2, r8
 801763a:	9203      	str	r2, [sp, #12]
 801763c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801763e:	682a      	ldr	r2, [r5, #0]
 8017640:	9600      	str	r6, [sp, #0]
 8017642:	4407      	add	r7, r0
 8017644:	68e0      	ldr	r0, [r4, #12]
 8017646:	f7ff ff83 	bl	8017550 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801764a:	9600      	str	r6, [sp, #0]
 801764c:	4680      	mov	r8, r0
 801764e:	69a3      	ldr	r3, [r4, #24]
 8017650:	686a      	ldr	r2, [r5, #4]
 8017652:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8017654:	6920      	ldr	r0, [r4, #16]
 8017656:	f7ff ff7b 	bl	8017550 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801765a:	4440      	add	r0, r8
 801765c:	e7cc      	b.n	80175f8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801765e:	bf00      	nop
 8017660:	20013860 	.word	0x20013860

08017664 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8017664:	4b07      	ldr	r3, [pc, #28]	; (8017684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8017666:	781b      	ldrb	r3, [r3, #0]
 8017668:	2b01      	cmp	r3, #1
 801766a:	d109      	bne.n	8017680 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801766c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8017670:	f9b0 2000 	ldrsh.w	r2, [r0]
 8017674:	8003      	strh	r3, [r0, #0]
 8017676:	4b04      	ldr	r3, [pc, #16]	; (8017688 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8017678:	881b      	ldrh	r3, [r3, #0]
 801767a:	3b01      	subs	r3, #1
 801767c:	1a9b      	subs	r3, r3, r2
 801767e:	800b      	strh	r3, [r1, #0]
 8017680:	4770      	bx	lr
 8017682:	bf00      	nop
 8017684:	20013844 	.word	0x20013844
 8017688:	20013840 	.word	0x20013840

0801768c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801768c:	b510      	push	{r4, lr}
 801768e:	4b07      	ldr	r3, [pc, #28]	; (80176ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8017690:	781b      	ldrb	r3, [r3, #0]
 8017692:	2b01      	cmp	r3, #1
 8017694:	d108      	bne.n	80176a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8017696:	4b06      	ldr	r3, [pc, #24]	; (80176b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8017698:	880c      	ldrh	r4, [r1, #0]
 801769a:	881b      	ldrh	r3, [r3, #0]
 801769c:	f9b0 2000 	ldrsh.w	r2, [r0]
 80176a0:	3b01      	subs	r3, #1
 80176a2:	1b1b      	subs	r3, r3, r4
 80176a4:	8003      	strh	r3, [r0, #0]
 80176a6:	800a      	strh	r2, [r1, #0]
 80176a8:	bd10      	pop	{r4, pc}
 80176aa:	bf00      	nop
 80176ac:	20013844 	.word	0x20013844
 80176b0:	20013840 	.word	0x20013840

080176b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80176b4:	b510      	push	{r4, lr}
 80176b6:	4b0a      	ldr	r3, [pc, #40]	; (80176e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80176b8:	781b      	ldrb	r3, [r3, #0]
 80176ba:	2b01      	cmp	r3, #1
 80176bc:	d10e      	bne.n	80176dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80176be:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80176c2:	8843      	ldrh	r3, [r0, #2]
 80176c4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80176c8:	8044      	strh	r4, [r0, #2]
 80176ca:	18ca      	adds	r2, r1, r3
 80176cc:	4b05      	ldr	r3, [pc, #20]	; (80176e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80176ce:	881b      	ldrh	r3, [r3, #0]
 80176d0:	1a9b      	subs	r3, r3, r2
 80176d2:	8003      	strh	r3, [r0, #0]
 80176d4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80176d8:	80c3      	strh	r3, [r0, #6]
 80176da:	8081      	strh	r1, [r0, #4]
 80176dc:	bd10      	pop	{r4, pc}
 80176de:	bf00      	nop
 80176e0:	20013844 	.word	0x20013844
 80176e4:	20013840 	.word	0x20013840

080176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80176e8:	4b08      	ldr	r3, [pc, #32]	; (801770c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80176ea:	781b      	ldrb	r3, [r3, #0]
 80176ec:	2b01      	cmp	r3, #1
 80176ee:	d10c      	bne.n	801770a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80176f0:	8803      	ldrh	r3, [r0, #0]
 80176f2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80176f6:	8842      	ldrh	r2, [r0, #2]
 80176f8:	8002      	strh	r2, [r0, #0]
 80176fa:	185a      	adds	r2, r3, r1
 80176fc:	4b04      	ldr	r3, [pc, #16]	; (8017710 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80176fe:	881b      	ldrh	r3, [r3, #0]
 8017700:	1a9b      	subs	r3, r3, r2
 8017702:	8043      	strh	r3, [r0, #2]
 8017704:	88c3      	ldrh	r3, [r0, #6]
 8017706:	8083      	strh	r3, [r0, #4]
 8017708:	80c1      	strh	r1, [r0, #6]
 801770a:	4770      	bx	lr
 801770c:	20013844 	.word	0x20013844
 8017710:	20013840 	.word	0x20013840

08017714 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8017714:	b510      	push	{r4, lr}
 8017716:	4b07      	ldr	r3, [pc, #28]	; (8017734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8017718:	781b      	ldrb	r3, [r3, #0]
 801771a:	2b01      	cmp	r3, #1
 801771c:	d108      	bne.n	8017730 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801771e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8017722:	f9b0 4000 	ldrsh.w	r4, [r0]
 8017726:	8003      	strh	r3, [r0, #0]
 8017728:	8893      	ldrh	r3, [r2, #4]
 801772a:	3b01      	subs	r3, #1
 801772c:	1b1b      	subs	r3, r3, r4
 801772e:	800b      	strh	r3, [r1, #0]
 8017730:	bd10      	pop	{r4, pc}
 8017732:	bf00      	nop
 8017734:	20013844 	.word	0x20013844

08017738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8017738:	4b0b      	ldr	r3, [pc, #44]	; (8017768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801773a:	781b      	ldrb	r3, [r3, #0]
 801773c:	2b01      	cmp	r3, #1
 801773e:	d111      	bne.n	8017764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8017740:	680b      	ldr	r3, [r1, #0]
 8017742:	ed90 7a00 	vldr	s14, [r0]
 8017746:	6003      	str	r3, [r0, #0]
 8017748:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801774c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801776c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8017750:	ee07 3a90 	vmov	s15, r3
 8017754:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017758:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801775c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8017760:	edc1 7a00 	vstr	s15, [r1]
 8017764:	4770      	bx	lr
 8017766:	bf00      	nop
 8017768:	20013844 	.word	0x20013844
 801776c:	38d1b717 	.word	0x38d1b717

08017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8017770:	b510      	push	{r4, lr}
 8017772:	4b0a      	ldr	r3, [pc, #40]	; (801779c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8017774:	781b      	ldrb	r3, [r3, #0]
 8017776:	2b01      	cmp	r3, #1
 8017778:	460a      	mov	r2, r1
 801777a:	d10d      	bne.n	8017798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801777c:	8881      	ldrh	r1, [r0, #4]
 801777e:	8803      	ldrh	r3, [r0, #0]
 8017780:	440b      	add	r3, r1
 8017782:	4601      	mov	r1, r0
 8017784:	3b01      	subs	r3, #1
 8017786:	f821 3b02 	strh.w	r3, [r1], #2
 801778a:	f7ff ffc3 	bl	8017714 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801778e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8017792:	88c2      	ldrh	r2, [r0, #6]
 8017794:	8082      	strh	r2, [r0, #4]
 8017796:	80c3      	strh	r3, [r0, #6]
 8017798:	bd10      	pop	{r4, pc}
 801779a:	bf00      	nop
 801779c:	20013844 	.word	0x20013844

080177a0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80177a0:	4b06      	ldr	r3, [pc, #24]	; (80177bc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80177a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80177a6:	4b06      	ldr	r3, [pc, #24]	; (80177c0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80177a8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80177ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 80177b0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80177b4:	2100      	movs	r1, #0
 80177b6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80177ba:	4770      	bx	lr
 80177bc:	20013840 	.word	0x20013840
 80177c0:	20013842 	.word	0x20013842

080177c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80177c4:	4b03      	ldr	r3, [pc, #12]	; (80177d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80177c6:	6818      	ldr	r0, [r3, #0]
 80177c8:	b110      	cbz	r0, 80177d0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80177ca:	6803      	ldr	r3, [r0, #0]
 80177cc:	699b      	ldr	r3, [r3, #24]
 80177ce:	4718      	bx	r3
 80177d0:	4770      	bx	lr
 80177d2:	bf00      	nop
 80177d4:	20013890 	.word	0x20013890

080177d8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80177d8:	4770      	bx	lr
	...

080177dc <_ZN8touchgfx11Application4drawEv>:
 80177dc:	b507      	push	{r0, r1, r2, lr}
 80177de:	4b09      	ldr	r3, [pc, #36]	; (8017804 <_ZN8touchgfx11Application4drawEv+0x28>)
 80177e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80177e4:	4b08      	ldr	r3, [pc, #32]	; (8017808 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80177e6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80177ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 80177ee:	f8ad 3006 	strh.w	r3, [sp, #6]
 80177f2:	6803      	ldr	r3, [r0, #0]
 80177f4:	2100      	movs	r1, #0
 80177f6:	9100      	str	r1, [sp, #0]
 80177f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80177fa:	4669      	mov	r1, sp
 80177fc:	4798      	blx	r3
 80177fe:	b003      	add	sp, #12
 8017800:	f85d fb04 	ldr.w	pc, [sp], #4
 8017804:	20013840 	.word	0x20013840
 8017808:	20013842 	.word	0x20013842

0801780c <_ZN8touchgfx11Application10invalidateEv>:
 801780c:	4b09      	ldr	r3, [pc, #36]	; (8017834 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801780e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017812:	4b09      	ldr	r3, [pc, #36]	; (8017838 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8017814:	b082      	sub	sp, #8
 8017816:	f9b3 3000 	ldrsh.w	r3, [r3]
 801781a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801781e:	2100      	movs	r1, #0
 8017820:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017824:	9100      	str	r1, [sp, #0]
 8017826:	6803      	ldr	r3, [r0, #0]
 8017828:	aa02      	add	r2, sp, #8
 801782a:	e912 0006 	ldmdb	r2, {r1, r2}
 801782e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017830:	b002      	add	sp, #8
 8017832:	4718      	bx	r3
 8017834:	20013840 	.word	0x20013840
 8017838:	20013842 	.word	0x20013842

0801783c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801783c:	4b03      	ldr	r3, [pc, #12]	; (801784c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801783e:	6818      	ldr	r0, [r3, #0]
 8017840:	b110      	cbz	r0, 8017848 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8017842:	6803      	ldr	r3, [r0, #0]
 8017844:	69db      	ldr	r3, [r3, #28]
 8017846:	4718      	bx	r3
 8017848:	4770      	bx	lr
 801784a:	bf00      	nop
 801784c:	20013890 	.word	0x20013890

08017850 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8017850:	4b03      	ldr	r3, [pc, #12]	; (8017860 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8017852:	6818      	ldr	r0, [r3, #0]
 8017854:	b110      	cbz	r0, 801785c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8017856:	6803      	ldr	r3, [r0, #0]
 8017858:	6a1b      	ldr	r3, [r3, #32]
 801785a:	4718      	bx	r3
 801785c:	4770      	bx	lr
 801785e:	bf00      	nop
 8017860:	20013890 	.word	0x20013890

08017864 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8017864:	2300      	movs	r3, #0
 8017866:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801786a:	4770      	bx	lr

0801786c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801786c:	4b03      	ldr	r3, [pc, #12]	; (801787c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801786e:	6818      	ldr	r0, [r3, #0]
 8017870:	b110      	cbz	r0, 8017878 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8017872:	6803      	ldr	r3, [r0, #0]
 8017874:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017876:	4718      	bx	r3
 8017878:	4770      	bx	lr
 801787a:	bf00      	nop
 801787c:	20013890 	.word	0x20013890

08017880 <_ZN8touchgfx11ApplicationD1Ev>:
 8017880:	4770      	bx	lr

08017882 <_ZN8touchgfx11ApplicationD0Ev>:
 8017882:	b510      	push	{r4, lr}
 8017884:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8017888:	4604      	mov	r4, r0
 801788a:	f014 f996 	bl	802bbba <_ZdlPvj>
 801788e:	4620      	mov	r0, r4
 8017890:	bd10      	pop	{r4, pc}

08017892 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8017892:	b510      	push	{r4, lr}
 8017894:	f9b1 4000 	ldrsh.w	r4, [r1]
 8017898:	888a      	ldrh	r2, [r1, #4]
 801789a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801789e:	4422      	add	r2, r4
 80178a0:	b212      	sxth	r2, r2
 80178a2:	4293      	cmp	r3, r2
 80178a4:	da15      	bge.n	80178d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80178a6:	8882      	ldrh	r2, [r0, #4]
 80178a8:	4413      	add	r3, r2
 80178aa:	b21b      	sxth	r3, r3
 80178ac:	429c      	cmp	r4, r3
 80178ae:	da10      	bge.n	80178d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80178b0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80178b4:	88c9      	ldrh	r1, [r1, #6]
 80178b6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80178ba:	4419      	add	r1, r3
 80178bc:	b209      	sxth	r1, r1
 80178be:	428a      	cmp	r2, r1
 80178c0:	da07      	bge.n	80178d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80178c2:	88c0      	ldrh	r0, [r0, #6]
 80178c4:	4410      	add	r0, r2
 80178c6:	b200      	sxth	r0, r0
 80178c8:	4283      	cmp	r3, r0
 80178ca:	bfac      	ite	ge
 80178cc:	2000      	movge	r0, #0
 80178ce:	2001      	movlt	r0, #1
 80178d0:	bd10      	pop	{r4, pc}
 80178d2:	2000      	movs	r0, #0
 80178d4:	e7fc      	b.n	80178d0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080178d6 <_ZN8touchgfx4Rect10restrictToEss>:
 80178d6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80178da:	2b00      	cmp	r3, #0
 80178dc:	b510      	push	{r4, lr}
 80178de:	da04      	bge.n	80178ea <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80178e0:	8884      	ldrh	r4, [r0, #4]
 80178e2:	4423      	add	r3, r4
 80178e4:	8083      	strh	r3, [r0, #4]
 80178e6:	2300      	movs	r3, #0
 80178e8:	8003      	strh	r3, [r0, #0]
 80178ea:	f9b0 4000 	ldrsh.w	r4, [r0]
 80178ee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80178f2:	1b09      	subs	r1, r1, r4
 80178f4:	428b      	cmp	r3, r1
 80178f6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80178fa:	bfc8      	it	gt
 80178fc:	8081      	strhgt	r1, [r0, #4]
 80178fe:	2b00      	cmp	r3, #0
 8017900:	da04      	bge.n	801790c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8017902:	88c1      	ldrh	r1, [r0, #6]
 8017904:	440b      	add	r3, r1
 8017906:	80c3      	strh	r3, [r0, #6]
 8017908:	2300      	movs	r3, #0
 801790a:	8043      	strh	r3, [r0, #2]
 801790c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8017910:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8017914:	1a52      	subs	r2, r2, r1
 8017916:	4293      	cmp	r3, r2
 8017918:	bfc8      	it	gt
 801791a:	80c2      	strhgt	r2, [r0, #6]
 801791c:	bd10      	pop	{r4, pc}
	...

08017920 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8017920:	b510      	push	{r4, lr}
 8017922:	4b10      	ldr	r3, [pc, #64]	; (8017964 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8017924:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017928:	4b0f      	ldr	r3, [pc, #60]	; (8017968 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801792a:	460c      	mov	r4, r1
 801792c:	4620      	mov	r0, r4
 801792e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8017932:	f7ff ffd0 	bl	80178d6 <_ZN8touchgfx4Rect10restrictToEss>
 8017936:	4b0d      	ldr	r3, [pc, #52]	; (801796c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8017938:	6818      	ldr	r0, [r3, #0]
 801793a:	b190      	cbz	r0, 8017962 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801793c:	6803      	ldr	r3, [r0, #0]
 801793e:	4621      	mov	r1, r4
 8017940:	689b      	ldr	r3, [r3, #8]
 8017942:	4798      	blx	r3
 8017944:	4b0a      	ldr	r3, [pc, #40]	; (8017970 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8017946:	6818      	ldr	r0, [r3, #0]
 8017948:	b118      	cbz	r0, 8017952 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801794a:	6803      	ldr	r3, [r0, #0]
 801794c:	4621      	mov	r1, r4
 801794e:	689b      	ldr	r3, [r3, #8]
 8017950:	4798      	blx	r3
 8017952:	4b08      	ldr	r3, [pc, #32]	; (8017974 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8017954:	6818      	ldr	r0, [r3, #0]
 8017956:	6803      	ldr	r3, [r0, #0]
 8017958:	4621      	mov	r1, r4
 801795a:	69db      	ldr	r3, [r3, #28]
 801795c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017960:	4718      	bx	r3
 8017962:	bd10      	pop	{r4, pc}
 8017964:	20013842 	.word	0x20013842
 8017968:	20013840 	.word	0x20013840
 801796c:	20013890 	.word	0x20013890
 8017970:	2001388c 	.word	0x2001388c
 8017974:	2001384c 	.word	0x2001384c

08017978 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8017978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801797a:	4606      	mov	r6, r0
 801797c:	4608      	mov	r0, r1
 801797e:	460f      	mov	r7, r1
 8017980:	f7fa f957 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017984:	b9e8      	cbnz	r0, 80179c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8017986:	f9b7 5000 	ldrsh.w	r5, [r7]
 801798a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801798e:	42a5      	cmp	r5, r4
 8017990:	db17      	blt.n	80179c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8017992:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8017996:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801799a:	429a      	cmp	r2, r3
 801799c:	db11      	blt.n	80179c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801799e:	88b9      	ldrh	r1, [r7, #4]
 80179a0:	440d      	add	r5, r1
 80179a2:	88b1      	ldrh	r1, [r6, #4]
 80179a4:	440c      	add	r4, r1
 80179a6:	b22d      	sxth	r5, r5
 80179a8:	b224      	sxth	r4, r4
 80179aa:	42a5      	cmp	r5, r4
 80179ac:	dc09      	bgt.n	80179c2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80179ae:	88f8      	ldrh	r0, [r7, #6]
 80179b0:	4410      	add	r0, r2
 80179b2:	88f2      	ldrh	r2, [r6, #6]
 80179b4:	4413      	add	r3, r2
 80179b6:	b200      	sxth	r0, r0
 80179b8:	b21b      	sxth	r3, r3
 80179ba:	4298      	cmp	r0, r3
 80179bc:	bfcc      	ite	gt
 80179be:	2000      	movgt	r0, #0
 80179c0:	2001      	movle	r0, #1
 80179c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080179c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80179c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80179c6:	4604      	mov	r4, r0
 80179c8:	4608      	mov	r0, r1
 80179ca:	460d      	mov	r5, r1
 80179cc:	f7fa f931 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 80179d0:	b978      	cbnz	r0, 80179f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80179d2:	4620      	mov	r0, r4
 80179d4:	f7fa f92d 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 80179d8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80179dc:	b150      	cbz	r0, 80179f4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80179de:	8026      	strh	r6, [r4, #0]
 80179e0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80179e4:	8063      	strh	r3, [r4, #2]
 80179e6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80179ea:	80a3      	strh	r3, [r4, #4]
 80179ec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80179f0:	80e3      	strh	r3, [r4, #6]
 80179f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80179f4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80179f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80179fc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8017a00:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8017a04:	88ed      	ldrh	r5, [r5, #6]
 8017a06:	42b1      	cmp	r1, r6
 8017a08:	460f      	mov	r7, r1
 8017a0a:	bfa8      	it	ge
 8017a0c:	4637      	movge	r7, r6
 8017a0e:	4293      	cmp	r3, r2
 8017a10:	4618      	mov	r0, r3
 8017a12:	4466      	add	r6, ip
 8017a14:	bfa8      	it	ge
 8017a16:	4610      	movge	r0, r2
 8017a18:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017a1c:	8027      	strh	r7, [r4, #0]
 8017a1e:	442a      	add	r2, r5
 8017a20:	88e5      	ldrh	r5, [r4, #6]
 8017a22:	8060      	strh	r0, [r4, #2]
 8017a24:	4461      	add	r1, ip
 8017a26:	442b      	add	r3, r5
 8017a28:	b236      	sxth	r6, r6
 8017a2a:	b209      	sxth	r1, r1
 8017a2c:	b212      	sxth	r2, r2
 8017a2e:	b21b      	sxth	r3, r3
 8017a30:	428e      	cmp	r6, r1
 8017a32:	bfac      	ite	ge
 8017a34:	ebc7 0106 	rsbge	r1, r7, r6
 8017a38:	ebc7 0101 	rsblt	r1, r7, r1
 8017a3c:	429a      	cmp	r2, r3
 8017a3e:	bfac      	ite	ge
 8017a40:	ebc0 0202 	rsbge	r2, r0, r2
 8017a44:	ebc0 0203 	rsblt	r2, r0, r3
 8017a48:	80a1      	strh	r1, [r4, #4]
 8017a4a:	80e2      	strh	r2, [r4, #6]
 8017a4c:	e7d1      	b.n	80179f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08017a50 <_ZN8touchgfx11Application11getInstanceEv>:
 8017a50:	4b01      	ldr	r3, [pc, #4]	; (8017a58 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8017a52:	6818      	ldr	r0, [r3, #0]
 8017a54:	4770      	bx	lr
 8017a56:	bf00      	nop
 8017a58:	200138a0 	.word	0x200138a0

08017a5c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8017a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017a5e:	4b10      	ldr	r3, [pc, #64]	; (8017aa0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8017a60:	781b      	ldrb	r3, [r3, #0]
 8017a62:	4605      	mov	r5, r0
 8017a64:	b1d3      	cbz	r3, 8017a9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8017a66:	4b0f      	ldr	r3, [pc, #60]	; (8017aa4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8017a68:	4f0f      	ldr	r7, [pc, #60]	; (8017aa8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8017a6a:	881c      	ldrh	r4, [r3, #0]
 8017a6c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8017a70:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8017a74:	42a3      	cmp	r3, r4
 8017a76:	d90e      	bls.n	8017a96 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8017a78:	683b      	ldr	r3, [r7, #0]
 8017a7a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8017a7e:	b10a      	cbz	r2, 8017a84 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8017a80:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8017a82:	b900      	cbnz	r0, 8017a86 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8017a84:	6898      	ldr	r0, [r3, #8]
 8017a86:	6803      	ldr	r3, [r0, #0]
 8017a88:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8017a8c:	69db      	ldr	r3, [r3, #28]
 8017a8e:	3401      	adds	r4, #1
 8017a90:	4798      	blx	r3
 8017a92:	b2a4      	uxth	r4, r4
 8017a94:	e7ec      	b.n	8017a70 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8017a96:	2300      	movs	r3, #0
 8017a98:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8017a9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017a9e:	bf00      	nop
 8017aa0:	2001384a 	.word	0x2001384a
 8017aa4:	2000008c 	.word	0x2000008c
 8017aa8:	2001384c 	.word	0x2001384c

08017aac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8017aac:	b510      	push	{r4, lr}
 8017aae:	2300      	movs	r3, #0
 8017ab0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8017ab4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8017ab8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8017abc:	4604      	mov	r4, r0
 8017abe:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8017ac2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8017ac6:	429a      	cmp	r2, r3
 8017ac8:	d90e      	bls.n	8017ae8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8017aca:	18e2      	adds	r2, r4, r3
 8017acc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8017ad0:	b122      	cbz	r2, 8017adc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8017ad2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8017ad6:	6803      	ldr	r3, [r0, #0]
 8017ad8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017ada:	4798      	blx	r3
 8017adc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8017ae0:	3301      	adds	r3, #1
 8017ae2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8017ae6:	e7ea      	b.n	8017abe <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8017ae8:	bd10      	pop	{r4, pc}

08017aea <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8017aea:	b530      	push	{r4, r5, lr}
 8017aec:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8017af0:	2200      	movs	r2, #0
 8017af2:	b293      	uxth	r3, r2
 8017af4:	429d      	cmp	r5, r3
 8017af6:	d90e      	bls.n	8017b16 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8017af8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8017afc:	428b      	cmp	r3, r1
 8017afe:	d10b      	bne.n	8017b18 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8017b00:	1884      	adds	r4, r0, r2
 8017b02:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8017b06:	b13b      	cbz	r3, 8017b18 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8017b08:	3b01      	subs	r3, #1
 8017b0a:	b2db      	uxtb	r3, r3
 8017b0c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8017b10:	b90b      	cbnz	r3, 8017b16 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8017b12:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8017b16:	bd30      	pop	{r4, r5, pc}
 8017b18:	3201      	adds	r2, #1
 8017b1a:	e7ea      	b.n	8017af2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8017b1c:	2300      	movs	r3, #0
 8017b1e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8017b22:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8017b26:	30a4      	adds	r0, #164	; 0xa4
 8017b28:	f802 3b01 	strb.w	r3, [r2], #1
 8017b2c:	4282      	cmp	r2, r0
 8017b2e:	d1fb      	bne.n	8017b28 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8017b30:	4770      	bx	lr
	...

08017b34 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8017b34:	b570      	push	{r4, r5, r6, lr}
 8017b36:	4c0b      	ldr	r4, [pc, #44]	; (8017b64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8017b38:	4605      	mov	r5, r0
 8017b3a:	6820      	ldr	r0, [r4, #0]
 8017b3c:	460e      	mov	r6, r1
 8017b3e:	b110      	cbz	r0, 8017b46 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8017b40:	6803      	ldr	r3, [r0, #0]
 8017b42:	695b      	ldr	r3, [r3, #20]
 8017b44:	4798      	blx	r3
 8017b46:	1d28      	adds	r0, r5, #4
 8017b48:	f7ff ffe8 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8017b4c:	6026      	str	r6, [r4, #0]
 8017b4e:	6833      	ldr	r3, [r6, #0]
 8017b50:	4630      	mov	r0, r6
 8017b52:	68db      	ldr	r3, [r3, #12]
 8017b54:	4798      	blx	r3
 8017b56:	682b      	ldr	r3, [r5, #0]
 8017b58:	4628      	mov	r0, r5
 8017b5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017b5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017b60:	4718      	bx	r3
 8017b62:	bf00      	nop
 8017b64:	20013890 	.word	0x20013890

08017b68 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8017b68:	2300      	movs	r3, #0
 8017b6a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8017b6e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8017b72:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b74:	461a      	mov	r2, r3
 8017b76:	461c      	mov	r4, r3
 8017b78:	461d      	mov	r5, r3
 8017b7a:	459c      	cmp	ip, r3
 8017b7c:	dd1a      	ble.n	8017bb4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8017b7e:	18c6      	adds	r6, r0, r3
 8017b80:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8017b84:	b16e      	cbz	r6, 8017ba2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8017b86:	429a      	cmp	r2, r3
 8017b88:	d008      	beq.n	8017b9c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8017b8a:	fa1f fe82 	uxth.w	lr, r2
 8017b8e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8017b92:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8017b96:	1887      	adds	r7, r0, r2
 8017b98:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8017b9c:	3201      	adds	r2, #1
 8017b9e:	3301      	adds	r3, #1
 8017ba0:	e7eb      	b.n	8017b7a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8017ba2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8017ba6:	4299      	cmp	r1, r3
 8017ba8:	bfa8      	it	ge
 8017baa:	3501      	addge	r5, #1
 8017bac:	429e      	cmp	r6, r3
 8017bae:	bfc8      	it	gt
 8017bb0:	3401      	addgt	r4, #1
 8017bb2:	e7f4      	b.n	8017b9e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8017bb4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8017bb8:	1b49      	subs	r1, r1, r5
 8017bba:	1b1b      	subs	r3, r3, r4
 8017bbc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8017bc0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8017bc4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8017bc8:	4293      	cmp	r3, r2
 8017bca:	dd03      	ble.n	8017bd4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8017bcc:	3b01      	subs	r3, #1
 8017bce:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8017bd2:	e7f7      	b.n	8017bc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8017bd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08017bd8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8017bd8:	b570      	push	{r4, r5, r6, lr}
 8017bda:	4d16      	ldr	r5, [pc, #88]	; (8017c34 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8017bdc:	4604      	mov	r4, r0
 8017bde:	6828      	ldr	r0, [r5, #0]
 8017be0:	b140      	cbz	r0, 8017bf4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8017be2:	7a03      	ldrb	r3, [r0, #8]
 8017be4:	b933      	cbnz	r3, 8017bf4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8017be6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8017bea:	6803      	ldr	r3, [r0, #0]
 8017bec:	689b      	ldr	r3, [r3, #8]
 8017bee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017bf2:	4718      	bx	r3
 8017bf4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8017bf8:	4e0f      	ldr	r6, [pc, #60]	; (8017c38 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8017bfa:	b973      	cbnz	r3, 8017c1a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017bfc:	b168      	cbz	r0, 8017c1a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017bfe:	7a03      	ldrb	r3, [r0, #8]
 8017c00:	b15b      	cbz	r3, 8017c1a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017c02:	6830      	ldr	r0, [r6, #0]
 8017c04:	b110      	cbz	r0, 8017c0c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8017c06:	6803      	ldr	r3, [r0, #0]
 8017c08:	691b      	ldr	r3, [r3, #16]
 8017c0a:	4798      	blx	r3
 8017c0c:	6828      	ldr	r0, [r5, #0]
 8017c0e:	6803      	ldr	r3, [r0, #0]
 8017c10:	68db      	ldr	r3, [r3, #12]
 8017c12:	4798      	blx	r3
 8017c14:	2301      	movs	r3, #1
 8017c16:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8017c1a:	3404      	adds	r4, #4
 8017c1c:	4620      	mov	r0, r4
 8017c1e:	f7ff ff45 	bl	8017aac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8017c22:	4620      	mov	r0, r4
 8017c24:	f7ff ffa0 	bl	8017b68 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8017c28:	6830      	ldr	r0, [r6, #0]
 8017c2a:	b110      	cbz	r0, 8017c32 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8017c2c:	6803      	ldr	r3, [r0, #0]
 8017c2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017c30:	e7dd      	b.n	8017bee <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8017c32:	bd70      	pop	{r4, r5, r6, pc}
 8017c34:	20013894 	.word	0x20013894
 8017c38:	20013890 	.word	0x20013890

08017c3c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8017c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017c3e:	2300      	movs	r3, #0
 8017c40:	4604      	mov	r4, r0
 8017c42:	460d      	mov	r5, r1
 8017c44:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8017c48:	4618      	mov	r0, r3
 8017c4a:	b29a      	uxth	r2, r3
 8017c4c:	4291      	cmp	r1, r2
 8017c4e:	d911      	bls.n	8017c74 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8017c50:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8017c54:	18e6      	adds	r6, r4, r3
 8017c56:	42af      	cmp	r7, r5
 8017c58:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8017c5c:	d105      	bne.n	8017c6a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8017c5e:	2aff      	cmp	r2, #255	; 0xff
 8017c60:	d002      	beq.n	8017c68 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8017c62:	3201      	adds	r2, #1
 8017c64:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8017c68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017c6a:	2a00      	cmp	r2, #0
 8017c6c:	bf08      	it	eq
 8017c6e:	2001      	moveq	r0, #1
 8017c70:	3301      	adds	r3, #1
 8017c72:	e7ea      	b.n	8017c4a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8017c74:	b120      	cbz	r0, 8017c80 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8017c76:	2920      	cmp	r1, #32
 8017c78:	d102      	bne.n	8017c80 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8017c7a:	4620      	mov	r0, r4
 8017c7c:	f7ff ff74 	bl	8017b68 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8017c80:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8017c84:	2b1f      	cmp	r3, #31
 8017c86:	d8ef      	bhi.n	8017c68 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8017c88:	18e2      	adds	r2, r4, r3
 8017c8a:	2101      	movs	r1, #1
 8017c8c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8017c90:	185a      	adds	r2, r3, r1
 8017c92:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8017c96:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8017c9a:	e7e5      	b.n	8017c68 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08017c9c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8017c9c:	4603      	mov	r3, r0
 8017c9e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8017ca2:	2200      	movs	r2, #0
 8017ca4:	801a      	strh	r2, [r3, #0]
 8017ca6:	805a      	strh	r2, [r3, #2]
 8017ca8:	809a      	strh	r2, [r3, #4]
 8017caa:	80da      	strh	r2, [r3, #6]
 8017cac:	3308      	adds	r3, #8
 8017cae:	428b      	cmp	r3, r1
 8017cb0:	d1f8      	bne.n	8017ca4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8017cb2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8017cb6:	4770      	bx	lr

08017cb8 <_ZN8touchgfx11ApplicationC1Ev>:
 8017cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017cba:	4606      	mov	r6, r0
 8017cbc:	4b1c      	ldr	r3, [pc, #112]	; (8017d30 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8017cbe:	f846 3b04 	str.w	r3, [r6], #4
 8017cc2:	4604      	mov	r4, r0
 8017cc4:	2500      	movs	r5, #0
 8017cc6:	22a8      	movs	r2, #168	; 0xa8
 8017cc8:	2100      	movs	r1, #0
 8017cca:	4630      	mov	r0, r6
 8017ccc:	f015 f861 	bl	802cd92 <memset>
 8017cd0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8017cd4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017cd8:	f7ff ffe0 	bl	8017c9c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017cdc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017ce0:	f7ff ffdc 	bl	8017c9c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017ce4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8017ce8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8017cec:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8017cf0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8017cf4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8017cf8:	490e      	ldr	r1, [pc, #56]	; (8017d34 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8017cfa:	480f      	ldr	r0, [pc, #60]	; (8017d38 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8017cfc:	4f0f      	ldr	r7, [pc, #60]	; (8017d3c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8017cfe:	f010 fe27 	bl	8028950 <CRC_Lock>
 8017d02:	4b0f      	ldr	r3, [pc, #60]	; (8017d40 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8017d04:	b158      	cbz	r0, 8017d1e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8017d06:	801d      	strh	r5, [r3, #0]
 8017d08:	4a0e      	ldr	r2, [pc, #56]	; (8017d44 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8017d0a:	2300      	movs	r3, #0
 8017d0c:	6013      	str	r3, [r2, #0]
 8017d0e:	4a0e      	ldr	r2, [pc, #56]	; (8017d48 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8017d10:	603b      	str	r3, [r7, #0]
 8017d12:	4630      	mov	r0, r6
 8017d14:	6013      	str	r3, [r2, #0]
 8017d16:	f7ff ff01 	bl	8017b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8017d1a:	4620      	mov	r0, r4
 8017d1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017d1e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8017d22:	2002      	movs	r0, #2
 8017d24:	801a      	strh	r2, [r3, #0]
 8017d26:	6038      	str	r0, [r7, #0]
 8017d28:	f001 fb4a 	bl	80193c0 <_ZN8touchgfx6Screen4drawEv>
 8017d2c:	e7ec      	b.n	8017d08 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8017d2e:	bf00      	nop
 8017d30:	08030db4 	.word	0x08030db4
 8017d34:	b5e8b5cd 	.word	0xb5e8b5cd
 8017d38:	f407a5c2 	.word	0xf407a5c2
 8017d3c:	20013890 	.word	0x20013890
 8017d40:	2000008c 	.word	0x2000008c
 8017d44:	200138a0 	.word	0x200138a0
 8017d48:	20013894 	.word	0x20013894

08017d4c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8017d4c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8017d50:	3b01      	subs	r3, #1
 8017d52:	b29b      	uxth	r3, r3
 8017d54:	428b      	cmp	r3, r1
 8017d56:	b510      	push	{r4, lr}
 8017d58:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8017d5c:	d908      	bls.n	8017d70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8017d5e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8017d62:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8017d66:	681a      	ldr	r2, [r3, #0]
 8017d68:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8017d6c:	685a      	ldr	r2, [r3, #4]
 8017d6e:	6062      	str	r2, [r4, #4]
 8017d70:	bd10      	pop	{r4, pc}
	...

08017d74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8017d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d78:	4b8f      	ldr	r3, [pc, #572]	; (8017fb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8017d7a:	b08f      	sub	sp, #60	; 0x3c
 8017d7c:	ac0a      	add	r4, sp, #40	; 0x28
 8017d7e:	e884 0006 	stmia.w	r4, {r1, r2}
 8017d82:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017d86:	4b8d      	ldr	r3, [pc, #564]	; (8017fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8017d88:	4683      	mov	fp, r0
 8017d8a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8017d8e:	4620      	mov	r0, r4
 8017d90:	f7ff fda1 	bl	80178d6 <_ZN8touchgfx4Rect10restrictToEss>
 8017d94:	4620      	mov	r0, r4
 8017d96:	f7f9 ff4c 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017d9a:	2800      	cmp	r0, #0
 8017d9c:	d16a      	bne.n	8017e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017d9e:	9403      	str	r4, [sp, #12]
 8017da0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017da4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8017da8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8017dac:	35a4      	adds	r5, #164	; 0xa4
 8017dae:	9301      	str	r3, [sp, #4]
 8017db0:	b15c      	cbz	r4, 8017dca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8017db2:	4629      	mov	r1, r5
 8017db4:	9803      	ldr	r0, [sp, #12]
 8017db6:	f7ff fddf 	bl	8017978 <_ZNK8touchgfx4Rect8includesERKS0_>
 8017dba:	3c01      	subs	r4, #1
 8017dbc:	b118      	cbz	r0, 8017dc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8017dbe:	b2a1      	uxth	r1, r4
 8017dc0:	9801      	ldr	r0, [sp, #4]
 8017dc2:	f7ff ffc3 	bl	8017d4c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017dc6:	3d08      	subs	r5, #8
 8017dc8:	e7f2      	b.n	8017db0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8017dca:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8017dce:	f8cd a010 	str.w	sl, [sp, #16]
 8017dd2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8017dd6:	9302      	str	r3, [sp, #8]
 8017dd8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8017ddc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8017de0:	9306      	str	r3, [sp, #24]
 8017de2:	445c      	add	r4, fp
 8017de4:	2500      	movs	r5, #0
 8017de6:	4626      	mov	r6, r4
 8017de8:	f8cd a014 	str.w	sl, [sp, #20]
 8017dec:	462f      	mov	r7, r5
 8017dee:	9b05      	ldr	r3, [sp, #20]
 8017df0:	2b00      	cmp	r3, #0
 8017df2:	d073      	beq.n	8017edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8017df4:	9903      	ldr	r1, [sp, #12]
 8017df6:	4630      	mov	r0, r6
 8017df8:	f7ff fd4b 	bl	8017892 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017dfc:	b350      	cbz	r0, 8017e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8017dfe:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8017e02:	f9b6 c000 	ldrsh.w	ip, [r6]
 8017e06:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8017e0a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8017e0e:	45e6      	cmp	lr, ip
 8017e10:	db33      	blt.n	8017e7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017e12:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8017e16:	88b3      	ldrh	r3, [r6, #4]
 8017e18:	4472      	add	r2, lr
 8017e1a:	4463      	add	r3, ip
 8017e1c:	b212      	sxth	r2, r2
 8017e1e:	b21b      	sxth	r3, r3
 8017e20:	429a      	cmp	r2, r3
 8017e22:	dc2a      	bgt.n	8017e7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017e24:	88f3      	ldrh	r3, [r6, #6]
 8017e26:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8017e2a:	fa1f f289 	uxth.w	r2, r9
 8017e2e:	4413      	add	r3, r2
 8017e30:	b29b      	uxth	r3, r3
 8017e32:	45c8      	cmp	r8, r9
 8017e34:	fa1f fc88 	uxth.w	ip, r8
 8017e38:	fa0f fe83 	sxth.w	lr, r3
 8017e3c:	db0f      	blt.n	8017e5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8017e3e:	eba3 030c 	sub.w	r3, r3, ip
 8017e42:	1ac9      	subs	r1, r1, r3
 8017e44:	b209      	sxth	r1, r1
 8017e46:	2900      	cmp	r1, #0
 8017e48:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017e4c:	dd12      	ble.n	8017e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017e4e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8017e52:	4605      	mov	r5, r0
 8017e54:	9b05      	ldr	r3, [sp, #20]
 8017e56:	3b01      	subs	r3, #1
 8017e58:	9305      	str	r3, [sp, #20]
 8017e5a:	3e08      	subs	r6, #8
 8017e5c:	e7c7      	b.n	8017dee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8017e5e:	4461      	add	r1, ip
 8017e60:	b209      	sxth	r1, r1
 8017e62:	4571      	cmp	r1, lr
 8017e64:	dc38      	bgt.n	8017ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017e66:	eba2 020c 	sub.w	r2, r2, ip
 8017e6a:	b212      	sxth	r2, r2
 8017e6c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017e70:	2a00      	cmp	r2, #0
 8017e72:	dcee      	bgt.n	8017e52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017e74:	b00f      	add	sp, #60	; 0x3c
 8017e76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e7a:	45c8      	cmp	r8, r9
 8017e7c:	db2c      	blt.n	8017ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017e7e:	88f3      	ldrh	r3, [r6, #6]
 8017e80:	4499      	add	r9, r3
 8017e82:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8017e86:	4498      	add	r8, r3
 8017e88:	fa0f f989 	sxth.w	r9, r9
 8017e8c:	fa0f f888 	sxth.w	r8, r8
 8017e90:	45c1      	cmp	r9, r8
 8017e92:	db21      	blt.n	8017ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017e94:	88b3      	ldrh	r3, [r6, #4]
 8017e96:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017e9a:	fa1f f28c 	uxth.w	r2, ip
 8017e9e:	4413      	add	r3, r2
 8017ea0:	b29b      	uxth	r3, r3
 8017ea2:	45e6      	cmp	lr, ip
 8017ea4:	fa1f f88e 	uxth.w	r8, lr
 8017ea8:	fa0f f983 	sxth.w	r9, r3
 8017eac:	db0a      	blt.n	8017ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8017eae:	eba3 0308 	sub.w	r3, r3, r8
 8017eb2:	1ac9      	subs	r1, r1, r3
 8017eb4:	b209      	sxth	r1, r1
 8017eb6:	2900      	cmp	r1, #0
 8017eb8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8017ebc:	ddda      	ble.n	8017e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017ebe:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8017ec2:	e7c6      	b.n	8017e52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017ec4:	4441      	add	r1, r8
 8017ec6:	b209      	sxth	r1, r1
 8017ec8:	4549      	cmp	r1, r9
 8017eca:	dc05      	bgt.n	8017ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017ecc:	eba2 0208 	sub.w	r2, r2, r8
 8017ed0:	b212      	sxth	r2, r2
 8017ed2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8017ed6:	e7cb      	b.n	8017e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8017ed8:	4607      	mov	r7, r0
 8017eda:	e7bb      	b.n	8017e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8017edc:	2d00      	cmp	r5, #0
 8017ede:	d181      	bne.n	8017de4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8017ee0:	2f00      	cmp	r7, #0
 8017ee2:	f000 81dd 	beq.w	80182a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017ee6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8017eea:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8017eee:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8017ef2:	b2b3      	uxth	r3, r6
 8017ef4:	9305      	str	r3, [sp, #20]
 8017ef6:	9a05      	ldr	r2, [sp, #20]
 8017ef8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017efc:	4413      	add	r3, r2
 8017efe:	b2ba      	uxth	r2, r7
 8017f00:	4492      	add	sl, r2
 8017f02:	b29b      	uxth	r3, r3
 8017f04:	fa1f fa8a 	uxth.w	sl, sl
 8017f08:	fa0f f883 	sxth.w	r8, r3
 8017f0c:	fa0f f98a 	sxth.w	r9, sl
 8017f10:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8017f14:	9b04      	ldr	r3, [sp, #16]
 8017f16:	2b00      	cmp	r3, #0
 8017f18:	d052      	beq.n	8017fc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8017f1a:	9903      	ldr	r1, [sp, #12]
 8017f1c:	4620      	mov	r0, r4
 8017f1e:	f7ff fcb8 	bl	8017892 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017f22:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8017f26:	b1c0      	cbz	r0, 8017f5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017f28:	f9b4 e000 	ldrsh.w	lr, [r4]
 8017f2c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017f30:	4576      	cmp	r6, lr
 8017f32:	dc22      	bgt.n	8017f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017f34:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017f38:	44f4      	add	ip, lr
 8017f3a:	fa0f fc8c 	sxth.w	ip, ip
 8017f3e:	45e0      	cmp	r8, ip
 8017f40:	db1b      	blt.n	8017f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017f42:	428f      	cmp	r7, r1
 8017f44:	fa1f fc81 	uxth.w	ip, r1
 8017f48:	88e1      	ldrh	r1, [r4, #6]
 8017f4a:	dc0d      	bgt.n	8017f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8017f4c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8017f50:	eba1 010c 	sub.w	r1, r1, ip
 8017f54:	f8a4 9002 	strh.w	r9, [r4, #2]
 8017f58:	80e1      	strh	r1, [r4, #6]
 8017f5a:	4628      	mov	r0, r5
 8017f5c:	9904      	ldr	r1, [sp, #16]
 8017f5e:	3901      	subs	r1, #1
 8017f60:	9104      	str	r1, [sp, #16]
 8017f62:	3c08      	subs	r4, #8
 8017f64:	4605      	mov	r5, r0
 8017f66:	e7d3      	b.n	8017f10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8017f68:	4461      	add	r1, ip
 8017f6a:	b209      	sxth	r1, r1
 8017f6c:	4549      	cmp	r1, r9
 8017f6e:	dcf5      	bgt.n	8017f5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017f70:	eba2 0c0c 	sub.w	ip, r2, ip
 8017f74:	f8a4 c006 	strh.w	ip, [r4, #6]
 8017f78:	e7ef      	b.n	8017f5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017f7a:	428f      	cmp	r7, r1
 8017f7c:	dcee      	bgt.n	8017f5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017f7e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8017f82:	4461      	add	r1, ip
 8017f84:	b209      	sxth	r1, r1
 8017f86:	4589      	cmp	r9, r1
 8017f88:	dbe8      	blt.n	8017f5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017f8a:	4576      	cmp	r6, lr
 8017f8c:	fa1f fc8e 	uxth.w	ip, lr
 8017f90:	88a1      	ldrh	r1, [r4, #4]
 8017f92:	dc07      	bgt.n	8017fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8017f94:	eba3 0c0c 	sub.w	ip, r3, ip
 8017f98:	eba1 010c 	sub.w	r1, r1, ip
 8017f9c:	f8a4 8000 	strh.w	r8, [r4]
 8017fa0:	80a1      	strh	r1, [r4, #4]
 8017fa2:	e7da      	b.n	8017f5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017fa4:	4461      	add	r1, ip
 8017fa6:	b209      	sxth	r1, r1
 8017fa8:	4588      	cmp	r8, r1
 8017faa:	dbd7      	blt.n	8017f5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017fac:	9905      	ldr	r1, [sp, #20]
 8017fae:	eba1 0c0c 	sub.w	ip, r1, ip
 8017fb2:	f8a4 c004 	strh.w	ip, [r4, #4]
 8017fb6:	e7d0      	b.n	8017f5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017fb8:	20013842 	.word	0x20013842
 8017fbc:	20013840 	.word	0x20013840
 8017fc0:	2d00      	cmp	r5, #0
 8017fc2:	f000 816d 	beq.w	80182a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017fc6:	9b06      	ldr	r3, [sp, #24]
 8017fc8:	445b      	add	r3, fp
 8017fca:	461c      	mov	r4, r3
 8017fcc:	9b02      	ldr	r3, [sp, #8]
 8017fce:	3301      	adds	r3, #1
 8017fd0:	f000 8166 	beq.w	80182a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017fd4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8017fd8:	4629      	mov	r1, r5
 8017fda:	9803      	ldr	r0, [sp, #12]
 8017fdc:	f7ff fccc 	bl	8017978 <_ZNK8touchgfx4Rect8includesERKS0_>
 8017fe0:	b120      	cbz	r0, 8017fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8017fe2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017fe6:	9801      	ldr	r0, [sp, #4]
 8017fe8:	f7ff feb0 	bl	8017d4c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017fec:	9903      	ldr	r1, [sp, #12]
 8017fee:	4628      	mov	r0, r5
 8017ff0:	f7ff fc4f 	bl	8017892 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017ff4:	2800      	cmp	r0, #0
 8017ff6:	f000 809c 	beq.w	8018132 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8017ffa:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8017ffe:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018002:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018006:	9309      	str	r3, [sp, #36]	; 0x24
 8018008:	fa1f f189 	uxth.w	r1, r9
 801800c:	eb01 0c03 	add.w	ip, r1, r3
 8018010:	fa1f fa8c 	uxth.w	sl, ip
 8018014:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018018:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801801c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8018020:	b283      	uxth	r3, r0
 8018022:	eb03 050c 	add.w	r5, r3, ip
 8018026:	b2ad      	uxth	r5, r5
 8018028:	9505      	str	r5, [sp, #20]
 801802a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801802e:	9504      	str	r5, [sp, #16]
 8018030:	4548      	cmp	r0, r9
 8018032:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8018036:	f340 8099 	ble.w	801816c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801803a:	1a5b      	subs	r3, r3, r1
 801803c:	b29b      	uxth	r3, r3
 801803e:	4596      	cmp	lr, r2
 8018040:	fa0f f08a 	sxth.w	r0, sl
 8018044:	b21e      	sxth	r6, r3
 8018046:	dd2e      	ble.n	80180a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8018048:	9f02      	ldr	r7, [sp, #8]
 801804a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801804e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8018052:	9f04      	ldr	r7, [sp, #16]
 8018054:	1a3f      	subs	r7, r7, r0
 8018056:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801805a:	fa1f fe8e 	uxth.w	lr, lr
 801805e:	b292      	uxth	r2, r2
 8018060:	ebae 0102 	sub.w	r1, lr, r2
 8018064:	44a6      	add	lr, r4
 8018066:	4402      	add	r2, r0
 8018068:	b289      	uxth	r1, r1
 801806a:	fa0f fe8e 	sxth.w	lr, lr
 801806e:	b212      	sxth	r2, r2
 8018070:	b20d      	sxth	r5, r1
 8018072:	ebae 0202 	sub.w	r2, lr, r2
 8018076:	436f      	muls	r7, r5
 8018078:	4372      	muls	r2, r6
 801807a:	4297      	cmp	r7, r2
 801807c:	db09      	blt.n	8018092 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801807e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8018082:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8018086:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801808a:	449c      	add	ip, r3
 801808c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018090:	e686      	b.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018092:	4421      	add	r1, r4
 8018094:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8018098:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801809c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80180a0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80180a4:	e67c      	b.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80180a6:	9f04      	ldr	r7, [sp, #16]
 80180a8:	42b8      	cmp	r0, r7
 80180aa:	da27      	bge.n	80180fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80180ac:	9902      	ldr	r1, [sp, #8]
 80180ae:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80180b2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80180b6:	eb05 010e 	add.w	r1, r5, lr
 80180ba:	fa1f f881 	uxth.w	r8, r1
 80180be:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80180c2:	4411      	add	r1, r2
 80180c4:	eba1 0108 	sub.w	r1, r1, r8
 80180c8:	b289      	uxth	r1, r1
 80180ca:	fa0f f988 	sxth.w	r9, r8
 80180ce:	eba2 020e 	sub.w	r2, r2, lr
 80180d2:	fa0f f881 	sxth.w	r8, r1
 80180d6:	1a3f      	subs	r7, r7, r0
 80180d8:	4372      	muls	r2, r6
 80180da:	fb08 f707 	mul.w	r7, r8, r7
 80180de:	42ba      	cmp	r2, r7
 80180e0:	dc06      	bgt.n	80180f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80180e2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80180e6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80180ea:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80180ee:	e7ca      	b.n	8018086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80180f0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80180f4:	4429      	add	r1, r5
 80180f6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80180fa:	e651      	b.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80180fc:	9805      	ldr	r0, [sp, #20]
 80180fe:	ebaa 0000 	sub.w	r0, sl, r0
 8018102:	b280      	uxth	r0, r0
 8018104:	2d06      	cmp	r5, #6
 8018106:	fa0f fe80 	sxth.w	lr, r0
 801810a:	d817      	bhi.n	801813c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801810c:	9b04      	ldr	r3, [sp, #16]
 801810e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018112:	1c6b      	adds	r3, r5, #1
 8018114:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8018118:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801811c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8018120:	9b01      	ldr	r3, [sp, #4]
 8018122:	9801      	ldr	r0, [sp, #4]
 8018124:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8018128:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801812c:	805a      	strh	r2, [r3, #2]
 801812e:	809e      	strh	r6, [r3, #4]
 8018130:	80d9      	strh	r1, [r3, #6]
 8018132:	9b02      	ldr	r3, [sp, #8]
 8018134:	3b01      	subs	r3, #1
 8018136:	9302      	str	r3, [sp, #8]
 8018138:	3c08      	subs	r4, #8
 801813a:	e747      	b.n	8017fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801813c:	9a02      	ldr	r2, [sp, #8]
 801813e:	45b6      	cmp	lr, r6
 8018140:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8018144:	db0d      	blt.n	8018162 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8018146:	449c      	add	ip, r3
 8018148:	fa1f fc8c 	uxth.w	ip, ip
 801814c:	445a      	add	r2, fp
 801814e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018152:	448c      	add	ip, r1
 8018154:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018158:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801815c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8018160:	e61e      	b.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018162:	445a      	add	r2, fp
 8018164:	4484      	add	ip, r0
 8018166:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801816a:	e78f      	b.n	801808c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801816c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8018170:	fa1f f18e 	uxth.w	r1, lr
 8018174:	eb01 0806 	add.w	r8, r1, r6
 8018178:	b293      	uxth	r3, r2
 801817a:	fa1f f888 	uxth.w	r8, r8
 801817e:	9306      	str	r3, [sp, #24]
 8018180:	fa0f f388 	sxth.w	r3, r8
 8018184:	9307      	str	r3, [sp, #28]
 8018186:	9f06      	ldr	r7, [sp, #24]
 8018188:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801818c:	443b      	add	r3, r7
 801818e:	b29b      	uxth	r3, r3
 8018190:	4596      	cmp	lr, r2
 8018192:	9308      	str	r3, [sp, #32]
 8018194:	da24      	bge.n	80181e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8018196:	9905      	ldr	r1, [sp, #20]
 8018198:	eba3 0308 	sub.w	r3, r3, r8
 801819c:	ebaa 0401 	sub.w	r4, sl, r1
 80181a0:	b2a4      	uxth	r4, r4
 80181a2:	b29b      	uxth	r3, r3
 80181a4:	b225      	sxth	r5, r4
 80181a6:	b219      	sxth	r1, r3
 80181a8:	eba2 020e 	sub.w	r2, r2, lr
 80181ac:	eba9 0000 	sub.w	r0, r9, r0
 80181b0:	436a      	muls	r2, r5
 80181b2:	4348      	muls	r0, r1
 80181b4:	4282      	cmp	r2, r0
 80181b6:	9a02      	ldr	r2, [sp, #8]
 80181b8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80181bc:	445a      	add	r2, fp
 80181be:	dc06      	bgt.n	80181ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80181c0:	9b07      	ldr	r3, [sp, #28]
 80181c2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80181c6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80181ca:	44a4      	add	ip, r4
 80181cc:	e75e      	b.n	801808c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80181ce:	9904      	ldr	r1, [sp, #16]
 80181d0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80181d4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80181d8:	4433      	add	r3, r6
 80181da:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80181de:	e5df      	b.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80181e0:	9f06      	ldr	r7, [sp, #24]
 80181e2:	9b04      	ldr	r3, [sp, #16]
 80181e4:	1bc9      	subs	r1, r1, r7
 80181e6:	fa0f f78a 	sxth.w	r7, sl
 80181ea:	b289      	uxth	r1, r1
 80181ec:	429f      	cmp	r7, r3
 80181ee:	fa0f fe81 	sxth.w	lr, r1
 80181f2:	dd23      	ble.n	801823c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80181f4:	9a05      	ldr	r2, [sp, #20]
 80181f6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80181fa:	9d07      	ldr	r5, [sp, #28]
 80181fc:	ebaa 0202 	sub.w	r2, sl, r2
 8018200:	b292      	uxth	r2, r2
 8018202:	eba5 0a03 	sub.w	sl, r5, r3
 8018206:	b214      	sxth	r4, r2
 8018208:	eba9 0000 	sub.w	r0, r9, r0
 801820c:	9b02      	ldr	r3, [sp, #8]
 801820e:	fb0e f000 	mul.w	r0, lr, r0
 8018212:	fb04 fa0a 	mul.w	sl, r4, sl
 8018216:	00db      	lsls	r3, r3, #3
 8018218:	4550      	cmp	r0, sl
 801821a:	445b      	add	r3, fp
 801821c:	db03      	blt.n	8018226 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801821e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8018222:	4494      	add	ip, r2
 8018224:	e732      	b.n	801808c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8018226:	9a04      	ldr	r2, [sp, #16]
 8018228:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801822c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8018230:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8018234:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018238:	4431      	add	r1, r6
 801823a:	e75c      	b.n	80180f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801823c:	9b08      	ldr	r3, [sp, #32]
 801823e:	eba3 0308 	sub.w	r3, r3, r8
 8018242:	b29b      	uxth	r3, r3
 8018244:	2d06      	cmp	r5, #6
 8018246:	b218      	sxth	r0, r3
 8018248:	d813      	bhi.n	8018272 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801824a:	9b07      	ldr	r3, [sp, #28]
 801824c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8018250:	1c6b      	adds	r3, r5, #1
 8018252:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8018256:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801825a:	9b01      	ldr	r3, [sp, #4]
 801825c:	9901      	ldr	r1, [sp, #4]
 801825e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8018262:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8018266:	805a      	strh	r2, [r3, #2]
 8018268:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801826a:	809a      	strh	r2, [r3, #4]
 801826c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8018270:	e75f      	b.n	8018132 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018272:	9c02      	ldr	r4, [sp, #8]
 8018274:	4570      	cmp	r0, lr
 8018276:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801827a:	db0d      	blt.n	8018298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801827c:	4431      	add	r1, r6
 801827e:	9b06      	ldr	r3, [sp, #24]
 8018280:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8018284:	b289      	uxth	r1, r1
 8018286:	445c      	add	r4, fp
 8018288:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801828c:	4419      	add	r1, r3
 801828e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8018292:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8018296:	e583      	b.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018298:	445c      	add	r4, fp
 801829a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801829e:	e79b      	b.n	80181d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80182a0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80182a4:	1e65      	subs	r5, r4, #1
 80182a6:	b2ad      	uxth	r5, r5
 80182a8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80182ac:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80182b0:	42b5      	cmp	r5, r6
 80182b2:	d044      	beq.n	801833e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80182b4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80182b8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80182bc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80182c0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80182c4:	4282      	cmp	r2, r0
 80182c6:	d11f      	bne.n	8018308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80182c8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80182cc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80182d0:	459c      	cmp	ip, r3
 80182d2:	d119      	bne.n	8018308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80182d4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80182d8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80182dc:	19d8      	adds	r0, r3, r7
 80182de:	b200      	sxth	r0, r0
 80182e0:	4288      	cmp	r0, r1
 80182e2:	d109      	bne.n	80182f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80182e4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80182e8:	4413      	add	r3, r2
 80182ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80182ee:	4629      	mov	r1, r5
 80182f0:	9801      	ldr	r0, [sp, #4]
 80182f2:	f7ff fd2b 	bl	8017d4c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80182f6:	e003      	b.n	8018300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80182f8:	4411      	add	r1, r2
 80182fa:	b209      	sxth	r1, r1
 80182fc:	42b9      	cmp	r1, r7
 80182fe:	d0f3      	beq.n	80182e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8018300:	3d01      	subs	r5, #1
 8018302:	b2ad      	uxth	r5, r5
 8018304:	3c08      	subs	r4, #8
 8018306:	e7d3      	b.n	80182b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8018308:	42b9      	cmp	r1, r7
 801830a:	d1f9      	bne.n	8018300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801830c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8018310:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018314:	4299      	cmp	r1, r3
 8018316:	d1f3      	bne.n	8018300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8018318:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801831c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018320:	181f      	adds	r7, r3, r0
 8018322:	b23f      	sxth	r7, r7
 8018324:	42ba      	cmp	r2, r7
 8018326:	d105      	bne.n	8018334 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8018328:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801832c:	440b      	add	r3, r1
 801832e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8018332:	e7dc      	b.n	80182ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8018334:	440a      	add	r2, r1
 8018336:	b212      	sxth	r2, r2
 8018338:	4290      	cmp	r0, r2
 801833a:	d1e1      	bne.n	8018300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801833c:	e7f6      	b.n	801832c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801833e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8018342:	2e07      	cmp	r6, #7
 8018344:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8018348:	d812      	bhi.n	8018370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801834a:	1c75      	adds	r5, r6, #1
 801834c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8018350:	9d01      	ldr	r5, [sp, #4]
 8018352:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018356:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801835a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801835e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8018362:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8018366:	442c      	add	r4, r5
 8018368:	8061      	strh	r1, [r4, #2]
 801836a:	80a2      	strh	r2, [r4, #4]
 801836c:	80e3      	strh	r3, [r4, #6]
 801836e:	e581      	b.n	8017e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018370:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018374:	3e01      	subs	r6, #1
 8018376:	445c      	add	r4, fp
 8018378:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801837c:	f04f 37ff 	mov.w	r7, #4294967295
 8018380:	2500      	movs	r5, #0
 8018382:	9305      	str	r3, [sp, #20]
 8018384:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018388:	9302      	str	r3, [sp, #8]
 801838a:	1e72      	subs	r2, r6, #1
 801838c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8018390:	9304      	str	r3, [sp, #16]
 8018392:	4691      	mov	r9, r2
 8018394:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8018398:	f1b9 3fff 	cmp.w	r9, #4294967295
 801839c:	bf14      	ite	ne
 801839e:	9905      	ldrne	r1, [sp, #20]
 80183a0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80183a4:	6818      	ldr	r0, [r3, #0]
 80183a6:	9207      	str	r2, [sp, #28]
 80183a8:	bf18      	it	ne
 80183aa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80183ae:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80183b2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80183b6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80183ba:	9306      	str	r3, [sp, #24]
 80183bc:	fb18 f801 	smulbb	r8, r8, r1
 80183c0:	6859      	ldr	r1, [r3, #4]
 80183c2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80183c6:	4671      	mov	r1, lr
 80183c8:	a80c      	add	r0, sp, #48	; 0x30
 80183ca:	f7ff fafb 	bl	80179c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80183ce:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80183d2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80183d6:	9b04      	ldr	r3, [sp, #16]
 80183d8:	9a02      	ldr	r2, [sp, #8]
 80183da:	fb10 f001 	smulbb	r0, r0, r1
 80183de:	fb02 8803 	mla	r8, r2, r3, r8
 80183e2:	eba0 0108 	sub.w	r1, r0, r8
 80183e6:	f04f 0c08 	mov.w	ip, #8
 80183ea:	fb90 f0fc 	sdiv	r0, r0, ip
 80183ee:	4288      	cmp	r0, r1
 80183f0:	dc20      	bgt.n	8018434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80183f2:	4551      	cmp	r1, sl
 80183f4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80183f8:	da03      	bge.n	8018402 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80183fa:	b1d9      	cbz	r1, 8018434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80183fc:	468a      	mov	sl, r1
 80183fe:	464f      	mov	r7, r9
 8018400:	4635      	mov	r5, r6
 8018402:	f109 39ff 	add.w	r9, r9, #4294967295
 8018406:	f119 0f02 	cmn.w	r9, #2
 801840a:	d1c5      	bne.n	8018398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801840c:	4616      	mov	r6, r2
 801840e:	3201      	adds	r2, #1
 8018410:	f1a4 0408 	sub.w	r4, r4, #8
 8018414:	d1b6      	bne.n	8018384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8018416:	9b01      	ldr	r3, [sp, #4]
 8018418:	b2ac      	uxth	r4, r5
 801841a:	00ed      	lsls	r5, r5, #3
 801841c:	1958      	adds	r0, r3, r5
 801841e:	1c7b      	adds	r3, r7, #1
 8018420:	d10b      	bne.n	801843a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8018422:	4601      	mov	r1, r0
 8018424:	9803      	ldr	r0, [sp, #12]
 8018426:	f7ff facd 	bl	80179c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801842a:	4621      	mov	r1, r4
 801842c:	9801      	ldr	r0, [sp, #4]
 801842e:	f7ff fc8d 	bl	8017d4c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018432:	e4b5      	b.n	8017da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018434:	464f      	mov	r7, r9
 8018436:	4635      	mov	r5, r6
 8018438:	e7ed      	b.n	8018416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801843a:	9b01      	ldr	r3, [sp, #4]
 801843c:	00ff      	lsls	r7, r7, #3
 801843e:	19d9      	adds	r1, r3, r7
 8018440:	f7ff fac0 	bl	80179c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8018444:	9b03      	ldr	r3, [sp, #12]
 8018446:	cb03      	ldmia	r3!, {r0, r1}
 8018448:	445f      	add	r7, fp
 801844a:	445d      	add	r5, fp
 801844c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8018450:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8018454:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8018458:	9b03      	ldr	r3, [sp, #12]
 801845a:	6869      	ldr	r1, [r5, #4]
 801845c:	c303      	stmia	r3!, {r0, r1}
 801845e:	e7e4      	b.n	801842a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08018460 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8018460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018464:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8018468:	b09b      	sub	sp, #108	; 0x6c
 801846a:	4604      	mov	r4, r0
 801846c:	4630      	mov	r0, r6
 801846e:	f7f9 fbe0 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018472:	4605      	mov	r5, r0
 8018474:	b948      	cbnz	r0, 801848a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8018476:	6823      	ldr	r3, [r4, #0]
 8018478:	e896 0006 	ldmia.w	r6, {r1, r2}
 801847c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801847e:	4620      	mov	r0, r4
 8018480:	4798      	blx	r3
 8018482:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8018486:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801848a:	4bc6      	ldr	r3, [pc, #792]	; (80187a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801848c:	681b      	ldr	r3, [r3, #0]
 801848e:	2b00      	cmp	r3, #0
 8018490:	d03f      	beq.n	8018512 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8018492:	4dc5      	ldr	r5, [pc, #788]	; (80187a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8018494:	4628      	mov	r0, r5
 8018496:	f7f9 fbcc 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 801849a:	4606      	mov	r6, r0
 801849c:	2800      	cmp	r0, #0
 801849e:	d138      	bne.n	8018512 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80184a0:	4628      	mov	r0, r5
 80184a2:	f7ff f907 	bl	80176b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80184a6:	6823      	ldr	r3, [r4, #0]
 80184a8:	6829      	ldr	r1, [r5, #0]
 80184aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80184ac:	686a      	ldr	r2, [r5, #4]
 80184ae:	4620      	mov	r0, r4
 80184b0:	4798      	blx	r3
 80184b2:	802e      	strh	r6, [r5, #0]
 80184b4:	806e      	strh	r6, [r5, #2]
 80184b6:	80ae      	strh	r6, [r5, #4]
 80184b8:	80ee      	strh	r6, [r5, #6]
 80184ba:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80184be:	4dbb      	ldr	r5, [pc, #748]	; (80187ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80184c0:	4640      	mov	r0, r8
 80184c2:	f7ff fbeb 	bl	8017c9c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80184c6:	882e      	ldrh	r6, [r5, #0]
 80184c8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80184cc:	4633      	mov	r3, r6
 80184ce:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80184d2:	42bb      	cmp	r3, r7
 80184d4:	d224      	bcs.n	8018520 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80184d6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80184da:	2907      	cmp	r1, #7
 80184dc:	d816      	bhi.n	801850c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80184de:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80184e2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80184e6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80184ea:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80184ee:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80184f2:	1c4a      	adds	r2, r1, #1
 80184f4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80184f8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80184fc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8018500:	f8a2 a002 	strh.w	sl, [r2, #2]
 8018504:	f8a2 e004 	strh.w	lr, [r2, #4]
 8018508:	f8a2 c006 	strh.w	ip, [r2, #6]
 801850c:	3301      	adds	r3, #1
 801850e:	b29b      	uxth	r3, r3
 8018510:	e7df      	b.n	80184d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8018512:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8018516:	2b00      	cmp	r3, #0
 8018518:	d1cf      	bne.n	80184ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801851a:	b01b      	add	sp, #108	; 0x6c
 801851c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018520:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8018524:	42b3      	cmp	r3, r6
 8018526:	d90c      	bls.n	8018542 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8018528:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801852c:	6822      	ldr	r2, [r4, #0]
 801852e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8018532:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8018534:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8018538:	4620      	mov	r0, r4
 801853a:	3601      	adds	r6, #1
 801853c:	47b8      	blx	r7
 801853e:	b2b6      	uxth	r6, r6
 8018540:	e7ee      	b.n	8018520 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8018542:	4a9b      	ldr	r2, [pc, #620]	; (80187b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8018544:	6813      	ldr	r3, [r2, #0]
 8018546:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801854a:	2b01      	cmp	r3, #1
 801854c:	4691      	mov	r9, r2
 801854e:	f040 80e2 	bne.w	8018716 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8018552:	8829      	ldrh	r1, [r5, #0]
 8018554:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8018558:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801855c:	33ae      	adds	r3, #174	; 0xae
 801855e:	2600      	movs	r6, #0
 8018560:	428f      	cmp	r7, r1
 8018562:	f103 0308 	add.w	r3, r3, #8
 8018566:	dd0a      	ble.n	801857e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8018568:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801856c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8018570:	4402      	add	r2, r0
 8018572:	b212      	sxth	r2, r2
 8018574:	4296      	cmp	r6, r2
 8018576:	bfb8      	it	lt
 8018578:	4616      	movlt	r6, r2
 801857a:	3101      	adds	r1, #1
 801857c:	e7f0      	b.n	8018560 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801857e:	4b8d      	ldr	r3, [pc, #564]	; (80187b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8018580:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80187b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8018584:	881b      	ldrh	r3, [r3, #0]
 8018586:	2b0f      	cmp	r3, #15
 8018588:	bf88      	it	hi
 801858a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801858e:	f04f 0300 	mov.w	r3, #0
 8018592:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8018596:	bf98      	it	ls
 8018598:	f04f 0b01 	movls.w	fp, #1
 801859c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80185a0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80185a4:	4b82      	ldr	r3, [pc, #520]	; (80187b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80185a6:	4438      	add	r0, r7
 80185a8:	b207      	sxth	r7, r0
 80185aa:	6818      	ldr	r0, [r3, #0]
 80185ac:	42b7      	cmp	r7, r6
 80185ae:	6803      	ldr	r3, [r0, #0]
 80185b0:	f280 8083 	bge.w	80186ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80185b4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80185b8:	4798      	blx	r3
 80185ba:	eb07 030b 	add.w	r3, r7, fp
 80185be:	4298      	cmp	r0, r3
 80185c0:	da07      	bge.n	80185d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80185c2:	42b0      	cmp	r0, r6
 80185c4:	da05      	bge.n	80185d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80185c6:	4287      	cmp	r7, r0
 80185c8:	dd6c      	ble.n	80186a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80185ca:	2f00      	cmp	r7, #0
 80185cc:	dd6a      	ble.n	80186a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80185ce:	4630      	mov	r0, r6
 80185d0:	e004      	b.n	80185dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80185d2:	4287      	cmp	r7, r0
 80185d4:	dcfb      	bgt.n	80185ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80185d6:	42b0      	cmp	r0, r6
 80185d8:	bfa8      	it	ge
 80185da:	4630      	movge	r0, r6
 80185dc:	4b76      	ldr	r3, [pc, #472]	; (80187b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80185de:	f8ad 7016 	strh.w	r7, [sp, #22]
 80185e2:	1bc0      	subs	r0, r0, r7
 80185e4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80185e8:	882f      	ldrh	r7, [r5, #0]
 80185ea:	f8ad 3018 	strh.w	r3, [sp, #24]
 80185ee:	2200      	movs	r2, #0
 80185f0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80185f4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80185f8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80185fc:	42bb      	cmp	r3, r7
 80185fe:	d9cd      	bls.n	801859c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8018600:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8018604:	ab07      	add	r3, sp, #28
 8018606:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801860a:	6851      	ldr	r1, [r2, #4]
 801860c:	c303      	stmia	r3!, {r0, r1}
 801860e:	a905      	add	r1, sp, #20
 8018610:	a807      	add	r0, sp, #28
 8018612:	f7ff f93e 	bl	8017892 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018616:	2800      	cmp	r0, #0
 8018618:	d04c      	beq.n	80186b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801861a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801861e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8018622:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8018626:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801862a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801862e:	9302      	str	r3, [sp, #8]
 8018630:	4686      	mov	lr, r0
 8018632:	4290      	cmp	r0, r2
 8018634:	4450      	add	r0, sl
 8018636:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801863a:	bfb8      	it	lt
 801863c:	4696      	movlt	lr, r2
 801863e:	4452      	add	r2, sl
 8018640:	4299      	cmp	r1, r3
 8018642:	b280      	uxth	r0, r0
 8018644:	b292      	uxth	r2, r2
 8018646:	468c      	mov	ip, r1
 8018648:	fa0f fa82 	sxth.w	sl, r2
 801864c:	bfb8      	it	lt
 801864e:	469c      	movlt	ip, r3
 8018650:	b203      	sxth	r3, r0
 8018652:	4553      	cmp	r3, sl
 8018654:	bfb8      	it	lt
 8018656:	4602      	movlt	r2, r0
 8018658:	eba2 020e 	sub.w	r2, r2, lr
 801865c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8018660:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8018664:	9b02      	ldr	r3, [sp, #8]
 8018666:	f8ad e01c 	strh.w	lr, [sp, #28]
 801866a:	4411      	add	r1, r2
 801866c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8018670:	f8ad c01e 	strh.w	ip, [sp, #30]
 8018674:	4413      	add	r3, r2
 8018676:	b289      	uxth	r1, r1
 8018678:	b29b      	uxth	r3, r3
 801867a:	b208      	sxth	r0, r1
 801867c:	b21a      	sxth	r2, r3
 801867e:	4290      	cmp	r0, r2
 8018680:	bfb8      	it	lt
 8018682:	460b      	movlt	r3, r1
 8018684:	eba3 030c 	sub.w	r3, r3, ip
 8018688:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801868c:	a807      	add	r0, sp, #28
 801868e:	f7f9 fad0 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018692:	b920      	cbnz	r0, 801869e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8018694:	6823      	ldr	r3, [r4, #0]
 8018696:	a907      	add	r1, sp, #28
 8018698:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801869a:	4620      	mov	r0, r4
 801869c:	4798      	blx	r3
 801869e:	3701      	adds	r7, #1
 80186a0:	b2bf      	uxth	r7, r7
 80186a2:	e7a9      	b.n	80185f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80186a4:	f8d9 0000 	ldr.w	r0, [r9]
 80186a8:	6803      	ldr	r3, [r0, #0]
 80186aa:	2101      	movs	r1, #1
 80186ac:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80186b0:	4798      	blx	r3
 80186b2:	e773      	b.n	801859c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80186b4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80186b8:	e7e8      	b.n	801868c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80186ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80186bc:	4798      	blx	r3
 80186be:	4b3f      	ldr	r3, [pc, #252]	; (80187bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80186c0:	781b      	ldrb	r3, [r3, #0]
 80186c2:	2b00      	cmp	r3, #0
 80186c4:	f43f af29 	beq.w	801851a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80186c8:	2300      	movs	r3, #0
 80186ca:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80186ce:	882b      	ldrh	r3, [r5, #0]
 80186d0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80186d4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80186d8:	42ab      	cmp	r3, r5
 80186da:	f4bf af1e 	bcs.w	801851a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80186de:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80186e2:	2907      	cmp	r1, #7
 80186e4:	d814      	bhi.n	8018710 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80186e6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80186ea:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80186ee:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80186f2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80186f6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80186fa:	1c4a      	adds	r2, r1, #1
 80186fc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8018700:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8018704:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8018708:	f8a2 c002 	strh.w	ip, [r2, #2]
 801870c:	8097      	strh	r7, [r2, #4]
 801870e:	80d6      	strh	r6, [r2, #6]
 8018710:	3301      	adds	r3, #1
 8018712:	b29b      	uxth	r3, r3
 8018714:	e7e0      	b.n	80186d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8018716:	2b02      	cmp	r3, #2
 8018718:	f040 8133 	bne.w	8018982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801871c:	4b28      	ldr	r3, [pc, #160]	; (80187c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801871e:	781b      	ldrb	r3, [r3, #0]
 8018720:	2b01      	cmp	r3, #1
 8018722:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8018726:	f000 8098 	beq.w	801885a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801872a:	882a      	ldrh	r2, [r5, #0]
 801872c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8018730:	3201      	adds	r2, #1
 8018732:	b292      	uxth	r2, r2
 8018734:	2900      	cmp	r1, #0
 8018736:	d0c2      	beq.n	80186be <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8018738:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801873c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8018740:	441e      	add	r6, r3
 8018742:	b236      	sxth	r6, r6
 8018744:	4694      	mov	ip, r2
 8018746:	f04f 0900 	mov.w	r9, #0
 801874a:	fa1f f38c 	uxth.w	r3, ip
 801874e:	4299      	cmp	r1, r3
 8018750:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8018754:	f240 80bf 	bls.w	80188d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8018758:	4427      	add	r7, r4
 801875a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801875e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8018762:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8018766:	4283      	cmp	r3, r0
 8018768:	f340 80a1 	ble.w	80188ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801876c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8018770:	4406      	add	r6, r0
 8018772:	b236      	sxth	r6, r6
 8018774:	429e      	cmp	r6, r3
 8018776:	bfa8      	it	ge
 8018778:	461e      	movge	r6, r3
 801877a:	46e1      	mov	r9, ip
 801877c:	f10c 0c01 	add.w	ip, ip, #1
 8018780:	e7e3      	b.n	801874a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8018782:	d10a      	bne.n	801879a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8018784:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8018788:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801878c:	4562      	cmp	r2, ip
 801878e:	bfb8      	it	lt
 8018790:	4662      	movlt	r2, ip
 8018792:	4288      	cmp	r0, r1
 8018794:	bfb8      	it	lt
 8018796:	461f      	movlt	r7, r3
 8018798:	e087      	b.n	80188aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801879a:	428a      	cmp	r2, r1
 801879c:	bfb8      	it	lt
 801879e:	460a      	movlt	r2, r1
 80187a0:	e083      	b.n	80188aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80187a2:	bf00      	nop
 80187a4:	2001388c 	.word	0x2001388c
 80187a8:	20013898 	.word	0x20013898
 80187ac:	2000008c 	.word	0x2000008c
 80187b0:	2001384c 	.word	0x2001384c
 80187b4:	20013842 	.word	0x20013842
 80187b8:	20013840 	.word	0x20013840
 80187bc:	2001384a 	.word	0x2001384a
 80187c0:	20013844 	.word	0x20013844
 80187c4:	19a1      	adds	r1, r4, r6
 80187c6:	ab07      	add	r3, sp, #28
 80187c8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80187cc:	6849      	ldr	r1, [r1, #4]
 80187ce:	c303      	stmia	r3!, {r0, r1}
 80187d0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80187d4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80187d8:	2b13      	cmp	r3, #19
 80187da:	bfd8      	it	le
 80187dc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80187e0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80187e4:	440b      	add	r3, r1
 80187e6:	1a9b      	subs	r3, r3, r2
 80187e8:	a807      	add	r0, sp, #28
 80187ea:	f8ad 3020 	strh.w	r3, [sp, #32]
 80187ee:	f7fe ff7b 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80187f2:	a807      	add	r0, sp, #28
 80187f4:	f7f9 fa1d 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 80187f8:	bb78      	cbnz	r0, 801885a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80187fa:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80187fe:	f8d9 0000 	ldr.w	r0, [r9]
 8018802:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8018806:	f8d0 e000 	ldr.w	lr, [r0]
 801880a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801880e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8018812:	f1bc 0f14 	cmp.w	ip, #20
 8018816:	bfa8      	it	ge
 8018818:	f04f 0c14 	movge.w	ip, #20
 801881c:	fa1f fc8c 	uxth.w	ip, ip
 8018820:	f8cd c000 	str.w	ip, [sp]
 8018824:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8018828:	47d8      	blx	fp
 801882a:	4683      	mov	fp, r0
 801882c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8018830:	a807      	add	r0, sp, #28
 8018832:	f7fe ff3f 	bl	80176b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8018836:	6823      	ldr	r3, [r4, #0]
 8018838:	4426      	add	r6, r4
 801883a:	4620      	mov	r0, r4
 801883c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801883e:	a907      	add	r1, sp, #28
 8018840:	4798      	blx	r3
 8018842:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8018846:	eba0 000b 	sub.w	r0, r0, fp
 801884a:	b200      	sxth	r0, r0
 801884c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8018850:	b918      	cbnz	r0, 801885a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8018852:	b2b9      	uxth	r1, r7
 8018854:	4650      	mov	r0, sl
 8018856:	f7ff fa79 	bl	8017d4c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801885a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801885e:	f1bb 0f00 	cmp.w	fp, #0
 8018862:	f43f af2c 	beq.w	80186be <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8018866:	882b      	ldrh	r3, [r5, #0]
 8018868:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801886c:	3301      	adds	r3, #1
 801886e:	b29b      	uxth	r3, r3
 8018870:	2700      	movs	r7, #0
 8018872:	b299      	uxth	r1, r3
 8018874:	458b      	cmp	fp, r1
 8018876:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801887a:	d9a3      	bls.n	80187c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801887c:	4426      	add	r6, r4
 801887e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8018882:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8018886:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801888a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801888e:	4408      	add	r0, r1
 8018890:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8018894:	4461      	add	r1, ip
 8018896:	b200      	sxth	r0, r0
 8018898:	b209      	sxth	r1, r1
 801889a:	4288      	cmp	r0, r1
 801889c:	f6bf af71 	bge.w	8018782 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80188a0:	4584      	cmp	ip, r0
 80188a2:	4662      	mov	r2, ip
 80188a4:	461f      	mov	r7, r3
 80188a6:	bfb8      	it	lt
 80188a8:	4602      	movlt	r2, r0
 80188aa:	3301      	adds	r3, #1
 80188ac:	e7e1      	b.n	8018872 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80188ae:	d10e      	bne.n	80188ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80188b0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80188b4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80188b8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80188bc:	4473      	add	r3, lr
 80188be:	b21b      	sxth	r3, r3
 80188c0:	429e      	cmp	r6, r3
 80188c2:	bfa8      	it	ge
 80188c4:	461e      	movge	r6, r3
 80188c6:	4287      	cmp	r7, r0
 80188c8:	bfb8      	it	lt
 80188ca:	46e1      	movlt	r9, ip
 80188cc:	e756      	b.n	801877c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80188ce:	4286      	cmp	r6, r0
 80188d0:	bfa8      	it	ge
 80188d2:	4606      	movge	r6, r0
 80188d4:	e752      	b.n	801877c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80188d6:	eb0a 0007 	add.w	r0, sl, r7
 80188da:	4427      	add	r7, r4
 80188dc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80188e0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80188e4:	f1bb 0f13 	cmp.w	fp, #19
 80188e8:	bfde      	ittt	le
 80188ea:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80188ee:	445e      	addle	r6, fp
 80188f0:	b236      	sxthle	r6, r6
 80188f2:	f7f9 f99e 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 80188f6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80188fa:	2800      	cmp	r0, #0
 80188fc:	f47f af1a 	bne.w	8018734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8018900:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8018904:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8018908:	482a      	ldr	r0, [pc, #168]	; (80189b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801890a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801890e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8018912:	6800      	ldr	r0, [r0, #0]
 8018914:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018918:	1ab6      	subs	r6, r6, r2
 801891a:	2e14      	cmp	r6, #20
 801891c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8018920:	f8ad 3020 	strh.w	r3, [sp, #32]
 8018924:	bfa8      	it	ge
 8018926:	2614      	movge	r6, #20
 8018928:	f8d0 c000 	ldr.w	ip, [r0]
 801892c:	b2b6      	uxth	r6, r6
 801892e:	fa1f fb8b 	uxth.w	fp, fp
 8018932:	455e      	cmp	r6, fp
 8018934:	bf94      	ite	ls
 8018936:	9600      	strls	r6, [sp, #0]
 8018938:	f8cd b000 	strhi.w	fp, [sp]
 801893c:	b292      	uxth	r2, r2
 801893e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8018942:	b29b      	uxth	r3, r3
 8018944:	b289      	uxth	r1, r1
 8018946:	47b0      	blx	r6
 8018948:	6823      	ldr	r3, [r4, #0]
 801894a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801894e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018950:	a907      	add	r1, sp, #28
 8018952:	4620      	mov	r0, r4
 8018954:	4798      	blx	r3
 8018956:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801895a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801895e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8018962:	1a5b      	subs	r3, r3, r1
 8018964:	440a      	add	r2, r1
 8018966:	b21b      	sxth	r3, r3
 8018968:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801896c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8018970:	2b00      	cmp	r3, #0
 8018972:	f47f aeda 	bne.w	801872a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8018976:	fa1f f189 	uxth.w	r1, r9
 801897a:	4650      	mov	r0, sl
 801897c:	f7ff f9e6 	bl	8017d4c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018980:	e6d3      	b.n	801872a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8018982:	882e      	ldrh	r6, [r5, #0]
 8018984:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8018988:	42b3      	cmp	r3, r6
 801898a:	f67f ae98 	bls.w	80186be <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801898e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8018992:	ab07      	add	r3, sp, #28
 8018994:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8018998:	6851      	ldr	r1, [r2, #4]
 801899a:	c303      	stmia	r3!, {r0, r1}
 801899c:	a807      	add	r0, sp, #28
 801899e:	f7f9 f948 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 80189a2:	b920      	cbnz	r0, 80189ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80189a4:	6823      	ldr	r3, [r4, #0]
 80189a6:	a907      	add	r1, sp, #28
 80189a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80189aa:	4620      	mov	r0, r4
 80189ac:	4798      	blx	r3
 80189ae:	3601      	adds	r6, #1
 80189b0:	b2b6      	uxth	r6, r6
 80189b2:	e7e7      	b.n	8018984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80189b4:	2001384c 	.word	0x2001384c

080189b8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80189b8:	4b03      	ldr	r3, [pc, #12]	; (80189c8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80189ba:	2200      	movs	r2, #0
 80189bc:	801a      	strh	r2, [r3, #0]
 80189be:	805a      	strh	r2, [r3, #2]
 80189c0:	809a      	strh	r2, [r3, #4]
 80189c2:	80da      	strh	r2, [r3, #6]
 80189c4:	4770      	bx	lr
 80189c6:	bf00      	nop
 80189c8:	20013898 	.word	0x20013898

080189cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80189cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189d0:	4606      	mov	r6, r0
 80189d2:	b09d      	sub	sp, #116	; 0x74
 80189d4:	a803      	add	r0, sp, #12
 80189d6:	4614      	mov	r4, r2
 80189d8:	468a      	mov	sl, r1
 80189da:	461d      	mov	r5, r3
 80189dc:	f000 ff08 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 80189e0:	6833      	ldr	r3, [r6, #0]
 80189e2:	4630      	mov	r0, r6
 80189e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80189e6:	4798      	blx	r3
 80189e8:	6833      	ldr	r3, [r6, #0]
 80189ea:	4607      	mov	r7, r0
 80189ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80189ee:	4630      	mov	r0, r6
 80189f0:	4798      	blx	r3
 80189f2:	462a      	mov	r2, r5
 80189f4:	9000      	str	r0, [sp, #0]
 80189f6:	4621      	mov	r1, r4
 80189f8:	463b      	mov	r3, r7
 80189fa:	a803      	add	r0, sp, #12
 80189fc:	f000 ff53 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018a00:	2500      	movs	r5, #0
 8018a02:	462c      	mov	r4, r5
 8018a04:	46a9      	mov	r9, r5
 8018a06:	46a8      	mov	r8, r5
 8018a08:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8018a0c:	2300      	movs	r3, #0
 8018a0e:	9302      	str	r3, [sp, #8]
 8018a10:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018a14:	429c      	cmp	r4, r3
 8018a16:	d002      	beq.n	8018a1e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8018a18:	455c      	cmp	r4, fp
 8018a1a:	bf18      	it	ne
 8018a1c:	4625      	movne	r5, r4
 8018a1e:	ab02      	add	r3, sp, #8
 8018a20:	4632      	mov	r2, r6
 8018a22:	4651      	mov	r1, sl
 8018a24:	a803      	add	r0, sp, #12
 8018a26:	f001 fa41 	bl	8019eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018a2a:	4604      	mov	r4, r0
 8018a2c:	b108      	cbz	r0, 8018a32 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8018a2e:	280a      	cmp	r0, #10
 8018a30:	d10a      	bne.n	8018a48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8018a32:	45c1      	cmp	r9, r8
 8018a34:	bf38      	it	cc
 8018a36:	46c1      	movcc	r9, r8
 8018a38:	f04f 0800 	mov.w	r8, #0
 8018a3c:	2c00      	cmp	r4, #0
 8018a3e:	d1e5      	bne.n	8018a0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8018a40:	4648      	mov	r0, r9
 8018a42:	b01d      	add	sp, #116	; 0x74
 8018a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a48:	9a02      	ldr	r2, [sp, #8]
 8018a4a:	2a00      	cmp	r2, #0
 8018a4c:	d0de      	beq.n	8018a0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8018a4e:	7b57      	ldrb	r7, [r2, #13]
 8018a50:	6833      	ldr	r3, [r6, #0]
 8018a52:	8894      	ldrh	r4, [r2, #4]
 8018a54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018a56:	007f      	lsls	r7, r7, #1
 8018a58:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8018a5c:	7a97      	ldrb	r7, [r2, #10]
 8018a5e:	4629      	mov	r1, r5
 8018a60:	4307      	orrs	r7, r0
 8018a62:	4630      	mov	r0, r6
 8018a64:	4798      	blx	r3
 8018a66:	4438      	add	r0, r7
 8018a68:	4480      	add	r8, r0
 8018a6a:	fa1f f888 	uxth.w	r8, r8
 8018a6e:	e7e5      	b.n	8018a3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08018a70 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8018a70:	b508      	push	{r3, lr}
 8018a72:	6803      	ldr	r3, [r0, #0]
 8018a74:	68db      	ldr	r3, [r3, #12]
 8018a76:	4798      	blx	r3
 8018a78:	b128      	cbz	r0, 8018a86 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8018a7a:	7b43      	ldrb	r3, [r0, #13]
 8018a7c:	7a80      	ldrb	r0, [r0, #10]
 8018a7e:	005b      	lsls	r3, r3, #1
 8018a80:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018a84:	4318      	orrs	r0, r3
 8018a86:	bd08      	pop	{r3, pc}

08018a88 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8018a88:	b40e      	push	{r1, r2, r3}
 8018a8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018a8c:	b09e      	sub	sp, #120	; 0x78
 8018a8e:	ab23      	add	r3, sp, #140	; 0x8c
 8018a90:	4605      	mov	r5, r0
 8018a92:	f853 4b04 	ldr.w	r4, [r3], #4
 8018a96:	9303      	str	r3, [sp, #12]
 8018a98:	a805      	add	r0, sp, #20
 8018a9a:	f000 fea9 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 8018a9e:	682b      	ldr	r3, [r5, #0]
 8018aa0:	4628      	mov	r0, r5
 8018aa2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018aa4:	4798      	blx	r3
 8018aa6:	682b      	ldr	r3, [r5, #0]
 8018aa8:	4606      	mov	r6, r0
 8018aaa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018aac:	4628      	mov	r0, r5
 8018aae:	4798      	blx	r3
 8018ab0:	4633      	mov	r3, r6
 8018ab2:	ae1e      	add	r6, sp, #120	; 0x78
 8018ab4:	4621      	mov	r1, r4
 8018ab6:	9000      	str	r0, [sp, #0]
 8018ab8:	9a03      	ldr	r2, [sp, #12]
 8018aba:	2400      	movs	r4, #0
 8018abc:	a805      	add	r0, sp, #20
 8018abe:	f000 fef2 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018ac2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8018ac6:	462a      	mov	r2, r5
 8018ac8:	4633      	mov	r3, r6
 8018aca:	4621      	mov	r1, r4
 8018acc:	a805      	add	r0, sp, #20
 8018ace:	f001 f9ed 	bl	8019eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018ad2:	b1f0      	cbz	r0, 8018b12 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8018ad4:	280a      	cmp	r0, #10
 8018ad6:	d018      	beq.n	8018b0a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8018ad8:	9f04      	ldr	r7, [sp, #16]
 8018ada:	b1b7      	cbz	r7, 8018b0a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8018adc:	7b78      	ldrb	r0, [r7, #13]
 8018ade:	7a3b      	ldrb	r3, [r7, #8]
 8018ae0:	88ea      	ldrh	r2, [r5, #6]
 8018ae2:	00c1      	lsls	r1, r0, #3
 8018ae4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018ae8:	4319      	orrs	r1, r3
 8018aea:	0643      	lsls	r3, r0, #25
 8018aec:	bf44      	itt	mi
 8018aee:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8018af2:	b219      	sxthmi	r1, r3
 8018af4:	0100      	lsls	r0, r0, #4
 8018af6:	79fb      	ldrb	r3, [r7, #7]
 8018af8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8018afc:	4303      	orrs	r3, r0
 8018afe:	4413      	add	r3, r2
 8018b00:	1a5b      	subs	r3, r3, r1
 8018b02:	b21b      	sxth	r3, r3
 8018b04:	429c      	cmp	r4, r3
 8018b06:	bfb8      	it	lt
 8018b08:	461c      	movlt	r4, r3
 8018b0a:	4633      	mov	r3, r6
 8018b0c:	462a      	mov	r2, r5
 8018b0e:	2100      	movs	r1, #0
 8018b10:	e7dc      	b.n	8018acc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8018b12:	b2a0      	uxth	r0, r4
 8018b14:	b01e      	add	sp, #120	; 0x78
 8018b16:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8018b1a:	b003      	add	sp, #12
 8018b1c:	4770      	bx	lr

08018b1e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8018b1e:	7a43      	ldrb	r3, [r0, #9]
 8018b20:	8880      	ldrh	r0, [r0, #4]
 8018b22:	4418      	add	r0, r3
 8018b24:	b280      	uxth	r0, r0
 8018b26:	4770      	bx	lr

08018b28 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8018b28:	6803      	ldr	r3, [r0, #0]
 8018b2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018b2c:	4718      	bx	r3

08018b2e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8018b2e:	b40e      	push	{r1, r2, r3}
 8018b30:	b570      	push	{r4, r5, r6, lr}
 8018b32:	b09d      	sub	sp, #116	; 0x74
 8018b34:	ab21      	add	r3, sp, #132	; 0x84
 8018b36:	4604      	mov	r4, r0
 8018b38:	f853 5b04 	ldr.w	r5, [r3], #4
 8018b3c:	9302      	str	r3, [sp, #8]
 8018b3e:	a803      	add	r0, sp, #12
 8018b40:	f000 fe56 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 8018b44:	6823      	ldr	r3, [r4, #0]
 8018b46:	4620      	mov	r0, r4
 8018b48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018b4a:	4798      	blx	r3
 8018b4c:	6823      	ldr	r3, [r4, #0]
 8018b4e:	4606      	mov	r6, r0
 8018b50:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018b52:	4620      	mov	r0, r4
 8018b54:	4798      	blx	r3
 8018b56:	4633      	mov	r3, r6
 8018b58:	9000      	str	r0, [sp, #0]
 8018b5a:	9a02      	ldr	r2, [sp, #8]
 8018b5c:	4629      	mov	r1, r5
 8018b5e:	a803      	add	r0, sp, #12
 8018b60:	f000 fea1 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018b64:	a803      	add	r0, sp, #12
 8018b66:	f001 fa6f 	bl	801a048 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018b6a:	2401      	movs	r4, #1
 8018b6c:	b2a3      	uxth	r3, r4
 8018b6e:	b140      	cbz	r0, 8018b82 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8018b70:	280a      	cmp	r0, #10
 8018b72:	bf08      	it	eq
 8018b74:	3301      	addeq	r3, #1
 8018b76:	a803      	add	r0, sp, #12
 8018b78:	bf08      	it	eq
 8018b7a:	b21c      	sxtheq	r4, r3
 8018b7c:	f001 fa64 	bl	801a048 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018b80:	e7f4      	b.n	8018b6c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8018b82:	4618      	mov	r0, r3
 8018b84:	b01d      	add	sp, #116	; 0x74
 8018b86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018b8a:	b003      	add	sp, #12
 8018b8c:	4770      	bx	lr

08018b8e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8018b8e:	b40e      	push	{r1, r2, r3}
 8018b90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018b92:	b09e      	sub	sp, #120	; 0x78
 8018b94:	ab23      	add	r3, sp, #140	; 0x8c
 8018b96:	4604      	mov	r4, r0
 8018b98:	f853 5b04 	ldr.w	r5, [r3], #4
 8018b9c:	9303      	str	r3, [sp, #12]
 8018b9e:	a805      	add	r0, sp, #20
 8018ba0:	f000 fe26 	bl	80197f0 <_ZN8touchgfx12TextProviderC1Ev>
 8018ba4:	6823      	ldr	r3, [r4, #0]
 8018ba6:	4620      	mov	r0, r4
 8018ba8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018baa:	4798      	blx	r3
 8018bac:	6823      	ldr	r3, [r4, #0]
 8018bae:	4606      	mov	r6, r0
 8018bb0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018bb2:	4620      	mov	r0, r4
 8018bb4:	4798      	blx	r3
 8018bb6:	4633      	mov	r3, r6
 8018bb8:	4629      	mov	r1, r5
 8018bba:	9000      	str	r0, [sp, #0]
 8018bbc:	9a03      	ldr	r2, [sp, #12]
 8018bbe:	a805      	add	r0, sp, #20
 8018bc0:	ad1e      	add	r5, sp, #120	; 0x78
 8018bc2:	f000 fe70 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018bc6:	2100      	movs	r1, #0
 8018bc8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8018bcc:	4622      	mov	r2, r4
 8018bce:	462b      	mov	r3, r5
 8018bd0:	a805      	add	r0, sp, #20
 8018bd2:	f001 f96b 	bl	8019eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018bd6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8018bda:	b1d8      	cbz	r0, 8018c14 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8018bdc:	280a      	cmp	r0, #10
 8018bde:	d012      	beq.n	8018c06 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8018be0:	9804      	ldr	r0, [sp, #16]
 8018be2:	b180      	cbz	r0, 8018c06 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8018be4:	7b47      	ldrb	r7, [r0, #13]
 8018be6:	88e2      	ldrh	r2, [r4, #6]
 8018be8:	00fb      	lsls	r3, r7, #3
 8018bea:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018bee:	7a03      	ldrb	r3, [r0, #8]
 8018bf0:	430b      	orrs	r3, r1
 8018bf2:	0679      	lsls	r1, r7, #25
 8018bf4:	bf44      	itt	mi
 8018bf6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018bfa:	b21b      	sxthmi	r3, r3
 8018bfc:	1ad3      	subs	r3, r2, r3
 8018bfe:	b21b      	sxth	r3, r3
 8018c00:	429e      	cmp	r6, r3
 8018c02:	bfa8      	it	ge
 8018c04:	461e      	movge	r6, r3
 8018c06:	462b      	mov	r3, r5
 8018c08:	4622      	mov	r2, r4
 8018c0a:	2100      	movs	r1, #0
 8018c0c:	a805      	add	r0, sp, #20
 8018c0e:	f001 f94d 	bl	8019eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018c12:	e7e2      	b.n	8018bda <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8018c14:	4630      	mov	r0, r6
 8018c16:	b01e      	add	sp, #120	; 0x78
 8018c18:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8018c1c:	b003      	add	sp, #12
 8018c1e:	4770      	bx	lr

08018c20 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8018c20:	b513      	push	{r0, r1, r4, lr}
 8018c22:	6803      	ldr	r3, [r0, #0]
 8018c24:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8018c28:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018c2c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018c30:	2400      	movs	r4, #0
 8018c32:	9400      	str	r4, [sp, #0]
 8018c34:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018c38:	691b      	ldr	r3, [r3, #16]
 8018c3a:	4669      	mov	r1, sp
 8018c3c:	4798      	blx	r3
 8018c3e:	b002      	add	sp, #8
 8018c40:	bd10      	pop	{r4, pc}

08018c42 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8018c42:	b538      	push	{r3, r4, r5, lr}
 8018c44:	680b      	ldr	r3, [r1, #0]
 8018c46:	460c      	mov	r4, r1
 8018c48:	68db      	ldr	r3, [r3, #12]
 8018c4a:	4605      	mov	r5, r0
 8018c4c:	4798      	blx	r3
 8018c4e:	6823      	ldr	r3, [r4, #0]
 8018c50:	4620      	mov	r0, r4
 8018c52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018c54:	4629      	mov	r1, r5
 8018c56:	4798      	blx	r3
 8018c58:	4628      	mov	r0, r5
 8018c5a:	bd38      	pop	{r3, r4, r5, pc}

08018c5c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8018c5c:	b410      	push	{r4}
 8018c5e:	880a      	ldrh	r2, [r1, #0]
 8018c60:	8884      	ldrh	r4, [r0, #4]
 8018c62:	4422      	add	r2, r4
 8018c64:	800a      	strh	r2, [r1, #0]
 8018c66:	88c4      	ldrh	r4, [r0, #6]
 8018c68:	884a      	ldrh	r2, [r1, #2]
 8018c6a:	4422      	add	r2, r4
 8018c6c:	804a      	strh	r2, [r1, #2]
 8018c6e:	6940      	ldr	r0, [r0, #20]
 8018c70:	b120      	cbz	r0, 8018c7c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8018c72:	6803      	ldr	r3, [r0, #0]
 8018c74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018c78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018c7a:	4718      	bx	r3
 8018c7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018c80:	4770      	bx	lr

08018c82 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8018c82:	b570      	push	{r4, r5, r6, lr}
 8018c84:	8882      	ldrh	r2, [r0, #4]
 8018c86:	880b      	ldrh	r3, [r1, #0]
 8018c88:	4413      	add	r3, r2
 8018c8a:	800b      	strh	r3, [r1, #0]
 8018c8c:	88c2      	ldrh	r2, [r0, #6]
 8018c8e:	884b      	ldrh	r3, [r1, #2]
 8018c90:	460c      	mov	r4, r1
 8018c92:	4413      	add	r3, r2
 8018c94:	804b      	strh	r3, [r1, #2]
 8018c96:	4605      	mov	r5, r0
 8018c98:	1d01      	adds	r1, r0, #4
 8018c9a:	4620      	mov	r0, r4
 8018c9c:	f7f8 ff86 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8018ca0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8018ca4:	2b00      	cmp	r3, #0
 8018ca6:	dd0b      	ble.n	8018cc0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018ca8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8018cac:	2b00      	cmp	r3, #0
 8018cae:	dd07      	ble.n	8018cc0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018cb0:	6968      	ldr	r0, [r5, #20]
 8018cb2:	b128      	cbz	r0, 8018cc0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018cb4:	6803      	ldr	r3, [r0, #0]
 8018cb6:	4621      	mov	r1, r4
 8018cb8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018cba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018cbe:	4718      	bx	r3
 8018cc0:	bd70      	pop	{r4, r5, r6, pc}
	...

08018cc4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8018cc4:	b570      	push	{r4, r5, r6, lr}
 8018cc6:	8882      	ldrh	r2, [r0, #4]
 8018cc8:	880b      	ldrh	r3, [r1, #0]
 8018cca:	4413      	add	r3, r2
 8018ccc:	800b      	strh	r3, [r1, #0]
 8018cce:	88c2      	ldrh	r2, [r0, #6]
 8018cd0:	884b      	ldrh	r3, [r1, #2]
 8018cd2:	460c      	mov	r4, r1
 8018cd4:	4413      	add	r3, r2
 8018cd6:	804b      	strh	r3, [r1, #2]
 8018cd8:	4605      	mov	r5, r0
 8018cda:	1d01      	adds	r1, r0, #4
 8018cdc:	4620      	mov	r0, r4
 8018cde:	f7f8 ff65 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8018ce2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8018ce6:	2b00      	cmp	r3, #0
 8018ce8:	dd19      	ble.n	8018d1e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8018cea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8018cee:	2b00      	cmp	r3, #0
 8018cf0:	dd15      	ble.n	8018d1e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8018cf2:	6968      	ldr	r0, [r5, #20]
 8018cf4:	b128      	cbz	r0, 8018d02 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8018cf6:	6803      	ldr	r3, [r0, #0]
 8018cf8:	4621      	mov	r1, r4
 8018cfa:	691b      	ldr	r3, [r3, #16]
 8018cfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018d00:	4718      	bx	r3
 8018d02:	4b07      	ldr	r3, [pc, #28]	; (8018d20 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8018d04:	681b      	ldr	r3, [r3, #0]
 8018d06:	3304      	adds	r3, #4
 8018d08:	429d      	cmp	r5, r3
 8018d0a:	d108      	bne.n	8018d1e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8018d0c:	f7fe fea0 	bl	8017a50 <_ZN8touchgfx11Application11getInstanceEv>
 8018d10:	6803      	ldr	r3, [r0, #0]
 8018d12:	6821      	ldr	r1, [r4, #0]
 8018d14:	6862      	ldr	r2, [r4, #4]
 8018d16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018d18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018d1c:	4718      	bx	r3
 8018d1e:	bd70      	pop	{r4, r5, r6, pc}
 8018d20:	20013890 	.word	0x20013890

08018d24 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8018d24:	b570      	push	{r4, r5, r6, lr}
 8018d26:	4604      	mov	r4, r0
 8018d28:	4616      	mov	r6, r2
 8018d2a:	460d      	mov	r5, r1
 8018d2c:	b901      	cbnz	r1, 8018d30 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8018d2e:	b192      	cbz	r2, 8018d56 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8018d30:	6823      	ldr	r3, [r4, #0]
 8018d32:	4620      	mov	r0, r4
 8018d34:	699b      	ldr	r3, [r3, #24]
 8018d36:	4798      	blx	r3
 8018d38:	88e2      	ldrh	r2, [r4, #6]
 8018d3a:	88a1      	ldrh	r1, [r4, #4]
 8018d3c:	4432      	add	r2, r6
 8018d3e:	4429      	add	r1, r5
 8018d40:	4620      	mov	r0, r4
 8018d42:	b212      	sxth	r2, r2
 8018d44:	b209      	sxth	r1, r1
 8018d46:	f7ea fc49 	bl	80035dc <_ZN8touchgfx8Drawable5setXYEss>
 8018d4a:	6823      	ldr	r3, [r4, #0]
 8018d4c:	4620      	mov	r0, r4
 8018d4e:	699b      	ldr	r3, [r3, #24]
 8018d50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018d54:	4718      	bx	r3
 8018d56:	bd70      	pop	{r4, r5, r6, pc}

08018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8018d58:	b510      	push	{r4, lr}
 8018d5a:	4604      	mov	r4, r0
 8018d5c:	4608      	mov	r0, r1
 8018d5e:	2300      	movs	r3, #0
 8018d60:	8023      	strh	r3, [r4, #0]
 8018d62:	8063      	strh	r3, [r4, #2]
 8018d64:	6803      	ldr	r3, [r0, #0]
 8018d66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018d6a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8018d6e:	80a1      	strh	r1, [r4, #4]
 8018d70:	80e2      	strh	r2, [r4, #6]
 8018d72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018d74:	4621      	mov	r1, r4
 8018d76:	4798      	blx	r3
 8018d78:	4620      	mov	r0, r4
 8018d7a:	bd10      	pop	{r4, pc}

08018d7c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8018d7c:	b530      	push	{r4, r5, lr}
 8018d7e:	8083      	strh	r3, [r0, #4]
 8018d80:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8018d84:	80c3      	strh	r3, [r0, #6]
 8018d86:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8018d8a:	7203      	strb	r3, [r0, #8]
 8018d8c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018d90:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8018d94:	7243      	strb	r3, [r0, #9]
 8018d96:	7a83      	ldrb	r3, [r0, #10]
 8018d98:	6141      	str	r1, [r0, #20]
 8018d9a:	f365 0306 	bfi	r3, r5, #0, #7
 8018d9e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8018da2:	8302      	strh	r2, [r0, #24]
 8018da4:	f365 13c7 	bfi	r3, r5, #7, #1
 8018da8:	7283      	strb	r3, [r0, #10]
 8018daa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8018dae:	72c3      	strb	r3, [r0, #11]
 8018db0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8018db4:	7303      	strb	r3, [r0, #12]
 8018db6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8018dba:	81c3      	strh	r3, [r0, #14]
 8018dbc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018dc0:	8203      	strh	r3, [r0, #16]
 8018dc2:	4b01      	ldr	r3, [pc, #4]	; (8018dc8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8018dc4:	6003      	str	r3, [r0, #0]
 8018dc6:	bd30      	pop	{r4, r5, pc}
 8018dc8:	08030e70 	.word	0x08030e70

08018dcc <_ZNK8touchgfx9ConstFont4findEt>:
 8018dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018dce:	6944      	ldr	r4, [r0, #20]
 8018dd0:	b3bc      	cbz	r4, 8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018dd2:	88a3      	ldrh	r3, [r4, #4]
 8018dd4:	8b02      	ldrh	r2, [r0, #24]
 8018dd6:	1acb      	subs	r3, r1, r3
 8018dd8:	f102 32ff 	add.w	r2, r2, #4294967295
 8018ddc:	d431      	bmi.n	8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018dde:	4293      	cmp	r3, r2
 8018de0:	dd0c      	ble.n	8018dfc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8018de2:	230e      	movs	r3, #14
 8018de4:	fb03 4302 	mla	r3, r3, r2, r4
 8018de8:	889b      	ldrh	r3, [r3, #4]
 8018dea:	1a5b      	subs	r3, r3, r1
 8018dec:	1ad3      	subs	r3, r2, r3
 8018dee:	429a      	cmp	r2, r3
 8018df0:	db27      	blt.n	8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018df2:	2b00      	cmp	r3, #0
 8018df4:	bfbc      	itt	lt
 8018df6:	2302      	movlt	r3, #2
 8018df8:	fb92 f3f3 	sdivlt	r3, r2, r3
 8018dfc:	2500      	movs	r5, #0
 8018dfe:	260e      	movs	r6, #14
 8018e00:	4295      	cmp	r5, r2
 8018e02:	dc1e      	bgt.n	8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018e04:	fb06 4003 	mla	r0, r6, r3, r4
 8018e08:	8887      	ldrh	r7, [r0, #4]
 8018e0a:	42b9      	cmp	r1, r7
 8018e0c:	d01a      	beq.n	8018e44 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8018e0e:	d20d      	bcs.n	8018e2c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018e10:	1e5a      	subs	r2, r3, #1
 8018e12:	4295      	cmp	r5, r2
 8018e14:	dc15      	bgt.n	8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018e16:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8018e1a:	1a5b      	subs	r3, r3, r1
 8018e1c:	1ad3      	subs	r3, r2, r3
 8018e1e:	429a      	cmp	r2, r3
 8018e20:	db0f      	blt.n	8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018e22:	429d      	cmp	r5, r3
 8018e24:	ddec      	ble.n	8018e00 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018e26:	1953      	adds	r3, r2, r5
 8018e28:	105b      	asrs	r3, r3, #1
 8018e2a:	e7e9      	b.n	8018e00 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018e2c:	1c5d      	adds	r5, r3, #1
 8018e2e:	42aa      	cmp	r2, r5
 8018e30:	db07      	blt.n	8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018e32:	8a43      	ldrh	r3, [r0, #18]
 8018e34:	1acb      	subs	r3, r1, r3
 8018e36:	442b      	add	r3, r5
 8018e38:	429d      	cmp	r5, r3
 8018e3a:	dc02      	bgt.n	8018e42 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018e3c:	429a      	cmp	r2, r3
 8018e3e:	dadf      	bge.n	8018e00 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018e40:	e7f1      	b.n	8018e26 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8018e42:	2000      	movs	r0, #0
 8018e44:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018e46 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8018e46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018e48:	4604      	mov	r4, r0
 8018e4a:	4617      	mov	r7, r2
 8018e4c:	461e      	mov	r6, r3
 8018e4e:	b911      	cbnz	r1, 8018e56 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8018e50:	2500      	movs	r5, #0
 8018e52:	4628      	mov	r0, r5
 8018e54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018e56:	290a      	cmp	r1, #10
 8018e58:	d0fa      	beq.n	8018e50 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018e5a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8018e5e:	4291      	cmp	r1, r2
 8018e60:	d0f6      	beq.n	8018e50 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018e62:	f242 020b 	movw	r2, #8203	; 0x200b
 8018e66:	4291      	cmp	r1, r2
 8018e68:	d0f2      	beq.n	8018e50 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018e6a:	f7ff ffaf 	bl	8018dcc <_ZNK8touchgfx9ConstFont4findEt>
 8018e6e:	4605      	mov	r5, r0
 8018e70:	b950      	cbnz	r0, 8018e88 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8018e72:	6823      	ldr	r3, [r4, #0]
 8018e74:	4620      	mov	r0, r4
 8018e76:	691b      	ldr	r3, [r3, #16]
 8018e78:	4798      	blx	r3
 8018e7a:	4601      	mov	r1, r0
 8018e7c:	4620      	mov	r0, r4
 8018e7e:	f7ff ffa5 	bl	8018dcc <_ZNK8touchgfx9ConstFont4findEt>
 8018e82:	4605      	mov	r5, r0
 8018e84:	2800      	cmp	r0, #0
 8018e86:	d0e3      	beq.n	8018e50 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018e88:	6823      	ldr	r3, [r4, #0]
 8018e8a:	4629      	mov	r1, r5
 8018e8c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8018e8e:	4620      	mov	r0, r4
 8018e90:	4798      	blx	r3
 8018e92:	6038      	str	r0, [r7, #0]
 8018e94:	6823      	ldr	r3, [r4, #0]
 8018e96:	4620      	mov	r0, r4
 8018e98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018e9a:	4798      	blx	r3
 8018e9c:	7030      	strb	r0, [r6, #0]
 8018e9e:	e7d8      	b.n	8018e52 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08018ea0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8018ea0:	b538      	push	{r3, r4, r5, lr}
 8018ea2:	4605      	mov	r5, r0
 8018ea4:	f002 fb94 	bl	801b5d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018ea8:	4604      	mov	r4, r0
 8018eaa:	4628      	mov	r0, r5
 8018eac:	f002 fad4 	bl	801b458 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018eb0:	2800      	cmp	r0, #0
 8018eb2:	bf14      	ite	ne
 8018eb4:	2002      	movne	r0, #2
 8018eb6:	2000      	moveq	r0, #0
 8018eb8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8018ebc:	b280      	uxth	r0, r0
 8018ebe:	bd38      	pop	{r3, r4, r5, pc}

08018ec0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8018ec0:	b538      	push	{r3, r4, r5, lr}
 8018ec2:	4605      	mov	r5, r0
 8018ec4:	f002 fb84 	bl	801b5d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018ec8:	4604      	mov	r4, r0
 8018eca:	4628      	mov	r0, r5
 8018ecc:	f002 fac4 	bl	801b458 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018ed0:	2800      	cmp	r0, #0
 8018ed2:	bf14      	ite	ne
 8018ed4:	2002      	movne	r0, #2
 8018ed6:	2000      	moveq	r0, #0
 8018ed8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8018edc:	f040 0001 	orr.w	r0, r0, #1
 8018ee0:	b280      	uxth	r0, r0
 8018ee2:	bd38      	pop	{r3, r4, r5, pc}

08018ee4 <_ZN8touchgfx4clzuEm>:
 8018ee4:	4603      	mov	r3, r0
 8018ee6:	b1c8      	cbz	r0, 8018f1c <_ZN8touchgfx4clzuEm+0x38>
 8018ee8:	0c02      	lsrs	r2, r0, #16
 8018eea:	0412      	lsls	r2, r2, #16
 8018eec:	b9a2      	cbnz	r2, 8018f18 <_ZN8touchgfx4clzuEm+0x34>
 8018eee:	0403      	lsls	r3, r0, #16
 8018ef0:	2010      	movs	r0, #16
 8018ef2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018ef6:	bf04      	itt	eq
 8018ef8:	021b      	lsleq	r3, r3, #8
 8018efa:	3008      	addeq	r0, #8
 8018efc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018f00:	bf04      	itt	eq
 8018f02:	011b      	lsleq	r3, r3, #4
 8018f04:	3004      	addeq	r0, #4
 8018f06:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018f0a:	bf04      	itt	eq
 8018f0c:	009b      	lsleq	r3, r3, #2
 8018f0e:	3002      	addeq	r0, #2
 8018f10:	2b00      	cmp	r3, #0
 8018f12:	db04      	blt.n	8018f1e <_ZN8touchgfx4clzuEm+0x3a>
 8018f14:	3001      	adds	r0, #1
 8018f16:	4770      	bx	lr
 8018f18:	2000      	movs	r0, #0
 8018f1a:	e7ea      	b.n	8018ef2 <_ZN8touchgfx4clzuEm+0xe>
 8018f1c:	2020      	movs	r0, #32
 8018f1e:	4770      	bx	lr

08018f20 <_ZN8touchgfx7muldivuEmmmRm>:
 8018f20:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8018f24:	460f      	mov	r7, r1
 8018f26:	4615      	mov	r5, r2
 8018f28:	461e      	mov	r6, r3
 8018f2a:	4601      	mov	r1, r0
 8018f2c:	b100      	cbz	r0, 8018f30 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8018f2e:	b927      	cbnz	r7, 8018f3a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8018f30:	2000      	movs	r0, #0
 8018f32:	6030      	str	r0, [r6, #0]
 8018f34:	b002      	add	sp, #8
 8018f36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018f3a:	f7ff ffd3 	bl	8018ee4 <_ZN8touchgfx4clzuEm>
 8018f3e:	b980      	cbnz	r0, 8018f62 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8018f40:	4638      	mov	r0, r7
 8018f42:	f7ff ffcf 	bl	8018ee4 <_ZN8touchgfx4clzuEm>
 8018f46:	2800      	cmp	r0, #0
 8018f48:	dd05      	ble.n	8018f56 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8018f4a:	4633      	mov	r3, r6
 8018f4c:	462a      	mov	r2, r5
 8018f4e:	4638      	mov	r0, r7
 8018f50:	f7ff ffe6 	bl	8018f20 <_ZN8touchgfx7muldivuEmmmRm>
 8018f54:	e7ee      	b.n	8018f34 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018f56:	f04f 33ff 	mov.w	r3, #4294967295
 8018f5a:	6033      	str	r3, [r6, #0]
 8018f5c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018f60:	e7e8      	b.n	8018f34 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018f62:	fa37 f800 	lsrs.w	r8, r7, r0
 8018f66:	fb07 f301 	mul.w	r3, r7, r1
 8018f6a:	d105      	bne.n	8018f78 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8018f6c:	fbb3 f0f5 	udiv	r0, r3, r5
 8018f70:	fb05 3510 	mls	r5, r5, r0, r3
 8018f74:	6035      	str	r5, [r6, #0]
 8018f76:	e7dd      	b.n	8018f34 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018f78:	2301      	movs	r3, #1
 8018f7a:	fa01 fa00 	lsl.w	sl, r1, r0
 8018f7e:	fa03 f000 	lsl.w	r0, r3, r0
 8018f82:	3801      	subs	r0, #1
 8018f84:	462a      	mov	r2, r5
 8018f86:	4633      	mov	r3, r6
 8018f88:	4038      	ands	r0, r7
 8018f8a:	f7ff ffc9 	bl	8018f20 <_ZN8touchgfx7muldivuEmmmRm>
 8018f8e:	fbba f9f5 	udiv	r9, sl, r5
 8018f92:	462a      	mov	r2, r5
 8018f94:	4607      	mov	r7, r0
 8018f96:	ab01      	add	r3, sp, #4
 8018f98:	fb05 a119 	mls	r1, r5, r9, sl
 8018f9c:	4640      	mov	r0, r8
 8018f9e:	f7ff ffbf 	bl	8018f20 <_ZN8touchgfx7muldivuEmmmRm>
 8018fa2:	9b01      	ldr	r3, [sp, #4]
 8018fa4:	6832      	ldr	r2, [r6, #0]
 8018fa6:	fb08 f409 	mul.w	r4, r8, r9
 8018faa:	441a      	add	r2, r3
 8018fac:	fbb2 f3f5 	udiv	r3, r2, r5
 8018fb0:	441c      	add	r4, r3
 8018fb2:	443c      	add	r4, r7
 8018fb4:	4420      	add	r0, r4
 8018fb6:	fb05 2513 	mls	r5, r5, r3, r2
 8018fba:	e7db      	b.n	8018f74 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08018fbc <_ZN8touchgfx6muldivElllRl>:
 8018fbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018fbe:	2800      	cmp	r0, #0
 8018fc0:	bfba      	itte	lt
 8018fc2:	4240      	neglt	r0, r0
 8018fc4:	f04f 34ff 	movlt.w	r4, #4294967295
 8018fc8:	2401      	movge	r4, #1
 8018fca:	2900      	cmp	r1, #0
 8018fcc:	bfbc      	itt	lt
 8018fce:	4249      	neglt	r1, r1
 8018fd0:	4264      	neglt	r4, r4
 8018fd2:	2a00      	cmp	r2, #0
 8018fd4:	bfb6      	itet	lt
 8018fd6:	4265      	neglt	r5, r4
 8018fd8:	4625      	movge	r5, r4
 8018fda:	4252      	neglt	r2, r2
 8018fdc:	4288      	cmp	r0, r1
 8018fde:	461e      	mov	r6, r3
 8018fe0:	bfc2      	ittt	gt
 8018fe2:	4603      	movgt	r3, r0
 8018fe4:	4608      	movgt	r0, r1
 8018fe6:	4619      	movgt	r1, r3
 8018fe8:	ab01      	add	r3, sp, #4
 8018fea:	f7ff ff99 	bl	8018f20 <_ZN8touchgfx7muldivuEmmmRm>
 8018fee:	9b01      	ldr	r3, [sp, #4]
 8018ff0:	4368      	muls	r0, r5
 8018ff2:	435c      	muls	r4, r3
 8018ff4:	6034      	str	r4, [r6, #0]
 8018ff6:	b002      	add	sp, #8
 8018ff8:	bd70      	pop	{r4, r5, r6, pc}

08018ffa <_ZN8touchgfx6muldivElll>:
 8018ffa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018ffc:	4606      	mov	r6, r0
 8018ffe:	ab01      	add	r3, sp, #4
 8019000:	460d      	mov	r5, r1
 8019002:	4614      	mov	r4, r2
 8019004:	f7ff ffda 	bl	8018fbc <_ZN8touchgfx6muldivElllRl>
 8019008:	2e00      	cmp	r6, #0
 801900a:	db20      	blt.n	801904e <_ZN8touchgfx6muldivElll+0x54>
 801900c:	bf14      	ite	ne
 801900e:	2301      	movne	r3, #1
 8019010:	2300      	moveq	r3, #0
 8019012:	2d00      	cmp	r5, #0
 8019014:	db1e      	blt.n	8019054 <_ZN8touchgfx6muldivElll+0x5a>
 8019016:	bf14      	ite	ne
 8019018:	2201      	movne	r2, #1
 801901a:	2200      	moveq	r2, #0
 801901c:	2c00      	cmp	r4, #0
 801901e:	fb03 f202 	mul.w	r2, r3, r2
 8019022:	db1a      	blt.n	801905a <_ZN8touchgfx6muldivElll+0x60>
 8019024:	bf14      	ite	ne
 8019026:	2301      	movne	r3, #1
 8019028:	2300      	moveq	r3, #0
 801902a:	4353      	muls	r3, r2
 801902c:	2b01      	cmp	r3, #1
 801902e:	d117      	bne.n	8019060 <_ZN8touchgfx6muldivElll+0x66>
 8019030:	9b01      	ldr	r3, [sp, #4]
 8019032:	2c00      	cmp	r4, #0
 8019034:	bfb8      	it	lt
 8019036:	4264      	neglt	r4, r4
 8019038:	2b00      	cmp	r3, #0
 801903a:	f104 0401 	add.w	r4, r4, #1
 801903e:	bfb8      	it	lt
 8019040:	425b      	neglt	r3, r3
 8019042:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019046:	db00      	blt.n	801904a <_ZN8touchgfx6muldivElll+0x50>
 8019048:	3001      	adds	r0, #1
 801904a:	b002      	add	sp, #8
 801904c:	bd70      	pop	{r4, r5, r6, pc}
 801904e:	f04f 33ff 	mov.w	r3, #4294967295
 8019052:	e7de      	b.n	8019012 <_ZN8touchgfx6muldivElll+0x18>
 8019054:	f04f 32ff 	mov.w	r2, #4294967295
 8019058:	e7e0      	b.n	801901c <_ZN8touchgfx6muldivElll+0x22>
 801905a:	f04f 33ff 	mov.w	r3, #4294967295
 801905e:	e7e4      	b.n	801902a <_ZN8touchgfx6muldivElll+0x30>
 8019060:	3301      	adds	r3, #1
 8019062:	d1f2      	bne.n	801904a <_ZN8touchgfx6muldivElll+0x50>
 8019064:	9b01      	ldr	r3, [sp, #4]
 8019066:	2c00      	cmp	r4, #0
 8019068:	bfb8      	it	lt
 801906a:	4264      	neglt	r4, r4
 801906c:	2b00      	cmp	r3, #0
 801906e:	bfb8      	it	lt
 8019070:	425b      	neglt	r3, r3
 8019072:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019076:	bfc8      	it	gt
 8019078:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801907c:	e7e5      	b.n	801904a <_ZN8touchgfx6muldivElll+0x50>

0801907e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801907e:	2000      	movs	r0, #0
 8019080:	4770      	bx	lr

08019082 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8019082:	2001      	movs	r0, #1
 8019084:	4770      	bx	lr

08019086 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8019086:	2002      	movs	r0, #2
 8019088:	4770      	bx	lr

0801908a <_ZN8touchgfx6ScreenD1Ev>:
 801908a:	4770      	bx	lr

0801908c <_ZN8touchgfx12GestureEventD1Ev>:
 801908c:	4770      	bx	lr

0801908e <_ZN8touchgfx9DragEventD1Ev>:
 801908e:	4770      	bx	lr

08019090 <_ZN8touchgfx10ClickEventD1Ev>:
 8019090:	4770      	bx	lr

08019092 <_ZN8touchgfx10ClickEventD0Ev>:
 8019092:	b510      	push	{r4, lr}
 8019094:	210c      	movs	r1, #12
 8019096:	4604      	mov	r4, r0
 8019098:	f012 fd8f 	bl	802bbba <_ZdlPvj>
 801909c:	4620      	mov	r0, r4
 801909e:	bd10      	pop	{r4, pc}

080190a0 <_ZN8touchgfx9DragEventD0Ev>:
 80190a0:	b510      	push	{r4, lr}
 80190a2:	2110      	movs	r1, #16
 80190a4:	4604      	mov	r4, r0
 80190a6:	f012 fd88 	bl	802bbba <_ZdlPvj>
 80190aa:	4620      	mov	r0, r4
 80190ac:	bd10      	pop	{r4, pc}

080190ae <_ZN8touchgfx12GestureEventD0Ev>:
 80190ae:	b510      	push	{r4, lr}
 80190b0:	210c      	movs	r1, #12
 80190b2:	4604      	mov	r4, r0
 80190b4:	f012 fd81 	bl	802bbba <_ZdlPvj>
 80190b8:	4620      	mov	r0, r4
 80190ba:	bd10      	pop	{r4, pc}

080190bc <_ZN8touchgfx6ScreenD0Ev>:
 80190bc:	b510      	push	{r4, lr}
 80190be:	213c      	movs	r1, #60	; 0x3c
 80190c0:	4604      	mov	r4, r0
 80190c2:	f012 fd7a 	bl	802bbba <_ZdlPvj>
 80190c6:	4620      	mov	r0, r4
 80190c8:	bd10      	pop	{r4, pc}
	...

080190cc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80190cc:	b530      	push	{r4, r5, lr}
 80190ce:	460d      	mov	r5, r1
 80190d0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80190d2:	b087      	sub	sp, #28
 80190d4:	4604      	mov	r4, r0
 80190d6:	b301      	cbz	r1, 801911a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80190d8:	a801      	add	r0, sp, #4
 80190da:	f7ff fe3d 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80190de:	892a      	ldrh	r2, [r5, #8]
 80190e0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80190e4:	7928      	ldrb	r0, [r5, #4]
 80190e6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80190ea:	f88d 0010 	strb.w	r0, [sp, #16]
 80190ee:	1ad2      	subs	r2, r2, r3
 80190f0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80190f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80190f4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80190f8:	441a      	add	r2, r3
 80190fa:	896b      	ldrh	r3, [r5, #10]
 80190fc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8019100:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019104:	1b5b      	subs	r3, r3, r5
 8019106:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8019108:	442b      	add	r3, r5
 801910a:	4d05      	ldr	r5, [pc, #20]	; (8019120 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801910c:	9503      	str	r5, [sp, #12]
 801910e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8019112:	6803      	ldr	r3, [r0, #0]
 8019114:	a903      	add	r1, sp, #12
 8019116:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019118:	4798      	blx	r3
 801911a:	b007      	add	sp, #28
 801911c:	bd30      	pop	{r4, r5, pc}
 801911e:	bf00      	nop
 8019120:	08030ef8 	.word	0x08030ef8

08019124 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8019124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019128:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801912a:	b08a      	sub	sp, #40	; 0x28
 801912c:	4604      	mov	r4, r0
 801912e:	460d      	mov	r5, r1
 8019130:	b113      	cbz	r3, 8019138 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8019132:	790b      	ldrb	r3, [r1, #4]
 8019134:	2b00      	cmp	r3, #0
 8019136:	d044      	beq.n	80191c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019138:	f104 0804 	add.w	r8, r4, #4
 801913c:	4641      	mov	r1, r8
 801913e:	a803      	add	r0, sp, #12
 8019140:	f7ff fe0a 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019144:	792b      	ldrb	r3, [r5, #4]
 8019146:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801914a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801914e:	b983      	cbnz	r3, 8019172 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8019150:	892a      	ldrh	r2, [r5, #8]
 8019152:	88e9      	ldrh	r1, [r5, #6]
 8019154:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8019158:	1b92      	subs	r2, r2, r6
 801915a:	1bc9      	subs	r1, r1, r7
 801915c:	9301      	str	r3, [sp, #4]
 801915e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8019162:	9300      	str	r3, [sp, #0]
 8019164:	b212      	sxth	r2, r2
 8019166:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801916a:	b209      	sxth	r1, r1
 801916c:	4640      	mov	r0, r8
 801916e:	f7f8 fc39 	bl	80119e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8019172:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8019174:	b329      	cbz	r1, 80191c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019176:	a805      	add	r0, sp, #20
 8019178:	f7ff fdee 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801917c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8019180:	792b      	ldrb	r3, [r5, #4]
 8019182:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8019184:	f88d 3020 	strb.w	r3, [sp, #32]
 8019188:	1abf      	subs	r7, r7, r2
 801918a:	88ea      	ldrh	r2, [r5, #6]
 801918c:	4417      	add	r7, r2
 801918e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8019190:	4417      	add	r7, r2
 8019192:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8019196:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801919a:	1ab6      	subs	r6, r6, r2
 801919c:	892a      	ldrh	r2, [r5, #8]
 801919e:	4416      	add	r6, r2
 80191a0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80191a2:	4416      	add	r6, r2
 80191a4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80191a8:	4a07      	ldr	r2, [pc, #28]	; (80191c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80191aa:	9207      	str	r2, [sp, #28]
 80191ac:	2600      	movs	r6, #0
 80191ae:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80191b2:	6803      	ldr	r3, [r0, #0]
 80191b4:	a907      	add	r1, sp, #28
 80191b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80191b8:	4798      	blx	r3
 80191ba:	792b      	ldrb	r3, [r5, #4]
 80191bc:	b10b      	cbz	r3, 80191c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80191be:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80191c2:	b00a      	add	sp, #40	; 0x28
 80191c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80191c8:	08030ed0 	.word	0x08030ed0

080191cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80191cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80191d0:	460c      	mov	r4, r1
 80191d2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80191d4:	b088      	sub	sp, #32
 80191d6:	4605      	mov	r5, r0
 80191d8:	2900      	cmp	r1, #0
 80191da:	d06d      	beq.n	80192b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80191dc:	4668      	mov	r0, sp
 80191de:	f7ff fdbb 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80191e2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80191e4:	88e3      	ldrh	r3, [r4, #6]
 80191e6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80191ea:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80191ee:	440b      	add	r3, r1
 80191f0:	b21b      	sxth	r3, r3
 80191f2:	4543      	cmp	r3, r8
 80191f4:	db31      	blt.n	801925a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80191f6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80191fa:	44c4      	add	ip, r8
 80191fc:	fa0f fc8c 	sxth.w	ip, ip
 8019200:	4563      	cmp	r3, ip
 8019202:	da2a      	bge.n	801925a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019204:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8019206:	8926      	ldrh	r6, [r4, #8]
 8019208:	4416      	add	r6, r2
 801920a:	b236      	sxth	r6, r6
 801920c:	42be      	cmp	r6, r7
 801920e:	db24      	blt.n	801925a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019210:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8019214:	4438      	add	r0, r7
 8019216:	b200      	sxth	r0, r0
 8019218:	4286      	cmp	r6, r0
 801921a:	da1e      	bge.n	801925a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801921c:	8963      	ldrh	r3, [r4, #10]
 801921e:	4419      	add	r1, r3
 8019220:	b209      	sxth	r1, r1
 8019222:	4541      	cmp	r1, r8
 8019224:	db08      	blt.n	8019238 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019226:	4561      	cmp	r1, ip
 8019228:	da06      	bge.n	8019238 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801922a:	89a3      	ldrh	r3, [r4, #12]
 801922c:	441a      	add	r2, r3
 801922e:	b212      	sxth	r2, r2
 8019230:	42ba      	cmp	r2, r7
 8019232:	db01      	blt.n	8019238 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019234:	4282      	cmp	r2, r0
 8019236:	db10      	blt.n	801925a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019238:	4b21      	ldr	r3, [pc, #132]	; (80192c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801923a:	9304      	str	r3, [sp, #16]
 801923c:	2302      	movs	r3, #2
 801923e:	f88d 3014 	strb.w	r3, [sp, #20]
 8019242:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8019244:	2300      	movs	r3, #0
 8019246:	f8ad 3016 	strh.w	r3, [sp, #22]
 801924a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801924e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8019252:	6803      	ldr	r3, [r0, #0]
 8019254:	a904      	add	r1, sp, #16
 8019256:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019258:	4798      	blx	r3
 801925a:	1d29      	adds	r1, r5, #4
 801925c:	a802      	add	r0, sp, #8
 801925e:	f7ff fd7b 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019262:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019266:	88e0      	ldrh	r0, [r4, #6]
 8019268:	7921      	ldrb	r1, [r4, #4]
 801926a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801926e:	8922      	ldrh	r2, [r4, #8]
 8019270:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8019272:	f88d 1014 	strb.w	r1, [sp, #20]
 8019276:	eba3 0808 	sub.w	r8, r3, r8
 801927a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801927e:	1bdf      	subs	r7, r3, r7
 8019280:	b2bb      	uxth	r3, r7
 8019282:	fa1f f888 	uxth.w	r8, r8
 8019286:	8967      	ldrh	r7, [r4, #10]
 8019288:	89a4      	ldrh	r4, [r4, #12]
 801928a:	4440      	add	r0, r8
 801928c:	4460      	add	r0, ip
 801928e:	441a      	add	r2, r3
 8019290:	44b8      	add	r8, r7
 8019292:	4423      	add	r3, r4
 8019294:	f8ad 0016 	strh.w	r0, [sp, #22]
 8019298:	4433      	add	r3, r6
 801929a:	4432      	add	r2, r6
 801929c:	44e0      	add	r8, ip
 801929e:	4c09      	ldr	r4, [pc, #36]	; (80192c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80192a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80192a2:	9404      	str	r4, [sp, #16]
 80192a4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80192a8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80192ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80192b0:	6803      	ldr	r3, [r0, #0]
 80192b2:	a904      	add	r1, sp, #16
 80192b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80192b6:	4798      	blx	r3
 80192b8:	b008      	add	sp, #32
 80192ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80192be:	bf00      	nop
 80192c0:	08030ed0 	.word	0x08030ed0
 80192c4:	08030ee4 	.word	0x08030ee4

080192c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80192c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80192ca:	4604      	mov	r4, r0
 80192cc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80192d0:	3201      	adds	r2, #1
 80192d2:	d112      	bne.n	80192fa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80192d4:	6803      	ldr	r3, [r0, #0]
 80192d6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80192da:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80192de:	f8ad 1004 	strh.w	r1, [sp, #4]
 80192e2:	2500      	movs	r5, #0
 80192e4:	9500      	str	r5, [sp, #0]
 80192e6:	466d      	mov	r5, sp
 80192e8:	4629      	mov	r1, r5
 80192ea:	f8ad 2006 	strh.w	r2, [sp, #6]
 80192ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80192f0:	4798      	blx	r3
 80192f2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80192f6:	e884 0003 	stmia.w	r4, {r0, r1}
 80192fa:	4620      	mov	r0, r4
 80192fc:	b003      	add	sp, #12
 80192fe:	bd30      	pop	{r4, r5, pc}

08019300 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8019300:	b513      	push	{r0, r1, r4, lr}
 8019302:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8019306:	3301      	adds	r3, #1
 8019308:	4604      	mov	r4, r0
 801930a:	d109      	bne.n	8019320 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801930c:	4601      	mov	r1, r0
 801930e:	4668      	mov	r0, sp
 8019310:	f7ff fd22 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019314:	f8bd 3000 	ldrh.w	r3, [sp]
 8019318:	8423      	strh	r3, [r4, #32]
 801931a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801931e:	8463      	strh	r3, [r4, #34]	; 0x22
 8019320:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8019324:	b002      	add	sp, #8
 8019326:	bd10      	pop	{r4, pc}

08019328 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8019328:	b513      	push	{r0, r1, r4, lr}
 801932a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801932e:	3301      	adds	r3, #1
 8019330:	4604      	mov	r4, r0
 8019332:	d109      	bne.n	8019348 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8019334:	4601      	mov	r1, r0
 8019336:	4668      	mov	r0, sp
 8019338:	f7ff fd0e 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801933c:	f8bd 3000 	ldrh.w	r3, [sp]
 8019340:	8423      	strh	r3, [r4, #32]
 8019342:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8019346:	8463      	strh	r3, [r4, #34]	; 0x22
 8019348:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801934c:	b002      	add	sp, #8
 801934e:	bd10      	pop	{r4, pc}

08019350 <_ZN8touchgfx6ScreenC1Ev>:
 8019350:	b570      	push	{r4, r5, r6, lr}
 8019352:	4605      	mov	r5, r0
 8019354:	4b16      	ldr	r3, [pc, #88]	; (80193b0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8019356:	f845 3b04 	str.w	r3, [r5], #4
 801935a:	2300      	movs	r3, #0
 801935c:	8103      	strh	r3, [r0, #8]
 801935e:	8143      	strh	r3, [r0, #10]
 8019360:	8183      	strh	r3, [r0, #12]
 8019362:	81c3      	strh	r3, [r0, #14]
 8019364:	8203      	strh	r3, [r0, #16]
 8019366:	8243      	strh	r3, [r0, #18]
 8019368:	8283      	strh	r3, [r0, #20]
 801936a:	82c3      	strh	r3, [r0, #22]
 801936c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8019370:	6203      	str	r3, [r0, #32]
 8019372:	8483      	strh	r3, [r0, #36]	; 0x24
 8019374:	84c3      	strh	r3, [r0, #38]	; 0x26
 8019376:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801937a:	4a0e      	ldr	r2, [pc, #56]	; (80193b4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801937c:	6343      	str	r3, [r0, #52]	; 0x34
 801937e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8019382:	4b0d      	ldr	r3, [pc, #52]	; (80193b8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8019384:	6042      	str	r2, [r0, #4]
 8019386:	f9b3 6000 	ldrsh.w	r6, [r3]
 801938a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801938c:	4a0b      	ldr	r2, [pc, #44]	; (80193bc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801938e:	4604      	mov	r4, r0
 8019390:	2101      	movs	r1, #1
 8019392:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8019396:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801939a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801939e:	4628      	mov	r0, r5
 80193a0:	4798      	blx	r3
 80193a2:	6863      	ldr	r3, [r4, #4]
 80193a4:	4628      	mov	r0, r5
 80193a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80193a8:	4631      	mov	r1, r6
 80193aa:	4798      	blx	r3
 80193ac:	4620      	mov	r0, r4
 80193ae:	bd70      	pop	{r4, r5, r6, pc}
 80193b0:	08030f0c 	.word	0x08030f0c
 80193b4:	08030590 	.word	0x08030590
 80193b8:	20013842 	.word	0x20013842
 80193bc:	20013840 	.word	0x20013840

080193c0 <_ZN8touchgfx6Screen4drawEv>:
 80193c0:	b507      	push	{r0, r1, r2, lr}
 80193c2:	4b09      	ldr	r3, [pc, #36]	; (80193e8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80193c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80193c8:	4b08      	ldr	r3, [pc, #32]	; (80193ec <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80193ca:	f8ad 2004 	strh.w	r2, [sp, #4]
 80193ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80193d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80193d6:	6803      	ldr	r3, [r0, #0]
 80193d8:	2100      	movs	r1, #0
 80193da:	9100      	str	r1, [sp, #0]
 80193dc:	689b      	ldr	r3, [r3, #8]
 80193de:	4669      	mov	r1, sp
 80193e0:	4798      	blx	r3
 80193e2:	b003      	add	sp, #12
 80193e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80193e8:	20013840 	.word	0x20013840
 80193ec:	20013842 	.word	0x20013842

080193f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80193f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193f4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80193f8:	2b00      	cmp	r3, #0
 80193fa:	b089      	sub	sp, #36	; 0x24
 80193fc:	4680      	mov	r8, r0
 80193fe:	460c      	mov	r4, r1
 8019400:	4615      	mov	r5, r2
 8019402:	dd0e      	ble.n	8019422 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8019404:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8019408:	2b00      	cmp	r3, #0
 801940a:	dd0a      	ble.n	8019422 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801940c:	4628      	mov	r0, r5
 801940e:	f7ff ff5b 	bl	80192c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8019412:	4621      	mov	r1, r4
 8019414:	f7fe fa3d 	bl	8017892 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019418:	69eb      	ldr	r3, [r5, #28]
 801941a:	b928      	cbnz	r0, 8019428 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801941c:	461d      	mov	r5, r3
 801941e:	2b00      	cmp	r3, #0
 8019420:	d1f4      	bne.n	801940c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8019422:	b009      	add	sp, #36	; 0x24
 8019424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019428:	ae04      	add	r6, sp, #16
 801942a:	2b00      	cmp	r3, #0
 801942c:	f000 80b5 	beq.w	801959a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8019430:	682b      	ldr	r3, [r5, #0]
 8019432:	4629      	mov	r1, r5
 8019434:	68db      	ldr	r3, [r3, #12]
 8019436:	a802      	add	r0, sp, #8
 8019438:	4798      	blx	r3
 801943a:	4628      	mov	r0, r5
 801943c:	f7ff ff60 	bl	8019300 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8019440:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8019444:	4407      	add	r7, r0
 8019446:	4628      	mov	r0, r5
 8019448:	f7ff ff6e 	bl	8019328 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801944c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019450:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8019454:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019458:	4418      	add	r0, r3
 801945a:	4621      	mov	r1, r4
 801945c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8019460:	f8ad 0012 	strh.w	r0, [sp, #18]
 8019464:	b23f      	sxth	r7, r7
 8019466:	4630      	mov	r0, r6
 8019468:	f8ad 3016 	strh.w	r3, [sp, #22]
 801946c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8019470:	f7f8 fb9c 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8019474:	4628      	mov	r0, r5
 8019476:	f7ff ff27 	bl	80192c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801947a:	4602      	mov	r2, r0
 801947c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8019480:	ab06      	add	r3, sp, #24
 8019482:	e883 0003 	stmia.w	r3, {r0, r1}
 8019486:	4611      	mov	r1, r2
 8019488:	4618      	mov	r0, r3
 801948a:	f7f8 fb8f 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 801948e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019492:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019496:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801949a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801949e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80194a2:	4299      	cmp	r1, r3
 80194a4:	d10b      	bne.n	80194be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80194a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80194aa:	4552      	cmp	r2, sl
 80194ac:	d107      	bne.n	80194be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80194ae:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80194b2:	455a      	cmp	r2, fp
 80194b4:	d103      	bne.n	80194be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80194b6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80194ba:	454a      	cmp	r2, r9
 80194bc:	d06d      	beq.n	801959a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80194be:	f1bb 0f00 	cmp.w	fp, #0
 80194c2:	dd65      	ble.n	8019590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80194c4:	f1b9 0f00 	cmp.w	r9, #0
 80194c8:	dd62      	ble.n	8019590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80194ca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80194ce:	fa1f f08a 	uxth.w	r0, sl
 80194d2:	4552      	cmp	r2, sl
 80194d4:	9000      	str	r0, [sp, #0]
 80194d6:	da12      	bge.n	80194fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80194d8:	9301      	str	r3, [sp, #4]
 80194da:	9b00      	ldr	r3, [sp, #0]
 80194dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80194e0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80194e4:	1a9a      	subs	r2, r3, r2
 80194e6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80194ea:	f8ad 0014 	strh.w	r0, [sp, #20]
 80194ee:	f8ad 2016 	strh.w	r2, [sp, #22]
 80194f2:	69ea      	ldr	r2, [r5, #28]
 80194f4:	4631      	mov	r1, r6
 80194f6:	4640      	mov	r0, r8
 80194f8:	f7ff ff7a 	bl	80193f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80194fc:	9b01      	ldr	r3, [sp, #4]
 80194fe:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019502:	429a      	cmp	r2, r3
 8019504:	b29f      	uxth	r7, r3
 8019506:	da0d      	bge.n	8019524 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8019508:	f8ad 2010 	strh.w	r2, [sp, #16]
 801950c:	1aba      	subs	r2, r7, r2
 801950e:	f8ad a012 	strh.w	sl, [sp, #18]
 8019512:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019516:	f8ad 9016 	strh.w	r9, [sp, #22]
 801951a:	69ea      	ldr	r2, [r5, #28]
 801951c:	4631      	mov	r1, r6
 801951e:	4640      	mov	r0, r8
 8019520:	f7ff ff66 	bl	80193f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019524:	8822      	ldrh	r2, [r4, #0]
 8019526:	88a3      	ldrh	r3, [r4, #4]
 8019528:	445f      	add	r7, fp
 801952a:	4413      	add	r3, r2
 801952c:	b29b      	uxth	r3, r3
 801952e:	b2bf      	uxth	r7, r7
 8019530:	b23a      	sxth	r2, r7
 8019532:	b219      	sxth	r1, r3
 8019534:	4291      	cmp	r1, r2
 8019536:	dd0d      	ble.n	8019554 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8019538:	1bdb      	subs	r3, r3, r7
 801953a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801953e:	f8ad a012 	strh.w	sl, [sp, #18]
 8019542:	f8ad 3014 	strh.w	r3, [sp, #20]
 8019546:	f8ad 9016 	strh.w	r9, [sp, #22]
 801954a:	69ea      	ldr	r2, [r5, #28]
 801954c:	4631      	mov	r1, r6
 801954e:	4640      	mov	r0, r8
 8019550:	f7ff ff4e 	bl	80193f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019554:	88e2      	ldrh	r2, [r4, #6]
 8019556:	8863      	ldrh	r3, [r4, #2]
 8019558:	4413      	add	r3, r2
 801955a:	9a00      	ldr	r2, [sp, #0]
 801955c:	444a      	add	r2, r9
 801955e:	b29b      	uxth	r3, r3
 8019560:	fa1f f982 	uxth.w	r9, r2
 8019564:	fa0f f289 	sxth.w	r2, r9
 8019568:	b219      	sxth	r1, r3
 801956a:	428a      	cmp	r2, r1
 801956c:	da15      	bge.n	801959a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801956e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019572:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019576:	f8ad 1014 	strh.w	r1, [sp, #20]
 801957a:	eba3 0309 	sub.w	r3, r3, r9
 801957e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8019582:	f8ad 2012 	strh.w	r2, [sp, #18]
 8019586:	f8ad 3016 	strh.w	r3, [sp, #22]
 801958a:	69ea      	ldr	r2, [r5, #28]
 801958c:	4631      	mov	r1, r6
 801958e:	e001      	b.n	8019594 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8019590:	69ea      	ldr	r2, [r5, #28]
 8019592:	4621      	mov	r1, r4
 8019594:	4640      	mov	r0, r8
 8019596:	f7ff ff2b 	bl	80193f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801959a:	4628      	mov	r0, r5
 801959c:	f7ff fe94 	bl	80192c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80195a0:	6861      	ldr	r1, [r4, #4]
 80195a2:	4602      	mov	r2, r0
 80195a4:	6820      	ldr	r0, [r4, #0]
 80195a6:	4633      	mov	r3, r6
 80195a8:	c303      	stmia	r3!, {r0, r1}
 80195aa:	4611      	mov	r1, r2
 80195ac:	4630      	mov	r0, r6
 80195ae:	f7f8 fafd 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 80195b2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80195b6:	2b00      	cmp	r3, #0
 80195b8:	f77f af33 	ble.w	8019422 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80195bc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80195c0:	2b00      	cmp	r3, #0
 80195c2:	f77f af2e 	ble.w	8019422 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80195c6:	4628      	mov	r0, r5
 80195c8:	f7ff fe9a 	bl	8019300 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80195cc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80195d0:	1a18      	subs	r0, r3, r0
 80195d2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80195d6:	4628      	mov	r0, r5
 80195d8:	f7ff fea6 	bl	8019328 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80195dc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80195e0:	1a18      	subs	r0, r3, r0
 80195e2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80195e6:	682b      	ldr	r3, [r5, #0]
 80195e8:	4631      	mov	r1, r6
 80195ea:	689b      	ldr	r3, [r3, #8]
 80195ec:	4628      	mov	r0, r5
 80195ee:	4798      	blx	r3
 80195f0:	e717      	b.n	8019422 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080195f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80195f2:	b570      	push	{r4, r5, r6, lr}
 80195f4:	460c      	mov	r4, r1
 80195f6:	b086      	sub	sp, #24
 80195f8:	1d06      	adds	r6, r0, #4
 80195fa:	2300      	movs	r3, #0
 80195fc:	4631      	mov	r1, r6
 80195fe:	4605      	mov	r5, r0
 8019600:	a802      	add	r0, sp, #8
 8019602:	9301      	str	r3, [sp, #4]
 8019604:	f7ff fba8 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019608:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801960c:	8822      	ldrh	r2, [r4, #0]
 801960e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8019612:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019616:	f8ad 0014 	strh.w	r0, [sp, #20]
 801961a:	1ad2      	subs	r2, r2, r3
 801961c:	8863      	ldrh	r3, [r4, #2]
 801961e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019622:	1a5b      	subs	r3, r3, r1
 8019624:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8019628:	f8ad 1016 	strh.w	r1, [sp, #22]
 801962c:	aa01      	add	r2, sp, #4
 801962e:	a904      	add	r1, sp, #16
 8019630:	4630      	mov	r0, r6
 8019632:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019636:	f7f8 fb91 	bl	8011d5c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801963a:	9a01      	ldr	r2, [sp, #4]
 801963c:	b11a      	cbz	r2, 8019646 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801963e:	4621      	mov	r1, r4
 8019640:	4628      	mov	r0, r5
 8019642:	f7ff fed5 	bl	80193f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019646:	b006      	add	sp, #24
 8019648:	bd70      	pop	{r4, r5, r6, pc}

0801964a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801964a:	b530      	push	{r4, r5, lr}
 801964c:	4602      	mov	r2, r0
 801964e:	4604      	mov	r4, r0
 8019650:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8019654:	b085      	sub	sp, #20
 8019656:	460d      	mov	r5, r1
 8019658:	6851      	ldr	r1, [r2, #4]
 801965a:	466b      	mov	r3, sp
 801965c:	c303      	stmia	r3!, {r0, r1}
 801965e:	4629      	mov	r1, r5
 8019660:	4668      	mov	r0, sp
 8019662:	f7f8 faa3 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 8019666:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801966a:	b12b      	cbz	r3, 8019678 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801966c:	4669      	mov	r1, sp
 801966e:	4620      	mov	r0, r4
 8019670:	f7ff ffbf 	bl	80195f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8019674:	b005      	add	sp, #20
 8019676:	bd30      	pop	{r4, r5, pc}
 8019678:	3404      	adds	r4, #4
 801967a:	4621      	mov	r1, r4
 801967c:	a802      	add	r0, sp, #8
 801967e:	f7ff fb6b 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019682:	f8bd 3000 	ldrh.w	r3, [sp]
 8019686:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801968a:	1a9b      	subs	r3, r3, r2
 801968c:	f8ad 3000 	strh.w	r3, [sp]
 8019690:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019694:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8019698:	4669      	mov	r1, sp
 801969a:	1a9b      	subs	r3, r3, r2
 801969c:	4620      	mov	r0, r4
 801969e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80196a2:	f7f8 fb22 	bl	8011cea <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80196a6:	e7e5      	b.n	8019674 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080196a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80196a8:	680a      	ldr	r2, [r1, #0]
 80196aa:	460b      	mov	r3, r1
 80196ac:	6992      	ldr	r2, [r2, #24]
 80196ae:	1d01      	adds	r1, r0, #4
 80196b0:	4618      	mov	r0, r3
 80196b2:	4710      	bx	r2

080196b4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 80196b4:	4298      	cmp	r0, r3
 80196b6:	d200      	bcs.n	80196ba <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 80196b8:	b913      	cbnz	r3, 80196c0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 80196ba:	440a      	add	r2, r1
 80196bc:	b210      	sxth	r0, r2
 80196be:	4770      	bx	lr
 80196c0:	ee07 0a90 	vmov	s15, r0
 80196c4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80196c8:	ee07 3a90 	vmov	s15, r3
 80196cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80196d0:	eddf 4a15 	vldr	s9, [pc, #84]	; 8019728 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 80196d4:	eddf 5a15 	vldr	s11, [pc, #84]	; 801972c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 80196d8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80196dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80196e0:	ee37 7a66 	vsub.f32	s14, s14, s13
 80196e4:	ee07 2a90 	vmov	s15, r2
 80196e8:	eee7 5a24 	vfma.f32	s11, s14, s9
 80196ec:	ee27 5a07 	vmul.f32	s10, s14, s14
 80196f0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80196f4:	eee5 6a25 	vfma.f32	s13, s10, s11
 80196f8:	ee07 1a90 	vmov	s15, r1
 80196fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019700:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8019704:	eee6 7a26 	vfma.f32	s15, s12, s13
 8019708:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801970c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019710:	bfcc      	ite	gt
 8019712:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8019716:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801971a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801971e:	ee17 3a90 	vmov	r3, s15
 8019722:	b218      	sxth	r0, r3
 8019724:	4770      	bx	lr
 8019726:	bf00      	nop
 8019728:	402ce6b0 	.word	0x402ce6b0
 801972c:	3fd9cd60 	.word	0x3fd9cd60

08019730 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8019730:	4298      	cmp	r0, r3
 8019732:	d200      	bcs.n	8019736 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8019734:	b913      	cbnz	r3, 801973c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8019736:	440a      	add	r2, r1
 8019738:	b210      	sxth	r0, r2
 801973a:	4770      	bx	lr
 801973c:	ee07 0a90 	vmov	s15, r0
 8019740:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8019744:	ee07 3a90 	vmov	s15, r3
 8019748:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801974c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8019750:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019754:	ee37 7a66 	vsub.f32	s14, s14, s13
 8019758:	ee07 2a90 	vmov	s15, r2
 801975c:	ee67 5a07 	vmul.f32	s11, s14, s14
 8019760:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8019764:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019768:	ee07 1a90 	vmov	s15, r1
 801976c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019770:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8019774:	eee6 7a26 	vfma.f32	s15, s12, s13
 8019778:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801977c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019780:	bfcc      	ite	gt
 8019782:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8019786:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801978a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801978e:	ee17 3a90 	vmov	r3, s15
 8019792:	b218      	sxth	r0, r3
 8019794:	4770      	bx	lr

08019796 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8019796:	4298      	cmp	r0, r3
 8019798:	d200      	bcs.n	801979c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801979a:	b913      	cbnz	r3, 80197a2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801979c:	440a      	add	r2, r1
 801979e:	b210      	sxth	r0, r2
 80197a0:	4770      	bx	lr
 80197a2:	ee07 2a90 	vmov	s15, r2
 80197a6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80197aa:	ee07 0a90 	vmov	s15, r0
 80197ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80197b2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80197b6:	ee07 3a10 	vmov	s14, r3
 80197ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80197be:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80197c2:	ee07 1a90 	vmov	s15, r1
 80197c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80197ca:	ee77 7a27 	vadd.f32	s15, s14, s15
 80197ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80197d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80197d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80197da:	bfcc      	ite	gt
 80197dc:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80197e0:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80197e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80197e8:	ee17 3a90 	vmov	r3, s15
 80197ec:	b218      	sxth	r0, r3
 80197ee:	4770      	bx	lr

080197f0 <_ZN8touchgfx12TextProviderC1Ev>:
 80197f0:	b538      	push	{r3, r4, r5, lr}
 80197f2:	2500      	movs	r5, #0
 80197f4:	2302      	movs	r3, #2
 80197f6:	4604      	mov	r4, r0
 80197f8:	e9c0 5500 	strd	r5, r5, [r0]
 80197fc:	7403      	strb	r3, [r0, #16]
 80197fe:	6145      	str	r5, [r0, #20]
 8019800:	7605      	strb	r5, [r0, #24]
 8019802:	83c5      	strh	r5, [r0, #30]
 8019804:	8405      	strh	r5, [r0, #32]
 8019806:	86c5      	strh	r5, [r0, #54]	; 0x36
 8019808:	8705      	strh	r5, [r0, #56]	; 0x38
 801980a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801980c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8019810:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8019814:	220e      	movs	r2, #14
 8019816:	4629      	mov	r1, r5
 8019818:	304c      	adds	r0, #76	; 0x4c
 801981a:	f013 faba 	bl	802cd92 <memset>
 801981e:	2301      	movs	r3, #1
 8019820:	4620      	mov	r0, r4
 8019822:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8019826:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801982a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801982e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8019832:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8019836:	f7ef ff07 	bl	8009648 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801983a:	4620      	mov	r0, r4
 801983c:	bd38      	pop	{r3, r4, r5, pc}

0801983e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801983e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019840:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019844:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8019846:	fab0 f080 	clz	r0, r0
 801984a:	0940      	lsrs	r0, r0, #5
 801984c:	4770      	bx	lr

0801984e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801984e:	b530      	push	{r4, r5, lr}
 8019850:	2500      	movs	r5, #0
 8019852:	2401      	movs	r4, #1
 8019854:	6843      	ldr	r3, [r0, #4]
 8019856:	b913      	cbnz	r3, 801985e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8019858:	6803      	ldr	r3, [r0, #0]
 801985a:	b313      	cbz	r3, 80198a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801985c:	6043      	str	r3, [r0, #4]
 801985e:	7e03      	ldrb	r3, [r0, #24]
 8019860:	b143      	cbz	r3, 8019874 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8019862:	6943      	ldr	r3, [r0, #20]
 8019864:	b12b      	cbz	r3, 8019872 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8019866:	881a      	ldrh	r2, [r3, #0]
 8019868:	b11a      	cbz	r2, 8019872 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801986a:	1c9a      	adds	r2, r3, #2
 801986c:	6142      	str	r2, [r0, #20]
 801986e:	8818      	ldrh	r0, [r3, #0]
 8019870:	bd30      	pop	{r4, r5, pc}
 8019872:	7605      	strb	r5, [r0, #24]
 8019874:	6843      	ldr	r3, [r0, #4]
 8019876:	8819      	ldrh	r1, [r3, #0]
 8019878:	b199      	cbz	r1, 80198a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801987a:	1c9a      	adds	r2, r3, #2
 801987c:	2902      	cmp	r1, #2
 801987e:	6042      	str	r2, [r0, #4]
 8019880:	d1f5      	bne.n	801986e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8019882:	7c03      	ldrb	r3, [r0, #16]
 8019884:	2b01      	cmp	r3, #1
 8019886:	d8e5      	bhi.n	8019854 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8019888:	1c5a      	adds	r2, r3, #1
 801988a:	3302      	adds	r3, #2
 801988c:	7402      	strb	r2, [r0, #16]
 801988e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8019892:	6143      	str	r3, [r0, #20]
 8019894:	2b00      	cmp	r3, #0
 8019896:	d0dd      	beq.n	8019854 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8019898:	881b      	ldrh	r3, [r3, #0]
 801989a:	2b00      	cmp	r3, #0
 801989c:	d0da      	beq.n	8019854 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801989e:	7604      	strb	r4, [r0, #24]
 80198a0:	e7d8      	b.n	8019854 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80198a2:	2000      	movs	r0, #0
 80198a4:	e7e4      	b.n	8019870 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80198a6:	b430      	push	{r4, r5}
 80198a8:	6001      	str	r1, [r0, #0]
 80198aa:	2100      	movs	r1, #0
 80198ac:	6041      	str	r1, [r0, #4]
 80198ae:	6815      	ldr	r5, [r2, #0]
 80198b0:	6085      	str	r5, [r0, #8]
 80198b2:	6852      	ldr	r2, [r2, #4]
 80198b4:	6443      	str	r3, [r0, #68]	; 0x44
 80198b6:	9b02      	ldr	r3, [sp, #8]
 80198b8:	60c2      	str	r2, [r0, #12]
 80198ba:	7401      	strb	r1, [r0, #16]
 80198bc:	6141      	str	r1, [r0, #20]
 80198be:	7601      	strb	r1, [r0, #24]
 80198c0:	8701      	strh	r1, [r0, #56]	; 0x38
 80198c2:	8401      	strh	r1, [r0, #32]
 80198c4:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80198c8:	6483      	str	r3, [r0, #72]	; 0x48
 80198ca:	bc30      	pop	{r4, r5}
 80198cc:	f7ef bebc 	b.w	8009648 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080198d0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80198d0:	b408      	push	{r3}
 80198d2:	b510      	push	{r4, lr}
 80198d4:	b085      	sub	sp, #20
 80198d6:	ac07      	add	r4, sp, #28
 80198d8:	f854 3b04 	ldr.w	r3, [r4], #4
 80198dc:	9300      	str	r3, [sp, #0]
 80198de:	4613      	mov	r3, r2
 80198e0:	4622      	mov	r2, r4
 80198e2:	9403      	str	r4, [sp, #12]
 80198e4:	f7ff ffdf 	bl	80198a6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80198e8:	b005      	add	sp, #20
 80198ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80198ee:	b001      	add	sp, #4
 80198f0:	4770      	bx	lr

080198f2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80198f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80198f4:	4605      	mov	r5, r0
 80198f6:	4608      	mov	r0, r1
 80198f8:	b1e9      	cbz	r1, 8019936 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80198fa:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80198fe:	460b      	mov	r3, r1
 8019900:	f101 0708 	add.w	r7, r1, #8
 8019904:	4622      	mov	r2, r4
 8019906:	6818      	ldr	r0, [r3, #0]
 8019908:	6859      	ldr	r1, [r3, #4]
 801990a:	4626      	mov	r6, r4
 801990c:	c603      	stmia	r6!, {r0, r1}
 801990e:	3308      	adds	r3, #8
 8019910:	42bb      	cmp	r3, r7
 8019912:	4634      	mov	r4, r6
 8019914:	d1f7      	bne.n	8019906 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8019916:	6818      	ldr	r0, [r3, #0]
 8019918:	6030      	str	r0, [r6, #0]
 801991a:	889b      	ldrh	r3, [r3, #4]
 801991c:	80b3      	strh	r3, [r6, #4]
 801991e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8019922:	015b      	lsls	r3, r3, #5
 8019924:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019928:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801992c:	430b      	orrs	r3, r1
 801992e:	425b      	negs	r3, r3
 8019930:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8019934:	4610      	mov	r0, r2
 8019936:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019938 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8019938:	b538      	push	{r3, r4, r5, lr}
 801993a:	460c      	mov	r4, r1
 801993c:	6811      	ldr	r1, [r2, #0]
 801993e:	4610      	mov	r0, r2
 8019940:	68cd      	ldr	r5, [r1, #12]
 8019942:	4619      	mov	r1, r3
 8019944:	47a8      	blx	r5
 8019946:	2800      	cmp	r0, #0
 8019948:	bf08      	it	eq
 801994a:	4620      	moveq	r0, r4
 801994c:	bd38      	pop	{r3, r4, r5, pc}
	...

08019950 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8019950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019952:	4604      	mov	r4, r0
 8019954:	4615      	mov	r5, r2
 8019956:	4608      	mov	r0, r1
 8019958:	b93a      	cbnz	r2, 801996a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801995a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801995e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8019962:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8019966:	4628      	mov	r0, r5
 8019968:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801996a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801996e:	8893      	ldrh	r3, [r2, #4]
 8019970:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8019974:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8019978:	79ee      	ldrb	r6, [r5, #7]
 801997a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801997e:	4316      	orrs	r6, r2
 8019980:	19da      	adds	r2, r3, r7
 8019982:	b291      	uxth	r1, r2
 8019984:	291d      	cmp	r1, #29
 8019986:	b2b7      	uxth	r7, r6
 8019988:	d87a      	bhi.n	8019a80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801998a:	2201      	movs	r2, #1
 801998c:	408a      	lsls	r2, r1
 801998e:	4975      	ldr	r1, [pc, #468]	; (8019b64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8019990:	420a      	tst	r2, r1
 8019992:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8019996:	d12d      	bne.n	80199f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8019998:	f412 7f60 	tst.w	r2, #896	; 0x380
 801999c:	d070      	beq.n	8019a80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801999e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80199a2:	462b      	mov	r3, r5
 80199a4:	f105 0e08 	add.w	lr, r5, #8
 80199a8:	4615      	mov	r5, r2
 80199aa:	6818      	ldr	r0, [r3, #0]
 80199ac:	6859      	ldr	r1, [r3, #4]
 80199ae:	4694      	mov	ip, r2
 80199b0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80199b4:	3308      	adds	r3, #8
 80199b6:	4573      	cmp	r3, lr
 80199b8:	4662      	mov	r2, ip
 80199ba:	d1f6      	bne.n	80199aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80199bc:	6818      	ldr	r0, [r3, #0]
 80199be:	f8cc 0000 	str.w	r0, [ip]
 80199c2:	889b      	ldrh	r3, [r3, #4]
 80199c4:	f8ac 3004 	strh.w	r3, [ip, #4]
 80199c8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80199cc:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80199d0:	b2b3      	uxth	r3, r6
 80199d2:	1aca      	subs	r2, r1, r3
 80199d4:	b292      	uxth	r2, r2
 80199d6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80199da:	10d2      	asrs	r2, r2, #3
 80199dc:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80199e0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80199e4:	4302      	orrs	r2, r0
 80199e6:	1bcf      	subs	r7, r1, r7
 80199e8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80199ec:	1afb      	subs	r3, r7, r3
 80199ee:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80199f2:	e7b8      	b.n	8019966 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80199f4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80199f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80199fa:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80199fc:	f640 6333 	movw	r3, #3635	; 0xe33
 8019a00:	4299      	cmp	r1, r3
 8019a02:	d110      	bne.n	8019a26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8019a04:	6803      	ldr	r3, [r0, #0]
 8019a06:	68db      	ldr	r3, [r3, #12]
 8019a08:	4798      	blx	r3
 8019a0a:	7b41      	ldrb	r1, [r0, #13]
 8019a0c:	00cb      	lsls	r3, r1, #3
 8019a0e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019a12:	7a03      	ldrb	r3, [r0, #8]
 8019a14:	0648      	lsls	r0, r1, #25
 8019a16:	ea43 0302 	orr.w	r3, r3, r2
 8019a1a:	bf44      	itt	mi
 8019a1c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019a20:	b21b      	sxthmi	r3, r3
 8019a22:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019a26:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8019a2a:	443b      	add	r3, r7
 8019a2c:	4433      	add	r3, r6
 8019a2e:	b29b      	uxth	r3, r3
 8019a30:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8019a34:	462a      	mov	r2, r5
 8019a36:	f105 0c08 	add.w	ip, r5, #8
 8019a3a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019a3e:	4635      	mov	r5, r6
 8019a40:	6810      	ldr	r0, [r2, #0]
 8019a42:	6851      	ldr	r1, [r2, #4]
 8019a44:	4637      	mov	r7, r6
 8019a46:	c703      	stmia	r7!, {r0, r1}
 8019a48:	3208      	adds	r2, #8
 8019a4a:	4562      	cmp	r2, ip
 8019a4c:	463e      	mov	r6, r7
 8019a4e:	d1f7      	bne.n	8019a40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8019a50:	6810      	ldr	r0, [r2, #0]
 8019a52:	6038      	str	r0, [r7, #0]
 8019a54:	8892      	ldrh	r2, [r2, #4]
 8019a56:	80ba      	strh	r2, [r7, #4]
 8019a58:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8019a5c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019a60:	10db      	asrs	r3, r3, #3
 8019a62:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019a66:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8019a6a:	4313      	orrs	r3, r2
 8019a6c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019a70:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8019a74:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8019a78:	1a9b      	subs	r3, r3, r2
 8019a7a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8019a7e:	e772      	b.n	8019966 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8019a80:	f023 0204 	bic.w	r2, r3, #4
 8019a84:	f640 611b 	movw	r1, #3611	; 0xe1b
 8019a88:	428a      	cmp	r2, r1
 8019a8a:	d003      	beq.n	8019a94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8019a8c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8019a90:	4293      	cmp	r3, r2
 8019a92:	d120      	bne.n	8019ad6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8019a94:	3b01      	subs	r3, #1
 8019a96:	4602      	mov	r2, r0
 8019a98:	b29b      	uxth	r3, r3
 8019a9a:	4629      	mov	r1, r5
 8019a9c:	4620      	mov	r0, r4
 8019a9e:	f7ff ff4b 	bl	8019938 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8019aa2:	7b41      	ldrb	r1, [r0, #13]
 8019aa4:	00cb      	lsls	r3, r1, #3
 8019aa6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019aaa:	7a03      	ldrb	r3, [r0, #8]
 8019aac:	0649      	lsls	r1, r1, #25
 8019aae:	ea43 0302 	orr.w	r3, r3, r2
 8019ab2:	bf44      	itt	mi
 8019ab4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019ab8:	b21b      	sxthmi	r3, r3
 8019aba:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019abe:	7b6b      	ldrb	r3, [r5, #13]
 8019ac0:	7aaa      	ldrb	r2, [r5, #10]
 8019ac2:	005b      	lsls	r3, r3, #1
 8019ac4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019ac8:	4313      	orrs	r3, r2
 8019aca:	115a      	asrs	r2, r3, #5
 8019acc:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8019ad0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8019ad4:	e036      	b.n	8019b44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8019ad6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8019ada:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8019ade:	7a2a      	ldrb	r2, [r5, #8]
 8019ae0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8019ae4:	ea42 0201 	orr.w	r2, r2, r1
 8019ae8:	bf1c      	itt	ne
 8019aea:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8019aee:	b212      	sxthne	r2, r2
 8019af0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8019af4:	f640 6109 	movw	r1, #3593	; 0xe09
 8019af8:	f023 0210 	bic.w	r2, r3, #16
 8019afc:	428a      	cmp	r2, r1
 8019afe:	d003      	beq.n	8019b08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8019b00:	f640 6213 	movw	r2, #3603	; 0xe13
 8019b04:	4293      	cmp	r3, r2
 8019b06:	d12a      	bne.n	8019b5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8019b08:	7b6e      	ldrb	r6, [r5, #13]
 8019b0a:	0076      	lsls	r6, r6, #1
 8019b0c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8019b10:	7aae      	ldrb	r6, [r5, #10]
 8019b12:	4316      	orrs	r6, r2
 8019b14:	f640 6213 	movw	r2, #3603	; 0xe13
 8019b18:	4293      	cmp	r3, r2
 8019b1a:	bf18      	it	ne
 8019b1c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8019b20:	4602      	mov	r2, r0
 8019b22:	bf14      	ite	ne
 8019b24:	b29b      	uxthne	r3, r3
 8019b26:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8019b2a:	4629      	mov	r1, r5
 8019b2c:	4620      	mov	r0, r4
 8019b2e:	f7ff ff03 	bl	8019938 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8019b32:	7b43      	ldrb	r3, [r0, #13]
 8019b34:	7a82      	ldrb	r2, [r0, #10]
 8019b36:	005b      	lsls	r3, r3, #1
 8019b38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019b3c:	4313      	orrs	r3, r2
 8019b3e:	1af6      	subs	r6, r6, r3
 8019b40:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8019b44:	7b69      	ldrb	r1, [r5, #13]
 8019b46:	00cb      	lsls	r3, r1, #3
 8019b48:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019b4c:	7a2b      	ldrb	r3, [r5, #8]
 8019b4e:	4313      	orrs	r3, r2
 8019b50:	064a      	lsls	r2, r1, #25
 8019b52:	bf44      	itt	mi
 8019b54:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019b58:	b21b      	sxthmi	r3, r3
 8019b5a:	1bdb      	subs	r3, r3, r7
 8019b5c:	e747      	b.n	80199ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8019b5e:	2300      	movs	r3, #0
 8019b60:	e7b6      	b.n	8019ad0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8019b62:	bf00      	nop
 8019b64:	3fc00079 	.word	0x3fc00079

08019b68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8019b68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019b6c:	4604      	mov	r4, r0
 8019b6e:	b942      	cbnz	r2, 8019b82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8019b70:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019b74:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8019b78:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8019b7c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8019b80:	e047      	b.n	8019c12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8019b82:	7b51      	ldrb	r1, [r2, #13]
 8019b84:	8893      	ldrh	r3, [r2, #4]
 8019b86:	010d      	lsls	r5, r1, #4
 8019b88:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8019b8c:	79d5      	ldrb	r5, [r2, #7]
 8019b8e:	4305      	orrs	r5, r0
 8019b90:	2d04      	cmp	r5, #4
 8019b92:	bfcc      	ite	gt
 8019b94:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8019b98:	f04f 0e01 	movle.w	lr, #1
 8019b9c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8019ba0:	f200 80ab 	bhi.w	8019cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8019ba4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8019ba8:	4283      	cmp	r3, r0
 8019baa:	d216      	bcs.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019bac:	f240 605b 	movw	r0, #1627	; 0x65b
 8019bb0:	4283      	cmp	r3, r0
 8019bb2:	d859      	bhi.n	8019c68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8019bb4:	f240 6057 	movw	r0, #1623	; 0x657
 8019bb8:	4283      	cmp	r3, r0
 8019bba:	d20e      	bcs.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019bbc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8019bc0:	d24a      	bcs.n	8019c58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8019bc2:	f240 604e 	movw	r0, #1614	; 0x64e
 8019bc6:	4283      	cmp	r3, r0
 8019bc8:	d207      	bcs.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019bca:	f240 601a 	movw	r0, #1562	; 0x61a
 8019bce:	4283      	cmp	r3, r0
 8019bd0:	d02a      	beq.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019bd2:	d821      	bhi.n	8019c18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8019bd4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8019bd8:	d35b      	bcc.n	8019c92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019bda:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8019bde:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019be2:	f040 80d0 	bne.w	8019d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8019be6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8019bea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019bee:	f040 80ca 	bne.w	8019d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8019bf2:	00cb      	lsls	r3, r1, #3
 8019bf4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019bf8:	7a13      	ldrb	r3, [r2, #8]
 8019bfa:	0649      	lsls	r1, r1, #25
 8019bfc:	ea43 0300 	orr.w	r3, r3, r0
 8019c00:	bf44      	itt	mi
 8019c02:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019c06:	b21b      	sxthmi	r3, r3
 8019c08:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019c0c:	1b5d      	subs	r5, r3, r5
 8019c0e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019c12:	4610      	mov	r0, r2
 8019c14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019c18:	f240 604b 	movw	r0, #1611	; 0x64b
 8019c1c:	4283      	cmp	r3, r0
 8019c1e:	d338      	bcc.n	8019c92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019c20:	f240 604c 	movw	r0, #1612	; 0x64c
 8019c24:	4283      	cmp	r3, r0
 8019c26:	d9d8      	bls.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019c28:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8019c2c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8019c30:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019c34:	f040 80f2 	bne.w	8019e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8019c38:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019c3c:	f040 80ee 	bne.w	8019e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8019c40:	00cb      	lsls	r3, r1, #3
 8019c42:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019c46:	7a13      	ldrb	r3, [r2, #8]
 8019c48:	064e      	lsls	r6, r1, #25
 8019c4a:	ea43 0300 	orr.w	r3, r3, r0
 8019c4e:	bf44      	itt	mi
 8019c50:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019c54:	b21b      	sxthmi	r3, r3
 8019c56:	e7d9      	b.n	8019c0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8019c58:	f240 6054 	movw	r0, #1620	; 0x654
 8019c5c:	4283      	cmp	r3, r0
 8019c5e:	d8e3      	bhi.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019c60:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8019c64:	d9e0      	bls.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019c66:	e7b8      	b.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019c68:	f240 6074 	movw	r0, #1652	; 0x674
 8019c6c:	4283      	cmp	r3, r0
 8019c6e:	d0b4      	beq.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019c70:	d82d      	bhi.n	8019cce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8019c72:	f240 605e 	movw	r0, #1630	; 0x65e
 8019c76:	4283      	cmp	r3, r0
 8019c78:	d804      	bhi.n	8019c84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8019c7a:	f240 605d 	movw	r0, #1629	; 0x65d
 8019c7e:	4283      	cmp	r3, r0
 8019c80:	d3d2      	bcc.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019c82:	e7aa      	b.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019c84:	f240 605f 	movw	r0, #1631	; 0x65f
 8019c88:	4283      	cmp	r3, r0
 8019c8a:	d0cd      	beq.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019c8c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8019c90:	d0a3      	beq.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019c92:	00cb      	lsls	r3, r1, #3
 8019c94:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019c98:	7a13      	ldrb	r3, [r2, #8]
 8019c9a:	0649      	lsls	r1, r1, #25
 8019c9c:	ea43 0300 	orr.w	r3, r3, r0
 8019ca0:	bf44      	itt	mi
 8019ca2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019ca6:	b21b      	sxthmi	r3, r3
 8019ca8:	1b5d      	subs	r5, r3, r5
 8019caa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019cae:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019cb2:	7b53      	ldrb	r3, [r2, #13]
 8019cb4:	015b      	lsls	r3, r3, #5
 8019cb6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019cba:	7993      	ldrb	r3, [r2, #6]
 8019cbc:	430b      	orrs	r3, r1
 8019cbe:	005b      	lsls	r3, r3, #1
 8019cc0:	2105      	movs	r1, #5
 8019cc2:	fb93 f3f1 	sdiv	r3, r3, r1
 8019cc6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8019cca:	440b      	add	r3, r1
 8019ccc:	e756      	b.n	8019b7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8019cce:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8019cd2:	4283      	cmp	r3, r0
 8019cd4:	d809      	bhi.n	8019cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8019cd6:	f240 60df 	movw	r0, #1759	; 0x6df
 8019cda:	4283      	cmp	r3, r0
 8019cdc:	f4bf af7d 	bcs.w	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019ce0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8019ce4:	2b05      	cmp	r3, #5
 8019ce6:	d8d4      	bhi.n	8019c92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019ce8:	e777      	b.n	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019cea:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8019cee:	4283      	cmp	r3, r0
 8019cf0:	d09a      	beq.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019cf2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8019cf6:	4283      	cmp	r3, r0
 8019cf8:	e7ca      	b.n	8019c90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8019cfa:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8019cfe:	d22b      	bcs.n	8019d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8019d00:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8019d04:	4283      	cmp	r3, r0
 8019d06:	d28f      	bcs.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019d08:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8019d0c:	4283      	cmp	r3, r0
 8019d0e:	d816      	bhi.n	8019d3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8019d10:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8019d14:	4283      	cmp	r3, r0
 8019d16:	f4bf af60 	bcs.w	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019d1a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8019d1e:	4283      	cmp	r3, r0
 8019d20:	d80a      	bhi.n	8019d38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8019d22:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8019d26:	4283      	cmp	r3, r0
 8019d28:	f4bf af57 	bcs.w	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019d2c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8019d30:	4283      	cmp	r3, r0
 8019d32:	f43f af79 	beq.w	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019d36:	e7ac      	b.n	8019c92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019d38:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8019d3c:	e7f8      	b.n	8019d30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8019d3e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8019d42:	4283      	cmp	r3, r0
 8019d44:	d802      	bhi.n	8019d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8019d46:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8019d4a:	e798      	b.n	8019c7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8019d4c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8019d50:	4283      	cmp	r3, r0
 8019d52:	f47f af42 	bne.w	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019d56:	e767      	b.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019d58:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8019d5c:	4283      	cmp	r3, r0
 8019d5e:	f43f af63 	beq.w	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019d62:	d802      	bhi.n	8019d6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8019d64:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8019d68:	e7f2      	b.n	8019d50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8019d6a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8019d6e:	4283      	cmp	r3, r0
 8019d70:	d805      	bhi.n	8019d7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8019d72:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8019d76:	4283      	cmp	r3, r0
 8019d78:	f4ff af2f 	bcc.w	8019bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019d7c:	e754      	b.n	8019c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019d7e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8019d82:	4283      	cmp	r3, r0
 8019d84:	e7af      	b.n	8019ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8019d86:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8019d8a:	4617      	mov	r7, r2
 8019d8c:	f102 0808 	add.w	r8, r2, #8
 8019d90:	4666      	mov	r6, ip
 8019d92:	6838      	ldr	r0, [r7, #0]
 8019d94:	6879      	ldr	r1, [r7, #4]
 8019d96:	46e6      	mov	lr, ip
 8019d98:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8019d9c:	3708      	adds	r7, #8
 8019d9e:	4547      	cmp	r7, r8
 8019da0:	46f4      	mov	ip, lr
 8019da2:	d1f6      	bne.n	8019d92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8019da4:	6838      	ldr	r0, [r7, #0]
 8019da6:	f8ce 0000 	str.w	r0, [lr]
 8019daa:	88b9      	ldrh	r1, [r7, #4]
 8019dac:	f8ae 1004 	strh.w	r1, [lr, #4]
 8019db0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8019db4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019db8:	d009      	beq.n	8019dce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8019dba:	7b51      	ldrb	r1, [r2, #13]
 8019dbc:	7992      	ldrb	r2, [r2, #6]
 8019dbe:	0149      	lsls	r1, r1, #5
 8019dc0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019dc4:	4311      	orrs	r1, r2
 8019dc6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8019dca:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8019dce:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019dd2:	b2ad      	uxth	r5, r5
 8019dd4:	d00d      	beq.n	8019df2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8019dd6:	442b      	add	r3, r5
 8019dd8:	b29b      	uxth	r3, r3
 8019dda:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8019dde:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019de2:	10db      	asrs	r3, r3, #3
 8019de4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019de8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8019dec:	4313      	orrs	r3, r2
 8019dee:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019df2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8019df6:	00cb      	lsls	r3, r1, #3
 8019df8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019dfc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019e00:	064f      	lsls	r7, r1, #25
 8019e02:	ea43 0302 	orr.w	r3, r3, r2
 8019e06:	bf44      	itt	mi
 8019e08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019e0c:	b21b      	sxthmi	r3, r3
 8019e0e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019e12:	1b5b      	subs	r3, r3, r5
 8019e14:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8019e18:	4632      	mov	r2, r6
 8019e1a:	e6fa      	b.n	8019c12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8019e1c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8019e20:	4617      	mov	r7, r2
 8019e22:	f102 0908 	add.w	r9, r2, #8
 8019e26:	4666      	mov	r6, ip
 8019e28:	6838      	ldr	r0, [r7, #0]
 8019e2a:	6879      	ldr	r1, [r7, #4]
 8019e2c:	46e0      	mov	r8, ip
 8019e2e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8019e32:	3708      	adds	r7, #8
 8019e34:	454f      	cmp	r7, r9
 8019e36:	46c4      	mov	ip, r8
 8019e38:	d1f6      	bne.n	8019e28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8019e3a:	6838      	ldr	r0, [r7, #0]
 8019e3c:	f8c8 0000 	str.w	r0, [r8]
 8019e40:	88b9      	ldrh	r1, [r7, #4]
 8019e42:	f8a8 1004 	strh.w	r1, [r8, #4]
 8019e46:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8019e4a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019e4e:	d009      	beq.n	8019e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8019e50:	7b51      	ldrb	r1, [r2, #13]
 8019e52:	7992      	ldrb	r2, [r2, #6]
 8019e54:	0149      	lsls	r1, r1, #5
 8019e56:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019e5a:	4311      	orrs	r1, r2
 8019e5c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8019e60:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8019e64:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019e68:	d00e      	beq.n	8019e88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8019e6a:	eba3 030e 	sub.w	r3, r3, lr
 8019e6e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8019e72:	b29b      	uxth	r3, r3
 8019e74:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019e78:	10db      	asrs	r3, r3, #3
 8019e7a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8019e7e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019e82:	4313      	orrs	r3, r2
 8019e84:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019e88:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8019e8c:	00cb      	lsls	r3, r1, #3
 8019e8e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019e92:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019e96:	0648      	lsls	r0, r1, #25
 8019e98:	ea43 0302 	orr.w	r3, r3, r2
 8019e9c:	bf44      	itt	mi
 8019e9e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019ea2:	b21b      	sxthmi	r3, r3
 8019ea4:	1b5d      	subs	r5, r3, r5
 8019ea6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019eaa:	e7b5      	b.n	8019e18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08019eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8019eac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019eb0:	461e      	mov	r6, r3
 8019eb2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019eb4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019eb8:	4604      	mov	r4, r0
 8019eba:	4617      	mov	r7, r2
 8019ebc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019ec0:	f7ef fb80 	bl	80095c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019ec4:	4605      	mov	r5, r0
 8019ec6:	b918      	cbnz	r0, 8019ed0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8019ec8:	6030      	str	r0, [r6, #0]
 8019eca:	4628      	mov	r0, r5
 8019ecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019ed0:	683b      	ldr	r3, [r7, #0]
 8019ed2:	4601      	mov	r1, r0
 8019ed4:	68db      	ldr	r3, [r3, #12]
 8019ed6:	4638      	mov	r0, r7
 8019ed8:	4798      	blx	r3
 8019eda:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8019ede:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8019ee2:	4602      	mov	r2, r0
 8019ee4:	6030      	str	r0, [r6, #0]
 8019ee6:	d213      	bcs.n	8019f10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8019ee8:	4643      	mov	r3, r8
 8019eea:	4639      	mov	r1, r7
 8019eec:	4620      	mov	r0, r4
 8019eee:	f7ff fe3b 	bl	8019b68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019ef2:	6030      	str	r0, [r6, #0]
 8019ef4:	6833      	ldr	r3, [r6, #0]
 8019ef6:	b143      	cbz	r3, 8019f0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8019ef8:	7b5a      	ldrb	r2, [r3, #13]
 8019efa:	7a9b      	ldrb	r3, [r3, #10]
 8019efc:	0052      	lsls	r2, r2, #1
 8019efe:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8019f02:	4313      	orrs	r3, r2
 8019f04:	bf0c      	ite	eq
 8019f06:	2301      	moveq	r3, #1
 8019f08:	2300      	movne	r3, #0
 8019f0a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8019f0e:	e7dc      	b.n	8019eca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8019f10:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8019f14:	b29b      	uxth	r3, r3
 8019f16:	2b7f      	cmp	r3, #127	; 0x7f
 8019f18:	d804      	bhi.n	8019f24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8019f1a:	4639      	mov	r1, r7
 8019f1c:	4620      	mov	r0, r4
 8019f1e:	f7ff fd17 	bl	8019950 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019f22:	e7e6      	b.n	8019ef2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8019f24:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019f28:	2b00      	cmp	r3, #0
 8019f2a:	d0e3      	beq.n	8019ef4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019f2c:	f640 1302 	movw	r3, #2306	; 0x902
 8019f30:	429d      	cmp	r5, r3
 8019f32:	d1df      	bne.n	8019ef4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019f34:	4601      	mov	r1, r0
 8019f36:	4620      	mov	r0, r4
 8019f38:	f7ff fcdb 	bl	80198f2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019f3c:	e7d9      	b.n	8019ef2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08019f3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8019f3e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019f42:	461e      	mov	r6, r3
 8019f44:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019f46:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019f4a:	4604      	mov	r4, r0
 8019f4c:	4617      	mov	r7, r2
 8019f4e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019f52:	f7ef fb37 	bl	80095c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019f56:	4605      	mov	r5, r0
 8019f58:	b918      	cbnz	r0, 8019f62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8019f5a:	6030      	str	r0, [r6, #0]
 8019f5c:	4628      	mov	r0, r5
 8019f5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019f62:	683b      	ldr	r3, [r7, #0]
 8019f64:	4601      	mov	r1, r0
 8019f66:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8019f6a:	4638      	mov	r0, r7
 8019f6c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8019f70:	47c8      	blx	r9
 8019f72:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8019f76:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8019f7a:	4602      	mov	r2, r0
 8019f7c:	6030      	str	r0, [r6, #0]
 8019f7e:	d213      	bcs.n	8019fa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8019f80:	4643      	mov	r3, r8
 8019f82:	4639      	mov	r1, r7
 8019f84:	4620      	mov	r0, r4
 8019f86:	f7ff fdef 	bl	8019b68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019f8a:	6030      	str	r0, [r6, #0]
 8019f8c:	6833      	ldr	r3, [r6, #0]
 8019f8e:	b143      	cbz	r3, 8019fa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8019f90:	7b5a      	ldrb	r2, [r3, #13]
 8019f92:	7a9b      	ldrb	r3, [r3, #10]
 8019f94:	0052      	lsls	r2, r2, #1
 8019f96:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8019f9a:	4313      	orrs	r3, r2
 8019f9c:	bf0c      	ite	eq
 8019f9e:	2301      	moveq	r3, #1
 8019fa0:	2300      	movne	r3, #0
 8019fa2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8019fa6:	e7d9      	b.n	8019f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8019fa8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8019fac:	b29b      	uxth	r3, r3
 8019fae:	2b7f      	cmp	r3, #127	; 0x7f
 8019fb0:	d804      	bhi.n	8019fbc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8019fb2:	4639      	mov	r1, r7
 8019fb4:	4620      	mov	r0, r4
 8019fb6:	f7ff fccb 	bl	8019950 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019fba:	e7e6      	b.n	8019f8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8019fbc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019fc0:	2b00      	cmp	r3, #0
 8019fc2:	d0e3      	beq.n	8019f8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019fc4:	f640 1302 	movw	r3, #2306	; 0x902
 8019fc8:	429d      	cmp	r5, r3
 8019fca:	d1df      	bne.n	8019f8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019fcc:	4601      	mov	r1, r0
 8019fce:	4620      	mov	r0, r4
 8019fd0:	f7ff fc8f 	bl	80198f2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019fd4:	e7d9      	b.n	8019f8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08019fd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8019fd6:	b510      	push	{r4, lr}
 8019fd8:	4604      	mov	r4, r0
 8019fda:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8019fde:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019fe0:	b1f1      	cbz	r1, 801a020 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019fe2:	2b0a      	cmp	r3, #10
 8019fe4:	d02f      	beq.n	801a046 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019fe6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8019fe8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8019fec:	3901      	subs	r1, #1
 8019fee:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8019ff0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8019ff4:	1c51      	adds	r1, r2, #1
 8019ff6:	b289      	uxth	r1, r1
 8019ff8:	2901      	cmp	r1, #1
 8019ffa:	bf84      	itt	hi
 8019ffc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801a000:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801a002:	f103 0201 	add.w	r2, r3, #1
 801a006:	8722      	strh	r2, [r4, #56]	; 0x38
 801a008:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a00a:	bf98      	it	ls
 801a00c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801a00e:	4413      	add	r3, r2
 801a010:	b29b      	uxth	r3, r3
 801a012:	2b09      	cmp	r3, #9
 801a014:	bf88      	it	hi
 801a016:	3b0a      	subhi	r3, #10
 801a018:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a01c:	8458      	strh	r0, [r3, #34]	; 0x22
 801a01e:	e7dc      	b.n	8019fda <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801a020:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801a022:	2b0a      	cmp	r3, #10
 801a024:	d00f      	beq.n	801a046 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801a026:	4620      	mov	r0, r4
 801a028:	f7ff fc11 	bl	801984e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801a02c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801a02e:	1c5a      	adds	r2, r3, #1
 801a030:	8722      	strh	r2, [r4, #56]	; 0x38
 801a032:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a034:	4413      	add	r3, r2
 801a036:	b29b      	uxth	r3, r3
 801a038:	2b09      	cmp	r3, #9
 801a03a:	bf88      	it	hi
 801a03c:	3b0a      	subhi	r3, #10
 801a03e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a042:	8458      	strh	r0, [r3, #34]	; 0x22
 801a044:	e7ec      	b.n	801a020 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801a046:	bd10      	pop	{r4, pc}

0801a048 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801a048:	b538      	push	{r3, r4, r5, lr}
 801a04a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a04c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801a050:	4604      	mov	r4, r0
 801a052:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801a054:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801a056:	3a01      	subs	r2, #1
 801a058:	8702      	strh	r2, [r0, #56]	; 0x38
 801a05a:	1c5a      	adds	r2, r3, #1
 801a05c:	b292      	uxth	r2, r2
 801a05e:	2a09      	cmp	r2, #9
 801a060:	bf86      	itte	hi
 801a062:	3b09      	subhi	r3, #9
 801a064:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801a066:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801a068:	f7ff ffb5 	bl	8019fd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801a06c:	8c23      	ldrh	r3, [r4, #32]
 801a06e:	2b01      	cmp	r3, #1
 801a070:	bf9c      	itt	ls
 801a072:	3301      	addls	r3, #1
 801a074:	8423      	strhls	r3, [r4, #32]
 801a076:	8be3      	ldrh	r3, [r4, #30]
 801a078:	b90b      	cbnz	r3, 801a07e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801a07a:	2302      	movs	r3, #2
 801a07c:	83e3      	strh	r3, [r4, #30]
 801a07e:	8be3      	ldrh	r3, [r4, #30]
 801a080:	3b01      	subs	r3, #1
 801a082:	b29b      	uxth	r3, r3
 801a084:	83e3      	strh	r3, [r4, #30]
 801a086:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a08a:	4628      	mov	r0, r5
 801a08c:	8365      	strh	r5, [r4, #26]
 801a08e:	bd38      	pop	{r3, r4, r5, pc}

0801a090 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801a090:	428a      	cmp	r2, r1
 801a092:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a096:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801a098:	d931      	bls.n	801a0fe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801a09a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801a09c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801a0a0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801a0a4:	19ee      	adds	r6, r5, r7
 801a0a6:	1a54      	subs	r4, r2, r1
 801a0a8:	3e01      	subs	r6, #1
 801a0aa:	fa1f fe84 	uxth.w	lr, r4
 801a0ae:	b2b4      	uxth	r4, r6
 801a0b0:	eba4 090e 	sub.w	r9, r4, lr
 801a0b4:	fa1f f989 	uxth.w	r9, r9
 801a0b8:	2c09      	cmp	r4, #9
 801a0ba:	4626      	mov	r6, r4
 801a0bc:	bf88      	it	hi
 801a0be:	f1a4 060a 	subhi.w	r6, r4, #10
 801a0c2:	f1bc 0f00 	cmp.w	ip, #0
 801a0c6:	bf08      	it	eq
 801a0c8:	f04f 0c02 	moveq.w	ip, #2
 801a0cc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a0d0:	f10c 3cff 	add.w	ip, ip, #4294967295
 801a0d4:	fa1f fc8c 	uxth.w	ip, ip
 801a0d8:	3c01      	subs	r4, #1
 801a0da:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801a0de:	b2a4      	uxth	r4, r4
 801a0e0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801a0e4:	454c      	cmp	r4, r9
 801a0e6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801a0ea:	d1e5      	bne.n	801a0b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801a0ec:	eba5 050e 	sub.w	r5, r5, lr
 801a0f0:	eb0e 0408 	add.w	r4, lr, r8
 801a0f4:	8705      	strh	r5, [r0, #56]	; 0x38
 801a0f6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801a0fa:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801a0fe:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801a100:	1a64      	subs	r4, r4, r1
 801a102:	4439      	add	r1, r7
 801a104:	b289      	uxth	r1, r1
 801a106:	2909      	cmp	r1, #9
 801a108:	bf88      	it	hi
 801a10a:	390a      	subhi	r1, #10
 801a10c:	8704      	strh	r4, [r0, #56]	; 0x38
 801a10e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801a110:	250a      	movs	r5, #10
 801a112:	b18a      	cbz	r2, 801a138 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801a114:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801a116:	3a01      	subs	r2, #1
 801a118:	b292      	uxth	r2, r2
 801a11a:	3101      	adds	r1, #1
 801a11c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801a120:	8701      	strh	r1, [r0, #56]	; 0x38
 801a122:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801a124:	b901      	cbnz	r1, 801a128 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801a126:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a128:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801a12a:	3901      	subs	r1, #1
 801a12c:	b289      	uxth	r1, r1
 801a12e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801a130:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801a134:	844c      	strh	r4, [r1, #34]	; 0x22
 801a136:	e7ec      	b.n	801a112 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801a138:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a13c:	f7ff bf4b 	b.w	8019fd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801a140 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801a140:	b570      	push	{r4, r5, r6, lr}
 801a142:	2500      	movs	r5, #0
 801a144:	4295      	cmp	r5, r2
 801a146:	d011      	beq.n	801a16c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801a148:	8bc4      	ldrh	r4, [r0, #30]
 801a14a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801a14e:	4414      	add	r4, r2
 801a150:	3c01      	subs	r4, #1
 801a152:	1b64      	subs	r4, r4, r5
 801a154:	b2a4      	uxth	r4, r4
 801a156:	2c01      	cmp	r4, #1
 801a158:	bf88      	it	hi
 801a15a:	3c02      	subhi	r4, #2
 801a15c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a160:	8b64      	ldrh	r4, [r4, #26]
 801a162:	42b4      	cmp	r4, r6
 801a164:	d117      	bne.n	801a196 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801a166:	3501      	adds	r5, #1
 801a168:	b2ad      	uxth	r5, r5
 801a16a:	e7eb      	b.n	801a144 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801a16c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a170:	2400      	movs	r4, #0
 801a172:	4413      	add	r3, r2
 801a174:	b2a2      	uxth	r2, r4
 801a176:	429a      	cmp	r2, r3
 801a178:	da0f      	bge.n	801a19a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801a17a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801a17c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801a180:	4432      	add	r2, r6
 801a182:	b292      	uxth	r2, r2
 801a184:	2a09      	cmp	r2, #9
 801a186:	bf88      	it	hi
 801a188:	3a0a      	subhi	r2, #10
 801a18a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a18e:	3401      	adds	r4, #1
 801a190:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801a192:	42aa      	cmp	r2, r5
 801a194:	d0ee      	beq.n	801a174 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801a196:	2000      	movs	r0, #0
 801a198:	bd70      	pop	{r4, r5, r6, pc}
 801a19a:	2001      	movs	r0, #1
 801a19c:	e7fc      	b.n	801a198 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801a19e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801a19e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1a2:	4605      	mov	r5, r0
 801a1a4:	4616      	mov	r6, r2
 801a1a6:	1c8c      	adds	r4, r1, #2
 801a1a8:	8809      	ldrh	r1, [r1, #0]
 801a1aa:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801a1ae:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801a1b2:	42b3      	cmp	r3, r6
 801a1b4:	d124      	bne.n	801a200 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801a1b6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801a1ba:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801a1be:	f001 070f 	and.w	r7, r1, #15
 801a1c2:	f8cd 8000 	str.w	r8, [sp]
 801a1c6:	464b      	mov	r3, r9
 801a1c8:	4652      	mov	r2, sl
 801a1ca:	4621      	mov	r1, r4
 801a1cc:	4628      	mov	r0, r5
 801a1ce:	f7ff ffb7 	bl	801a140 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801a1d2:	4683      	mov	fp, r0
 801a1d4:	b168      	cbz	r0, 801a1f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801a1d6:	eb0a 0109 	add.w	r1, sl, r9
 801a1da:	4441      	add	r1, r8
 801a1dc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801a1e0:	463a      	mov	r2, r7
 801a1e2:	4649      	mov	r1, r9
 801a1e4:	4628      	mov	r0, r5
 801a1e6:	f7ff ff53 	bl	801a090 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801a1ea:	4658      	mov	r0, fp
 801a1ec:	b003      	add	sp, #12
 801a1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1f2:	eb07 010a 	add.w	r1, r7, sl
 801a1f6:	4449      	add	r1, r9
 801a1f8:	4441      	add	r1, r8
 801a1fa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801a1fe:	e7d2      	b.n	801a1a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801a200:	f04f 0b00 	mov.w	fp, #0
 801a204:	e7f1      	b.n	801a1ea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801a206 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801a206:	b570      	push	{r4, r5, r6, lr}
 801a208:	8810      	ldrh	r0, [r2, #0]
 801a20a:	4298      	cmp	r0, r3
 801a20c:	d817      	bhi.n	801a23e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801a20e:	1e48      	subs	r0, r1, #1
 801a210:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801a214:	4298      	cmp	r0, r3
 801a216:	d312      	bcc.n	801a23e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801a218:	2400      	movs	r4, #0
 801a21a:	428c      	cmp	r4, r1
 801a21c:	d20f      	bcs.n	801a23e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801a21e:	1860      	adds	r0, r4, r1
 801a220:	1040      	asrs	r0, r0, #1
 801a222:	0085      	lsls	r5, r0, #2
 801a224:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801a228:	42b3      	cmp	r3, r6
 801a22a:	d902      	bls.n	801a232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801a22c:	3001      	adds	r0, #1
 801a22e:	b284      	uxth	r4, r0
 801a230:	e7f3      	b.n	801a21a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801a232:	d201      	bcs.n	801a238 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801a234:	b281      	uxth	r1, r0
 801a236:	e7f0      	b.n	801a21a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801a238:	442a      	add	r2, r5
 801a23a:	8850      	ldrh	r0, [r2, #2]
 801a23c:	bd70      	pop	{r4, r5, r6, pc}
 801a23e:	2000      	movs	r0, #0
 801a240:	e7fc      	b.n	801a23c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801a242 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801a242:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a246:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801a248:	886f      	ldrh	r7, [r5, #2]
 801a24a:	4604      	mov	r4, r0
 801a24c:	087f      	lsrs	r7, r7, #1
 801a24e:	260b      	movs	r6, #11
 801a250:	3e01      	subs	r6, #1
 801a252:	d013      	beq.n	801a27c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801a254:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801a256:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a25a:	462a      	mov	r2, r5
 801a25c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801a260:	4639      	mov	r1, r7
 801a262:	4643      	mov	r3, r8
 801a264:	4620      	mov	r0, r4
 801a266:	f7ff ffce 	bl	801a206 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801a26a:	b138      	cbz	r0, 801a27c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801a26c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801a270:	4642      	mov	r2, r8
 801a272:	4620      	mov	r0, r4
 801a274:	f7ff ff93 	bl	801a19e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801a278:	2800      	cmp	r0, #0
 801a27a:	d1e9      	bne.n	801a250 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801a27c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801a280 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801a280:	b570      	push	{r4, r5, r6, lr}
 801a282:	694a      	ldr	r2, [r1, #20]
 801a284:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801a286:	684b      	ldr	r3, [r1, #4]
 801a288:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801a28a:	1b54      	subs	r4, r2, r5
 801a28c:	f000 8106 	beq.w	801a49c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801a290:	1b9b      	subs	r3, r3, r6
 801a292:	d003      	beq.n	801a29c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801a294:	4363      	muls	r3, r4
 801a296:	2210      	movs	r2, #16
 801a298:	fb93 f3f2 	sdiv	r3, r3, r2
 801a29c:	680c      	ldr	r4, [r1, #0]
 801a29e:	698a      	ldr	r2, [r1, #24]
 801a2a0:	1b65      	subs	r5, r4, r5
 801a2a2:	f000 80fd 	beq.w	801a4a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801a2a6:	1b92      	subs	r2, r2, r6
 801a2a8:	d003      	beq.n	801a2b2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801a2aa:	436a      	muls	r2, r5
 801a2ac:	2410      	movs	r4, #16
 801a2ae:	fb92 f2f4 	sdiv	r2, r2, r4
 801a2b2:	1a9b      	subs	r3, r3, r2
 801a2b4:	ee07 3a90 	vmov	s15, r3
 801a2b8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801a4dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801a2bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a2c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a2c4:	ee67 7a84 	vmul.f32	s15, s15, s8
 801a2c8:	460a      	mov	r2, r1
 801a2ca:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801a2ce:	4603      	mov	r3, r0
 801a2d0:	f100 040c 	add.w	r4, r0, #12
 801a2d4:	eeb1 6a43 	vneg.f32	s12, s6
 801a2d8:	edd2 7a02 	vldr	s15, [r2, #8]
 801a2dc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801a2e0:	3214      	adds	r2, #20
 801a2e2:	ece3 6a01 	vstmia	r3!, {s13}
 801a2e6:	ed52 7a02 	vldr	s15, [r2, #-8]
 801a2ea:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a2ee:	429c      	cmp	r4, r3
 801a2f0:	edc3 7a02 	vstr	s15, [r3, #8]
 801a2f4:	ed52 7a01 	vldr	s15, [r2, #-4]
 801a2f8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a2fc:	edc3 7a05 	vstr	s15, [r3, #20]
 801a300:	d1ea      	bne.n	801a2d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801a302:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801a304:	698b      	ldr	r3, [r1, #24]
 801a306:	edd0 4a02 	vldr	s9, [r0, #8]
 801a30a:	edd0 3a00 	vldr	s7, [r0]
 801a30e:	edd0 6a01 	vldr	s13, [r0, #4]
 801a312:	ed90 5a05 	vldr	s10, [r0, #20]
 801a316:	ed90 2a03 	vldr	s4, [r0, #12]
 801a31a:	edd0 5a04 	vldr	s11, [r0, #16]
 801a31e:	ed90 1a07 	vldr	s2, [r0, #28]
 801a322:	edd0 2a06 	vldr	s5, [r0, #24]
 801a326:	1a9b      	subs	r3, r3, r2
 801a328:	ee07 3a90 	vmov	s15, r3
 801a32c:	684b      	ldr	r3, [r1, #4]
 801a32e:	1a9b      	subs	r3, r3, r2
 801a330:	ee07 3a10 	vmov	s14, r3
 801a334:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a338:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801a33c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801a340:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801a344:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a348:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801a34c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a350:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801a354:	eee6 7a87 	vfma.f32	s15, s13, s14
 801a358:	ee32 5a45 	vsub.f32	s10, s4, s10
 801a35c:	ee67 7a83 	vmul.f32	s15, s15, s6
 801a360:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801a364:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801a366:	694a      	ldr	r2, [r1, #20]
 801a368:	1b13      	subs	r3, r2, r4
 801a36a:	ee07 3a10 	vmov	s14, r3
 801a36e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a372:	680b      	ldr	r3, [r1, #0]
 801a374:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a378:	1b1b      	subs	r3, r3, r4
 801a37a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801a37e:	ee07 3a10 	vmov	s14, r3
 801a382:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a386:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a38a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801a38e:	ee64 4a86 	vmul.f32	s9, s9, s12
 801a392:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801a396:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801a398:	698b      	ldr	r3, [r1, #24]
 801a39a:	1a9b      	subs	r3, r3, r2
 801a39c:	ee06 3a90 	vmov	s13, r3
 801a3a0:	684b      	ldr	r3, [r1, #4]
 801a3a2:	1a9b      	subs	r3, r3, r2
 801a3a4:	ee07 3a10 	vmov	s14, r3
 801a3a8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801a3ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a3b0:	ee66 6a84 	vmul.f32	s13, s13, s8
 801a3b4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a3b8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801a3bc:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a3c0:	ee66 6a83 	vmul.f32	s13, s13, s6
 801a3c4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801a3c8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801a3ca:	694a      	ldr	r2, [r1, #20]
 801a3cc:	1b13      	subs	r3, r2, r4
 801a3ce:	ee07 3a10 	vmov	s14, r3
 801a3d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a3d6:	680b      	ldr	r3, [r1, #0]
 801a3d8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a3dc:	1b1b      	subs	r3, r3, r4
 801a3de:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801a3e2:	ee07 3a10 	vmov	s14, r3
 801a3e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a3ea:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a3ee:	eea5 5a87 	vfma.f32	s10, s11, s14
 801a3f2:	edd0 5a08 	vldr	s11, [r0, #32]
 801a3f6:	ee25 5a06 	vmul.f32	s10, s10, s12
 801a3fa:	ee31 1a65 	vsub.f32	s2, s2, s11
 801a3fe:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801a402:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801a404:	698b      	ldr	r3, [r1, #24]
 801a406:	1a9b      	subs	r3, r3, r2
 801a408:	ee07 3a10 	vmov	s14, r3
 801a40c:	684b      	ldr	r3, [r1, #4]
 801a40e:	1a9b      	subs	r3, r3, r2
 801a410:	ee01 3a90 	vmov	s3, r3
 801a414:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a418:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801a41c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a420:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801a424:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801a428:	ee61 1a84 	vmul.f32	s3, s3, s8
 801a42c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801a430:	ee27 7a03 	vmul.f32	s14, s14, s6
 801a434:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801a438:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801a43a:	694a      	ldr	r2, [r1, #20]
 801a43c:	1b13      	subs	r3, r2, r4
 801a43e:	ee03 3a10 	vmov	s6, r3
 801a442:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801a446:	680b      	ldr	r3, [r1, #0]
 801a448:	ee23 3a04 	vmul.f32	s6, s6, s8
 801a44c:	1b1b      	subs	r3, r3, r4
 801a44e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801a452:	ee03 3a10 	vmov	s6, r3
 801a456:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801a45a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801a45e:	eee1 5a04 	vfma.f32	s11, s2, s8
 801a462:	ee25 6a86 	vmul.f32	s12, s11, s12
 801a466:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801a46a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801a46e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801a472:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a47a:	dd13      	ble.n	801a4a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801a47c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801a480:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801a484:	63c3      	str	r3, [r0, #60]	; 0x3c
 801a486:	eee3 7a87 	vfma.f32	s15, s7, s14
 801a48a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a48e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a492:	dd15      	ble.n	801a4c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801a494:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801a498:	6403      	str	r3, [r0, #64]	; 0x40
 801a49a:	bd70      	pop	{r4, r5, r6, pc}
 801a49c:	4623      	mov	r3, r4
 801a49e:	e6fd      	b.n	801a29c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801a4a0:	462a      	mov	r2, r5
 801a4a2:	e706      	b.n	801a2b2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801a4a4:	d502      	bpl.n	801a4ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801a4a6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801a4aa:	e7e9      	b.n	801a480 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801a4ac:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801a4b0:	eea3 2a85 	vfma.f32	s4, s7, s10
 801a4b4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801a4b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4bc:	dade      	bge.n	801a47c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801a4be:	e7f2      	b.n	801a4a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801a4c0:	d502      	bpl.n	801a4c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801a4c2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801a4c6:	e7e7      	b.n	801a498 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801a4c8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801a4cc:	eee3 4a86 	vfma.f32	s9, s7, s12
 801a4d0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801a4d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4d8:	dadc      	bge.n	801a494 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801a4da:	e7f2      	b.n	801a4c2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801a4dc:	3d800000 	.word	0x3d800000

0801a4e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801a4e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a4e4:	2714      	movs	r7, #20
 801a4e6:	435f      	muls	r7, r3
 801a4e8:	eb02 0c07 	add.w	ip, r2, r7
 801a4ec:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801a4f0:	f115 0e0f 	adds.w	lr, r5, #15
 801a4f4:	f100 80a2 	bmi.w	801a63c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801a4f8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801a4fc:	9c08      	ldr	r4, [sp, #32]
 801a4fe:	f8c0 e014 	str.w	lr, [r0, #20]
 801a502:	2614      	movs	r6, #20
 801a504:	4366      	muls	r6, r4
 801a506:	eb02 0806 	add.w	r8, r2, r6
 801a50a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a50e:	f115 040f 	adds.w	r4, r5, #15
 801a512:	f100 809f 	bmi.w	801a654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801a516:	1124      	asrs	r4, r4, #4
 801a518:	eba4 040e 	sub.w	r4, r4, lr
 801a51c:	6184      	str	r4, [r0, #24]
 801a51e:	2c00      	cmp	r4, #0
 801a520:	f000 808a 	beq.w	801a638 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801a524:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801a528:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801a52c:	5995      	ldr	r5, [r2, r6]
 801a52e:	eba4 0809 	sub.w	r8, r4, r9
 801a532:	59d4      	ldr	r4, [r2, r7]
 801a534:	eba5 0a04 	sub.w	sl, r5, r4
 801a538:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801a53c:	fb0e fe05 	mul.w	lr, lr, r5
 801a540:	fb0a ee19 	mls	lr, sl, r9, lr
 801a544:	fb08 e404 	mla	r4, r8, r4, lr
 801a548:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801a54c:	3c01      	subs	r4, #1
 801a54e:	19a4      	adds	r4, r4, r6
 801a550:	f100 808c 	bmi.w	801a66c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801a554:	fb94 fef6 	sdiv	lr, r4, r6
 801a558:	f8c0 e000 	str.w	lr, [r0]
 801a55c:	fb06 441e 	mls	r4, r6, lr, r4
 801a560:	6104      	str	r4, [r0, #16]
 801a562:	2d00      	cmp	r5, #0
 801a564:	f2c0 8095 	blt.w	801a692 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801a568:	fb95 f4f6 	sdiv	r4, r5, r6
 801a56c:	6044      	str	r4, [r0, #4]
 801a56e:	fb06 5514 	mls	r5, r6, r4, r5
 801a572:	6085      	str	r5, [r0, #8]
 801a574:	60c6      	str	r6, [r0, #12]
 801a576:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801a57a:	6945      	ldr	r5, [r0, #20]
 801a57c:	59d2      	ldr	r2, [r2, r7]
 801a57e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801a6b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801a582:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801a586:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801a58a:	ee07 4a10 	vmov	s14, r4
 801a58e:	6804      	ldr	r4, [r0, #0]
 801a590:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801a594:	ee07 2a90 	vmov	s15, r2
 801a598:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a59c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a5a0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a5a4:	ee27 7a26 	vmul.f32	s14, s14, s13
 801a5a8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a5ac:	edd3 6a00 	vldr	s13, [r3]
 801a5b0:	eee6 6a07 	vfma.f32	s13, s12, s14
 801a5b4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801a5b8:	eee6 6a27 	vfma.f32	s13, s12, s15
 801a5bc:	edc0 6a07 	vstr	s13, [r0, #28]
 801a5c0:	edd0 6a01 	vldr	s13, [r0, #4]
 801a5c4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801a5c8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801a5cc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801a5d0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801a5d4:	ed80 6a08 	vstr	s12, [r0, #32]
 801a5d8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801a5da:	6242      	str	r2, [r0, #36]	; 0x24
 801a5dc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801a5e0:	ed93 6a03 	vldr	s12, [r3, #12]
 801a5e4:	eea5 6a87 	vfma.f32	s12, s11, s14
 801a5e8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801a5ec:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801a5f0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801a5f4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801a5f8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801a5fc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801a600:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801a604:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801a606:	6302      	str	r2, [r0, #48]	; 0x30
 801a608:	ed93 6a06 	vldr	s12, [r3, #24]
 801a60c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801a610:	eea5 6a87 	vfma.f32	s12, s11, s14
 801a614:	eeb0 7a46 	vmov.f32	s14, s12
 801a618:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801a61c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801a620:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801a624:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801a628:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801a62c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801a630:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801a634:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801a636:	63c3      	str	r3, [r0, #60]	; 0x3c
 801a638:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a63c:	f1c5 0501 	rsb	r5, r5, #1
 801a640:	f015 050f 	ands.w	r5, r5, #15
 801a644:	bf18      	it	ne
 801a646:	2501      	movne	r5, #1
 801a648:	2410      	movs	r4, #16
 801a64a:	fb9e fef4 	sdiv	lr, lr, r4
 801a64e:	ebae 0e05 	sub.w	lr, lr, r5
 801a652:	e753      	b.n	801a4fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801a654:	f1c5 0501 	rsb	r5, r5, #1
 801a658:	f015 050f 	ands.w	r5, r5, #15
 801a65c:	bf18      	it	ne
 801a65e:	2501      	movne	r5, #1
 801a660:	f04f 0910 	mov.w	r9, #16
 801a664:	fb94 f4f9 	sdiv	r4, r4, r9
 801a668:	1b64      	subs	r4, r4, r5
 801a66a:	e755      	b.n	801a518 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801a66c:	4264      	negs	r4, r4
 801a66e:	fb94 fef6 	sdiv	lr, r4, r6
 801a672:	f1ce 0800 	rsb	r8, lr, #0
 801a676:	fb06 441e 	mls	r4, r6, lr, r4
 801a67a:	f8c0 8000 	str.w	r8, [r0]
 801a67e:	6104      	str	r4, [r0, #16]
 801a680:	2c00      	cmp	r4, #0
 801a682:	f43f af6e 	beq.w	801a562 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801a686:	ea6f 0e0e 	mvn.w	lr, lr
 801a68a:	f8c0 e000 	str.w	lr, [r0]
 801a68e:	1b34      	subs	r4, r6, r4
 801a690:	e766      	b.n	801a560 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801a692:	426d      	negs	r5, r5
 801a694:	fb95 f4f6 	sdiv	r4, r5, r6
 801a698:	f1c4 0e00 	rsb	lr, r4, #0
 801a69c:	fb06 5514 	mls	r5, r6, r4, r5
 801a6a0:	f8c0 e004 	str.w	lr, [r0, #4]
 801a6a4:	6085      	str	r5, [r0, #8]
 801a6a6:	2d00      	cmp	r5, #0
 801a6a8:	f43f af64 	beq.w	801a574 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801a6ac:	43e4      	mvns	r4, r4
 801a6ae:	6044      	str	r4, [r0, #4]
 801a6b0:	1b75      	subs	r5, r6, r5
 801a6b2:	e75e      	b.n	801a572 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801a6b4:	3d800000 	.word	0x3d800000

0801a6b8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801a6b8:	4602      	mov	r2, r0
 801a6ba:	b148      	cbz	r0, 801a6d0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801a6bc:	2300      	movs	r3, #0
 801a6be:	b298      	uxth	r0, r3
 801a6c0:	3301      	adds	r3, #1
 801a6c2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801a6c6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801a6ca:	2900      	cmp	r1, #0
 801a6cc:	d1f7      	bne.n	801a6be <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801a6ce:	4770      	bx	lr
 801a6d0:	4770      	bx	lr

0801a6d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801a6d2:	b530      	push	{r4, r5, lr}
 801a6d4:	4604      	mov	r4, r0
 801a6d6:	b159      	cbz	r1, 801a6f0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801a6d8:	b148      	cbz	r0, 801a6ee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801a6da:	2300      	movs	r3, #0
 801a6dc:	b298      	uxth	r0, r3
 801a6de:	4282      	cmp	r2, r0
 801a6e0:	d905      	bls.n	801a6ee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801a6e2:	5ccd      	ldrb	r5, [r1, r3]
 801a6e4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801a6e8:	3301      	adds	r3, #1
 801a6ea:	2d00      	cmp	r5, #0
 801a6ec:	d1f6      	bne.n	801a6dc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801a6ee:	bd30      	pop	{r4, r5, pc}
 801a6f0:	4608      	mov	r0, r1
 801a6f2:	e7fc      	b.n	801a6ee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801a6f4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801a6f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a6f6:	b08b      	sub	sp, #44	; 0x2c
 801a6f8:	468c      	mov	ip, r1
 801a6fa:	2100      	movs	r1, #0
 801a6fc:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801a700:	4604      	mov	r4, r0
 801a702:	261f      	movs	r6, #31
 801a704:	af01      	add	r7, sp, #4
 801a706:	fb94 fef3 	sdiv	lr, r4, r3
 801a70a:	fb03 441e 	mls	r4, r3, lr, r4
 801a70e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801a712:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801a716:	b2ec      	uxtb	r4, r5
 801a718:	2d09      	cmp	r5, #9
 801a71a:	bfd4      	ite	le
 801a71c:	3430      	addle	r4, #48	; 0x30
 801a71e:	3457      	addgt	r4, #87	; 0x57
 801a720:	b2e4      	uxtb	r4, r4
 801a722:	55bc      	strb	r4, [r7, r6]
 801a724:	4674      	mov	r4, lr
 801a726:	1e71      	subs	r1, r6, #1
 801a728:	b974      	cbnz	r4, 801a748 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801a72a:	2800      	cmp	r0, #0
 801a72c:	da05      	bge.n	801a73a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801a72e:	ab0a      	add	r3, sp, #40	; 0x28
 801a730:	4419      	add	r1, r3
 801a732:	232d      	movs	r3, #45	; 0x2d
 801a734:	f801 3c24 	strb.w	r3, [r1, #-36]
 801a738:	1eb1      	subs	r1, r6, #2
 801a73a:	3101      	adds	r1, #1
 801a73c:	4439      	add	r1, r7
 801a73e:	4660      	mov	r0, ip
 801a740:	f7ff ffc7 	bl	801a6d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801a744:	b00b      	add	sp, #44	; 0x2c
 801a746:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a748:	460e      	mov	r6, r1
 801a74a:	e7dc      	b.n	801a706 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801a74c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801a74c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a74e:	b08b      	sub	sp, #44	; 0x2c
 801a750:	468c      	mov	ip, r1
 801a752:	2100      	movs	r1, #0
 801a754:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801a758:	ae01      	add	r6, sp, #4
 801a75a:	211f      	movs	r1, #31
 801a75c:	fbb0 f7f3 	udiv	r7, r0, r3
 801a760:	fb03 0517 	mls	r5, r3, r7, r0
 801a764:	b2ec      	uxtb	r4, r5
 801a766:	2d09      	cmp	r5, #9
 801a768:	bfd4      	ite	le
 801a76a:	3430      	addle	r4, #48	; 0x30
 801a76c:	3457      	addgt	r4, #87	; 0x57
 801a76e:	b2e4      	uxtb	r4, r4
 801a770:	558c      	strb	r4, [r1, r6]
 801a772:	4638      	mov	r0, r7
 801a774:	1e4c      	subs	r4, r1, #1
 801a776:	b92f      	cbnz	r7, 801a784 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801a778:	4431      	add	r1, r6
 801a77a:	4660      	mov	r0, ip
 801a77c:	f7ff ffa9 	bl	801a6d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801a780:	b00b      	add	sp, #44	; 0x2c
 801a782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a784:	4621      	mov	r1, r4
 801a786:	e7e9      	b.n	801a75c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801a788 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801a788:	b410      	push	{r4}
 801a78a:	b131      	cbz	r1, 801a79a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801a78c:	1e9c      	subs	r4, r3, #2
 801a78e:	2c22      	cmp	r4, #34	; 0x22
 801a790:	d803      	bhi.n	801a79a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801a792:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a796:	f7ff bfad 	b.w	801a6f4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801a79a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a79e:	4770      	bx	lr

0801a7a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801a7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7a4:	4691      	mov	r9, r2
 801a7a6:	b085      	sub	sp, #20
 801a7a8:	6802      	ldr	r2, [r0, #0]
 801a7aa:	9201      	str	r2, [sp, #4]
 801a7ac:	4688      	mov	r8, r1
 801a7ae:	4683      	mov	fp, r0
 801a7b0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801a7b4:	9103      	str	r1, [sp, #12]
 801a7b6:	4610      	mov	r0, r2
 801a7b8:	461c      	mov	r4, r3
 801a7ba:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801a7be:	9302      	str	r3, [sp, #8]
 801a7c0:	f7ff ff7a 	bl	801a6b8 <_ZN8touchgfx7Unicode6strlenEPKt>
 801a7c4:	f1b8 0f00 	cmp.w	r8, #0
 801a7c8:	bf0c      	ite	eq
 801a7ca:	4684      	moveq	ip, r0
 801a7cc:	f100 0c01 	addne.w	ip, r0, #1
 801a7d0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801a7d4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801a7d8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a7da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a7dc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801a7e0:	9903      	ldr	r1, [sp, #12]
 801a7e2:	fa1f fc8c 	uxth.w	ip, ip
 801a7e6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801a7ea:	d041      	beq.n	801a870 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801a7ec:	d834      	bhi.n	801a858 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801a7ee:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801a7f2:	d059      	beq.n	801a8a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801a7f4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801a7f8:	d03a      	beq.n	801a870 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801a7fa:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801a7fe:	d034      	beq.n	801a86a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801a800:	2400      	movs	r4, #0
 801a802:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801a806:	3a01      	subs	r2, #1
 801a808:	b169      	cbz	r1, 801a826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a80a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a80c:	458c      	cmp	ip, r1
 801a80e:	da09      	bge.n	801a824 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801a810:	eba1 010c 	sub.w	r1, r1, ip
 801a814:	b289      	uxth	r1, r1
 801a816:	b933      	cbnz	r3, 801a826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a818:	2e00      	cmp	r6, #0
 801a81a:	d051      	beq.n	801a8c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801a81c:	2800      	cmp	r0, #0
 801a81e:	d04f      	beq.n	801a8c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801a820:	440c      	add	r4, r1
 801a822:	b2a4      	uxth	r4, r4
 801a824:	2100      	movs	r1, #0
 801a826:	682b      	ldr	r3, [r5, #0]
 801a828:	4293      	cmp	r3, r2
 801a82a:	da07      	bge.n	801a83c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801a82c:	f1b8 0f00 	cmp.w	r8, #0
 801a830:	d004      	beq.n	801a83c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801a832:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801a836:	682b      	ldr	r3, [r5, #0]
 801a838:	3301      	adds	r3, #1
 801a83a:	602b      	str	r3, [r5, #0]
 801a83c:	2730      	movs	r7, #48	; 0x30
 801a83e:	2c00      	cmp	r4, #0
 801a840:	d04e      	beq.n	801a8e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a842:	682e      	ldr	r6, [r5, #0]
 801a844:	3c01      	subs	r4, #1
 801a846:	42b2      	cmp	r2, r6
 801a848:	b2a4      	uxth	r4, r4
 801a84a:	dd49      	ble.n	801a8e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a84c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801a850:	682b      	ldr	r3, [r5, #0]
 801a852:	3301      	adds	r3, #1
 801a854:	602b      	str	r3, [r5, #0]
 801a856:	e7f2      	b.n	801a83e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801a858:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801a85c:	d01d      	beq.n	801a89a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801a85e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801a862:	d002      	beq.n	801a86a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801a864:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801a868:	e7c9      	b.n	801a7fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801a86a:	4684      	mov	ip, r0
 801a86c:	f04f 0800 	mov.w	r8, #0
 801a870:	2c00      	cmp	r4, #0
 801a872:	d0c6      	beq.n	801a802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a874:	b947      	cbnz	r7, 801a888 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801a876:	2801      	cmp	r0, #1
 801a878:	d106      	bne.n	801a888 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801a87a:	8814      	ldrh	r4, [r2, #0]
 801a87c:	2c30      	cmp	r4, #48	; 0x30
 801a87e:	bf02      	ittt	eq
 801a880:	3202      	addeq	r2, #2
 801a882:	f8cb 2000 	streq.w	r2, [fp]
 801a886:	4638      	moveq	r0, r7
 801a888:	45bc      	cmp	ip, r7
 801a88a:	da14      	bge.n	801a8b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801a88c:	b2bf      	uxth	r7, r7
 801a88e:	eba7 040c 	sub.w	r4, r7, ip
 801a892:	b2a4      	uxth	r4, r4
 801a894:	46bc      	mov	ip, r7
 801a896:	2600      	movs	r6, #0
 801a898:	e7b3      	b.n	801a802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a89a:	4684      	mov	ip, r0
 801a89c:	b16c      	cbz	r4, 801a8ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801a89e:	42b8      	cmp	r0, r7
 801a8a0:	dd00      	ble.n	801a8a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801a8a2:	b2b8      	uxth	r0, r7
 801a8a4:	2400      	movs	r4, #0
 801a8a6:	e003      	b.n	801a8b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801a8a8:	f04f 0c01 	mov.w	ip, #1
 801a8ac:	2400      	movs	r4, #0
 801a8ae:	4660      	mov	r0, ip
 801a8b0:	4626      	mov	r6, r4
 801a8b2:	46a0      	mov	r8, r4
 801a8b4:	e7a5      	b.n	801a802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a8b6:	2400      	movs	r4, #0
 801a8b8:	e7ed      	b.n	801a896 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801a8ba:	4626      	mov	r6, r4
 801a8bc:	46a0      	mov	r8, r4
 801a8be:	e7a0      	b.n	801a802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a8c0:	2900      	cmp	r1, #0
 801a8c2:	d0b0      	beq.n	801a826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a8c4:	2720      	movs	r7, #32
 801a8c6:	682e      	ldr	r6, [r5, #0]
 801a8c8:	2900      	cmp	r1, #0
 801a8ca:	d0ac      	beq.n	801a826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a8cc:	3901      	subs	r1, #1
 801a8ce:	4296      	cmp	r6, r2
 801a8d0:	b289      	uxth	r1, r1
 801a8d2:	daa7      	bge.n	801a824 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801a8d4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801a8d8:	682b      	ldr	r3, [r5, #0]
 801a8da:	3301      	adds	r3, #1
 801a8dc:	602b      	str	r3, [r5, #0]
 801a8de:	e7f2      	b.n	801a8c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801a8e0:	b188      	cbz	r0, 801a906 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801a8e2:	682b      	ldr	r3, [r5, #0]
 801a8e4:	3801      	subs	r0, #1
 801a8e6:	429a      	cmp	r2, r3
 801a8e8:	b280      	uxth	r0, r0
 801a8ea:	dd0c      	ble.n	801a906 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801a8ec:	f8db 3000 	ldr.w	r3, [fp]
 801a8f0:	1c9c      	adds	r4, r3, #2
 801a8f2:	f8cb 4000 	str.w	r4, [fp]
 801a8f6:	881c      	ldrh	r4, [r3, #0]
 801a8f8:	682b      	ldr	r3, [r5, #0]
 801a8fa:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801a8fe:	682b      	ldr	r3, [r5, #0]
 801a900:	3301      	adds	r3, #1
 801a902:	602b      	str	r3, [r5, #0]
 801a904:	e7ec      	b.n	801a8e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a906:	2620      	movs	r6, #32
 801a908:	b151      	cbz	r1, 801a920 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801a90a:	6828      	ldr	r0, [r5, #0]
 801a90c:	3901      	subs	r1, #1
 801a90e:	4282      	cmp	r2, r0
 801a910:	b289      	uxth	r1, r1
 801a912:	dd05      	ble.n	801a920 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801a914:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801a918:	682b      	ldr	r3, [r5, #0]
 801a91a:	3301      	adds	r3, #1
 801a91c:	602b      	str	r3, [r5, #0]
 801a91e:	e7f3      	b.n	801a908 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801a920:	b005      	add	sp, #20
 801a922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a926 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801a926:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a92a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801a92e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801a932:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801a936:	2400      	movs	r4, #0
 801a938:	8014      	strh	r4, [r2, #0]
 801a93a:	701c      	strb	r4, [r3, #0]
 801a93c:	f888 4000 	strb.w	r4, [r8]
 801a940:	f88c 4000 	strb.w	r4, [ip]
 801a944:	f88e 4000 	strb.w	r4, [lr]
 801a948:	703c      	strb	r4, [r7, #0]
 801a94a:	6804      	ldr	r4, [r0, #0]
 801a94c:	b1a4      	cbz	r4, 801a978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801a94e:	8824      	ldrh	r4, [r4, #0]
 801a950:	f04f 0901 	mov.w	r9, #1
 801a954:	b314      	cbz	r4, 801a99c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a956:	2c2b      	cmp	r4, #43	; 0x2b
 801a958:	d001      	beq.n	801a95e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801a95a:	2c20      	cmp	r4, #32
 801a95c:	d110      	bne.n	801a980 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801a95e:	8014      	strh	r4, [r2, #0]
 801a960:	6804      	ldr	r4, [r0, #0]
 801a962:	b10c      	cbz	r4, 801a968 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801a964:	3402      	adds	r4, #2
 801a966:	6004      	str	r4, [r0, #0]
 801a968:	680c      	ldr	r4, [r1, #0]
 801a96a:	b10c      	cbz	r4, 801a970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801a96c:	3401      	adds	r4, #1
 801a96e:	600c      	str	r4, [r1, #0]
 801a970:	6804      	ldr	r4, [r0, #0]
 801a972:	b17c      	cbz	r4, 801a994 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801a974:	8824      	ldrh	r4, [r4, #0]
 801a976:	e7ed      	b.n	801a954 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a978:	680c      	ldr	r4, [r1, #0]
 801a97a:	b17c      	cbz	r4, 801a99c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a97c:	7824      	ldrb	r4, [r4, #0]
 801a97e:	e7e7      	b.n	801a950 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801a980:	2c2d      	cmp	r4, #45	; 0x2d
 801a982:	d102      	bne.n	801a98a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801a984:	f883 9000 	strb.w	r9, [r3]
 801a988:	e7ea      	b.n	801a960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a98a:	2c23      	cmp	r4, #35	; 0x23
 801a98c:	d107      	bne.n	801a99e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801a98e:	f888 9000 	strb.w	r9, [r8]
 801a992:	e7e5      	b.n	801a960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a994:	680c      	ldr	r4, [r1, #0]
 801a996:	b10c      	cbz	r4, 801a99c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a998:	7824      	ldrb	r4, [r4, #0]
 801a99a:	e7db      	b.n	801a954 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a99c:	2400      	movs	r4, #0
 801a99e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801a9a2:	2b09      	cmp	r3, #9
 801a9a4:	d901      	bls.n	801a9aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801a9a6:	2c2a      	cmp	r4, #42	; 0x2a
 801a9a8:	d122      	bne.n	801a9f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a9aa:	2301      	movs	r3, #1
 801a9ac:	2c30      	cmp	r4, #48	; 0x30
 801a9ae:	f88e 3000 	strb.w	r3, [lr]
 801a9b2:	d10d      	bne.n	801a9d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801a9b4:	f88c 3000 	strb.w	r3, [ip]
 801a9b8:	6803      	ldr	r3, [r0, #0]
 801a9ba:	b10b      	cbz	r3, 801a9c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801a9bc:	3302      	adds	r3, #2
 801a9be:	6003      	str	r3, [r0, #0]
 801a9c0:	680b      	ldr	r3, [r1, #0]
 801a9c2:	b10b      	cbz	r3, 801a9c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801a9c4:	3301      	adds	r3, #1
 801a9c6:	600b      	str	r3, [r1, #0]
 801a9c8:	6803      	ldr	r3, [r0, #0]
 801a9ca:	2b00      	cmp	r3, #0
 801a9cc:	d02f      	beq.n	801aa2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801a9ce:	881c      	ldrh	r4, [r3, #0]
 801a9d0:	2c2a      	cmp	r4, #42	; 0x2a
 801a9d2:	d135      	bne.n	801aa40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801a9d4:	f04f 33ff 	mov.w	r3, #4294967295
 801a9d8:	6033      	str	r3, [r6, #0]
 801a9da:	6803      	ldr	r3, [r0, #0]
 801a9dc:	b10b      	cbz	r3, 801a9e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801a9de:	3302      	adds	r3, #2
 801a9e0:	6003      	str	r3, [r0, #0]
 801a9e2:	680b      	ldr	r3, [r1, #0]
 801a9e4:	b10b      	cbz	r3, 801a9ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801a9e6:	3301      	adds	r3, #1
 801a9e8:	600b      	str	r3, [r1, #0]
 801a9ea:	6803      	ldr	r3, [r0, #0]
 801a9ec:	b31b      	cbz	r3, 801aa36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801a9ee:	881c      	ldrh	r4, [r3, #0]
 801a9f0:	2c2e      	cmp	r4, #46	; 0x2e
 801a9f2:	d11a      	bne.n	801aa2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a9f4:	2301      	movs	r3, #1
 801a9f6:	703b      	strb	r3, [r7, #0]
 801a9f8:	6803      	ldr	r3, [r0, #0]
 801a9fa:	b10b      	cbz	r3, 801aa00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801a9fc:	3302      	adds	r3, #2
 801a9fe:	6003      	str	r3, [r0, #0]
 801aa00:	680b      	ldr	r3, [r1, #0]
 801aa02:	b10b      	cbz	r3, 801aa08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801aa04:	3301      	adds	r3, #1
 801aa06:	600b      	str	r3, [r1, #0]
 801aa08:	6803      	ldr	r3, [r0, #0]
 801aa0a:	2b00      	cmp	r3, #0
 801aa0c:	d036      	beq.n	801aa7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801aa0e:	881b      	ldrh	r3, [r3, #0]
 801aa10:	2b2a      	cmp	r3, #42	; 0x2a
 801aa12:	d137      	bne.n	801aa84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801aa14:	f04f 33ff 	mov.w	r3, #4294967295
 801aa18:	602b      	str	r3, [r5, #0]
 801aa1a:	6803      	ldr	r3, [r0, #0]
 801aa1c:	b10b      	cbz	r3, 801aa22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801aa1e:	3302      	adds	r3, #2
 801aa20:	6003      	str	r3, [r0, #0]
 801aa22:	680b      	ldr	r3, [r1, #0]
 801aa24:	b10b      	cbz	r3, 801aa2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801aa26:	3301      	adds	r3, #1
 801aa28:	600b      	str	r3, [r1, #0]
 801aa2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801aa2e:	680c      	ldr	r4, [r1, #0]
 801aa30:	b134      	cbz	r4, 801aa40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801aa32:	7824      	ldrb	r4, [r4, #0]
 801aa34:	e7cc      	b.n	801a9d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801aa36:	680b      	ldr	r3, [r1, #0]
 801aa38:	2b00      	cmp	r3, #0
 801aa3a:	d0f6      	beq.n	801aa2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801aa3c:	781c      	ldrb	r4, [r3, #0]
 801aa3e:	e7d7      	b.n	801a9f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801aa40:	2300      	movs	r3, #0
 801aa42:	6033      	str	r3, [r6, #0]
 801aa44:	220a      	movs	r2, #10
 801aa46:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801aa4a:	fa1f f38c 	uxth.w	r3, ip
 801aa4e:	2b09      	cmp	r3, #9
 801aa50:	d8ce      	bhi.n	801a9f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801aa52:	6833      	ldr	r3, [r6, #0]
 801aa54:	fb02 c303 	mla	r3, r2, r3, ip
 801aa58:	6033      	str	r3, [r6, #0]
 801aa5a:	6803      	ldr	r3, [r0, #0]
 801aa5c:	b10b      	cbz	r3, 801aa62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801aa5e:	3302      	adds	r3, #2
 801aa60:	6003      	str	r3, [r0, #0]
 801aa62:	680b      	ldr	r3, [r1, #0]
 801aa64:	b10b      	cbz	r3, 801aa6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801aa66:	3301      	adds	r3, #1
 801aa68:	600b      	str	r3, [r1, #0]
 801aa6a:	6803      	ldr	r3, [r0, #0]
 801aa6c:	b10b      	cbz	r3, 801aa72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801aa6e:	881c      	ldrh	r4, [r3, #0]
 801aa70:	e7e9      	b.n	801aa46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801aa72:	680c      	ldr	r4, [r1, #0]
 801aa74:	2c00      	cmp	r4, #0
 801aa76:	d0e6      	beq.n	801aa46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801aa78:	7824      	ldrb	r4, [r4, #0]
 801aa7a:	e7e4      	b.n	801aa46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801aa7c:	680b      	ldr	r3, [r1, #0]
 801aa7e:	b10b      	cbz	r3, 801aa84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801aa80:	781b      	ldrb	r3, [r3, #0]
 801aa82:	e7c5      	b.n	801aa10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801aa84:	2200      	movs	r2, #0
 801aa86:	602a      	str	r2, [r5, #0]
 801aa88:	240a      	movs	r4, #10
 801aa8a:	3b30      	subs	r3, #48	; 0x30
 801aa8c:	b29e      	uxth	r6, r3
 801aa8e:	2e09      	cmp	r6, #9
 801aa90:	682a      	ldr	r2, [r5, #0]
 801aa92:	d813      	bhi.n	801aabc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801aa94:	fb04 3302 	mla	r3, r4, r2, r3
 801aa98:	602b      	str	r3, [r5, #0]
 801aa9a:	6803      	ldr	r3, [r0, #0]
 801aa9c:	b10b      	cbz	r3, 801aaa2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801aa9e:	3302      	adds	r3, #2
 801aaa0:	6003      	str	r3, [r0, #0]
 801aaa2:	680b      	ldr	r3, [r1, #0]
 801aaa4:	b10b      	cbz	r3, 801aaaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801aaa6:	3301      	adds	r3, #1
 801aaa8:	600b      	str	r3, [r1, #0]
 801aaaa:	6803      	ldr	r3, [r0, #0]
 801aaac:	b10b      	cbz	r3, 801aab2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801aaae:	881b      	ldrh	r3, [r3, #0]
 801aab0:	e7eb      	b.n	801aa8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801aab2:	680b      	ldr	r3, [r1, #0]
 801aab4:	2b00      	cmp	r3, #0
 801aab6:	d0e8      	beq.n	801aa8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801aab8:	781b      	ldrb	r3, [r3, #0]
 801aaba:	e7e6      	b.n	801aa8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801aabc:	2a06      	cmp	r2, #6
 801aabe:	bfa8      	it	ge
 801aac0:	2206      	movge	r2, #6
 801aac2:	602a      	str	r2, [r5, #0]
 801aac4:	e7b1      	b.n	801aa2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801aac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801aac6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aaca:	b0a3      	sub	sp, #140	; 0x8c
 801aacc:	2600      	movs	r6, #0
 801aace:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801aad2:	4607      	mov	r7, r0
 801aad4:	4688      	mov	r8, r1
 801aad6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801aada:	4631      	mov	r1, r6
 801aadc:	2242      	movs	r2, #66	; 0x42
 801aade:	4648      	mov	r0, r9
 801aae0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801aae2:	960d      	str	r6, [sp, #52]	; 0x34
 801aae4:	f012 f955 	bl	802cd92 <memset>
 801aae8:	b15f      	cbz	r7, 801ab02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801aaea:	f108 3aff 	add.w	sl, r8, #4294967295
 801aaee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801aaf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aaf2:	b152      	cbz	r2, 801ab0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801aaf4:	8812      	ldrh	r2, [r2, #0]
 801aaf6:	b10a      	cbz	r2, 801aafc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801aaf8:	459a      	cmp	sl, r3
 801aafa:	dc2e      	bgt.n	801ab5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801aafc:	2200      	movs	r2, #0
 801aafe:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ab02:	4638      	mov	r0, r7
 801ab04:	b023      	add	sp, #140	; 0x8c
 801ab06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab0a:	9a08      	ldr	r2, [sp, #32]
 801ab0c:	2a00      	cmp	r2, #0
 801ab0e:	d0f5      	beq.n	801aafc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ab10:	7812      	ldrb	r2, [r2, #0]
 801ab12:	e7f0      	b.n	801aaf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801ab14:	2d00      	cmp	r5, #0
 801ab16:	d0ea      	beq.n	801aaee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ab18:	782a      	ldrb	r2, [r5, #0]
 801ab1a:	b142      	cbz	r2, 801ab2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801ab1c:	2a25      	cmp	r2, #37	; 0x25
 801ab1e:	d001      	beq.n	801ab24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801ab20:	459a      	cmp	sl, r3
 801ab22:	dc08      	bgt.n	801ab36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801ab24:	f1bb 0f00 	cmp.w	fp, #0
 801ab28:	d121      	bne.n	801ab6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801ab2a:	2d00      	cmp	r5, #0
 801ab2c:	d0df      	beq.n	801aaee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ab2e:	782a      	ldrb	r2, [r5, #0]
 801ab30:	f04f 0b00 	mov.w	fp, #0
 801ab34:	e01d      	b.n	801ab72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801ab36:	f1bb 0f00 	cmp.w	fp, #0
 801ab3a:	d078      	beq.n	801ac2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801ab3c:	f8bb 2000 	ldrh.w	r2, [fp]
 801ab40:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ab44:	f1bb 0f00 	cmp.w	fp, #0
 801ab48:	d002      	beq.n	801ab50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801ab4a:	f10b 0202 	add.w	r2, fp, #2
 801ab4e:	9209      	str	r2, [sp, #36]	; 0x24
 801ab50:	b10d      	cbz	r5, 801ab56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801ab52:	3501      	adds	r5, #1
 801ab54:	9508      	str	r5, [sp, #32]
 801ab56:	3301      	adds	r3, #1
 801ab58:	930d      	str	r3, [sp, #52]	; 0x34
 801ab5a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801ab5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ab60:	f1bb 0f00 	cmp.w	fp, #0
 801ab64:	d0d6      	beq.n	801ab14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801ab66:	f8bb 2000 	ldrh.w	r2, [fp]
 801ab6a:	2a00      	cmp	r2, #0
 801ab6c:	d1d6      	bne.n	801ab1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801ab6e:	f8bb 2000 	ldrh.w	r2, [fp]
 801ab72:	2a00      	cmp	r2, #0
 801ab74:	d0bb      	beq.n	801aaee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ab76:	459a      	cmp	sl, r3
 801ab78:	ddb9      	ble.n	801aaee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ab7a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801ab7e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801ab82:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801ab86:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801ab8a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801ab8e:	960e      	str	r6, [sp, #56]	; 0x38
 801ab90:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801ab94:	960f      	str	r6, [sp, #60]	; 0x3c
 801ab96:	f1bb 0f00 	cmp.w	fp, #0
 801ab9a:	d002      	beq.n	801aba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801ab9c:	f10b 0302 	add.w	r3, fp, #2
 801aba0:	9309      	str	r3, [sp, #36]	; 0x24
 801aba2:	b10d      	cbz	r5, 801aba8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801aba4:	1c6b      	adds	r3, r5, #1
 801aba6:	9308      	str	r3, [sp, #32]
 801aba8:	ab0f      	add	r3, sp, #60	; 0x3c
 801abaa:	9305      	str	r3, [sp, #20]
 801abac:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801abb0:	9304      	str	r3, [sp, #16]
 801abb2:	ab0e      	add	r3, sp, #56	; 0x38
 801abb4:	9303      	str	r3, [sp, #12]
 801abb6:	ab0c      	add	r3, sp, #48	; 0x30
 801abb8:	9302      	str	r3, [sp, #8]
 801abba:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801abbe:	9301      	str	r3, [sp, #4]
 801abc0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801abc4:	9300      	str	r3, [sp, #0]
 801abc6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801abca:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801abce:	a908      	add	r1, sp, #32
 801abd0:	a809      	add	r0, sp, #36	; 0x24
 801abd2:	f7ff fea8 	bl	801a926 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801abd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abd8:	2b00      	cmp	r3, #0
 801abda:	bfbe      	ittt	lt
 801abdc:	6823      	ldrlt	r3, [r4, #0]
 801abde:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801abe2:	930e      	strlt	r3, [sp, #56]	; 0x38
 801abe4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801abe6:	bfb8      	it	lt
 801abe8:	3404      	addlt	r4, #4
 801abea:	2b00      	cmp	r3, #0
 801abec:	bfb8      	it	lt
 801abee:	6823      	ldrlt	r3, [r4, #0]
 801abf0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801abf4:	bfbe      	ittt	lt
 801abf6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801abfa:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801abfc:	3404      	addlt	r4, #4
 801abfe:	b1d9      	cbz	r1, 801ac38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801ac00:	880b      	ldrh	r3, [r1, #0]
 801ac02:	2b69      	cmp	r3, #105	; 0x69
 801ac04:	d01f      	beq.n	801ac46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ac06:	d82f      	bhi.n	801ac68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801ac08:	2b58      	cmp	r3, #88	; 0x58
 801ac0a:	d01c      	beq.n	801ac46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ac0c:	d818      	bhi.n	801ac40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801ac0e:	2b25      	cmp	r3, #37	; 0x25
 801ac10:	d034      	beq.n	801ac7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801ac12:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801ac16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac18:	f1bb 0f00 	cmp.w	fp, #0
 801ac1c:	f000 80b8 	beq.w	801ad90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801ac20:	f8bb 5000 	ldrh.w	r5, [fp]
 801ac24:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801ac28:	3301      	adds	r3, #1
 801ac2a:	930d      	str	r3, [sp, #52]	; 0x34
 801ac2c:	e029      	b.n	801ac82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801ac2e:	b10d      	cbz	r5, 801ac34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801ac30:	782a      	ldrb	r2, [r5, #0]
 801ac32:	e785      	b.n	801ab40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801ac34:	462a      	mov	r2, r5
 801ac36:	e783      	b.n	801ab40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801ac38:	2a00      	cmp	r2, #0
 801ac3a:	d0ea      	beq.n	801ac12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801ac3c:	7813      	ldrb	r3, [r2, #0]
 801ac3e:	e7e0      	b.n	801ac02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801ac40:	3b63      	subs	r3, #99	; 0x63
 801ac42:	2b01      	cmp	r3, #1
 801ac44:	d8e5      	bhi.n	801ac12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801ac46:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801ac4a:	b329      	cbz	r1, 801ac98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801ac4c:	880b      	ldrh	r3, [r1, #0]
 801ac4e:	2b69      	cmp	r3, #105	; 0x69
 801ac50:	d063      	beq.n	801ad1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801ac52:	d825      	bhi.n	801aca0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801ac54:	2b63      	cmp	r3, #99	; 0x63
 801ac56:	d038      	beq.n	801acca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801ac58:	2b64      	cmp	r3, #100	; 0x64
 801ac5a:	d05e      	beq.n	801ad1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801ac5c:	2b58      	cmp	r3, #88	; 0x58
 801ac5e:	d07b      	beq.n	801ad58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801ac60:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801ac64:	4625      	mov	r5, r4
 801ac66:	e036      	b.n	801acd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801ac68:	2b73      	cmp	r3, #115	; 0x73
 801ac6a:	d0ec      	beq.n	801ac46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ac6c:	d802      	bhi.n	801ac74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801ac6e:	2b6f      	cmp	r3, #111	; 0x6f
 801ac70:	d1cf      	bne.n	801ac12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801ac72:	e7e8      	b.n	801ac46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ac74:	2b75      	cmp	r3, #117	; 0x75
 801ac76:	d0e6      	beq.n	801ac46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ac78:	2b78      	cmp	r3, #120	; 0x78
 801ac7a:	e7f9      	b.n	801ac70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801ac7c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ac7e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801ac82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac84:	b10b      	cbz	r3, 801ac8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801ac86:	3302      	adds	r3, #2
 801ac88:	9309      	str	r3, [sp, #36]	; 0x24
 801ac8a:	9b08      	ldr	r3, [sp, #32]
 801ac8c:	2b00      	cmp	r3, #0
 801ac8e:	f43f af2e 	beq.w	801aaee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ac92:	3301      	adds	r3, #1
 801ac94:	9308      	str	r3, [sp, #32]
 801ac96:	e72a      	b.n	801aaee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ac98:	2a00      	cmp	r2, #0
 801ac9a:	d0e1      	beq.n	801ac60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801ac9c:	7813      	ldrb	r3, [r2, #0]
 801ac9e:	e7d6      	b.n	801ac4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801aca0:	2b73      	cmp	r3, #115	; 0x73
 801aca2:	d036      	beq.n	801ad12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801aca4:	d807      	bhi.n	801acb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801aca6:	2b6f      	cmp	r3, #111	; 0x6f
 801aca8:	d1da      	bne.n	801ac60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801acaa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801acac:	1d25      	adds	r5, r4, #4
 801acae:	eba8 0202 	sub.w	r2, r8, r2
 801acb2:	2308      	movs	r3, #8
 801acb4:	e04a      	b.n	801ad4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801acb6:	2b75      	cmp	r3, #117	; 0x75
 801acb8:	d043      	beq.n	801ad42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801acba:	2b78      	cmp	r3, #120	; 0x78
 801acbc:	d1d0      	bne.n	801ac60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801acbe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801acc0:	1d25      	adds	r5, r4, #4
 801acc2:	eba8 0202 	sub.w	r2, r8, r2
 801acc6:	2310      	movs	r3, #16
 801acc8:	e040      	b.n	801ad4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801acca:	6823      	ldr	r3, [r4, #0]
 801accc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801acd0:	1d25      	adds	r5, r4, #4
 801acd2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801acd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acd8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801acdc:	2b00      	cmp	r3, #0
 801acde:	d052      	beq.n	801ad86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801ace0:	881a      	ldrh	r2, [r3, #0]
 801ace2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801ace6:	a80d      	add	r0, sp, #52	; 0x34
 801ace8:	9005      	str	r0, [sp, #20]
 801acea:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801acee:	9004      	str	r0, [sp, #16]
 801acf0:	980e      	ldr	r0, [sp, #56]	; 0x38
 801acf2:	9003      	str	r0, [sp, #12]
 801acf4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801acf8:	9002      	str	r0, [sp, #8]
 801acfa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801acfc:	9001      	str	r0, [sp, #4]
 801acfe:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801ad02:	9000      	str	r0, [sp, #0]
 801ad04:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801ad08:	a810      	add	r0, sp, #64	; 0x40
 801ad0a:	f7ff fd49 	bl	801a7a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801ad0e:	462c      	mov	r4, r5
 801ad10:	e7b7      	b.n	801ac82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801ad12:	6823      	ldr	r3, [r4, #0]
 801ad14:	1d25      	adds	r5, r4, #4
 801ad16:	9310      	str	r3, [sp, #64]	; 0x40
 801ad18:	e7dd      	b.n	801acd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801ad1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ad1c:	6820      	ldr	r0, [r4, #0]
 801ad1e:	eba8 0202 	sub.w	r2, r8, r2
 801ad22:	230a      	movs	r3, #10
 801ad24:	b292      	uxth	r2, r2
 801ad26:	4649      	mov	r1, r9
 801ad28:	f7ff fce4 	bl	801a6f4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801ad2c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801ad30:	2b2d      	cmp	r3, #45	; 0x2d
 801ad32:	f104 0504 	add.w	r5, r4, #4
 801ad36:	d1ce      	bne.n	801acd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801ad38:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ad3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad3e:	3302      	adds	r3, #2
 801ad40:	e7e9      	b.n	801ad16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801ad42:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ad44:	1d25      	adds	r5, r4, #4
 801ad46:	eba8 0202 	sub.w	r2, r8, r2
 801ad4a:	230a      	movs	r3, #10
 801ad4c:	b292      	uxth	r2, r2
 801ad4e:	4649      	mov	r1, r9
 801ad50:	6820      	ldr	r0, [r4, #0]
 801ad52:	f7ff fcfb 	bl	801a74c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801ad56:	e7be      	b.n	801acd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801ad58:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ad5a:	6820      	ldr	r0, [r4, #0]
 801ad5c:	eba8 0202 	sub.w	r2, r8, r2
 801ad60:	b292      	uxth	r2, r2
 801ad62:	2310      	movs	r3, #16
 801ad64:	4649      	mov	r1, r9
 801ad66:	f7ff fcf1 	bl	801a74c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801ad6a:	1d25      	adds	r5, r4, #4
 801ad6c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801ad70:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801ad74:	2b00      	cmp	r3, #0
 801ad76:	d0ae      	beq.n	801acd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801ad78:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801ad7c:	2919      	cmp	r1, #25
 801ad7e:	d8f7      	bhi.n	801ad70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801ad80:	3b20      	subs	r3, #32
 801ad82:	8013      	strh	r3, [r2, #0]
 801ad84:	e7f4      	b.n	801ad70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801ad86:	9a08      	ldr	r2, [sp, #32]
 801ad88:	2a00      	cmp	r2, #0
 801ad8a:	d0aa      	beq.n	801ace2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801ad8c:	7812      	ldrb	r2, [r2, #0]
 801ad8e:	e7a8      	b.n	801ace2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801ad90:	2d00      	cmp	r5, #0
 801ad92:	f43f af47 	beq.w	801ac24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801ad96:	782d      	ldrb	r5, [r5, #0]
 801ad98:	e744      	b.n	801ac24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801ad9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801ad9a:	b507      	push	{r0, r1, r2, lr}
 801ad9c:	9300      	str	r3, [sp, #0]
 801ad9e:	4613      	mov	r3, r2
 801ada0:	2200      	movs	r2, #0
 801ada2:	f7ff fe90 	bl	801aac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801ada6:	b003      	add	sp, #12
 801ada8:	f85d fb04 	ldr.w	pc, [sp], #4

0801adac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801adac:	b40c      	push	{r2, r3}
 801adae:	b507      	push	{r0, r1, r2, lr}
 801adb0:	ab04      	add	r3, sp, #16
 801adb2:	f853 2b04 	ldr.w	r2, [r3], #4
 801adb6:	9301      	str	r3, [sp, #4]
 801adb8:	f7ff ffef 	bl	801ad9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801adbc:	b003      	add	sp, #12
 801adbe:	f85d eb04 	ldr.w	lr, [sp], #4
 801adc2:	b002      	add	sp, #8
 801adc4:	4770      	bx	lr
	...

0801adc8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801adc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adcc:	b0c5      	sub	sp, #276	; 0x114
 801adce:	2400      	movs	r4, #0
 801add0:	af11      	add	r7, sp, #68	; 0x44
 801add2:	4606      	mov	r6, r0
 801add4:	468a      	mov	sl, r1
 801add6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801adda:	4621      	mov	r1, r4
 801addc:	22c8      	movs	r2, #200	; 0xc8
 801adde:	4638      	mov	r0, r7
 801ade0:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801ade4:	940d      	str	r4, [sp, #52]	; 0x34
 801ade6:	f011 ffd4 	bl	802cd92 <memset>
 801adea:	b16e      	cbz	r6, 801ae08 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801adec:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801b090 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801adf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801adf2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801adf4:	b162      	cbz	r2, 801ae10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801adf6:	8812      	ldrh	r2, [r2, #0]
 801adf8:	b11a      	cbz	r2, 801ae02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801adfa:	f10a 31ff 	add.w	r1, sl, #4294967295
 801adfe:	4299      	cmp	r1, r3
 801ae00:	dc2e      	bgt.n	801ae60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801ae02:	2200      	movs	r2, #0
 801ae04:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801ae08:	4630      	mov	r0, r6
 801ae0a:	b045      	add	sp, #276	; 0x114
 801ae0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae10:	9a08      	ldr	r2, [sp, #32]
 801ae12:	2a00      	cmp	r2, #0
 801ae14:	d0f5      	beq.n	801ae02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801ae16:	7812      	ldrb	r2, [r2, #0]
 801ae18:	e7ee      	b.n	801adf8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801ae1a:	2d00      	cmp	r5, #0
 801ae1c:	d0e8      	beq.n	801adf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801ae1e:	782a      	ldrb	r2, [r5, #0]
 801ae20:	b142      	cbz	r2, 801ae34 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801ae22:	2a25      	cmp	r2, #37	; 0x25
 801ae24:	d001      	beq.n	801ae2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801ae26:	4299      	cmp	r1, r3
 801ae28:	dc08      	bgt.n	801ae3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801ae2a:	f1b8 0f00 	cmp.w	r8, #0
 801ae2e:	d121      	bne.n	801ae74 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801ae30:	2d00      	cmp	r5, #0
 801ae32:	d0dd      	beq.n	801adf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801ae34:	782a      	ldrb	r2, [r5, #0]
 801ae36:	f04f 0800 	mov.w	r8, #0
 801ae3a:	e01d      	b.n	801ae78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801ae3c:	f1b8 0f00 	cmp.w	r8, #0
 801ae40:	d07f      	beq.n	801af42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801ae42:	f8b8 2000 	ldrh.w	r2, [r8]
 801ae46:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801ae4a:	f1b8 0f00 	cmp.w	r8, #0
 801ae4e:	d002      	beq.n	801ae56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801ae50:	f108 0202 	add.w	r2, r8, #2
 801ae54:	9209      	str	r2, [sp, #36]	; 0x24
 801ae56:	b10d      	cbz	r5, 801ae5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801ae58:	3501      	adds	r5, #1
 801ae5a:	9508      	str	r5, [sp, #32]
 801ae5c:	3301      	adds	r3, #1
 801ae5e:	930d      	str	r3, [sp, #52]	; 0x34
 801ae60:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801ae64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae66:	f1b8 0f00 	cmp.w	r8, #0
 801ae6a:	d0d6      	beq.n	801ae1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801ae6c:	f8b8 2000 	ldrh.w	r2, [r8]
 801ae70:	2a00      	cmp	r2, #0
 801ae72:	d1d6      	bne.n	801ae22 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801ae74:	f8b8 2000 	ldrh.w	r2, [r8]
 801ae78:	2a00      	cmp	r2, #0
 801ae7a:	d0b9      	beq.n	801adf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801ae7c:	4299      	cmp	r1, r3
 801ae7e:	ddb7      	ble.n	801adf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801ae80:	2300      	movs	r3, #0
 801ae82:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ae86:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801ae8a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801ae8e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801ae92:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801ae96:	930e      	str	r3, [sp, #56]	; 0x38
 801ae98:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801ae9c:	930f      	str	r3, [sp, #60]	; 0x3c
 801ae9e:	f1b8 0f00 	cmp.w	r8, #0
 801aea2:	d002      	beq.n	801aeaa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801aea4:	f108 0302 	add.w	r3, r8, #2
 801aea8:	9309      	str	r3, [sp, #36]	; 0x24
 801aeaa:	b10d      	cbz	r5, 801aeb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801aeac:	1c6b      	adds	r3, r5, #1
 801aeae:	9308      	str	r3, [sp, #32]
 801aeb0:	ab0f      	add	r3, sp, #60	; 0x3c
 801aeb2:	9305      	str	r3, [sp, #20]
 801aeb4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801aeb8:	9304      	str	r3, [sp, #16]
 801aeba:	ab0e      	add	r3, sp, #56	; 0x38
 801aebc:	9303      	str	r3, [sp, #12]
 801aebe:	ab0c      	add	r3, sp, #48	; 0x30
 801aec0:	9302      	str	r3, [sp, #8]
 801aec2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801aec6:	9301      	str	r3, [sp, #4]
 801aec8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801aecc:	9300      	str	r3, [sp, #0]
 801aece:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801aed2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801aed6:	a908      	add	r1, sp, #32
 801aed8:	a809      	add	r0, sp, #36	; 0x24
 801aeda:	f7ff fd24 	bl	801a926 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801aede:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aee0:	2b00      	cmp	r3, #0
 801aee2:	da0b      	bge.n	801aefc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801aee4:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801aee8:	edd3 7a00 	vldr	s15, [r3]
 801aeec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801aef0:	3401      	adds	r4, #1
 801aef2:	ee17 3a90 	vmov	r3, s15
 801aef6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aefa:	930e      	str	r3, [sp, #56]	; 0x38
 801aefc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801aefe:	2b00      	cmp	r3, #0
 801af00:	da0b      	bge.n	801af1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801af02:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801af06:	edd3 7a00 	vldr	s15, [r3]
 801af0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801af0e:	3401      	adds	r4, #1
 801af10:	ee17 3a90 	vmov	r3, s15
 801af14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af18:	930f      	str	r3, [sp, #60]	; 0x3c
 801af1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af1c:	b1b3      	cbz	r3, 801af4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801af1e:	881a      	ldrh	r2, [r3, #0]
 801af20:	2a25      	cmp	r2, #37	; 0x25
 801af22:	d018      	beq.n	801af56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801af24:	2a66      	cmp	r2, #102	; 0x66
 801af26:	d01c      	beq.n	801af62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801af28:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801af2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801af2e:	f1b8 0f00 	cmp.w	r8, #0
 801af32:	f000 8121 	beq.w	801b178 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801af36:	f8b8 5000 	ldrh.w	r5, [r8]
 801af3a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801af3e:	3301      	adds	r3, #1
 801af40:	e00d      	b.n	801af5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801af42:	b10d      	cbz	r5, 801af48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801af44:	782a      	ldrb	r2, [r5, #0]
 801af46:	e77e      	b.n	801ae46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801af48:	462a      	mov	r2, r5
 801af4a:	e77c      	b.n	801ae46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801af4c:	9b08      	ldr	r3, [sp, #32]
 801af4e:	2b00      	cmp	r3, #0
 801af50:	d0ea      	beq.n	801af28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801af52:	781a      	ldrb	r2, [r3, #0]
 801af54:	e7e4      	b.n	801af20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801af56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801af58:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801af5c:	3302      	adds	r3, #2
 801af5e:	930d      	str	r3, [sp, #52]	; 0x34
 801af60:	e041      	b.n	801afe6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801af62:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801af66:	edd3 7a00 	vldr	s15, [r3]
 801af6a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801af6e:	9710      	str	r7, [sp, #64]	; 0x40
 801af70:	3401      	adds	r4, #1
 801af72:	b923      	cbnz	r3, 801af7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801af74:	2301      	movs	r3, #1
 801af76:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801af7a:	2306      	movs	r3, #6
 801af7c:	930f      	str	r3, [sp, #60]	; 0x3c
 801af7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801af82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af86:	bf48      	it	mi
 801af88:	eef1 7a67 	vnegmi.f32	s15, s15
 801af8c:	eeb0 7ae7 	vabs.f32	s14, s15
 801af90:	bf48      	it	mi
 801af92:	232d      	movmi	r3, #45	; 0x2d
 801af94:	eeb4 7a45 	vcmp.f32	s14, s10
 801af98:	bf48      	it	mi
 801af9a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801af9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801afa2:	dd2b      	ble.n	801affc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801afa4:	4b3b      	ldr	r3, [pc, #236]	; (801b094 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801afa6:	9311      	str	r3, [sp, #68]	; 0x44
 801afa8:	2366      	movs	r3, #102	; 0x66
 801afaa:	9312      	str	r3, [sp, #72]	; 0x48
 801afac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afae:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801afb2:	2b00      	cmp	r3, #0
 801afb4:	f000 80da 	beq.w	801b16c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801afb8:	881a      	ldrh	r2, [r3, #0]
 801afba:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801afbe:	a80d      	add	r0, sp, #52	; 0x34
 801afc0:	9005      	str	r0, [sp, #20]
 801afc2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801afc6:	9004      	str	r0, [sp, #16]
 801afc8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801afca:	9003      	str	r0, [sp, #12]
 801afcc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801afd0:	9002      	str	r0, [sp, #8]
 801afd2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801afd4:	9001      	str	r0, [sp, #4]
 801afd6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801afda:	9000      	str	r0, [sp, #0]
 801afdc:	e9cd a606 	strd	sl, r6, [sp, #24]
 801afe0:	a810      	add	r0, sp, #64	; 0x40
 801afe2:	f7ff fbdd 	bl	801a7a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801afe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afe8:	b10b      	cbz	r3, 801afee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801afea:	3302      	adds	r3, #2
 801afec:	9309      	str	r3, [sp, #36]	; 0x24
 801afee:	9b08      	ldr	r3, [sp, #32]
 801aff0:	2b00      	cmp	r3, #0
 801aff2:	f43f aefd 	beq.w	801adf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801aff6:	3301      	adds	r3, #1
 801aff8:	9308      	str	r3, [sp, #32]
 801affa:	e6f9      	b.n	801adf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801affc:	eef4 7a67 	vcmp.f32	s15, s15
 801b000:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b004:	d63a      	bvs.n	801b07c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801b006:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801b00a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801b00e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801b012:	eeb0 6a67 	vmov.f32	s12, s15
 801b016:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b01a:	eef0 5a47 	vmov.f32	s11, s14
 801b01e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801b022:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b026:	da2d      	bge.n	801b084 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801b028:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b02a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801b02e:	2100      	movs	r1, #0
 801b030:	eef0 4a46 	vmov.f32	s9, s12
 801b034:	ebaa 0202 	sub.w	r2, sl, r2
 801b038:	eef4 6ac6 	vcmpe.f32	s13, s12
 801b03c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b040:	b28d      	uxth	r5, r1
 801b042:	db2c      	blt.n	801b09e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801b044:	1a53      	subs	r3, r2, r1
 801b046:	2b00      	cmp	r3, #0
 801b048:	dd29      	ble.n	801b09e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801b04a:	3101      	adds	r1, #1
 801b04c:	2964      	cmp	r1, #100	; 0x64
 801b04e:	d025      	beq.n	801b09c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801b050:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801b054:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801b058:	ee17 3a10 	vmov	r3, s14
 801b05c:	2b09      	cmp	r3, #9
 801b05e:	bfa8      	it	ge
 801b060:	2309      	movge	r3, #9
 801b062:	ee07 3a10 	vmov	s14, r3
 801b066:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b06a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801b06e:	eee7 7a66 	vfms.f32	s15, s14, s13
 801b072:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801b076:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801b07a:	e7dd      	b.n	801b038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801b07c:	4b06      	ldr	r3, [pc, #24]	; (801b098 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801b07e:	9311      	str	r3, [sp, #68]	; 0x44
 801b080:	236e      	movs	r3, #110	; 0x6e
 801b082:	e792      	b.n	801afaa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801b084:	ee66 6a87 	vmul.f32	s13, s13, s14
 801b088:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801b08c:	e7c7      	b.n	801b01e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801b08e:	bf00      	nop
 801b090:	7f7fffff 	.word	0x7f7fffff
 801b094:	006e0069 	.word	0x006e0069
 801b098:	0061006e 	.word	0x0061006e
 801b09c:	2563      	movs	r5, #99	; 0x63
 801b09e:	2a63      	cmp	r2, #99	; 0x63
 801b0a0:	bfd4      	ite	le
 801b0a2:	ebc5 0202 	rsble	r2, r5, r2
 801b0a6:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801b0aa:	2a00      	cmp	r2, #0
 801b0ac:	dd43      	ble.n	801b136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801b0ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b0b0:	2b00      	cmp	r3, #0
 801b0b2:	dd40      	ble.n	801b136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801b0b4:	f04f 0901 	mov.w	r9, #1
 801b0b8:	210a      	movs	r1, #10
 801b0ba:	f113 33ff 	adds.w	r3, r3, #4294967295
 801b0be:	d30c      	bcc.n	801b0da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801b0c0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801b0c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801b0c8:	ee17 0a10 	vmov	r0, s14
 801b0cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b0d0:	fb01 0909 	mla	r9, r1, r9, r0
 801b0d4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801b0d8:	e7ef      	b.n	801b0ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801b0da:	3501      	adds	r5, #1
 801b0dc:	930f      	str	r3, [sp, #60]	; 0x3c
 801b0de:	b292      	uxth	r2, r2
 801b0e0:	230a      	movs	r3, #10
 801b0e2:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801b0e6:	4648      	mov	r0, r9
 801b0e8:	f7ff fb4e 	bl	801a788 <_ZN8touchgfx7Unicode4itoaElPtti>
 801b0ec:	f1b9 0f01 	cmp.w	r9, #1
 801b0f0:	dc1f      	bgt.n	801b132 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801b0f2:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801b0f6:	2b00      	cmp	r3, #0
 801b0f8:	bf0c      	ite	eq
 801b0fa:	2300      	moveq	r3, #0
 801b0fc:	232e      	movne	r3, #46	; 0x2e
 801b0fe:	aa44      	add	r2, sp, #272	; 0x110
 801b100:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b104:	eef4 7ae4 	vcmpe.f32	s15, s9
 801b108:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b10c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801b110:	f6ff af4c 	blt.w	801afac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801b114:	2300      	movs	r3, #0
 801b116:	f838 2b02 	ldrh.w	r2, [r8], #2
 801b11a:	1c59      	adds	r1, r3, #1
 801b11c:	b98a      	cbnz	r2, 801b142 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801b11e:	b29b      	uxth	r3, r3
 801b120:	2130      	movs	r1, #48	; 0x30
 801b122:	b983      	cbnz	r3, 801b146 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801b124:	2331      	movs	r3, #49	; 0x31
 801b126:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801b12a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b12c:	3b02      	subs	r3, #2
 801b12e:	9310      	str	r3, [sp, #64]	; 0x40
 801b130:	e73c      	b.n	801afac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801b132:	232e      	movs	r3, #46	; 0x2e
 801b134:	e7e3      	b.n	801b0fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801b136:	ab44      	add	r3, sp, #272	; 0x110
 801b138:	3501      	adds	r5, #1
 801b13a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801b13e:	2300      	movs	r3, #0
 801b140:	e7e0      	b.n	801b104 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801b142:	460b      	mov	r3, r1
 801b144:	e7e7      	b.n	801b116 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801b146:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801b14a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801b14e:	2808      	cmp	r0, #8
 801b150:	d806      	bhi.n	801b160 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801b152:	a944      	add	r1, sp, #272	; 0x110
 801b154:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801b158:	3201      	adds	r2, #1
 801b15a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801b15e:	e725      	b.n	801afac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801b160:	2a39      	cmp	r2, #57	; 0x39
 801b162:	bf08      	it	eq
 801b164:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801b168:	3b01      	subs	r3, #1
 801b16a:	e7da      	b.n	801b122 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801b16c:	9a08      	ldr	r2, [sp, #32]
 801b16e:	2a00      	cmp	r2, #0
 801b170:	f43f af23 	beq.w	801afba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801b174:	7812      	ldrb	r2, [r2, #0]
 801b176:	e720      	b.n	801afba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801b178:	2d00      	cmp	r5, #0
 801b17a:	f43f aede 	beq.w	801af3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801b17e:	782d      	ldrb	r5, [r5, #0]
 801b180:	e6db      	b.n	801af3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801b182:	bf00      	nop

0801b184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801b184:	b507      	push	{r0, r1, r2, lr}
 801b186:	9300      	str	r3, [sp, #0]
 801b188:	4613      	mov	r3, r2
 801b18a:	2200      	movs	r2, #0
 801b18c:	f7ff fe1c 	bl	801adc8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801b190:	b003      	add	sp, #12
 801b192:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801b198 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801b198:	4b01      	ldr	r3, [pc, #4]	; (801b1a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801b19a:	6018      	str	r0, [r3, #0]
 801b19c:	4770      	bx	lr
 801b19e:	bf00      	nop
 801b1a0:	200138b4 	.word	0x200138b4

0801b1a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801b1a4:	4b06      	ldr	r3, [pc, #24]	; (801b1c0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801b1a6:	881a      	ldrh	r2, [r3, #0]
 801b1a8:	4282      	cmp	r2, r0
 801b1aa:	d807      	bhi.n	801b1bc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801b1ac:	4b05      	ldr	r3, [pc, #20]	; (801b1c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801b1ae:	881b      	ldrh	r3, [r3, #0]
 801b1b0:	4413      	add	r3, r2
 801b1b2:	4298      	cmp	r0, r3
 801b1b4:	bfac      	ite	ge
 801b1b6:	2000      	movge	r0, #0
 801b1b8:	2001      	movlt	r0, #1
 801b1ba:	4770      	bx	lr
 801b1bc:	2000      	movs	r0, #0
 801b1be:	4770      	bx	lr
 801b1c0:	200138d4 	.word	0x200138d4
 801b1c4:	200138d8 	.word	0x200138d8

0801b1c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801b1c8:	b508      	push	{r3, lr}
 801b1ca:	4601      	mov	r1, r0
 801b1cc:	f7ff ffea 	bl	801b1a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801b1d0:	b118      	cbz	r0, 801b1da <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801b1d2:	4b02      	ldr	r3, [pc, #8]	; (801b1dc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801b1d4:	681b      	ldr	r3, [r3, #0]
 801b1d6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801b1da:	bd08      	pop	{r3, pc}
 801b1dc:	200138b8 	.word	0x200138b8

0801b1e0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801b1e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b1e2:	4c24      	ldr	r4, [pc, #144]	; (801b274 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801b1e4:	6823      	ldr	r3, [r4, #0]
 801b1e6:	2b00      	cmp	r3, #0
 801b1e8:	d042      	beq.n	801b270 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801b1ea:	4a23      	ldr	r2, [pc, #140]	; (801b278 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801b1ec:	4d23      	ldr	r5, [pc, #140]	; (801b27c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801b1ee:	8811      	ldrh	r1, [r2, #0]
 801b1f0:	f8b5 c000 	ldrh.w	ip, [r5]
 801b1f4:	4822      	ldr	r0, [pc, #136]	; (801b280 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801b1f6:	4461      	add	r1, ip
 801b1f8:	1c4a      	adds	r2, r1, #1
 801b1fa:	f022 0201 	bic.w	r2, r2, #1
 801b1fe:	008f      	lsls	r7, r1, #2
 801b200:	0412      	lsls	r2, r2, #16
 801b202:	19de      	adds	r6, r3, r7
 801b204:	0c12      	lsrs	r2, r2, #16
 801b206:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801b20a:	6006      	str	r6, [r0, #0]
 801b20c:	4e1d      	ldr	r6, [pc, #116]	; (801b284 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801b20e:	19da      	adds	r2, r3, r7
 801b210:	6032      	str	r2, [r6, #0]
 801b212:	220e      	movs	r2, #14
 801b214:	fb02 f20c 	mul.w	r2, r2, ip
 801b218:	3203      	adds	r2, #3
 801b21a:	f022 0203 	bic.w	r2, r2, #3
 801b21e:	443a      	add	r2, r7
 801b220:	4f19      	ldr	r7, [pc, #100]	; (801b288 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801b222:	4413      	add	r3, r2
 801b224:	603b      	str	r3, [r7, #0]
 801b226:	4f19      	ldr	r7, [pc, #100]	; (801b28c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801b228:	2300      	movs	r3, #0
 801b22a:	803b      	strh	r3, [r7, #0]
 801b22c:	4f18      	ldr	r7, [pc, #96]	; (801b290 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801b22e:	683f      	ldr	r7, [r7, #0]
 801b230:	1aba      	subs	r2, r7, r2
 801b232:	4f18      	ldr	r7, [pc, #96]	; (801b294 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801b234:	603a      	str	r2, [r7, #0]
 801b236:	4a18      	ldr	r2, [pc, #96]	; (801b298 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801b238:	469c      	mov	ip, r3
 801b23a:	8013      	strh	r3, [r2, #0]
 801b23c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801b240:	428b      	cmp	r3, r1
 801b242:	d10d      	bne.n	801b260 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801b244:	882d      	ldrh	r5, [r5, #0]
 801b246:	6830      	ldr	r0, [r6, #0]
 801b248:	2300      	movs	r3, #0
 801b24a:	240e      	movs	r4, #14
 801b24c:	429d      	cmp	r5, r3
 801b24e:	d90f      	bls.n	801b270 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801b250:	fb04 0203 	mla	r2, r4, r3, r0
 801b254:	3301      	adds	r3, #1
 801b256:	7b11      	ldrb	r1, [r2, #12]
 801b258:	f36f 1145 	bfc	r1, #5, #1
 801b25c:	7311      	strb	r1, [r2, #12]
 801b25e:	e7f5      	b.n	801b24c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801b260:	6822      	ldr	r2, [r4, #0]
 801b262:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801b266:	6802      	ldr	r2, [r0, #0]
 801b268:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801b26c:	3301      	adds	r3, #1
 801b26e:	e7e7      	b.n	801b240 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801b270:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b272:	bf00      	nop
 801b274:	200138b8 	.word	0x200138b8
 801b278:	200138d4 	.word	0x200138d4
 801b27c:	200138d8 	.word	0x200138d8
 801b280:	200138cc 	.word	0x200138cc
 801b284:	200138bc 	.word	0x200138bc
 801b288:	200138c4 	.word	0x200138c4
 801b28c:	200138d6 	.word	0x200138d6
 801b290:	200138c0 	.word	0x200138c0
 801b294:	200138d0 	.word	0x200138d0
 801b298:	200138c8 	.word	0x200138c8

0801b29c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801b29c:	4b06      	ldr	r3, [pc, #24]	; (801b2b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801b29e:	681b      	ldr	r3, [r3, #0]
 801b2a0:	b943      	cbnz	r3, 801b2b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801b2a2:	b139      	cbz	r1, 801b2b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801b2a4:	4b05      	ldr	r3, [pc, #20]	; (801b2bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801b2a6:	801a      	strh	r2, [r3, #0]
 801b2a8:	4b05      	ldr	r3, [pc, #20]	; (801b2c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801b2aa:	6019      	str	r1, [r3, #0]
 801b2ac:	4b05      	ldr	r3, [pc, #20]	; (801b2c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801b2ae:	6018      	str	r0, [r3, #0]
 801b2b0:	f7ff bf96 	b.w	801b1e0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801b2b4:	4770      	bx	lr
 801b2b6:	bf00      	nop
 801b2b8:	200138c4 	.word	0x200138c4
 801b2bc:	200138d8 	.word	0x200138d8
 801b2c0:	200138c0 	.word	0x200138c0
 801b2c4:	200138b8 	.word	0x200138b8

0801b2c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801b2c8:	b470      	push	{r4, r5, r6}
 801b2ca:	4c07      	ldr	r4, [pc, #28]	; (801b2e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801b2cc:	6826      	ldr	r6, [r4, #0]
 801b2ce:	4605      	mov	r5, r0
 801b2d0:	4610      	mov	r0, r2
 801b2d2:	9a03      	ldr	r2, [sp, #12]
 801b2d4:	b936      	cbnz	r6, 801b2e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801b2d6:	6025      	str	r5, [r4, #0]
 801b2d8:	4c04      	ldr	r4, [pc, #16]	; (801b2ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801b2da:	8021      	strh	r1, [r4, #0]
 801b2dc:	bc70      	pop	{r4, r5, r6}
 801b2de:	4619      	mov	r1, r3
 801b2e0:	f7ff bfdc 	b.w	801b29c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801b2e4:	bc70      	pop	{r4, r5, r6}
 801b2e6:	4770      	bx	lr
 801b2e8:	200138dc 	.word	0x200138dc
 801b2ec:	200138d4 	.word	0x200138d4

0801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801b2f0:	4a12      	ldr	r2, [pc, #72]	; (801b33c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801b2f2:	8803      	ldrh	r3, [r0, #0]
 801b2f4:	8812      	ldrh	r2, [r2, #0]
 801b2f6:	4293      	cmp	r3, r2
 801b2f8:	d207      	bcs.n	801b30a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801b2fa:	4a11      	ldr	r2, [pc, #68]	; (801b340 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801b2fc:	6812      	ldr	r2, [r2, #0]
 801b2fe:	2114      	movs	r1, #20
 801b300:	fb01 2303 	mla	r3, r1, r3, r2
 801b304:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801b308:	4770      	bx	lr
 801b30a:	490e      	ldr	r1, [pc, #56]	; (801b344 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801b30c:	8809      	ldrh	r1, [r1, #0]
 801b30e:	4411      	add	r1, r2
 801b310:	428b      	cmp	r3, r1
 801b312:	da04      	bge.n	801b31e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801b314:	1a9b      	subs	r3, r3, r2
 801b316:	4a0c      	ldr	r2, [pc, #48]	; (801b348 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801b318:	210e      	movs	r1, #14
 801b31a:	6812      	ldr	r2, [r2, #0]
 801b31c:	e7f0      	b.n	801b300 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801b31e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b322:	4293      	cmp	r3, r2
 801b324:	d108      	bne.n	801b338 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801b326:	4b09      	ldr	r3, [pc, #36]	; (801b34c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801b328:	781b      	ldrb	r3, [r3, #0]
 801b32a:	b91b      	cbnz	r3, 801b334 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801b32c:	4b08      	ldr	r3, [pc, #32]	; (801b350 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801b32e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801b332:	4770      	bx	lr
 801b334:	4b07      	ldr	r3, [pc, #28]	; (801b354 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801b336:	e7fa      	b.n	801b32e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801b338:	2000      	movs	r0, #0
 801b33a:	4770      	bx	lr
 801b33c:	200138d4 	.word	0x200138d4
 801b340:	200138dc 	.word	0x200138dc
 801b344:	200138d8 	.word	0x200138d8
 801b348:	200138bc 	.word	0x200138bc
 801b34c:	20013844 	.word	0x20013844
 801b350:	20013846 	.word	0x20013846
 801b354:	20013848 	.word	0x20013848

0801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801b358:	4a12      	ldr	r2, [pc, #72]	; (801b3a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801b35a:	8803      	ldrh	r3, [r0, #0]
 801b35c:	8812      	ldrh	r2, [r2, #0]
 801b35e:	4293      	cmp	r3, r2
 801b360:	d207      	bcs.n	801b372 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801b362:	4a11      	ldr	r2, [pc, #68]	; (801b3a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801b364:	6812      	ldr	r2, [r2, #0]
 801b366:	2114      	movs	r1, #20
 801b368:	fb01 2303 	mla	r3, r1, r3, r2
 801b36c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801b370:	4770      	bx	lr
 801b372:	490e      	ldr	r1, [pc, #56]	; (801b3ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801b374:	8809      	ldrh	r1, [r1, #0]
 801b376:	4411      	add	r1, r2
 801b378:	428b      	cmp	r3, r1
 801b37a:	da04      	bge.n	801b386 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801b37c:	1a9b      	subs	r3, r3, r2
 801b37e:	4a0c      	ldr	r2, [pc, #48]	; (801b3b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801b380:	210e      	movs	r1, #14
 801b382:	6812      	ldr	r2, [r2, #0]
 801b384:	e7f0      	b.n	801b368 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801b386:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b38a:	4293      	cmp	r3, r2
 801b38c:	d108      	bne.n	801b3a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801b38e:	4b09      	ldr	r3, [pc, #36]	; (801b3b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801b390:	781b      	ldrb	r3, [r3, #0]
 801b392:	b91b      	cbnz	r3, 801b39c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801b394:	4b08      	ldr	r3, [pc, #32]	; (801b3b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801b396:	f9b3 0000 	ldrsh.w	r0, [r3]
 801b39a:	4770      	bx	lr
 801b39c:	4b07      	ldr	r3, [pc, #28]	; (801b3bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801b39e:	e7fa      	b.n	801b396 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801b3a0:	2000      	movs	r0, #0
 801b3a2:	4770      	bx	lr
 801b3a4:	200138d4 	.word	0x200138d4
 801b3a8:	200138dc 	.word	0x200138dc
 801b3ac:	200138d8 	.word	0x200138d8
 801b3b0:	200138bc 	.word	0x200138bc
 801b3b4:	20013844 	.word	0x20013844
 801b3b8:	20013848 	.word	0x20013848
 801b3bc:	20013846 	.word	0x20013846

0801b3c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801b3c0:	b510      	push	{r4, lr}
 801b3c2:	4a1f      	ldr	r2, [pc, #124]	; (801b440 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801b3c4:	880b      	ldrh	r3, [r1, #0]
 801b3c6:	8812      	ldrh	r2, [r2, #0]
 801b3c8:	4293      	cmp	r3, r2
 801b3ca:	d213      	bcs.n	801b3f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801b3cc:	4a1d      	ldr	r2, [pc, #116]	; (801b444 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801b3ce:	6812      	ldr	r2, [r2, #0]
 801b3d0:	2114      	movs	r1, #20
 801b3d2:	fb01 2303 	mla	r3, r1, r3, r2
 801b3d6:	8a1a      	ldrh	r2, [r3, #16]
 801b3d8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801b3dc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801b3e0:	8a5b      	ldrh	r3, [r3, #18]
 801b3e2:	8004      	strh	r4, [r0, #0]
 801b3e4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801b3e8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801b3ec:	8041      	strh	r1, [r0, #2]
 801b3ee:	8082      	strh	r2, [r0, #4]
 801b3f0:	80c3      	strh	r3, [r0, #6]
 801b3f2:	e00e      	b.n	801b412 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801b3f4:	4914      	ldr	r1, [pc, #80]	; (801b448 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801b3f6:	8809      	ldrh	r1, [r1, #0]
 801b3f8:	4411      	add	r1, r2
 801b3fa:	428b      	cmp	r3, r1
 801b3fc:	da0a      	bge.n	801b414 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801b3fe:	1a9b      	subs	r3, r3, r2
 801b400:	4a12      	ldr	r2, [pc, #72]	; (801b44c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801b402:	6812      	ldr	r2, [r2, #0]
 801b404:	210e      	movs	r1, #14
 801b406:	fb01 2303 	mla	r3, r1, r3, r2
 801b40a:	681a      	ldr	r2, [r3, #0]
 801b40c:	6002      	str	r2, [r0, #0]
 801b40e:	685a      	ldr	r2, [r3, #4]
 801b410:	6042      	str	r2, [r0, #4]
 801b412:	bd10      	pop	{r4, pc}
 801b414:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b418:	4293      	cmp	r3, r2
 801b41a:	d10b      	bne.n	801b434 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801b41c:	4b0c      	ldr	r3, [pc, #48]	; (801b450 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801b41e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801b422:	4b0c      	ldr	r3, [pc, #48]	; (801b454 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801b424:	8081      	strh	r1, [r0, #4]
 801b426:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b42a:	80c2      	strh	r2, [r0, #6]
 801b42c:	2300      	movs	r3, #0
 801b42e:	8003      	strh	r3, [r0, #0]
 801b430:	8043      	strh	r3, [r0, #2]
 801b432:	e7ee      	b.n	801b412 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801b434:	2300      	movs	r3, #0
 801b436:	8003      	strh	r3, [r0, #0]
 801b438:	8043      	strh	r3, [r0, #2]
 801b43a:	8083      	strh	r3, [r0, #4]
 801b43c:	e7d8      	b.n	801b3f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801b43e:	bf00      	nop
 801b440:	200138d4 	.word	0x200138d4
 801b444:	200138dc 	.word	0x200138dc
 801b448:	200138d8 	.word	0x200138d8
 801b44c:	200138bc 	.word	0x200138bc
 801b450:	20013840 	.word	0x20013840
 801b454:	20013842 	.word	0x20013842

0801b458 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801b458:	4a17      	ldr	r2, [pc, #92]	; (801b4b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801b45a:	8803      	ldrh	r3, [r0, #0]
 801b45c:	8812      	ldrh	r2, [r2, #0]
 801b45e:	4293      	cmp	r3, r2
 801b460:	d213      	bcs.n	801b48a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801b462:	4a16      	ldr	r2, [pc, #88]	; (801b4bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801b464:	6812      	ldr	r2, [r2, #0]
 801b466:	2114      	movs	r1, #20
 801b468:	fb01 2303 	mla	r3, r1, r3, r2
 801b46c:	8a1a      	ldrh	r2, [r3, #16]
 801b46e:	8919      	ldrh	r1, [r3, #8]
 801b470:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801b474:	428a      	cmp	r2, r1
 801b476:	db1d      	blt.n	801b4b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801b478:	8a58      	ldrh	r0, [r3, #18]
 801b47a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801b47e:	895b      	ldrh	r3, [r3, #10]
 801b480:	4298      	cmp	r0, r3
 801b482:	bfac      	ite	ge
 801b484:	2000      	movge	r0, #0
 801b486:	2001      	movlt	r0, #1
 801b488:	4770      	bx	lr
 801b48a:	490d      	ldr	r1, [pc, #52]	; (801b4c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801b48c:	8809      	ldrh	r1, [r1, #0]
 801b48e:	4411      	add	r1, r2
 801b490:	428b      	cmp	r3, r1
 801b492:	da0d      	bge.n	801b4b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801b494:	1a9b      	subs	r3, r3, r2
 801b496:	4a0b      	ldr	r2, [pc, #44]	; (801b4c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801b498:	6812      	ldr	r2, [r2, #0]
 801b49a:	210e      	movs	r1, #14
 801b49c:	fb01 2303 	mla	r3, r1, r3, r2
 801b4a0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801b4a4:	891a      	ldrh	r2, [r3, #8]
 801b4a6:	4291      	cmp	r1, r2
 801b4a8:	db04      	blt.n	801b4b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801b4aa:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801b4ae:	e7e6      	b.n	801b47e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801b4b0:	2000      	movs	r0, #0
 801b4b2:	4770      	bx	lr
 801b4b4:	2001      	movs	r0, #1
 801b4b6:	4770      	bx	lr
 801b4b8:	200138d4 	.word	0x200138d4
 801b4bc:	200138dc 	.word	0x200138dc
 801b4c0:	200138d8 	.word	0x200138d8
 801b4c4:	200138bc 	.word	0x200138bc

0801b4c8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801b4c8:	4a12      	ldr	r2, [pc, #72]	; (801b514 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801b4ca:	8803      	ldrh	r3, [r0, #0]
 801b4cc:	8811      	ldrh	r1, [r2, #0]
 801b4ce:	428b      	cmp	r3, r1
 801b4d0:	d20b      	bcs.n	801b4ea <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801b4d2:	4a11      	ldr	r2, [pc, #68]	; (801b518 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801b4d4:	6812      	ldr	r2, [r2, #0]
 801b4d6:	b112      	cbz	r2, 801b4de <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801b4d8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801b4dc:	b9c0      	cbnz	r0, 801b510 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801b4de:	4a0f      	ldr	r2, [pc, #60]	; (801b51c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801b4e0:	6811      	ldr	r1, [r2, #0]
 801b4e2:	2214      	movs	r2, #20
 801b4e4:	4353      	muls	r3, r2
 801b4e6:	58c8      	ldr	r0, [r1, r3]
 801b4e8:	4770      	bx	lr
 801b4ea:	4a0d      	ldr	r2, [pc, #52]	; (801b520 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801b4ec:	8812      	ldrh	r2, [r2, #0]
 801b4ee:	440a      	add	r2, r1
 801b4f0:	4293      	cmp	r3, r2
 801b4f2:	da04      	bge.n	801b4fe <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801b4f4:	4a08      	ldr	r2, [pc, #32]	; (801b518 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801b4f6:	6812      	ldr	r2, [r2, #0]
 801b4f8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801b4fc:	4770      	bx	lr
 801b4fe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b502:	4293      	cmp	r3, r2
 801b504:	d103      	bne.n	801b50e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801b506:	4b07      	ldr	r3, [pc, #28]	; (801b524 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801b508:	681b      	ldr	r3, [r3, #0]
 801b50a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801b50c:	4770      	bx	lr
 801b50e:	2000      	movs	r0, #0
 801b510:	4770      	bx	lr
 801b512:	bf00      	nop
 801b514:	200138d4 	.word	0x200138d4
 801b518:	200138b8 	.word	0x200138b8
 801b51c:	200138dc 	.word	0x200138dc
 801b520:	200138d8 	.word	0x200138d8
 801b524:	2001384c 	.word	0x2001384c

0801b528 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801b528:	4b24      	ldr	r3, [pc, #144]	; (801b5bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801b52a:	8802      	ldrh	r2, [r0, #0]
 801b52c:	8818      	ldrh	r0, [r3, #0]
 801b52e:	4282      	cmp	r2, r0
 801b530:	d221      	bcs.n	801b576 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801b532:	4b23      	ldr	r3, [pc, #140]	; (801b5c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801b534:	6819      	ldr	r1, [r3, #0]
 801b536:	2314      	movs	r3, #20
 801b538:	fb03 1302 	mla	r3, r3, r2, r1
 801b53c:	6858      	ldr	r0, [r3, #4]
 801b53e:	2800      	cmp	r0, #0
 801b540:	d03a      	beq.n	801b5b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801b542:	4920      	ldr	r1, [pc, #128]	; (801b5c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801b544:	6809      	ldr	r1, [r1, #0]
 801b546:	2900      	cmp	r1, #0
 801b548:	d036      	beq.n	801b5b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801b54a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801b54e:	2900      	cmp	r1, #0
 801b550:	d032      	beq.n	801b5b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801b552:	891a      	ldrh	r2, [r3, #8]
 801b554:	8958      	ldrh	r0, [r3, #10]
 801b556:	4350      	muls	r0, r2
 801b558:	7c5a      	ldrb	r2, [r3, #17]
 801b55a:	7cdb      	ldrb	r3, [r3, #19]
 801b55c:	0952      	lsrs	r2, r2, #5
 801b55e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801b562:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801b566:	2b0b      	cmp	r3, #11
 801b568:	bf18      	it	ne
 801b56a:	0040      	lslne	r0, r0, #1
 801b56c:	3003      	adds	r0, #3
 801b56e:	f020 0003 	bic.w	r0, r0, #3
 801b572:	4408      	add	r0, r1
 801b574:	4770      	bx	lr
 801b576:	4b14      	ldr	r3, [pc, #80]	; (801b5c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801b578:	881b      	ldrh	r3, [r3, #0]
 801b57a:	4403      	add	r3, r0
 801b57c:	429a      	cmp	r2, r3
 801b57e:	da1a      	bge.n	801b5b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801b580:	4b12      	ldr	r3, [pc, #72]	; (801b5cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801b582:	681b      	ldr	r3, [r3, #0]
 801b584:	1a10      	subs	r0, r2, r0
 801b586:	210e      	movs	r1, #14
 801b588:	fb01 3000 	mla	r0, r1, r0, r3
 801b58c:	7b03      	ldrb	r3, [r0, #12]
 801b58e:	f003 031f 	and.w	r3, r3, #31
 801b592:	2b0b      	cmp	r3, #11
 801b594:	d10b      	bne.n	801b5ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801b596:	8903      	ldrh	r3, [r0, #8]
 801b598:	8940      	ldrh	r0, [r0, #10]
 801b59a:	4358      	muls	r0, r3
 801b59c:	4b09      	ldr	r3, [pc, #36]	; (801b5c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801b59e:	6819      	ldr	r1, [r3, #0]
 801b5a0:	3003      	adds	r0, #3
 801b5a2:	f020 0303 	bic.w	r3, r0, #3
 801b5a6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801b5aa:	4418      	add	r0, r3
 801b5ac:	4770      	bx	lr
 801b5ae:	2b0d      	cmp	r3, #13
 801b5b0:	d101      	bne.n	801b5b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801b5b2:	300d      	adds	r0, #13
 801b5b4:	4770      	bx	lr
 801b5b6:	2000      	movs	r0, #0
 801b5b8:	4770      	bx	lr
 801b5ba:	bf00      	nop
 801b5bc:	200138d4 	.word	0x200138d4
 801b5c0:	200138dc 	.word	0x200138dc
 801b5c4:	200138b8 	.word	0x200138b8
 801b5c8:	200138d8 	.word	0x200138d8
 801b5cc:	200138bc 	.word	0x200138bc

0801b5d0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801b5d0:	b510      	push	{r4, lr}
 801b5d2:	4a17      	ldr	r2, [pc, #92]	; (801b630 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801b5d4:	8803      	ldrh	r3, [r0, #0]
 801b5d6:	8812      	ldrh	r2, [r2, #0]
 801b5d8:	4293      	cmp	r3, r2
 801b5da:	d20c      	bcs.n	801b5f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801b5dc:	4a15      	ldr	r2, [pc, #84]	; (801b634 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801b5de:	6812      	ldr	r2, [r2, #0]
 801b5e0:	2114      	movs	r1, #20
 801b5e2:	fb01 2303 	mla	r3, r1, r3, r2
 801b5e6:	7c58      	ldrb	r0, [r3, #17]
 801b5e8:	0942      	lsrs	r2, r0, #5
 801b5ea:	7cd8      	ldrb	r0, [r3, #19]
 801b5ec:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801b5f0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801b5f4:	bd10      	pop	{r4, pc}
 801b5f6:	4910      	ldr	r1, [pc, #64]	; (801b638 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801b5f8:	8809      	ldrh	r1, [r1, #0]
 801b5fa:	4411      	add	r1, r2
 801b5fc:	428b      	cmp	r3, r1
 801b5fe:	da09      	bge.n	801b614 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801b600:	1a9b      	subs	r3, r3, r2
 801b602:	4a0e      	ldr	r2, [pc, #56]	; (801b63c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801b604:	6812      	ldr	r2, [r2, #0]
 801b606:	210e      	movs	r1, #14
 801b608:	fb01 2303 	mla	r3, r1, r3, r2
 801b60c:	7b18      	ldrb	r0, [r3, #12]
 801b60e:	f000 001f 	and.w	r0, r0, #31
 801b612:	e7ef      	b.n	801b5f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801b614:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b618:	4293      	cmp	r3, r2
 801b61a:	d106      	bne.n	801b62a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801b61c:	f7e9 ff46 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 801b620:	6803      	ldr	r3, [r0, #0]
 801b622:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b626:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b628:	4718      	bx	r3
 801b62a:	2000      	movs	r0, #0
 801b62c:	e7e2      	b.n	801b5f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801b62e:	bf00      	nop
 801b630:	200138d4 	.word	0x200138d4
 801b634:	200138dc 	.word	0x200138dc
 801b638:	200138d8 	.word	0x200138d8
 801b63c:	200138bc 	.word	0x200138bc

0801b640 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801b640:	2010      	movs	r0, #16
 801b642:	4770      	bx	lr

0801b644 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801b644:	2000      	movs	r0, #0
 801b646:	4770      	bx	lr

0801b648 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801b648:	4b02      	ldr	r3, [pc, #8]	; (801b654 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801b64a:	8818      	ldrh	r0, [r3, #0]
 801b64c:	0040      	lsls	r0, r0, #1
 801b64e:	b280      	uxth	r0, r0
 801b650:	4770      	bx	lr
 801b652:	bf00      	nop
 801b654:	20013846 	.word	0x20013846

0801b658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801b658:	2bff      	cmp	r3, #255	; 0xff
 801b65a:	d050      	beq.n	801b6fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801b65c:	2a0b      	cmp	r2, #11
 801b65e:	d04a      	beq.n	801b6f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801b660:	d80e      	bhi.n	801b680 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801b662:	2a03      	cmp	r2, #3
 801b664:	d03f      	beq.n	801b6e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801b666:	d804      	bhi.n	801b672 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801b668:	2a01      	cmp	r2, #1
 801b66a:	d03e      	beq.n	801b6ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801b66c:	d93f      	bls.n	801b6ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801b66e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801b670:	4770      	bx	lr
 801b672:	2a09      	cmp	r2, #9
 801b674:	d03f      	beq.n	801b6f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801b676:	d83c      	bhi.n	801b6f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801b678:	2a08      	cmp	r2, #8
 801b67a:	d03a      	beq.n	801b6f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801b67c:	2000      	movs	r0, #0
 801b67e:	4770      	bx	lr
 801b680:	2a2f      	cmp	r2, #47	; 0x2f
 801b682:	d024      	beq.n	801b6ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801b684:	d80d      	bhi.n	801b6a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801b686:	2a2d      	cmp	r2, #45	; 0x2d
 801b688:	d014      	beq.n	801b6b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801b68a:	d826      	bhi.n	801b6da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801b68c:	2a2c      	cmp	r2, #44	; 0x2c
 801b68e:	d1f5      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b690:	684b      	ldr	r3, [r1, #4]
 801b692:	781b      	ldrb	r3, [r3, #0]
 801b694:	2b01      	cmp	r3, #1
 801b696:	d018      	beq.n	801b6ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801b698:	d323      	bcc.n	801b6e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801b69a:	2b02      	cmp	r3, #2
 801b69c:	d1ee      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b69e:	6880      	ldr	r0, [r0, #8]
 801b6a0:	4770      	bx	lr
 801b6a2:	2a31      	cmp	r2, #49	; 0x31
 801b6a4:	d004      	beq.n	801b6b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801b6a6:	d328      	bcc.n	801b6fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801b6a8:	2a32      	cmp	r2, #50	; 0x32
 801b6aa:	d026      	beq.n	801b6fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801b6ac:	2a33      	cmp	r2, #51	; 0x33
 801b6ae:	d1e5      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b6b0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801b6b2:	4770      	bx	lr
 801b6b4:	684b      	ldr	r3, [r1, #4]
 801b6b6:	781b      	ldrb	r3, [r3, #0]
 801b6b8:	2b01      	cmp	r3, #1
 801b6ba:	d004      	beq.n	801b6c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801b6bc:	d30b      	bcc.n	801b6d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b6be:	2b02      	cmp	r3, #2
 801b6c0:	d1dc      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b6c2:	6900      	ldr	r0, [r0, #16]
 801b6c4:	4770      	bx	lr
 801b6c6:	6a00      	ldr	r0, [r0, #32]
 801b6c8:	4770      	bx	lr
 801b6ca:	6980      	ldr	r0, [r0, #24]
 801b6cc:	4770      	bx	lr
 801b6ce:	684b      	ldr	r3, [r1, #4]
 801b6d0:	781b      	ldrb	r3, [r3, #0]
 801b6d2:	2b00      	cmp	r3, #0
 801b6d4:	d1d2      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b6d6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801b6d8:	4770      	bx	lr
 801b6da:	684b      	ldr	r3, [r1, #4]
 801b6dc:	781b      	ldrb	r3, [r3, #0]
 801b6de:	2b00      	cmp	r3, #0
 801b6e0:	d1cc      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b6e2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801b6e4:	4770      	bx	lr
 801b6e6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801b6e8:	4770      	bx	lr
 801b6ea:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801b6ec:	4770      	bx	lr
 801b6ee:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801b6f0:	4770      	bx	lr
 801b6f2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801b6f4:	4770      	bx	lr
 801b6f6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801b6f8:	4770      	bx	lr
 801b6fa:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801b6fc:	4770      	bx	lr
 801b6fe:	2a0b      	cmp	r2, #11
 801b700:	d049      	beq.n	801b796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801b702:	d80e      	bhi.n	801b722 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801b704:	2a03      	cmp	r2, #3
 801b706:	d040      	beq.n	801b78a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801b708:	d804      	bhi.n	801b714 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801b70a:	2a01      	cmp	r2, #1
 801b70c:	d03f      	beq.n	801b78e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801b70e:	d940      	bls.n	801b792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801b710:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801b712:	4770      	bx	lr
 801b714:	2a09      	cmp	r2, #9
 801b716:	d03e      	beq.n	801b796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801b718:	d801      	bhi.n	801b71e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801b71a:	2a08      	cmp	r2, #8
 801b71c:	d1ae      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b71e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801b720:	4770      	bx	lr
 801b722:	2a2f      	cmp	r2, #47	; 0x2f
 801b724:	d024      	beq.n	801b770 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801b726:	d80d      	bhi.n	801b744 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801b728:	2a2d      	cmp	r2, #45	; 0x2d
 801b72a:	d014      	beq.n	801b756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801b72c:	d826      	bhi.n	801b77c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801b72e:	2a2c      	cmp	r2, #44	; 0x2c
 801b730:	d1a4      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b732:	684b      	ldr	r3, [r1, #4]
 801b734:	781b      	ldrb	r3, [r3, #0]
 801b736:	2b01      	cmp	r3, #1
 801b738:	d018      	beq.n	801b76c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801b73a:	d324      	bcc.n	801b786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801b73c:	2b02      	cmp	r3, #2
 801b73e:	d19d      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b740:	68c0      	ldr	r0, [r0, #12]
 801b742:	4770      	bx	lr
 801b744:	2a31      	cmp	r2, #49	; 0x31
 801b746:	d004      	beq.n	801b752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801b748:	d327      	bcc.n	801b79a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801b74a:	2a32      	cmp	r2, #50	; 0x32
 801b74c:	d025      	beq.n	801b79a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801b74e:	2a33      	cmp	r2, #51	; 0x33
 801b750:	d194      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b752:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801b754:	4770      	bx	lr
 801b756:	684b      	ldr	r3, [r1, #4]
 801b758:	781b      	ldrb	r3, [r3, #0]
 801b75a:	2b01      	cmp	r3, #1
 801b75c:	d004      	beq.n	801b768 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801b75e:	d30b      	bcc.n	801b778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801b760:	2b02      	cmp	r3, #2
 801b762:	d18b      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b764:	6940      	ldr	r0, [r0, #20]
 801b766:	4770      	bx	lr
 801b768:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801b76a:	4770      	bx	lr
 801b76c:	69c0      	ldr	r0, [r0, #28]
 801b76e:	4770      	bx	lr
 801b770:	684b      	ldr	r3, [r1, #4]
 801b772:	781b      	ldrb	r3, [r3, #0]
 801b774:	2b00      	cmp	r3, #0
 801b776:	d181      	bne.n	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b778:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801b77a:	4770      	bx	lr
 801b77c:	684b      	ldr	r3, [r1, #4]
 801b77e:	781b      	ldrb	r3, [r3, #0]
 801b780:	2b00      	cmp	r3, #0
 801b782:	f47f af7b 	bne.w	801b67c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b786:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801b788:	4770      	bx	lr
 801b78a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801b78c:	4770      	bx	lr
 801b78e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801b790:	4770      	bx	lr
 801b792:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801b794:	4770      	bx	lr
 801b796:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801b798:	4770      	bx	lr
 801b79a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801b79c:	4770      	bx	lr

0801b79e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b79e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7a2:	b087      	sub	sp, #28
 801b7a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b7a6:	9205      	str	r2, [sp, #20]
 801b7a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b7ac:	9202      	str	r2, [sp, #8]
 801b7ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b7b2:	9101      	str	r1, [sp, #4]
 801b7b4:	6841      	ldr	r1, [r0, #4]
 801b7b6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b7ba:	fb01 2404 	mla	r4, r1, r4, r2
 801b7be:	6802      	ldr	r2, [r0, #0]
 801b7c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b7c4:	f8de 2000 	ldr.w	r2, [lr]
 801b7c8:	9203      	str	r2, [sp, #12]
 801b7ca:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b7ce:	3204      	adds	r2, #4
 801b7d0:	9204      	str	r2, [sp, #16]
 801b7d2:	9a02      	ldr	r2, [sp, #8]
 801b7d4:	43d6      	mvns	r6, r2
 801b7d6:	b2f6      	uxtb	r6, r6
 801b7d8:	9a01      	ldr	r2, [sp, #4]
 801b7da:	2a00      	cmp	r2, #0
 801b7dc:	dc03      	bgt.n	801b7e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b7de:	9a05      	ldr	r2, [sp, #20]
 801b7e0:	2a00      	cmp	r2, #0
 801b7e2:	f340 8129 	ble.w	801ba38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801b7e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b7e8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b7ec:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b7f0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b7f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b7f6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b7fa:	2b00      	cmp	r3, #0
 801b7fc:	dd0e      	ble.n	801b81c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b7fe:	1408      	asrs	r0, r1, #16
 801b800:	d405      	bmi.n	801b80e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b802:	4560      	cmp	r0, ip
 801b804:	da03      	bge.n	801b80e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b806:	1410      	asrs	r0, r2, #16
 801b808:	d401      	bmi.n	801b80e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b80a:	42b8      	cmp	r0, r7
 801b80c:	db07      	blt.n	801b81e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b80e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b810:	4401      	add	r1, r0
 801b812:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b814:	3b01      	subs	r3, #1
 801b816:	4402      	add	r2, r0
 801b818:	3402      	adds	r4, #2
 801b81a:	e7ee      	b.n	801b7fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b81c:	d071      	beq.n	801b902 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b81e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b820:	1e58      	subs	r0, r3, #1
 801b822:	fb05 1500 	mla	r5, r5, r0, r1
 801b826:	142d      	asrs	r5, r5, #16
 801b828:	d45f      	bmi.n	801b8ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b82a:	4565      	cmp	r5, ip
 801b82c:	da5d      	bge.n	801b8ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b82e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b830:	fb05 2000 	mla	r0, r5, r0, r2
 801b834:	1400      	asrs	r0, r0, #16
 801b836:	d458      	bmi.n	801b8ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b838:	42b8      	cmp	r0, r7
 801b83a:	da56      	bge.n	801b8ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b83c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801b840:	4699      	mov	r9, r3
 801b842:	46a2      	mov	sl, r4
 801b844:	f1b9 0f00 	cmp.w	r9, #0
 801b848:	dd57      	ble.n	801b8fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801b84a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b84e:	9803      	ldr	r0, [sp, #12]
 801b850:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801b854:	140d      	asrs	r5, r1, #16
 801b856:	fb07 000c 	mla	r0, r7, ip, r0
 801b85a:	f109 39ff 	add.w	r9, r9, #4294967295
 801b85e:	5d40      	ldrb	r0, [r0, r5]
 801b860:	9d04      	ldr	r5, [sp, #16]
 801b862:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b866:	f8ba 5000 	ldrh.w	r5, [sl]
 801b86a:	122f      	asrs	r7, r5, #8
 801b86c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b870:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b874:	fb17 f706 	smulbb	r7, r7, r6
 801b878:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b87c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b880:	00ed      	lsls	r5, r5, #3
 801b882:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b886:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b88a:	10c7      	asrs	r7, r0, #3
 801b88c:	b2ed      	uxtb	r5, r5
 801b88e:	00c0      	lsls	r0, r0, #3
 801b890:	fb18 f806 	smulbb	r8, r8, r6
 801b894:	fb15 f506 	smulbb	r5, r5, r6
 801b898:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b89c:	b2c0      	uxtb	r0, r0
 801b89e:	fa1f fc8c 	uxth.w	ip, ip
 801b8a2:	fb07 870b 	mla	r7, r7, fp, r8
 801b8a6:	fb00 500b 	mla	r0, r0, fp, r5
 801b8aa:	b280      	uxth	r0, r0
 801b8ac:	b2bf      	uxth	r7, r7
 801b8ae:	f10c 0501 	add.w	r5, ip, #1
 801b8b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b8b6:	f107 0801 	add.w	r8, r7, #1
 801b8ba:	1c45      	adds	r5, r0, #1
 801b8bc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b8c0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b8c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b8c6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b8ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b8ce:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b8d2:	ea45 0c0c 	orr.w	ip, r5, ip
 801b8d6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b8da:	4401      	add	r1, r0
 801b8dc:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b8de:	ea4c 0c08 	orr.w	ip, ip, r8
 801b8e2:	f82a cb02 	strh.w	ip, [sl], #2
 801b8e6:	4402      	add	r2, r0
 801b8e8:	e7ac      	b.n	801b844 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b8ea:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801b8ee:	f04f 0800 	mov.w	r8, #0
 801b8f2:	eb03 0008 	add.w	r0, r3, r8
 801b8f6:	2800      	cmp	r0, #0
 801b8f8:	dc41      	bgt.n	801b97e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b8fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b902:	9b01      	ldr	r3, [sp, #4]
 801b904:	2b00      	cmp	r3, #0
 801b906:	f340 8097 	ble.w	801ba38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801b90a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b90e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b912:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b916:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b918:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b91c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b920:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b924:	eef0 6a62 	vmov.f32	s13, s5
 801b928:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b92c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b930:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b934:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801b938:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b93c:	eef0 6a43 	vmov.f32	s13, s6
 801b940:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b944:	ee12 2a90 	vmov	r2, s5
 801b948:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b94c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b950:	ee13 2a10 	vmov	r2, s6
 801b954:	9313      	str	r3, [sp, #76]	; 0x4c
 801b956:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b958:	fb92 f3f3 	sdiv	r3, r2, r3
 801b95c:	9314      	str	r3, [sp, #80]	; 0x50
 801b95e:	9b01      	ldr	r3, [sp, #4]
 801b960:	9a05      	ldr	r2, [sp, #20]
 801b962:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b966:	3b01      	subs	r3, #1
 801b968:	9301      	str	r3, [sp, #4]
 801b96a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801b96e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b970:	eeb0 3a67 	vmov.f32	s6, s15
 801b974:	bf08      	it	eq
 801b976:	4613      	moveq	r3, r2
 801b978:	eef0 2a47 	vmov.f32	s5, s14
 801b97c:	e72c      	b.n	801b7d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b97e:	140f      	asrs	r7, r1, #16
 801b980:	d453      	bmi.n	801ba2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b982:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b986:	42bd      	cmp	r5, r7
 801b988:	dd4f      	ble.n	801ba2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b98a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b98e:	d44c      	bmi.n	801ba2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b990:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b994:	4560      	cmp	r0, ip
 801b996:	dd48      	ble.n	801ba2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b998:	9803      	ldr	r0, [sp, #12]
 801b99a:	b22d      	sxth	r5, r5
 801b99c:	fb0c 0505 	mla	r5, ip, r5, r0
 801b9a0:	5de8      	ldrb	r0, [r5, r7]
 801b9a2:	9d04      	ldr	r5, [sp, #16]
 801b9a4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b9a8:	f06f 0501 	mvn.w	r5, #1
 801b9ac:	fb05 fb08 	mul.w	fp, r5, r8
 801b9b0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b9b4:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b9b8:	122f      	asrs	r7, r5, #8
 801b9ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b9be:	fb17 f706 	smulbb	r7, r7, r6
 801b9c2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b9c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b9ca:	00ed      	lsls	r5, r5, #3
 801b9cc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b9d0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b9d4:	10c7      	asrs	r7, r0, #3
 801b9d6:	b2ed      	uxtb	r5, r5
 801b9d8:	00c0      	lsls	r0, r0, #3
 801b9da:	fb19 f906 	smulbb	r9, r9, r6
 801b9de:	fb15 f506 	smulbb	r5, r5, r6
 801b9e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b9e6:	b2c0      	uxtb	r0, r0
 801b9e8:	fa1f fc8c 	uxth.w	ip, ip
 801b9ec:	fb07 970a 	mla	r7, r7, sl, r9
 801b9f0:	fb00 500a 	mla	r0, r0, sl, r5
 801b9f4:	b2bf      	uxth	r7, r7
 801b9f6:	b280      	uxth	r0, r0
 801b9f8:	f10c 0501 	add.w	r5, ip, #1
 801b9fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ba00:	f107 0901 	add.w	r9, r7, #1
 801ba04:	1c45      	adds	r5, r0, #1
 801ba06:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ba0a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ba0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ba12:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ba16:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ba1a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ba1e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ba22:	ea4c 0c09 	orr.w	ip, ip, r9
 801ba26:	f824 c00b 	strh.w	ip, [r4, fp]
 801ba2a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ba2c:	4401      	add	r1, r0
 801ba2e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ba30:	f108 38ff 	add.w	r8, r8, #4294967295
 801ba34:	4402      	add	r2, r0
 801ba36:	e75c      	b.n	801b8f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ba38:	b007      	add	sp, #28
 801ba3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ba3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba42:	b085      	sub	sp, #20
 801ba44:	4693      	mov	fp, r2
 801ba46:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ba48:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ba4a:	6870      	ldr	r0, [r6, #4]
 801ba4c:	9100      	str	r1, [sp, #0]
 801ba4e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ba52:	fb00 2404 	mla	r4, r0, r4, r2
 801ba56:	6832      	ldr	r2, [r6, #0]
 801ba58:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ba5c:	682a      	ldr	r2, [r5, #0]
 801ba5e:	9201      	str	r2, [sp, #4]
 801ba60:	686a      	ldr	r2, [r5, #4]
 801ba62:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ba66:	3204      	adds	r2, #4
 801ba68:	9202      	str	r2, [sp, #8]
 801ba6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ba6e:	9a00      	ldr	r2, [sp, #0]
 801ba70:	2a00      	cmp	r2, #0
 801ba72:	dc03      	bgt.n	801ba7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ba74:	f1bb 0f00 	cmp.w	fp, #0
 801ba78:	f340 80a0 	ble.w	801bbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ba7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba7e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ba82:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ba86:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ba8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ba8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ba90:	2b00      	cmp	r3, #0
 801ba92:	dd0c      	ble.n	801baae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ba94:	1406      	asrs	r6, r0, #16
 801ba96:	d405      	bmi.n	801baa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ba98:	454e      	cmp	r6, r9
 801ba9a:	da03      	bge.n	801baa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ba9c:	1416      	asrs	r6, r2, #16
 801ba9e:	d401      	bmi.n	801baa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801baa0:	4546      	cmp	r6, r8
 801baa2:	db05      	blt.n	801bab0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801baa4:	4470      	add	r0, lr
 801baa6:	4462      	add	r2, ip
 801baa8:	3b01      	subs	r3, #1
 801baaa:	3402      	adds	r4, #2
 801baac:	e7f0      	b.n	801ba90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801baae:	d00f      	beq.n	801bad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bab0:	1e5e      	subs	r6, r3, #1
 801bab2:	fb0e 0706 	mla	r7, lr, r6, r0
 801bab6:	143f      	asrs	r7, r7, #16
 801bab8:	d541      	bpl.n	801bb3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801baba:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801babe:	4698      	mov	r8, r3
 801bac0:	9603      	str	r6, [sp, #12]
 801bac2:	f1b8 0f00 	cmp.w	r8, #0
 801bac6:	dc59      	bgt.n	801bb7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801bac8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bacc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bad0:	9b00      	ldr	r3, [sp, #0]
 801bad2:	2b00      	cmp	r3, #0
 801bad4:	dd72      	ble.n	801bbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801bad6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bada:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bade:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bae2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bae4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bae8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801baec:	eeb0 6a62 	vmov.f32	s12, s5
 801baf0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801baf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801baf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bafc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bb00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb04:	eeb0 6a43 	vmov.f32	s12, s6
 801bb08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb0c:	ee12 2a90 	vmov	r2, s5
 801bb10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb14:	fb92 fef3 	sdiv	lr, r2, r3
 801bb18:	ee13 2a10 	vmov	r2, s6
 801bb1c:	fb92 fcf3 	sdiv	ip, r2, r3
 801bb20:	9b00      	ldr	r3, [sp, #0]
 801bb22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb26:	3b01      	subs	r3, #1
 801bb28:	9300      	str	r3, [sp, #0]
 801bb2a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bb2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bb30:	eeb0 3a67 	vmov.f32	s6, s15
 801bb34:	bf08      	it	eq
 801bb36:	465b      	moveq	r3, fp
 801bb38:	eef0 2a47 	vmov.f32	s5, s14
 801bb3c:	e797      	b.n	801ba6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bb3e:	454f      	cmp	r7, r9
 801bb40:	dabb      	bge.n	801baba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bb42:	fb0c 2606 	mla	r6, ip, r6, r2
 801bb46:	1436      	asrs	r6, r6, #16
 801bb48:	d4b7      	bmi.n	801baba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bb4a:	4546      	cmp	r6, r8
 801bb4c:	dab5      	bge.n	801baba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bb4e:	461e      	mov	r6, r3
 801bb50:	46a0      	mov	r8, r4
 801bb52:	2e00      	cmp	r6, #0
 801bb54:	ddb8      	ble.n	801bac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801bb56:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801bb5a:	9901      	ldr	r1, [sp, #4]
 801bb5c:	1417      	asrs	r7, r2, #16
 801bb5e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801bb62:	fb0a 1707 	mla	r7, sl, r7, r1
 801bb66:	9902      	ldr	r1, [sp, #8]
 801bb68:	f817 7009 	ldrb.w	r7, [r7, r9]
 801bb6c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801bb70:	f828 7b02 	strh.w	r7, [r8], #2
 801bb74:	4470      	add	r0, lr
 801bb76:	4462      	add	r2, ip
 801bb78:	3e01      	subs	r6, #1
 801bb7a:	e7ea      	b.n	801bb52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801bb7c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801bb80:	d417      	bmi.n	801bbb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bb82:	68ae      	ldr	r6, [r5, #8]
 801bb84:	454e      	cmp	r6, r9
 801bb86:	dd14      	ble.n	801bbb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bb88:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801bb8c:	d411      	bmi.n	801bbb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bb8e:	68ef      	ldr	r7, [r5, #12]
 801bb90:	4557      	cmp	r7, sl
 801bb92:	dd0e      	ble.n	801bbb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bb94:	9f01      	ldr	r7, [sp, #4]
 801bb96:	b236      	sxth	r6, r6
 801bb98:	fb0a 7606 	mla	r6, sl, r6, r7
 801bb9c:	9f02      	ldr	r7, [sp, #8]
 801bb9e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801bba2:	f06f 0101 	mvn.w	r1, #1
 801bba6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801bbaa:	fb01 f608 	mul.w	r6, r1, r8
 801bbae:	9903      	ldr	r1, [sp, #12]
 801bbb0:	538f      	strh	r7, [r1, r6]
 801bbb2:	4470      	add	r0, lr
 801bbb4:	4462      	add	r2, ip
 801bbb6:	f108 38ff 	add.w	r8, r8, #4294967295
 801bbba:	e782      	b.n	801bac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bbbc:	b005      	add	sp, #20
 801bbbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bbc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bbc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbc6:	b087      	sub	sp, #28
 801bbc8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bbca:	9205      	str	r2, [sp, #20]
 801bbcc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bbd0:	9203      	str	r2, [sp, #12]
 801bbd2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801bbd6:	9102      	str	r1, [sp, #8]
 801bbd8:	6861      	ldr	r1, [r4, #4]
 801bbda:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801bbde:	fb01 2000 	mla	r0, r1, r0, r2
 801bbe2:	6822      	ldr	r2, [r4, #0]
 801bbe4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801bbe8:	9200      	str	r2, [sp, #0]
 801bbea:	f8dc 2000 	ldr.w	r2, [ip]
 801bbee:	9204      	str	r2, [sp, #16]
 801bbf0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801bbf4:	3204      	adds	r2, #4
 801bbf6:	9201      	str	r2, [sp, #4]
 801bbf8:	9a03      	ldr	r2, [sp, #12]
 801bbfa:	43d5      	mvns	r5, r2
 801bbfc:	b2ed      	uxtb	r5, r5
 801bbfe:	9a02      	ldr	r2, [sp, #8]
 801bc00:	2a00      	cmp	r2, #0
 801bc02:	dc03      	bgt.n	801bc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bc04:	9a05      	ldr	r2, [sp, #20]
 801bc06:	2a00      	cmp	r2, #0
 801bc08:	f340 812c 	ble.w	801be64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801bc0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bc0e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801bc12:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801bc16:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bc1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bc1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bc20:	2b00      	cmp	r3, #0
 801bc22:	dd10      	ble.n	801bc46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bc24:	140c      	asrs	r4, r1, #16
 801bc26:	d405      	bmi.n	801bc34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bc28:	4574      	cmp	r4, lr
 801bc2a:	da03      	bge.n	801bc34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bc2c:	1414      	asrs	r4, r2, #16
 801bc2e:	d401      	bmi.n	801bc34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bc30:	42bc      	cmp	r4, r7
 801bc32:	db09      	blt.n	801bc48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bc34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bc36:	9800      	ldr	r0, [sp, #0]
 801bc38:	4421      	add	r1, r4
 801bc3a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bc3c:	3002      	adds	r0, #2
 801bc3e:	4422      	add	r2, r4
 801bc40:	3b01      	subs	r3, #1
 801bc42:	9000      	str	r0, [sp, #0]
 801bc44:	e7ec      	b.n	801bc20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801bc46:	d071      	beq.n	801bd2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801bc48:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bc4a:	1e5c      	subs	r4, r3, #1
 801bc4c:	fb06 1604 	mla	r6, r6, r4, r1
 801bc50:	1436      	asrs	r6, r6, #16
 801bc52:	d45d      	bmi.n	801bd10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801bc54:	4576      	cmp	r6, lr
 801bc56:	da5b      	bge.n	801bd10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801bc58:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801bc5a:	fb06 2404 	mla	r4, r6, r4, r2
 801bc5e:	1424      	asrs	r4, r4, #16
 801bc60:	d456      	bmi.n	801bd10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801bc62:	42bc      	cmp	r4, r7
 801bc64:	da54      	bge.n	801bd10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801bc66:	f8dd 9000 	ldr.w	r9, [sp]
 801bc6a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801bc6e:	4698      	mov	r8, r3
 801bc70:	f1b8 0f00 	cmp.w	r8, #0
 801bc74:	dd54      	ble.n	801bd20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801bc76:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801bc7a:	9804      	ldr	r0, [sp, #16]
 801bc7c:	1414      	asrs	r4, r2, #16
 801bc7e:	fb07 0404 	mla	r4, r7, r4, r0
 801bc82:	140e      	asrs	r6, r1, #16
 801bc84:	9801      	ldr	r0, [sp, #4]
 801bc86:	f814 e006 	ldrb.w	lr, [r4, r6]
 801bc8a:	f8b9 4000 	ldrh.w	r4, [r9]
 801bc8e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801bc92:	eb00 0b0e 	add.w	fp, r0, lr
 801bc96:	1227      	asrs	r7, r4, #8
 801bc98:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801bc9c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801bca0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801bca4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bca6:	fb16 f60a 	smulbb	r6, r6, sl
 801bcaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bcae:	fb07 6705 	mla	r7, r7, r5, r6
 801bcb2:	10e6      	asrs	r6, r4, #3
 801bcb4:	00e4      	lsls	r4, r4, #3
 801bcb6:	b2e4      	uxtb	r4, r4
 801bcb8:	fb1b fb0a 	smulbb	fp, fp, sl
 801bcbc:	fb14 f405 	smulbb	r4, r4, r5
 801bcc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bcc4:	b2bf      	uxth	r7, r7
 801bcc6:	fb06 b605 	mla	r6, r6, r5, fp
 801bcca:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801bcce:	b2b6      	uxth	r6, r6
 801bcd0:	fa1f fe8e 	uxth.w	lr, lr
 801bcd4:	1c7c      	adds	r4, r7, #1
 801bcd6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801bcda:	f106 0b01 	add.w	fp, r6, #1
 801bcde:	f10e 0401 	add.w	r4, lr, #1
 801bce2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801bce6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801bcea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bcee:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801bcf2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801bcf6:	4327      	orrs	r7, r4
 801bcf8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801bcfc:	4401      	add	r1, r0
 801bcfe:	9814      	ldr	r0, [sp, #80]	; 0x50
 801bd00:	ea47 070b 	orr.w	r7, r7, fp
 801bd04:	f829 7b02 	strh.w	r7, [r9], #2
 801bd08:	4402      	add	r2, r0
 801bd0a:	f108 38ff 	add.w	r8, r8, #4294967295
 801bd0e:	e7af      	b.n	801bc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801bd10:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801bd14:	f04f 0e00 	mov.w	lr, #0
 801bd18:	eb03 040e 	add.w	r4, r3, lr
 801bd1c:	2c00      	cmp	r4, #0
 801bd1e:	dc43      	bgt.n	801bda8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801bd20:	9a00      	ldr	r2, [sp, #0]
 801bd22:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd26:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bd2a:	9300      	str	r3, [sp, #0]
 801bd2c:	9b02      	ldr	r3, [sp, #8]
 801bd2e:	2b00      	cmp	r3, #0
 801bd30:	f340 8098 	ble.w	801be64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801bd34:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bd3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bd40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd46:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd4e:	eef0 6a62 	vmov.f32	s13, s5
 801bd52:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd5e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801bd62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd66:	eef0 6a43 	vmov.f32	s13, s6
 801bd6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd6e:	ee12 2a90 	vmov	r2, s5
 801bd72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd76:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd7a:	ee13 2a10 	vmov	r2, s6
 801bd7e:	9313      	str	r3, [sp, #76]	; 0x4c
 801bd80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd82:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd86:	9314      	str	r3, [sp, #80]	; 0x50
 801bd88:	9b02      	ldr	r3, [sp, #8]
 801bd8a:	9a05      	ldr	r2, [sp, #20]
 801bd8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd90:	3b01      	subs	r3, #1
 801bd92:	9302      	str	r3, [sp, #8]
 801bd94:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801bd98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd9a:	eeb0 3a67 	vmov.f32	s6, s15
 801bd9e:	bf08      	it	eq
 801bda0:	4613      	moveq	r3, r2
 801bda2:	eef0 2a47 	vmov.f32	s5, s14
 801bda6:	e72a      	b.n	801bbfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bda8:	140f      	asrs	r7, r1, #16
 801bdaa:	d454      	bmi.n	801be56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801bdac:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801bdb0:	42be      	cmp	r6, r7
 801bdb2:	dd50      	ble.n	801be56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801bdb4:	ea5f 4822 	movs.w	r8, r2, asr #16
 801bdb8:	d44d      	bmi.n	801be56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801bdba:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801bdbe:	4544      	cmp	r4, r8
 801bdc0:	dd49      	ble.n	801be56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801bdc2:	9c04      	ldr	r4, [sp, #16]
 801bdc4:	b236      	sxth	r6, r6
 801bdc6:	fb08 4606 	mla	r6, r8, r6, r4
 801bdca:	f06f 0001 	mvn.w	r0, #1
 801bdce:	f816 8007 	ldrb.w	r8, [r6, r7]
 801bdd2:	9c01      	ldr	r4, [sp, #4]
 801bdd4:	fb00 fa0e 	mul.w	sl, r0, lr
 801bdd8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801bddc:	9800      	ldr	r0, [sp, #0]
 801bdde:	eb04 0b08 	add.w	fp, r4, r8
 801bde2:	f830 400a 	ldrh.w	r4, [r0, sl]
 801bde6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801bdea:	9801      	ldr	r0, [sp, #4]
 801bdec:	f89b b001 	ldrb.w	fp, [fp, #1]
 801bdf0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801bdf4:	9800      	ldr	r0, [sp, #0]
 801bdf6:	1227      	asrs	r7, r4, #8
 801bdf8:	fb16 f609 	smulbb	r6, r6, r9
 801bdfc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801be00:	fb07 6705 	mla	r7, r7, r5, r6
 801be04:	10e6      	asrs	r6, r4, #3
 801be06:	00e4      	lsls	r4, r4, #3
 801be08:	b2e4      	uxtb	r4, r4
 801be0a:	fb1b fb09 	smulbb	fp, fp, r9
 801be0e:	fb14 f405 	smulbb	r4, r4, r5
 801be12:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801be16:	b2bf      	uxth	r7, r7
 801be18:	fb06 b605 	mla	r6, r6, r5, fp
 801be1c:	fb08 4809 	mla	r8, r8, r9, r4
 801be20:	b2b6      	uxth	r6, r6
 801be22:	fa1f f888 	uxth.w	r8, r8
 801be26:	1c7c      	adds	r4, r7, #1
 801be28:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801be2c:	f106 0b01 	add.w	fp, r6, #1
 801be30:	f108 0401 	add.w	r4, r8, #1
 801be34:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801be38:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801be3c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801be40:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801be44:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801be48:	4327      	orrs	r7, r4
 801be4a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801be4e:	ea47 070b 	orr.w	r7, r7, fp
 801be52:	f820 700a 	strh.w	r7, [r0, sl]
 801be56:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801be58:	4401      	add	r1, r0
 801be5a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801be5c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801be60:	4402      	add	r2, r0
 801be62:	e759      	b.n	801bd18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801be64:	b007      	add	sp, #28
 801be66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801be6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be70:	b085      	sub	sp, #20
 801be72:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801be76:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801be78:	9203      	str	r2, [sp, #12]
 801be7a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801be7e:	6870      	ldr	r0, [r6, #4]
 801be80:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801be82:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801be86:	686f      	ldr	r7, [r5, #4]
 801be88:	9101      	str	r1, [sp, #4]
 801be8a:	fb00 2404 	mla	r4, r0, r4, r2
 801be8e:	6832      	ldr	r2, [r6, #0]
 801be90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801be94:	682a      	ldr	r2, [r5, #0]
 801be96:	9202      	str	r2, [sp, #8]
 801be98:	3704      	adds	r7, #4
 801be9a:	9a01      	ldr	r2, [sp, #4]
 801be9c:	2a00      	cmp	r2, #0
 801be9e:	dc03      	bgt.n	801bea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bea0:	9a03      	ldr	r2, [sp, #12]
 801bea2:	2a00      	cmp	r2, #0
 801bea4:	f340 80cc 	ble.w	801c040 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801bea8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801beaa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801beae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801beb2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801beb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801beb8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bebc:	2b00      	cmp	r3, #0
 801bebe:	dd0d      	ble.n	801bedc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bec0:	1406      	asrs	r6, r0, #16
 801bec2:	d405      	bmi.n	801bed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801bec4:	454e      	cmp	r6, r9
 801bec6:	da03      	bge.n	801bed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801bec8:	1416      	asrs	r6, r2, #16
 801beca:	d401      	bmi.n	801bed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801becc:	4546      	cmp	r6, r8
 801bece:	db06      	blt.n	801bede <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bed0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801bed2:	4460      	add	r0, ip
 801bed4:	4432      	add	r2, r6
 801bed6:	3b01      	subs	r3, #1
 801bed8:	3402      	adds	r4, #2
 801beda:	e7ef      	b.n	801bebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801bedc:	d00f      	beq.n	801befe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bede:	1e5e      	subs	r6, r3, #1
 801bee0:	fb0c 0e06 	mla	lr, ip, r6, r0
 801bee4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801bee8:	d543      	bpl.n	801bf72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801beea:	4698      	mov	r8, r3
 801beec:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801bef0:	f1b8 0f00 	cmp.w	r8, #0
 801bef4:	dc71      	bgt.n	801bfda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801bef6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801befa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801befe:	9b01      	ldr	r3, [sp, #4]
 801bf00:	2b00      	cmp	r3, #0
 801bf02:	f340 809d 	ble.w	801c040 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801bf06:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bf12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf14:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf1c:	eeb0 6a62 	vmov.f32	s12, s5
 801bf20:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bf28:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf2c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bf30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf34:	eeb0 6a43 	vmov.f32	s12, s6
 801bf38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf3c:	ee12 2a90 	vmov	r2, s5
 801bf40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bf44:	fb92 fcf3 	sdiv	ip, r2, r3
 801bf48:	ee13 2a10 	vmov	r2, s6
 801bf4c:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf50:	9312      	str	r3, [sp, #72]	; 0x48
 801bf52:	9b01      	ldr	r3, [sp, #4]
 801bf54:	9a03      	ldr	r2, [sp, #12]
 801bf56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bf5a:	3b01      	subs	r3, #1
 801bf5c:	9301      	str	r3, [sp, #4]
 801bf5e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bf62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf64:	eeb0 3a67 	vmov.f32	s6, s15
 801bf68:	bf08      	it	eq
 801bf6a:	4613      	moveq	r3, r2
 801bf6c:	eef0 2a47 	vmov.f32	s5, s14
 801bf70:	e793      	b.n	801be9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801bf72:	45ce      	cmp	lr, r9
 801bf74:	dab9      	bge.n	801beea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bf76:	9912      	ldr	r1, [sp, #72]	; 0x48
 801bf78:	fb01 2606 	mla	r6, r1, r6, r2
 801bf7c:	1436      	asrs	r6, r6, #16
 801bf7e:	d4b4      	bmi.n	801beea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bf80:	4546      	cmp	r6, r8
 801bf82:	dab2      	bge.n	801beea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bf84:	4698      	mov	r8, r3
 801bf86:	46a2      	mov	sl, r4
 801bf88:	f1b8 0f00 	cmp.w	r8, #0
 801bf8c:	ddb3      	ble.n	801bef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801bf8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801bf92:	9902      	ldr	r1, [sp, #8]
 801bf94:	1416      	asrs	r6, r2, #16
 801bf96:	fb09 1606 	mla	r6, r9, r6, r1
 801bf9a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801bf9e:	492a      	ldr	r1, [pc, #168]	; (801c048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801bfa0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801bfa4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801bfa8:	eb07 0b0e 	add.w	fp, r7, lr
 801bfac:	4460      	add	r0, ip
 801bfae:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801bfb2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801bfb6:	00f6      	lsls	r6, r6, #3
 801bfb8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801bfbc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bfc0:	ea49 0606 	orr.w	r6, r9, r6
 801bfc4:	f817 900e 	ldrb.w	r9, [r7, lr]
 801bfc8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801bfca:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801bfce:	f82a 6b02 	strh.w	r6, [sl], #2
 801bfd2:	440a      	add	r2, r1
 801bfd4:	f108 38ff 	add.w	r8, r8, #4294967295
 801bfd8:	e7d6      	b.n	801bf88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bfda:	ea5f 4920 	movs.w	r9, r0, asr #16
 801bfde:	d429      	bmi.n	801c034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801bfe0:	68ae      	ldr	r6, [r5, #8]
 801bfe2:	454e      	cmp	r6, r9
 801bfe4:	dd26      	ble.n	801c034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801bfe6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801bfea:	d423      	bmi.n	801c034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801bfec:	68e9      	ldr	r1, [r5, #12]
 801bfee:	4559      	cmp	r1, fp
 801bff0:	dd20      	ble.n	801c034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801bff2:	9902      	ldr	r1, [sp, #8]
 801bff4:	fa0f fe86 	sxth.w	lr, r6
 801bff8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801bffc:	f06f 0101 	mvn.w	r1, #1
 801c000:	f81e e009 	ldrb.w	lr, [lr, r9]
 801c004:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c008:	eb07 060e 	add.w	r6, r7, lr
 801c00c:	fb01 f908 	mul.w	r9, r1, r8
 801c010:	f896 b002 	ldrb.w	fp, [r6, #2]
 801c014:	7876      	ldrb	r6, [r6, #1]
 801c016:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801c01a:	00f6      	lsls	r6, r6, #3
 801c01c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801c020:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c024:	ea4b 0606 	orr.w	r6, fp, r6
 801c028:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801c02c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801c030:	f82a 6009 	strh.w	r6, [sl, r9]
 801c034:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c036:	4460      	add	r0, ip
 801c038:	440a      	add	r2, r1
 801c03a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c03e:	e757      	b.n	801bef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c040:	b005      	add	sp, #20
 801c042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c046:	bf00      	nop
 801c048:	fffff800 	.word	0xfffff800

0801c04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c04c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c050:	b087      	sub	sp, #28
 801c052:	468b      	mov	fp, r1
 801c054:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c056:	9204      	str	r2, [sp, #16]
 801c058:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c05c:	9205      	str	r2, [sp, #20]
 801c05e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c062:	6841      	ldr	r1, [r0, #4]
 801c064:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801c068:	fb01 2404 	mla	r4, r1, r4, r2
 801c06c:	6802      	ldr	r2, [r0, #0]
 801c06e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c072:	f8dc 2000 	ldr.w	r2, [ip]
 801c076:	9201      	str	r2, [sp, #4]
 801c078:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801c07c:	3204      	adds	r2, #4
 801c07e:	9202      	str	r2, [sp, #8]
 801c080:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c084:	f1bb 0f00 	cmp.w	fp, #0
 801c088:	dc03      	bgt.n	801c092 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801c08a:	9a04      	ldr	r2, [sp, #16]
 801c08c:	2a00      	cmp	r2, #0
 801c08e:	f340 8138 	ble.w	801c302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801c092:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c094:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801c098:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801c09c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c0a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c0a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c0a6:	2b00      	cmp	r3, #0
 801c0a8:	dd0e      	ble.n	801c0c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c0aa:	1402      	asrs	r2, r0, #16
 801c0ac:	d405      	bmi.n	801c0ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c0ae:	42ba      	cmp	r2, r7
 801c0b0:	da03      	bge.n	801c0ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c0b2:	140a      	asrs	r2, r1, #16
 801c0b4:	d401      	bmi.n	801c0ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c0b6:	42b2      	cmp	r2, r6
 801c0b8:	db07      	blt.n	801c0ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c0ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c0bc:	4410      	add	r0, r2
 801c0be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c0c0:	3b01      	subs	r3, #1
 801c0c2:	4411      	add	r1, r2
 801c0c4:	3402      	adds	r4, #2
 801c0c6:	e7ee      	b.n	801c0a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801c0c8:	d019      	beq.n	801c0fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c0ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c0cc:	1e5a      	subs	r2, r3, #1
 801c0ce:	fb05 0502 	mla	r5, r5, r2, r0
 801c0d2:	142d      	asrs	r5, r5, #16
 801c0d4:	d409      	bmi.n	801c0ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c0d6:	42bd      	cmp	r5, r7
 801c0d8:	da07      	bge.n	801c0ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c0da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c0dc:	fb05 1202 	mla	r2, r5, r2, r1
 801c0e0:	1412      	asrs	r2, r2, #16
 801c0e2:	d402      	bmi.n	801c0ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c0e4:	42b2      	cmp	r2, r6
 801c0e6:	f2c0 80ac 	blt.w	801c242 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801c0ea:	f04f 0e00 	mov.w	lr, #0
 801c0ee:	eb03 020e 	add.w	r2, r3, lr
 801c0f2:	2a00      	cmp	r2, #0
 801c0f4:	dc3e      	bgt.n	801c174 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c0f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c0fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c0fe:	f1bb 0f00 	cmp.w	fp, #0
 801c102:	f340 80fe 	ble.w	801c302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801c106:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c10a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c10e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c112:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c114:	f1bb 0b01 	subs.w	fp, fp, #1
 801c118:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c11c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c120:	eeb0 6a62 	vmov.f32	s12, s5
 801c124:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c128:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c12c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c130:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c134:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c138:	eeb0 6a43 	vmov.f32	s12, s6
 801c13c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c140:	ee12 2a90 	vmov	r2, s5
 801c144:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c148:	fb92 f3f3 	sdiv	r3, r2, r3
 801c14c:	ee13 2a10 	vmov	r2, s6
 801c150:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c154:	9313      	str	r3, [sp, #76]	; 0x4c
 801c156:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c158:	fb92 f3f3 	sdiv	r3, r2, r3
 801c15c:	9a04      	ldr	r2, [sp, #16]
 801c15e:	9314      	str	r3, [sp, #80]	; 0x50
 801c160:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c164:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c166:	eeb0 3a67 	vmov.f32	s6, s15
 801c16a:	bf08      	it	eq
 801c16c:	4613      	moveq	r3, r2
 801c16e:	eef0 2a47 	vmov.f32	s5, s14
 801c172:	e787      	b.n	801c084 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c174:	1406      	asrs	r6, r0, #16
 801c176:	d45d      	bmi.n	801c234 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c178:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801c17c:	42b5      	cmp	r5, r6
 801c17e:	dd59      	ble.n	801c234 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c180:	140f      	asrs	r7, r1, #16
 801c182:	d457      	bmi.n	801c234 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c184:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801c188:	42ba      	cmp	r2, r7
 801c18a:	dd53      	ble.n	801c234 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c18c:	9a01      	ldr	r2, [sp, #4]
 801c18e:	b22d      	sxth	r5, r5
 801c190:	fb07 2505 	mla	r5, r7, r5, r2
 801c194:	5daa      	ldrb	r2, [r5, r6]
 801c196:	9d02      	ldr	r5, [sp, #8]
 801c198:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801c19c:	0e2e      	lsrs	r6, r5, #24
 801c19e:	d049      	beq.n	801c234 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c1a0:	f06f 0201 	mvn.w	r2, #1
 801c1a4:	fb02 f20e 	mul.w	r2, r2, lr
 801c1a8:	9203      	str	r2, [sp, #12]
 801c1aa:	f834 8002 	ldrh.w	r8, [r4, r2]
 801c1ae:	9a05      	ldr	r2, [sp, #20]
 801c1b0:	4356      	muls	r6, r2
 801c1b2:	1c72      	adds	r2, r6, #1
 801c1b4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801c1b8:	1212      	asrs	r2, r2, #8
 801c1ba:	fa1f f982 	uxth.w	r9, r2
 801c1be:	ea4f 2728 	mov.w	r7, r8, asr #8
 801c1c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c1c6:	43d2      	mvns	r2, r2
 801c1c8:	b2d2      	uxtb	r2, r2
 801c1ca:	fb16 f609 	smulbb	r6, r6, r9
 801c1ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c1d2:	fb07 6702 	mla	r7, r7, r2, r6
 801c1d6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c1da:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801c1de:	b2ed      	uxtb	r5, r5
 801c1e0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c1e4:	fa5f f888 	uxtb.w	r8, r8
 801c1e8:	fb15 f509 	smulbb	r5, r5, r9
 801c1ec:	fb08 5502 	mla	r5, r8, r2, r5
 801c1f0:	b2bf      	uxth	r7, r7
 801c1f2:	fb1a fa09 	smulbb	sl, sl, r9
 801c1f6:	b2ad      	uxth	r5, r5
 801c1f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c1fc:	fb06 a602 	mla	r6, r6, r2, sl
 801c200:	1c7a      	adds	r2, r7, #1
 801c202:	f105 0a01 	add.w	sl, r5, #1
 801c206:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c20a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c20e:	b2b6      	uxth	r6, r6
 801c210:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c214:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c218:	ea4a 0707 	orr.w	r7, sl, r7
 801c21c:	f106 0a01 	add.w	sl, r6, #1
 801c220:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c224:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c228:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c22c:	9a03      	ldr	r2, [sp, #12]
 801c22e:	ea47 070a 	orr.w	r7, r7, sl
 801c232:	52a7      	strh	r7, [r4, r2]
 801c234:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c236:	4410      	add	r0, r2
 801c238:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c23a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801c23e:	4411      	add	r1, r2
 801c240:	e755      	b.n	801c0ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c242:	f04f 0800 	mov.w	r8, #0
 801c246:	eba3 0208 	sub.w	r2, r3, r8
 801c24a:	2a00      	cmp	r2, #0
 801c24c:	f77f af53 	ble.w	801c0f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c250:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801c254:	9f01      	ldr	r7, [sp, #4]
 801c256:	140a      	asrs	r2, r1, #16
 801c258:	1405      	asrs	r5, r0, #16
 801c25a:	fb06 7202 	mla	r2, r6, r2, r7
 801c25e:	5d52      	ldrb	r2, [r2, r5]
 801c260:	9d02      	ldr	r5, [sp, #8]
 801c262:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801c266:	0e2e      	lsrs	r6, r5, #24
 801c268:	d044      	beq.n	801c2f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c26a:	9a05      	ldr	r2, [sp, #20]
 801c26c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c270:	4356      	muls	r6, r2
 801c272:	1c72      	adds	r2, r6, #1
 801c274:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801c278:	1212      	asrs	r2, r2, #8
 801c27a:	fa1f f982 	uxth.w	r9, r2
 801c27e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c282:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c286:	43d2      	mvns	r2, r2
 801c288:	b2d2      	uxtb	r2, r2
 801c28a:	fb16 f609 	smulbb	r6, r6, r9
 801c28e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c292:	fb07 6702 	mla	r7, r7, r2, r6
 801c296:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c29a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c29e:	b2ed      	uxtb	r5, r5
 801c2a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c2a4:	fa5f fe8e 	uxtb.w	lr, lr
 801c2a8:	fb15 f509 	smulbb	r5, r5, r9
 801c2ac:	fb0e 5502 	mla	r5, lr, r2, r5
 801c2b0:	b2bf      	uxth	r7, r7
 801c2b2:	fb1a fa09 	smulbb	sl, sl, r9
 801c2b6:	b2ad      	uxth	r5, r5
 801c2b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c2bc:	fb06 a602 	mla	r6, r6, r2, sl
 801c2c0:	1c7a      	adds	r2, r7, #1
 801c2c2:	f105 0a01 	add.w	sl, r5, #1
 801c2c6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c2ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c2ce:	b2b6      	uxth	r6, r6
 801c2d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c2d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c2d8:	ea4a 0707 	orr.w	r7, sl, r7
 801c2dc:	f106 0a01 	add.w	sl, r6, #1
 801c2e0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c2e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c2e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c2ec:	ea47 070a 	orr.w	r7, r7, sl
 801c2f0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801c2f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c2f6:	4410      	add	r0, r2
 801c2f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c2fa:	f108 0801 	add.w	r8, r8, #1
 801c2fe:	4411      	add	r1, r2
 801c300:	e7a1      	b.n	801c246 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801c302:	b007      	add	sp, #28
 801c304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c308 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c30c:	b085      	sub	sp, #20
 801c30e:	468b      	mov	fp, r1
 801c310:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c312:	9203      	str	r2, [sp, #12]
 801c314:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c318:	6841      	ldr	r1, [r0, #4]
 801c31a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801c31e:	fb01 2404 	mla	r4, r1, r4, r2
 801c322:	6802      	ldr	r2, [r0, #0]
 801c324:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c328:	f8de 2000 	ldr.w	r2, [lr]
 801c32c:	9200      	str	r2, [sp, #0]
 801c32e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c332:	3204      	adds	r2, #4
 801c334:	9201      	str	r2, [sp, #4]
 801c336:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c33a:	f1bb 0f00 	cmp.w	fp, #0
 801c33e:	dc03      	bgt.n	801c348 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c340:	9a03      	ldr	r2, [sp, #12]
 801c342:	2a00      	cmp	r2, #0
 801c344:	f340 8153 	ble.w	801c5ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801c348:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c34a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c34e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801c352:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c356:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c358:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c35c:	2b00      	cmp	r3, #0
 801c35e:	dd0e      	ble.n	801c37e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c360:	1408      	asrs	r0, r1, #16
 801c362:	d405      	bmi.n	801c370 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c364:	42b8      	cmp	r0, r7
 801c366:	da03      	bge.n	801c370 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c368:	1410      	asrs	r0, r2, #16
 801c36a:	d401      	bmi.n	801c370 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c36c:	42b0      	cmp	r0, r6
 801c36e:	db07      	blt.n	801c380 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c370:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c372:	4401      	add	r1, r0
 801c374:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c376:	3b01      	subs	r3, #1
 801c378:	4402      	add	r2, r0
 801c37a:	3402      	adds	r4, #2
 801c37c:	e7ee      	b.n	801c35c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801c37e:	d017      	beq.n	801c3b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c380:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c382:	1e58      	subs	r0, r3, #1
 801c384:	fb05 1500 	mla	r5, r5, r0, r1
 801c388:	142d      	asrs	r5, r5, #16
 801c38a:	d409      	bmi.n	801c3a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c38c:	42bd      	cmp	r5, r7
 801c38e:	da07      	bge.n	801c3a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c390:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c392:	fb05 2000 	mla	r0, r5, r0, r2
 801c396:	1400      	asrs	r0, r0, #16
 801c398:	d402      	bmi.n	801c3a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c39a:	42b0      	cmp	r0, r6
 801c39c:	f2c0 80bc 	blt.w	801c518 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801c3a0:	2600      	movs	r6, #0
 801c3a2:	1998      	adds	r0, r3, r6
 801c3a4:	2800      	cmp	r0, #0
 801c3a6:	dc3e      	bgt.n	801c426 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801c3a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c3ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c3b0:	f1bb 0f00 	cmp.w	fp, #0
 801c3b4:	f340 811b 	ble.w	801c5ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801c3b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c3bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c3c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c3c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c3c6:	f1bb 0b01 	subs.w	fp, fp, #1
 801c3ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c3ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c3d2:	eeb0 6a62 	vmov.f32	s12, s5
 801c3d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c3da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c3de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c3e2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c3e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c3ea:	eeb0 6a43 	vmov.f32	s12, s6
 801c3ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c3f2:	ee12 2a90 	vmov	r2, s5
 801c3f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c3fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3fe:	ee13 2a10 	vmov	r2, s6
 801c402:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c406:	9311      	str	r3, [sp, #68]	; 0x44
 801c408:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c40a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c40e:	9a03      	ldr	r2, [sp, #12]
 801c410:	9312      	str	r3, [sp, #72]	; 0x48
 801c412:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c416:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c418:	eeb0 3a67 	vmov.f32	s6, s15
 801c41c:	bf08      	it	eq
 801c41e:	4613      	moveq	r3, r2
 801c420:	eef0 2a47 	vmov.f32	s5, s14
 801c424:	e789      	b.n	801c33a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c426:	140f      	asrs	r7, r1, #16
 801c428:	d426      	bmi.n	801c478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c42a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c42e:	42bd      	cmp	r5, r7
 801c430:	dd22      	ble.n	801c478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c432:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c436:	d41f      	bmi.n	801c478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c438:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c43c:	4560      	cmp	r0, ip
 801c43e:	dd1b      	ble.n	801c478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c440:	9800      	ldr	r0, [sp, #0]
 801c442:	b22d      	sxth	r5, r5
 801c444:	fb0c 0505 	mla	r5, ip, r5, r0
 801c448:	5de8      	ldrb	r0, [r5, r7]
 801c44a:	9d01      	ldr	r5, [sp, #4]
 801c44c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801c450:	0e07      	lsrs	r7, r0, #24
 801c452:	2fff      	cmp	r7, #255	; 0xff
 801c454:	d116      	bne.n	801c484 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c456:	f06f 0501 	mvn.w	r5, #1
 801c45a:	fb05 f706 	mul.w	r7, r5, r6
 801c45e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c462:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c466:	0945      	lsrs	r5, r0, #5
 801c468:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c46c:	ea4c 0505 	orr.w	r5, ip, r5
 801c470:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c474:	4305      	orrs	r5, r0
 801c476:	53e5      	strh	r5, [r4, r7]
 801c478:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c47a:	4401      	add	r1, r0
 801c47c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c47e:	3e01      	subs	r6, #1
 801c480:	4402      	add	r2, r0
 801c482:	e78e      	b.n	801c3a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c484:	b2fd      	uxtb	r5, r7
 801c486:	2f00      	cmp	r7, #0
 801c488:	d0f6      	beq.n	801c478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c48a:	f06f 0701 	mvn.w	r7, #1
 801c48e:	4377      	muls	r7, r6
 801c490:	fa1f f985 	uxth.w	r9, r5
 801c494:	f834 8007 	ldrh.w	r8, [r4, r7]
 801c498:	9702      	str	r7, [sp, #8]
 801c49a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801c49e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c4a2:	43ed      	mvns	r5, r5
 801c4a4:	b2ed      	uxtb	r5, r5
 801c4a6:	fb17 f709 	smulbb	r7, r7, r9
 801c4aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c4ae:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c4b2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c4b6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801c4ba:	b2c0      	uxtb	r0, r0
 801c4bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c4c0:	fa5f f888 	uxtb.w	r8, r8
 801c4c4:	fb10 f009 	smulbb	r0, r0, r9
 801c4c8:	fb08 0005 	mla	r0, r8, r5, r0
 801c4cc:	b280      	uxth	r0, r0
 801c4ce:	fa1f fc8c 	uxth.w	ip, ip
 801c4d2:	fb1a fa09 	smulbb	sl, sl, r9
 801c4d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c4da:	fb07 a705 	mla	r7, r7, r5, sl
 801c4de:	f100 0a01 	add.w	sl, r0, #1
 801c4e2:	f10c 0501 	add.w	r5, ip, #1
 801c4e6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c4ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c4ee:	b2bf      	uxth	r7, r7
 801c4f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c4f4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c4f8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c4fc:	f107 0a01 	add.w	sl, r7, #1
 801c500:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c504:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c508:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c50c:	9802      	ldr	r0, [sp, #8]
 801c50e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c512:	f824 c000 	strh.w	ip, [r4, r0]
 801c516:	e7af      	b.n	801c478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c518:	f04f 0800 	mov.w	r8, #0
 801c51c:	eba3 0008 	sub.w	r0, r3, r8
 801c520:	2800      	cmp	r0, #0
 801c522:	f77f af41 	ble.w	801c3a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c526:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801c52a:	9f00      	ldr	r7, [sp, #0]
 801c52c:	1410      	asrs	r0, r2, #16
 801c52e:	140d      	asrs	r5, r1, #16
 801c530:	fb06 7000 	mla	r0, r6, r0, r7
 801c534:	5d40      	ldrb	r0, [r0, r5]
 801c536:	9d01      	ldr	r5, [sp, #4]
 801c538:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c53c:	0e2e      	lsrs	r6, r5, #24
 801c53e:	2eff      	cmp	r6, #255	; 0xff
 801c540:	d112      	bne.n	801c568 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801c542:	482c      	ldr	r0, [pc, #176]	; (801c5f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801c544:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c548:	0968      	lsrs	r0, r5, #5
 801c54a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c54e:	4330      	orrs	r0, r6
 801c550:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c554:	4328      	orrs	r0, r5
 801c556:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801c55a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c55c:	4401      	add	r1, r0
 801c55e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c560:	f108 0801 	add.w	r8, r8, #1
 801c564:	4402      	add	r2, r0
 801c566:	e7d9      	b.n	801c51c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c568:	b2f0      	uxtb	r0, r6
 801c56a:	2e00      	cmp	r6, #0
 801c56c:	d0f5      	beq.n	801c55a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c56e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801c572:	fa1f f980 	uxth.w	r9, r0
 801c576:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c57a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c57e:	43c0      	mvns	r0, r0
 801c580:	b2c0      	uxtb	r0, r0
 801c582:	fb16 f609 	smulbb	r6, r6, r9
 801c586:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c58a:	fb07 6700 	mla	r7, r7, r0, r6
 801c58e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c592:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c596:	b2ed      	uxtb	r5, r5
 801c598:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c59c:	fa5f fc8c 	uxtb.w	ip, ip
 801c5a0:	fb15 f509 	smulbb	r5, r5, r9
 801c5a4:	fb0c 5500 	mla	r5, ip, r0, r5
 801c5a8:	b2bf      	uxth	r7, r7
 801c5aa:	fb1a fa09 	smulbb	sl, sl, r9
 801c5ae:	b2ad      	uxth	r5, r5
 801c5b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c5b4:	fb06 a600 	mla	r6, r6, r0, sl
 801c5b8:	1c78      	adds	r0, r7, #1
 801c5ba:	f105 0a01 	add.w	sl, r5, #1
 801c5be:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c5c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c5c6:	b2b6      	uxth	r6, r6
 801c5c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c5cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c5d0:	ea4a 0707 	orr.w	r7, sl, r7
 801c5d4:	f106 0a01 	add.w	sl, r6, #1
 801c5d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c5dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c5e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c5e4:	ea47 070a 	orr.w	r7, r7, sl
 801c5e8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801c5ec:	e7b5      	b.n	801c55a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c5ee:	b005      	add	sp, #20
 801c5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5f4:	fffff800 	.word	0xfffff800

0801c5f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c5f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c5fc:	b087      	sub	sp, #28
 801c5fe:	468b      	mov	fp, r1
 801c600:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c602:	9204      	str	r2, [sp, #16]
 801c604:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c608:	9205      	str	r2, [sp, #20]
 801c60a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801c60e:	6861      	ldr	r1, [r4, #4]
 801c610:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c614:	fb01 2000 	mla	r0, r1, r0, r2
 801c618:	6822      	ldr	r2, [r4, #0]
 801c61a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801c61e:	f8de 2000 	ldr.w	r2, [lr]
 801c622:	9201      	str	r2, [sp, #4]
 801c624:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c628:	9202      	str	r2, [sp, #8]
 801c62a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c62e:	f1bb 0f00 	cmp.w	fp, #0
 801c632:	dc03      	bgt.n	801c63c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801c634:	9a04      	ldr	r2, [sp, #16]
 801c636:	2a00      	cmp	r2, #0
 801c638:	f340 8142 	ble.w	801c8c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801c63c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c63e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c642:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801c646:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c64a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c64c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c650:	2b00      	cmp	r3, #0
 801c652:	dd0e      	ble.n	801c672 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c654:	140c      	asrs	r4, r1, #16
 801c656:	d405      	bmi.n	801c664 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c658:	42bc      	cmp	r4, r7
 801c65a:	da03      	bge.n	801c664 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c65c:	1414      	asrs	r4, r2, #16
 801c65e:	d401      	bmi.n	801c664 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c660:	42b4      	cmp	r4, r6
 801c662:	db07      	blt.n	801c674 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c664:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c666:	4421      	add	r1, r4
 801c668:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c66a:	3b01      	subs	r3, #1
 801c66c:	4422      	add	r2, r4
 801c66e:	3002      	adds	r0, #2
 801c670:	e7ee      	b.n	801c650 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c672:	d019      	beq.n	801c6a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c674:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c676:	1e5c      	subs	r4, r3, #1
 801c678:	fb05 1504 	mla	r5, r5, r4, r1
 801c67c:	142d      	asrs	r5, r5, #16
 801c67e:	d409      	bmi.n	801c694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c680:	42bd      	cmp	r5, r7
 801c682:	da07      	bge.n	801c694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c684:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c686:	fb05 2404 	mla	r4, r5, r4, r2
 801c68a:	1424      	asrs	r4, r4, #16
 801c68c:	d402      	bmi.n	801c694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c68e:	42b4      	cmp	r4, r6
 801c690:	f2c0 80b1 	blt.w	801c7f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801c694:	f04f 0800 	mov.w	r8, #0
 801c698:	eb03 0408 	add.w	r4, r3, r8
 801c69c:	2c00      	cmp	r4, #0
 801c69e:	dc3e      	bgt.n	801c71e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c6a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c6a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c6a8:	f1bb 0f00 	cmp.w	fp, #0
 801c6ac:	f340 8108 	ble.w	801c8c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801c6b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c6b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c6b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c6bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c6be:	f1bb 0b01 	subs.w	fp, fp, #1
 801c6c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c6c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c6ca:	eeb0 6a62 	vmov.f32	s12, s5
 801c6ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c6d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c6d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c6da:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c6de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c6e2:	eeb0 6a43 	vmov.f32	s12, s6
 801c6e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c6ea:	ee12 2a90 	vmov	r2, s5
 801c6ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c6f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c6f6:	ee13 2a10 	vmov	r2, s6
 801c6fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c6fe:	9313      	str	r3, [sp, #76]	; 0x4c
 801c700:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c702:	fb92 f3f3 	sdiv	r3, r2, r3
 801c706:	9a04      	ldr	r2, [sp, #16]
 801c708:	9314      	str	r3, [sp, #80]	; 0x50
 801c70a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c70e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c710:	eeb0 3a67 	vmov.f32	s6, s15
 801c714:	bf08      	it	eq
 801c716:	4613      	moveq	r3, r2
 801c718:	eef0 2a47 	vmov.f32	s5, s14
 801c71c:	e787      	b.n	801c62e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801c71e:	140e      	asrs	r6, r1, #16
 801c720:	d462      	bmi.n	801c7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c722:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c726:	42b5      	cmp	r5, r6
 801c728:	dd5e      	ble.n	801c7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c72a:	1417      	asrs	r7, r2, #16
 801c72c:	d45c      	bmi.n	801c7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c72e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801c732:	42bc      	cmp	r4, r7
 801c734:	dd58      	ble.n	801c7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c736:	b22d      	sxth	r5, r5
 801c738:	fb07 6505 	mla	r5, r7, r5, r6
 801c73c:	9c02      	ldr	r4, [sp, #8]
 801c73e:	5d66      	ldrb	r6, [r4, r5]
 801c740:	2e00      	cmp	r6, #0
 801c742:	d051      	beq.n	801c7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c744:	9c01      	ldr	r4, [sp, #4]
 801c746:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801c74a:	f06f 0401 	mvn.w	r4, #1
 801c74e:	fb04 f408 	mul.w	r4, r4, r8
 801c752:	9403      	str	r4, [sp, #12]
 801c754:	5b05      	ldrh	r5, [r0, r4]
 801c756:	9c05      	ldr	r4, [sp, #20]
 801c758:	4366      	muls	r6, r4
 801c75a:	1c74      	adds	r4, r6, #1
 801c75c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801c760:	1224      	asrs	r4, r4, #8
 801c762:	b2a7      	uxth	r7, r4
 801c764:	122e      	asrs	r6, r5, #8
 801c766:	43e4      	mvns	r4, r4
 801c768:	b2e4      	uxtb	r4, r4
 801c76a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801c76e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c772:	fb16 f604 	smulbb	r6, r6, r4
 801c776:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c77a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c77e:	00ed      	lsls	r5, r5, #3
 801c780:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c784:	b2ed      	uxtb	r5, r5
 801c786:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801c78a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801c78e:	fb15 f504 	smulbb	r5, r5, r4
 801c792:	fa5f f989 	uxtb.w	r9, r9
 801c796:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c79a:	fb09 5507 	mla	r5, r9, r7, r5
 801c79e:	fb1a fa04 	smulbb	sl, sl, r4
 801c7a2:	fa1f fc8c 	uxth.w	ip, ip
 801c7a6:	b2ad      	uxth	r5, r5
 801c7a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c7ac:	fb06 a607 	mla	r6, r6, r7, sl
 801c7b0:	f10c 0401 	add.w	r4, ip, #1
 801c7b4:	f105 0a01 	add.w	sl, r5, #1
 801c7b8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801c7bc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c7c0:	b2b6      	uxth	r6, r6
 801c7c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c7c6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c7ca:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c7ce:	f106 0a01 	add.w	sl, r6, #1
 801c7d2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c7d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c7da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c7de:	9c03      	ldr	r4, [sp, #12]
 801c7e0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c7e4:	f820 c004 	strh.w	ip, [r0, r4]
 801c7e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c7ea:	4421      	add	r1, r4
 801c7ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c7ee:	f108 38ff 	add.w	r8, r8, #4294967295
 801c7f2:	4422      	add	r2, r4
 801c7f4:	e750      	b.n	801c698 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c7f6:	f04f 0900 	mov.w	r9, #0
 801c7fa:	eba3 0409 	sub.w	r4, r3, r9
 801c7fe:	2c00      	cmp	r4, #0
 801c800:	f77f af4e 	ble.w	801c6a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c804:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801c808:	140d      	asrs	r5, r1, #16
 801c80a:	1414      	asrs	r4, r2, #16
 801c80c:	fb06 5404 	mla	r4, r6, r4, r5
 801c810:	9d02      	ldr	r5, [sp, #8]
 801c812:	5d2e      	ldrb	r6, [r5, r4]
 801c814:	2e00      	cmp	r6, #0
 801c816:	d04c      	beq.n	801c8b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801c818:	9d01      	ldr	r5, [sp, #4]
 801c81a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801c81e:	9c05      	ldr	r4, [sp, #20]
 801c820:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801c824:	4366      	muls	r6, r4
 801c826:	1c74      	adds	r4, r6, #1
 801c828:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801c82c:	1224      	asrs	r4, r4, #8
 801c82e:	b2a7      	uxth	r7, r4
 801c830:	122e      	asrs	r6, r5, #8
 801c832:	43e4      	mvns	r4, r4
 801c834:	b2e4      	uxtb	r4, r4
 801c836:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801c83a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c83e:	fb16 f604 	smulbb	r6, r6, r4
 801c842:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c846:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c84a:	00ed      	lsls	r5, r5, #3
 801c84c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c850:	b2ed      	uxtb	r5, r5
 801c852:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801c856:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c85a:	fb15 f504 	smulbb	r5, r5, r4
 801c85e:	fa5f f888 	uxtb.w	r8, r8
 801c862:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c866:	fb08 5507 	mla	r5, r8, r7, r5
 801c86a:	fb1a fa04 	smulbb	sl, sl, r4
 801c86e:	fa1f fc8c 	uxth.w	ip, ip
 801c872:	b2ad      	uxth	r5, r5
 801c874:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c878:	fb06 a607 	mla	r6, r6, r7, sl
 801c87c:	f10c 0401 	add.w	r4, ip, #1
 801c880:	f105 0a01 	add.w	sl, r5, #1
 801c884:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801c888:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c88c:	b2b6      	uxth	r6, r6
 801c88e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c892:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c896:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c89a:	f106 0a01 	add.w	sl, r6, #1
 801c89e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c8a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c8a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c8aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c8ae:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801c8b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c8b4:	4421      	add	r1, r4
 801c8b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c8b8:	f109 0901 	add.w	r9, r9, #1
 801c8bc:	4422      	add	r2, r4
 801c8be:	e79c      	b.n	801c7fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801c8c0:	b007      	add	sp, #28
 801c8c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c8c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c8c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8ca:	b085      	sub	sp, #20
 801c8cc:	468b      	mov	fp, r1
 801c8ce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c8d0:	9203      	str	r2, [sp, #12]
 801c8d2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801c8d6:	6861      	ldr	r1, [r4, #4]
 801c8d8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c8dc:	fb01 2000 	mla	r0, r1, r0, r2
 801c8e0:	6822      	ldr	r2, [r4, #0]
 801c8e2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801c8e6:	f8d8 2000 	ldr.w	r2, [r8]
 801c8ea:	9200      	str	r2, [sp, #0]
 801c8ec:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801c8f0:	9201      	str	r2, [sp, #4]
 801c8f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c8f6:	f1bb 0f00 	cmp.w	fp, #0
 801c8fa:	dc03      	bgt.n	801c904 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c8fc:	9a03      	ldr	r2, [sp, #12]
 801c8fe:	2a00      	cmp	r2, #0
 801c900:	f340 8146 	ble.w	801cb90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801c904:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c906:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c90a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c90e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c912:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c914:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c918:	2b00      	cmp	r3, #0
 801c91a:	dd0e      	ble.n	801c93a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c91c:	140c      	asrs	r4, r1, #16
 801c91e:	d405      	bmi.n	801c92c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c920:	42bc      	cmp	r4, r7
 801c922:	da03      	bge.n	801c92c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c924:	1414      	asrs	r4, r2, #16
 801c926:	d401      	bmi.n	801c92c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c928:	42b4      	cmp	r4, r6
 801c92a:	db07      	blt.n	801c93c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c92c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c92e:	4421      	add	r1, r4
 801c930:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c932:	3b01      	subs	r3, #1
 801c934:	4422      	add	r2, r4
 801c936:	3002      	adds	r0, #2
 801c938:	e7ee      	b.n	801c918 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c93a:	d017      	beq.n	801c96c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c93c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c93e:	1e5c      	subs	r4, r3, #1
 801c940:	fb05 1504 	mla	r5, r5, r4, r1
 801c944:	142d      	asrs	r5, r5, #16
 801c946:	d409      	bmi.n	801c95c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c948:	42bd      	cmp	r5, r7
 801c94a:	da07      	bge.n	801c95c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c94c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c94e:	fb05 2404 	mla	r4, r5, r4, r2
 801c952:	1424      	asrs	r4, r4, #16
 801c954:	d402      	bmi.n	801c95c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c956:	42b4      	cmp	r4, r6
 801c958:	f2c0 80b3 	blt.w	801cac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801c95c:	2600      	movs	r6, #0
 801c95e:	199c      	adds	r4, r3, r6
 801c960:	2c00      	cmp	r4, #0
 801c962:	dc3e      	bgt.n	801c9e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c964:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c968:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c96c:	f1bb 0f00 	cmp.w	fp, #0
 801c970:	f340 810e 	ble.w	801cb90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801c974:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c978:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c97c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c980:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c982:	f1bb 0b01 	subs.w	fp, fp, #1
 801c986:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c98a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c98e:	eeb0 6a62 	vmov.f32	s12, s5
 801c992:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c996:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c99a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c99e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c9a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c9a6:	eeb0 6a43 	vmov.f32	s12, s6
 801c9aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c9ae:	ee12 2a90 	vmov	r2, s5
 801c9b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9ba:	ee13 2a10 	vmov	r2, s6
 801c9be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c9c2:	9311      	str	r3, [sp, #68]	; 0x44
 801c9c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c9c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9ca:	9a03      	ldr	r2, [sp, #12]
 801c9cc:	9312      	str	r3, [sp, #72]	; 0x48
 801c9ce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c9d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c9d4:	eeb0 3a67 	vmov.f32	s6, s15
 801c9d8:	bf08      	it	eq
 801c9da:	4613      	moveq	r3, r2
 801c9dc:	eef0 2a47 	vmov.f32	s5, s14
 801c9e0:	e789      	b.n	801c8f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c9e2:	140f      	asrs	r7, r1, #16
 801c9e4:	d418      	bmi.n	801ca18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c9e6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c9ea:	42bd      	cmp	r5, r7
 801c9ec:	dd14      	ble.n	801ca18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c9ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c9f2:	d411      	bmi.n	801ca18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c9f4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801c9f8:	4564      	cmp	r4, ip
 801c9fa:	dd0d      	ble.n	801ca18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c9fc:	b22d      	sxth	r5, r5
 801c9fe:	fb0c 7505 	mla	r5, ip, r5, r7
 801ca02:	9c01      	ldr	r4, [sp, #4]
 801ca04:	5d64      	ldrb	r4, [r4, r5]
 801ca06:	2cff      	cmp	r4, #255	; 0xff
 801ca08:	d10c      	bne.n	801ca24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ca0a:	9c00      	ldr	r4, [sp, #0]
 801ca0c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ca10:	f06f 0401 	mvn.w	r4, #1
 801ca14:	4374      	muls	r4, r6
 801ca16:	5305      	strh	r5, [r0, r4]
 801ca18:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ca1a:	4421      	add	r1, r4
 801ca1c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ca1e:	3e01      	subs	r6, #1
 801ca20:	4422      	add	r2, r4
 801ca22:	e79c      	b.n	801c95e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ca24:	2c00      	cmp	r4, #0
 801ca26:	d0f7      	beq.n	801ca18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ca28:	9f00      	ldr	r7, [sp, #0]
 801ca2a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ca2e:	f06f 0501 	mvn.w	r5, #1
 801ca32:	4375      	muls	r5, r6
 801ca34:	9502      	str	r5, [sp, #8]
 801ca36:	5b45      	ldrh	r5, [r0, r5]
 801ca38:	fa1f fc84 	uxth.w	ip, r4
 801ca3c:	122f      	asrs	r7, r5, #8
 801ca3e:	43e4      	mvns	r4, r4
 801ca40:	b2e4      	uxtb	r4, r4
 801ca42:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ca46:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ca4a:	fb17 f704 	smulbb	r7, r7, r4
 801ca4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ca52:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ca56:	00ed      	lsls	r5, r5, #3
 801ca58:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ca5c:	b2ed      	uxtb	r5, r5
 801ca5e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ca62:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ca66:	fb15 f504 	smulbb	r5, r5, r4
 801ca6a:	fa5f f989 	uxtb.w	r9, r9
 801ca6e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ca72:	fb09 550c 	mla	r5, r9, ip, r5
 801ca76:	fb1a fa04 	smulbb	sl, sl, r4
 801ca7a:	fa1f fe8e 	uxth.w	lr, lr
 801ca7e:	b2ad      	uxth	r5, r5
 801ca80:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ca84:	fb07 a70c 	mla	r7, r7, ip, sl
 801ca88:	f10e 0401 	add.w	r4, lr, #1
 801ca8c:	f105 0a01 	add.w	sl, r5, #1
 801ca90:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ca94:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ca98:	b2bf      	uxth	r7, r7
 801ca9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ca9e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801caa2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801caa6:	f107 0a01 	add.w	sl, r7, #1
 801caaa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801caae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cab2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cab6:	9c02      	ldr	r4, [sp, #8]
 801cab8:	ea4e 0e0a 	orr.w	lr, lr, sl
 801cabc:	f820 e004 	strh.w	lr, [r0, r4]
 801cac0:	e7aa      	b.n	801ca18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801cac2:	f04f 0900 	mov.w	r9, #0
 801cac6:	eba3 0409 	sub.w	r4, r3, r9
 801caca:	2c00      	cmp	r4, #0
 801cacc:	f77f af4a 	ble.w	801c964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801cad0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801cad4:	1414      	asrs	r4, r2, #16
 801cad6:	140d      	asrs	r5, r1, #16
 801cad8:	fb06 5504 	mla	r5, r6, r4, r5
 801cadc:	9c01      	ldr	r4, [sp, #4]
 801cade:	5d64      	ldrb	r4, [r4, r5]
 801cae0:	2cff      	cmp	r4, #255	; 0xff
 801cae2:	d10b      	bne.n	801cafc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cae4:	9c00      	ldr	r4, [sp, #0]
 801cae6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801caea:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801caee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801caf0:	4421      	add	r1, r4
 801caf2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801caf4:	f109 0901 	add.w	r9, r9, #1
 801caf8:	4422      	add	r2, r4
 801cafa:	e7e4      	b.n	801cac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cafc:	2c00      	cmp	r4, #0
 801cafe:	d0f6      	beq.n	801caee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801cb00:	9e00      	ldr	r6, [sp, #0]
 801cb02:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801cb06:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801cb0a:	b2a7      	uxth	r7, r4
 801cb0c:	122e      	asrs	r6, r5, #8
 801cb0e:	43e4      	mvns	r4, r4
 801cb10:	b2e4      	uxtb	r4, r4
 801cb12:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cb16:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cb1a:	fb16 f604 	smulbb	r6, r6, r4
 801cb1e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cb22:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cb26:	00ed      	lsls	r5, r5, #3
 801cb28:	fb0c 6c07 	mla	ip, ip, r7, r6
 801cb2c:	b2ed      	uxtb	r5, r5
 801cb2e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801cb32:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cb36:	fb15 f504 	smulbb	r5, r5, r4
 801cb3a:	fa5f fe8e 	uxtb.w	lr, lr
 801cb3e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801cb42:	fb0e 5507 	mla	r5, lr, r7, r5
 801cb46:	fb1a fa04 	smulbb	sl, sl, r4
 801cb4a:	fa1f fc8c 	uxth.w	ip, ip
 801cb4e:	b2ad      	uxth	r5, r5
 801cb50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cb54:	fb06 a607 	mla	r6, r6, r7, sl
 801cb58:	f10c 0401 	add.w	r4, ip, #1
 801cb5c:	f105 0a01 	add.w	sl, r5, #1
 801cb60:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801cb64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cb68:	b2b6      	uxth	r6, r6
 801cb6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cb6e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cb72:	ea4a 0c0c 	orr.w	ip, sl, ip
 801cb76:	f106 0a01 	add.w	sl, r6, #1
 801cb7a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cb7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cb82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cb86:	ea4c 0c0a 	orr.w	ip, ip, sl
 801cb8a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801cb8e:	e7ae      	b.n	801caee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801cb90:	b005      	add	sp, #20
 801cb92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cb96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb9a:	b085      	sub	sp, #20
 801cb9c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cb9e:	9203      	str	r2, [sp, #12]
 801cba0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801cba4:	9201      	str	r2, [sp, #4]
 801cba6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cbaa:	9100      	str	r1, [sp, #0]
 801cbac:	6841      	ldr	r1, [r0, #4]
 801cbae:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801cbb2:	fb01 2404 	mla	r4, r1, r4, r2
 801cbb6:	6802      	ldr	r2, [r0, #0]
 801cbb8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cbbc:	f8de 2000 	ldr.w	r2, [lr]
 801cbc0:	9202      	str	r2, [sp, #8]
 801cbc2:	9a01      	ldr	r2, [sp, #4]
 801cbc4:	43d6      	mvns	r6, r2
 801cbc6:	b2f6      	uxtb	r6, r6
 801cbc8:	9a00      	ldr	r2, [sp, #0]
 801cbca:	2a00      	cmp	r2, #0
 801cbcc:	dc03      	bgt.n	801cbd6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801cbce:	9a03      	ldr	r2, [sp, #12]
 801cbd0:	2a00      	cmp	r2, #0
 801cbd2:	f340 8124 	ble.w	801ce1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801cbd6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cbd8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801cbdc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801cbe0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cbe4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cbe6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cbea:	2b00      	cmp	r3, #0
 801cbec:	dd0e      	ble.n	801cc0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cbee:	1408      	asrs	r0, r1, #16
 801cbf0:	d405      	bmi.n	801cbfe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cbf2:	4560      	cmp	r0, ip
 801cbf4:	da03      	bge.n	801cbfe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cbf6:	1410      	asrs	r0, r2, #16
 801cbf8:	d401      	bmi.n	801cbfe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cbfa:	42b8      	cmp	r0, r7
 801cbfc:	db07      	blt.n	801cc0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cbfe:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cc00:	4401      	add	r1, r0
 801cc02:	9812      	ldr	r0, [sp, #72]	; 0x48
 801cc04:	3b01      	subs	r3, #1
 801cc06:	4402      	add	r2, r0
 801cc08:	3402      	adds	r4, #2
 801cc0a:	e7ee      	b.n	801cbea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801cc0c:	d06e      	beq.n	801ccec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cc0e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cc10:	1e58      	subs	r0, r3, #1
 801cc12:	fb05 1500 	mla	r5, r5, r0, r1
 801cc16:	142d      	asrs	r5, r5, #16
 801cc18:	d45c      	bmi.n	801ccd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cc1a:	4565      	cmp	r5, ip
 801cc1c:	da5a      	bge.n	801ccd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cc1e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801cc20:	fb05 2000 	mla	r0, r5, r0, r2
 801cc24:	1400      	asrs	r0, r0, #16
 801cc26:	d455      	bmi.n	801ccd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cc28:	42b8      	cmp	r0, r7
 801cc2a:	da53      	bge.n	801ccd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cc2c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801cc30:	4699      	mov	r9, r3
 801cc32:	46a2      	mov	sl, r4
 801cc34:	f1b9 0f00 	cmp.w	r9, #0
 801cc38:	dd54      	ble.n	801cce4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cc3a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801cc3e:	140d      	asrs	r5, r1, #16
 801cc40:	1410      	asrs	r0, r2, #16
 801cc42:	fb07 5000 	mla	r0, r7, r0, r5
 801cc46:	9d02      	ldr	r5, [sp, #8]
 801cc48:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801cc4c:	f8ba 5000 	ldrh.w	r5, [sl]
 801cc50:	122f      	asrs	r7, r5, #8
 801cc52:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cc56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cc5a:	fb17 f706 	smulbb	r7, r7, r6
 801cc5e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801cc62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cc66:	00ed      	lsls	r5, r5, #3
 801cc68:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801cc6c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801cc70:	10c7      	asrs	r7, r0, #3
 801cc72:	b2ed      	uxtb	r5, r5
 801cc74:	00c0      	lsls	r0, r0, #3
 801cc76:	fb18 f806 	smulbb	r8, r8, r6
 801cc7a:	fb15 f506 	smulbb	r5, r5, r6
 801cc7e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cc82:	b2c0      	uxtb	r0, r0
 801cc84:	fa1f fc8c 	uxth.w	ip, ip
 801cc88:	fb07 870b 	mla	r7, r7, fp, r8
 801cc8c:	fb00 500b 	mla	r0, r0, fp, r5
 801cc90:	b280      	uxth	r0, r0
 801cc92:	b2bf      	uxth	r7, r7
 801cc94:	f10c 0501 	add.w	r5, ip, #1
 801cc98:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801cc9c:	f107 0801 	add.w	r8, r7, #1
 801cca0:	1c45      	adds	r5, r0, #1
 801cca2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cca6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ccaa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ccac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ccb0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ccb4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ccb8:	ea45 0c0c 	orr.w	ip, r5, ip
 801ccbc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ccc0:	4401      	add	r1, r0
 801ccc2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ccc4:	ea4c 0c08 	orr.w	ip, ip, r8
 801ccc8:	f82a cb02 	strh.w	ip, [sl], #2
 801cccc:	4402      	add	r2, r0
 801ccce:	f109 39ff 	add.w	r9, r9, #4294967295
 801ccd2:	e7af      	b.n	801cc34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ccd4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801ccd8:	f04f 0800 	mov.w	r8, #0
 801ccdc:	eb03 0008 	add.w	r0, r3, r8
 801cce0:	2800      	cmp	r0, #0
 801cce2:	dc41      	bgt.n	801cd68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801cce4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cce8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ccec:	9b00      	ldr	r3, [sp, #0]
 801ccee:	2b00      	cmp	r3, #0
 801ccf0:	f340 8095 	ble.w	801ce1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ccf4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ccf8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ccfc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cd00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd06:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd0e:	eef0 6a62 	vmov.f32	s13, s5
 801cd12:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd1e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801cd22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd26:	eef0 6a43 	vmov.f32	s13, s6
 801cd2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd2e:	ee12 2a90 	vmov	r2, s5
 801cd32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd36:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd3a:	ee13 2a10 	vmov	r2, s6
 801cd3e:	9311      	str	r3, [sp, #68]	; 0x44
 801cd40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd42:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd46:	9312      	str	r3, [sp, #72]	; 0x48
 801cd48:	9b00      	ldr	r3, [sp, #0]
 801cd4a:	9a03      	ldr	r2, [sp, #12]
 801cd4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd50:	3b01      	subs	r3, #1
 801cd52:	9300      	str	r3, [sp, #0]
 801cd54:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801cd58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd5a:	eeb0 3a67 	vmov.f32	s6, s15
 801cd5e:	bf08      	it	eq
 801cd60:	4613      	moveq	r3, r2
 801cd62:	eef0 2a47 	vmov.f32	s5, s14
 801cd66:	e72f      	b.n	801cbc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801cd68:	140f      	asrs	r7, r1, #16
 801cd6a:	d451      	bmi.n	801ce10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801cd6c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801cd70:	42bd      	cmp	r5, r7
 801cd72:	dd4d      	ble.n	801ce10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801cd74:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cd78:	d44a      	bmi.n	801ce10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801cd7a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801cd7e:	4560      	cmp	r0, ip
 801cd80:	dd46      	ble.n	801ce10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801cd82:	b22d      	sxth	r5, r5
 801cd84:	fb0c 7505 	mla	r5, ip, r5, r7
 801cd88:	9802      	ldr	r0, [sp, #8]
 801cd8a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801cd8e:	f06f 0501 	mvn.w	r5, #1
 801cd92:	fb05 fb08 	mul.w	fp, r5, r8
 801cd96:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cd9a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801cd9e:	122f      	asrs	r7, r5, #8
 801cda0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cda4:	fb17 f706 	smulbb	r7, r7, r6
 801cda8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cdac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cdb0:	00ed      	lsls	r5, r5, #3
 801cdb2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801cdb6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cdba:	10c7      	asrs	r7, r0, #3
 801cdbc:	b2ed      	uxtb	r5, r5
 801cdbe:	00c0      	lsls	r0, r0, #3
 801cdc0:	fb19 f906 	smulbb	r9, r9, r6
 801cdc4:	fb15 f506 	smulbb	r5, r5, r6
 801cdc8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cdcc:	b2c0      	uxtb	r0, r0
 801cdce:	fa1f fc8c 	uxth.w	ip, ip
 801cdd2:	fb07 970a 	mla	r7, r7, sl, r9
 801cdd6:	fb00 500a 	mla	r0, r0, sl, r5
 801cdda:	b2bf      	uxth	r7, r7
 801cddc:	b280      	uxth	r0, r0
 801cdde:	f10c 0501 	add.w	r5, ip, #1
 801cde2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801cde6:	f107 0901 	add.w	r9, r7, #1
 801cdea:	1c45      	adds	r5, r0, #1
 801cdec:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cdf0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801cdf4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cdf8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cdfc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ce00:	ea45 0c0c 	orr.w	ip, r5, ip
 801ce04:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ce08:	ea4c 0c09 	orr.w	ip, ip, r9
 801ce0c:	f824 c00b 	strh.w	ip, [r4, fp]
 801ce10:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ce12:	4401      	add	r1, r0
 801ce14:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ce16:	f108 38ff 	add.w	r8, r8, #4294967295
 801ce1a:	4402      	add	r2, r0
 801ce1c:	e75e      	b.n	801ccdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801ce1e:	b005      	add	sp, #20
 801ce20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ce24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ce24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce28:	b085      	sub	sp, #20
 801ce2a:	4693      	mov	fp, r2
 801ce2c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ce2e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ce30:	6870      	ldr	r0, [r6, #4]
 801ce32:	9101      	str	r1, [sp, #4]
 801ce34:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ce38:	fb00 2404 	mla	r4, r0, r4, r2
 801ce3c:	6832      	ldr	r2, [r6, #0]
 801ce3e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ce42:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ce46:	682a      	ldr	r2, [r5, #0]
 801ce48:	9202      	str	r2, [sp, #8]
 801ce4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ce4e:	9a01      	ldr	r2, [sp, #4]
 801ce50:	2a00      	cmp	r2, #0
 801ce52:	dc03      	bgt.n	801ce5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ce54:	f1bb 0f00 	cmp.w	fp, #0
 801ce58:	f340 809a 	ble.w	801cf90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ce5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ce5e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ce62:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ce66:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ce6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ce6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ce70:	2b00      	cmp	r3, #0
 801ce72:	dd0c      	ble.n	801ce8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801ce74:	1406      	asrs	r6, r0, #16
 801ce76:	d405      	bmi.n	801ce84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ce78:	454e      	cmp	r6, r9
 801ce7a:	da03      	bge.n	801ce84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ce7c:	1416      	asrs	r6, r2, #16
 801ce7e:	d401      	bmi.n	801ce84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ce80:	4546      	cmp	r6, r8
 801ce82:	db05      	blt.n	801ce90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ce84:	4470      	add	r0, lr
 801ce86:	4462      	add	r2, ip
 801ce88:	3b01      	subs	r3, #1
 801ce8a:	3402      	adds	r4, #2
 801ce8c:	e7f0      	b.n	801ce70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ce8e:	d00f      	beq.n	801ceb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ce90:	1e5e      	subs	r6, r3, #1
 801ce92:	fb0e 0706 	mla	r7, lr, r6, r0
 801ce96:	143f      	asrs	r7, r7, #16
 801ce98:	d541      	bpl.n	801cf1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801ce9a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ce9e:	4698      	mov	r8, r3
 801cea0:	9603      	str	r6, [sp, #12]
 801cea2:	f1b8 0f00 	cmp.w	r8, #0
 801cea6:	dc56      	bgt.n	801cf56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801cea8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ceac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ceb0:	9b01      	ldr	r3, [sp, #4]
 801ceb2:	2b00      	cmp	r3, #0
 801ceb4:	dd6c      	ble.n	801cf90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ceb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ceba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cebe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cec4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cec8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cecc:	eeb0 6a62 	vmov.f32	s12, s5
 801ced0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ced4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ced8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cedc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cee0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cee4:	eeb0 6a43 	vmov.f32	s12, s6
 801cee8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ceec:	ee12 2a90 	vmov	r2, s5
 801cef0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cef4:	fb92 fef3 	sdiv	lr, r2, r3
 801cef8:	ee13 2a10 	vmov	r2, s6
 801cefc:	fb92 fcf3 	sdiv	ip, r2, r3
 801cf00:	9b01      	ldr	r3, [sp, #4]
 801cf02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf06:	3b01      	subs	r3, #1
 801cf08:	9301      	str	r3, [sp, #4]
 801cf0a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cf0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf10:	eeb0 3a67 	vmov.f32	s6, s15
 801cf14:	bf08      	it	eq
 801cf16:	465b      	moveq	r3, fp
 801cf18:	eef0 2a47 	vmov.f32	s5, s14
 801cf1c:	e797      	b.n	801ce4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801cf1e:	454f      	cmp	r7, r9
 801cf20:	dabb      	bge.n	801ce9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cf22:	fb0c 2606 	mla	r6, ip, r6, r2
 801cf26:	1436      	asrs	r6, r6, #16
 801cf28:	d4b7      	bmi.n	801ce9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cf2a:	4546      	cmp	r6, r8
 801cf2c:	dab5      	bge.n	801ce9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cf2e:	461e      	mov	r6, r3
 801cf30:	46a0      	mov	r8, r4
 801cf32:	2e00      	cmp	r6, #0
 801cf34:	ddb8      	ble.n	801cea8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf36:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801cf3a:	9902      	ldr	r1, [sp, #8]
 801cf3c:	1417      	asrs	r7, r2, #16
 801cf3e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cf42:	fb0a 9707 	mla	r7, sl, r7, r9
 801cf46:	4470      	add	r0, lr
 801cf48:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cf4c:	f828 7b02 	strh.w	r7, [r8], #2
 801cf50:	4462      	add	r2, ip
 801cf52:	3e01      	subs	r6, #1
 801cf54:	e7ed      	b.n	801cf32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801cf56:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cf5a:	d414      	bmi.n	801cf86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801cf5c:	68ae      	ldr	r6, [r5, #8]
 801cf5e:	454e      	cmp	r6, r9
 801cf60:	dd11      	ble.n	801cf86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801cf62:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cf66:	d40e      	bmi.n	801cf86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801cf68:	68ef      	ldr	r7, [r5, #12]
 801cf6a:	4557      	cmp	r7, sl
 801cf6c:	dd0b      	ble.n	801cf86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801cf6e:	b236      	sxth	r6, r6
 801cf70:	fb0a 9606 	mla	r6, sl, r6, r9
 801cf74:	9f02      	ldr	r7, [sp, #8]
 801cf76:	f06f 0101 	mvn.w	r1, #1
 801cf7a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cf7e:	fb01 f608 	mul.w	r6, r1, r8
 801cf82:	9903      	ldr	r1, [sp, #12]
 801cf84:	538f      	strh	r7, [r1, r6]
 801cf86:	4470      	add	r0, lr
 801cf88:	4462      	add	r2, ip
 801cf8a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf8e:	e788      	b.n	801cea2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cf90:	b005      	add	sp, #20
 801cf92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cf96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf9a:	b087      	sub	sp, #28
 801cf9c:	468b      	mov	fp, r1
 801cf9e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cfa0:	9203      	str	r2, [sp, #12]
 801cfa2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cfa6:	9204      	str	r2, [sp, #16]
 801cfa8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801cfac:	6841      	ldr	r1, [r0, #4]
 801cfae:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801cfb2:	fb01 2505 	mla	r5, r1, r5, r2
 801cfb6:	6802      	ldr	r2, [r0, #0]
 801cfb8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801cfbc:	f8d9 2000 	ldr.w	r2, [r9]
 801cfc0:	9201      	str	r2, [sp, #4]
 801cfc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cfc6:	f1bb 0f00 	cmp.w	fp, #0
 801cfca:	dc03      	bgt.n	801cfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cfcc:	9a03      	ldr	r2, [sp, #12]
 801cfce:	2a00      	cmp	r2, #0
 801cfd0:	f340 8159 	ble.w	801d286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801cfd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cfd6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801cfda:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801cfde:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cfe2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cfe4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cfe8:	2b00      	cmp	r3, #0
 801cfea:	dd0e      	ble.n	801d00a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801cfec:	1402      	asrs	r2, r0, #16
 801cfee:	d405      	bmi.n	801cffc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cff0:	42ba      	cmp	r2, r7
 801cff2:	da03      	bge.n	801cffc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cff4:	140a      	asrs	r2, r1, #16
 801cff6:	d401      	bmi.n	801cffc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cff8:	42b2      	cmp	r2, r6
 801cffa:	db07      	blt.n	801d00c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cffc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cffe:	4410      	add	r0, r2
 801d000:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d002:	3b01      	subs	r3, #1
 801d004:	4411      	add	r1, r2
 801d006:	3502      	adds	r5, #2
 801d008:	e7ee      	b.n	801cfe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d00a:	d017      	beq.n	801d03c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d00c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d00e:	1e5a      	subs	r2, r3, #1
 801d010:	fb04 0402 	mla	r4, r4, r2, r0
 801d014:	1424      	asrs	r4, r4, #16
 801d016:	d409      	bmi.n	801d02c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d018:	42bc      	cmp	r4, r7
 801d01a:	da07      	bge.n	801d02c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d01c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d01e:	fb04 1202 	mla	r2, r4, r2, r1
 801d022:	1412      	asrs	r2, r2, #16
 801d024:	d402      	bmi.n	801d02c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d026:	42b2      	cmp	r2, r6
 801d028:	f2c0 80bf 	blt.w	801d1aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d02c:	2700      	movs	r7, #0
 801d02e:	19da      	adds	r2, r3, r7
 801d030:	2a00      	cmp	r2, #0
 801d032:	dc3e      	bgt.n	801d0b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d034:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d038:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d03c:	f1bb 0f00 	cmp.w	fp, #0
 801d040:	f340 8121 	ble.w	801d286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d044:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d048:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d04c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d050:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d052:	f1bb 0b01 	subs.w	fp, fp, #1
 801d056:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d05a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d05e:	eeb0 6a62 	vmov.f32	s12, s5
 801d062:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d066:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d06a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d06e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d072:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d076:	eeb0 6a43 	vmov.f32	s12, s6
 801d07a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d07e:	ee12 2a90 	vmov	r2, s5
 801d082:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d086:	fb92 f3f3 	sdiv	r3, r2, r3
 801d08a:	ee13 2a10 	vmov	r2, s6
 801d08e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d092:	9313      	str	r3, [sp, #76]	; 0x4c
 801d094:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d096:	fb92 f3f3 	sdiv	r3, r2, r3
 801d09a:	9a03      	ldr	r2, [sp, #12]
 801d09c:	9314      	str	r3, [sp, #80]	; 0x50
 801d09e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d0a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d0a4:	eeb0 3a67 	vmov.f32	s6, s15
 801d0a8:	bf08      	it	eq
 801d0aa:	4613      	moveq	r3, r2
 801d0ac:	eef0 2a47 	vmov.f32	s5, s14
 801d0b0:	e789      	b.n	801cfc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d0b2:	1406      	asrs	r6, r0, #16
 801d0b4:	d42d      	bmi.n	801d112 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d0b6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801d0ba:	42b4      	cmp	r4, r6
 801d0bc:	dd29      	ble.n	801d112 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d0be:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801d0c2:	d426      	bmi.n	801d112 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d0c4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801d0c8:	4562      	cmp	r2, ip
 801d0ca:	dd22      	ble.n	801d112 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d0cc:	b224      	sxth	r4, r4
 801d0ce:	9a01      	ldr	r2, [sp, #4]
 801d0d0:	fb0c 6404 	mla	r4, ip, r4, r6
 801d0d4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801d0d8:	0e22      	lsrs	r2, r4, #24
 801d0da:	d01a      	beq.n	801d112 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d0dc:	9e04      	ldr	r6, [sp, #16]
 801d0de:	4372      	muls	r2, r6
 801d0e0:	1c56      	adds	r6, r2, #1
 801d0e2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801d0e6:	1212      	asrs	r2, r2, #8
 801d0e8:	0a26      	lsrs	r6, r4, #8
 801d0ea:	2aff      	cmp	r2, #255	; 0xff
 801d0ec:	9605      	str	r6, [sp, #20]
 801d0ee:	d116      	bne.n	801d11e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801d0f0:	f06f 0201 	mvn.w	r2, #1
 801d0f4:	fb02 fc07 	mul.w	ip, r2, r7
 801d0f8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d0fc:	0962      	lsrs	r2, r4, #5
 801d0fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d102:	f026 0607 	bic.w	r6, r6, #7
 801d106:	4316      	orrs	r6, r2
 801d108:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d10c:	4326      	orrs	r6, r4
 801d10e:	f825 600c 	strh.w	r6, [r5, ip]
 801d112:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d114:	4410      	add	r0, r2
 801d116:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d118:	3f01      	subs	r7, #1
 801d11a:	4411      	add	r1, r2
 801d11c:	e787      	b.n	801d02e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d11e:	f06f 0601 	mvn.w	r6, #1
 801d122:	437e      	muls	r6, r7
 801d124:	fa1f fa82 	uxth.w	sl, r2
 801d128:	f835 8006 	ldrh.w	r8, [r5, r6]
 801d12c:	9602      	str	r6, [sp, #8]
 801d12e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801d132:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801d136:	43d2      	mvns	r2, r2
 801d138:	b2d2      	uxtb	r2, r2
 801d13a:	fb1c fc0a 	smulbb	ip, ip, sl
 801d13e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d142:	fb0e ce02 	mla	lr, lr, r2, ip
 801d146:	b2e4      	uxtb	r4, r4
 801d148:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801d14c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d150:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801d154:	fa5f f888 	uxtb.w	r8, r8
 801d158:	fb14 f40a 	smulbb	r4, r4, sl
 801d15c:	fb08 4402 	mla	r4, r8, r2, r4
 801d160:	fa1f fe8e 	uxth.w	lr, lr
 801d164:	fb16 f60a 	smulbb	r6, r6, sl
 801d168:	b2a4      	uxth	r4, r4
 801d16a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d16e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801d172:	f10e 0201 	add.w	r2, lr, #1
 801d176:	1c66      	adds	r6, r4, #1
 801d178:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801d17c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801d180:	fa1f fc8c 	uxth.w	ip, ip
 801d184:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d188:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801d18c:	ea46 0e0e 	orr.w	lr, r6, lr
 801d190:	f10c 0601 	add.w	r6, ip, #1
 801d194:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801d198:	0976      	lsrs	r6, r6, #5
 801d19a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d19e:	9a02      	ldr	r2, [sp, #8]
 801d1a0:	ea4e 0e06 	orr.w	lr, lr, r6
 801d1a4:	f825 e002 	strh.w	lr, [r5, r2]
 801d1a8:	e7b3      	b.n	801d112 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d1aa:	f04f 0800 	mov.w	r8, #0
 801d1ae:	eba3 0208 	sub.w	r2, r3, r8
 801d1b2:	2a00      	cmp	r2, #0
 801d1b4:	f77f af3e 	ble.w	801d034 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d1b8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801d1bc:	1404      	asrs	r4, r0, #16
 801d1be:	140a      	asrs	r2, r1, #16
 801d1c0:	fb06 4202 	mla	r2, r6, r2, r4
 801d1c4:	9c01      	ldr	r4, [sp, #4]
 801d1c6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801d1ca:	0e22      	lsrs	r2, r4, #24
 801d1cc:	d016      	beq.n	801d1fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801d1ce:	9e04      	ldr	r6, [sp, #16]
 801d1d0:	4372      	muls	r2, r6
 801d1d2:	1c56      	adds	r6, r2, #1
 801d1d4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801d1d8:	1212      	asrs	r2, r2, #8
 801d1da:	2aff      	cmp	r2, #255	; 0xff
 801d1dc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801d1e0:	d113      	bne.n	801d20a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801d1e2:	0962      	lsrs	r2, r4, #5
 801d1e4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d1e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d1ec:	f026 0607 	bic.w	r6, r6, #7
 801d1f0:	4316      	orrs	r6, r2
 801d1f2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d1f6:	4326      	orrs	r6, r4
 801d1f8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801d1fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d1fe:	4410      	add	r0, r2
 801d200:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d202:	f108 0801 	add.w	r8, r8, #1
 801d206:	4411      	add	r1, r2
 801d208:	e7d1      	b.n	801d1ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801d20a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801d20e:	fa1f fa82 	uxth.w	sl, r2
 801d212:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d216:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801d21a:	43d2      	mvns	r2, r2
 801d21c:	b2d2      	uxtb	r2, r2
 801d21e:	fb17 f70a 	smulbb	r7, r7, sl
 801d222:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d226:	fb0c 7c02 	mla	ip, ip, r2, r7
 801d22a:	b2e4      	uxtb	r4, r4
 801d22c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801d230:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d234:	fa5f fe8e 	uxtb.w	lr, lr
 801d238:	fb14 f40a 	smulbb	r4, r4, sl
 801d23c:	fb0e 4402 	mla	r4, lr, r2, r4
 801d240:	b2f6      	uxtb	r6, r6
 801d242:	fa1f fc8c 	uxth.w	ip, ip
 801d246:	fb16 f60a 	smulbb	r6, r6, sl
 801d24a:	b2a4      	uxth	r4, r4
 801d24c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d250:	fb07 6702 	mla	r7, r7, r2, r6
 801d254:	f10c 0201 	add.w	r2, ip, #1
 801d258:	1c66      	adds	r6, r4, #1
 801d25a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d25e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801d262:	b2bf      	uxth	r7, r7
 801d264:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d268:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d26c:	ea46 0c0c 	orr.w	ip, r6, ip
 801d270:	1c7e      	adds	r6, r7, #1
 801d272:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d276:	0976      	lsrs	r6, r6, #5
 801d278:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d27c:	ea4c 0c06 	orr.w	ip, ip, r6
 801d280:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801d284:	e7ba      	b.n	801d1fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801d286:	b007      	add	sp, #28
 801d288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d28c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d290:	b085      	sub	sp, #20
 801d292:	468b      	mov	fp, r1
 801d294:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d296:	9203      	str	r2, [sp, #12]
 801d298:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d29c:	6841      	ldr	r1, [r0, #4]
 801d29e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d2a2:	fb01 2404 	mla	r4, r1, r4, r2
 801d2a6:	6802      	ldr	r2, [r0, #0]
 801d2a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d2ac:	f8d8 2000 	ldr.w	r2, [r8]
 801d2b0:	9201      	str	r2, [sp, #4]
 801d2b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d2b6:	f1bb 0f00 	cmp.w	fp, #0
 801d2ba:	dc03      	bgt.n	801d2c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d2bc:	9a03      	ldr	r2, [sp, #12]
 801d2be:	2a00      	cmp	r2, #0
 801d2c0:	f340 814f 	ble.w	801d562 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801d2c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d2c6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d2ca:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d2ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d2d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d2d4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d2d8:	2b00      	cmp	r3, #0
 801d2da:	dd0e      	ble.n	801d2fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d2dc:	1408      	asrs	r0, r1, #16
 801d2de:	d405      	bmi.n	801d2ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d2e0:	42b8      	cmp	r0, r7
 801d2e2:	da03      	bge.n	801d2ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d2e4:	1410      	asrs	r0, r2, #16
 801d2e6:	d401      	bmi.n	801d2ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d2e8:	42b0      	cmp	r0, r6
 801d2ea:	db07      	blt.n	801d2fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d2ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d2ee:	4401      	add	r1, r0
 801d2f0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d2f2:	3b01      	subs	r3, #1
 801d2f4:	4402      	add	r2, r0
 801d2f6:	3402      	adds	r4, #2
 801d2f8:	e7ee      	b.n	801d2d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d2fa:	d017      	beq.n	801d32c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d2fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d2fe:	1e58      	subs	r0, r3, #1
 801d300:	fb05 1500 	mla	r5, r5, r0, r1
 801d304:	142d      	asrs	r5, r5, #16
 801d306:	d409      	bmi.n	801d31c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d308:	42bd      	cmp	r5, r7
 801d30a:	da07      	bge.n	801d31c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d30c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d30e:	fb05 2000 	mla	r0, r5, r0, r2
 801d312:	1400      	asrs	r0, r0, #16
 801d314:	d402      	bmi.n	801d31c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d316:	42b0      	cmp	r0, r6
 801d318:	f2c0 80ba 	blt.w	801d490 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d31c:	2600      	movs	r6, #0
 801d31e:	1998      	adds	r0, r3, r6
 801d320:	2800      	cmp	r0, #0
 801d322:	dc3e      	bgt.n	801d3a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d324:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d328:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d32c:	f1bb 0f00 	cmp.w	fp, #0
 801d330:	f340 8117 	ble.w	801d562 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801d334:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d338:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d33c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d340:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d342:	f1bb 0b01 	subs.w	fp, fp, #1
 801d346:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d34a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d34e:	eeb0 6a62 	vmov.f32	s12, s5
 801d352:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d356:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d35a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d35e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d362:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d366:	eeb0 6a43 	vmov.f32	s12, s6
 801d36a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d36e:	ee12 2a90 	vmov	r2, s5
 801d372:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d376:	fb92 f3f3 	sdiv	r3, r2, r3
 801d37a:	ee13 2a10 	vmov	r2, s6
 801d37e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d382:	9311      	str	r3, [sp, #68]	; 0x44
 801d384:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d386:	fb92 f3f3 	sdiv	r3, r2, r3
 801d38a:	9a03      	ldr	r2, [sp, #12]
 801d38c:	9312      	str	r3, [sp, #72]	; 0x48
 801d38e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d392:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d394:	eeb0 3a67 	vmov.f32	s6, s15
 801d398:	bf08      	it	eq
 801d39a:	4613      	moveq	r3, r2
 801d39c:	eef0 2a47 	vmov.f32	s5, s14
 801d3a0:	e789      	b.n	801d2b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d3a2:	140f      	asrs	r7, r1, #16
 801d3a4:	d424      	bmi.n	801d3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d3a6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801d3aa:	42bd      	cmp	r5, r7
 801d3ac:	dd20      	ble.n	801d3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d3ae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d3b2:	d41d      	bmi.n	801d3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d3b4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801d3b8:	4560      	cmp	r0, ip
 801d3ba:	dd19      	ble.n	801d3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d3bc:	b22d      	sxth	r5, r5
 801d3be:	fb0c 7505 	mla	r5, ip, r5, r7
 801d3c2:	9801      	ldr	r0, [sp, #4]
 801d3c4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801d3c8:	0e07      	lsrs	r7, r0, #24
 801d3ca:	2fff      	cmp	r7, #255	; 0xff
 801d3cc:	d116      	bne.n	801d3fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3ce:	f06f 0501 	mvn.w	r5, #1
 801d3d2:	fb05 f706 	mul.w	r7, r5, r6
 801d3d6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d3da:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d3de:	0945      	lsrs	r5, r0, #5
 801d3e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3e4:	ea4c 0505 	orr.w	r5, ip, r5
 801d3e8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d3ec:	4305      	orrs	r5, r0
 801d3ee:	53e5      	strh	r5, [r4, r7]
 801d3f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d3f2:	4401      	add	r1, r0
 801d3f4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d3f6:	3e01      	subs	r6, #1
 801d3f8:	4402      	add	r2, r0
 801d3fa:	e790      	b.n	801d31e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d3fc:	b2fd      	uxtb	r5, r7
 801d3fe:	2f00      	cmp	r7, #0
 801d400:	d0f6      	beq.n	801d3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d402:	f06f 0701 	mvn.w	r7, #1
 801d406:	4377      	muls	r7, r6
 801d408:	fa1f f985 	uxth.w	r9, r5
 801d40c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801d410:	9702      	str	r7, [sp, #8]
 801d412:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d416:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d41a:	43ed      	mvns	r5, r5
 801d41c:	b2ed      	uxtb	r5, r5
 801d41e:	fb17 f709 	smulbb	r7, r7, r9
 801d422:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d426:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d42a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d42e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801d432:	b2c0      	uxtb	r0, r0
 801d434:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d438:	fa5f fe8e 	uxtb.w	lr, lr
 801d43c:	fb10 f009 	smulbb	r0, r0, r9
 801d440:	fb0e 0005 	mla	r0, lr, r5, r0
 801d444:	b280      	uxth	r0, r0
 801d446:	fa1f fc8c 	uxth.w	ip, ip
 801d44a:	fb1a fa09 	smulbb	sl, sl, r9
 801d44e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d452:	fb07 a705 	mla	r7, r7, r5, sl
 801d456:	f100 0a01 	add.w	sl, r0, #1
 801d45a:	f10c 0501 	add.w	r5, ip, #1
 801d45e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d462:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d466:	b2bf      	uxth	r7, r7
 801d468:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d46c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d470:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d474:	f107 0a01 	add.w	sl, r7, #1
 801d478:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d47c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d480:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d484:	9802      	ldr	r0, [sp, #8]
 801d486:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d48a:	f824 c000 	strh.w	ip, [r4, r0]
 801d48e:	e7af      	b.n	801d3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d490:	f04f 0e00 	mov.w	lr, #0
 801d494:	eba3 000e 	sub.w	r0, r3, lr
 801d498:	2800      	cmp	r0, #0
 801d49a:	f77f af43 	ble.w	801d324 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d49e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801d4a2:	140d      	asrs	r5, r1, #16
 801d4a4:	1410      	asrs	r0, r2, #16
 801d4a6:	fb06 5000 	mla	r0, r6, r0, r5
 801d4aa:	9d01      	ldr	r5, [sp, #4]
 801d4ac:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d4b0:	0e2e      	lsrs	r6, r5, #24
 801d4b2:	2eff      	cmp	r6, #255	; 0xff
 801d4b4:	d112      	bne.n	801d4dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801d4b6:	482c      	ldr	r0, [pc, #176]	; (801d568 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801d4b8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d4bc:	0968      	lsrs	r0, r5, #5
 801d4be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d4c2:	4330      	orrs	r0, r6
 801d4c4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d4c8:	4328      	orrs	r0, r5
 801d4ca:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801d4ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d4d0:	4401      	add	r1, r0
 801d4d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d4d4:	f10e 0e01 	add.w	lr, lr, #1
 801d4d8:	4402      	add	r2, r0
 801d4da:	e7db      	b.n	801d494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801d4dc:	b2f0      	uxtb	r0, r6
 801d4de:	2e00      	cmp	r6, #0
 801d4e0:	d0f5      	beq.n	801d4ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d4e2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801d4e6:	fa1f f980 	uxth.w	r9, r0
 801d4ea:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d4ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d4f2:	43c0      	mvns	r0, r0
 801d4f4:	b2c0      	uxtb	r0, r0
 801d4f6:	fb16 f609 	smulbb	r6, r6, r9
 801d4fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4fe:	fb07 6700 	mla	r7, r7, r0, r6
 801d502:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d506:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d50a:	b2ed      	uxtb	r5, r5
 801d50c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d510:	fa5f fc8c 	uxtb.w	ip, ip
 801d514:	fb15 f509 	smulbb	r5, r5, r9
 801d518:	fb0c 5500 	mla	r5, ip, r0, r5
 801d51c:	b2bf      	uxth	r7, r7
 801d51e:	fb1a fa09 	smulbb	sl, sl, r9
 801d522:	b2ad      	uxth	r5, r5
 801d524:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d528:	fb06 a600 	mla	r6, r6, r0, sl
 801d52c:	1c78      	adds	r0, r7, #1
 801d52e:	f105 0a01 	add.w	sl, r5, #1
 801d532:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d536:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d53a:	b2b6      	uxth	r6, r6
 801d53c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d540:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d544:	ea4a 0707 	orr.w	r7, sl, r7
 801d548:	f106 0a01 	add.w	sl, r6, #1
 801d54c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d550:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d554:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d558:	ea47 070a 	orr.w	r7, r7, sl
 801d55c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801d560:	e7b5      	b.n	801d4ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d562:	b005      	add	sp, #20
 801d564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d568:	fffff800 	.word	0xfffff800

0801d56c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d570:	b087      	sub	sp, #28
 801d572:	468b      	mov	fp, r1
 801d574:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d576:	9203      	str	r2, [sp, #12]
 801d578:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d57c:	9204      	str	r2, [sp, #16]
 801d57e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d582:	6841      	ldr	r1, [r0, #4]
 801d584:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801d588:	fb01 2404 	mla	r4, r1, r4, r2
 801d58c:	6802      	ldr	r2, [r0, #0]
 801d58e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d592:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801d596:	3201      	adds	r2, #1
 801d598:	f022 0201 	bic.w	r2, r2, #1
 801d59c:	9200      	str	r2, [sp, #0]
 801d59e:	f8d9 2000 	ldr.w	r2, [r9]
 801d5a2:	9201      	str	r2, [sp, #4]
 801d5a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d5a8:	f1bb 0f00 	cmp.w	fp, #0
 801d5ac:	dc03      	bgt.n	801d5b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d5ae:	9a03      	ldr	r2, [sp, #12]
 801d5b0:	2a00      	cmp	r2, #0
 801d5b2:	f340 8169 	ble.w	801d888 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d5b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d5b8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801d5bc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801d5c0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d5c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d5c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d5ca:	2b00      	cmp	r3, #0
 801d5cc:	dd0e      	ble.n	801d5ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d5ce:	1402      	asrs	r2, r0, #16
 801d5d0:	d405      	bmi.n	801d5de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d5d2:	42ba      	cmp	r2, r7
 801d5d4:	da03      	bge.n	801d5de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d5d6:	140a      	asrs	r2, r1, #16
 801d5d8:	d401      	bmi.n	801d5de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d5da:	42b2      	cmp	r2, r6
 801d5dc:	db07      	blt.n	801d5ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801d5de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d5e0:	4410      	add	r0, r2
 801d5e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d5e4:	3b01      	subs	r3, #1
 801d5e6:	4411      	add	r1, r2
 801d5e8:	3402      	adds	r4, #2
 801d5ea:	e7ee      	b.n	801d5ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d5ec:	d017      	beq.n	801d61e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d5ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5f0:	1e5a      	subs	r2, r3, #1
 801d5f2:	fb05 0502 	mla	r5, r5, r2, r0
 801d5f6:	142d      	asrs	r5, r5, #16
 801d5f8:	d409      	bmi.n	801d60e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d5fa:	42bd      	cmp	r5, r7
 801d5fc:	da07      	bge.n	801d60e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d5fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d600:	fb05 1202 	mla	r2, r5, r2, r1
 801d604:	1412      	asrs	r2, r2, #16
 801d606:	d402      	bmi.n	801d60e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d608:	42b2      	cmp	r2, r6
 801d60a:	f2c0 80c7 	blt.w	801d79c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801d60e:	2700      	movs	r7, #0
 801d610:	19da      	adds	r2, r3, r7
 801d612:	2a00      	cmp	r2, #0
 801d614:	dc3e      	bgt.n	801d694 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d616:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d61a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d61e:	f1bb 0f00 	cmp.w	fp, #0
 801d622:	f340 8131 	ble.w	801d888 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d626:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d62a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d62e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d632:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d634:	f1bb 0b01 	subs.w	fp, fp, #1
 801d638:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d63c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d640:	eeb0 6a62 	vmov.f32	s12, s5
 801d644:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d648:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d64c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d650:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d654:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d658:	eeb0 6a43 	vmov.f32	s12, s6
 801d65c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d660:	ee12 2a90 	vmov	r2, s5
 801d664:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d668:	fb92 f3f3 	sdiv	r3, r2, r3
 801d66c:	ee13 2a10 	vmov	r2, s6
 801d670:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d674:	9313      	str	r3, [sp, #76]	; 0x4c
 801d676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d678:	fb92 f3f3 	sdiv	r3, r2, r3
 801d67c:	9a03      	ldr	r2, [sp, #12]
 801d67e:	9314      	str	r3, [sp, #80]	; 0x50
 801d680:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d684:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d686:	eeb0 3a67 	vmov.f32	s6, s15
 801d68a:	bf08      	it	eq
 801d68c:	4613      	moveq	r3, r2
 801d68e:	eef0 2a47 	vmov.f32	s5, s14
 801d692:	e789      	b.n	801d5a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d694:	1405      	asrs	r5, r0, #16
 801d696:	d435      	bmi.n	801d704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d698:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801d69c:	42aa      	cmp	r2, r5
 801d69e:	dd31      	ble.n	801d704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d6a0:	140e      	asrs	r6, r1, #16
 801d6a2:	d42f      	bmi.n	801d704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d6a4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801d6a8:	42b2      	cmp	r2, r6
 801d6aa:	dd2b      	ble.n	801d704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d6ac:	9a00      	ldr	r2, [sp, #0]
 801d6ae:	fb06 5502 	mla	r5, r6, r2, r5
 801d6b2:	086a      	lsrs	r2, r5, #1
 801d6b4:	9e01      	ldr	r6, [sp, #4]
 801d6b6:	5cb2      	ldrb	r2, [r6, r2]
 801d6b8:	07ee      	lsls	r6, r5, #31
 801d6ba:	bf54      	ite	pl
 801d6bc:	f002 020f 	andpl.w	r2, r2, #15
 801d6c0:	1112      	asrmi	r2, r2, #4
 801d6c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d6c6:	b2d2      	uxtb	r2, r2
 801d6c8:	b1e2      	cbz	r2, 801d704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d6ca:	9d04      	ldr	r5, [sp, #16]
 801d6cc:	436a      	muls	r2, r5
 801d6ce:	1c55      	adds	r5, r2, #1
 801d6d0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801d6d4:	4d6e      	ldr	r5, [pc, #440]	; (801d890 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801d6d6:	682d      	ldr	r5, [r5, #0]
 801d6d8:	1212      	asrs	r2, r2, #8
 801d6da:	0a2e      	lsrs	r6, r5, #8
 801d6dc:	2aff      	cmp	r2, #255	; 0xff
 801d6de:	9605      	str	r6, [sp, #20]
 801d6e0:	d116      	bne.n	801d710 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801d6e2:	f06f 0201 	mvn.w	r2, #1
 801d6e6:	fb02 fc07 	mul.w	ip, r2, r7
 801d6ea:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d6ee:	096a      	lsrs	r2, r5, #5
 801d6f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d6f4:	f026 0607 	bic.w	r6, r6, #7
 801d6f8:	4316      	orrs	r6, r2
 801d6fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d6fe:	432e      	orrs	r6, r5
 801d700:	f824 600c 	strh.w	r6, [r4, ip]
 801d704:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d706:	4410      	add	r0, r2
 801d708:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d70a:	3f01      	subs	r7, #1
 801d70c:	4411      	add	r1, r2
 801d70e:	e77f      	b.n	801d610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801d710:	f06f 0601 	mvn.w	r6, #1
 801d714:	437e      	muls	r6, r7
 801d716:	fa1f fa82 	uxth.w	sl, r2
 801d71a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801d71e:	9602      	str	r6, [sp, #8]
 801d720:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801d724:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801d728:	43d2      	mvns	r2, r2
 801d72a:	b2d2      	uxtb	r2, r2
 801d72c:	fb1c fc0a 	smulbb	ip, ip, sl
 801d730:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d734:	fb0e ce02 	mla	lr, lr, r2, ip
 801d738:	b2ed      	uxtb	r5, r5
 801d73a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801d73e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d742:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801d746:	fa5f f888 	uxtb.w	r8, r8
 801d74a:	fb15 f50a 	smulbb	r5, r5, sl
 801d74e:	fb08 5502 	mla	r5, r8, r2, r5
 801d752:	fa1f fe8e 	uxth.w	lr, lr
 801d756:	fb16 f60a 	smulbb	r6, r6, sl
 801d75a:	b2ad      	uxth	r5, r5
 801d75c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d760:	fb0c 6c02 	mla	ip, ip, r2, r6
 801d764:	f10e 0201 	add.w	r2, lr, #1
 801d768:	1c6e      	adds	r6, r5, #1
 801d76a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801d76e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801d772:	fa1f fc8c 	uxth.w	ip, ip
 801d776:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d77a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801d77e:	ea46 0e0e 	orr.w	lr, r6, lr
 801d782:	f10c 0601 	add.w	r6, ip, #1
 801d786:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801d78a:	0976      	lsrs	r6, r6, #5
 801d78c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d790:	9a02      	ldr	r2, [sp, #8]
 801d792:	ea4e 0e06 	orr.w	lr, lr, r6
 801d796:	f824 e002 	strh.w	lr, [r4, r2]
 801d79a:	e7b3      	b.n	801d704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d79c:	f04f 0800 	mov.w	r8, #0
 801d7a0:	eba3 0208 	sub.w	r2, r3, r8
 801d7a4:	2a00      	cmp	r2, #0
 801d7a6:	f77f af36 	ble.w	801d616 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d7aa:	9e00      	ldr	r6, [sp, #0]
 801d7ac:	1402      	asrs	r2, r0, #16
 801d7ae:	140d      	asrs	r5, r1, #16
 801d7b0:	fb06 2505 	mla	r5, r6, r5, r2
 801d7b4:	086a      	lsrs	r2, r5, #1
 801d7b6:	9e01      	ldr	r6, [sp, #4]
 801d7b8:	5cb2      	ldrb	r2, [r6, r2]
 801d7ba:	07ed      	lsls	r5, r5, #31
 801d7bc:	bf54      	ite	pl
 801d7be:	f002 020f 	andpl.w	r2, r2, #15
 801d7c2:	1112      	asrmi	r2, r2, #4
 801d7c4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d7c8:	b2d2      	uxtb	r2, r2
 801d7ca:	b1c2      	cbz	r2, 801d7fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801d7cc:	9d04      	ldr	r5, [sp, #16]
 801d7ce:	436a      	muls	r2, r5
 801d7d0:	1c55      	adds	r5, r2, #1
 801d7d2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801d7d6:	4d2e      	ldr	r5, [pc, #184]	; (801d890 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801d7d8:	1212      	asrs	r2, r2, #8
 801d7da:	682e      	ldr	r6, [r5, #0]
 801d7dc:	2aff      	cmp	r2, #255	; 0xff
 801d7de:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801d7e2:	d113      	bne.n	801d80c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801d7e4:	0972      	lsrs	r2, r6, #5
 801d7e6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d7ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d7ee:	f025 0507 	bic.w	r5, r5, #7
 801d7f2:	4315      	orrs	r5, r2
 801d7f4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d7f8:	4335      	orrs	r5, r6
 801d7fa:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801d7fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d800:	4410      	add	r0, r2
 801d802:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d804:	f108 0801 	add.w	r8, r8, #1
 801d808:	4411      	add	r1, r2
 801d80a:	e7c9      	b.n	801d7a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d80c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d810:	fa1f fa82 	uxth.w	sl, r2
 801d814:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d818:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801d81c:	43d2      	mvns	r2, r2
 801d81e:	b2d2      	uxtb	r2, r2
 801d820:	fb17 f70a 	smulbb	r7, r7, sl
 801d824:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d828:	fb0c 7c02 	mla	ip, ip, r2, r7
 801d82c:	b2f6      	uxtb	r6, r6
 801d82e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801d832:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d836:	fa5f fe8e 	uxtb.w	lr, lr
 801d83a:	fb16 f60a 	smulbb	r6, r6, sl
 801d83e:	fb0e 6602 	mla	r6, lr, r2, r6
 801d842:	b2ed      	uxtb	r5, r5
 801d844:	fa1f fc8c 	uxth.w	ip, ip
 801d848:	fb15 f50a 	smulbb	r5, r5, sl
 801d84c:	b2b6      	uxth	r6, r6
 801d84e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d852:	fb07 5702 	mla	r7, r7, r2, r5
 801d856:	f10c 0201 	add.w	r2, ip, #1
 801d85a:	1c75      	adds	r5, r6, #1
 801d85c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d860:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d864:	b2bf      	uxth	r7, r7
 801d866:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d86a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d86e:	ea45 0c0c 	orr.w	ip, r5, ip
 801d872:	1c7d      	adds	r5, r7, #1
 801d874:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801d878:	096d      	lsrs	r5, r5, #5
 801d87a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d87e:	ea4c 0c05 	orr.w	ip, ip, r5
 801d882:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801d886:	e7ba      	b.n	801d7fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801d888:	b007      	add	sp, #28
 801d88a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d88e:	bf00      	nop
 801d890:	2001385c 	.word	0x2001385c

0801d894 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d898:	b087      	sub	sp, #28
 801d89a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801dba8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801d89e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d8a0:	9205      	str	r2, [sp, #20]
 801d8a2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d8a6:	9101      	str	r1, [sp, #4]
 801d8a8:	6841      	ldr	r1, [r0, #4]
 801d8aa:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801d8ae:	fb01 2404 	mla	r4, r1, r4, r2
 801d8b2:	6802      	ldr	r2, [r0, #0]
 801d8b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d8b8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801d8bc:	3201      	adds	r2, #1
 801d8be:	f022 0201 	bic.w	r2, r2, #1
 801d8c2:	9202      	str	r2, [sp, #8]
 801d8c4:	f8db 2000 	ldr.w	r2, [fp]
 801d8c8:	9203      	str	r2, [sp, #12]
 801d8ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d8ce:	9a01      	ldr	r2, [sp, #4]
 801d8d0:	2a00      	cmp	r2, #0
 801d8d2:	dc03      	bgt.n	801d8dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d8d4:	9a05      	ldr	r2, [sp, #20]
 801d8d6:	2a00      	cmp	r2, #0
 801d8d8:	f340 8162 	ble.w	801dba0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d8dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d8de:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801d8e2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801d8e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d8ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d8ec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d8f0:	2b00      	cmp	r3, #0
 801d8f2:	dd0e      	ble.n	801d912 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d8f4:	1402      	asrs	r2, r0, #16
 801d8f6:	d405      	bmi.n	801d904 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d8f8:	42ba      	cmp	r2, r7
 801d8fa:	da03      	bge.n	801d904 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d8fc:	140a      	asrs	r2, r1, #16
 801d8fe:	d401      	bmi.n	801d904 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d900:	42b2      	cmp	r2, r6
 801d902:	db07      	blt.n	801d914 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d904:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d906:	4410      	add	r0, r2
 801d908:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d90a:	3b01      	subs	r3, #1
 801d90c:	4411      	add	r1, r2
 801d90e:	3402      	adds	r4, #2
 801d910:	e7ee      	b.n	801d8f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801d912:	d017      	beq.n	801d944 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d914:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d916:	1e5a      	subs	r2, r3, #1
 801d918:	fb05 0502 	mla	r5, r5, r2, r0
 801d91c:	142d      	asrs	r5, r5, #16
 801d91e:	d409      	bmi.n	801d934 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d920:	42bd      	cmp	r5, r7
 801d922:	da07      	bge.n	801d934 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d924:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d926:	fb05 1202 	mla	r2, r5, r2, r1
 801d92a:	1412      	asrs	r2, r2, #16
 801d92c:	d402      	bmi.n	801d934 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d92e:	42b2      	cmp	r2, r6
 801d930:	f2c0 80c3 	blt.w	801daba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801d934:	2500      	movs	r5, #0
 801d936:	195a      	adds	r2, r3, r5
 801d938:	2a00      	cmp	r2, #0
 801d93a:	dc3f      	bgt.n	801d9bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d93c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d940:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d944:	9b01      	ldr	r3, [sp, #4]
 801d946:	2b00      	cmp	r3, #0
 801d948:	f340 812a 	ble.w	801dba0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d94c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d950:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d954:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d958:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d95a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d95e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d962:	eeb0 6a62 	vmov.f32	s12, s5
 801d966:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d96a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d96e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d972:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d976:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d97a:	eeb0 6a43 	vmov.f32	s12, s6
 801d97e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d982:	ee12 2a90 	vmov	r2, s5
 801d986:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d98a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d98e:	ee13 2a10 	vmov	r2, s6
 801d992:	9313      	str	r3, [sp, #76]	; 0x4c
 801d994:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d996:	fb92 f3f3 	sdiv	r3, r2, r3
 801d99a:	9314      	str	r3, [sp, #80]	; 0x50
 801d99c:	9b01      	ldr	r3, [sp, #4]
 801d99e:	9a05      	ldr	r2, [sp, #20]
 801d9a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d9a4:	3b01      	subs	r3, #1
 801d9a6:	9301      	str	r3, [sp, #4]
 801d9a8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d9ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d9ae:	eeb0 3a67 	vmov.f32	s6, s15
 801d9b2:	bf08      	it	eq
 801d9b4:	4613      	moveq	r3, r2
 801d9b6:	eef0 2a47 	vmov.f32	s5, s14
 801d9ba:	e788      	b.n	801d8ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d9bc:	1406      	asrs	r6, r0, #16
 801d9be:	d42c      	bmi.n	801da1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d9c0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801d9c4:	42b2      	cmp	r2, r6
 801d9c6:	dd28      	ble.n	801da1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d9c8:	140f      	asrs	r7, r1, #16
 801d9ca:	d426      	bmi.n	801da1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d9cc:	f8db 200c 	ldr.w	r2, [fp, #12]
 801d9d0:	42ba      	cmp	r2, r7
 801d9d2:	dd22      	ble.n	801da1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d9d4:	9a02      	ldr	r2, [sp, #8]
 801d9d6:	fb07 6602 	mla	r6, r7, r2, r6
 801d9da:	0872      	lsrs	r2, r6, #1
 801d9dc:	9f03      	ldr	r7, [sp, #12]
 801d9de:	5cba      	ldrb	r2, [r7, r2]
 801d9e0:	07f6      	lsls	r6, r6, #31
 801d9e2:	bf54      	ite	pl
 801d9e4:	f002 020f 	andpl.w	r2, r2, #15
 801d9e8:	1112      	asrmi	r2, r2, #4
 801d9ea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d9ee:	b2d2      	uxtb	r2, r2
 801d9f0:	2aff      	cmp	r2, #255	; 0xff
 801d9f2:	d118      	bne.n	801da26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801d9f4:	f8d8 2000 	ldr.w	r2, [r8]
 801d9f8:	f06f 0601 	mvn.w	r6, #1
 801d9fc:	fb06 f705 	mul.w	r7, r6, r5
 801da00:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801da04:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801da08:	0956      	lsrs	r6, r2, #5
 801da0a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801da0e:	ea4c 0606 	orr.w	r6, ip, r6
 801da12:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801da16:	4316      	orrs	r6, r2
 801da18:	53e6      	strh	r6, [r4, r7]
 801da1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801da1c:	4410      	add	r0, r2
 801da1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801da20:	3d01      	subs	r5, #1
 801da22:	4411      	add	r1, r2
 801da24:	e787      	b.n	801d936 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801da26:	2a00      	cmp	r2, #0
 801da28:	d0f7      	beq.n	801da1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801da2a:	f06f 0601 	mvn.w	r6, #1
 801da2e:	436e      	muls	r6, r5
 801da30:	f8d8 c000 	ldr.w	ip, [r8]
 801da34:	f834 e006 	ldrh.w	lr, [r4, r6]
 801da38:	9604      	str	r6, [sp, #16]
 801da3a:	fa1f f982 	uxth.w	r9, r2
 801da3e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801da42:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801da46:	43d2      	mvns	r2, r2
 801da48:	b2d2      	uxtb	r2, r2
 801da4a:	fb16 f609 	smulbb	r6, r6, r9
 801da4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801da52:	fb07 6702 	mla	r7, r7, r2, r6
 801da56:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801da5a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801da5e:	fa5f fc8c 	uxtb.w	ip, ip
 801da62:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801da66:	fa5f fe8e 	uxtb.w	lr, lr
 801da6a:	fb1c fc09 	smulbb	ip, ip, r9
 801da6e:	fb0e cc02 	mla	ip, lr, r2, ip
 801da72:	b2bf      	uxth	r7, r7
 801da74:	fb1a fa09 	smulbb	sl, sl, r9
 801da78:	fa1f fc8c 	uxth.w	ip, ip
 801da7c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da80:	fb06 a602 	mla	r6, r6, r2, sl
 801da84:	1c7a      	adds	r2, r7, #1
 801da86:	f10c 0a01 	add.w	sl, ip, #1
 801da8a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801da8e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801da92:	b2b6      	uxth	r6, r6
 801da94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801da98:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801da9c:	ea4a 0707 	orr.w	r7, sl, r7
 801daa0:	f106 0a01 	add.w	sl, r6, #1
 801daa4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801daa8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801daac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dab0:	9a04      	ldr	r2, [sp, #16]
 801dab2:	ea47 070a 	orr.w	r7, r7, sl
 801dab6:	52a7      	strh	r7, [r4, r2]
 801dab8:	e7af      	b.n	801da1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801daba:	f04f 0e00 	mov.w	lr, #0
 801dabe:	eba3 020e 	sub.w	r2, r3, lr
 801dac2:	2a00      	cmp	r2, #0
 801dac4:	f77f af3a 	ble.w	801d93c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801dac8:	9e02      	ldr	r6, [sp, #8]
 801daca:	1402      	asrs	r2, r0, #16
 801dacc:	140d      	asrs	r5, r1, #16
 801dace:	fb06 2505 	mla	r5, r6, r5, r2
 801dad2:	086a      	lsrs	r2, r5, #1
 801dad4:	9e03      	ldr	r6, [sp, #12]
 801dad6:	5cb2      	ldrb	r2, [r6, r2]
 801dad8:	07ed      	lsls	r5, r5, #31
 801dada:	bf54      	ite	pl
 801dadc:	f002 020f 	andpl.w	r2, r2, #15
 801dae0:	1112      	asrmi	r2, r2, #4
 801dae2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801dae6:	b2d2      	uxtb	r2, r2
 801dae8:	2aff      	cmp	r2, #255	; 0xff
 801daea:	d115      	bne.n	801db18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801daec:	f8d8 5000 	ldr.w	r5, [r8]
 801daf0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801daf4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801daf8:	096a      	lsrs	r2, r5, #5
 801dafa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dafe:	4332      	orrs	r2, r6
 801db00:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801db04:	432a      	orrs	r2, r5
 801db06:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801db0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801db0c:	4410      	add	r0, r2
 801db0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801db10:	f10e 0e01 	add.w	lr, lr, #1
 801db14:	4411      	add	r1, r2
 801db16:	e7d2      	b.n	801dabe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801db18:	2a00      	cmp	r2, #0
 801db1a:	d0f6      	beq.n	801db0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801db1c:	f8d8 7000 	ldr.w	r7, [r8]
 801db20:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801db24:	fa1f f982 	uxth.w	r9, r2
 801db28:	ea4f 262c 	mov.w	r6, ip, asr #8
 801db2c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801db30:	43d2      	mvns	r2, r2
 801db32:	b2d2      	uxtb	r2, r2
 801db34:	fb15 f509 	smulbb	r5, r5, r9
 801db38:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db3c:	fb06 5602 	mla	r6, r6, r2, r5
 801db40:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801db44:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801db48:	b2ff      	uxtb	r7, r7
 801db4a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801db4e:	fa5f fc8c 	uxtb.w	ip, ip
 801db52:	fb17 f709 	smulbb	r7, r7, r9
 801db56:	fb0c 7702 	mla	r7, ip, r2, r7
 801db5a:	b2b6      	uxth	r6, r6
 801db5c:	fb1a fa09 	smulbb	sl, sl, r9
 801db60:	b2bf      	uxth	r7, r7
 801db62:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801db66:	fb05 a502 	mla	r5, r5, r2, sl
 801db6a:	1c72      	adds	r2, r6, #1
 801db6c:	f107 0a01 	add.w	sl, r7, #1
 801db70:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801db74:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801db78:	b2ad      	uxth	r5, r5
 801db7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801db7e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801db82:	ea4a 0606 	orr.w	r6, sl, r6
 801db86:	f105 0a01 	add.w	sl, r5, #1
 801db8a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801db8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801db92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801db96:	ea46 060a 	orr.w	r6, r6, sl
 801db9a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801db9e:	e7b4      	b.n	801db0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801dba0:	b007      	add	sp, #28
 801dba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dba6:	bf00      	nop
 801dba8:	2001385c 	.word	0x2001385c

0801dbac <_ZN8touchgfx8LCD16bppD1Ev>:
 801dbac:	4770      	bx	lr

0801dbae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801dbae:	4770      	bx	lr

0801dbb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801dbb0:	4770      	bx	lr

0801dbb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801dbb2:	4770      	bx	lr

0801dbb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801dbb4:	4770      	bx	lr

0801dbb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801dbb6:	4770      	bx	lr

0801dbb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801dbb8:	4770      	bx	lr

0801dbba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801dbba:	4770      	bx	lr

0801dbbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801dbbc:	4770      	bx	lr

0801dbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801dbbe:	4770      	bx	lr

0801dbc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801dbc0:	4770      	bx	lr

0801dbc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801dbc2:	4770      	bx	lr

0801dbc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801dbc4:	4770      	bx	lr

0801dbc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801dbc6:	4770      	bx	lr

0801dbc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801dbc8:	4770      	bx	lr

0801dbca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801dbca:	4770      	bx	lr

0801dbcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801dbcc:	4770      	bx	lr

0801dbce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801dbce:	4770      	bx	lr

0801dbd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801dbd0:	4770      	bx	lr

0801dbd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801dbd2:	4770      	bx	lr

0801dbd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801dbd4:	4770      	bx	lr

0801dbd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801dbd6:	4770      	bx	lr

0801dbd8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801dbd8:	4770      	bx	lr

0801dbda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801dbda:	4770      	bx	lr

0801dbdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801dbdc:	4770      	bx	lr

0801dbde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801dbde:	4770      	bx	lr

0801dbe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801dbe0:	4770      	bx	lr

0801dbe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801dbe2:	4770      	bx	lr

0801dbe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801dbe4:	4770      	bx	lr

0801dbe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801dbe6:	4770      	bx	lr

0801dbe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801dbe8:	4770      	bx	lr

0801dbea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801dbea:	4770      	bx	lr

0801dbec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801dbec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dbf0:	b088      	sub	sp, #32
 801dbf2:	ac08      	add	r4, sp, #32
 801dbf4:	4606      	mov	r6, r0
 801dbf6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801dbfa:	4620      	mov	r0, r4
 801dbfc:	4688      	mov	r8, r1
 801dbfe:	4691      	mov	r9, r2
 801dc00:	f7fd fc62 	bl	801b4c8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801dc04:	6833      	ldr	r3, [r6, #0]
 801dc06:	4605      	mov	r5, r0
 801dc08:	4620      	mov	r0, r4
 801dc0a:	699f      	ldr	r7, [r3, #24]
 801dc0c:	f7fd fb70 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801dc10:	4682      	mov	sl, r0
 801dc12:	4620      	mov	r0, r4
 801dc14:	f7fd fba0 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801dc18:	9500      	str	r5, [sp, #0]
 801dc1a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801dc1e:	464b      	mov	r3, r9
 801dc20:	a806      	add	r0, sp, #24
 801dc22:	4642      	mov	r2, r8
 801dc24:	4631      	mov	r1, r6
 801dc26:	47b8      	blx	r7
 801dc28:	4628      	mov	r0, r5
 801dc2a:	b008      	add	sp, #32
 801dc2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801dc30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801dc30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801dc34:	2300      	movs	r3, #0
 801dc36:	9300      	str	r3, [sp, #0]
 801dc38:	4b3d      	ldr	r3, [pc, #244]	; (801dd30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801dc3a:	781b      	ldrb	r3, [r3, #0]
 801dc3c:	2b00      	cmp	r3, #0
 801dc3e:	d137      	bne.n	801dcb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801dc40:	4a3c      	ldr	r2, [pc, #240]	; (801dd34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801dc42:	f9b2 2000 	ldrsh.w	r2, [r2]
 801dc46:	f8ad 2004 	strh.w	r2, [sp, #4]
 801dc4a:	2b00      	cmp	r3, #0
 801dc4c:	d132      	bne.n	801dcb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801dc4e:	4b3a      	ldr	r3, [pc, #232]	; (801dd38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801dc50:	f9b3 3000 	ldrsh.w	r3, [r3]
 801dc54:	6808      	ldr	r0, [r1, #0]
 801dc56:	6849      	ldr	r1, [r1, #4]
 801dc58:	f8ad 3006 	strh.w	r3, [sp, #6]
 801dc5c:	ac02      	add	r4, sp, #8
 801dc5e:	ab02      	add	r3, sp, #8
 801dc60:	c303      	stmia	r3!, {r0, r1}
 801dc62:	4669      	mov	r1, sp
 801dc64:	4620      	mov	r0, r4
 801dc66:	f7f9 fd83 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc6a:	4668      	mov	r0, sp
 801dc6c:	f7f9 fd3c 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc70:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801dc74:	f8bd 2000 	ldrh.w	r2, [sp]
 801dc78:	4d30      	ldr	r5, [pc, #192]	; (801dd3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801dc7a:	4413      	add	r3, r2
 801dc7c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801dc80:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801dc84:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801dc88:	6828      	ldr	r0, [r5, #0]
 801dc8a:	4413      	add	r3, r2
 801dc8c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801dc90:	6803      	ldr	r3, [r0, #0]
 801dc92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dc94:	4798      	blx	r3
 801dc96:	f010 0f01 	tst.w	r0, #1
 801dc9a:	462f      	mov	r7, r5
 801dc9c:	d00c      	beq.n	801dcb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801dc9e:	6828      	ldr	r0, [r5, #0]
 801dca0:	6803      	ldr	r3, [r0, #0]
 801dca2:	e894 0006 	ldmia.w	r4, {r1, r2}
 801dca6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801dca8:	4798      	blx	r3
 801dcaa:	b004      	add	sp, #16
 801dcac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dcb0:	4a21      	ldr	r2, [pc, #132]	; (801dd38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801dcb2:	e7c6      	b.n	801dc42 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801dcb4:	4b1f      	ldr	r3, [pc, #124]	; (801dd34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801dcb6:	e7cb      	b.n	801dc50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801dcb8:	6838      	ldr	r0, [r7, #0]
 801dcba:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801dcbe:	6803      	ldr	r3, [r0, #0]
 801dcc0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801dcc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801dcc6:	4798      	blx	r3
 801dcc8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801dccc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801dcd0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801dcd4:	fb16 3602 	smlabb	r6, r6, r2, r3
 801dcd8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801dcdc:	6838      	ldr	r0, [r7, #0]
 801dcde:	6803      	ldr	r3, [r0, #0]
 801dce0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dce2:	4798      	blx	r3
 801dce4:	4a13      	ldr	r2, [pc, #76]	; (801dd34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801dce6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801dcea:	8813      	ldrh	r3, [r2, #0]
 801dcec:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801dcf0:	fb03 1404 	mla	r4, r3, r4, r1
 801dcf4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801dcf8:	435d      	muls	r5, r3
 801dcfa:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801dcfe:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801dd02:	4691      	mov	r9, r2
 801dd04:	6838      	ldr	r0, [r7, #0]
 801dd06:	42ac      	cmp	r4, r5
 801dd08:	6803      	ldr	r3, [r0, #0]
 801dd0a:	d20e      	bcs.n	801dd2a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801dd0c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801dd10:	4632      	mov	r2, r6
 801dd12:	4643      	mov	r3, r8
 801dd14:	4621      	mov	r1, r4
 801dd16:	47d0      	blx	sl
 801dd18:	f8b9 3000 	ldrh.w	r3, [r9]
 801dd1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dd20:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801dd24:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801dd28:	e7ec      	b.n	801dd04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801dd2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd2c:	4798      	blx	r3
 801dd2e:	e7bc      	b.n	801dcaa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801dd30:	20013844 	.word	0x20013844
 801dd34:	20013846 	.word	0x20013846
 801dd38:	20013848 	.word	0x20013848
 801dd3c:	2001384c 	.word	0x2001384c

0801dd40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801dd40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd44:	b08b      	sub	sp, #44	; 0x2c
 801dd46:	460f      	mov	r7, r1
 801dd48:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801dd4c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801dd50:	4616      	mov	r6, r2
 801dd52:	f1bb 0f00 	cmp.w	fp, #0
 801dd56:	d04a      	beq.n	801ddee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801dd58:	6810      	ldr	r0, [r2, #0]
 801dd5a:	6851      	ldr	r1, [r2, #4]
 801dd5c:	ad06      	add	r5, sp, #24
 801dd5e:	c503      	stmia	r5!, {r0, r1}
 801dd60:	6818      	ldr	r0, [r3, #0]
 801dd62:	6859      	ldr	r1, [r3, #4]
 801dd64:	ad08      	add	r5, sp, #32
 801dd66:	c503      	stmia	r5!, {r0, r1}
 801dd68:	a806      	add	r0, sp, #24
 801dd6a:	f7f9 fcbd 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dd6e:	4631      	mov	r1, r6
 801dd70:	a808      	add	r0, sp, #32
 801dd72:	f7f9 fcfd 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd76:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801dd7a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801dd7e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801dd82:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801dd86:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801dd8a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801dd8e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801dd92:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801dd96:	4f5f      	ldr	r7, [pc, #380]	; (801df14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801dd98:	440a      	add	r2, r1
 801dd9a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801dd9e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801dda2:	6838      	ldr	r0, [r7, #0]
 801dda4:	4413      	add	r3, r2
 801dda6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ddaa:	6803      	ldr	r3, [r0, #0]
 801ddac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ddae:	4798      	blx	r3
 801ddb0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ddb4:	46b9      	mov	r9, r7
 801ddb6:	d11d      	bne.n	801ddf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ddb8:	b9fc      	cbnz	r4, 801ddfa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ddba:	f010 0f01 	tst.w	r0, #1
 801ddbe:	d01c      	beq.n	801ddfa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ddc0:	f8d9 0000 	ldr.w	r0, [r9]
 801ddc4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ddc8:	6801      	ldr	r1, [r0, #0]
 801ddca:	f8cd b00c 	str.w	fp, [sp, #12]
 801ddce:	2700      	movs	r7, #0
 801ddd0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ddd4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ddd8:	9402      	str	r4, [sp, #8]
 801ddda:	b2ad      	uxth	r5, r5
 801dddc:	fa1f f488 	uxth.w	r4, r8
 801dde0:	9501      	str	r5, [sp, #4]
 801dde2:	9400      	str	r4, [sp, #0]
 801dde4:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801dde6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ddea:	4631      	mov	r1, r6
 801ddec:	47a0      	blx	r4
 801ddee:	b00b      	add	sp, #44	; 0x2c
 801ddf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ddf4:	f010 0f04 	tst.w	r0, #4
 801ddf8:	e7e1      	b.n	801ddbe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ddfa:	f8d9 0000 	ldr.w	r0, [r9]
 801ddfe:	6803      	ldr	r3, [r0, #0]
 801de00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de02:	4798      	blx	r3
 801de04:	4b44      	ldr	r3, [pc, #272]	; (801df18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801de06:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801de0a:	881a      	ldrh	r2, [r3, #0]
 801de0c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801de10:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801de14:	fb02 1404 	mla	r4, r2, r4, r1
 801de18:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801de1c:	469a      	mov	sl, r3
 801de1e:	fb05 f502 	mul.w	r5, r5, r2
 801de22:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801de26:	d059      	beq.n	801dedc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801de28:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801de2c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801de30:	fa1f f28b 	uxth.w	r2, fp
 801de34:	fa1f f989 	uxth.w	r9, r9
 801de38:	469e      	mov	lr, r3
 801de3a:	42ac      	cmp	r4, r5
 801de3c:	d264      	bcs.n	801df08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801de3e:	eb04 0a07 	add.w	sl, r4, r7
 801de42:	4554      	cmp	r4, sl
 801de44:	d23d      	bcs.n	801dec2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801de46:	8821      	ldrh	r1, [r4, #0]
 801de48:	f836 3b02 	ldrh.w	r3, [r6], #2
 801de4c:	1208      	asrs	r0, r1, #8
 801de4e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801de52:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801de56:	fb10 f009 	smulbb	r0, r0, r9
 801de5a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801de5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de62:	00c9      	lsls	r1, r1, #3
 801de64:	fb0c 0c02 	mla	ip, ip, r2, r0
 801de68:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801de6c:	10d8      	asrs	r0, r3, #3
 801de6e:	b2c9      	uxtb	r1, r1
 801de70:	00db      	lsls	r3, r3, #3
 801de72:	fa1f fc8c 	uxth.w	ip, ip
 801de76:	fb1b fb09 	smulbb	fp, fp, r9
 801de7a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801de7e:	b2db      	uxtb	r3, r3
 801de80:	fb11 f109 	smulbb	r1, r1, r9
 801de84:	fb00 b002 	mla	r0, r0, r2, fp
 801de88:	fb03 1302 	mla	r3, r3, r2, r1
 801de8c:	f10c 0b01 	add.w	fp, ip, #1
 801de90:	b29b      	uxth	r3, r3
 801de92:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801de96:	b280      	uxth	r0, r0
 801de98:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801de9c:	f103 0c01 	add.w	ip, r3, #1
 801dea0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801dea4:	1c43      	adds	r3, r0, #1
 801dea6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801deaa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801deae:	0940      	lsrs	r0, r0, #5
 801deb0:	ea4c 0c0b 	orr.w	ip, ip, fp
 801deb4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801deb8:	ea4c 0c00 	orr.w	ip, ip, r0
 801debc:	f824 cb02 	strh.w	ip, [r4], #2
 801dec0:	e7bf      	b.n	801de42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801dec2:	f8be 3000 	ldrh.w	r3, [lr]
 801dec6:	eba3 0308 	sub.w	r3, r3, r8
 801deca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dece:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ded2:	eba3 0308 	sub.w	r3, r3, r8
 801ded6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801deda:	e7ae      	b.n	801de3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801dedc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801dee0:	f8d9 0000 	ldr.w	r0, [r9]
 801dee4:	42ac      	cmp	r4, r5
 801dee6:	6803      	ldr	r3, [r0, #0]
 801dee8:	d20e      	bcs.n	801df08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801deea:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801deee:	4632      	mov	r2, r6
 801def0:	463b      	mov	r3, r7
 801def2:	4621      	mov	r1, r4
 801def4:	47c0      	blx	r8
 801def6:	f8ba 3000 	ldrh.w	r3, [sl]
 801defa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801defe:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801df02:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801df06:	e7eb      	b.n	801dee0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801df08:	4b02      	ldr	r3, [pc, #8]	; (801df14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801df0a:	6818      	ldr	r0, [r3, #0]
 801df0c:	6803      	ldr	r3, [r0, #0]
 801df0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df10:	4798      	blx	r3
 801df12:	e76c      	b.n	801ddee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801df14:	2001384c 	.word	0x2001384c
 801df18:	20013846 	.word	0x20013846

0801df1c <_ZN8touchgfx8LCD16bppD0Ev>:
 801df1c:	b510      	push	{r4, lr}
 801df1e:	2184      	movs	r1, #132	; 0x84
 801df20:	4604      	mov	r4, r0
 801df22:	f00d fe4a 	bl	802bbba <_ZdlPvj>
 801df26:	4620      	mov	r0, r4
 801df28:	bd10      	pop	{r4, pc}

0801df2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801df2a:	b510      	push	{r4, lr}
 801df2c:	2104      	movs	r1, #4
 801df2e:	4604      	mov	r4, r0
 801df30:	f00d fe43 	bl	802bbba <_ZdlPvj>
 801df34:	4620      	mov	r0, r4
 801df36:	bd10      	pop	{r4, pc}

0801df38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801df38:	b510      	push	{r4, lr}
 801df3a:	2104      	movs	r1, #4
 801df3c:	4604      	mov	r4, r0
 801df3e:	f00d fe3c 	bl	802bbba <_ZdlPvj>
 801df42:	4620      	mov	r0, r4
 801df44:	bd10      	pop	{r4, pc}

0801df46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801df46:	b510      	push	{r4, lr}
 801df48:	f640 0144 	movw	r1, #2116	; 0x844
 801df4c:	4604      	mov	r4, r0
 801df4e:	f00d fe34 	bl	802bbba <_ZdlPvj>
 801df52:	4620      	mov	r0, r4
 801df54:	bd10      	pop	{r4, pc}

0801df56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801df56:	b510      	push	{r4, lr}
 801df58:	2104      	movs	r1, #4
 801df5a:	4604      	mov	r4, r0
 801df5c:	f00d fe2d 	bl	802bbba <_ZdlPvj>
 801df60:	4620      	mov	r0, r4
 801df62:	bd10      	pop	{r4, pc}

0801df64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801df64:	b510      	push	{r4, lr}
 801df66:	2104      	movs	r1, #4
 801df68:	4604      	mov	r4, r0
 801df6a:	f00d fe26 	bl	802bbba <_ZdlPvj>
 801df6e:	4620      	mov	r0, r4
 801df70:	bd10      	pop	{r4, pc}

0801df72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801df72:	b510      	push	{r4, lr}
 801df74:	2104      	movs	r1, #4
 801df76:	4604      	mov	r4, r0
 801df78:	f00d fe1f 	bl	802bbba <_ZdlPvj>
 801df7c:	4620      	mov	r0, r4
 801df7e:	bd10      	pop	{r4, pc}

0801df80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801df80:	b510      	push	{r4, lr}
 801df82:	2104      	movs	r1, #4
 801df84:	4604      	mov	r4, r0
 801df86:	f00d fe18 	bl	802bbba <_ZdlPvj>
 801df8a:	4620      	mov	r0, r4
 801df8c:	bd10      	pop	{r4, pc}

0801df8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801df8e:	b510      	push	{r4, lr}
 801df90:	2104      	movs	r1, #4
 801df92:	4604      	mov	r4, r0
 801df94:	f00d fe11 	bl	802bbba <_ZdlPvj>
 801df98:	4620      	mov	r0, r4
 801df9a:	bd10      	pop	{r4, pc}

0801df9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801df9c:	b510      	push	{r4, lr}
 801df9e:	2104      	movs	r1, #4
 801dfa0:	4604      	mov	r4, r0
 801dfa2:	f00d fe0a 	bl	802bbba <_ZdlPvj>
 801dfa6:	4620      	mov	r0, r4
 801dfa8:	bd10      	pop	{r4, pc}

0801dfaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801dfaa:	b510      	push	{r4, lr}
 801dfac:	2104      	movs	r1, #4
 801dfae:	4604      	mov	r4, r0
 801dfb0:	f00d fe03 	bl	802bbba <_ZdlPvj>
 801dfb4:	4620      	mov	r0, r4
 801dfb6:	bd10      	pop	{r4, pc}

0801dfb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801dfb8:	b510      	push	{r4, lr}
 801dfba:	2104      	movs	r1, #4
 801dfbc:	4604      	mov	r4, r0
 801dfbe:	f00d fdfc 	bl	802bbba <_ZdlPvj>
 801dfc2:	4620      	mov	r0, r4
 801dfc4:	bd10      	pop	{r4, pc}

0801dfc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801dfc6:	b510      	push	{r4, lr}
 801dfc8:	2104      	movs	r1, #4
 801dfca:	4604      	mov	r4, r0
 801dfcc:	f00d fdf5 	bl	802bbba <_ZdlPvj>
 801dfd0:	4620      	mov	r0, r4
 801dfd2:	bd10      	pop	{r4, pc}

0801dfd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801dfd4:	b510      	push	{r4, lr}
 801dfd6:	2104      	movs	r1, #4
 801dfd8:	4604      	mov	r4, r0
 801dfda:	f00d fdee 	bl	802bbba <_ZdlPvj>
 801dfde:	4620      	mov	r0, r4
 801dfe0:	bd10      	pop	{r4, pc}

0801dfe2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801dfe2:	b510      	push	{r4, lr}
 801dfe4:	2104      	movs	r1, #4
 801dfe6:	4604      	mov	r4, r0
 801dfe8:	f00d fde7 	bl	802bbba <_ZdlPvj>
 801dfec:	4620      	mov	r0, r4
 801dfee:	bd10      	pop	{r4, pc}

0801dff0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801dff0:	b510      	push	{r4, lr}
 801dff2:	2104      	movs	r1, #4
 801dff4:	4604      	mov	r4, r0
 801dff6:	f00d fde0 	bl	802bbba <_ZdlPvj>
 801dffa:	4620      	mov	r0, r4
 801dffc:	bd10      	pop	{r4, pc}

0801dffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801dffe:	b510      	push	{r4, lr}
 801e000:	2104      	movs	r1, #4
 801e002:	4604      	mov	r4, r0
 801e004:	f00d fdd9 	bl	802bbba <_ZdlPvj>
 801e008:	4620      	mov	r0, r4
 801e00a:	bd10      	pop	{r4, pc}

0801e00c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801e00c:	b510      	push	{r4, lr}
 801e00e:	2104      	movs	r1, #4
 801e010:	4604      	mov	r4, r0
 801e012:	f00d fdd2 	bl	802bbba <_ZdlPvj>
 801e016:	4620      	mov	r0, r4
 801e018:	bd10      	pop	{r4, pc}

0801e01a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801e01a:	b510      	push	{r4, lr}
 801e01c:	2104      	movs	r1, #4
 801e01e:	4604      	mov	r4, r0
 801e020:	f00d fdcb 	bl	802bbba <_ZdlPvj>
 801e024:	4620      	mov	r0, r4
 801e026:	bd10      	pop	{r4, pc}

0801e028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801e028:	b510      	push	{r4, lr}
 801e02a:	2104      	movs	r1, #4
 801e02c:	4604      	mov	r4, r0
 801e02e:	f00d fdc4 	bl	802bbba <_ZdlPvj>
 801e032:	4620      	mov	r0, r4
 801e034:	bd10      	pop	{r4, pc}

0801e036 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801e036:	b510      	push	{r4, lr}
 801e038:	2104      	movs	r1, #4
 801e03a:	4604      	mov	r4, r0
 801e03c:	f00d fdbd 	bl	802bbba <_ZdlPvj>
 801e040:	4620      	mov	r0, r4
 801e042:	bd10      	pop	{r4, pc}

0801e044 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801e044:	b510      	push	{r4, lr}
 801e046:	2104      	movs	r1, #4
 801e048:	4604      	mov	r4, r0
 801e04a:	f00d fdb6 	bl	802bbba <_ZdlPvj>
 801e04e:	4620      	mov	r0, r4
 801e050:	bd10      	pop	{r4, pc}

0801e052 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801e052:	b510      	push	{r4, lr}
 801e054:	2104      	movs	r1, #4
 801e056:	4604      	mov	r4, r0
 801e058:	f00d fdaf 	bl	802bbba <_ZdlPvj>
 801e05c:	4620      	mov	r0, r4
 801e05e:	bd10      	pop	{r4, pc}

0801e060 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801e060:	b510      	push	{r4, lr}
 801e062:	2104      	movs	r1, #4
 801e064:	4604      	mov	r4, r0
 801e066:	f00d fda8 	bl	802bbba <_ZdlPvj>
 801e06a:	4620      	mov	r0, r4
 801e06c:	bd10      	pop	{r4, pc}

0801e06e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801e06e:	b510      	push	{r4, lr}
 801e070:	2104      	movs	r1, #4
 801e072:	4604      	mov	r4, r0
 801e074:	f00d fda1 	bl	802bbba <_ZdlPvj>
 801e078:	4620      	mov	r0, r4
 801e07a:	bd10      	pop	{r4, pc}

0801e07c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801e07c:	b510      	push	{r4, lr}
 801e07e:	2104      	movs	r1, #4
 801e080:	4604      	mov	r4, r0
 801e082:	f00d fd9a 	bl	802bbba <_ZdlPvj>
 801e086:	4620      	mov	r0, r4
 801e088:	bd10      	pop	{r4, pc}

0801e08a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801e08a:	b510      	push	{r4, lr}
 801e08c:	2104      	movs	r1, #4
 801e08e:	4604      	mov	r4, r0
 801e090:	f00d fd93 	bl	802bbba <_ZdlPvj>
 801e094:	4620      	mov	r0, r4
 801e096:	bd10      	pop	{r4, pc}

0801e098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801e098:	b510      	push	{r4, lr}
 801e09a:	2104      	movs	r1, #4
 801e09c:	4604      	mov	r4, r0
 801e09e:	f00d fd8c 	bl	802bbba <_ZdlPvj>
 801e0a2:	4620      	mov	r0, r4
 801e0a4:	bd10      	pop	{r4, pc}

0801e0a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801e0a6:	b510      	push	{r4, lr}
 801e0a8:	2104      	movs	r1, #4
 801e0aa:	4604      	mov	r4, r0
 801e0ac:	f00d fd85 	bl	802bbba <_ZdlPvj>
 801e0b0:	4620      	mov	r0, r4
 801e0b2:	bd10      	pop	{r4, pc}

0801e0b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801e0b4:	b510      	push	{r4, lr}
 801e0b6:	2104      	movs	r1, #4
 801e0b8:	4604      	mov	r4, r0
 801e0ba:	f00d fd7e 	bl	802bbba <_ZdlPvj>
 801e0be:	4620      	mov	r0, r4
 801e0c0:	bd10      	pop	{r4, pc}

0801e0c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801e0c2:	b510      	push	{r4, lr}
 801e0c4:	2104      	movs	r1, #4
 801e0c6:	4604      	mov	r4, r0
 801e0c8:	f00d fd77 	bl	802bbba <_ZdlPvj>
 801e0cc:	4620      	mov	r0, r4
 801e0ce:	bd10      	pop	{r4, pc}

0801e0d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801e0d0:	b510      	push	{r4, lr}
 801e0d2:	2104      	movs	r1, #4
 801e0d4:	4604      	mov	r4, r0
 801e0d6:	f00d fd70 	bl	802bbba <_ZdlPvj>
 801e0da:	4620      	mov	r0, r4
 801e0dc:	bd10      	pop	{r4, pc}
	...

0801e0e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801e0e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0e4:	b08f      	sub	sp, #60	; 0x3c
 801e0e6:	461c      	mov	r4, r3
 801e0e8:	9205      	str	r2, [sp, #20]
 801e0ea:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e0ee:	9100      	str	r1, [sp, #0]
 801e0f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e0f2:	9201      	str	r2, [sp, #4]
 801e0f4:	2a00      	cmp	r2, #0
 801e0f6:	f000 8115 	beq.w	801e324 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801e0fa:	6820      	ldr	r0, [r4, #0]
 801e0fc:	6861      	ldr	r1, [r4, #4]
 801e0fe:	aa0a      	add	r2, sp, #40	; 0x28
 801e100:	c203      	stmia	r2!, {r0, r1}
 801e102:	6818      	ldr	r0, [r3, #0]
 801e104:	6859      	ldr	r1, [r3, #4]
 801e106:	aa0c      	add	r2, sp, #48	; 0x30
 801e108:	c203      	stmia	r2!, {r0, r1}
 801e10a:	a80a      	add	r0, sp, #40	; 0x28
 801e10c:	f7f9 faec 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e110:	4621      	mov	r1, r4
 801e112:	a80c      	add	r0, sp, #48	; 0x30
 801e114:	f7f9 fb2c 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e118:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e11c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801e120:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801e124:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801e128:	bfde      	ittt	le
 801e12a:	b2b3      	uxthle	r3, r6
 801e12c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801e130:	fb92 f3f3 	sdivle	r3, r2, r3
 801e134:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e138:	bfc8      	it	gt
 801e13a:	2301      	movgt	r3, #1
 801e13c:	fb92 f1f3 	sdiv	r1, r2, r3
 801e140:	fa1f fc81 	uxth.w	ip, r1
 801e144:	fb0c 2413 	mls	r4, ip, r3, r2
 801e148:	fb14 f406 	smulbb	r4, r4, r6
 801e14c:	441d      	add	r5, r3
 801e14e:	4404      	add	r4, r0
 801e150:	4661      	mov	r1, ip
 801e152:	3d01      	subs	r5, #1
 801e154:	b2a4      	uxth	r4, r4
 801e156:	fb95 f5f3 	sdiv	r5, r5, r3
 801e15a:	b131      	cbz	r1, 801e16a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801e15c:	9b05      	ldr	r3, [sp, #20]
 801e15e:	9900      	ldr	r1, [sp, #0]
 801e160:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801e164:	ba1b      	rev	r3, r3
 801e166:	4419      	add	r1, r3
 801e168:	9100      	str	r1, [sp, #0]
 801e16a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801e16e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801e172:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e176:	4418      	add	r0, r3
 801e178:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e17c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801e180:	441a      	add	r2, r3
 801e182:	4b6a      	ldr	r3, [pc, #424]	; (801e32c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801e184:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801e188:	6818      	ldr	r0, [r3, #0]
 801e18a:	6803      	ldr	r3, [r0, #0]
 801e18c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e18e:	4798      	blx	r3
 801e190:	4967      	ldr	r1, [pc, #412]	; (801e330 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801e192:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e196:	880b      	ldrh	r3, [r1, #0]
 801e198:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801e19c:	9109      	str	r1, [sp, #36]	; 0x24
 801e19e:	fb03 c202 	mla	r2, r3, r2, ip
 801e1a2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e1a6:	4373      	muls	r3, r6
 801e1a8:	b2ad      	uxth	r5, r5
 801e1aa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e1ae:	00ad      	lsls	r5, r5, #2
 801e1b0:	9306      	str	r3, [sp, #24]
 801e1b2:	1d2b      	adds	r3, r5, #4
 801e1b4:	9307      	str	r3, [sp, #28]
 801e1b6:	9b01      	ldr	r3, [sp, #4]
 801e1b8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e1bc:	9103      	str	r1, [sp, #12]
 801e1be:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801e1c2:	2c00      	cmp	r4, #0
 801e1c4:	bf0c      	ite	eq
 801e1c6:	46c6      	moveq	lr, r8
 801e1c8:	f04f 0e00 	movne.w	lr, #0
 801e1cc:	2300      	movs	r3, #0
 801e1ce:	b292      	uxth	r2, r2
 801e1d0:	fa1f fe8e 	uxth.w	lr, lr
 801e1d4:	9302      	str	r3, [sp, #8]
 801e1d6:	9204      	str	r2, [sp, #16]
 801e1d8:	9a06      	ldr	r2, [sp, #24]
 801e1da:	4282      	cmp	r2, r0
 801e1dc:	f240 809d 	bls.w	801e31a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801e1e0:	b963      	cbnz	r3, 801e1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801e1e2:	9b00      	ldr	r3, [sp, #0]
 801e1e4:	781a      	ldrb	r2, [r3, #0]
 801e1e6:	0993      	lsrs	r3, r2, #6
 801e1e8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801e1ec:	9202      	str	r2, [sp, #8]
 801e1ee:	1e5a      	subs	r2, r3, #1
 801e1f0:	2a02      	cmp	r2, #2
 801e1f2:	d815      	bhi.n	801e220 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801e1f4:	9a00      	ldr	r2, [sp, #0]
 801e1f6:	3201      	adds	r2, #1
 801e1f8:	9200      	str	r2, [sp, #0]
 801e1fa:	b29b      	uxth	r3, r3
 801e1fc:	b1b4      	cbz	r4, 801e22c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801e1fe:	429c      	cmp	r4, r3
 801e200:	bf95      	itete	ls
 801e202:	1b1c      	subls	r4, r3, r4
 801e204:	1ae4      	subhi	r4, r4, r3
 801e206:	fa1f fa84 	uxthls.w	sl, r4
 801e20a:	b2a4      	uxthhi	r4, r4
 801e20c:	bf87      	ittee	hi
 801e20e:	4671      	movhi	r1, lr
 801e210:	f04f 0a00 	movhi.w	sl, #0
 801e214:	fa1f f188 	uxthls.w	r1, r8
 801e218:	2400      	movls	r4, #0
 801e21a:	4653      	mov	r3, sl
 801e21c:	468e      	mov	lr, r1
 801e21e:	e7db      	b.n	801e1d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801e220:	9a00      	ldr	r2, [sp, #0]
 801e222:	9b00      	ldr	r3, [sp, #0]
 801e224:	3202      	adds	r2, #2
 801e226:	785b      	ldrb	r3, [r3, #1]
 801e228:	9200      	str	r2, [sp, #0]
 801e22a:	e7e7      	b.n	801e1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801e22c:	2202      	movs	r2, #2
 801e22e:	4615      	mov	r5, r2
 801e230:	9907      	ldr	r1, [sp, #28]
 801e232:	9a02      	ldr	r2, [sp, #8]
 801e234:	fb15 1202 	smlabb	r2, r5, r2, r1
 801e238:	9905      	ldr	r1, [sp, #20]
 801e23a:	4573      	cmp	r3, lr
 801e23c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801e240:	9a01      	ldr	r2, [sp, #4]
 801e242:	bf2b      	itete	cs
 801e244:	eba3 0a0e 	subcs.w	sl, r3, lr
 801e248:	ebae 0103 	subcc.w	r1, lr, r3
 801e24c:	46f1      	movcs	r9, lr
 801e24e:	4699      	movcc	r9, r3
 801e250:	bf27      	ittee	cs
 801e252:	fa1f fa8a 	uxthcs.w	sl, sl
 801e256:	4621      	movcs	r1, r4
 801e258:	b289      	uxthcc	r1, r1
 801e25a:	46a2      	movcc	sl, r4
 801e25c:	2aff      	cmp	r2, #255	; 0xff
 801e25e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e262:	d105      	bne.n	801e270 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801e264:	4481      	add	r9, r0
 801e266:	4581      	cmp	r9, r0
 801e268:	d045      	beq.n	801e2f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801e26a:	f820 cb02 	strh.w	ip, [r0], #2
 801e26e:	e7fa      	b.n	801e266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801e270:	9d03      	ldr	r5, [sp, #12]
 801e272:	ea4f 222c 	mov.w	r2, ip, asr #8
 801e276:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801e27a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e27e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e282:	436a      	muls	r2, r5
 801e284:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e288:	fa5f fc8c 	uxtb.w	ip, ip
 801e28c:	9208      	str	r2, [sp, #32]
 801e28e:	fb0b fb05 	mul.w	fp, fp, r5
 801e292:	fb0c fc05 	mul.w	ip, ip, r5
 801e296:	4481      	add	r9, r0
 801e298:	4581      	cmp	r9, r0
 801e29a:	d02c      	beq.n	801e2f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801e29c:	8802      	ldrh	r2, [r0, #0]
 801e29e:	9d04      	ldr	r5, [sp, #16]
 801e2a0:	9f04      	ldr	r7, [sp, #16]
 801e2a2:	1216      	asrs	r6, r2, #8
 801e2a4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e2a8:	fb16 f605 	smulbb	r6, r6, r5
 801e2ac:	9d08      	ldr	r5, [sp, #32]
 801e2ae:	442e      	add	r6, r5
 801e2b0:	10d5      	asrs	r5, r2, #3
 801e2b2:	00d2      	lsls	r2, r2, #3
 801e2b4:	b2d2      	uxtb	r2, r2
 801e2b6:	fb12 f207 	smulbb	r2, r2, r7
 801e2ba:	b2b6      	uxth	r6, r6
 801e2bc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e2c0:	4462      	add	r2, ip
 801e2c2:	fb15 f507 	smulbb	r5, r5, r7
 801e2c6:	b292      	uxth	r2, r2
 801e2c8:	1c77      	adds	r7, r6, #1
 801e2ca:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801e2ce:	1c57      	adds	r7, r2, #1
 801e2d0:	445d      	add	r5, fp
 801e2d2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801e2d6:	b2ad      	uxth	r5, r5
 801e2d8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e2dc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e2e0:	4316      	orrs	r6, r2
 801e2e2:	1c6a      	adds	r2, r5, #1
 801e2e4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801e2e8:	096d      	lsrs	r5, r5, #5
 801e2ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e2ee:	432e      	orrs	r6, r5
 801e2f0:	f820 6b02 	strh.w	r6, [r0], #2
 801e2f4:	e7d0      	b.n	801e298 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801e2f6:	4573      	cmp	r3, lr
 801e2f8:	d38f      	bcc.n	801e21a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801e2fa:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801e2fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e300:	fa1f f188 	uxth.w	r1, r8
 801e304:	1a64      	subs	r4, r4, r1
 801e306:	881b      	ldrh	r3, [r3, #0]
 801e308:	b2a4      	uxth	r4, r4
 801e30a:	2c00      	cmp	r4, #0
 801e30c:	eba3 0308 	sub.w	r3, r3, r8
 801e310:	bf18      	it	ne
 801e312:	2100      	movne	r1, #0
 801e314:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e318:	e77f      	b.n	801e21a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801e31a:	4b04      	ldr	r3, [pc, #16]	; (801e32c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801e31c:	6818      	ldr	r0, [r3, #0]
 801e31e:	6803      	ldr	r3, [r0, #0]
 801e320:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e322:	4798      	blx	r3
 801e324:	b00f      	add	sp, #60	; 0x3c
 801e326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e32a:	bf00      	nop
 801e32c:	2001384c 	.word	0x2001384c
 801e330:	20013846 	.word	0x20013846

0801e334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801e334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e338:	b09f      	sub	sp, #124	; 0x7c
 801e33a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801e33e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801e342:	9209      	str	r2, [sp, #36]	; 0x24
 801e344:	461d      	mov	r5, r3
 801e346:	4604      	mov	r4, r0
 801e348:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e34a:	2a00      	cmp	r2, #0
 801e34c:	f000 81eb 	beq.w	801e726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e350:	6828      	ldr	r0, [r5, #0]
 801e352:	6869      	ldr	r1, [r5, #4]
 801e354:	aa1a      	add	r2, sp, #104	; 0x68
 801e356:	c203      	stmia	r2!, {r0, r1}
 801e358:	6818      	ldr	r0, [r3, #0]
 801e35a:	6859      	ldr	r1, [r3, #4]
 801e35c:	aa1c      	add	r2, sp, #112	; 0x70
 801e35e:	c203      	stmia	r2!, {r0, r1}
 801e360:	a81a      	add	r0, sp, #104	; 0x68
 801e362:	f7f9 f9c1 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e366:	4629      	mov	r1, r5
 801e368:	a81c      	add	r0, sp, #112	; 0x70
 801e36a:	f7f9 fa01 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e36e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e372:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801e376:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801e37a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e37e:	bfd7      	itett	le
 801e380:	b29a      	uxthle	r2, r3
 801e382:	2201      	movgt	r2, #1
 801e384:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e388:	fb91 f2f2 	sdivle	r2, r1, r2
 801e38c:	9202      	str	r2, [sp, #8]
 801e38e:	9802      	ldr	r0, [sp, #8]
 801e390:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801e394:	fb92 f0f0 	sdiv	r0, r2, r0
 801e398:	b280      	uxth	r0, r0
 801e39a:	9010      	str	r0, [sp, #64]	; 0x40
 801e39c:	9902      	ldr	r1, [sp, #8]
 801e39e:	9802      	ldr	r0, [sp, #8]
 801e3a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e3a2:	4488      	add	r8, r1
 801e3a4:	fb05 2510 	mls	r5, r5, r0, r2
 801e3a8:	fb15 f503 	smulbb	r5, r5, r3
 801e3ac:	f108 38ff 	add.w	r8, r8, #4294967295
 801e3b0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e3b4:	fb98 f8f1 	sdiv	r8, r8, r1
 801e3b8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801e3bc:	440d      	add	r5, r1
 801e3be:	4419      	add	r1, r3
 801e3c0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801e3c4:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801e3c8:	441a      	add	r2, r3
 801e3ca:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801e3ce:	9304      	str	r3, [sp, #16]
 801e3d0:	4b95      	ldr	r3, [pc, #596]	; (801e628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e3d2:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801e3d6:	6818      	ldr	r0, [r3, #0]
 801e3d8:	6803      	ldr	r3, [r0, #0]
 801e3da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e3dc:	4798      	blx	r3
 801e3de:	4b93      	ldr	r3, [pc, #588]	; (801e62c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e3e0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801e3e4:	881a      	ldrh	r2, [r3, #0]
 801e3e6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e3ea:	9318      	str	r3, [sp, #96]	; 0x60
 801e3ec:	fb02 7101 	mla	r1, r2, r1, r7
 801e3f0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e3f4:	4356      	muls	r6, r2
 801e3f6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801e3fa:	f108 0801 	add.w	r8, r8, #1
 801e3fe:	920a      	str	r2, [sp, #40]	; 0x28
 801e400:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e402:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801e406:	930f      	str	r3, [sp, #60]	; 0x3c
 801e408:	fa1f f888 	uxth.w	r8, r8
 801e40c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801e410:	f108 0204 	add.w	r2, r8, #4
 801e414:	9211      	str	r2, [sp, #68]	; 0x44
 801e416:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e418:	4b85      	ldr	r3, [pc, #532]	; (801e630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e41a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801e41e:	b2ad      	uxth	r5, r5
 801e420:	9215      	str	r2, [sp, #84]	; 0x54
 801e422:	2d00      	cmp	r5, #0
 801e424:	9a04      	ldr	r2, [sp, #16]
 801e426:	f04f 0100 	mov.w	r1, #0
 801e42a:	bf18      	it	ne
 801e42c:	2200      	movne	r2, #0
 801e42e:	1b1b      	subs	r3, r3, r4
 801e430:	b292      	uxth	r2, r2
 801e432:	910d      	str	r1, [sp, #52]	; 0x34
 801e434:	9319      	str	r3, [sp, #100]	; 0x64
 801e436:	9910      	ldr	r1, [sp, #64]	; 0x40
 801e438:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e43a:	fa11 f383 	uxtah	r3, r1, r3
 801e43e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801e440:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801e444:	3304      	adds	r3, #4
 801e446:	9306      	str	r3, [sp, #24]
 801e448:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e44a:	4283      	cmp	r3, r0
 801e44c:	f240 8166 	bls.w	801e71c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801e450:	9902      	ldr	r1, [sp, #8]
 801e452:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801e456:	fbb5 f3f3 	udiv	r3, r5, r3
 801e45a:	1acb      	subs	r3, r1, r3
 801e45c:	b29b      	uxth	r3, r3
 801e45e:	9316      	str	r3, [sp, #88]	; 0x58
 801e460:	9b06      	ldr	r3, [sp, #24]
 801e462:	9e06      	ldr	r6, [sp, #24]
 801e464:	7859      	ldrb	r1, [r3, #1]
 801e466:	789b      	ldrb	r3, [r3, #2]
 801e468:	7836      	ldrb	r6, [r6, #0]
 801e46a:	9612      	str	r6, [sp, #72]	; 0x48
 801e46c:	021b      	lsls	r3, r3, #8
 801e46e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801e472:	9906      	ldr	r1, [sp, #24]
 801e474:	78c9      	ldrb	r1, [r1, #3]
 801e476:	430b      	orrs	r3, r1
 801e478:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801e47a:	3601      	adds	r6, #1
 801e47c:	4419      	add	r1, r3
 801e47e:	9605      	str	r6, [sp, #20]
 801e480:	1c4e      	adds	r6, r1, #1
 801e482:	9603      	str	r6, [sp, #12]
 801e484:	7849      	ldrb	r1, [r1, #1]
 801e486:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801e488:	0209      	lsls	r1, r1, #8
 801e48a:	5cf3      	ldrb	r3, [r6, r3]
 801e48c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801e490:	4319      	orrs	r1, r3
 801e492:	b28b      	uxth	r3, r1
 801e494:	930c      	str	r3, [sp, #48]	; 0x30
 801e496:	2300      	movs	r3, #0
 801e498:	f04f 0a01 	mov.w	sl, #1
 801e49c:	9307      	str	r3, [sp, #28]
 801e49e:	469c      	mov	ip, r3
 801e4a0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801e4a4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801e4a8:	46d3      	mov	fp, sl
 801e4aa:	4657      	mov	r7, sl
 801e4ac:	930e      	str	r3, [sp, #56]	; 0x38
 801e4ae:	2d00      	cmp	r5, #0
 801e4b0:	d07e      	beq.n	801e5b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801e4b2:	42af      	cmp	r7, r5
 801e4b4:	d26e      	bcs.n	801e594 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801e4b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e4b8:	9201      	str	r2, [sp, #4]
 801e4ba:	1bed      	subs	r5, r5, r7
 801e4bc:	4283      	cmp	r3, r0
 801e4be:	b2ad      	uxth	r5, r5
 801e4c0:	d802      	bhi.n	801e4c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801e4c2:	e073      	b.n	801e5ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801e4c4:	2b00      	cmp	r3, #0
 801e4c6:	d15f      	bne.n	801e588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801e4c8:	9b03      	ldr	r3, [sp, #12]
 801e4ca:	785b      	ldrb	r3, [r3, #1]
 801e4cc:	f1cb 0207 	rsb	r2, fp, #7
 801e4d0:	4093      	lsls	r3, r2
 801e4d2:	005b      	lsls	r3, r3, #1
 801e4d4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e4d8:	9b03      	ldr	r3, [sp, #12]
 801e4da:	781b      	ldrb	r3, [r3, #0]
 801e4dc:	fa43 f30b 	asr.w	r3, r3, fp
 801e4e0:	b2db      	uxtb	r3, r3
 801e4e2:	4313      	orrs	r3, r2
 801e4e4:	f10b 0201 	add.w	r2, fp, #1
 801e4e8:	fa5f fb82 	uxtb.w	fp, r2
 801e4ec:	9a03      	ldr	r2, [sp, #12]
 801e4ee:	f1bb 0f08 	cmp.w	fp, #8
 801e4f2:	bf15      	itete	ne
 801e4f4:	3201      	addne	r2, #1
 801e4f6:	3202      	addeq	r2, #2
 801e4f8:	9203      	strne	r2, [sp, #12]
 801e4fa:	9203      	streq	r2, [sp, #12]
 801e4fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e4fe:	b29f      	uxth	r7, r3
 801e500:	bf08      	it	eq
 801e502:	f04f 0b00 	moveq.w	fp, #0
 801e506:	42ba      	cmp	r2, r7
 801e508:	d309      	bcc.n	801e51e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e50a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801e50e:	2301      	movs	r3, #1
 801e510:	9a05      	ldr	r2, [sp, #20]
 801e512:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801e516:	d30e      	bcc.n	801e536 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801e518:	469a      	mov	sl, r3
 801e51a:	2600      	movs	r6, #0
 801e51c:	e035      	b.n	801e58a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801e51e:	9b05      	ldr	r3, [sp, #20]
 801e520:	429f      	cmp	r7, r3
 801e522:	d318      	bcc.n	801e556 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801e524:	eb04 030a 	add.w	r3, r4, sl
 801e528:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801e52c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801e530:	f10a 0301 	add.w	r3, sl, #1
 801e534:	b29b      	uxth	r3, r3
 801e536:	9a05      	ldr	r2, [sp, #20]
 801e538:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801e53c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e53e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801e542:	7116      	strb	r6, [r2, #4]
 801e544:	f10a 0601 	add.w	r6, sl, #1
 801e548:	80d1      	strh	r1, [r2, #6]
 801e54a:	7156      	strb	r6, [r2, #5]
 801e54c:	9a05      	ldr	r2, [sp, #20]
 801e54e:	3201      	adds	r2, #1
 801e550:	b292      	uxth	r2, r2
 801e552:	9205      	str	r2, [sp, #20]
 801e554:	e7e0      	b.n	801e518 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801e556:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801e55a:	463a      	mov	r2, r7
 801e55c:	795b      	ldrb	r3, [r3, #5]
 801e55e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801e562:	4426      	add	r6, r4
 801e564:	9919      	ldr	r1, [sp, #100]	; 0x64
 801e566:	eb01 0c06 	add.w	ip, r1, r6
 801e56a:	f1bc 0f00 	cmp.w	ip, #0
 801e56e:	dd07      	ble.n	801e580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801e570:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801e574:	f892 c004 	ldrb.w	ip, [r2, #4]
 801e578:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801e57c:	88d2      	ldrh	r2, [r2, #6]
 801e57e:	e7f1      	b.n	801e564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801e580:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801e584:	b29b      	uxth	r3, r3
 801e586:	e7c3      	b.n	801e510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801e588:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801e58a:	970c      	str	r7, [sp, #48]	; 0x30
 801e58c:	9a01      	ldr	r2, [sp, #4]
 801e58e:	46b4      	mov	ip, r6
 801e590:	461f      	mov	r7, r3
 801e592:	e78c      	b.n	801e4ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801e594:	1b7b      	subs	r3, r7, r5
 801e596:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e59a:	9201      	str	r2, [sp, #4]
 801e59c:	eb0c 0605 	add.w	r6, ip, r5
 801e5a0:	b29b      	uxth	r3, r3
 801e5a2:	b2b6      	uxth	r6, r6
 801e5a4:	2500      	movs	r5, #0
 801e5a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e5a8:	4282      	cmp	r2, r0
 801e5aa:	d88b      	bhi.n	801e4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801e5ac:	9a01      	ldr	r2, [sp, #4]
 801e5ae:	e74b      	b.n	801e448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801e5b0:	4297      	cmp	r7, r2
 801e5b2:	d332      	bcc.n	801e61a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801e5b4:	1abb      	subs	r3, r7, r2
 801e5b6:	b29b      	uxth	r3, r3
 801e5b8:	9208      	str	r2, [sp, #32]
 801e5ba:	9501      	str	r5, [sp, #4]
 801e5bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e5be:	29ff      	cmp	r1, #255	; 0xff
 801e5c0:	9908      	ldr	r1, [sp, #32]
 801e5c2:	eb0c 0601 	add.w	r6, ip, r1
 801e5c6:	d135      	bne.n	801e634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801e5c8:	f1a0 0e02 	sub.w	lr, r0, #2
 801e5cc:	b2b6      	uxth	r6, r6
 801e5ce:	45b4      	cmp	ip, r6
 801e5d0:	f040 808c 	bne.w	801e6ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801e5d4:	9908      	ldr	r1, [sp, #32]
 801e5d6:	4297      	cmp	r7, r2
 801e5d8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e5dc:	d3e2      	bcc.n	801e5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801e5de:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e5e0:	9904      	ldr	r1, [sp, #16]
 801e5e2:	8812      	ldrh	r2, [r2, #0]
 801e5e4:	1a52      	subs	r2, r2, r1
 801e5e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e5ea:	9a07      	ldr	r2, [sp, #28]
 801e5ec:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e5ee:	3201      	adds	r2, #1
 801e5f0:	428a      	cmp	r2, r1
 801e5f2:	9207      	str	r2, [sp, #28]
 801e5f4:	f040 8087 	bne.w	801e706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801e5f8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e5fc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801e600:	9b04      	ldr	r3, [sp, #16]
 801e602:	1bed      	subs	r5, r5, r7
 801e604:	b2ad      	uxth	r5, r5
 801e606:	2d00      	cmp	r5, #0
 801e608:	bf08      	it	eq
 801e60a:	461a      	moveq	r2, r3
 801e60c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e60e:	bf18      	it	ne
 801e610:	2200      	movne	r2, #0
 801e612:	3301      	adds	r3, #1
 801e614:	930d      	str	r3, [sp, #52]	; 0x34
 801e616:	b292      	uxth	r2, r2
 801e618:	e70d      	b.n	801e436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801e61a:	1bd1      	subs	r1, r2, r7
 801e61c:	b28b      	uxth	r3, r1
 801e61e:	9301      	str	r3, [sp, #4]
 801e620:	9708      	str	r7, [sp, #32]
 801e622:	462b      	mov	r3, r5
 801e624:	e7ca      	b.n	801e5bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801e626:	bf00      	nop
 801e628:	2001384c 	.word	0x2001384c
 801e62c:	20013846 	.word	0x20013846
 801e630:	fffff7fb 	.word	0xfffff7fb
 801e634:	b2b6      	uxth	r6, r6
 801e636:	900b      	str	r0, [sp, #44]	; 0x2c
 801e638:	45b4      	cmp	ip, r6
 801e63a:	d0cb      	beq.n	801e5d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801e63c:	f10c 0101 	add.w	r1, ip, #1
 801e640:	44a4      	add	ip, r4
 801e642:	9117      	str	r1, [sp, #92]	; 0x5c
 801e644:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801e648:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e64a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801e64e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801e650:	f8b1 c000 	ldrh.w	ip, [r1]
 801e654:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e656:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801e65a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e65e:	fb1e fe01 	smulbb	lr, lr, r1
 801e662:	ea4f 2825 	mov.w	r8, r5, asr #8
 801e666:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801e668:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e66c:	fb08 e801 	mla	r8, r8, r1, lr
 801e670:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801e674:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e676:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e67a:	fb19 f901 	smulbb	r9, r9, r1
 801e67e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801e682:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801e684:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e688:	fb0e 9e01 	mla	lr, lr, r1, r9
 801e68c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e690:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e692:	fa5f fc8c 	uxtb.w	ip, ip
 801e696:	fb1c fc01 	smulbb	ip, ip, r1
 801e69a:	00ed      	lsls	r5, r5, #3
 801e69c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801e69e:	b2ed      	uxtb	r5, r5
 801e6a0:	fb05 c501 	mla	r5, r5, r1, ip
 801e6a4:	fa1f f888 	uxth.w	r8, r8
 801e6a8:	fa1f fe8e 	uxth.w	lr, lr
 801e6ac:	b2ad      	uxth	r5, r5
 801e6ae:	f108 0c01 	add.w	ip, r8, #1
 801e6b2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801e6b6:	f10e 0901 	add.w	r9, lr, #1
 801e6ba:	f105 0c01 	add.w	ip, r5, #1
 801e6be:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801e6c2:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801e6c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e6ca:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801e6ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e6d2:	ea4c 0808 	orr.w	r8, ip, r8
 801e6d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801e6d8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801e6dc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e6e0:	ea48 0809 	orr.w	r8, r8, r9
 801e6e4:	f821 8b02 	strh.w	r8, [r1], #2
 801e6e8:	910b      	str	r1, [sp, #44]	; 0x2c
 801e6ea:	e7a5      	b.n	801e638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801e6ec:	f10c 0801 	add.w	r8, ip, #1
 801e6f0:	44a4      	add	ip, r4
 801e6f2:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e6f4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801e6f8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801e6fc:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801e700:	fa1f fc88 	uxth.w	ip, r8
 801e704:	e763      	b.n	801e5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801e706:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e70a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e70e:	1aad      	subs	r5, r5, r2
 801e710:	b2ad      	uxth	r5, r5
 801e712:	2d00      	cmp	r5, #0
 801e714:	bf18      	it	ne
 801e716:	2200      	movne	r2, #0
 801e718:	9201      	str	r2, [sp, #4]
 801e71a:	e744      	b.n	801e5a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801e71c:	4b03      	ldr	r3, [pc, #12]	; (801e72c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801e71e:	6818      	ldr	r0, [r3, #0]
 801e720:	6803      	ldr	r3, [r0, #0]
 801e722:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e724:	4798      	blx	r3
 801e726:	b01f      	add	sp, #124	; 0x7c
 801e728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e72c:	2001384c 	.word	0x2001384c

0801e730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801e730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e734:	b08f      	sub	sp, #60	; 0x3c
 801e736:	461c      	mov	r4, r3
 801e738:	9203      	str	r2, [sp, #12]
 801e73a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e73e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e740:	9202      	str	r2, [sp, #8]
 801e742:	460f      	mov	r7, r1
 801e744:	2a00      	cmp	r2, #0
 801e746:	f000 8128 	beq.w	801e99a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801e74a:	6820      	ldr	r0, [r4, #0]
 801e74c:	6861      	ldr	r1, [r4, #4]
 801e74e:	aa0a      	add	r2, sp, #40	; 0x28
 801e750:	c203      	stmia	r2!, {r0, r1}
 801e752:	6818      	ldr	r0, [r3, #0]
 801e754:	6859      	ldr	r1, [r3, #4]
 801e756:	aa0c      	add	r2, sp, #48	; 0x30
 801e758:	c203      	stmia	r2!, {r0, r1}
 801e75a:	a80a      	add	r0, sp, #40	; 0x28
 801e75c:	f7f8 ffc4 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e760:	4621      	mov	r1, r4
 801e762:	a80c      	add	r0, sp, #48	; 0x30
 801e764:	f7f9 f804 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e768:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e76c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801e770:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801e774:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801e778:	bfde      	ittt	le
 801e77a:	b2b3      	uxthle	r3, r6
 801e77c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801e780:	fb92 f3f3 	sdivle	r3, r2, r3
 801e784:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e788:	bfc8      	it	gt
 801e78a:	2301      	movgt	r3, #1
 801e78c:	fb92 f1f3 	sdiv	r1, r2, r3
 801e790:	fa1f fc81 	uxth.w	ip, r1
 801e794:	fb0c 2413 	mls	r4, ip, r3, r2
 801e798:	fb14 f406 	smulbb	r4, r4, r6
 801e79c:	441d      	add	r5, r3
 801e79e:	4404      	add	r4, r0
 801e7a0:	4661      	mov	r1, ip
 801e7a2:	3d01      	subs	r5, #1
 801e7a4:	b2a4      	uxth	r4, r4
 801e7a6:	fb95 f5f3 	sdiv	r5, r5, r3
 801e7aa:	b121      	cbz	r1, 801e7b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801e7ac:	9b03      	ldr	r3, [sp, #12]
 801e7ae:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801e7b2:	ba1b      	rev	r3, r3
 801e7b4:	441f      	add	r7, r3
 801e7b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801e7ba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801e7be:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e7c2:	4418      	add	r0, r3
 801e7c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e7c8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801e7cc:	441a      	add	r2, r3
 801e7ce:	4b74      	ldr	r3, [pc, #464]	; (801e9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801e7d0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801e7d4:	6818      	ldr	r0, [r3, #0]
 801e7d6:	6803      	ldr	r3, [r0, #0]
 801e7d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e7da:	4798      	blx	r3
 801e7dc:	4a71      	ldr	r2, [pc, #452]	; (801e9a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801e7de:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801e7e2:	8813      	ldrh	r3, [r2, #0]
 801e7e4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801e7e8:	9209      	str	r2, [sp, #36]	; 0x24
 801e7ea:	fb03 c101 	mla	r1, r3, r1, ip
 801e7ee:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e7f2:	4373      	muls	r3, r6
 801e7f4:	b2ad      	uxth	r5, r5
 801e7f6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e7fa:	00ad      	lsls	r5, r5, #2
 801e7fc:	2c00      	cmp	r4, #0
 801e7fe:	9304      	str	r3, [sp, #16]
 801e800:	f105 0304 	add.w	r3, r5, #4
 801e804:	9305      	str	r3, [sp, #20]
 801e806:	bf0c      	ite	eq
 801e808:	46c8      	moveq	r8, r9
 801e80a:	f04f 0800 	movne.w	r8, #0
 801e80e:	2300      	movs	r3, #0
 801e810:	fa1f f888 	uxth.w	r8, r8
 801e814:	9301      	str	r3, [sp, #4]
 801e816:	9a04      	ldr	r2, [sp, #16]
 801e818:	4282      	cmp	r2, r0
 801e81a:	f240 80b9 	bls.w	801e990 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801e81e:	b95b      	cbnz	r3, 801e838 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801e820:	783a      	ldrb	r2, [r7, #0]
 801e822:	0993      	lsrs	r3, r2, #6
 801e824:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801e828:	9201      	str	r2, [sp, #4]
 801e82a:	1e5a      	subs	r2, r3, #1
 801e82c:	2a02      	cmp	r2, #2
 801e82e:	bf8d      	iteet	hi
 801e830:	787b      	ldrbhi	r3, [r7, #1]
 801e832:	3701      	addls	r7, #1
 801e834:	b29b      	uxthls	r3, r3
 801e836:	3702      	addhi	r7, #2
 801e838:	b184      	cbz	r4, 801e85c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801e83a:	429c      	cmp	r4, r3
 801e83c:	bf95      	itete	ls
 801e83e:	1b1c      	subls	r4, r3, r4
 801e840:	1ae4      	subhi	r4, r4, r3
 801e842:	fa1f fa84 	uxthls.w	sl, r4
 801e846:	b2a4      	uxthhi	r4, r4
 801e848:	bf87      	ittee	hi
 801e84a:	46c4      	movhi	ip, r8
 801e84c:	f04f 0a00 	movhi.w	sl, #0
 801e850:	fa1f fc89 	uxthls.w	ip, r9
 801e854:	2400      	movls	r4, #0
 801e856:	4653      	mov	r3, sl
 801e858:	46e0      	mov	r8, ip
 801e85a:	e7dc      	b.n	801e816 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801e85c:	2204      	movs	r2, #4
 801e85e:	4615      	mov	r5, r2
 801e860:	9905      	ldr	r1, [sp, #20]
 801e862:	9a01      	ldr	r2, [sp, #4]
 801e864:	fb15 1202 	smlabb	r2, r5, r2, r1
 801e868:	9903      	ldr	r1, [sp, #12]
 801e86a:	588a      	ldr	r2, [r1, r2]
 801e86c:	4543      	cmp	r3, r8
 801e86e:	bf27      	ittee	cs
 801e870:	eba3 0a08 	subcs.w	sl, r3, r8
 801e874:	46c6      	movcs	lr, r8
 801e876:	eba8 0c03 	subcc.w	ip, r8, r3
 801e87a:	469e      	movcc	lr, r3
 801e87c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801e880:	bf27      	ittee	cs
 801e882:	fa1f fa8a 	uxthcs.w	sl, sl
 801e886:	46a4      	movcs	ip, r4
 801e888:	fa1f fc8c 	uxthcc.w	ip, ip
 801e88c:	46a2      	movcc	sl, r4
 801e88e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801e892:	2900      	cmp	r1, #0
 801e894:	d066      	beq.n	801e964 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801e896:	29ff      	cmp	r1, #255	; 0xff
 801e898:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801e89c:	d114      	bne.n	801e8c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801e89e:	9d02      	ldr	r5, [sp, #8]
 801e8a0:	2dff      	cmp	r5, #255	; 0xff
 801e8a2:	d111      	bne.n	801e8c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801e8a4:	0951      	lsrs	r1, r2, #5
 801e8a6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e8aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e8ae:	f026 0607 	bic.w	r6, r6, #7
 801e8b2:	430e      	orrs	r6, r1
 801e8b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e8b8:	4316      	orrs	r6, r2
 801e8ba:	b2b6      	uxth	r6, r6
 801e8bc:	4486      	add	lr, r0
 801e8be:	4586      	cmp	lr, r0
 801e8c0:	d051      	beq.n	801e966 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e8c2:	f820 6b02 	strh.w	r6, [r0], #2
 801e8c6:	e7fa      	b.n	801e8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801e8c8:	9d02      	ldr	r5, [sp, #8]
 801e8ca:	4369      	muls	r1, r5
 801e8cc:	1c4d      	adds	r5, r1, #1
 801e8ce:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801e8d2:	122d      	asrs	r5, r5, #8
 801e8d4:	ea6f 0b05 	mvn.w	fp, r5
 801e8d8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801e8dc:	b2ad      	uxth	r5, r5
 801e8de:	b2f6      	uxtb	r6, r6
 801e8e0:	b2d2      	uxtb	r2, r2
 801e8e2:	fb11 f105 	smulbb	r1, r1, r5
 801e8e6:	fb16 f605 	smulbb	r6, r6, r5
 801e8ea:	fb12 f205 	smulbb	r2, r2, r5
 801e8ee:	b289      	uxth	r1, r1
 801e8f0:	b2b6      	uxth	r6, r6
 801e8f2:	b292      	uxth	r2, r2
 801e8f4:	9106      	str	r1, [sp, #24]
 801e8f6:	9607      	str	r6, [sp, #28]
 801e8f8:	9208      	str	r2, [sp, #32]
 801e8fa:	4486      	add	lr, r0
 801e8fc:	fa5f fb8b 	uxtb.w	fp, fp
 801e900:	4586      	cmp	lr, r0
 801e902:	d030      	beq.n	801e966 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e904:	8802      	ldrh	r2, [r0, #0]
 801e906:	9906      	ldr	r1, [sp, #24]
 801e908:	1216      	asrs	r6, r2, #8
 801e90a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e90e:	10d5      	asrs	r5, r2, #3
 801e910:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e914:	fb06 160b 	mla	r6, r6, fp, r1
 801e918:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e91c:	9907      	ldr	r1, [sp, #28]
 801e91e:	00d2      	lsls	r2, r2, #3
 801e920:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e924:	fb05 150b 	mla	r5, r5, fp, r1
 801e928:	b2d2      	uxtb	r2, r2
 801e92a:	9908      	ldr	r1, [sp, #32]
 801e92c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e930:	b2b6      	uxth	r6, r6
 801e932:	fb02 120b 	mla	r2, r2, fp, r1
 801e936:	b292      	uxth	r2, r2
 801e938:	1c71      	adds	r1, r6, #1
 801e93a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801e93e:	1c51      	adds	r1, r2, #1
 801e940:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e944:	b2ad      	uxth	r5, r5
 801e946:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e94a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e94e:	4316      	orrs	r6, r2
 801e950:	1c6a      	adds	r2, r5, #1
 801e952:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801e956:	096d      	lsrs	r5, r5, #5
 801e958:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e95c:	432e      	orrs	r6, r5
 801e95e:	f820 6b02 	strh.w	r6, [r0], #2
 801e962:	e7cd      	b.n	801e900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801e964:	4470      	add	r0, lr
 801e966:	4543      	cmp	r3, r8
 801e968:	f4ff af75 	bcc.w	801e856 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801e96c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801e970:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e972:	fa1f fc89 	uxth.w	ip, r9
 801e976:	eba4 040c 	sub.w	r4, r4, ip
 801e97a:	881b      	ldrh	r3, [r3, #0]
 801e97c:	b2a4      	uxth	r4, r4
 801e97e:	2c00      	cmp	r4, #0
 801e980:	eba3 0309 	sub.w	r3, r3, r9
 801e984:	bf18      	it	ne
 801e986:	f04f 0c00 	movne.w	ip, #0
 801e98a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e98e:	e762      	b.n	801e856 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801e990:	4b03      	ldr	r3, [pc, #12]	; (801e9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801e992:	6818      	ldr	r0, [r3, #0]
 801e994:	6803      	ldr	r3, [r0, #0]
 801e996:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e998:	4798      	blx	r3
 801e99a:	b00f      	add	sp, #60	; 0x3c
 801e99c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e9a0:	2001384c 	.word	0x2001384c
 801e9a4:	20013846 	.word	0x20013846

0801e9a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e9a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9ac:	b093      	sub	sp, #76	; 0x4c
 801e9ae:	461c      	mov	r4, r3
 801e9b0:	9205      	str	r2, [sp, #20]
 801e9b2:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801e9b6:	9101      	str	r1, [sp, #4]
 801e9b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e9ba:	9202      	str	r2, [sp, #8]
 801e9bc:	2a00      	cmp	r2, #0
 801e9be:	f000 812c 	beq.w	801ec1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e9c2:	6820      	ldr	r0, [r4, #0]
 801e9c4:	6861      	ldr	r1, [r4, #4]
 801e9c6:	aa0e      	add	r2, sp, #56	; 0x38
 801e9c8:	c203      	stmia	r2!, {r0, r1}
 801e9ca:	6818      	ldr	r0, [r3, #0]
 801e9cc:	6859      	ldr	r1, [r3, #4]
 801e9ce:	aa10      	add	r2, sp, #64	; 0x40
 801e9d0:	c203      	stmia	r2!, {r0, r1}
 801e9d2:	a80e      	add	r0, sp, #56	; 0x38
 801e9d4:	f7f8 fe88 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e9d8:	4621      	mov	r1, r4
 801e9da:	a810      	add	r0, sp, #64	; 0x40
 801e9dc:	f7f8 fec8 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e9e0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e9e4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801e9e8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801e9ec:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801e9f0:	bfde      	ittt	le
 801e9f2:	b2b3      	uxthle	r3, r6
 801e9f4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801e9f8:	fb92 f3f3 	sdivle	r3, r2, r3
 801e9fc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ea00:	bfc8      	it	gt
 801ea02:	2301      	movgt	r3, #1
 801ea04:	fb92 f1f3 	sdiv	r1, r2, r3
 801ea08:	fa1f fc81 	uxth.w	ip, r1
 801ea0c:	fb0c 2413 	mls	r4, ip, r3, r2
 801ea10:	fb14 f406 	smulbb	r4, r4, r6
 801ea14:	441d      	add	r5, r3
 801ea16:	4404      	add	r4, r0
 801ea18:	4661      	mov	r1, ip
 801ea1a:	3d01      	subs	r5, #1
 801ea1c:	b2a4      	uxth	r4, r4
 801ea1e:	fb95 f5f3 	sdiv	r5, r5, r3
 801ea22:	b131      	cbz	r1, 801ea32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801ea24:	9b05      	ldr	r3, [sp, #20]
 801ea26:	9901      	ldr	r1, [sp, #4]
 801ea28:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ea2c:	ba1b      	rev	r3, r3
 801ea2e:	4419      	add	r1, r3
 801ea30:	9101      	str	r1, [sp, #4]
 801ea32:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801ea36:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ea3a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801ea3e:	4418      	add	r0, r3
 801ea40:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801ea44:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801ea48:	441a      	add	r2, r3
 801ea4a:	4b75      	ldr	r3, [pc, #468]	; (801ec20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ea4c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801ea50:	6818      	ldr	r0, [r3, #0]
 801ea52:	6803      	ldr	r3, [r0, #0]
 801ea54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ea56:	4798      	blx	r3
 801ea58:	4972      	ldr	r1, [pc, #456]	; (801ec24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801ea5a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801ea5e:	880b      	ldrh	r3, [r1, #0]
 801ea60:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ea64:	910d      	str	r1, [sp, #52]	; 0x34
 801ea66:	fb03 c202 	mla	r2, r3, r2, ip
 801ea6a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ea6e:	4373      	muls	r3, r6
 801ea70:	b2ad      	uxth	r5, r5
 801ea72:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ea76:	00ad      	lsls	r5, r5, #2
 801ea78:	9308      	str	r3, [sp, #32]
 801ea7a:	1d2b      	adds	r3, r5, #4
 801ea7c:	9309      	str	r3, [sp, #36]	; 0x24
 801ea7e:	9b02      	ldr	r3, [sp, #8]
 801ea80:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ea84:	9106      	str	r1, [sp, #24]
 801ea86:	43da      	mvns	r2, r3
 801ea88:	2c00      	cmp	r4, #0
 801ea8a:	bf0c      	ite	eq
 801ea8c:	46dc      	moveq	ip, fp
 801ea8e:	f04f 0c00 	movne.w	ip, #0
 801ea92:	2300      	movs	r3, #0
 801ea94:	b2d2      	uxtb	r2, r2
 801ea96:	fa1f fc8c 	uxth.w	ip, ip
 801ea9a:	9303      	str	r3, [sp, #12]
 801ea9c:	9207      	str	r2, [sp, #28]
 801ea9e:	9a08      	ldr	r2, [sp, #32]
 801eaa0:	4282      	cmp	r2, r0
 801eaa2:	f240 80b5 	bls.w	801ec10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801eaa6:	b963      	cbnz	r3, 801eac2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801eaa8:	9b01      	ldr	r3, [sp, #4]
 801eaaa:	781a      	ldrb	r2, [r3, #0]
 801eaac:	0993      	lsrs	r3, r2, #6
 801eaae:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801eab2:	9203      	str	r2, [sp, #12]
 801eab4:	1e5a      	subs	r2, r3, #1
 801eab6:	2a02      	cmp	r2, #2
 801eab8:	d815      	bhi.n	801eae6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801eaba:	9a01      	ldr	r2, [sp, #4]
 801eabc:	3201      	adds	r2, #1
 801eabe:	9201      	str	r2, [sp, #4]
 801eac0:	b29b      	uxth	r3, r3
 801eac2:	b1b4      	cbz	r4, 801eaf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801eac4:	429c      	cmp	r4, r3
 801eac6:	bf95      	itete	ls
 801eac8:	1b1c      	subls	r4, r3, r4
 801eaca:	1ae4      	subhi	r4, r4, r3
 801eacc:	fa1f f884 	uxthls.w	r8, r4
 801ead0:	b2a4      	uxthhi	r4, r4
 801ead2:	bf87      	ittee	hi
 801ead4:	4666      	movhi	r6, ip
 801ead6:	f04f 0800 	movhi.w	r8, #0
 801eada:	fa1f f68b 	uxthls.w	r6, fp
 801eade:	2400      	movls	r4, #0
 801eae0:	4643      	mov	r3, r8
 801eae2:	46b4      	mov	ip, r6
 801eae4:	e7db      	b.n	801ea9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801eae6:	9a01      	ldr	r2, [sp, #4]
 801eae8:	9b01      	ldr	r3, [sp, #4]
 801eaea:	3202      	adds	r2, #2
 801eaec:	785b      	ldrb	r3, [r3, #1]
 801eaee:	9201      	str	r2, [sp, #4]
 801eaf0:	e7e7      	b.n	801eac2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801eaf2:	2203      	movs	r2, #3
 801eaf4:	4615      	mov	r5, r2
 801eaf6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801eaf8:	9a03      	ldr	r2, [sp, #12]
 801eafa:	fb15 1202 	smlabb	r2, r5, r2, r1
 801eafe:	9905      	ldr	r1, [sp, #20]
 801eb00:	4563      	cmp	r3, ip
 801eb02:	eb01 0502 	add.w	r5, r1, r2
 801eb06:	9902      	ldr	r1, [sp, #8]
 801eb08:	bf29      	itett	cs
 801eb0a:	eba3 080c 	subcs.w	r8, r3, ip
 801eb0e:	ebac 0603 	subcc.w	r6, ip, r3
 801eb12:	fa1f f888 	uxthcs.w	r8, r8
 801eb16:	46e1      	movcs	r9, ip
 801eb18:	bf2f      	iteee	cs
 801eb1a:	4626      	movcs	r6, r4
 801eb1c:	b2b6      	uxthcc	r6, r6
 801eb1e:	4699      	movcc	r9, r3
 801eb20:	46a0      	movcc	r8, r4
 801eb22:	29ff      	cmp	r1, #255	; 0xff
 801eb24:	d04a      	beq.n	801ebbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801eb26:	9f06      	ldr	r7, [sp, #24]
 801eb28:	78a9      	ldrb	r1, [r5, #2]
 801eb2a:	9004      	str	r0, [sp, #16]
 801eb2c:	4379      	muls	r1, r7
 801eb2e:	910a      	str	r1, [sp, #40]	; 0x28
 801eb30:	7869      	ldrb	r1, [r5, #1]
 801eb32:	4379      	muls	r1, r7
 801eb34:	910b      	str	r1, [sp, #44]	; 0x2c
 801eb36:	9905      	ldr	r1, [sp, #20]
 801eb38:	5c8a      	ldrb	r2, [r1, r2]
 801eb3a:	437a      	muls	r2, r7
 801eb3c:	920c      	str	r2, [sp, #48]	; 0x30
 801eb3e:	46ca      	mov	sl, r9
 801eb40:	f1ba 0f00 	cmp.w	sl, #0
 801eb44:	d03d      	beq.n	801ebc2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801eb46:	9a04      	ldr	r2, [sp, #16]
 801eb48:	9f07      	ldr	r7, [sp, #28]
 801eb4a:	8812      	ldrh	r2, [r2, #0]
 801eb4c:	1215      	asrs	r5, r2, #8
 801eb4e:	46be      	mov	lr, r7
 801eb50:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eb54:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801eb56:	10d1      	asrs	r1, r2, #3
 801eb58:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801eb5c:	fb05 750e 	mla	r5, r5, lr, r7
 801eb60:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801eb64:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801eb66:	00d2      	lsls	r2, r2, #3
 801eb68:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801eb6c:	fb01 710e 	mla	r1, r1, lr, r7
 801eb70:	b2d2      	uxtb	r2, r2
 801eb72:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801eb74:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801eb78:	b2ad      	uxth	r5, r5
 801eb7a:	fb02 720e 	mla	r2, r2, lr, r7
 801eb7e:	b292      	uxth	r2, r2
 801eb80:	f105 0e01 	add.w	lr, r5, #1
 801eb84:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801eb88:	f102 0e01 	add.w	lr, r2, #1
 801eb8c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801eb90:	b289      	uxth	r1, r1
 801eb92:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eb96:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801eb9a:	4315      	orrs	r5, r2
 801eb9c:	1c4a      	adds	r2, r1, #1
 801eb9e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801eba2:	0949      	lsrs	r1, r1, #5
 801eba4:	9a04      	ldr	r2, [sp, #16]
 801eba6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ebaa:	430d      	orrs	r5, r1
 801ebac:	f822 5b02 	strh.w	r5, [r2], #2
 801ebb0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ebb4:	9204      	str	r2, [sp, #16]
 801ebb6:	fa1f fa8a 	uxth.w	sl, sl
 801ebba:	e7c1      	b.n	801eb40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801ebbc:	4649      	mov	r1, r9
 801ebbe:	4686      	mov	lr, r0
 801ebc0:	b999      	cbnz	r1, 801ebea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ebc2:	4563      	cmp	r3, ip
 801ebc4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801ebc8:	d38a      	bcc.n	801eae0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ebca:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801ebce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ebd0:	fa1f f68b 	uxth.w	r6, fp
 801ebd4:	1ba4      	subs	r4, r4, r6
 801ebd6:	881b      	ldrh	r3, [r3, #0]
 801ebd8:	b2a4      	uxth	r4, r4
 801ebda:	2c00      	cmp	r4, #0
 801ebdc:	eba3 030b 	sub.w	r3, r3, fp
 801ebe0:	bf18      	it	ne
 801ebe2:	2600      	movne	r6, #0
 801ebe4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ebe8:	e77a      	b.n	801eae0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ebea:	78aa      	ldrb	r2, [r5, #2]
 801ebec:	4f0e      	ldr	r7, [pc, #56]	; (801ec28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801ebee:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801ebf2:	786a      	ldrb	r2, [r5, #1]
 801ebf4:	00d2      	lsls	r2, r2, #3
 801ebf6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ebfa:	ea4a 0202 	orr.w	r2, sl, r2
 801ebfe:	f895 a000 	ldrb.w	sl, [r5]
 801ec02:	3901      	subs	r1, #1
 801ec04:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801ec08:	f82e 2b02 	strh.w	r2, [lr], #2
 801ec0c:	b289      	uxth	r1, r1
 801ec0e:	e7d7      	b.n	801ebc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801ec10:	4b03      	ldr	r3, [pc, #12]	; (801ec20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ec12:	6818      	ldr	r0, [r3, #0]
 801ec14:	6803      	ldr	r3, [r0, #0]
 801ec16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ec18:	4798      	blx	r3
 801ec1a:	b013      	add	sp, #76	; 0x4c
 801ec1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec20:	2001384c 	.word	0x2001384c
 801ec24:	20013846 	.word	0x20013846
 801ec28:	fffff800 	.word	0xfffff800

0801ec2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ec2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec30:	b09d      	sub	sp, #116	; 0x74
 801ec32:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801ec36:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801ec3a:	920e      	str	r2, [sp, #56]	; 0x38
 801ec3c:	461c      	mov	r4, r3
 801ec3e:	4683      	mov	fp, r0
 801ec40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ec42:	2a00      	cmp	r2, #0
 801ec44:	f000 81e0 	beq.w	801f008 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801ec48:	6820      	ldr	r0, [r4, #0]
 801ec4a:	6861      	ldr	r1, [r4, #4]
 801ec4c:	aa18      	add	r2, sp, #96	; 0x60
 801ec4e:	c203      	stmia	r2!, {r0, r1}
 801ec50:	6818      	ldr	r0, [r3, #0]
 801ec52:	6859      	ldr	r1, [r3, #4]
 801ec54:	aa1a      	add	r2, sp, #104	; 0x68
 801ec56:	c203      	stmia	r2!, {r0, r1}
 801ec58:	a818      	add	r0, sp, #96	; 0x60
 801ec5a:	f7f8 fd45 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ec5e:	4621      	mov	r1, r4
 801ec60:	a81a      	add	r0, sp, #104	; 0x68
 801ec62:	f7f8 fd85 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ec66:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801ec6a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801ec6e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ec72:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ec76:	bfd7      	itett	le
 801ec78:	b29a      	uxthle	r2, r3
 801ec7a:	2201      	movgt	r2, #1
 801ec7c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ec80:	fb91 f2f2 	sdivle	r2, r1, r2
 801ec84:	9202      	str	r2, [sp, #8]
 801ec86:	9802      	ldr	r0, [sp, #8]
 801ec88:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801ec8c:	fb92 f0f0 	sdiv	r0, r2, r0
 801ec90:	b280      	uxth	r0, r0
 801ec92:	900f      	str	r0, [sp, #60]	; 0x3c
 801ec94:	9902      	ldr	r1, [sp, #8]
 801ec96:	9802      	ldr	r0, [sp, #8]
 801ec98:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ec9a:	440c      	add	r4, r1
 801ec9c:	fb05 2510 	mls	r5, r5, r0, r2
 801eca0:	fb15 f503 	smulbb	r5, r5, r3
 801eca4:	3c01      	subs	r4, #1
 801eca6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801ecaa:	fb94 f4f1 	sdiv	r4, r4, r1
 801ecae:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801ecb2:	440d      	add	r5, r1
 801ecb4:	4419      	add	r1, r3
 801ecb6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801ecba:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801ecbe:	441a      	add	r2, r3
 801ecc0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ecc4:	9306      	str	r3, [sp, #24]
 801ecc6:	4bb3      	ldr	r3, [pc, #716]	; (801ef94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801ecc8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801eccc:	6818      	ldr	r0, [r3, #0]
 801ecce:	6803      	ldr	r3, [r0, #0]
 801ecd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ecd2:	4798      	blx	r3
 801ecd4:	4bb0      	ldr	r3, [pc, #704]	; (801ef98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801ecd6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801ecda:	881a      	ldrh	r2, [r3, #0]
 801ecdc:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801ece0:	9316      	str	r3, [sp, #88]	; 0x58
 801ece2:	fb02 7101 	mla	r1, r2, r1, r7
 801ece6:	3401      	adds	r4, #1
 801ece8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801ecec:	b2a4      	uxth	r4, r4
 801ecee:	4356      	muls	r6, r2
 801ecf0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801ecf4:	00a4      	lsls	r4, r4, #2
 801ecf6:	920a      	str	r2, [sp, #40]	; 0x28
 801ecf8:	1d22      	adds	r2, r4, #4
 801ecfa:	b2ad      	uxth	r5, r5
 801ecfc:	9213      	str	r2, [sp, #76]	; 0x4c
 801ecfe:	4ba7      	ldr	r3, [pc, #668]	; (801ef9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801ed00:	9a06      	ldr	r2, [sp, #24]
 801ed02:	2d00      	cmp	r5, #0
 801ed04:	bf0c      	ite	eq
 801ed06:	4611      	moveq	r1, r2
 801ed08:	2100      	movne	r1, #0
 801ed0a:	2200      	movs	r2, #0
 801ed0c:	eba3 030b 	sub.w	r3, r3, fp
 801ed10:	b289      	uxth	r1, r1
 801ed12:	920d      	str	r2, [sp, #52]	; 0x34
 801ed14:	9317      	str	r3, [sp, #92]	; 0x5c
 801ed16:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ed18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ed1a:	fa12 f383 	uxtah	r3, r2, r3
 801ed1e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ed20:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ed24:	3304      	adds	r3, #4
 801ed26:	9308      	str	r3, [sp, #32]
 801ed28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed2a:	4543      	cmp	r3, r8
 801ed2c:	f240 8167 	bls.w	801effe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ed30:	9a02      	ldr	r2, [sp, #8]
 801ed32:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801ed36:	fbb5 f3f3 	udiv	r3, r5, r3
 801ed3a:	1ad3      	subs	r3, r2, r3
 801ed3c:	b29b      	uxth	r3, r3
 801ed3e:	9314      	str	r3, [sp, #80]	; 0x50
 801ed40:	9b08      	ldr	r3, [sp, #32]
 801ed42:	9808      	ldr	r0, [sp, #32]
 801ed44:	785a      	ldrb	r2, [r3, #1]
 801ed46:	789b      	ldrb	r3, [r3, #2]
 801ed48:	7800      	ldrb	r0, [r0, #0]
 801ed4a:	9010      	str	r0, [sp, #64]	; 0x40
 801ed4c:	021b      	lsls	r3, r3, #8
 801ed4e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ed52:	9a08      	ldr	r2, [sp, #32]
 801ed54:	78d2      	ldrb	r2, [r2, #3]
 801ed56:	4313      	orrs	r3, r2
 801ed58:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ed5a:	3001      	adds	r0, #1
 801ed5c:	441a      	add	r2, r3
 801ed5e:	9007      	str	r0, [sp, #28]
 801ed60:	1c50      	adds	r0, r2, #1
 801ed62:	9005      	str	r0, [sp, #20]
 801ed64:	7852      	ldrb	r2, [r2, #1]
 801ed66:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ed68:	0212      	lsls	r2, r2, #8
 801ed6a:	5cc3      	ldrb	r3, [r0, r3]
 801ed6c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ed70:	431a      	orrs	r2, r3
 801ed72:	b293      	uxth	r3, r2
 801ed74:	930b      	str	r3, [sp, #44]	; 0x2c
 801ed76:	2300      	movs	r3, #0
 801ed78:	9309      	str	r3, [sp, #36]	; 0x24
 801ed7a:	2301      	movs	r3, #1
 801ed7c:	9301      	str	r3, [sp, #4]
 801ed7e:	9304      	str	r3, [sp, #16]
 801ed80:	2300      	movs	r3, #0
 801ed82:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801ed86:	9303      	str	r3, [sp, #12]
 801ed88:	f04f 0e01 	mov.w	lr, #1
 801ed8c:	2d00      	cmp	r5, #0
 801ed8e:	d07c      	beq.n	801ee8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801ed90:	45ae      	cmp	lr, r5
 801ed92:	d26b      	bcs.n	801ee6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801ed94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed96:	eba5 050e 	sub.w	r5, r5, lr
 801ed9a:	4543      	cmp	r3, r8
 801ed9c:	b2ad      	uxth	r5, r5
 801ed9e:	460c      	mov	r4, r1
 801eda0:	d802      	bhi.n	801eda8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801eda2:	e070      	b.n	801ee86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801eda4:	2b00      	cmp	r3, #0
 801eda6:	d15c      	bne.n	801ee62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801eda8:	9b05      	ldr	r3, [sp, #20]
 801edaa:	9a04      	ldr	r2, [sp, #16]
 801edac:	785b      	ldrb	r3, [r3, #1]
 801edae:	9904      	ldr	r1, [sp, #16]
 801edb0:	f1c2 0207 	rsb	r2, r2, #7
 801edb4:	4093      	lsls	r3, r2
 801edb6:	005b      	lsls	r3, r3, #1
 801edb8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801edbc:	9b05      	ldr	r3, [sp, #20]
 801edbe:	781b      	ldrb	r3, [r3, #0]
 801edc0:	410b      	asrs	r3, r1
 801edc2:	3101      	adds	r1, #1
 801edc4:	b2c9      	uxtb	r1, r1
 801edc6:	2908      	cmp	r1, #8
 801edc8:	9104      	str	r1, [sp, #16]
 801edca:	9905      	ldr	r1, [sp, #20]
 801edcc:	bf0a      	itet	eq
 801edce:	3102      	addeq	r1, #2
 801edd0:	3101      	addne	r1, #1
 801edd2:	9105      	streq	r1, [sp, #20]
 801edd4:	b2db      	uxtb	r3, r3
 801edd6:	bf0a      	itet	eq
 801edd8:	2100      	moveq	r1, #0
 801edda:	9105      	strne	r1, [sp, #20]
 801eddc:	9104      	streq	r1, [sp, #16]
 801edde:	4313      	orrs	r3, r2
 801ede0:	9910      	ldr	r1, [sp, #64]	; 0x40
 801ede2:	b29a      	uxth	r2, r3
 801ede4:	4291      	cmp	r1, r2
 801ede6:	d30a      	bcc.n	801edfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ede8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801edec:	2301      	movs	r3, #1
 801edee:	9907      	ldr	r1, [sp, #28]
 801edf0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801edf4:	d30f      	bcc.n	801ee16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801edf6:	2100      	movs	r1, #0
 801edf8:	9301      	str	r3, [sp, #4]
 801edfa:	9103      	str	r1, [sp, #12]
 801edfc:	e032      	b.n	801ee64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801edfe:	9b07      	ldr	r3, [sp, #28]
 801ee00:	429a      	cmp	r2, r3
 801ee02:	d318      	bcc.n	801ee36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801ee04:	9b01      	ldr	r3, [sp, #4]
 801ee06:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801ee0a:	445b      	add	r3, fp
 801ee0c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801ee10:	9b01      	ldr	r3, [sp, #4]
 801ee12:	3301      	adds	r3, #1
 801ee14:	b29b      	uxth	r3, r3
 801ee16:	9907      	ldr	r1, [sp, #28]
 801ee18:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801ee1c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ee20:	7108      	strb	r0, [r1, #4]
 801ee22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ee24:	80c8      	strh	r0, [r1, #6]
 801ee26:	9801      	ldr	r0, [sp, #4]
 801ee28:	3001      	adds	r0, #1
 801ee2a:	7148      	strb	r0, [r1, #5]
 801ee2c:	9907      	ldr	r1, [sp, #28]
 801ee2e:	3101      	adds	r1, #1
 801ee30:	b289      	uxth	r1, r1
 801ee32:	9107      	str	r1, [sp, #28]
 801ee34:	e7df      	b.n	801edf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ee36:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ee3a:	4611      	mov	r1, r2
 801ee3c:	795b      	ldrb	r3, [r3, #5]
 801ee3e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801ee42:	4458      	add	r0, fp
 801ee44:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ee46:	4406      	add	r6, r0
 801ee48:	2e00      	cmp	r6, #0
 801ee4a:	dd06      	ble.n	801ee5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801ee4c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ee50:	790e      	ldrb	r6, [r1, #4]
 801ee52:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801ee56:	88c9      	ldrh	r1, [r1, #6]
 801ee58:	e7f4      	b.n	801ee44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801ee5a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801ee5e:	b29b      	uxth	r3, r3
 801ee60:	e7c5      	b.n	801edee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801ee62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ee64:	920b      	str	r2, [sp, #44]	; 0x2c
 801ee66:	4621      	mov	r1, r4
 801ee68:	469e      	mov	lr, r3
 801ee6a:	e78f      	b.n	801ed8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801ee6c:	9a03      	ldr	r2, [sp, #12]
 801ee6e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ee72:	442a      	add	r2, r5
 801ee74:	ebae 0305 	sub.w	r3, lr, r5
 801ee78:	b292      	uxth	r2, r2
 801ee7a:	b29b      	uxth	r3, r3
 801ee7c:	9203      	str	r2, [sp, #12]
 801ee7e:	2500      	movs	r5, #0
 801ee80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ee82:	4542      	cmp	r2, r8
 801ee84:	d88e      	bhi.n	801eda4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801ee86:	4621      	mov	r1, r4
 801ee88:	e74e      	b.n	801ed28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801ee8a:	458e      	cmp	lr, r1
 801ee8c:	bf29      	itett	cs
 801ee8e:	ebae 0301 	subcs.w	r3, lr, r1
 801ee92:	eba1 040e 	subcc.w	r4, r1, lr
 801ee96:	b29b      	uxthcs	r3, r3
 801ee98:	910c      	strcs	r1, [sp, #48]	; 0x30
 801ee9a:	bf2f      	iteee	cs
 801ee9c:	462c      	movcs	r4, r5
 801ee9e:	b2a4      	uxthcc	r4, r4
 801eea0:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801eea4:	462b      	movcc	r3, r5
 801eea6:	f04f 0900 	mov.w	r9, #0
 801eeaa:	9a03      	ldr	r2, [sp, #12]
 801eeac:	980c      	ldr	r0, [sp, #48]	; 0x30
 801eeae:	444a      	add	r2, r9
 801eeb0:	4548      	cmp	r0, r9
 801eeb2:	b292      	uxth	r2, r2
 801eeb4:	d074      	beq.n	801efa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801eeb6:	445a      	add	r2, fp
 801eeb8:	2004      	movs	r0, #4
 801eeba:	4605      	mov	r5, r0
 801eebc:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801eec0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801eec2:	fb15 0202 	smlabb	r2, r5, r2, r0
 801eec6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801eec8:	5880      	ldr	r0, [r0, r2]
 801eeca:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801eece:	d014      	beq.n	801eefa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801eed0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801eed4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801eed8:	d112      	bne.n	801ef00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801eeda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801eedc:	2aff      	cmp	r2, #255	; 0xff
 801eede:	d10f      	bne.n	801ef00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801eee0:	0942      	lsrs	r2, r0, #5
 801eee2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801eee6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eeea:	f025 0507 	bic.w	r5, r5, #7
 801eeee:	4315      	orrs	r5, r2
 801eef0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801eef4:	4305      	orrs	r5, r0
 801eef6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801eefa:	f109 0901 	add.w	r9, r9, #1
 801eefe:	e7d4      	b.n	801eeaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801ef00:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801ef04:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ef08:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801ef0c:	9215      	str	r2, [sp, #84]	; 0x54
 801ef0e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ef10:	fb02 fa0a 	mul.w	sl, r2, sl
 801ef14:	f10a 0201 	add.w	r2, sl, #1
 801ef18:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801ef1c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ef20:	1212      	asrs	r2, r2, #8
 801ef22:	fa1f fa82 	uxth.w	sl, r2
 801ef26:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801ef2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ef2e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ef32:	43d2      	mvns	r2, r2
 801ef34:	b2d2      	uxtb	r2, r2
 801ef36:	fb16 f60a 	smulbb	r6, r6, sl
 801ef3a:	fa5f fc8c 	uxtb.w	ip, ip
 801ef3e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ef42:	b2c0      	uxtb	r0, r0
 801ef44:	fb07 6702 	mla	r7, r7, r2, r6
 801ef48:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801ef4c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801ef4e:	fb10 f00a 	smulbb	r0, r0, sl
 801ef52:	fb0c 0002 	mla	r0, ip, r2, r0
 801ef56:	b2ed      	uxtb	r5, r5
 801ef58:	b2bf      	uxth	r7, r7
 801ef5a:	fb15 f50a 	smulbb	r5, r5, sl
 801ef5e:	b280      	uxth	r0, r0
 801ef60:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ef64:	fb06 5602 	mla	r6, r6, r2, r5
 801ef68:	1c7a      	adds	r2, r7, #1
 801ef6a:	1c45      	adds	r5, r0, #1
 801ef6c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ef70:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ef74:	b2b6      	uxth	r6, r6
 801ef76:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ef7a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ef7e:	432f      	orrs	r7, r5
 801ef80:	1c75      	adds	r5, r6, #1
 801ef82:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ef86:	096d      	lsrs	r5, r5, #5
 801ef88:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ef8c:	432f      	orrs	r7, r5
 801ef8e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801ef92:	e7b2      	b.n	801eefa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ef94:	2001384c 	.word	0x2001384c
 801ef98:	20013846 	.word	0x20013846
 801ef9c:	fffff7fb 	.word	0xfffff7fb
 801efa0:	9203      	str	r2, [sp, #12]
 801efa2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801efa4:	458e      	cmp	lr, r1
 801efa6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801efaa:	f4ff af68 	bcc.w	801ee7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801efae:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801efb0:	9906      	ldr	r1, [sp, #24]
 801efb2:	8812      	ldrh	r2, [r2, #0]
 801efb4:	1a52      	subs	r2, r2, r1
 801efb6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801efba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801efbc:	9914      	ldr	r1, [sp, #80]	; 0x50
 801efbe:	3201      	adds	r2, #1
 801efc0:	428a      	cmp	r2, r1
 801efc2:	9209      	str	r2, [sp, #36]	; 0x24
 801efc4:	d111      	bne.n	801efea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801efc6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801efca:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801efce:	9b06      	ldr	r3, [sp, #24]
 801efd0:	eba5 0509 	sub.w	r5, r5, r9
 801efd4:	b2ad      	uxth	r5, r5
 801efd6:	2d00      	cmp	r5, #0
 801efd8:	bf08      	it	eq
 801efda:	4619      	moveq	r1, r3
 801efdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801efde:	bf18      	it	ne
 801efe0:	2100      	movne	r1, #0
 801efe2:	3301      	adds	r3, #1
 801efe4:	930d      	str	r3, [sp, #52]	; 0x34
 801efe6:	b289      	uxth	r1, r1
 801efe8:	e695      	b.n	801ed16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801efea:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801efee:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801eff2:	1b2d      	subs	r5, r5, r4
 801eff4:	b2ad      	uxth	r5, r5
 801eff6:	2d00      	cmp	r5, #0
 801eff8:	bf18      	it	ne
 801effa:	2400      	movne	r4, #0
 801effc:	e740      	b.n	801ee80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801effe:	4b04      	ldr	r3, [pc, #16]	; (801f010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801f000:	6818      	ldr	r0, [r3, #0]
 801f002:	6803      	ldr	r3, [r0, #0]
 801f004:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f006:	4798      	blx	r3
 801f008:	b01d      	add	sp, #116	; 0x74
 801f00a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f00e:	bf00      	nop
 801f010:	2001384c 	.word	0x2001384c

0801f014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f018:	b09f      	sub	sp, #124	; 0x7c
 801f01a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f01e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f022:	920a      	str	r2, [sp, #40]	; 0x28
 801f024:	461d      	mov	r5, r3
 801f026:	4604      	mov	r4, r0
 801f028:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f02a:	2a00      	cmp	r2, #0
 801f02c:	f000 81fa 	beq.w	801f424 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801f030:	6828      	ldr	r0, [r5, #0]
 801f032:	6869      	ldr	r1, [r5, #4]
 801f034:	aa1a      	add	r2, sp, #104	; 0x68
 801f036:	c203      	stmia	r2!, {r0, r1}
 801f038:	6818      	ldr	r0, [r3, #0]
 801f03a:	6859      	ldr	r1, [r3, #4]
 801f03c:	aa1c      	add	r2, sp, #112	; 0x70
 801f03e:	c203      	stmia	r2!, {r0, r1}
 801f040:	a81a      	add	r0, sp, #104	; 0x68
 801f042:	f7f8 fb51 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f046:	4629      	mov	r1, r5
 801f048:	a81c      	add	r0, sp, #112	; 0x70
 801f04a:	f7f8 fb91 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f04e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f052:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801f056:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801f05a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f05e:	bfd7      	itett	le
 801f060:	b29a      	uxthle	r2, r3
 801f062:	2201      	movgt	r2, #1
 801f064:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f068:	fb91 f2f2 	sdivle	r2, r1, r2
 801f06c:	9201      	str	r2, [sp, #4]
 801f06e:	9801      	ldr	r0, [sp, #4]
 801f070:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f074:	fb92 f0f0 	sdiv	r0, r2, r0
 801f078:	b280      	uxth	r0, r0
 801f07a:	9010      	str	r0, [sp, #64]	; 0x40
 801f07c:	9901      	ldr	r1, [sp, #4]
 801f07e:	9801      	ldr	r0, [sp, #4]
 801f080:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f082:	440e      	add	r6, r1
 801f084:	fb05 2510 	mls	r5, r5, r0, r2
 801f088:	fb15 f503 	smulbb	r5, r5, r3
 801f08c:	3e01      	subs	r6, #1
 801f08e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f092:	fb96 f6f1 	sdiv	r6, r6, r1
 801f096:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f09a:	440d      	add	r5, r1
 801f09c:	4419      	add	r1, r3
 801f09e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f0a2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f0a6:	441a      	add	r2, r3
 801f0a8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f0ac:	9304      	str	r3, [sp, #16]
 801f0ae:	4b96      	ldr	r3, [pc, #600]	; (801f308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f0b0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f0b4:	6818      	ldr	r0, [r3, #0]
 801f0b6:	6803      	ldr	r3, [r0, #0]
 801f0b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0ba:	4798      	blx	r3
 801f0bc:	4b93      	ldr	r3, [pc, #588]	; (801f30c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f0be:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f0c2:	881a      	ldrh	r2, [r3, #0]
 801f0c4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801f0c8:	9318      	str	r3, [sp, #96]	; 0x60
 801f0ca:	fb02 c101 	mla	r1, r2, r1, ip
 801f0ce:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801f0d2:	4357      	muls	r7, r2
 801f0d4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801f0d8:	3601      	adds	r6, #1
 801f0da:	920b      	str	r2, [sp, #44]	; 0x2c
 801f0dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f0de:	4b8c      	ldr	r3, [pc, #560]	; (801f310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f0e0:	b2b6      	uxth	r6, r6
 801f0e2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801f0e6:	1d32      	adds	r2, r6, #4
 801f0e8:	9206      	str	r2, [sp, #24]
 801f0ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f0ec:	43d2      	mvns	r2, r2
 801f0ee:	b2d2      	uxtb	r2, r2
 801f0f0:	b2ad      	uxth	r5, r5
 801f0f2:	9215      	str	r2, [sp, #84]	; 0x54
 801f0f4:	9a04      	ldr	r2, [sp, #16]
 801f0f6:	2d00      	cmp	r5, #0
 801f0f8:	bf0c      	ite	eq
 801f0fa:	4611      	moveq	r1, r2
 801f0fc:	2100      	movne	r1, #0
 801f0fe:	2200      	movs	r2, #0
 801f100:	1b1b      	subs	r3, r3, r4
 801f102:	b289      	uxth	r1, r1
 801f104:	920d      	str	r2, [sp, #52]	; 0x34
 801f106:	9319      	str	r3, [sp, #100]	; 0x64
 801f108:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f10a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f10c:	fa12 f383 	uxtah	r3, r2, r3
 801f110:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f112:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801f116:	3304      	adds	r3, #4
 801f118:	9307      	str	r3, [sp, #28]
 801f11a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f11c:	455b      	cmp	r3, fp
 801f11e:	f240 817c 	bls.w	801f41a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801f122:	9a01      	ldr	r2, [sp, #4]
 801f124:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f128:	fbb5 f3f3 	udiv	r3, r5, r3
 801f12c:	1ad3      	subs	r3, r2, r3
 801f12e:	b29b      	uxth	r3, r3
 801f130:	9316      	str	r3, [sp, #88]	; 0x58
 801f132:	9b07      	ldr	r3, [sp, #28]
 801f134:	9807      	ldr	r0, [sp, #28]
 801f136:	785a      	ldrb	r2, [r3, #1]
 801f138:	789b      	ldrb	r3, [r3, #2]
 801f13a:	7800      	ldrb	r0, [r0, #0]
 801f13c:	9011      	str	r0, [sp, #68]	; 0x44
 801f13e:	021b      	lsls	r3, r3, #8
 801f140:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801f144:	9a07      	ldr	r2, [sp, #28]
 801f146:	78d2      	ldrb	r2, [r2, #3]
 801f148:	4313      	orrs	r3, r2
 801f14a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f14c:	3001      	adds	r0, #1
 801f14e:	441a      	add	r2, r3
 801f150:	9005      	str	r0, [sp, #20]
 801f152:	1c50      	adds	r0, r2, #1
 801f154:	9003      	str	r0, [sp, #12]
 801f156:	7852      	ldrb	r2, [r2, #1]
 801f158:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f15a:	0212      	lsls	r2, r2, #8
 801f15c:	5cc3      	ldrb	r3, [r0, r3]
 801f15e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801f162:	431a      	orrs	r2, r3
 801f164:	b293      	uxth	r3, r2
 801f166:	930c      	str	r3, [sp, #48]	; 0x30
 801f168:	2300      	movs	r3, #0
 801f16a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f16e:	9308      	str	r3, [sp, #32]
 801f170:	461a      	mov	r2, r3
 801f172:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f176:	930e      	str	r3, [sp, #56]	; 0x38
 801f178:	f04f 0801 	mov.w	r8, #1
 801f17c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f180:	f8cd 8008 	str.w	r8, [sp, #8]
 801f184:	46c4      	mov	ip, r8
 801f186:	930f      	str	r3, [sp, #60]	; 0x3c
 801f188:	2d00      	cmp	r5, #0
 801f18a:	d07c      	beq.n	801f286 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f18c:	45ac      	cmp	ip, r5
 801f18e:	d26c      	bcs.n	801f26a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801f190:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f192:	eba5 050c 	sub.w	r5, r5, ip
 801f196:	455b      	cmp	r3, fp
 801f198:	b2ad      	uxth	r5, r5
 801f19a:	4608      	mov	r0, r1
 801f19c:	d802      	bhi.n	801f1a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801f19e:	e070      	b.n	801f282 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801f1a0:	2b00      	cmp	r3, #0
 801f1a2:	d15c      	bne.n	801f25e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801f1a4:	9b03      	ldr	r3, [sp, #12]
 801f1a6:	9a02      	ldr	r2, [sp, #8]
 801f1a8:	785b      	ldrb	r3, [r3, #1]
 801f1aa:	9902      	ldr	r1, [sp, #8]
 801f1ac:	f1c2 0207 	rsb	r2, r2, #7
 801f1b0:	4093      	lsls	r3, r2
 801f1b2:	005b      	lsls	r3, r3, #1
 801f1b4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f1b8:	9b03      	ldr	r3, [sp, #12]
 801f1ba:	781b      	ldrb	r3, [r3, #0]
 801f1bc:	410b      	asrs	r3, r1
 801f1be:	3101      	adds	r1, #1
 801f1c0:	b2c9      	uxtb	r1, r1
 801f1c2:	2908      	cmp	r1, #8
 801f1c4:	9102      	str	r1, [sp, #8]
 801f1c6:	9903      	ldr	r1, [sp, #12]
 801f1c8:	bf0a      	itet	eq
 801f1ca:	3102      	addeq	r1, #2
 801f1cc:	3101      	addne	r1, #1
 801f1ce:	9103      	streq	r1, [sp, #12]
 801f1d0:	b2db      	uxtb	r3, r3
 801f1d2:	bf0a      	itet	eq
 801f1d4:	2100      	moveq	r1, #0
 801f1d6:	9103      	strne	r1, [sp, #12]
 801f1d8:	9102      	streq	r1, [sp, #8]
 801f1da:	4313      	orrs	r3, r2
 801f1dc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f1de:	b29a      	uxth	r2, r3
 801f1e0:	4291      	cmp	r1, r2
 801f1e2:	d30a      	bcc.n	801f1fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801f1e4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f1e8:	2301      	movs	r3, #1
 801f1ea:	9905      	ldr	r1, [sp, #20]
 801f1ec:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801f1f0:	d30f      	bcc.n	801f212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801f1f2:	2100      	movs	r1, #0
 801f1f4:	4698      	mov	r8, r3
 801f1f6:	9100      	str	r1, [sp, #0]
 801f1f8:	e032      	b.n	801f260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801f1fa:	9b05      	ldr	r3, [sp, #20]
 801f1fc:	429a      	cmp	r2, r3
 801f1fe:	d318      	bcc.n	801f232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801f200:	eb04 0308 	add.w	r3, r4, r8
 801f204:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801f208:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801f20c:	f108 0301 	add.w	r3, r8, #1
 801f210:	b29b      	uxth	r3, r3
 801f212:	9905      	ldr	r1, [sp, #20]
 801f214:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f218:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801f21c:	710e      	strb	r6, [r1, #4]
 801f21e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f220:	80ce      	strh	r6, [r1, #6]
 801f222:	f108 0601 	add.w	r6, r8, #1
 801f226:	714e      	strb	r6, [r1, #5]
 801f228:	9905      	ldr	r1, [sp, #20]
 801f22a:	3101      	adds	r1, #1
 801f22c:	b289      	uxth	r1, r1
 801f22e:	9105      	str	r1, [sp, #20]
 801f230:	e7df      	b.n	801f1f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801f232:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801f236:	4611      	mov	r1, r2
 801f238:	795b      	ldrb	r3, [r3, #5]
 801f23a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f23e:	4426      	add	r6, r4
 801f240:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801f242:	4437      	add	r7, r6
 801f244:	2f00      	cmp	r7, #0
 801f246:	dd06      	ble.n	801f256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801f248:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801f24c:	790f      	ldrb	r7, [r1, #4]
 801f24e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801f252:	88c9      	ldrh	r1, [r1, #6]
 801f254:	e7f4      	b.n	801f240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801f256:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f25a:	b29b      	uxth	r3, r3
 801f25c:	e7c5      	b.n	801f1ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801f25e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f260:	920c      	str	r2, [sp, #48]	; 0x30
 801f262:	4601      	mov	r1, r0
 801f264:	9a00      	ldr	r2, [sp, #0]
 801f266:	469c      	mov	ip, r3
 801f268:	e78e      	b.n	801f188 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801f26a:	1957      	adds	r7, r2, r5
 801f26c:	ebac 0305 	sub.w	r3, ip, r5
 801f270:	b2ba      	uxth	r2, r7
 801f272:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801f276:	9200      	str	r2, [sp, #0]
 801f278:	b29b      	uxth	r3, r3
 801f27a:	2500      	movs	r5, #0
 801f27c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f27e:	455a      	cmp	r2, fp
 801f280:	d88e      	bhi.n	801f1a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801f282:	4601      	mov	r1, r0
 801f284:	e749      	b.n	801f11a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801f286:	458c      	cmp	ip, r1
 801f288:	bf2c      	ite	cs
 801f28a:	4628      	movcs	r0, r5
 801f28c:	462b      	movcc	r3, r5
 801f28e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f290:	bf27      	ittee	cs
 801f292:	9109      	strcs	r1, [sp, #36]	; 0x24
 801f294:	ebac 0301 	subcs.w	r3, ip, r1
 801f298:	eba1 000c 	subcc.w	r0, r1, ip
 801f29c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801f2a0:	bf2c      	ite	cs
 801f2a2:	b29b      	uxthcs	r3, r3
 801f2a4:	b280      	uxthcc	r0, r0
 801f2a6:	2dff      	cmp	r5, #255	; 0xff
 801f2a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f2aa:	eb02 0705 	add.w	r7, r2, r5
 801f2ae:	b2bd      	uxth	r5, r7
 801f2b0:	9500      	str	r5, [sp, #0]
 801f2b2:	d12f      	bne.n	801f314 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801f2b4:	465e      	mov	r6, fp
 801f2b6:	9d00      	ldr	r5, [sp, #0]
 801f2b8:	42aa      	cmp	r2, r5
 801f2ba:	f040 8084 	bne.w	801f3c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801f2be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f2c0:	458c      	cmp	ip, r1
 801f2c2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801f2c6:	d3d8      	bcc.n	801f27a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801f2c8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f2ca:	9904      	ldr	r1, [sp, #16]
 801f2cc:	8812      	ldrh	r2, [r2, #0]
 801f2ce:	1a52      	subs	r2, r2, r1
 801f2d0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801f2d4:	9a08      	ldr	r2, [sp, #32]
 801f2d6:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f2d8:	3201      	adds	r2, #1
 801f2da:	428a      	cmp	r2, r1
 801f2dc:	9208      	str	r2, [sp, #32]
 801f2de:	f040 8092 	bne.w	801f406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f2e2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f2e6:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801f2ea:	9b04      	ldr	r3, [sp, #16]
 801f2ec:	eba5 050c 	sub.w	r5, r5, ip
 801f2f0:	b2ad      	uxth	r5, r5
 801f2f2:	2d00      	cmp	r5, #0
 801f2f4:	bf08      	it	eq
 801f2f6:	4619      	moveq	r1, r3
 801f2f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f2fa:	bf18      	it	ne
 801f2fc:	2100      	movne	r1, #0
 801f2fe:	3301      	adds	r3, #1
 801f300:	930d      	str	r3, [sp, #52]	; 0x34
 801f302:	b289      	uxth	r1, r1
 801f304:	e700      	b.n	801f108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801f306:	bf00      	nop
 801f308:	2001384c 	.word	0x2001384c
 801f30c:	20013846 	.word	0x20013846
 801f310:	fffff7fb 	.word	0xfffff7fb
 801f314:	46d9      	mov	r9, fp
 801f316:	9d00      	ldr	r5, [sp, #0]
 801f318:	42aa      	cmp	r2, r5
 801f31a:	d0d0      	beq.n	801f2be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801f31c:	1c55      	adds	r5, r2, #1
 801f31e:	4422      	add	r2, r4
 801f320:	9517      	str	r5, [sp, #92]	; 0x5c
 801f322:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801f326:	9a06      	ldr	r2, [sp, #24]
 801f328:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f32c:	4472      	add	r2, lr
 801f32e:	9212      	str	r2, [sp, #72]	; 0x48
 801f330:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801f332:	f8b9 2000 	ldrh.w	r2, [r9]
 801f336:	f897 a002 	ldrb.w	sl, [r7, #2]
 801f33a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801f33c:	1216      	asrs	r6, r2, #8
 801f33e:	fb1a fa07 	smulbb	sl, sl, r7
 801f342:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f346:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f348:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f34c:	fb06 a607 	mla	r6, r6, r7, sl
 801f350:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801f352:	f897 a001 	ldrb.w	sl, [r7, #1]
 801f356:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801f358:	10d5      	asrs	r5, r2, #3
 801f35a:	fb1a fa07 	smulbb	sl, sl, r7
 801f35e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f362:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f364:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f368:	fb05 a507 	mla	r5, r5, r7, sl
 801f36c:	9f06      	ldr	r7, [sp, #24]
 801f36e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f372:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801f374:	00d2      	lsls	r2, r2, #3
 801f376:	fb1e fe07 	smulbb	lr, lr, r7
 801f37a:	b2d2      	uxtb	r2, r2
 801f37c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f37e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f382:	b2b6      	uxth	r6, r6
 801f384:	fb02 e207 	mla	r2, r2, r7, lr
 801f388:	b292      	uxth	r2, r2
 801f38a:	b2ad      	uxth	r5, r5
 801f38c:	f106 0a01 	add.w	sl, r6, #1
 801f390:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f394:	f102 0e01 	add.w	lr, r2, #1
 801f398:	f105 0a01 	add.w	sl, r5, #1
 801f39c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801f3a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f3a4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f3a8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f3ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f3b0:	ea4e 0606 	orr.w	r6, lr, r6
 801f3b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f3b8:	ea46 060a 	orr.w	r6, r6, sl
 801f3bc:	f829 6b02 	strh.w	r6, [r9], #2
 801f3c0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f3c4:	e7a7      	b.n	801f316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801f3c6:	f102 0e01 	add.w	lr, r2, #1
 801f3ca:	4422      	add	r2, r4
 801f3cc:	9f06      	ldr	r7, [sp, #24]
 801f3ce:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801f3d2:	9a06      	ldr	r2, [sp, #24]
 801f3d4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f3d8:	eb02 0a05 	add.w	sl, r2, r5
 801f3dc:	4a13      	ldr	r2, [pc, #76]	; (801f42c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801f3de:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801f3e2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801f3e6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f3ea:	00d2      	lsls	r2, r2, #3
 801f3ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f3f0:	ea49 0202 	orr.w	r2, r9, r2
 801f3f4:	f817 9005 	ldrb.w	r9, [r7, r5]
 801f3f8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801f3fc:	f826 2b02 	strh.w	r2, [r6], #2
 801f400:	fa1f f28e 	uxth.w	r2, lr
 801f404:	e757      	b.n	801f2b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801f406:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801f40a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f40e:	1a2d      	subs	r5, r5, r0
 801f410:	b2ad      	uxth	r5, r5
 801f412:	2d00      	cmp	r5, #0
 801f414:	bf18      	it	ne
 801f416:	2000      	movne	r0, #0
 801f418:	e730      	b.n	801f27c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801f41a:	4b05      	ldr	r3, [pc, #20]	; (801f430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801f41c:	6818      	ldr	r0, [r3, #0]
 801f41e:	6803      	ldr	r3, [r0, #0]
 801f420:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f422:	4798      	blx	r3
 801f424:	b01f      	add	sp, #124	; 0x7c
 801f426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f42a:	bf00      	nop
 801f42c:	fffff800 	.word	0xfffff800
 801f430:	2001384c 	.word	0x2001384c

0801f434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801f434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f438:	b091      	sub	sp, #68	; 0x44
 801f43a:	469b      	mov	fp, r3
 801f43c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801f440:	4616      	mov	r6, r2
 801f442:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801f446:	f9b3 2000 	ldrsh.w	r2, [r3]
 801f44a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f44e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801f452:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801f456:	4604      	mov	r4, r0
 801f458:	460d      	mov	r5, r1
 801f45a:	4640      	mov	r0, r8
 801f45c:	4659      	mov	r1, fp
 801f45e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801f462:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801f466:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801f46a:	f7f2 fb9f 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 801f46e:	4631      	mov	r1, r6
 801f470:	4640      	mov	r0, r8
 801f472:	f7f2 fb9b 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 801f476:	4b74      	ldr	r3, [pc, #464]	; (801f648 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801f478:	8818      	ldrh	r0, [r3, #0]
 801f47a:	4b74      	ldr	r3, [pc, #464]	; (801f64c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801f47c:	8819      	ldrh	r1, [r3, #0]
 801f47e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f482:	2b00      	cmp	r3, #0
 801f484:	b202      	sxth	r2, r0
 801f486:	b20e      	sxth	r6, r1
 801f488:	da07      	bge.n	801f49a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801f48a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801f48e:	4463      	add	r3, ip
 801f490:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801f494:	2300      	movs	r3, #0
 801f496:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801f49a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f49e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801f4a2:	1ad2      	subs	r2, r2, r3
 801f4a4:	4594      	cmp	ip, r2
 801f4a6:	bfc4      	itt	gt
 801f4a8:	1ac2      	subgt	r2, r0, r3
 801f4aa:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801f4ae:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801f4b2:	2a00      	cmp	r2, #0
 801f4b4:	da07      	bge.n	801f4c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801f4b6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801f4ba:	4462      	add	r2, ip
 801f4bc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801f4c0:	2200      	movs	r2, #0
 801f4c2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801f4c6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801f4ca:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801f4ce:	eba6 060a 	sub.w	r6, r6, sl
 801f4d2:	42b2      	cmp	r2, r6
 801f4d4:	bfc4      	itt	gt
 801f4d6:	eba1 020a 	subgt.w	r2, r1, sl
 801f4da:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801f4de:	4a5c      	ldr	r2, [pc, #368]	; (801f650 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801f4e0:	7812      	ldrb	r2, [r2, #0]
 801f4e2:	b9a2      	cbnz	r2, 801f50e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801f4e4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f4e8:	4286      	cmp	r6, r0
 801f4ea:	4640      	mov	r0, r8
 801f4ec:	9303      	str	r3, [sp, #12]
 801f4ee:	bf14      	ite	ne
 801f4f0:	2600      	movne	r6, #0
 801f4f2:	2601      	moveq	r6, #1
 801f4f4:	f7f2 fb9d 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f4f8:	9b03      	ldr	r3, [sp, #12]
 801f4fa:	b160      	cbz	r0, 801f516 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801f4fc:	2300      	movs	r3, #0
 801f4fe:	8023      	strh	r3, [r4, #0]
 801f500:	8063      	strh	r3, [r4, #2]
 801f502:	80a3      	strh	r3, [r4, #4]
 801f504:	4620      	mov	r0, r4
 801f506:	80e3      	strh	r3, [r4, #6]
 801f508:	b011      	add	sp, #68	; 0x44
 801f50a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f50e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801f512:	428e      	cmp	r6, r1
 801f514:	e7e9      	b.n	801f4ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801f516:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801f51a:	9205      	str	r2, [sp, #20]
 801f51c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801f520:	9206      	str	r2, [sp, #24]
 801f522:	f8bb 2000 	ldrh.w	r2, [fp]
 801f526:	900e      	str	r0, [sp, #56]	; 0x38
 801f528:	1a9b      	subs	r3, r3, r2
 801f52a:	b21b      	sxth	r3, r3
 801f52c:	9303      	str	r3, [sp, #12]
 801f52e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f532:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801f536:	ebaa 0a03 	sub.w	sl, sl, r3
 801f53a:	fa0f f38a 	sxth.w	r3, sl
 801f53e:	9304      	str	r3, [sp, #16]
 801f540:	9b03      	ldr	r3, [sp, #12]
 801f542:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801f546:	9b04      	ldr	r3, [sp, #16]
 801f548:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801f54c:	9b05      	ldr	r3, [sp, #20]
 801f54e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801f552:	a90e      	add	r1, sp, #56	; 0x38
 801f554:	9b06      	ldr	r3, [sp, #24]
 801f556:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801f55a:	a80c      	add	r0, sp, #48	; 0x30
 801f55c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801f560:	f7f8 f906 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f564:	4640      	mov	r0, r8
 801f566:	f7f8 f8bf 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f56a:	a80e      	add	r0, sp, #56	; 0x38
 801f56c:	f7f8 f8bc 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f570:	4b38      	ldr	r3, [pc, #224]	; (801f654 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801f572:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801f576:	881b      	ldrh	r3, [r3, #0]
 801f578:	9307      	str	r3, [sp, #28]
 801f57a:	682b      	ldr	r3, [r5, #0]
 801f57c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801f658 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801f580:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f582:	4628      	mov	r0, r5
 801f584:	4798      	blx	r3
 801f586:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801f58a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801f58e:	4681      	mov	r9, r0
 801f590:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801f594:	f8db 0000 	ldr.w	r0, [fp]
 801f598:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801f59a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801f59e:	6803      	ldr	r3, [r0, #0]
 801f5a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f5a2:	4798      	blx	r3
 801f5a4:	4607      	mov	r7, r0
 801f5a6:	f8db 0000 	ldr.w	r0, [fp]
 801f5aa:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801f5ae:	6803      	ldr	r3, [r0, #0]
 801f5b0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801f5b4:	9109      	str	r1, [sp, #36]	; 0x24
 801f5b6:	9208      	str	r2, [sp, #32]
 801f5b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f5ba:	4798      	blx	r3
 801f5bc:	f010 0f01 	tst.w	r0, #1
 801f5c0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801f5c4:	d012      	beq.n	801f5ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801f5c6:	f8db 0000 	ldr.w	r0, [fp]
 801f5ca:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801f5ce:	6803      	ldr	r3, [r0, #0]
 801f5d0:	9200      	str	r2, [sp, #0]
 801f5d2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801f5d4:	e898 0006 	ldmia.w	r8, {r1, r2}
 801f5d8:	462b      	mov	r3, r5
 801f5da:	47b0      	blx	r6
 801f5dc:	9b03      	ldr	r3, [sp, #12]
 801f5de:	8023      	strh	r3, [r4, #0]
 801f5e0:	9b04      	ldr	r3, [sp, #16]
 801f5e2:	8063      	strh	r3, [r4, #2]
 801f5e4:	9b05      	ldr	r3, [sp, #20]
 801f5e6:	80a3      	strh	r3, [r4, #4]
 801f5e8:	9b06      	ldr	r3, [sp, #24]
 801f5ea:	e78b      	b.n	801f504 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801f5ec:	fb09 f202 	mul.w	r2, r9, r2
 801f5f0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801f5f4:	440f      	add	r7, r1
 801f5f6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801f5fa:	b166      	cbz	r6, 801f616 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801f5fc:	9a07      	ldr	r2, [sp, #28]
 801f5fe:	4592      	cmp	sl, r2
 801f600:	d109      	bne.n	801f616 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801f602:	f8db 0000 	ldr.w	r0, [fp]
 801f606:	6802      	ldr	r2, [r0, #0]
 801f608:	fb09 f303 	mul.w	r3, r9, r3
 801f60c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801f60e:	4629      	mov	r1, r5
 801f610:	463a      	mov	r2, r7
 801f612:	47b0      	blx	r6
 801f614:	e7e2      	b.n	801f5dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801f616:	fb0a f303 	mul.w	r3, sl, r3
 801f61a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801f658 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801f61e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801f622:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801f626:	4545      	cmp	r5, r8
 801f628:	d2d8      	bcs.n	801f5dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801f62a:	f8db 0000 	ldr.w	r0, [fp]
 801f62e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f632:	6802      	ldr	r2, [r0, #0]
 801f634:	4629      	mov	r1, r5
 801f636:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801f63a:	005b      	lsls	r3, r3, #1
 801f63c:	463a      	mov	r2, r7
 801f63e:	47d0      	blx	sl
 801f640:	444f      	add	r7, r9
 801f642:	4435      	add	r5, r6
 801f644:	e7ef      	b.n	801f626 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801f646:	bf00      	nop
 801f648:	20013840 	.word	0x20013840
 801f64c:	20013842 	.word	0x20013842
 801f650:	20013844 	.word	0x20013844
 801f654:	20013846 	.word	0x20013846
 801f658:	2001384c 	.word	0x2001384c

0801f65c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801f65c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f65e:	4606      	mov	r6, r0
 801f660:	b087      	sub	sp, #28
 801f662:	460c      	mov	r4, r1
 801f664:	4617      	mov	r7, r2
 801f666:	461d      	mov	r5, r3
 801f668:	b333      	cbz	r3, 801f6b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f66a:	4608      	mov	r0, r1
 801f66c:	f7f2 fae1 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f670:	bb10      	cbnz	r0, 801f6b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f672:	6820      	ldr	r0, [r4, #0]
 801f674:	6861      	ldr	r1, [r4, #4]
 801f676:	4c1c      	ldr	r4, [pc, #112]	; (801f6e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801f678:	ab04      	add	r3, sp, #16
 801f67a:	c303      	stmia	r3!, {r0, r1}
 801f67c:	a804      	add	r0, sp, #16
 801f67e:	f7f8 f833 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f682:	6820      	ldr	r0, [r4, #0]
 801f684:	6803      	ldr	r3, [r0, #0]
 801f686:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f688:	4798      	blx	r3
 801f68a:	2dff      	cmp	r5, #255	; 0xff
 801f68c:	d016      	beq.n	801f6bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801f68e:	f010 0f08 	tst.w	r0, #8
 801f692:	6820      	ldr	r0, [r4, #0]
 801f694:	d015      	beq.n	801f6c2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801f696:	2400      	movs	r4, #0
 801f698:	6801      	ldr	r1, [r0, #0]
 801f69a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801f69e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f6a2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801f6a6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801f6aa:	9401      	str	r4, [sp, #4]
 801f6ac:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801f6b0:	9400      	str	r4, [sp, #0]
 801f6b2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801f6b4:	4639      	mov	r1, r7
 801f6b6:	47a0      	blx	r4
 801f6b8:	b007      	add	sp, #28
 801f6ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f6bc:	f010 0f02 	tst.w	r0, #2
 801f6c0:	e7e7      	b.n	801f692 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801f6c2:	6803      	ldr	r3, [r0, #0]
 801f6c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f6c6:	4798      	blx	r3
 801f6c8:	4b08      	ldr	r3, [pc, #32]	; (801f6ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801f6ca:	881a      	ldrh	r2, [r3, #0]
 801f6cc:	6833      	ldr	r3, [r6, #0]
 801f6ce:	e9cd 7500 	strd	r7, r5, [sp]
 801f6d2:	4601      	mov	r1, r0
 801f6d4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801f6d6:	4630      	mov	r0, r6
 801f6d8:	ab04      	add	r3, sp, #16
 801f6da:	47a8      	blx	r5
 801f6dc:	6820      	ldr	r0, [r4, #0]
 801f6de:	6803      	ldr	r3, [r0, #0]
 801f6e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f6e2:	4798      	blx	r3
 801f6e4:	e7e8      	b.n	801f6b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f6e6:	bf00      	nop
 801f6e8:	2001384c 	.word	0x2001384c
 801f6ec:	20013846 	.word	0x20013846

0801f6f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801f6f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f6f4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801f6f8:	9e08      	ldr	r6, [sp, #32]
 801f6fa:	4688      	mov	r8, r1
 801f6fc:	4614      	mov	r4, r2
 801f6fe:	461d      	mov	r5, r3
 801f700:	2f00      	cmp	r7, #0
 801f702:	f000 80a9 	beq.w	801f858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f706:	4618      	mov	r0, r3
 801f708:	f7f2 fa93 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f70c:	2800      	cmp	r0, #0
 801f70e:	f040 80a3 	bne.w	801f858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f712:	f9b5 1000 	ldrsh.w	r1, [r5]
 801f716:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801f71a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801f71e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801f722:	fb04 1303 	mla	r3, r4, r3, r1
 801f726:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801f72a:	4365      	muls	r5, r4
 801f72c:	2fff      	cmp	r7, #255	; 0xff
 801f72e:	eba4 0200 	sub.w	r2, r4, r0
 801f732:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801f736:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801f73a:	d04a      	beq.n	801f7d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801f73c:	b2bc      	uxth	r4, r7
 801f73e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801f742:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801f746:	fa5f f788 	uxtb.w	r7, r8
 801f74a:	b2f3      	uxtb	r3, r6
 801f74c:	0040      	lsls	r0, r0, #1
 801f74e:	fb0e fe04 	mul.w	lr, lr, r4
 801f752:	4367      	muls	r7, r4
 801f754:	4363      	muls	r3, r4
 801f756:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801f75a:	fa1f fc8c 	uxth.w	ip, ip
 801f75e:	42a9      	cmp	r1, r5
 801f760:	d27a      	bcs.n	801f858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f762:	eb01 0900 	add.w	r9, r1, r0
 801f766:	4549      	cmp	r1, r9
 801f768:	d231      	bcs.n	801f7ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801f76a:	880a      	ldrh	r2, [r1, #0]
 801f76c:	1214      	asrs	r4, r2, #8
 801f76e:	10d6      	asrs	r6, r2, #3
 801f770:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f774:	00d2      	lsls	r2, r2, #3
 801f776:	b2d2      	uxtb	r2, r2
 801f778:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f77c:	fb14 f40c 	smulbb	r4, r4, ip
 801f780:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f784:	4474      	add	r4, lr
 801f786:	fb12 f20c 	smulbb	r2, r2, ip
 801f78a:	b2a4      	uxth	r4, r4
 801f78c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f790:	441a      	add	r2, r3
 801f792:	b292      	uxth	r2, r2
 801f794:	f104 0a01 	add.w	sl, r4, #1
 801f798:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801f79c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f7a0:	fb16 f60c 	smulbb	r6, r6, ip
 801f7a4:	f102 0a01 	add.w	sl, r2, #1
 801f7a8:	443e      	add	r6, r7
 801f7aa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801f7ae:	b2b6      	uxth	r6, r6
 801f7b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f7b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f7b8:	4322      	orrs	r2, r4
 801f7ba:	1c74      	adds	r4, r6, #1
 801f7bc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801f7c0:	0976      	lsrs	r6, r6, #5
 801f7c2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f7c6:	4332      	orrs	r2, r6
 801f7c8:	f821 2b02 	strh.w	r2, [r1], #2
 801f7cc:	e7cb      	b.n	801f766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801f7ce:	4441      	add	r1, r8
 801f7d0:	e7c5      	b.n	801f75e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801f7d2:	4f22      	ldr	r7, [pc, #136]	; (801f85c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801f7d4:	0973      	lsrs	r3, r6, #5
 801f7d6:	ea08 0707 	and.w	r7, r8, r7
 801f7da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f7de:	433b      	orrs	r3, r7
 801f7e0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801f7e4:	4333      	orrs	r3, r6
 801f7e6:	07e7      	lsls	r7, r4, #31
 801f7e8:	b29b      	uxth	r3, r3
 801f7ea:	d50b      	bpl.n	801f804 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801f7ec:	0040      	lsls	r0, r0, #1
 801f7ee:	0052      	lsls	r2, r2, #1
 801f7f0:	42a9      	cmp	r1, r5
 801f7f2:	d231      	bcs.n	801f858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f7f4:	180c      	adds	r4, r1, r0
 801f7f6:	42a1      	cmp	r1, r4
 801f7f8:	d202      	bcs.n	801f800 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801f7fa:	f821 3b02 	strh.w	r3, [r1], #2
 801f7fe:	e7fa      	b.n	801f7f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801f800:	4411      	add	r1, r2
 801f802:	e7f5      	b.n	801f7f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801f804:	078e      	lsls	r6, r1, #30
 801f806:	d008      	beq.n	801f81a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801f808:	0066      	lsls	r6, r4, #1
 801f80a:	460a      	mov	r2, r1
 801f80c:	42aa      	cmp	r2, r5
 801f80e:	d202      	bcs.n	801f816 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801f810:	8013      	strh	r3, [r2, #0]
 801f812:	4432      	add	r2, r6
 801f814:	e7fa      	b.n	801f80c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801f816:	3102      	adds	r1, #2
 801f818:	3801      	subs	r0, #1
 801f81a:	07c2      	lsls	r2, r0, #31
 801f81c:	d50b      	bpl.n	801f836 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801f81e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801f822:	3a01      	subs	r2, #1
 801f824:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801f828:	0066      	lsls	r6, r4, #1
 801f82a:	42aa      	cmp	r2, r5
 801f82c:	d202      	bcs.n	801f834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801f82e:	8013      	strh	r3, [r2, #0]
 801f830:	4432      	add	r2, r6
 801f832:	e7fa      	b.n	801f82a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801f834:	3801      	subs	r0, #1
 801f836:	b178      	cbz	r0, 801f858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f838:	1040      	asrs	r0, r0, #1
 801f83a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801f83e:	0080      	lsls	r0, r0, #2
 801f840:	0064      	lsls	r4, r4, #1
 801f842:	42a9      	cmp	r1, r5
 801f844:	d208      	bcs.n	801f858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f846:	180e      	adds	r6, r1, r0
 801f848:	460a      	mov	r2, r1
 801f84a:	42b2      	cmp	r2, r6
 801f84c:	d202      	bcs.n	801f854 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801f84e:	f842 3b04 	str.w	r3, [r2], #4
 801f852:	e7fa      	b.n	801f84a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801f854:	4421      	add	r1, r4
 801f856:	e7f4      	b.n	801f842 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801f858:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f85c:	00fff800 	.word	0x00fff800

0801f860 <_ZN8touchgfx8LCD16bppC1Ev>:
 801f860:	2200      	movs	r2, #0
 801f862:	4912      	ldr	r1, [pc, #72]	; (801f8ac <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801f864:	6042      	str	r2, [r0, #4]
 801f866:	6001      	str	r1, [r0, #0]
 801f868:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801f86c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801f870:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801f874:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801f878:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801f87c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801f880:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801f884:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801f888:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801f88c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801f890:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801f894:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801f898:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801f89c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801f8a0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801f8a4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801f8a8:	4770      	bx	lr
 801f8aa:	bf00      	nop
 801f8ac:	080311c4 	.word	0x080311c4

0801f8b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801f8b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8b4:	460d      	mov	r5, r1
 801f8b6:	b08d      	sub	sp, #52	; 0x34
 801f8b8:	4604      	mov	r4, r0
 801f8ba:	6808      	ldr	r0, [r1, #0]
 801f8bc:	6849      	ldr	r1, [r1, #4]
 801f8be:	4699      	mov	r9, r3
 801f8c0:	ab08      	add	r3, sp, #32
 801f8c2:	c303      	stmia	r3!, {r0, r1}
 801f8c4:	6810      	ldr	r0, [r2, #0]
 801f8c6:	6851      	ldr	r1, [r2, #4]
 801f8c8:	ab0a      	add	r3, sp, #40	; 0x28
 801f8ca:	c303      	stmia	r3!, {r0, r1}
 801f8cc:	a808      	add	r0, sp, #32
 801f8ce:	f7f7 ff0b 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f8d2:	4629      	mov	r1, r5
 801f8d4:	a80a      	add	r0, sp, #40	; 0x28
 801f8d6:	f7f7 ff4b 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f8da:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801f8de:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801f8e2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801f8e6:	4d63      	ldr	r5, [pc, #396]	; (801fa74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801f8e8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801f8ec:	6828      	ldr	r0, [r5, #0]
 801f8ee:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801f8f2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f8f6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801f8fa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801f8fe:	440a      	add	r2, r1
 801f900:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801f904:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801f908:	4413      	add	r3, r2
 801f90a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801f90e:	6803      	ldr	r3, [r0, #0]
 801f910:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f912:	4798      	blx	r3
 801f914:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f918:	d119      	bne.n	801f94e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801f91a:	f010 0f20 	tst.w	r0, #32
 801f91e:	6828      	ldr	r0, [r5, #0]
 801f920:	d018      	beq.n	801f954 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801f922:	2500      	movs	r5, #0
 801f924:	6801      	ldr	r1, [r0, #0]
 801f926:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f92a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801f92e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801f932:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801f936:	9502      	str	r5, [sp, #8]
 801f938:	b2b6      	uxth	r6, r6
 801f93a:	fa1f f588 	uxth.w	r5, r8
 801f93e:	9601      	str	r6, [sp, #4]
 801f940:	9500      	str	r5, [sp, #0]
 801f942:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801f944:	4621      	mov	r1, r4
 801f946:	47a8      	blx	r5
 801f948:	b00d      	add	sp, #52	; 0x34
 801f94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f94e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801f952:	e7e4      	b.n	801f91e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801f954:	6803      	ldr	r3, [r0, #0]
 801f956:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f958:	4798      	blx	r3
 801f95a:	4947      	ldr	r1, [pc, #284]	; (801fa78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801f95c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801f960:	880b      	ldrh	r3, [r1, #0]
 801f962:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801f966:	fb03 5202 	mla	r2, r3, r2, r5
 801f96a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f96e:	4373      	muls	r3, r6
 801f970:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f974:	9307      	str	r3, [sp, #28]
 801f976:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f97a:	9306      	str	r3, [sp, #24]
 801f97c:	468a      	mov	sl, r1
 801f97e:	9b07      	ldr	r3, [sp, #28]
 801f980:	4298      	cmp	r0, r3
 801f982:	d270      	bcs.n	801fa66 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801f984:	9b06      	ldr	r3, [sp, #24]
 801f986:	4621      	mov	r1, r4
 801f988:	eb00 0b03 	add.w	fp, r0, r3
 801f98c:	4558      	cmp	r0, fp
 801f98e:	d25d      	bcs.n	801fa4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801f990:	f851 4b04 	ldr.w	r4, [r1], #4
 801f994:	0e23      	lsrs	r3, r4, #24
 801f996:	d014      	beq.n	801f9c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801f998:	2bff      	cmp	r3, #255	; 0xff
 801f99a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801f99e:	d112      	bne.n	801f9c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801f9a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f9a4:	d10f      	bne.n	801f9c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801f9a6:	0963      	lsrs	r3, r4, #5
 801f9a8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f9ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9b0:	f02c 0c07 	bic.w	ip, ip, #7
 801f9b4:	ea43 0c0c 	orr.w	ip, r3, ip
 801f9b8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801f9bc:	ea4c 0404 	orr.w	r4, ip, r4
 801f9c0:	8004      	strh	r4, [r0, #0]
 801f9c2:	3002      	adds	r0, #2
 801f9c4:	e7e2      	b.n	801f98c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801f9c6:	fb09 f303 	mul.w	r3, r9, r3
 801f9ca:	8807      	ldrh	r7, [r0, #0]
 801f9cc:	1c5a      	adds	r2, r3, #1
 801f9ce:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801f9d2:	1212      	asrs	r2, r2, #8
 801f9d4:	123e      	asrs	r6, r7, #8
 801f9d6:	b293      	uxth	r3, r2
 801f9d8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801f9dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f9e0:	43d2      	mvns	r2, r2
 801f9e2:	b2d2      	uxtb	r2, r2
 801f9e4:	10fd      	asrs	r5, r7, #3
 801f9e6:	fb1e fe03 	smulbb	lr, lr, r3
 801f9ea:	00ff      	lsls	r7, r7, #3
 801f9ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f9f0:	fb06 e602 	mla	r6, r6, r2, lr
 801f9f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f9f8:	b2ff      	uxtb	r7, r7
 801f9fa:	fa5f fc8c 	uxtb.w	ip, ip
 801f9fe:	b2e4      	uxtb	r4, r4
 801fa00:	b2b6      	uxth	r6, r6
 801fa02:	fb1c fc03 	smulbb	ip, ip, r3
 801fa06:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fa0a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fa0e:	fb14 f403 	smulbb	r4, r4, r3
 801fa12:	fb05 c502 	mla	r5, r5, r2, ip
 801fa16:	f106 0e01 	add.w	lr, r6, #1
 801fa1a:	fb07 4702 	mla	r7, r7, r2, r4
 801fa1e:	b2ad      	uxth	r5, r5
 801fa20:	b2bf      	uxth	r7, r7
 801fa22:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801fa26:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801fa2a:	f105 0c01 	add.w	ip, r5, #1
 801fa2e:	1c7e      	adds	r6, r7, #1
 801fa30:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801fa34:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fa38:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801fa3c:	096d      	lsrs	r5, r5, #5
 801fa3e:	ea46 060e 	orr.w	r6, r6, lr
 801fa42:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fa46:	432e      	orrs	r6, r5
 801fa48:	8006      	strh	r6, [r0, #0]
 801fa4a:	e7ba      	b.n	801f9c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801fa4c:	f8ba 3000 	ldrh.w	r3, [sl]
 801fa50:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801fa54:	eba3 0308 	sub.w	r3, r3, r8
 801fa58:	eba4 0408 	sub.w	r4, r4, r8
 801fa5c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fa60:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801fa64:	e78b      	b.n	801f97e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801fa66:	4b03      	ldr	r3, [pc, #12]	; (801fa74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801fa68:	6818      	ldr	r0, [r3, #0]
 801fa6a:	6803      	ldr	r3, [r0, #0]
 801fa6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fa6e:	4798      	blx	r3
 801fa70:	e76a      	b.n	801f948 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801fa72:	bf00      	nop
 801fa74:	2001384c 	.word	0x2001384c
 801fa78:	20013846 	.word	0x20013846

0801fa7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801fa7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801fa80:	460c      	mov	r4, r1
 801fa82:	b085      	sub	sp, #20
 801fa84:	6810      	ldr	r0, [r2, #0]
 801fa86:	6851      	ldr	r1, [r2, #4]
 801fa88:	466d      	mov	r5, sp
 801fa8a:	c503      	stmia	r5!, {r0, r1}
 801fa8c:	6818      	ldr	r0, [r3, #0]
 801fa8e:	6859      	ldr	r1, [r3, #4]
 801fa90:	4616      	mov	r6, r2
 801fa92:	c503      	stmia	r5!, {r0, r1}
 801fa94:	4668      	mov	r0, sp
 801fa96:	f7f7 fe27 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fa9a:	4631      	mov	r1, r6
 801fa9c:	a802      	add	r0, sp, #8
 801fa9e:	f7f7 fe67 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801faa2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801faa6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801faaa:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801faae:	4d28      	ldr	r5, [pc, #160]	; (801fb50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801fab0:	4e28      	ldr	r6, [pc, #160]	; (801fb54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801fab2:	6828      	ldr	r0, [r5, #0]
 801fab4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801fab8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801fabc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fac0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801fac4:	f8bd 1000 	ldrh.w	r1, [sp]
 801fac8:	440a      	add	r2, r1
 801faca:	f8ad 2008 	strh.w	r2, [sp, #8]
 801face:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801fad2:	4413      	add	r3, r2
 801fad4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801fad8:	6803      	ldr	r3, [r0, #0]
 801fada:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fadc:	4798      	blx	r3
 801fade:	8833      	ldrh	r3, [r6, #0]
 801fae0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801fae4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801fae8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801fb58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801faec:	fb03 1202 	mla	r2, r3, r2, r1
 801faf0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801faf4:	fb08 f303 	mul.w	r3, r8, r3
 801faf8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fafc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801fb00:	4298      	cmp	r0, r3
 801fb02:	d21d      	bcs.n	801fb40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801fb04:	eb00 080c 	add.w	r8, r0, ip
 801fb08:	4540      	cmp	r0, r8
 801fb0a:	d20f      	bcs.n	801fb2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801fb0c:	f854 1b04 	ldr.w	r1, [r4], #4
 801fb10:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801fb14:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801fb18:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fb1c:	ea42 0209 	orr.w	r2, r2, r9
 801fb20:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fb24:	430a      	orrs	r2, r1
 801fb26:	f820 2b02 	strh.w	r2, [r0], #2
 801fb2a:	e7ed      	b.n	801fb08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801fb2c:	8832      	ldrh	r2, [r6, #0]
 801fb2e:	1bd2      	subs	r2, r2, r7
 801fb30:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fb34:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801fb38:	1bd2      	subs	r2, r2, r7
 801fb3a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801fb3e:	e7df      	b.n	801fb00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801fb40:	6828      	ldr	r0, [r5, #0]
 801fb42:	6803      	ldr	r3, [r0, #0]
 801fb44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb46:	4798      	blx	r3
 801fb48:	b005      	add	sp, #20
 801fb4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801fb4e:	bf00      	nop
 801fb50:	2001384c 	.word	0x2001384c
 801fb54:	20013846 	.word	0x20013846
 801fb58:	fffff800 	.word	0xfffff800

0801fb5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801fb5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fb60:	460e      	mov	r6, r1
 801fb62:	b08e      	sub	sp, #56	; 0x38
 801fb64:	4604      	mov	r4, r0
 801fb66:	6808      	ldr	r0, [r1, #0]
 801fb68:	6849      	ldr	r1, [r1, #4]
 801fb6a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801fd44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801fb6e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801fd48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801fb72:	461d      	mov	r5, r3
 801fb74:	ab0a      	add	r3, sp, #40	; 0x28
 801fb76:	c303      	stmia	r3!, {r0, r1}
 801fb78:	6810      	ldr	r0, [r2, #0]
 801fb7a:	6851      	ldr	r1, [r2, #4]
 801fb7c:	ab0c      	add	r3, sp, #48	; 0x30
 801fb7e:	c303      	stmia	r3!, {r0, r1}
 801fb80:	a80a      	add	r0, sp, #40	; 0x28
 801fb82:	f7f7 fdb1 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fb86:	4631      	mov	r1, r6
 801fb88:	a80c      	add	r0, sp, #48	; 0x30
 801fb8a:	f7f7 fdf1 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fb8e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801fb92:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801fb96:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801fb9a:	f8d8 0000 	ldr.w	r0, [r8]
 801fb9e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801fba2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801fba6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fbaa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fbae:	440c      	add	r4, r1
 801fbb0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801fbb4:	440a      	add	r2, r1
 801fbb6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801fbba:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801fbbe:	4413      	add	r3, r2
 801fbc0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801fbc4:	6803      	ldr	r3, [r0, #0]
 801fbc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fbc8:	4798      	blx	r3
 801fbca:	2dff      	cmp	r5, #255	; 0xff
 801fbcc:	d124      	bne.n	801fc18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801fbce:	f010 0f01 	tst.w	r0, #1
 801fbd2:	f8d8 0000 	ldr.w	r0, [r8]
 801fbd6:	d022      	beq.n	801fc1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801fbd8:	2100      	movs	r1, #0
 801fbda:	f8d0 c000 	ldr.w	ip, [r0]
 801fbde:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801fbe2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801fbe6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801fbea:	f04f 0e01 	mov.w	lr, #1
 801fbee:	f8cd e018 	str.w	lr, [sp, #24]
 801fbf2:	f8b9 e000 	ldrh.w	lr, [r9]
 801fbf6:	9503      	str	r5, [sp, #12]
 801fbf8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801fbfc:	b2b6      	uxth	r6, r6
 801fbfe:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801fc02:	9102      	str	r1, [sp, #8]
 801fc04:	b2bf      	uxth	r7, r7
 801fc06:	9601      	str	r6, [sp, #4]
 801fc08:	9700      	str	r7, [sp, #0]
 801fc0a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801fc0e:	4621      	mov	r1, r4
 801fc10:	47a8      	blx	r5
 801fc12:	b00e      	add	sp, #56	; 0x38
 801fc14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fc18:	f010 0f04 	tst.w	r0, #4
 801fc1c:	e7d9      	b.n	801fbd2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801fc1e:	6803      	ldr	r3, [r0, #0]
 801fc20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc22:	4798      	blx	r3
 801fc24:	f8b9 3000 	ldrh.w	r3, [r9]
 801fc28:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801fc2c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801fc30:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801fc34:	fb03 1202 	mla	r2, r3, r2, r1
 801fc38:	ebac 0c07 	sub.w	ip, ip, r7
 801fc3c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fc40:	435e      	muls	r6, r3
 801fc42:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801fc46:	2dff      	cmp	r5, #255	; 0xff
 801fc48:	eba3 0707 	sub.w	r7, r3, r7
 801fc4c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801fc50:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fc54:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801fc58:	d049      	beq.n	801fcee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801fc5a:	43eb      	mvns	r3, r5
 801fc5c:	fa1f f985 	uxth.w	r9, r5
 801fc60:	b2db      	uxtb	r3, r3
 801fc62:	42b0      	cmp	r0, r6
 801fc64:	d266      	bcs.n	801fd34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fc66:	eb00 0a0e 	add.w	sl, r0, lr
 801fc6a:	4550      	cmp	r0, sl
 801fc6c:	4621      	mov	r1, r4
 801fc6e:	f104 0403 	add.w	r4, r4, #3
 801fc72:	d25b      	bcs.n	801fd2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801fc74:	8802      	ldrh	r2, [r0, #0]
 801fc76:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801fc7a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801fc7e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801fc82:	fb11 f109 	smulbb	r1, r1, r9
 801fc86:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801fc8a:	10d5      	asrs	r5, r2, #3
 801fc8c:	fb08 1803 	mla	r8, r8, r3, r1
 801fc90:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801fc94:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fc98:	fb11 f109 	smulbb	r1, r1, r9
 801fc9c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fca0:	fb05 1503 	mla	r5, r5, r3, r1
 801fca4:	00d2      	lsls	r2, r2, #3
 801fca6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fcaa:	b2d2      	uxtb	r2, r2
 801fcac:	fb11 f109 	smulbb	r1, r1, r9
 801fcb0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fcb4:	fa1f f888 	uxth.w	r8, r8
 801fcb8:	fb02 1203 	mla	r2, r2, r3, r1
 801fcbc:	b292      	uxth	r2, r2
 801fcbe:	f108 0101 	add.w	r1, r8, #1
 801fcc2:	b2ad      	uxth	r5, r5
 801fcc4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801fcc8:	1c51      	adds	r1, r2, #1
 801fcca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fcce:	1c69      	adds	r1, r5, #1
 801fcd0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801fcd4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801fcd8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fcdc:	096d      	lsrs	r5, r5, #5
 801fcde:	ea42 0208 	orr.w	r2, r2, r8
 801fce2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fce6:	432a      	orrs	r2, r5
 801fce8:	f820 2b02 	strh.w	r2, [r0], #2
 801fcec:	e7bd      	b.n	801fc6a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801fcee:	4a14      	ldr	r2, [pc, #80]	; (801fd40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801fcf0:	42b0      	cmp	r0, r6
 801fcf2:	d21f      	bcs.n	801fd34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fcf4:	eb00 050e 	add.w	r5, r0, lr
 801fcf8:	42a8      	cmp	r0, r5
 801fcfa:	4621      	mov	r1, r4
 801fcfc:	f104 0403 	add.w	r4, r4, #3
 801fd00:	d210      	bcs.n	801fd24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801fd02:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801fd06:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801fd0a:	00db      	lsls	r3, r3, #3
 801fd0c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801fd10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fd14:	430b      	orrs	r3, r1
 801fd16:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fd1a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801fd1e:	f820 3b02 	strh.w	r3, [r0], #2
 801fd22:	e7e9      	b.n	801fcf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801fd24:	4438      	add	r0, r7
 801fd26:	eb01 040c 	add.w	r4, r1, ip
 801fd2a:	e7e1      	b.n	801fcf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801fd2c:	4438      	add	r0, r7
 801fd2e:	eb01 040c 	add.w	r4, r1, ip
 801fd32:	e796      	b.n	801fc62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801fd34:	4b03      	ldr	r3, [pc, #12]	; (801fd44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801fd36:	6818      	ldr	r0, [r3, #0]
 801fd38:	6803      	ldr	r3, [r0, #0]
 801fd3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fd3c:	4798      	blx	r3
 801fd3e:	e768      	b.n	801fc12 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801fd40:	fffff800 	.word	0xfffff800
 801fd44:	2001384c 	.word	0x2001384c
 801fd48:	20013846 	.word	0x20013846

0801fd4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801fd4c:	b4f0      	push	{r4, r5, r6, r7}
 801fd4e:	4616      	mov	r6, r2
 801fd50:	2e01      	cmp	r6, #1
 801fd52:	461c      	mov	r4, r3
 801fd54:	460d      	mov	r5, r1
 801fd56:	9a04      	ldr	r2, [sp, #16]
 801fd58:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801fd5c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801fd60:	d012      	beq.n	801fd88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801fd62:	d303      	bcc.n	801fd6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801fd64:	2e02      	cmp	r6, #2
 801fd66:	d00a      	beq.n	801fd7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801fd68:	bcf0      	pop	{r4, r5, r6, r7}
 801fd6a:	4770      	bx	lr
 801fd6c:	6805      	ldr	r5, [r0, #0]
 801fd6e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801fd72:	68ed      	ldr	r5, [r5, #12]
 801fd74:	4613      	mov	r3, r2
 801fd76:	46ac      	mov	ip, r5
 801fd78:	4622      	mov	r2, r4
 801fd7a:	bcf0      	pop	{r4, r5, r6, r7}
 801fd7c:	4760      	bx	ip
 801fd7e:	4621      	mov	r1, r4
 801fd80:	4628      	mov	r0, r5
 801fd82:	bcf0      	pop	{r4, r5, r6, r7}
 801fd84:	f7ff bd94 	b.w	801f8b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fd88:	4621      	mov	r1, r4
 801fd8a:	4628      	mov	r0, r5
 801fd8c:	bcf0      	pop	{r4, r5, r6, r7}
 801fd8e:	f7ff bee5 	b.w	801fb5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801fd94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801fd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd98:	4681      	mov	r9, r0
 801fd9a:	b093      	sub	sp, #76	; 0x4c
 801fd9c:	6810      	ldr	r0, [r2, #0]
 801fd9e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801fda2:	4f6d      	ldr	r7, [pc, #436]	; (801ff58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801fda4:	4688      	mov	r8, r1
 801fda6:	6851      	ldr	r1, [r2, #4]
 801fda8:	ac0e      	add	r4, sp, #56	; 0x38
 801fdaa:	c403      	stmia	r4!, {r0, r1}
 801fdac:	6818      	ldr	r0, [r3, #0]
 801fdae:	6859      	ldr	r1, [r3, #4]
 801fdb0:	ac10      	add	r4, sp, #64	; 0x40
 801fdb2:	4616      	mov	r6, r2
 801fdb4:	c403      	stmia	r4!, {r0, r1}
 801fdb6:	a80e      	add	r0, sp, #56	; 0x38
 801fdb8:	f7f7 fc96 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fdbc:	4631      	mov	r1, r6
 801fdbe:	a810      	add	r0, sp, #64	; 0x40
 801fdc0:	f7f7 fcd6 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fdc4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801fdc8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801fdcc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801fdd0:	4e62      	ldr	r6, [pc, #392]	; (801ff5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801fdd2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801fdd6:	6830      	ldr	r0, [r6, #0]
 801fdd8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801fddc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fde0:	4489      	add	r9, r1
 801fde2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801fde6:	440a      	add	r2, r1
 801fde8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801fdec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801fdf0:	4413      	add	r3, r2
 801fdf2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801fdf6:	6803      	ldr	r3, [r0, #0]
 801fdf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fdfa:	4798      	blx	r3
 801fdfc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801fe00:	6830      	ldr	r0, [r6, #0]
 801fe02:	d01d      	beq.n	801fe40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801fe04:	2200      	movs	r2, #0
 801fe06:	6801      	ldr	r1, [r0, #0]
 801fe08:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801fe0c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801fe10:	220b      	movs	r2, #11
 801fe12:	9207      	str	r2, [sp, #28]
 801fe14:	883a      	ldrh	r2, [r7, #0]
 801fe16:	9206      	str	r2, [sp, #24]
 801fe18:	2201      	movs	r2, #1
 801fe1a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801fe1e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801fe22:	9203      	str	r2, [sp, #12]
 801fe24:	b2a4      	uxth	r4, r4
 801fe26:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801fe2a:	9200      	str	r2, [sp, #0]
 801fe2c:	b2ad      	uxth	r5, r5
 801fe2e:	9502      	str	r5, [sp, #8]
 801fe30:	9401      	str	r4, [sp, #4]
 801fe32:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801fe34:	4642      	mov	r2, r8
 801fe36:	4649      	mov	r1, r9
 801fe38:	47a0      	blx	r4
 801fe3a:	b013      	add	sp, #76	; 0x4c
 801fe3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe40:	6803      	ldr	r3, [r0, #0]
 801fe42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fe44:	4798      	blx	r3
 801fe46:	883b      	ldrh	r3, [r7, #0]
 801fe48:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fe4c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801fe50:	fb03 1202 	mla	r2, r3, r2, r1
 801fe54:	435d      	muls	r5, r3
 801fe56:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fe5a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801fe5e:	920c      	str	r2, [sp, #48]	; 0x30
 801fe60:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801fe64:	1b12      	subs	r2, r2, r4
 801fe66:	920d      	str	r2, [sp, #52]	; 0x34
 801fe68:	0062      	lsls	r2, r4, #1
 801fe6a:	1b1c      	subs	r4, r3, r4
 801fe6c:	0063      	lsls	r3, r4, #1
 801fe6e:	920a      	str	r2, [sp, #40]	; 0x28
 801fe70:	930b      	str	r3, [sp, #44]	; 0x2c
 801fe72:	f04f 0e04 	mov.w	lr, #4
 801fe76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fe78:	4298      	cmp	r0, r3
 801fe7a:	d266      	bcs.n	801ff4a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801fe7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fe7e:	eb00 0b03 	add.w	fp, r0, r3
 801fe82:	4558      	cmp	r0, fp
 801fe84:	d25c      	bcs.n	801ff40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801fe86:	f819 3b01 	ldrb.w	r3, [r9], #1
 801fe8a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801fe8e:	f858 2003 	ldr.w	r2, [r8, r3]
 801fe92:	0e11      	lsrs	r1, r2, #24
 801fe94:	d012      	beq.n	801febc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801fe96:	29ff      	cmp	r1, #255	; 0xff
 801fe98:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801fe9c:	d110      	bne.n	801fec0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801fe9e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fea2:	d10d      	bne.n	801fec0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801fea4:	0953      	lsrs	r3, r2, #5
 801fea6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801feaa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801feae:	f027 0707 	bic.w	r7, r7, #7
 801feb2:	431f      	orrs	r7, r3
 801feb4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801feb8:	433a      	orrs	r2, r7
 801feba:	8002      	strh	r2, [r0, #0]
 801febc:	3002      	adds	r0, #2
 801febe:	e7e0      	b.n	801fe82 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801fec0:	fb0a f101 	mul.w	r1, sl, r1
 801fec4:	8806      	ldrh	r6, [r0, #0]
 801fec6:	1c4b      	adds	r3, r1, #1
 801fec8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801fecc:	1235      	asrs	r5, r6, #8
 801fece:	10f4      	asrs	r4, r6, #3
 801fed0:	121b      	asrs	r3, r3, #8
 801fed2:	00f6      	lsls	r6, r6, #3
 801fed4:	b299      	uxth	r1, r3
 801fed6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801feda:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fede:	b2f6      	uxtb	r6, r6
 801fee0:	43db      	mvns	r3, r3
 801fee2:	b2d2      	uxtb	r2, r2
 801fee4:	b2db      	uxtb	r3, r3
 801fee6:	fb1c fc01 	smulbb	ip, ip, r1
 801feea:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801feee:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801fef2:	fb12 f201 	smulbb	r2, r2, r1
 801fef6:	fb05 c503 	mla	r5, r5, r3, ip
 801fefa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801fefe:	b2ff      	uxtb	r7, r7
 801ff00:	fb06 2203 	mla	r2, r6, r3, r2
 801ff04:	b2ad      	uxth	r5, r5
 801ff06:	fb17 f701 	smulbb	r7, r7, r1
 801ff0a:	b292      	uxth	r2, r2
 801ff0c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ff10:	fb04 7403 	mla	r4, r4, r3, r7
 801ff14:	f105 0c01 	add.w	ip, r5, #1
 801ff18:	1c57      	adds	r7, r2, #1
 801ff1a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ff1e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ff22:	b2a4      	uxth	r4, r4
 801ff24:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ff28:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ff2c:	433d      	orrs	r5, r7
 801ff2e:	1c67      	adds	r7, r4, #1
 801ff30:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801ff34:	0964      	lsrs	r4, r4, #5
 801ff36:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ff3a:	4325      	orrs	r5, r4
 801ff3c:	8005      	strh	r5, [r0, #0]
 801ff3e:	e7bd      	b.n	801febc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ff40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff42:	4418      	add	r0, r3
 801ff44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff46:	4499      	add	r9, r3
 801ff48:	e795      	b.n	801fe76 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801ff4a:	4b04      	ldr	r3, [pc, #16]	; (801ff5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ff4c:	6818      	ldr	r0, [r3, #0]
 801ff4e:	6803      	ldr	r3, [r0, #0]
 801ff50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ff52:	4798      	blx	r3
 801ff54:	e771      	b.n	801fe3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ff56:	bf00      	nop
 801ff58:	20013846 	.word	0x20013846
 801ff5c:	2001384c 	.word	0x2001384c

0801ff60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ff60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff64:	b087      	sub	sp, #28
 801ff66:	4680      	mov	r8, r0
 801ff68:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801ff6c:	460d      	mov	r5, r1
 801ff6e:	4614      	mov	r4, r2
 801ff70:	2e00      	cmp	r6, #0
 801ff72:	f000 80b9 	beq.w	80200e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801ff76:	6810      	ldr	r0, [r2, #0]
 801ff78:	6851      	ldr	r1, [r2, #4]
 801ff7a:	af02      	add	r7, sp, #8
 801ff7c:	c703      	stmia	r7!, {r0, r1}
 801ff7e:	6818      	ldr	r0, [r3, #0]
 801ff80:	6859      	ldr	r1, [r3, #4]
 801ff82:	af04      	add	r7, sp, #16
 801ff84:	c703      	stmia	r7!, {r0, r1}
 801ff86:	a802      	add	r0, sp, #8
 801ff88:	f7f7 fbae 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ff8c:	4621      	mov	r1, r4
 801ff8e:	a804      	add	r0, sp, #16
 801ff90:	f7f7 fbee 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ff94:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ff98:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ff9c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801ffa0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ffa4:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ffa8:	eb08 0401 	add.w	r4, r8, r1
 801ffac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ffb0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ffb4:	440a      	add	r2, r1
 801ffb6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ffba:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ffbe:	4413      	add	r3, r2
 801ffc0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ffc4:	4b4a      	ldr	r3, [pc, #296]	; (80200f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ffc6:	6818      	ldr	r0, [r3, #0]
 801ffc8:	6803      	ldr	r3, [r0, #0]
 801ffca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ffcc:	4798      	blx	r3
 801ffce:	4b49      	ldr	r3, [pc, #292]	; (80200f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801ffd0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ffd4:	881a      	ldrh	r2, [r3, #0]
 801ffd6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801ffda:	2eff      	cmp	r6, #255	; 0xff
 801ffdc:	fb02 c101 	mla	r1, r2, r1, ip
 801ffe0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ffe4:	fb02 f207 	mul.w	r2, r2, r7
 801ffe8:	f105 0104 	add.w	r1, r5, #4
 801ffec:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801fff0:	461d      	mov	r5, r3
 801fff2:	d05a      	beq.n	80200aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801fff4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801fff8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801fffc:	b2b6      	uxth	r6, r6
 801fffe:	fa1f fe8e 	uxth.w	lr, lr
 8020002:	9301      	str	r3, [sp, #4]
 8020004:	4282      	cmp	r2, r0
 8020006:	d96a      	bls.n	80200de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020008:	eb00 0b0a 	add.w	fp, r0, sl
 802000c:	4583      	cmp	fp, r0
 802000e:	d940      	bls.n	8020092 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8020010:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020014:	8805      	ldrh	r5, [r0, #0]
 8020016:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802001a:	122f      	asrs	r7, r5, #8
 802001c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020020:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020024:	fb17 f70e 	smulbb	r7, r7, lr
 8020028:	ea4f 09e5 	mov.w	r9, r5, asr #3
 802002c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020030:	00ed      	lsls	r5, r5, #3
 8020032:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020036:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 802003a:	10df      	asrs	r7, r3, #3
 802003c:	b2ed      	uxtb	r5, r5
 802003e:	00db      	lsls	r3, r3, #3
 8020040:	fa1f fc8c 	uxth.w	ip, ip
 8020044:	fb19 f90e 	smulbb	r9, r9, lr
 8020048:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802004c:	b2db      	uxtb	r3, r3
 802004e:	fb15 f50e 	smulbb	r5, r5, lr
 8020052:	fb07 9706 	mla	r7, r7, r6, r9
 8020056:	fb03 5306 	mla	r3, r3, r6, r5
 802005a:	f10c 0901 	add.w	r9, ip, #1
 802005e:	b29b      	uxth	r3, r3
 8020060:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020064:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020068:	f103 0c01 	add.w	ip, r3, #1
 802006c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020070:	b2bf      	uxth	r7, r7
 8020072:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020076:	ea4c 0c09 	orr.w	ip, ip, r9
 802007a:	f107 0901 	add.w	r9, r7, #1
 802007e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020082:	097f      	lsrs	r7, r7, #5
 8020084:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020088:	ea4c 0c07 	orr.w	ip, ip, r7
 802008c:	f820 cb02 	strh.w	ip, [r0], #2
 8020090:	e7bc      	b.n	802000c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8020092:	9b01      	ldr	r3, [sp, #4]
 8020094:	881b      	ldrh	r3, [r3, #0]
 8020096:	eba3 0308 	sub.w	r3, r3, r8
 802009a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802009e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80200a2:	eba3 0308 	sub.w	r3, r3, r8
 80200a6:	441c      	add	r4, r3
 80200a8:	e7ac      	b.n	8020004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80200aa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80200ae:	4282      	cmp	r2, r0
 80200b0:	d915      	bls.n	80200de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80200b2:	eb00 060a 	add.w	r6, r0, sl
 80200b6:	4286      	cmp	r6, r0
 80200b8:	d906      	bls.n	80200c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80200ba:	f814 3b01 	ldrb.w	r3, [r4], #1
 80200be:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80200c2:	f820 3b02 	strh.w	r3, [r0], #2
 80200c6:	e7f6      	b.n	80200b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80200c8:	882b      	ldrh	r3, [r5, #0]
 80200ca:	eba3 0308 	sub.w	r3, r3, r8
 80200ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80200d2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80200d6:	eba3 0308 	sub.w	r3, r3, r8
 80200da:	441c      	add	r4, r3
 80200dc:	e7e7      	b.n	80200ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80200de:	4b04      	ldr	r3, [pc, #16]	; (80200f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80200e0:	6818      	ldr	r0, [r3, #0]
 80200e2:	6803      	ldr	r3, [r0, #0]
 80200e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80200e6:	4798      	blx	r3
 80200e8:	b007      	add	sp, #28
 80200ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80200ee:	bf00      	nop
 80200f0:	2001384c 	.word	0x2001384c
 80200f4:	20013846 	.word	0x20013846

080200f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80200f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200fc:	b091      	sub	sp, #68	; 0x44
 80200fe:	4680      	mov	r8, r0
 8020100:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8020104:	460f      	mov	r7, r1
 8020106:	4614      	mov	r4, r2
 8020108:	2d00      	cmp	r5, #0
 802010a:	d051      	beq.n	80201b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802010c:	6810      	ldr	r0, [r2, #0]
 802010e:	6851      	ldr	r1, [r2, #4]
 8020110:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8020314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8020114:	ae0c      	add	r6, sp, #48	; 0x30
 8020116:	c603      	stmia	r6!, {r0, r1}
 8020118:	6818      	ldr	r0, [r3, #0]
 802011a:	6859      	ldr	r1, [r3, #4]
 802011c:	ae0e      	add	r6, sp, #56	; 0x38
 802011e:	c603      	stmia	r6!, {r0, r1}
 8020120:	a80c      	add	r0, sp, #48	; 0x30
 8020122:	f7f7 fae1 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020126:	4621      	mov	r1, r4
 8020128:	a80e      	add	r0, sp, #56	; 0x38
 802012a:	f7f7 fb21 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802012e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8020132:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8020136:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 802013a:	f8d9 0000 	ldr.w	r0, [r9]
 802013e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8020142:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8020146:	fb11 2103 	smlabb	r1, r1, r3, r2
 802014a:	eb08 0401 	add.w	r4, r8, r1
 802014e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8020152:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8020318 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8020156:	440a      	add	r2, r1
 8020158:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 802015c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8020160:	4413      	add	r3, r2
 8020162:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8020166:	6803      	ldr	r3, [r0, #0]
 8020168:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802016a:	4798      	blx	r3
 802016c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020170:	f8d9 0000 	ldr.w	r0, [r9]
 8020174:	d01f      	beq.n	80201b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8020176:	2200      	movs	r2, #0
 8020178:	6801      	ldr	r1, [r0, #0]
 802017a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 802017e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020182:	220b      	movs	r2, #11
 8020184:	9207      	str	r2, [sp, #28]
 8020186:	f8b8 2000 	ldrh.w	r2, [r8]
 802018a:	9206      	str	r2, [sp, #24]
 802018c:	2201      	movs	r2, #1
 802018e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8020192:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8020196:	9203      	str	r2, [sp, #12]
 8020198:	fa1f f28a 	uxth.w	r2, sl
 802019c:	9202      	str	r2, [sp, #8]
 802019e:	b2b6      	uxth	r6, r6
 80201a0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80201a4:	9200      	str	r2, [sp, #0]
 80201a6:	9601      	str	r6, [sp, #4]
 80201a8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80201aa:	463a      	mov	r2, r7
 80201ac:	4621      	mov	r1, r4
 80201ae:	47a8      	blx	r5
 80201b0:	b011      	add	sp, #68	; 0x44
 80201b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201b6:	6803      	ldr	r3, [r0, #0]
 80201b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80201ba:	4798      	blx	r3
 80201bc:	f8b8 2000 	ldrh.w	r2, [r8]
 80201c0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80201c4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80201c8:	2dff      	cmp	r5, #255	; 0xff
 80201ca:	fb02 1303 	mla	r3, r2, r3, r1
 80201ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80201d2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80201d6:	fb0a fa02 	mul.w	sl, sl, r2
 80201da:	d062      	beq.n	80202a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80201dc:	ea6f 0c05 	mvn.w	ip, r5
 80201e0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80201e4:	930a      	str	r3, [sp, #40]	; 0x28
 80201e6:	b2ad      	uxth	r5, r5
 80201e8:	fa5f fc8c 	uxtb.w	ip, ip
 80201ec:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80201f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80201f2:	4298      	cmp	r0, r3
 80201f4:	f080 8085 	bcs.w	8020302 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80201f8:	eb00 0b09 	add.w	fp, r0, r9
 80201fc:	4558      	cmp	r0, fp
 80201fe:	d246      	bcs.n	802028e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8020200:	f814 eb01 	ldrb.w	lr, [r4], #1
 8020204:	2303      	movs	r3, #3
 8020206:	2204      	movs	r2, #4
 8020208:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802020c:	eb07 0a0e 	add.w	sl, r7, lr
 8020210:	8803      	ldrh	r3, [r0, #0]
 8020212:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8020216:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802021a:	1219      	asrs	r1, r3, #8
 802021c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020220:	fb18 f805 	smulbb	r8, r8, r5
 8020224:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8020228:	10da      	asrs	r2, r3, #3
 802022a:	fb01 810c 	mla	r1, r1, ip, r8
 802022e:	00db      	lsls	r3, r3, #3
 8020230:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020234:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020238:	b2db      	uxtb	r3, r3
 802023a:	fb18 f805 	smulbb	r8, r8, r5
 802023e:	fb1e fe05 	smulbb	lr, lr, r5
 8020242:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8020246:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802024a:	b289      	uxth	r1, r1
 802024c:	fb02 820c 	mla	r2, r2, ip, r8
 8020250:	fb03 e30c 	mla	r3, r3, ip, lr
 8020254:	b292      	uxth	r2, r2
 8020256:	b29b      	uxth	r3, r3
 8020258:	f101 0801 	add.w	r8, r1, #1
 802025c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8020260:	f103 0e01 	add.w	lr, r3, #1
 8020264:	f102 0801 	add.w	r8, r2, #1
 8020268:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 802026c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8020270:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020274:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020278:	ea4f 1858 	mov.w	r8, r8, lsr #5
 802027c:	ea4e 0101 	orr.w	r1, lr, r1
 8020280:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020284:	ea41 0108 	orr.w	r1, r1, r8
 8020288:	f820 1b02 	strh.w	r1, [r0], #2
 802028c:	e7b6      	b.n	80201fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 802028e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020290:	881b      	ldrh	r3, [r3, #0]
 8020292:	1b9b      	subs	r3, r3, r6
 8020294:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020298:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802029c:	1b9b      	subs	r3, r3, r6
 802029e:	441c      	add	r4, r3
 80202a0:	e7a6      	b.n	80201f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80202a2:	491b      	ldr	r1, [pc, #108]	; (8020310 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80202a4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80202a8:	2203      	movs	r2, #3
 80202aa:	2504      	movs	r5, #4
 80202ac:	4550      	cmp	r0, sl
 80202ae:	d228      	bcs.n	8020302 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80202b0:	eb00 0c09 	add.w	ip, r0, r9
 80202b4:	4560      	cmp	r0, ip
 80202b6:	4623      	mov	r3, r4
 80202b8:	d219      	bcs.n	80202ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80202ba:	f893 e000 	ldrb.w	lr, [r3]
 80202be:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80202c2:	eb07 0b0e 	add.w	fp, r7, lr
 80202c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80202ca:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80202ce:	f89b b001 	ldrb.w	fp, [fp, #1]
 80202d2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80202d6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80202da:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80202de:	ea43 030b 	orr.w	r3, r3, fp
 80202e2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80202e6:	3401      	adds	r4, #1
 80202e8:	f820 3b02 	strh.w	r3, [r0], #2
 80202ec:	e7e2      	b.n	80202b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80202ee:	f8b8 3000 	ldrh.w	r3, [r8]
 80202f2:	1b9b      	subs	r3, r3, r6
 80202f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80202f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80202fc:	1b9b      	subs	r3, r3, r6
 80202fe:	441c      	add	r4, r3
 8020300:	e7d4      	b.n	80202ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8020302:	4b04      	ldr	r3, [pc, #16]	; (8020314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8020304:	6818      	ldr	r0, [r3, #0]
 8020306:	6803      	ldr	r3, [r0, #0]
 8020308:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802030a:	4798      	blx	r3
 802030c:	e750      	b.n	80201b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802030e:	bf00      	nop
 8020310:	fffff800 	.word	0xfffff800
 8020314:	2001384c 	.word	0x2001384c
 8020318:	20013846 	.word	0x20013846

0802031c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802031c:	b4f0      	push	{r4, r5, r6, r7}
 802031e:	460c      	mov	r4, r1
 8020320:	4611      	mov	r1, r2
 8020322:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020326:	780f      	ldrb	r7, [r1, #0]
 8020328:	784e      	ldrb	r6, [r1, #1]
 802032a:	2f01      	cmp	r7, #1
 802032c:	461a      	mov	r2, r3
 802032e:	9b04      	ldr	r3, [sp, #16]
 8020330:	d036      	beq.n	80203a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8020332:	d31e      	bcc.n	8020372 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8020334:	2f02      	cmp	r7, #2
 8020336:	d14a      	bne.n	80203ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8020338:	2e03      	cmp	r6, #3
 802033a:	d848      	bhi.n	80203ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802033c:	e8df f006 	tbb	[pc, r6]
 8020340:	16140702 	.word	0x16140702
 8020344:	9504      	str	r5, [sp, #16]
 8020346:	4620      	mov	r0, r4
 8020348:	bcf0      	pop	{r4, r5, r6, r7}
 802034a:	f7ff be09 	b.w	801ff60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 802034e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8020350:	2800      	cmp	r0, #0
 8020352:	d03c      	beq.n	80203ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8020354:	6806      	ldr	r6, [r0, #0]
 8020356:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802035a:	68b5      	ldr	r5, [r6, #8]
 802035c:	4613      	mov	r3, r2
 802035e:	46ac      	mov	ip, r5
 8020360:	460a      	mov	r2, r1
 8020362:	4621      	mov	r1, r4
 8020364:	bcf0      	pop	{r4, r5, r6, r7}
 8020366:	4760      	bx	ip
 8020368:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 802036a:	e7f1      	b.n	8020350 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802036c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8020370:	e7ee      	b.n	8020350 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8020372:	2e03      	cmp	r6, #3
 8020374:	d82b      	bhi.n	80203ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8020376:	e8df f006 	tbb	[pc, r6]
 802037a:	0702      	.short	0x0702
 802037c:	100e      	.short	0x100e
 802037e:	9504      	str	r5, [sp, #16]
 8020380:	4620      	mov	r0, r4
 8020382:	bcf0      	pop	{r4, r5, r6, r7}
 8020384:	f7ff bd06 	b.w	801fd94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8020388:	6f80      	ldr	r0, [r0, #120]	; 0x78
 802038a:	b300      	cbz	r0, 80203ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802038c:	6806      	ldr	r6, [r0, #0]
 802038e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8020392:	68f5      	ldr	r5, [r6, #12]
 8020394:	e7e2      	b.n	802035c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8020396:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8020398:	e7f7      	b.n	802038a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 802039a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802039e:	e7f4      	b.n	802038a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80203a0:	2e03      	cmp	r6, #3
 80203a2:	d814      	bhi.n	80203ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80203a4:	e8df f006 	tbb	[pc, r6]
 80203a8:	100e0702 	.word	0x100e0702
 80203ac:	9504      	str	r5, [sp, #16]
 80203ae:	4620      	mov	r0, r4
 80203b0:	bcf0      	pop	{r4, r5, r6, r7}
 80203b2:	f7ff bea1 	b.w	80200f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80203b6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80203b8:	b148      	cbz	r0, 80203ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80203ba:	6806      	ldr	r6, [r0, #0]
 80203bc:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80203c0:	6935      	ldr	r5, [r6, #16]
 80203c2:	e7cb      	b.n	802035c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80203c4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80203c6:	e7f7      	b.n	80203b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80203c8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80203cc:	e7f4      	b.n	80203b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80203ce:	bcf0      	pop	{r4, r5, r6, r7}
 80203d0:	4770      	bx	lr
	...

080203d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80203d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203d8:	4604      	mov	r4, r0
 80203da:	b087      	sub	sp, #28
 80203dc:	6810      	ldr	r0, [r2, #0]
 80203de:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80203e2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 802061c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80203e6:	460e      	mov	r6, r1
 80203e8:	6851      	ldr	r1, [r2, #4]
 80203ea:	ad02      	add	r5, sp, #8
 80203ec:	c503      	stmia	r5!, {r0, r1}
 80203ee:	6818      	ldr	r0, [r3, #0]
 80203f0:	6859      	ldr	r1, [r3, #4]
 80203f2:	ad04      	add	r5, sp, #16
 80203f4:	4617      	mov	r7, r2
 80203f6:	c503      	stmia	r5!, {r0, r1}
 80203f8:	a802      	add	r0, sp, #8
 80203fa:	f7f7 f975 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80203fe:	4639      	mov	r1, r7
 8020400:	a804      	add	r0, sp, #16
 8020402:	f7f7 f9b5 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020406:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802040a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802040e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8020412:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020416:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802041a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802041e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8020422:	440e      	add	r6, r1
 8020424:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020428:	440a      	add	r2, r1
 802042a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802042e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020432:	4413      	add	r3, r2
 8020434:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020438:	4b77      	ldr	r3, [pc, #476]	; (8020618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802043a:	6818      	ldr	r0, [r3, #0]
 802043c:	6803      	ldr	r3, [r0, #0]
 802043e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020440:	4798      	blx	r3
 8020442:	f8b9 b000 	ldrh.w	fp, [r9]
 8020446:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802044a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802044e:	fb0b 2303 	mla	r3, fp, r3, r2
 8020452:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020456:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802045a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802045e:	fb05 f50b 	mul.w	r5, r5, fp
 8020462:	9300      	str	r3, [sp, #0]
 8020464:	d069      	beq.n	802053a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8020466:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 802046a:	4558      	cmp	r0, fp
 802046c:	f080 80cc 	bcs.w	8020608 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8020470:	9b00      	ldr	r3, [sp, #0]
 8020472:	18c3      	adds	r3, r0, r3
 8020474:	9301      	str	r3, [sp, #4]
 8020476:	4631      	mov	r1, r6
 8020478:	9b01      	ldr	r3, [sp, #4]
 802047a:	4298      	cmp	r0, r3
 802047c:	d24f      	bcs.n	802051e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 802047e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8020482:	2a00      	cmp	r2, #0
 8020484:	d048      	beq.n	8020518 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8020486:	fb0a f202 	mul.w	r2, sl, r2
 802048a:	1c53      	adds	r3, r2, #1
 802048c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020490:	121b      	asrs	r3, r3, #8
 8020492:	d041      	beq.n	8020518 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8020494:	8802      	ldrh	r2, [r0, #0]
 8020496:	f8b4 c000 	ldrh.w	ip, [r4]
 802049a:	b29e      	uxth	r6, r3
 802049c:	1215      	asrs	r5, r2, #8
 802049e:	43db      	mvns	r3, r3
 80204a0:	b2db      	uxtb	r3, r3
 80204a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80204a6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80204aa:	fb15 f503 	smulbb	r5, r5, r3
 80204ae:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80204b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80204b6:	00d2      	lsls	r2, r2, #3
 80204b8:	fb07 5706 	mla	r7, r7, r6, r5
 80204bc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80204c0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80204c4:	b2d2      	uxtb	r2, r2
 80204c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80204ca:	b2bf      	uxth	r7, r7
 80204cc:	fb1e fe03 	smulbb	lr, lr, r3
 80204d0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80204d4:	fa5f fc8c 	uxtb.w	ip, ip
 80204d8:	fb12 f203 	smulbb	r2, r2, r3
 80204dc:	fb05 e506 	mla	r5, r5, r6, lr
 80204e0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80204e4:	f107 0e01 	add.w	lr, r7, #1
 80204e8:	fa1f fc8c 	uxth.w	ip, ip
 80204ec:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80204f0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80204f4:	f10c 0701 	add.w	r7, ip, #1
 80204f8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80204fc:	b2ad      	uxth	r5, r5
 80204fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020502:	ea47 070e 	orr.w	r7, r7, lr
 8020506:	f105 0e01 	add.w	lr, r5, #1
 802050a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802050e:	096d      	lsrs	r5, r5, #5
 8020510:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020514:	432f      	orrs	r7, r5
 8020516:	8007      	strh	r7, [r0, #0]
 8020518:	3002      	adds	r0, #2
 802051a:	3402      	adds	r4, #2
 802051c:	e7ac      	b.n	8020478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802051e:	f8b9 3000 	ldrh.w	r3, [r9]
 8020522:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8020526:	eba3 0308 	sub.w	r3, r3, r8
 802052a:	eba6 0608 	sub.w	r6, r6, r8
 802052e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020532:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020536:	440e      	add	r6, r1
 8020538:	e797      	b.n	802046a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802053a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802053e:	42a8      	cmp	r0, r5
 8020540:	d262      	bcs.n	8020608 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8020542:	9b00      	ldr	r3, [sp, #0]
 8020544:	4631      	mov	r1, r6
 8020546:	eb00 0b03 	add.w	fp, r0, r3
 802054a:	4558      	cmp	r0, fp
 802054c:	d24e      	bcs.n	80205ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 802054e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020552:	b12b      	cbz	r3, 8020560 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8020554:	2bff      	cmp	r3, #255	; 0xff
 8020556:	f8b4 e000 	ldrh.w	lr, [r4]
 802055a:	d104      	bne.n	8020566 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 802055c:	f8a0 e000 	strh.w	lr, [r0]
 8020560:	3002      	adds	r0, #2
 8020562:	3402      	adds	r4, #2
 8020564:	e7f1      	b.n	802054a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8020566:	8802      	ldrh	r2, [r0, #0]
 8020568:	b29f      	uxth	r7, r3
 802056a:	1216      	asrs	r6, r2, #8
 802056c:	43db      	mvns	r3, r3
 802056e:	b2db      	uxtb	r3, r3
 8020570:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020574:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020578:	fb16 f603 	smulbb	r6, r6, r3
 802057c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8020580:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020584:	00d2      	lsls	r2, r2, #3
 8020586:	fb0c 6c07 	mla	ip, ip, r7, r6
 802058a:	b2d2      	uxtb	r2, r2
 802058c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8020590:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8020594:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020598:	fb1a fa03 	smulbb	sl, sl, r3
 802059c:	fa1f fc8c 	uxth.w	ip, ip
 80205a0:	fb12 f303 	smulbb	r3, r2, r3
 80205a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80205a8:	fa5f fe8e 	uxtb.w	lr, lr
 80205ac:	fb06 a607 	mla	r6, r6, r7, sl
 80205b0:	f10c 0201 	add.w	r2, ip, #1
 80205b4:	fb0e 3307 	mla	r3, lr, r7, r3
 80205b8:	b2b6      	uxth	r6, r6
 80205ba:	b29b      	uxth	r3, r3
 80205bc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80205c0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80205c4:	f106 0a01 	add.w	sl, r6, #1
 80205c8:	f103 0c01 	add.w	ip, r3, #1
 80205cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80205d0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80205d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80205d8:	0976      	lsrs	r6, r6, #5
 80205da:	ea4c 0c02 	orr.w	ip, ip, r2
 80205de:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80205e2:	ea4c 0c06 	orr.w	ip, ip, r6
 80205e6:	f8a0 c000 	strh.w	ip, [r0]
 80205ea:	e7b9      	b.n	8020560 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80205ec:	f8b9 3000 	ldrh.w	r3, [r9]
 80205f0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80205f4:	eba3 0308 	sub.w	r3, r3, r8
 80205f8:	eba6 0608 	sub.w	r6, r6, r8
 80205fc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020600:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020604:	440e      	add	r6, r1
 8020606:	e79a      	b.n	802053e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8020608:	4b03      	ldr	r3, [pc, #12]	; (8020618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802060a:	6818      	ldr	r0, [r3, #0]
 802060c:	6803      	ldr	r3, [r0, #0]
 802060e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020610:	4798      	blx	r3
 8020612:	b007      	add	sp, #28
 8020614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020618:	2001384c 	.word	0x2001384c
 802061c:	20013846 	.word	0x20013846

08020620 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8020620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020624:	b089      	sub	sp, #36	; 0x24
 8020626:	4682      	mov	sl, r0
 8020628:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 802062c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802062e:	460f      	mov	r7, r1
 8020630:	4691      	mov	r9, r2
 8020632:	4698      	mov	r8, r3
 8020634:	2e00      	cmp	r6, #0
 8020636:	d03d      	beq.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020638:	4608      	mov	r0, r1
 802063a:	f7fa fe59 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802063e:	4605      	mov	r5, r0
 8020640:	4638      	mov	r0, r7
 8020642:	f7fa fe89 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8020646:	f8ad 000e 	strh.w	r0, [sp, #14]
 802064a:	4638      	mov	r0, r7
 802064c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8020650:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020654:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020658:	f7fa ff36 	bl	801b4c8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802065c:	4605      	mov	r5, r0
 802065e:	4638      	mov	r0, r7
 8020660:	f7fa ff62 	bl	801b528 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8020664:	4681      	mov	r9, r0
 8020666:	4638      	mov	r0, r7
 8020668:	f7fa ffb2 	bl	801b5d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802066c:	280b      	cmp	r0, #11
 802066e:	d821      	bhi.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020670:	e8df f000 	tbb	[pc, r0]
 8020674:	2006aebe 	.word	0x2006aebe
 8020678:	20202020 	.word	0x20202020
 802067c:	b5202020 	.word	0xb5202020
 8020680:	4bb0      	ldr	r3, [pc, #704]	; (8020944 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8020682:	6818      	ldr	r0, [r3, #0]
 8020684:	6803      	ldr	r3, [r0, #0]
 8020686:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020688:	4798      	blx	r3
 802068a:	2eff      	cmp	r6, #255	; 0xff
 802068c:	d101      	bne.n	8020692 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 802068e:	0683      	lsls	r3, r0, #26
 8020690:	d506      	bpl.n	80206a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8020692:	4633      	mov	r3, r6
 8020694:	4622      	mov	r2, r4
 8020696:	a902      	add	r1, sp, #8
 8020698:	4628      	mov	r0, r5
 802069a:	f7ff f909 	bl	801f8b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802069e:	e009      	b.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80206a0:	4638      	mov	r0, r7
 80206a2:	f7fa fed9 	bl	801b458 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80206a6:	b940      	cbnz	r0, 80206ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80206a8:	4623      	mov	r3, r4
 80206aa:	aa02      	add	r2, sp, #8
 80206ac:	4629      	mov	r1, r5
 80206ae:	4650      	mov	r0, sl
 80206b0:	f7ff f9e4 	bl	801fa7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80206b4:	b009      	add	sp, #36	; 0x24
 80206b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80206ba:	f10d 0818 	add.w	r8, sp, #24
 80206be:	4639      	mov	r1, r7
 80206c0:	4640      	mov	r0, r8
 80206c2:	f7fa fe7d 	bl	801b3c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80206c6:	e898 0003 	ldmia.w	r8, {r0, r1}
 80206ca:	af04      	add	r7, sp, #16
 80206cc:	e887 0003 	stmia.w	r7, {r0, r1}
 80206d0:	4638      	mov	r0, r7
 80206d2:	4621      	mov	r1, r4
 80206d4:	f7f1 fa6a 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 80206d8:	4638      	mov	r0, r7
 80206da:	f7f1 faaa 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 80206de:	2800      	cmp	r0, #0
 80206e0:	d1d7      	bne.n	8020692 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80206e2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80206e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80206ea:	4293      	cmp	r3, r2
 80206ec:	dd12      	ble.n	8020714 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80206ee:	1a9b      	subs	r3, r3, r2
 80206f0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80206f4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80206f8:	f8ad 0018 	strh.w	r0, [sp, #24]
 80206fc:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020700:	f8ad 101c 	strh.w	r1, [sp, #28]
 8020704:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020708:	4642      	mov	r2, r8
 802070a:	4633      	mov	r3, r6
 802070c:	a902      	add	r1, sp, #8
 802070e:	4628      	mov	r0, r5
 8020710:	f7ff f8ce 	bl	801f8b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020714:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020718:	f9b4 2000 	ldrsh.w	r2, [r4]
 802071c:	4293      	cmp	r3, r2
 802071e:	dd12      	ble.n	8020746 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8020720:	1a9b      	subs	r3, r3, r2
 8020722:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8020726:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802072a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802072e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8020732:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020736:	f8ad 101e 	strh.w	r1, [sp, #30]
 802073a:	23ff      	movs	r3, #255	; 0xff
 802073c:	4642      	mov	r2, r8
 802073e:	a902      	add	r1, sp, #8
 8020740:	4628      	mov	r0, r5
 8020742:	f7ff f8b5 	bl	801f8b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020746:	463b      	mov	r3, r7
 8020748:	aa02      	add	r2, sp, #8
 802074a:	4629      	mov	r1, r5
 802074c:	4650      	mov	r0, sl
 802074e:	f7ff f995 	bl	801fa7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8020752:	88a2      	ldrh	r2, [r4, #4]
 8020754:	8823      	ldrh	r3, [r4, #0]
 8020756:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802075a:	4413      	add	r3, r2
 802075c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020760:	440a      	add	r2, r1
 8020762:	b29b      	uxth	r3, r3
 8020764:	b292      	uxth	r2, r2
 8020766:	b211      	sxth	r1, r2
 8020768:	b218      	sxth	r0, r3
 802076a:	4288      	cmp	r0, r1
 802076c:	dd12      	ble.n	8020794 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 802076e:	1a9b      	subs	r3, r3, r2
 8020770:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8020774:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8020778:	f8ad 1018 	strh.w	r1, [sp, #24]
 802077c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020780:	f8ad 001e 	strh.w	r0, [sp, #30]
 8020784:	23ff      	movs	r3, #255	; 0xff
 8020786:	4642      	mov	r2, r8
 8020788:	a902      	add	r1, sp, #8
 802078a:	4628      	mov	r0, r5
 802078c:	f8ad 601a 	strh.w	r6, [sp, #26]
 8020790:	f7ff f88e 	bl	801f8b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020794:	88e2      	ldrh	r2, [r4, #6]
 8020796:	8863      	ldrh	r3, [r4, #2]
 8020798:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802079c:	4413      	add	r3, r2
 802079e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80207a2:	440a      	add	r2, r1
 80207a4:	b29b      	uxth	r3, r3
 80207a6:	b292      	uxth	r2, r2
 80207a8:	b211      	sxth	r1, r2
 80207aa:	b218      	sxth	r0, r3
 80207ac:	4288      	cmp	r0, r1
 80207ae:	dd81      	ble.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80207b0:	1a9b      	subs	r3, r3, r2
 80207b2:	f9b4 6000 	ldrsh.w	r6, [r4]
 80207b6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80207ba:	f8ad 301e 	strh.w	r3, [sp, #30]
 80207be:	f8ad 6018 	strh.w	r6, [sp, #24]
 80207c2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80207c6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80207ca:	23ff      	movs	r3, #255	; 0xff
 80207cc:	4642      	mov	r2, r8
 80207ce:	e762      	b.n	8020696 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80207d0:	4633      	mov	r3, r6
 80207d2:	4622      	mov	r2, r4
 80207d4:	a902      	add	r1, sp, #8
 80207d6:	4628      	mov	r0, r5
 80207d8:	f7ff f9c0 	bl	801fb5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80207dc:	e76a      	b.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80207de:	e9cd 4600 	strd	r4, r6, [sp]
 80207e2:	ab02      	add	r3, sp, #8
 80207e4:	464a      	mov	r2, r9
 80207e6:	4629      	mov	r1, r5
 80207e8:	4650      	mov	r0, sl
 80207ea:	f7ff fd97 	bl	802031c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80207ee:	e761      	b.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80207f0:	4638      	mov	r0, r7
 80207f2:	f7fa fe31 	bl	801b458 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80207f6:	b950      	cbnz	r0, 802080e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80207f8:	e9cd 6000 	strd	r6, r0, [sp]
 80207fc:	f8da 3000 	ldr.w	r3, [sl]
 8020800:	aa02      	add	r2, sp, #8
 8020802:	68de      	ldr	r6, [r3, #12]
 8020804:	4629      	mov	r1, r5
 8020806:	4623      	mov	r3, r4
 8020808:	4650      	mov	r0, sl
 802080a:	47b0      	blx	r6
 802080c:	e752      	b.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802080e:	f10d 0818 	add.w	r8, sp, #24
 8020812:	4639      	mov	r1, r7
 8020814:	4640      	mov	r0, r8
 8020816:	f7fa fdd3 	bl	801b3c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802081a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802081e:	af04      	add	r7, sp, #16
 8020820:	e887 0003 	stmia.w	r7, {r0, r1}
 8020824:	4638      	mov	r0, r7
 8020826:	4621      	mov	r1, r4
 8020828:	f7f1 f9c0 	bl	8011bac <_ZN8touchgfx4RectaNERKS0_>
 802082c:	4638      	mov	r0, r7
 802082e:	f7f1 fa00 	bl	8011c32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020832:	b138      	cbz	r0, 8020844 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8020834:	9600      	str	r6, [sp, #0]
 8020836:	4623      	mov	r3, r4
 8020838:	aa02      	add	r2, sp, #8
 802083a:	4649      	mov	r1, r9
 802083c:	4628      	mov	r0, r5
 802083e:	f7ff fdc9 	bl	80203d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020842:	e737      	b.n	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020844:	e9cd 6000 	strd	r6, r0, [sp]
 8020848:	f8da 3000 	ldr.w	r3, [sl]
 802084c:	aa02      	add	r2, sp, #8
 802084e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8020852:	4629      	mov	r1, r5
 8020854:	463b      	mov	r3, r7
 8020856:	4650      	mov	r0, sl
 8020858:	47d8      	blx	fp
 802085a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802085e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8020862:	4293      	cmp	r3, r2
 8020864:	dd13      	ble.n	802088e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8020866:	f9b4 0000 	ldrsh.w	r0, [r4]
 802086a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802086e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8020872:	1a9b      	subs	r3, r3, r2
 8020874:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020878:	f8ad 101c 	strh.w	r1, [sp, #28]
 802087c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020880:	9600      	str	r6, [sp, #0]
 8020882:	4643      	mov	r3, r8
 8020884:	aa02      	add	r2, sp, #8
 8020886:	4649      	mov	r1, r9
 8020888:	4628      	mov	r0, r5
 802088a:	f7ff fda3 	bl	80203d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802088e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020892:	f9b4 2000 	ldrsh.w	r2, [r4]
 8020896:	4293      	cmp	r3, r2
 8020898:	dd13      	ble.n	80208c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 802089a:	1a9b      	subs	r3, r3, r2
 802089c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80208a0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80208a4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80208a8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80208ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80208b0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80208b4:	9600      	str	r6, [sp, #0]
 80208b6:	4643      	mov	r3, r8
 80208b8:	aa02      	add	r2, sp, #8
 80208ba:	4649      	mov	r1, r9
 80208bc:	4628      	mov	r0, r5
 80208be:	f7ff fd89 	bl	80203d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80208c2:	88a2      	ldrh	r2, [r4, #4]
 80208c4:	8823      	ldrh	r3, [r4, #0]
 80208c6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80208ca:	4413      	add	r3, r2
 80208cc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80208d0:	440a      	add	r2, r1
 80208d2:	b29b      	uxth	r3, r3
 80208d4:	b292      	uxth	r2, r2
 80208d6:	b211      	sxth	r1, r2
 80208d8:	b218      	sxth	r0, r3
 80208da:	4288      	cmp	r0, r1
 80208dc:	dd13      	ble.n	8020906 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80208de:	1a9b      	subs	r3, r3, r2
 80208e0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80208e4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80208e8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80208ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80208f0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80208f4:	9600      	str	r6, [sp, #0]
 80208f6:	4643      	mov	r3, r8
 80208f8:	aa02      	add	r2, sp, #8
 80208fa:	4649      	mov	r1, r9
 80208fc:	4628      	mov	r0, r5
 80208fe:	f8ad 701a 	strh.w	r7, [sp, #26]
 8020902:	f7ff fd67 	bl	80203d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020906:	88e2      	ldrh	r2, [r4, #6]
 8020908:	8863      	ldrh	r3, [r4, #2]
 802090a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802090e:	4413      	add	r3, r2
 8020910:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8020914:	440a      	add	r2, r1
 8020916:	b29b      	uxth	r3, r3
 8020918:	b292      	uxth	r2, r2
 802091a:	b211      	sxth	r1, r2
 802091c:	b218      	sxth	r0, r3
 802091e:	4288      	cmp	r0, r1
 8020920:	f77f aec8 	ble.w	80206b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020924:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020928:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802092c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8020930:	1a9b      	subs	r3, r3, r2
 8020932:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020936:	f8ad 101a 	strh.w	r1, [sp, #26]
 802093a:	f8ad 001c 	strh.w	r0, [sp, #28]
 802093e:	9600      	str	r6, [sp, #0]
 8020940:	4643      	mov	r3, r8
 8020942:	e779      	b.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8020944:	2001384c 	.word	0x2001384c

08020948 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8020948:	b180      	cbz	r0, 802096c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 802094a:	2903      	cmp	r1, #3
 802094c:	d81c      	bhi.n	8020988 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 802094e:	e8df f001 	tbb	[pc, r1]
 8020952:	1d02      	.short	0x1d02
 8020954:	1f08      	.short	0x1f08
 8020956:	4b10      	ldr	r3, [pc, #64]	; (8020998 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020958:	8818      	ldrh	r0, [r3, #0]
 802095a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802095e:	4240      	negs	r0, r0
 8020960:	4770      	bx	lr
 8020962:	4b0d      	ldr	r3, [pc, #52]	; (8020998 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020964:	8818      	ldrh	r0, [r3, #0]
 8020966:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802096a:	4770      	bx	lr
 802096c:	2903      	cmp	r1, #3
 802096e:	d80b      	bhi.n	8020988 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8020970:	a301      	add	r3, pc, #4	; (adr r3, 8020978 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8020972:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8020976:	bf00      	nop
 8020978:	0802098d 	.word	0x0802098d
 802097c:	08020963 	.word	0x08020963
 8020980:	08020991 	.word	0x08020991
 8020984:	08020957 	.word	0x08020957
 8020988:	2000      	movs	r0, #0
 802098a:	4770      	bx	lr
 802098c:	2001      	movs	r0, #1
 802098e:	4770      	bx	lr
 8020990:	f04f 30ff 	mov.w	r0, #4294967295
 8020994:	4770      	bx	lr
 8020996:	bf00      	nop
 8020998:	20013846 	.word	0x20013846

0802099c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 802099c:	b180      	cbz	r0, 80209c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 802099e:	2903      	cmp	r1, #3
 80209a0:	d81c      	bhi.n	80209dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80209a2:	e8df f001 	tbb	[pc, r1]
 80209a6:	021d      	.short	0x021d
 80209a8:	071f      	.short	0x071f
 80209aa:	4b10      	ldr	r3, [pc, #64]	; (80209ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80209ac:	8818      	ldrh	r0, [r3, #0]
 80209ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80209b2:	4770      	bx	lr
 80209b4:	4b0d      	ldr	r3, [pc, #52]	; (80209ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80209b6:	8818      	ldrh	r0, [r3, #0]
 80209b8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80209bc:	4240      	negs	r0, r0
 80209be:	4770      	bx	lr
 80209c0:	2903      	cmp	r1, #3
 80209c2:	d80b      	bhi.n	80209dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80209c4:	a301      	add	r3, pc, #4	; (adr r3, 80209cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80209c6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80209ca:	bf00      	nop
 80209cc:	080209ab 	.word	0x080209ab
 80209d0:	080209e5 	.word	0x080209e5
 80209d4:	080209b5 	.word	0x080209b5
 80209d8:	080209e1 	.word	0x080209e1
 80209dc:	2000      	movs	r0, #0
 80209de:	4770      	bx	lr
 80209e0:	2001      	movs	r0, #1
 80209e2:	4770      	bx	lr
 80209e4:	f04f 30ff 	mov.w	r0, #4294967295
 80209e8:	4770      	bx	lr
 80209ea:	bf00      	nop
 80209ec:	20013846 	.word	0x20013846

080209f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80209f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209f4:	b099      	sub	sp, #100	; 0x64
 80209f6:	910b      	str	r1, [sp, #44]	; 0x2c
 80209f8:	a914      	add	r1, sp, #80	; 0x50
 80209fa:	e881 000c 	stmia.w	r1, {r2, r3}
 80209fe:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8020a02:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8020a06:	f891 900d 	ldrb.w	r9, [r1, #13]
 8020a0a:	9309      	str	r3, [sp, #36]	; 0x24
 8020a0c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020a10:	9310      	str	r3, [sp, #64]	; 0x40
 8020a12:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8020a16:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8020a1a:	930c      	str	r3, [sp, #48]	; 0x30
 8020a1c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8020a20:	798f      	ldrb	r7, [r1, #6]
 8020a22:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8020a26:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8020a2a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8020a2e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8020a32:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8020a36:	431f      	orrs	r7, r3
 8020a38:	f000 8195 	beq.w	8020d66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020a3c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8020a40:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8020a44:	f891 9007 	ldrb.w	r9, [r1, #7]
 8020a48:	ea59 0903 	orrs.w	r9, r9, r3
 8020a4c:	f000 818b 	beq.w	8020d66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020a50:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8020a54:	b29b      	uxth	r3, r3
 8020a56:	2d00      	cmp	r5, #0
 8020a58:	f000 812e 	beq.w	8020cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8020a5c:	1aed      	subs	r5, r5, r3
 8020a5e:	b2ad      	uxth	r5, r5
 8020a60:	042b      	lsls	r3, r5, #16
 8020a62:	d502      	bpl.n	8020a6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8020a64:	1b64      	subs	r4, r4, r5
 8020a66:	b224      	sxth	r4, r4
 8020a68:	2500      	movs	r5, #0
 8020a6a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8020a6e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8020a72:	428c      	cmp	r4, r1
 8020a74:	b28b      	uxth	r3, r1
 8020a76:	bfbf      	itttt	lt
 8020a78:	18ed      	addlt	r5, r5, r3
 8020a7a:	1b2c      	sublt	r4, r5, r4
 8020a7c:	b2a5      	uxthlt	r5, r4
 8020a7e:	460c      	movlt	r4, r1
 8020a80:	8891      	ldrh	r1, [r2, #4]
 8020a82:	440b      	add	r3, r1
 8020a84:	b21b      	sxth	r3, r3
 8020a86:	930f      	str	r3, [sp, #60]	; 0x3c
 8020a88:	88d3      	ldrh	r3, [r2, #6]
 8020a8a:	8852      	ldrh	r2, [r2, #2]
 8020a8c:	4413      	add	r3, r2
 8020a8e:	b21b      	sxth	r3, r3
 8020a90:	930d      	str	r3, [sp, #52]	; 0x34
 8020a92:	4bbe      	ldr	r3, [pc, #760]	; (8020d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8020a94:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020a96:	f893 b000 	ldrb.w	fp, [r3]
 8020a9a:	f10b 3cff 	add.w	ip, fp, #4294967295
 8020a9e:	f1dc 0300 	rsbs	r3, ip, #0
 8020aa2:	eb43 030c 	adc.w	r3, r3, ip
 8020aa6:	930e      	str	r3, [sp, #56]	; 0x38
 8020aa8:	4621      	mov	r1, r4
 8020aaa:	4653      	mov	r3, sl
 8020aac:	a814      	add	r0, sp, #80	; 0x50
 8020aae:	f7f6 fc90 	bl	80173d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8020ab2:	4621      	mov	r1, r4
 8020ab4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8020ab8:	4653      	mov	r3, sl
 8020aba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020abc:	a814      	add	r0, sp, #80	; 0x50
 8020abe:	f7f6 fca5 	bl	801740c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8020ac2:	a918      	add	r1, sp, #96	; 0x60
 8020ac4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8020ac8:	a817      	add	r0, sp, #92	; 0x5c
 8020aca:	f7f6 fdcb 	bl	8017664 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8020ace:	f1ba 0f00 	cmp.w	sl, #0
 8020ad2:	f040 80f4 	bne.w	8020cbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8020ad6:	f1bb 0f01 	cmp.w	fp, #1
 8020ada:	f040 80f8 	bne.w	8020cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8020ade:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020ae0:	2b00      	cmp	r3, #0
 8020ae2:	f040 8145 	bne.w	8020d70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8020ae6:	b2ba      	uxth	r2, r7
 8020ae8:	b905      	cbnz	r5, 8020aec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8020aea:	b16e      	cbz	r6, 8020b08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8020aec:	fb06 5302 	mla	r3, r6, r2, r5
 8020af0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8020af2:	fb08 f303 	mul.w	r3, r8, r3
 8020af6:	4631      	mov	r1, r6
 8020af8:	f003 0607 	and.w	r6, r3, #7
 8020afc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8020b00:	9328      	str	r3, [sp, #160]	; 0xa0
 8020b02:	eba9 0301 	sub.w	r3, r9, r1
 8020b06:	930a      	str	r3, [sp, #40]	; 0x28
 8020b08:	4651      	mov	r1, sl
 8020b0a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020b0c:	f7ff ff1c 	bl	8020948 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8020b10:	4681      	mov	r9, r0
 8020b12:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020b14:	f7ff ff42 	bl	802099c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8020b18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020b1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020b1c:	eba3 0a01 	sub.w	sl, r3, r1
 8020b20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020b22:	459a      	cmp	sl, r3
 8020b24:	bfa8      	it	ge
 8020b26:	469a      	movge	sl, r3
 8020b28:	f1ba 0f00 	cmp.w	sl, #0
 8020b2c:	4683      	mov	fp, r0
 8020b2e:	f340 811a 	ble.w	8020d66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020b32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020b34:	1b64      	subs	r4, r4, r5
 8020b36:	1b1c      	subs	r4, r3, r4
 8020b38:	42bc      	cmp	r4, r7
 8020b3a:	bfd4      	ite	le
 8020b3c:	ebc5 0504 	rsble	r5, r5, r4
 8020b40:	ebc5 0507 	rsbgt	r5, r5, r7
 8020b44:	2d00      	cmp	r5, #0
 8020b46:	f340 810e 	ble.w	8020d66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020b4a:	1b52      	subs	r2, r2, r5
 8020b4c:	fb08 f302 	mul.w	r3, r8, r2
 8020b50:	930f      	str	r3, [sp, #60]	; 0x3c
 8020b52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020b54:	2b00      	cmp	r3, #0
 8020b56:	f040 8116 	bne.w	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8020b5a:	4b8d      	ldr	r3, [pc, #564]	; (8020d90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8020b5c:	6818      	ldr	r0, [r3, #0]
 8020b5e:	6803      	ldr	r3, [r0, #0]
 8020b60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b62:	4798      	blx	r3
 8020b64:	2301      	movs	r3, #1
 8020b66:	fa03 f308 	lsl.w	r3, r3, r8
 8020b6a:	4a8a      	ldr	r2, [pc, #552]	; (8020d94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8020b6c:	3b01      	subs	r3, #1
 8020b6e:	b2db      	uxtb	r3, r3
 8020b70:	8811      	ldrh	r1, [r2, #0]
 8020b72:	930e      	str	r3, [sp, #56]	; 0x38
 8020b74:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8020b78:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8020b7c:	fb01 2303 	mla	r3, r1, r3, r2
 8020b80:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020b84:	930a      	str	r3, [sp, #40]	; 0x28
 8020b86:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020b88:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8020b8c:	9313      	str	r3, [sp, #76]	; 0x4c
 8020b8e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020b90:	0a19      	lsrs	r1, r3, #8
 8020b92:	b2cb      	uxtb	r3, r1
 8020b94:	9312      	str	r3, [sp, #72]	; 0x48
 8020b96:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020b98:	b2db      	uxtb	r3, r3
 8020b9a:	9311      	str	r3, [sp, #68]	; 0x44
 8020b9c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020b9e:	095a      	lsrs	r2, r3, #5
 8020ba0:	4b7d      	ldr	r3, [pc, #500]	; (8020d98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8020ba2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020ba6:	400b      	ands	r3, r1
 8020ba8:	4313      	orrs	r3, r2
 8020baa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020bac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020bb0:	4313      	orrs	r3, r2
 8020bb2:	b29b      	uxth	r3, r3
 8020bb4:	9310      	str	r3, [sp, #64]	; 0x40
 8020bb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020bb8:	781a      	ldrb	r2, [r3, #0]
 8020bba:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8020bbe:	4132      	asrs	r2, r6
 8020bc0:	fb05 b919 	mls	r9, r5, r9, fp
 8020bc4:	fb03 fb05 	mul.w	fp, r3, r5
 8020bc8:	b2d2      	uxtb	r2, r2
 8020bca:	930d      	str	r3, [sp, #52]	; 0x34
 8020bcc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8020bd0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8020bd4:	f0c0 80f5 	bcc.w	8020dc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8020bd8:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8020bdc:	46ae      	mov	lr, r5
 8020bde:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8020be2:	f0c0 80dd 	bcc.w	8020da0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8020be6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020be8:	4013      	ands	r3, r2
 8020bea:	d055      	beq.n	8020c98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8020bec:	20ff      	movs	r0, #255	; 0xff
 8020bee:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020bf0:	fb90 f1f1 	sdiv	r1, r0, r1
 8020bf4:	434b      	muls	r3, r1
 8020bf6:	2bfe      	cmp	r3, #254	; 0xfe
 8020bf8:	dd03      	ble.n	8020c02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8020bfa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020bfc:	4281      	cmp	r1, r0
 8020bfe:	f000 80cd 	beq.w	8020d9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8020c02:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020c04:	f8bc 4000 	ldrh.w	r4, [ip]
 8020c08:	fb11 f303 	smulbb	r3, r1, r3
 8020c0c:	b29b      	uxth	r3, r3
 8020c0e:	1c59      	adds	r1, r3, #1
 8020c10:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020c14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020c18:	b29f      	uxth	r7, r3
 8020c1a:	43db      	mvns	r3, r3
 8020c1c:	b2db      	uxtb	r3, r3
 8020c1e:	9309      	str	r3, [sp, #36]	; 0x24
 8020c20:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020c22:	1220      	asrs	r0, r4, #8
 8020c24:	fb13 f907 	smulbb	r9, r3, r7
 8020c28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020c2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c2e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8020c32:	fb00 9003 	mla	r0, r0, r3, r9
 8020c36:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020c38:	10e1      	asrs	r1, r4, #3
 8020c3a:	fb13 f907 	smulbb	r9, r3, r7
 8020c3e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020c42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c44:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8020c48:	fb01 9103 	mla	r1, r1, r3, r9
 8020c4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020c4e:	00e4      	lsls	r4, r4, #3
 8020c50:	fb13 f707 	smulbb	r7, r3, r7
 8020c54:	b2e4      	uxtb	r4, r4
 8020c56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c58:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020c5c:	fb04 7403 	mla	r4, r4, r3, r7
 8020c60:	b280      	uxth	r0, r0
 8020c62:	b2a4      	uxth	r4, r4
 8020c64:	1c43      	adds	r3, r0, #1
 8020c66:	f104 0901 	add.w	r9, r4, #1
 8020c6a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020c6e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8020c72:	b289      	uxth	r1, r1
 8020c74:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8020c78:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020c7c:	ea49 0000 	orr.w	r0, r9, r0
 8020c80:	f101 0901 	add.w	r9, r1, #1
 8020c84:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8020c88:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020c8c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020c90:	ea40 0009 	orr.w	r0, r0, r9
 8020c94:	f8ac 0000 	strh.w	r0, [ip]
 8020c98:	4446      	add	r6, r8
 8020c9a:	b2b6      	uxth	r6, r6
 8020c9c:	2e07      	cmp	r6, #7
 8020c9e:	bf81      	itttt	hi
 8020ca0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8020ca2:	785a      	ldrbhi	r2, [r3, #1]
 8020ca4:	3301      	addhi	r3, #1
 8020ca6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8020ca8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020caa:	bf9a      	itte	ls
 8020cac:	fa42 f208 	asrls.w	r2, r2, r8
 8020cb0:	b2d2      	uxtbls	r2, r2
 8020cb2:	2600      	movhi	r6, #0
 8020cb4:	449c      	add	ip, r3
 8020cb6:	e792      	b.n	8020bde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8020cb8:	441c      	add	r4, r3
 8020cba:	b224      	sxth	r4, r4
 8020cbc:	e6d5      	b.n	8020a6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8020cbe:	f1ba 0f01 	cmp.w	sl, #1
 8020cc2:	f47f af0c 	bne.w	8020ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020cc6:	f1bb 0f01 	cmp.w	fp, #1
 8020cca:	f47f af08 	bne.w	8020ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020cce:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8020d90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8020cd2:	f8db 0000 	ldr.w	r0, [fp]
 8020cd6:	6803      	ldr	r3, [r0, #0]
 8020cd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020cda:	4798      	blx	r3
 8020cdc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8020ce0:	465a      	mov	r2, fp
 8020ce2:	d006      	beq.n	8020cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8020ce4:	f1b8 0f04 	cmp.w	r8, #4
 8020ce8:	d140      	bne.n	8020d6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8020cea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020cec:	3300      	adds	r3, #0
 8020cee:	bf18      	it	ne
 8020cf0:	2301      	movne	r3, #1
 8020cf2:	0580      	lsls	r0, r0, #22
 8020cf4:	d56e      	bpl.n	8020dd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8020cf6:	f1b8 0f08 	cmp.w	r8, #8
 8020cfa:	d16b      	bne.n	8020dd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8020cfc:	2b00      	cmp	r3, #0
 8020cfe:	bf0c      	ite	eq
 8020d00:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8020d04:	f44f 7180 	movne.w	r1, #256	; 0x100
 8020d08:	2d00      	cmp	r5, #0
 8020d0a:	f47f aee8 	bne.w	8020ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020d0e:	2e00      	cmp	r6, #0
 8020d10:	f47f aee5 	bne.w	8020ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020d14:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020d16:	19e3      	adds	r3, r4, r7
 8020d18:	4283      	cmp	r3, r0
 8020d1a:	f73f aee0 	bgt.w	8020ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020d1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d20:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020d22:	444b      	add	r3, r9
 8020d24:	4283      	cmp	r3, r0
 8020d26:	f73f aeda 	bgt.w	8020ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020d2a:	6810      	ldr	r0, [r2, #0]
 8020d2c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8020d30:	6804      	ldr	r4, [r0, #0]
 8020d32:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020d36:	b2bf      	uxth	r7, r7
 8020d38:	f1b8 0f08 	cmp.w	r8, #8
 8020d3c:	f04f 0500 	mov.w	r5, #0
 8020d40:	bf18      	it	ne
 8020d42:	3701      	addne	r7, #1
 8020d44:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8020d48:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020d4a:	9104      	str	r1, [sp, #16]
 8020d4c:	bf18      	it	ne
 8020d4e:	f027 0701 	bicne.w	r7, r7, #1
 8020d52:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020d54:	bf18      	it	ne
 8020d56:	b2bf      	uxthne	r7, r7
 8020d58:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8020d5c:	e9cd 7900 	strd	r7, r9, [sp]
 8020d60:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020d62:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8020d64:	47a0      	blx	r4
 8020d66:	b019      	add	sp, #100	; 0x64
 8020d68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d6c:	2300      	movs	r3, #0
 8020d6e:	e7c0      	b.n	8020cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8020d70:	2208      	movs	r2, #8
 8020d72:	fb92 f3f8 	sdiv	r3, r2, r8
 8020d76:	1e5a      	subs	r2, r3, #1
 8020d78:	443a      	add	r2, r7
 8020d7a:	fb92 f2f3 	sdiv	r2, r2, r3
 8020d7e:	fb12 f203 	smulbb	r2, r2, r3
 8020d82:	b292      	uxth	r2, r2
 8020d84:	e6b0      	b.n	8020ae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8020d86:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8020d88:	e6ec      	b.n	8020b64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8020d8a:	bf00      	nop
 8020d8c:	20013844 	.word	0x20013844
 8020d90:	2001384c 	.word	0x2001384c
 8020d94:	20013846 	.word	0x20013846
 8020d98:	00fff800 	.word	0x00fff800
 8020d9c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020d9e:	e779      	b.n	8020c94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8020da0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020da2:	b153      	cbz	r3, 8020dba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8020da4:	441e      	add	r6, r3
 8020da6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020da8:	b2b6      	uxth	r6, r6
 8020daa:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8020dae:	f006 0607 	and.w	r6, r6, #7
 8020db2:	781a      	ldrb	r2, [r3, #0]
 8020db4:	9328      	str	r3, [sp, #160]	; 0xa0
 8020db6:	4132      	asrs	r2, r6
 8020db8:	b2d2      	uxtb	r2, r2
 8020dba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dbc:	445b      	add	r3, fp
 8020dbe:	930a      	str	r3, [sp, #40]	; 0x28
 8020dc0:	e706      	b.n	8020bd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8020dc2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020dc4:	2b00      	cmp	r3, #0
 8020dc6:	d1ce      	bne.n	8020d66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020dc8:	4b05      	ldr	r3, [pc, #20]	; (8020de0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8020dca:	6818      	ldr	r0, [r3, #0]
 8020dcc:	6803      	ldr	r3, [r0, #0]
 8020dce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020dd0:	4798      	blx	r3
 8020dd2:	e7c8      	b.n	8020d66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020dd4:	2b00      	cmp	r3, #0
 8020dd6:	f43f ae82 	beq.w	8020ade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020dda:	f44f 7180 	mov.w	r1, #256	; 0x100
 8020dde:	e793      	b.n	8020d08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8020de0:	2001384c 	.word	0x2001384c

08020de4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020de4:	b538      	push	{r3, r4, r5, lr}
 8020de6:	4c15      	ldr	r4, [pc, #84]	; (8020e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020de8:	7823      	ldrb	r3, [r4, #0]
 8020dea:	f3bf 8f5b 	dmb	ish
 8020dee:	07da      	lsls	r2, r3, #31
 8020df0:	4605      	mov	r5, r0
 8020df2:	d40b      	bmi.n	8020e0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020df4:	4620      	mov	r0, r4
 8020df6:	f00a fee2 	bl	802bbbe <__cxa_guard_acquire>
 8020dfa:	b138      	cbz	r0, 8020e0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020dfc:	4620      	mov	r0, r4
 8020dfe:	f00a feea 	bl	802bbd6 <__cxa_guard_release>
 8020e02:	4a0f      	ldr	r2, [pc, #60]	; (8020e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020e04:	490f      	ldr	r1, [pc, #60]	; (8020e44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020e06:	4810      	ldr	r0, [pc, #64]	; (8020e48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020e08:	f00a fed2 	bl	802bbb0 <__aeabi_atexit>
 8020e0c:	4c0f      	ldr	r4, [pc, #60]	; (8020e4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8020e0e:	7823      	ldrb	r3, [r4, #0]
 8020e10:	f3bf 8f5b 	dmb	ish
 8020e14:	07db      	lsls	r3, r3, #31
 8020e16:	d40b      	bmi.n	8020e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020e18:	4620      	mov	r0, r4
 8020e1a:	f00a fed0 	bl	802bbbe <__cxa_guard_acquire>
 8020e1e:	b138      	cbz	r0, 8020e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020e20:	4620      	mov	r0, r4
 8020e22:	f00a fed8 	bl	802bbd6 <__cxa_guard_release>
 8020e26:	4a06      	ldr	r2, [pc, #24]	; (8020e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020e28:	4909      	ldr	r1, [pc, #36]	; (8020e50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8020e2a:	480a      	ldr	r0, [pc, #40]	; (8020e54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020e2c:	f00a fec0 	bl	802bbb0 <__aeabi_atexit>
 8020e30:	4b05      	ldr	r3, [pc, #20]	; (8020e48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020e32:	612b      	str	r3, [r5, #16]
 8020e34:	4b07      	ldr	r3, [pc, #28]	; (8020e54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020e36:	616b      	str	r3, [r5, #20]
 8020e38:	bd38      	pop	{r3, r4, r5, pc}
 8020e3a:	bf00      	nop
 8020e3c:	2001392c 	.word	0x2001392c
 8020e40:	20000000 	.word	0x20000000
 8020e44:	0801dbe7 	.word	0x0801dbe7
 8020e48:	200000d8 	.word	0x200000d8
 8020e4c:	20013930 	.word	0x20013930
 8020e50:	0801dbe5 	.word	0x0801dbe5
 8020e54:	200000dc 	.word	0x200000dc

08020e58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8020e58:	b538      	push	{r3, r4, r5, lr}
 8020e5a:	4c15      	ldr	r4, [pc, #84]	; (8020eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8020e5c:	7823      	ldrb	r3, [r4, #0]
 8020e5e:	f3bf 8f5b 	dmb	ish
 8020e62:	07da      	lsls	r2, r3, #31
 8020e64:	4605      	mov	r5, r0
 8020e66:	d40b      	bmi.n	8020e80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8020e68:	4620      	mov	r0, r4
 8020e6a:	f00a fea8 	bl	802bbbe <__cxa_guard_acquire>
 8020e6e:	b138      	cbz	r0, 8020e80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8020e70:	4620      	mov	r0, r4
 8020e72:	f00a feb0 	bl	802bbd6 <__cxa_guard_release>
 8020e76:	4a0f      	ldr	r2, [pc, #60]	; (8020eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8020e78:	490f      	ldr	r1, [pc, #60]	; (8020eb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8020e7a:	4810      	ldr	r0, [pc, #64]	; (8020ebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020e7c:	f00a fe98 	bl	802bbb0 <__aeabi_atexit>
 8020e80:	4c0f      	ldr	r4, [pc, #60]	; (8020ec0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8020e82:	7823      	ldrb	r3, [r4, #0]
 8020e84:	f3bf 8f5b 	dmb	ish
 8020e88:	07db      	lsls	r3, r3, #31
 8020e8a:	d40b      	bmi.n	8020ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020e8c:	4620      	mov	r0, r4
 8020e8e:	f00a fe96 	bl	802bbbe <__cxa_guard_acquire>
 8020e92:	b138      	cbz	r0, 8020ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020e94:	4620      	mov	r0, r4
 8020e96:	f00a fe9e 	bl	802bbd6 <__cxa_guard_release>
 8020e9a:	4a06      	ldr	r2, [pc, #24]	; (8020eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8020e9c:	4909      	ldr	r1, [pc, #36]	; (8020ec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8020e9e:	480a      	ldr	r0, [pc, #40]	; (8020ec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020ea0:	f00a fe86 	bl	802bbb0 <__aeabi_atexit>
 8020ea4:	4b05      	ldr	r3, [pc, #20]	; (8020ebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020ea6:	60ab      	str	r3, [r5, #8]
 8020ea8:	4b07      	ldr	r3, [pc, #28]	; (8020ec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020eaa:	60eb      	str	r3, [r5, #12]
 8020eac:	bd38      	pop	{r3, r4, r5, pc}
 8020eae:	bf00      	nop
 8020eb0:	20013904 	.word	0x20013904
 8020eb4:	20000000 	.word	0x20000000
 8020eb8:	0801dbeb 	.word	0x0801dbeb
 8020ebc:	200000b0 	.word	0x200000b0
 8020ec0:	20013908 	.word	0x20013908
 8020ec4:	0801dbe9 	.word	0x0801dbe9
 8020ec8:	200000b4 	.word	0x200000b4

08020ecc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8020ecc:	b510      	push	{r4, lr}
 8020ece:	4604      	mov	r4, r0
 8020ed0:	f7ff ff88 	bl	8020de4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8020ed4:	4620      	mov	r0, r4
 8020ed6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020eda:	f7ff bfbd 	b.w	8020e58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08020ee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8020ee0:	b538      	push	{r3, r4, r5, lr}
 8020ee2:	4c15      	ldr	r4, [pc, #84]	; (8020f38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8020ee4:	7823      	ldrb	r3, [r4, #0]
 8020ee6:	f3bf 8f5b 	dmb	ish
 8020eea:	07da      	lsls	r2, r3, #31
 8020eec:	4605      	mov	r5, r0
 8020eee:	d40b      	bmi.n	8020f08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020ef0:	4620      	mov	r0, r4
 8020ef2:	f00a fe64 	bl	802bbbe <__cxa_guard_acquire>
 8020ef6:	b138      	cbz	r0, 8020f08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020ef8:	4620      	mov	r0, r4
 8020efa:	f00a fe6c 	bl	802bbd6 <__cxa_guard_release>
 8020efe:	4a0f      	ldr	r2, [pc, #60]	; (8020f3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020f00:	490f      	ldr	r1, [pc, #60]	; (8020f40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8020f02:	4810      	ldr	r0, [pc, #64]	; (8020f44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020f04:	f00a fe54 	bl	802bbb0 <__aeabi_atexit>
 8020f08:	4c0f      	ldr	r4, [pc, #60]	; (8020f48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8020f0a:	7823      	ldrb	r3, [r4, #0]
 8020f0c:	f3bf 8f5b 	dmb	ish
 8020f10:	07db      	lsls	r3, r3, #31
 8020f12:	d40b      	bmi.n	8020f2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020f14:	4620      	mov	r0, r4
 8020f16:	f00a fe52 	bl	802bbbe <__cxa_guard_acquire>
 8020f1a:	b138      	cbz	r0, 8020f2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020f1c:	4620      	mov	r0, r4
 8020f1e:	f00a fe5a 	bl	802bbd6 <__cxa_guard_release>
 8020f22:	4a06      	ldr	r2, [pc, #24]	; (8020f3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020f24:	4909      	ldr	r1, [pc, #36]	; (8020f4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8020f26:	480a      	ldr	r0, [pc, #40]	; (8020f50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020f28:	f00a fe42 	bl	802bbb0 <__aeabi_atexit>
 8020f2c:	4b05      	ldr	r3, [pc, #20]	; (8020f44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020f2e:	622b      	str	r3, [r5, #32]
 8020f30:	4b07      	ldr	r3, [pc, #28]	; (8020f50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020f32:	626b      	str	r3, [r5, #36]	; 0x24
 8020f34:	bd38      	pop	{r3, r4, r5, pc}
 8020f36:	bf00      	nop
 8020f38:	20013934 	.word	0x20013934
 8020f3c:	20000000 	.word	0x20000000
 8020f40:	0801dbdf 	.word	0x0801dbdf
 8020f44:	200000e0 	.word	0x200000e0
 8020f48:	20013938 	.word	0x20013938
 8020f4c:	0801dbdd 	.word	0x0801dbdd
 8020f50:	200000e4 	.word	0x200000e4

08020f54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8020f54:	b538      	push	{r3, r4, r5, lr}
 8020f56:	4c15      	ldr	r4, [pc, #84]	; (8020fac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8020f58:	7823      	ldrb	r3, [r4, #0]
 8020f5a:	f3bf 8f5b 	dmb	ish
 8020f5e:	07da      	lsls	r2, r3, #31
 8020f60:	4605      	mov	r5, r0
 8020f62:	d40b      	bmi.n	8020f7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8020f64:	4620      	mov	r0, r4
 8020f66:	f00a fe2a 	bl	802bbbe <__cxa_guard_acquire>
 8020f6a:	b138      	cbz	r0, 8020f7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8020f6c:	4620      	mov	r0, r4
 8020f6e:	f00a fe32 	bl	802bbd6 <__cxa_guard_release>
 8020f72:	4a0f      	ldr	r2, [pc, #60]	; (8020fb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020f74:	490f      	ldr	r1, [pc, #60]	; (8020fb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8020f76:	4810      	ldr	r0, [pc, #64]	; (8020fb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020f78:	f00a fe1a 	bl	802bbb0 <__aeabi_atexit>
 8020f7c:	4c0f      	ldr	r4, [pc, #60]	; (8020fbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8020f7e:	7823      	ldrb	r3, [r4, #0]
 8020f80:	f3bf 8f5b 	dmb	ish
 8020f84:	07db      	lsls	r3, r3, #31
 8020f86:	d40b      	bmi.n	8020fa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020f88:	4620      	mov	r0, r4
 8020f8a:	f00a fe18 	bl	802bbbe <__cxa_guard_acquire>
 8020f8e:	b138      	cbz	r0, 8020fa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020f90:	4620      	mov	r0, r4
 8020f92:	f00a fe20 	bl	802bbd6 <__cxa_guard_release>
 8020f96:	4a06      	ldr	r2, [pc, #24]	; (8020fb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020f98:	4909      	ldr	r1, [pc, #36]	; (8020fc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8020f9a:	480a      	ldr	r0, [pc, #40]	; (8020fc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020f9c:	f00a fe08 	bl	802bbb0 <__aeabi_atexit>
 8020fa0:	4b05      	ldr	r3, [pc, #20]	; (8020fb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020fa2:	61ab      	str	r3, [r5, #24]
 8020fa4:	4b07      	ldr	r3, [pc, #28]	; (8020fc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020fa6:	61eb      	str	r3, [r5, #28]
 8020fa8:	bd38      	pop	{r3, r4, r5, pc}
 8020faa:	bf00      	nop
 8020fac:	2001390c 	.word	0x2001390c
 8020fb0:	20000000 	.word	0x20000000
 8020fb4:	0801dbe3 	.word	0x0801dbe3
 8020fb8:	200000b8 	.word	0x200000b8
 8020fbc:	20013910 	.word	0x20013910
 8020fc0:	0801dbe1 	.word	0x0801dbe1
 8020fc4:	200000bc 	.word	0x200000bc

08020fc8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8020fc8:	b510      	push	{r4, lr}
 8020fca:	4604      	mov	r4, r0
 8020fcc:	f7ff ff88 	bl	8020ee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8020fd0:	4620      	mov	r0, r4
 8020fd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020fd6:	f7ff bfbd 	b.w	8020f54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08020fdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8020fdc:	b538      	push	{r3, r4, r5, lr}
 8020fde:	4c15      	ldr	r4, [pc, #84]	; (8021034 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8020fe0:	7823      	ldrb	r3, [r4, #0]
 8020fe2:	f3bf 8f5b 	dmb	ish
 8020fe6:	07da      	lsls	r2, r3, #31
 8020fe8:	4605      	mov	r5, r0
 8020fea:	d40b      	bmi.n	8021004 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020fec:	4620      	mov	r0, r4
 8020fee:	f00a fde6 	bl	802bbbe <__cxa_guard_acquire>
 8020ff2:	b138      	cbz	r0, 8021004 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020ff4:	4620      	mov	r0, r4
 8020ff6:	f00a fdee 	bl	802bbd6 <__cxa_guard_release>
 8020ffa:	4a0f      	ldr	r2, [pc, #60]	; (8021038 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8020ffc:	490f      	ldr	r1, [pc, #60]	; (802103c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8020ffe:	4810      	ldr	r0, [pc, #64]	; (8021040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021000:	f00a fdd6 	bl	802bbb0 <__aeabi_atexit>
 8021004:	4c0f      	ldr	r4, [pc, #60]	; (8021044 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8021006:	7823      	ldrb	r3, [r4, #0]
 8021008:	f3bf 8f5b 	dmb	ish
 802100c:	07db      	lsls	r3, r3, #31
 802100e:	d40b      	bmi.n	8021028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021010:	4620      	mov	r0, r4
 8021012:	f00a fdd4 	bl	802bbbe <__cxa_guard_acquire>
 8021016:	b138      	cbz	r0, 8021028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021018:	4620      	mov	r0, r4
 802101a:	f00a fddc 	bl	802bbd6 <__cxa_guard_release>
 802101e:	4a06      	ldr	r2, [pc, #24]	; (8021038 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021020:	4909      	ldr	r1, [pc, #36]	; (8021048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021022:	480a      	ldr	r0, [pc, #40]	; (802104c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021024:	f00a fdc4 	bl	802bbb0 <__aeabi_atexit>
 8021028:	4b05      	ldr	r3, [pc, #20]	; (8021040 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802102a:	632b      	str	r3, [r5, #48]	; 0x30
 802102c:	4b07      	ldr	r3, [pc, #28]	; (802104c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802102e:	636b      	str	r3, [r5, #52]	; 0x34
 8021030:	bd38      	pop	{r3, r4, r5, pc}
 8021032:	bf00      	nop
 8021034:	20013944 	.word	0x20013944
 8021038:	20000000 	.word	0x20000000
 802103c:	0801dbd7 	.word	0x0801dbd7
 8021040:	200000f0 	.word	0x200000f0
 8021044:	20013948 	.word	0x20013948
 8021048:	0801dbd5 	.word	0x0801dbd5
 802104c:	200000f4 	.word	0x200000f4

08021050 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021050:	b538      	push	{r3, r4, r5, lr}
 8021052:	4c15      	ldr	r4, [pc, #84]	; (80210a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021054:	7823      	ldrb	r3, [r4, #0]
 8021056:	f3bf 8f5b 	dmb	ish
 802105a:	07da      	lsls	r2, r3, #31
 802105c:	4605      	mov	r5, r0
 802105e:	d40b      	bmi.n	8021078 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021060:	4620      	mov	r0, r4
 8021062:	f00a fdac 	bl	802bbbe <__cxa_guard_acquire>
 8021066:	b138      	cbz	r0, 8021078 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021068:	4620      	mov	r0, r4
 802106a:	f00a fdb4 	bl	802bbd6 <__cxa_guard_release>
 802106e:	4a0f      	ldr	r2, [pc, #60]	; (80210ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021070:	490f      	ldr	r1, [pc, #60]	; (80210b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021072:	4810      	ldr	r0, [pc, #64]	; (80210b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021074:	f00a fd9c 	bl	802bbb0 <__aeabi_atexit>
 8021078:	4c0f      	ldr	r4, [pc, #60]	; (80210b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802107a:	7823      	ldrb	r3, [r4, #0]
 802107c:	f3bf 8f5b 	dmb	ish
 8021080:	07db      	lsls	r3, r3, #31
 8021082:	d40b      	bmi.n	802109c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021084:	4620      	mov	r0, r4
 8021086:	f00a fd9a 	bl	802bbbe <__cxa_guard_acquire>
 802108a:	b138      	cbz	r0, 802109c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 802108c:	4620      	mov	r0, r4
 802108e:	f00a fda2 	bl	802bbd6 <__cxa_guard_release>
 8021092:	4a06      	ldr	r2, [pc, #24]	; (80210ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021094:	4909      	ldr	r1, [pc, #36]	; (80210bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8021096:	480a      	ldr	r0, [pc, #40]	; (80210c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021098:	f00a fd8a 	bl	802bbb0 <__aeabi_atexit>
 802109c:	4b05      	ldr	r3, [pc, #20]	; (80210b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802109e:	62ab      	str	r3, [r5, #40]	; 0x28
 80210a0:	4b07      	ldr	r3, [pc, #28]	; (80210c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80210a2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80210a4:	bd38      	pop	{r3, r4, r5, pc}
 80210a6:	bf00      	nop
 80210a8:	20013914 	.word	0x20013914
 80210ac:	20000000 	.word	0x20000000
 80210b0:	0801dbdb 	.word	0x0801dbdb
 80210b4:	200000c0 	.word	0x200000c0
 80210b8:	20013918 	.word	0x20013918
 80210bc:	0801dbd9 	.word	0x0801dbd9
 80210c0:	200000c4 	.word	0x200000c4

080210c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80210c4:	b510      	push	{r4, lr}
 80210c6:	4604      	mov	r4, r0
 80210c8:	f7ff ff88 	bl	8020fdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80210cc:	4620      	mov	r0, r4
 80210ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80210d2:	f7ff bfbd 	b.w	8021050 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080210d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80210d8:	b538      	push	{r3, r4, r5, lr}
 80210da:	4c15      	ldr	r4, [pc, #84]	; (8021130 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80210dc:	7823      	ldrb	r3, [r4, #0]
 80210de:	f3bf 8f5b 	dmb	ish
 80210e2:	07da      	lsls	r2, r3, #31
 80210e4:	4605      	mov	r5, r0
 80210e6:	d40b      	bmi.n	8021100 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80210e8:	4620      	mov	r0, r4
 80210ea:	f00a fd68 	bl	802bbbe <__cxa_guard_acquire>
 80210ee:	b138      	cbz	r0, 8021100 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80210f0:	4620      	mov	r0, r4
 80210f2:	f00a fd70 	bl	802bbd6 <__cxa_guard_release>
 80210f6:	4a0f      	ldr	r2, [pc, #60]	; (8021134 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80210f8:	490f      	ldr	r1, [pc, #60]	; (8021138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80210fa:	4810      	ldr	r0, [pc, #64]	; (802113c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80210fc:	f00a fd58 	bl	802bbb0 <__aeabi_atexit>
 8021100:	4c0f      	ldr	r4, [pc, #60]	; (8021140 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8021102:	7823      	ldrb	r3, [r4, #0]
 8021104:	f3bf 8f5b 	dmb	ish
 8021108:	07db      	lsls	r3, r3, #31
 802110a:	d40b      	bmi.n	8021124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802110c:	4620      	mov	r0, r4
 802110e:	f00a fd56 	bl	802bbbe <__cxa_guard_acquire>
 8021112:	b138      	cbz	r0, 8021124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021114:	4620      	mov	r0, r4
 8021116:	f00a fd5e 	bl	802bbd6 <__cxa_guard_release>
 802111a:	4a06      	ldr	r2, [pc, #24]	; (8021134 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802111c:	4909      	ldr	r1, [pc, #36]	; (8021144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802111e:	480a      	ldr	r0, [pc, #40]	; (8021148 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8021120:	f00a fd46 	bl	802bbb0 <__aeabi_atexit>
 8021124:	4b05      	ldr	r3, [pc, #20]	; (802113c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8021126:	652b      	str	r3, [r5, #80]	; 0x50
 8021128:	4b07      	ldr	r3, [pc, #28]	; (8021148 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802112a:	656b      	str	r3, [r5, #84]	; 0x54
 802112c:	bd38      	pop	{r3, r4, r5, pc}
 802112e:	bf00      	nop
 8021130:	2001394c 	.word	0x2001394c
 8021134:	20000000 	.word	0x20000000
 8021138:	0801dbc7 	.word	0x0801dbc7
 802113c:	200000f8 	.word	0x200000f8
 8021140:	20013950 	.word	0x20013950
 8021144:	0801dbc5 	.word	0x0801dbc5
 8021148:	200000fc 	.word	0x200000fc

0802114c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802114c:	b538      	push	{r3, r4, r5, lr}
 802114e:	4c15      	ldr	r4, [pc, #84]	; (80211a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8021150:	7823      	ldrb	r3, [r4, #0]
 8021152:	f3bf 8f5b 	dmb	ish
 8021156:	07da      	lsls	r2, r3, #31
 8021158:	4605      	mov	r5, r0
 802115a:	d40b      	bmi.n	8021174 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 802115c:	4620      	mov	r0, r4
 802115e:	f00a fd2e 	bl	802bbbe <__cxa_guard_acquire>
 8021162:	b138      	cbz	r0, 8021174 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021164:	4620      	mov	r0, r4
 8021166:	f00a fd36 	bl	802bbd6 <__cxa_guard_release>
 802116a:	4a0f      	ldr	r2, [pc, #60]	; (80211a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802116c:	490f      	ldr	r1, [pc, #60]	; (80211ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802116e:	4810      	ldr	r0, [pc, #64]	; (80211b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8021170:	f00a fd1e 	bl	802bbb0 <__aeabi_atexit>
 8021174:	4c0f      	ldr	r4, [pc, #60]	; (80211b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8021176:	7823      	ldrb	r3, [r4, #0]
 8021178:	f3bf 8f5b 	dmb	ish
 802117c:	07db      	lsls	r3, r3, #31
 802117e:	d40b      	bmi.n	8021198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8021180:	4620      	mov	r0, r4
 8021182:	f00a fd1c 	bl	802bbbe <__cxa_guard_acquire>
 8021186:	b138      	cbz	r0, 8021198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8021188:	4620      	mov	r0, r4
 802118a:	f00a fd24 	bl	802bbd6 <__cxa_guard_release>
 802118e:	4a06      	ldr	r2, [pc, #24]	; (80211a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021190:	4909      	ldr	r1, [pc, #36]	; (80211b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8021192:	480a      	ldr	r0, [pc, #40]	; (80211bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8021194:	f00a fd0c 	bl	802bbb0 <__aeabi_atexit>
 8021198:	4b05      	ldr	r3, [pc, #20]	; (80211b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802119a:	64ab      	str	r3, [r5, #72]	; 0x48
 802119c:	4b07      	ldr	r3, [pc, #28]	; (80211bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802119e:	64eb      	str	r3, [r5, #76]	; 0x4c
 80211a0:	bd38      	pop	{r3, r4, r5, pc}
 80211a2:	bf00      	nop
 80211a4:	20013954 	.word	0x20013954
 80211a8:	20000000 	.word	0x20000000
 80211ac:	0801dbcb 	.word	0x0801dbcb
 80211b0:	20000100 	.word	0x20000100
 80211b4:	20013958 	.word	0x20013958
 80211b8:	0801dbc9 	.word	0x0801dbc9
 80211bc:	20000104 	.word	0x20000104

080211c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80211c0:	b538      	push	{r3, r4, r5, lr}
 80211c2:	4c15      	ldr	r4, [pc, #84]	; (8021218 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80211c4:	7823      	ldrb	r3, [r4, #0]
 80211c6:	f3bf 8f5b 	dmb	ish
 80211ca:	07da      	lsls	r2, r3, #31
 80211cc:	4605      	mov	r5, r0
 80211ce:	d40b      	bmi.n	80211e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80211d0:	4620      	mov	r0, r4
 80211d2:	f00a fcf4 	bl	802bbbe <__cxa_guard_acquire>
 80211d6:	b138      	cbz	r0, 80211e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80211d8:	4620      	mov	r0, r4
 80211da:	f00a fcfc 	bl	802bbd6 <__cxa_guard_release>
 80211de:	4a0f      	ldr	r2, [pc, #60]	; (802121c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80211e0:	490f      	ldr	r1, [pc, #60]	; (8021220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80211e2:	4810      	ldr	r0, [pc, #64]	; (8021224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80211e4:	f00a fce4 	bl	802bbb0 <__aeabi_atexit>
 80211e8:	4c0f      	ldr	r4, [pc, #60]	; (8021228 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80211ea:	7823      	ldrb	r3, [r4, #0]
 80211ec:	f3bf 8f5b 	dmb	ish
 80211f0:	07db      	lsls	r3, r3, #31
 80211f2:	d40b      	bmi.n	802120c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80211f4:	4620      	mov	r0, r4
 80211f6:	f00a fce2 	bl	802bbbe <__cxa_guard_acquire>
 80211fa:	b138      	cbz	r0, 802120c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80211fc:	4620      	mov	r0, r4
 80211fe:	f00a fcea 	bl	802bbd6 <__cxa_guard_release>
 8021202:	4a06      	ldr	r2, [pc, #24]	; (802121c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8021204:	4909      	ldr	r1, [pc, #36]	; (802122c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8021206:	480a      	ldr	r0, [pc, #40]	; (8021230 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021208:	f00a fcd2 	bl	802bbb0 <__aeabi_atexit>
 802120c:	4b05      	ldr	r3, [pc, #20]	; (8021224 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802120e:	642b      	str	r3, [r5, #64]	; 0x40
 8021210:	4b07      	ldr	r3, [pc, #28]	; (8021230 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021212:	646b      	str	r3, [r5, #68]	; 0x44
 8021214:	bd38      	pop	{r3, r4, r5, pc}
 8021216:	bf00      	nop
 8021218:	2001391c 	.word	0x2001391c
 802121c:	20000000 	.word	0x20000000
 8021220:	0801dbcf 	.word	0x0801dbcf
 8021224:	200000c8 	.word	0x200000c8
 8021228:	20013920 	.word	0x20013920
 802122c:	0801dbcd 	.word	0x0801dbcd
 8021230:	200000cc 	.word	0x200000cc

08021234 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8021234:	b538      	push	{r3, r4, r5, lr}
 8021236:	4c15      	ldr	r4, [pc, #84]	; (802128c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8021238:	7823      	ldrb	r3, [r4, #0]
 802123a:	f3bf 8f5b 	dmb	ish
 802123e:	07da      	lsls	r2, r3, #31
 8021240:	4605      	mov	r5, r0
 8021242:	d40b      	bmi.n	802125c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021244:	4620      	mov	r0, r4
 8021246:	f00a fcba 	bl	802bbbe <__cxa_guard_acquire>
 802124a:	b138      	cbz	r0, 802125c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802124c:	4620      	mov	r0, r4
 802124e:	f00a fcc2 	bl	802bbd6 <__cxa_guard_release>
 8021252:	4a0f      	ldr	r2, [pc, #60]	; (8021290 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8021254:	490f      	ldr	r1, [pc, #60]	; (8021294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8021256:	4810      	ldr	r0, [pc, #64]	; (8021298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8021258:	f00a fcaa 	bl	802bbb0 <__aeabi_atexit>
 802125c:	4c0f      	ldr	r4, [pc, #60]	; (802129c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802125e:	7823      	ldrb	r3, [r4, #0]
 8021260:	f3bf 8f5b 	dmb	ish
 8021264:	07db      	lsls	r3, r3, #31
 8021266:	d40b      	bmi.n	8021280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8021268:	4620      	mov	r0, r4
 802126a:	f00a fca8 	bl	802bbbe <__cxa_guard_acquire>
 802126e:	b138      	cbz	r0, 8021280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8021270:	4620      	mov	r0, r4
 8021272:	f00a fcb0 	bl	802bbd6 <__cxa_guard_release>
 8021276:	4a06      	ldr	r2, [pc, #24]	; (8021290 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8021278:	4909      	ldr	r1, [pc, #36]	; (80212a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802127a:	480a      	ldr	r0, [pc, #40]	; (80212a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802127c:	f00a fc98 	bl	802bbb0 <__aeabi_atexit>
 8021280:	4b05      	ldr	r3, [pc, #20]	; (8021298 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8021282:	63ab      	str	r3, [r5, #56]	; 0x38
 8021284:	4b07      	ldr	r3, [pc, #28]	; (80212a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8021286:	63eb      	str	r3, [r5, #60]	; 0x3c
 8021288:	bd38      	pop	{r3, r4, r5, pc}
 802128a:	bf00      	nop
 802128c:	2001393c 	.word	0x2001393c
 8021290:	20000000 	.word	0x20000000
 8021294:	0801dbd3 	.word	0x0801dbd3
 8021298:	200000e8 	.word	0x200000e8
 802129c:	20013940 	.word	0x20013940
 80212a0:	0801dbd1 	.word	0x0801dbd1
 80212a4:	200000ec 	.word	0x200000ec

080212a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80212a8:	b510      	push	{r4, lr}
 80212aa:	4604      	mov	r4, r0
 80212ac:	f7ff ff14 	bl	80210d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80212b0:	4620      	mov	r0, r4
 80212b2:	f7ff ff85 	bl	80211c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80212b6:	4620      	mov	r0, r4
 80212b8:	f7ff ff48 	bl	802114c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80212bc:	4620      	mov	r0, r4
 80212be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80212c2:	f7ff bfb7 	b.w	8021234 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080212c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80212c8:	b538      	push	{r3, r4, r5, lr}
 80212ca:	4c15      	ldr	r4, [pc, #84]	; (8021320 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80212cc:	7823      	ldrb	r3, [r4, #0]
 80212ce:	f3bf 8f5b 	dmb	ish
 80212d2:	07da      	lsls	r2, r3, #31
 80212d4:	4605      	mov	r5, r0
 80212d6:	d40b      	bmi.n	80212f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80212d8:	4620      	mov	r0, r4
 80212da:	f00a fc70 	bl	802bbbe <__cxa_guard_acquire>
 80212de:	b138      	cbz	r0, 80212f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80212e0:	4620      	mov	r0, r4
 80212e2:	f00a fc78 	bl	802bbd6 <__cxa_guard_release>
 80212e6:	4a0f      	ldr	r2, [pc, #60]	; (8021324 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80212e8:	490f      	ldr	r1, [pc, #60]	; (8021328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80212ea:	4810      	ldr	r0, [pc, #64]	; (802132c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80212ec:	f00a fc60 	bl	802bbb0 <__aeabi_atexit>
 80212f0:	4c0f      	ldr	r4, [pc, #60]	; (8021330 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80212f2:	7823      	ldrb	r3, [r4, #0]
 80212f4:	f3bf 8f5b 	dmb	ish
 80212f8:	07db      	lsls	r3, r3, #31
 80212fa:	d40b      	bmi.n	8021314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80212fc:	4620      	mov	r0, r4
 80212fe:	f00a fc5e 	bl	802bbbe <__cxa_guard_acquire>
 8021302:	b138      	cbz	r0, 8021314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8021304:	4620      	mov	r0, r4
 8021306:	f00a fc66 	bl	802bbd6 <__cxa_guard_release>
 802130a:	4a06      	ldr	r2, [pc, #24]	; (8021324 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802130c:	4909      	ldr	r1, [pc, #36]	; (8021334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802130e:	480a      	ldr	r0, [pc, #40]	; (8021338 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8021310:	f00a fc4e 	bl	802bbb0 <__aeabi_atexit>
 8021314:	4b05      	ldr	r3, [pc, #20]	; (802132c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8021316:	662b      	str	r3, [r5, #96]	; 0x60
 8021318:	4b07      	ldr	r3, [pc, #28]	; (8021338 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802131a:	666b      	str	r3, [r5, #100]	; 0x64
 802131c:	bd38      	pop	{r3, r4, r5, pc}
 802131e:	bf00      	nop
 8021320:	20013924 	.word	0x20013924
 8021324:	20000000 	.word	0x20000000
 8021328:	0801dbbf 	.word	0x0801dbbf
 802132c:	200000d0 	.word	0x200000d0
 8021330:	20013928 	.word	0x20013928
 8021334:	0801dbbd 	.word	0x0801dbbd
 8021338:	200000d4 	.word	0x200000d4

0802133c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802133c:	b538      	push	{r3, r4, r5, lr}
 802133e:	4c15      	ldr	r4, [pc, #84]	; (8021394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8021340:	7823      	ldrb	r3, [r4, #0]
 8021342:	f3bf 8f5b 	dmb	ish
 8021346:	07da      	lsls	r2, r3, #31
 8021348:	4605      	mov	r5, r0
 802134a:	d40b      	bmi.n	8021364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802134c:	4620      	mov	r0, r4
 802134e:	f00a fc36 	bl	802bbbe <__cxa_guard_acquire>
 8021352:	b138      	cbz	r0, 8021364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8021354:	4620      	mov	r0, r4
 8021356:	f00a fc3e 	bl	802bbd6 <__cxa_guard_release>
 802135a:	4a0f      	ldr	r2, [pc, #60]	; (8021398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802135c:	490f      	ldr	r1, [pc, #60]	; (802139c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802135e:	4810      	ldr	r0, [pc, #64]	; (80213a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8021360:	f00a fc26 	bl	802bbb0 <__aeabi_atexit>
 8021364:	4c0f      	ldr	r4, [pc, #60]	; (80213a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8021366:	7823      	ldrb	r3, [r4, #0]
 8021368:	f3bf 8f5b 	dmb	ish
 802136c:	07db      	lsls	r3, r3, #31
 802136e:	d40b      	bmi.n	8021388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8021370:	4620      	mov	r0, r4
 8021372:	f00a fc24 	bl	802bbbe <__cxa_guard_acquire>
 8021376:	b138      	cbz	r0, 8021388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8021378:	4620      	mov	r0, r4
 802137a:	f00a fc2c 	bl	802bbd6 <__cxa_guard_release>
 802137e:	4a06      	ldr	r2, [pc, #24]	; (8021398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8021380:	4909      	ldr	r1, [pc, #36]	; (80213a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8021382:	480a      	ldr	r0, [pc, #40]	; (80213ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8021384:	f00a fc14 	bl	802bbb0 <__aeabi_atexit>
 8021388:	4b05      	ldr	r3, [pc, #20]	; (80213a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802138a:	65ab      	str	r3, [r5, #88]	; 0x58
 802138c:	4b07      	ldr	r3, [pc, #28]	; (80213ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802138e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8021390:	bd38      	pop	{r3, r4, r5, pc}
 8021392:	bf00      	nop
 8021394:	200138fc 	.word	0x200138fc
 8021398:	20000000 	.word	0x20000000
 802139c:	0801dbc3 	.word	0x0801dbc3
 80213a0:	200000a8 	.word	0x200000a8
 80213a4:	20013900 	.word	0x20013900
 80213a8:	0801dbc1 	.word	0x0801dbc1
 80213ac:	200000ac 	.word	0x200000ac

080213b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80213b0:	b510      	push	{r4, lr}
 80213b2:	4604      	mov	r4, r0
 80213b4:	f7ff ff88 	bl	80212c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80213b8:	4620      	mov	r0, r4
 80213ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80213be:	f7ff bfbd 	b.w	802133c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080213c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80213c4:	b538      	push	{r3, r4, r5, lr}
 80213c6:	4c15      	ldr	r4, [pc, #84]	; (802141c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80213c8:	7823      	ldrb	r3, [r4, #0]
 80213ca:	f3bf 8f5b 	dmb	ish
 80213ce:	07da      	lsls	r2, r3, #31
 80213d0:	4605      	mov	r5, r0
 80213d2:	d40b      	bmi.n	80213ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80213d4:	4620      	mov	r0, r4
 80213d6:	f00a fbf2 	bl	802bbbe <__cxa_guard_acquire>
 80213da:	b138      	cbz	r0, 80213ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80213dc:	4620      	mov	r0, r4
 80213de:	f00a fbfa 	bl	802bbd6 <__cxa_guard_release>
 80213e2:	4a0f      	ldr	r2, [pc, #60]	; (8021420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80213e4:	490f      	ldr	r1, [pc, #60]	; (8021424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80213e6:	4810      	ldr	r0, [pc, #64]	; (8021428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80213e8:	f00a fbe2 	bl	802bbb0 <__aeabi_atexit>
 80213ec:	4c0f      	ldr	r4, [pc, #60]	; (802142c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80213ee:	7823      	ldrb	r3, [r4, #0]
 80213f0:	f3bf 8f5b 	dmb	ish
 80213f4:	07db      	lsls	r3, r3, #31
 80213f6:	d40b      	bmi.n	8021410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80213f8:	4620      	mov	r0, r4
 80213fa:	f00a fbe0 	bl	802bbbe <__cxa_guard_acquire>
 80213fe:	b138      	cbz	r0, 8021410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8021400:	4620      	mov	r0, r4
 8021402:	f00a fbe8 	bl	802bbd6 <__cxa_guard_release>
 8021406:	4a06      	ldr	r2, [pc, #24]	; (8021420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8021408:	4909      	ldr	r1, [pc, #36]	; (8021430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802140a:	480a      	ldr	r0, [pc, #40]	; (8021434 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802140c:	f00a fbd0 	bl	802bbb0 <__aeabi_atexit>
 8021410:	4b05      	ldr	r3, [pc, #20]	; (8021428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8021412:	672b      	str	r3, [r5, #112]	; 0x70
 8021414:	4b07      	ldr	r3, [pc, #28]	; (8021434 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8021416:	676b      	str	r3, [r5, #116]	; 0x74
 8021418:	bd38      	pop	{r3, r4, r5, pc}
 802141a:	bf00      	nop
 802141c:	200138f4 	.word	0x200138f4
 8021420:	20000000 	.word	0x20000000
 8021424:	0801dbb7 	.word	0x0801dbb7
 8021428:	200000a0 	.word	0x200000a0
 802142c:	200138f8 	.word	0x200138f8
 8021430:	0801dbb5 	.word	0x0801dbb5
 8021434:	200000a4 	.word	0x200000a4

08021438 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8021438:	b538      	push	{r3, r4, r5, lr}
 802143a:	4c15      	ldr	r4, [pc, #84]	; (8021490 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802143c:	7823      	ldrb	r3, [r4, #0]
 802143e:	f3bf 8f5b 	dmb	ish
 8021442:	07da      	lsls	r2, r3, #31
 8021444:	4605      	mov	r5, r0
 8021446:	d40b      	bmi.n	8021460 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8021448:	4620      	mov	r0, r4
 802144a:	f00a fbb8 	bl	802bbbe <__cxa_guard_acquire>
 802144e:	b138      	cbz	r0, 8021460 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8021450:	4620      	mov	r0, r4
 8021452:	f00a fbc0 	bl	802bbd6 <__cxa_guard_release>
 8021456:	4a0f      	ldr	r2, [pc, #60]	; (8021494 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8021458:	490f      	ldr	r1, [pc, #60]	; (8021498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802145a:	4810      	ldr	r0, [pc, #64]	; (802149c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802145c:	f00a fba8 	bl	802bbb0 <__aeabi_atexit>
 8021460:	4c0f      	ldr	r4, [pc, #60]	; (80214a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8021462:	7823      	ldrb	r3, [r4, #0]
 8021464:	f3bf 8f5b 	dmb	ish
 8021468:	07db      	lsls	r3, r3, #31
 802146a:	d40b      	bmi.n	8021484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802146c:	4620      	mov	r0, r4
 802146e:	f00a fba6 	bl	802bbbe <__cxa_guard_acquire>
 8021472:	b138      	cbz	r0, 8021484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8021474:	4620      	mov	r0, r4
 8021476:	f00a fbae 	bl	802bbd6 <__cxa_guard_release>
 802147a:	4a06      	ldr	r2, [pc, #24]	; (8021494 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802147c:	4909      	ldr	r1, [pc, #36]	; (80214a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802147e:	480a      	ldr	r0, [pc, #40]	; (80214a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8021480:	f00a fb96 	bl	802bbb0 <__aeabi_atexit>
 8021484:	4b05      	ldr	r3, [pc, #20]	; (802149c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8021486:	66ab      	str	r3, [r5, #104]	; 0x68
 8021488:	4b07      	ldr	r3, [pc, #28]	; (80214a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802148a:	66eb      	str	r3, [r5, #108]	; 0x6c
 802148c:	bd38      	pop	{r3, r4, r5, pc}
 802148e:	bf00      	nop
 8021490:	200138ec 	.word	0x200138ec
 8021494:	20000000 	.word	0x20000000
 8021498:	0801dbbb 	.word	0x0801dbbb
 802149c:	20000098 	.word	0x20000098
 80214a0:	200138f0 	.word	0x200138f0
 80214a4:	0801dbb9 	.word	0x0801dbb9
 80214a8:	2000009c 	.word	0x2000009c

080214ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80214ac:	b510      	push	{r4, lr}
 80214ae:	4604      	mov	r4, r0
 80214b0:	f7ff ff88 	bl	80213c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80214b4:	4620      	mov	r0, r4
 80214b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80214ba:	f7ff bfbd 	b.w	8021438 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080214be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80214be:	b510      	push	{r4, lr}
 80214c0:	4604      	mov	r4, r0
 80214c2:	f7ff fff3 	bl	80214ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80214c6:	4620      	mov	r0, r4
 80214c8:	f7ff ff72 	bl	80213b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80214cc:	4620      	mov	r0, r4
 80214ce:	f7ff fdf9 	bl	80210c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80214d2:	4620      	mov	r0, r4
 80214d4:	f7ff fcfa 	bl	8020ecc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80214d8:	4620      	mov	r0, r4
 80214da:	f7ff fd75 	bl	8020fc8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80214de:	4620      	mov	r0, r4
 80214e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80214e4:	f7ff bee0 	b.w	80212a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080214e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80214e8:	b538      	push	{r3, r4, r5, lr}
 80214ea:	4c0b      	ldr	r4, [pc, #44]	; (8021518 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80214ec:	7823      	ldrb	r3, [r4, #0]
 80214ee:	f3bf 8f5b 	dmb	ish
 80214f2:	07db      	lsls	r3, r3, #31
 80214f4:	4605      	mov	r5, r0
 80214f6:	d40b      	bmi.n	8021510 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80214f8:	4620      	mov	r0, r4
 80214fa:	f00a fb60 	bl	802bbbe <__cxa_guard_acquire>
 80214fe:	b138      	cbz	r0, 8021510 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8021500:	4620      	mov	r0, r4
 8021502:	f00a fb68 	bl	802bbd6 <__cxa_guard_release>
 8021506:	4a05      	ldr	r2, [pc, #20]	; (802151c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8021508:	4905      	ldr	r1, [pc, #20]	; (8021520 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802150a:	4806      	ldr	r0, [pc, #24]	; (8021524 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802150c:	f00a fb50 	bl	802bbb0 <__aeabi_atexit>
 8021510:	4b04      	ldr	r3, [pc, #16]	; (8021524 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8021512:	67ab      	str	r3, [r5, #120]	; 0x78
 8021514:	bd38      	pop	{r3, r4, r5, pc}
 8021516:	bf00      	nop
 8021518:	200138e0 	.word	0x200138e0
 802151c:	20000000 	.word	0x20000000
 8021520:	0801dbb3 	.word	0x0801dbb3
 8021524:	20000090 	.word	0x20000090

08021528 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8021528:	b538      	push	{r3, r4, r5, lr}
 802152a:	4c0b      	ldr	r4, [pc, #44]	; (8021558 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802152c:	7823      	ldrb	r3, [r4, #0]
 802152e:	f3bf 8f5b 	dmb	ish
 8021532:	07db      	lsls	r3, r3, #31
 8021534:	4605      	mov	r5, r0
 8021536:	d40b      	bmi.n	8021550 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8021538:	4620      	mov	r0, r4
 802153a:	f00a fb40 	bl	802bbbe <__cxa_guard_acquire>
 802153e:	b138      	cbz	r0, 8021550 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8021540:	4620      	mov	r0, r4
 8021542:	f00a fb48 	bl	802bbd6 <__cxa_guard_release>
 8021546:	4a05      	ldr	r2, [pc, #20]	; (802155c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8021548:	4905      	ldr	r1, [pc, #20]	; (8021560 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802154a:	4806      	ldr	r0, [pc, #24]	; (8021564 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802154c:	f00a fb30 	bl	802bbb0 <__aeabi_atexit>
 8021550:	4b04      	ldr	r3, [pc, #16]	; (8021564 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8021552:	67eb      	str	r3, [r5, #124]	; 0x7c
 8021554:	bd38      	pop	{r3, r4, r5, pc}
 8021556:	bf00      	nop
 8021558:	200138e4 	.word	0x200138e4
 802155c:	20000000 	.word	0x20000000
 8021560:	0801dbb1 	.word	0x0801dbb1
 8021564:	20000094 	.word	0x20000094

08021568 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8021568:	b570      	push	{r4, r5, r6, lr}
 802156a:	4d0d      	ldr	r5, [pc, #52]	; (80215a0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 802156c:	4c0d      	ldr	r4, [pc, #52]	; (80215a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802156e:	782b      	ldrb	r3, [r5, #0]
 8021570:	f3bf 8f5b 	dmb	ish
 8021574:	f013 0f01 	tst.w	r3, #1
 8021578:	4606      	mov	r6, r0
 802157a:	d10d      	bne.n	8021598 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 802157c:	4628      	mov	r0, r5
 802157e:	f00a fb1e 	bl	802bbbe <__cxa_guard_acquire>
 8021582:	b148      	cbz	r0, 8021598 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8021584:	4b08      	ldr	r3, [pc, #32]	; (80215a8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8021586:	6023      	str	r3, [r4, #0]
 8021588:	4628      	mov	r0, r5
 802158a:	f00a fb24 	bl	802bbd6 <__cxa_guard_release>
 802158e:	4a07      	ldr	r2, [pc, #28]	; (80215ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8021590:	4907      	ldr	r1, [pc, #28]	; (80215b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8021592:	4620      	mov	r0, r4
 8021594:	f00a fb0c 	bl	802bbb0 <__aeabi_atexit>
 8021598:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802159c:	bd70      	pop	{r4, r5, r6, pc}
 802159e:	bf00      	nop
 80215a0:	200138e8 	.word	0x200138e8
 80215a4:	2001395c 	.word	0x2001395c
 80215a8:	08030f78 	.word	0x08030f78
 80215ac:	20000000 	.word	0x20000000
 80215b0:	0801dbaf 	.word	0x0801dbaf

080215b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80215b4:	b510      	push	{r4, lr}
 80215b6:	4604      	mov	r4, r0
 80215b8:	f7ff ff96 	bl	80214e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80215bc:	4620      	mov	r0, r4
 80215be:	f7ff ffb3 	bl	8021528 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80215c2:	4620      	mov	r0, r4
 80215c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80215c8:	f7ff bfce 	b.w	8021568 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080215cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80215cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215d0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80215d4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80215d8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80215dc:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80215e0:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80215e4:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80215e8:	8808      	ldrh	r0, [r1, #0]
 80215ea:	fb05 4c0e 	mla	ip, r5, lr, r4
 80215ee:	2d00      	cmp	r5, #0
 80215f0:	eb02 0a0c 	add.w	sl, r2, ip
 80215f4:	f2c0 80b0 	blt.w	8021758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80215f8:	45ab      	cmp	fp, r5
 80215fa:	f340 80ad 	ble.w	8021758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80215fe:	2c00      	cmp	r4, #0
 8021600:	f2c0 80a8 	blt.w	8021754 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8021604:	45a6      	cmp	lr, r4
 8021606:	f340 80a5 	ble.w	8021754 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802160a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802160e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8021612:	1c62      	adds	r2, r4, #1
 8021614:	f100 80a3 	bmi.w	802175e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8021618:	4596      	cmp	lr, r2
 802161a:	f340 80a0 	ble.w	802175e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802161e:	f1b9 0f00 	cmp.w	r9, #0
 8021622:	f000 809c 	beq.w	802175e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8021626:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802162a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802162e:	3501      	adds	r5, #1
 8021630:	f100 8099 	bmi.w	8021766 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8021634:	45ab      	cmp	fp, r5
 8021636:	f340 8096 	ble.w	8021766 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802163a:	2f00      	cmp	r7, #0
 802163c:	f000 8093 	beq.w	8021766 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8021640:	2c00      	cmp	r4, #0
 8021642:	f2c0 808e 	blt.w	8021762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8021646:	45a6      	cmp	lr, r4
 8021648:	f340 808b 	ble.w	8021762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802164c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8021650:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8021654:	3401      	adds	r4, #1
 8021656:	f100 8089 	bmi.w	802176c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802165a:	45a6      	cmp	lr, r4
 802165c:	f340 8086 	ble.w	802176c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8021660:	f1b9 0f00 	cmp.w	r9, #0
 8021664:	f000 8082 	beq.w	802176c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8021668:	44d6      	add	lr, sl
 802166a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802166e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8021672:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8021676:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802167a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802167e:	fb19 fe07 	smulbb	lr, r9, r7
 8021682:	ea44 0808 	orr.w	r8, r4, r8
 8021686:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802168a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802168e:	f1c7 0210 	rsb	r2, r7, #16
 8021692:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021696:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802169a:	ea44 0c0c 	orr.w	ip, r4, ip
 802169e:	eba2 0209 	sub.w	r2, r2, r9
 80216a2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80216a6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80216aa:	fb04 f40c 	mul.w	r4, r4, ip
 80216ae:	fb02 4808 	mla	r8, r2, r8, r4
 80216b2:	041a      	lsls	r2, r3, #16
 80216b4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80216b8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80216bc:	4313      	orrs	r3, r2
 80216be:	042a      	lsls	r2, r5, #16
 80216c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80216c4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80216c8:	fb0e 8303 	mla	r3, lr, r3, r8
 80216cc:	432a      	orrs	r2, r5
 80216ce:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80216d2:	fb07 3202 	mla	r2, r7, r2, r3
 80216d6:	0d53      	lsrs	r3, r2, #21
 80216d8:	0952      	lsrs	r2, r2, #5
 80216da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80216de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80216e2:	431a      	orrs	r2, r3
 80216e4:	b293      	uxth	r3, r2
 80216e6:	b2b4      	uxth	r4, r6
 80216e8:	1202      	asrs	r2, r0, #8
 80216ea:	43f6      	mvns	r6, r6
 80216ec:	b2f6      	uxtb	r6, r6
 80216ee:	121d      	asrs	r5, r3, #8
 80216f0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80216f4:	fb12 f206 	smulbb	r2, r2, r6
 80216f8:	10c7      	asrs	r7, r0, #3
 80216fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80216fe:	00c0      	lsls	r0, r0, #3
 8021700:	fb05 2504 	mla	r5, r5, r4, r2
 8021704:	b2c0      	uxtb	r0, r0
 8021706:	10da      	asrs	r2, r3, #3
 8021708:	00db      	lsls	r3, r3, #3
 802170a:	b2db      	uxtb	r3, r3
 802170c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021710:	fb10 f006 	smulbb	r0, r0, r6
 8021714:	b2ad      	uxth	r5, r5
 8021716:	fb03 0004 	mla	r0, r3, r4, r0
 802171a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802171e:	fb17 f706 	smulbb	r7, r7, r6
 8021722:	b280      	uxth	r0, r0
 8021724:	1c6b      	adds	r3, r5, #1
 8021726:	fb02 7204 	mla	r2, r2, r4, r7
 802172a:	b292      	uxth	r2, r2
 802172c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021730:	1c43      	adds	r3, r0, #1
 8021732:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021736:	1c50      	adds	r0, r2, #1
 8021738:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802173c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021740:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021744:	0952      	lsrs	r2, r2, #5
 8021746:	432b      	orrs	r3, r5
 8021748:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802174c:	4313      	orrs	r3, r2
 802174e:	800b      	strh	r3, [r1, #0]
 8021750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021754:	4680      	mov	r8, r0
 8021756:	e75c      	b.n	8021612 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8021758:	4684      	mov	ip, r0
 802175a:	4680      	mov	r8, r0
 802175c:	e767      	b.n	802162e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802175e:	4684      	mov	ip, r0
 8021760:	e765      	b.n	802162e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8021762:	4605      	mov	r5, r0
 8021764:	e776      	b.n	8021654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8021766:	4603      	mov	r3, r0
 8021768:	4605      	mov	r5, r0
 802176a:	e782      	b.n	8021672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802176c:	4603      	mov	r3, r0
 802176e:	e780      	b.n	8021672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08021770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021774:	b099      	sub	sp, #100	; 0x64
 8021776:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 802177a:	9215      	str	r2, [sp, #84]	; 0x54
 802177c:	9309      	str	r3, [sp, #36]	; 0x24
 802177e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8021780:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8021784:	930d      	str	r3, [sp, #52]	; 0x34
 8021786:	910c      	str	r1, [sp, #48]	; 0x30
 8021788:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 802178c:	9016      	str	r0, [sp, #88]	; 0x58
 802178e:	6850      	ldr	r0, [r2, #4]
 8021790:	6812      	ldr	r2, [r2, #0]
 8021792:	fb00 1303 	mla	r3, r0, r3, r1
 8021796:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 802179a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802179c:	681b      	ldr	r3, [r3, #0]
 802179e:	930b      	str	r3, [sp, #44]	; 0x2c
 80217a0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80217a2:	685e      	ldr	r6, [r3, #4]
 80217a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80217a6:	43db      	mvns	r3, r3
 80217a8:	b2db      	uxtb	r3, r3
 80217aa:	3604      	adds	r6, #4
 80217ac:	930a      	str	r3, [sp, #40]	; 0x28
 80217ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80217b0:	2b00      	cmp	r3, #0
 80217b2:	dc03      	bgt.n	80217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80217b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80217b6:	2b00      	cmp	r3, #0
 80217b8:	f340 8225 	ble.w	8021c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80217bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80217be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80217c6:	1e48      	subs	r0, r1, #1
 80217c8:	1e57      	subs	r7, r2, #1
 80217ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217cc:	2b00      	cmp	r3, #0
 80217ce:	f340 80e3 	ble.w	8021998 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80217d2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80217d6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80217da:	d406      	bmi.n	80217ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80217dc:	4584      	cmp	ip, r0
 80217de:	da04      	bge.n	80217ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80217e0:	2b00      	cmp	r3, #0
 80217e2:	db02      	blt.n	80217ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80217e4:	42bb      	cmp	r3, r7
 80217e6:	f2c0 80d8 	blt.w	802199a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80217ea:	f11c 0c01 	adds.w	ip, ip, #1
 80217ee:	f100 80c9 	bmi.w	8021984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80217f2:	4561      	cmp	r1, ip
 80217f4:	f2c0 80c6 	blt.w	8021984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80217f8:	3301      	adds	r3, #1
 80217fa:	f100 80c3 	bmi.w	8021984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80217fe:	429a      	cmp	r2, r3
 8021800:	f2c0 80c0 	blt.w	8021984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021804:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021808:	4647      	mov	r7, r8
 802180a:	f1bb 0f00 	cmp.w	fp, #0
 802180e:	f340 80e3 	ble.w	80219d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8021812:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021814:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021816:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802181a:	689b      	ldr	r3, [r3, #8]
 802181c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8021820:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021824:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8021828:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802182c:	f100 8121 	bmi.w	8021a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8021830:	f103 39ff 	add.w	r9, r3, #4294967295
 8021834:	454a      	cmp	r2, r9
 8021836:	f280 811c 	bge.w	8021a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802183a:	f1bc 0f00 	cmp.w	ip, #0
 802183e:	f2c0 8118 	blt.w	8021a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8021842:	f10e 39ff 	add.w	r9, lr, #4294967295
 8021846:	45cc      	cmp	ip, r9
 8021848:	f280 8113 	bge.w	8021a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802184c:	b21b      	sxth	r3, r3
 802184e:	fb0c 2203 	mla	r2, ip, r3, r2
 8021852:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021854:	eb04 0902 	add.w	r9, r4, r2
 8021858:	5ca2      	ldrb	r2, [r4, r2]
 802185a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802185e:	2800      	cmp	r0, #0
 8021860:	f000 80fe 	beq.w	8021a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021864:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021868:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802186c:	9211      	str	r2, [sp, #68]	; 0x44
 802186e:	b151      	cbz	r1, 8021886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021870:	eb09 0203 	add.w	r2, r9, r3
 8021874:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021878:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802187c:	930f      	str	r3, [sp, #60]	; 0x3c
 802187e:	7853      	ldrb	r3, [r2, #1]
 8021880:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021884:	9312      	str	r3, [sp, #72]	; 0x48
 8021886:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021888:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802188a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802188e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021892:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021896:	ea4c 0c03 	orr.w	ip, ip, r3
 802189a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802189c:	041b      	lsls	r3, r3, #16
 802189e:	fb10 f201 	smulbb	r2, r0, r1
 80218a2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80218a6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80218aa:	10d2      	asrs	r2, r2, #3
 80218ac:	4323      	orrs	r3, r4
 80218ae:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80218b2:	4353      	muls	r3, r2
 80218b4:	fb09 330c 	mla	r3, r9, ip, r3
 80218b8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80218bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80218c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80218c4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80218c8:	f1c1 0c10 	rsb	ip, r1, #16
 80218cc:	ebac 0c00 	sub.w	ip, ip, r0
 80218d0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80218d4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80218d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80218da:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80218dc:	0418      	lsls	r0, r3, #16
 80218de:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80218e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80218e6:	4318      	orrs	r0, r3
 80218e8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80218ec:	fb02 c200 	mla	r2, r2, r0, ip
 80218f0:	0d53      	lsrs	r3, r2, #21
 80218f2:	0952      	lsrs	r2, r2, #5
 80218f4:	8838      	ldrh	r0, [r7, #0]
 80218f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80218fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80218fe:	431a      	orrs	r2, r3
 8021900:	b292      	uxth	r2, r2
 8021902:	1201      	asrs	r1, r0, #8
 8021904:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8021908:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802190c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021910:	fb11 f104 	smulbb	r1, r1, r4
 8021914:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8021918:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802191c:	00c0      	lsls	r0, r0, #3
 802191e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8021922:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021926:	10d1      	asrs	r1, r2, #3
 8021928:	b2c0      	uxtb	r0, r0
 802192a:	00d2      	lsls	r2, r2, #3
 802192c:	b2d2      	uxtb	r2, r2
 802192e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021932:	fb1e fe04 	smulbb	lr, lr, r4
 8021936:	fb10 f004 	smulbb	r0, r0, r4
 802193a:	fa1f fc8c 	uxth.w	ip, ip
 802193e:	fb01 e103 	mla	r1, r1, r3, lr
 8021942:	fb02 0303 	mla	r3, r2, r3, r0
 8021946:	b29a      	uxth	r2, r3
 8021948:	f10c 0301 	add.w	r3, ip, #1
 802194c:	b289      	uxth	r1, r1
 802194e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8021952:	1c53      	adds	r3, r2, #1
 8021954:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021958:	1c4a      	adds	r2, r1, #1
 802195a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802195e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8021962:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021966:	0949      	lsrs	r1, r1, #5
 8021968:	ea43 030c 	orr.w	r3, r3, ip
 802196c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021970:	430b      	orrs	r3, r1
 8021972:	803b      	strh	r3, [r7, #0]
 8021974:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021976:	449a      	add	sl, r3
 8021978:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802197a:	3702      	adds	r7, #2
 802197c:	441d      	add	r5, r3
 802197e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021982:	e742      	b.n	802180a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021984:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021986:	449a      	add	sl, r3
 8021988:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802198a:	441d      	add	r5, r3
 802198c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802198e:	3b01      	subs	r3, #1
 8021990:	9309      	str	r3, [sp, #36]	; 0x24
 8021992:	f108 0802 	add.w	r8, r8, #2
 8021996:	e718      	b.n	80217ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8021998:	d023      	beq.n	80219e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 802199a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802199c:	9825      	ldr	r0, [sp, #148]	; 0x94
 802199e:	3b01      	subs	r3, #1
 80219a0:	fb00 a003 	mla	r0, r0, r3, sl
 80219a4:	1400      	asrs	r0, r0, #16
 80219a6:	f53f af2d 	bmi.w	8021804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80219aa:	3901      	subs	r1, #1
 80219ac:	4288      	cmp	r0, r1
 80219ae:	f6bf af29 	bge.w	8021804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80219b2:	9926      	ldr	r1, [sp, #152]	; 0x98
 80219b4:	fb01 5303 	mla	r3, r1, r3, r5
 80219b8:	141b      	asrs	r3, r3, #16
 80219ba:	f53f af23 	bmi.w	8021804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80219be:	3a01      	subs	r2, #1
 80219c0:	4293      	cmp	r3, r2
 80219c2:	f6bf af1f 	bge.w	8021804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80219c6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80219ca:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80219ce:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80219d2:	f1be 0f00 	cmp.w	lr, #0
 80219d6:	dc6c      	bgt.n	8021ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80219d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80219da:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80219de:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80219e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80219e4:	2b00      	cmp	r3, #0
 80219e6:	f340 810e 	ble.w	8021c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80219ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80219ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80219f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80219f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80219f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80219fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021a00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021a04:	eef0 6a62 	vmov.f32	s13, s5
 8021a08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021a0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021a14:	ee16 aa90 	vmov	sl, s13
 8021a18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021a1c:	eef0 6a43 	vmov.f32	s13, s6
 8021a20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021a24:	ee12 2a90 	vmov	r2, s5
 8021a28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021a2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a30:	ee13 2a10 	vmov	r2, s6
 8021a34:	9325      	str	r3, [sp, #148]	; 0x94
 8021a36:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021a38:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a3c:	9326      	str	r3, [sp, #152]	; 0x98
 8021a3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021a40:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8021a42:	3b01      	subs	r3, #1
 8021a44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a48:	930c      	str	r3, [sp, #48]	; 0x30
 8021a4a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021a4c:	bf08      	it	eq
 8021a4e:	4613      	moveq	r3, r2
 8021a50:	ee16 5a90 	vmov	r5, s13
 8021a54:	9309      	str	r3, [sp, #36]	; 0x24
 8021a56:	eeb0 3a67 	vmov.f32	s6, s15
 8021a5a:	eef0 2a47 	vmov.f32	s5, s14
 8021a5e:	e6a6      	b.n	80217ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021a60:	2900      	cmp	r1, #0
 8021a62:	f43f af10 	beq.w	8021886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021a66:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021a6a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021a6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a70:	e709      	b.n	8021886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021a72:	f112 0901 	adds.w	r9, r2, #1
 8021a76:	f53f af7d 	bmi.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021a7a:	454b      	cmp	r3, r9
 8021a7c:	f6ff af7a 	blt.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021a80:	f11c 0901 	adds.w	r9, ip, #1
 8021a84:	f53f af76 	bmi.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021a88:	45ce      	cmp	lr, r9
 8021a8a:	f6ff af73 	blt.w	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021a8e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021a90:	9202      	str	r2, [sp, #8]
 8021a92:	b21b      	sxth	r3, r3
 8021a94:	fa0f f28e 	sxth.w	r2, lr
 8021a98:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021a9c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8021aa0:	9201      	str	r2, [sp, #4]
 8021aa2:	9300      	str	r3, [sp, #0]
 8021aa4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021aa6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8021aa8:	4633      	mov	r3, r6
 8021aaa:	4639      	mov	r1, r7
 8021aac:	f7ff fd8e 	bl	80215cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8021ab0:	e760      	b.n	8021974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021ab2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ab4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ab6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021aba:	ea4f 422a 	mov.w	r2, sl, asr #16
 8021abe:	1429      	asrs	r1, r5, #16
 8021ac0:	fb03 2101 	mla	r1, r3, r1, r2
 8021ac4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021ac6:	440a      	add	r2, r1
 8021ac8:	5c61      	ldrb	r1, [r4, r1]
 8021aca:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8021ace:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021ad2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8021ad6:	f1bc 0f00 	cmp.w	ip, #0
 8021ada:	f000 808c 	beq.w	8021bf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8021ade:	7857      	ldrb	r7, [r2, #1]
 8021ae0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8021ae4:	9413      	str	r4, [sp, #76]	; 0x4c
 8021ae6:	b140      	cbz	r0, 8021afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021ae8:	18d7      	adds	r7, r2, r3
 8021aea:	5cd3      	ldrb	r3, [r2, r3]
 8021aec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021af0:	9310      	str	r3, [sp, #64]	; 0x40
 8021af2:	787b      	ldrb	r3, [r7, #1]
 8021af4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021af8:	9314      	str	r3, [sp, #80]	; 0x50
 8021afa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021afc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021afe:	fb1c f200 	smulbb	r2, ip, r0
 8021b02:	041f      	lsls	r7, r3, #16
 8021b04:	10d2      	asrs	r2, r2, #3
 8021b06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021b0a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8021b0e:	431f      	orrs	r7, r3
 8021b10:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8021b14:	9317      	str	r3, [sp, #92]	; 0x5c
 8021b16:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021b18:	041b      	lsls	r3, r3, #16
 8021b1a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8021b1e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021b22:	ea43 030b 	orr.w	r3, r3, fp
 8021b26:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021b28:	4353      	muls	r3, r2
 8021b2a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021b2e:	fb04 3707 	mla	r7, r4, r7, r3
 8021b32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021b36:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8021b3a:	ea43 0b01 	orr.w	fp, r3, r1
 8021b3e:	f1c0 0110 	rsb	r1, r0, #16
 8021b42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021b44:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b46:	eba1 0c0c 	sub.w	ip, r1, ip
 8021b4a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021b4e:	fb0c 770b 	mla	r7, ip, fp, r7
 8021b52:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021b56:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8021b5a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021b5e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021b62:	ea4c 0c0b 	orr.w	ip, ip, fp
 8021b66:	fb02 770c 	mla	r7, r2, ip, r7
 8021b6a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021b6c:	0d79      	lsrs	r1, r7, #21
 8021b6e:	097f      	lsrs	r7, r7, #5
 8021b70:	8812      	ldrh	r2, [r2, #0]
 8021b72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021b76:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021b7a:	430f      	orrs	r7, r1
 8021b7c:	b2bb      	uxth	r3, r7
 8021b7e:	1211      	asrs	r1, r2, #8
 8021b80:	1218      	asrs	r0, r3, #8
 8021b82:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021b86:	fb11 f104 	smulbb	r1, r1, r4
 8021b8a:	10d7      	asrs	r7, r2, #3
 8021b8c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021b90:	00d2      	lsls	r2, r2, #3
 8021b92:	fb00 1009 	mla	r0, r0, r9, r1
 8021b96:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021b9a:	10d9      	asrs	r1, r3, #3
 8021b9c:	b2d2      	uxtb	r2, r2
 8021b9e:	00db      	lsls	r3, r3, #3
 8021ba0:	fb17 f704 	smulbb	r7, r7, r4
 8021ba4:	fb12 f204 	smulbb	r2, r2, r4
 8021ba8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021bac:	b2db      	uxtb	r3, r3
 8021bae:	b280      	uxth	r0, r0
 8021bb0:	fb01 7109 	mla	r1, r1, r9, r7
 8021bb4:	fb03 2309 	mla	r3, r3, r9, r2
 8021bb8:	b29b      	uxth	r3, r3
 8021bba:	b289      	uxth	r1, r1
 8021bbc:	1c42      	adds	r2, r0, #1
 8021bbe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021bc2:	1c4f      	adds	r7, r1, #1
 8021bc4:	1c5a      	adds	r2, r3, #1
 8021bc6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021bca:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021bce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021bd2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021bd6:	0949      	lsrs	r1, r1, #5
 8021bd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021bda:	4310      	orrs	r0, r2
 8021bdc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021be0:	4308      	orrs	r0, r1
 8021be2:	f823 0b02 	strh.w	r0, [r3], #2
 8021be6:	930e      	str	r3, [sp, #56]	; 0x38
 8021be8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021bea:	449a      	add	sl, r3
 8021bec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021bee:	f10e 3eff 	add.w	lr, lr, #4294967295
 8021bf2:	441d      	add	r5, r3
 8021bf4:	e6ed      	b.n	80219d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8021bf6:	2800      	cmp	r0, #0
 8021bf8:	f43f af7f 	beq.w	8021afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021bfc:	5cd3      	ldrb	r3, [r2, r3]
 8021bfe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021c02:	9310      	str	r3, [sp, #64]	; 0x40
 8021c04:	e779      	b.n	8021afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021c06:	b019      	add	sp, #100	; 0x64
 8021c08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021c0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021c0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021c10:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8021c14:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8021c18:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8021c1c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8021c20:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8021c24:	8808      	ldrh	r0, [r1, #0]
 8021c26:	fb08 470e 	mla	r7, r8, lr, r4
 8021c2a:	f1b8 0f00 	cmp.w	r8, #0
 8021c2e:	eb02 0907 	add.w	r9, r2, r7
 8021c32:	db67      	blt.n	8021d04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021c34:	45c2      	cmp	sl, r8
 8021c36:	dd65      	ble.n	8021d04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021c38:	2c00      	cmp	r4, #0
 8021c3a:	db61      	blt.n	8021d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8021c3c:	45a6      	cmp	lr, r4
 8021c3e:	dd5f      	ble.n	8021d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8021c40:	5dd2      	ldrb	r2, [r2, r7]
 8021c42:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8021c46:	1c62      	adds	r2, r4, #1
 8021c48:	d45f      	bmi.n	8021d0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021c4a:	4596      	cmp	lr, r2
 8021c4c:	dd5d      	ble.n	8021d0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021c4e:	2d00      	cmp	r5, #0
 8021c50:	d05b      	beq.n	8021d0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021c52:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021c56:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8021c5a:	f118 0801 	adds.w	r8, r8, #1
 8021c5e:	d458      	bmi.n	8021d12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021c60:	45c2      	cmp	sl, r8
 8021c62:	dd56      	ble.n	8021d12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021c64:	2e00      	cmp	r6, #0
 8021c66:	d054      	beq.n	8021d12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021c68:	2c00      	cmp	r4, #0
 8021c6a:	db50      	blt.n	8021d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8021c6c:	45a6      	cmp	lr, r4
 8021c6e:	dd4e      	ble.n	8021d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8021c70:	f819 200e 	ldrb.w	r2, [r9, lr]
 8021c74:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8021c78:	3401      	adds	r4, #1
 8021c7a:	d407      	bmi.n	8021c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021c7c:	45a6      	cmp	lr, r4
 8021c7e:	dd05      	ble.n	8021c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021c80:	b125      	cbz	r5, 8021c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021c82:	44ce      	add	lr, r9
 8021c84:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8021c88:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8021c8c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8021c90:	fb15 f406 	smulbb	r4, r5, r6
 8021c94:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021c98:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8021c9c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021ca0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021ca4:	ea43 0c0c 	orr.w	ip, r3, ip
 8021ca8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021cac:	f1c6 0310 	rsb	r3, r6, #16
 8021cb0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021cb4:	1b5b      	subs	r3, r3, r5
 8021cb6:	ea4e 0707 	orr.w	r7, lr, r7
 8021cba:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8021cbe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021cc2:	437d      	muls	r5, r7
 8021cc4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8021cc8:	0403      	lsls	r3, r0, #16
 8021cca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021cce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021cd2:	4318      	orrs	r0, r3
 8021cd4:	0413      	lsls	r3, r2, #16
 8021cd6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021cda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021cde:	4313      	orrs	r3, r2
 8021ce0:	fb04 c000 	mla	r0, r4, r0, ip
 8021ce4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8021ce8:	fb06 0003 	mla	r0, r6, r3, r0
 8021cec:	0d43      	lsrs	r3, r0, #21
 8021cee:	0940      	lsrs	r0, r0, #5
 8021cf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021cf4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021cf8:	4318      	orrs	r0, r3
 8021cfa:	8008      	strh	r0, [r1, #0]
 8021cfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021d00:	4684      	mov	ip, r0
 8021d02:	e7a0      	b.n	8021c46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8021d04:	4607      	mov	r7, r0
 8021d06:	4684      	mov	ip, r0
 8021d08:	e7a7      	b.n	8021c5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8021d0a:	4607      	mov	r7, r0
 8021d0c:	e7a5      	b.n	8021c5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8021d0e:	4602      	mov	r2, r0
 8021d10:	e7b2      	b.n	8021c78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8021d12:	4602      	mov	r2, r0
 8021d14:	e7ba      	b.n	8021c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08021d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021d16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d1a:	b093      	sub	sp, #76	; 0x4c
 8021d1c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8021d20:	920f      	str	r2, [sp, #60]	; 0x3c
 8021d22:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021d24:	9108      	str	r1, [sp, #32]
 8021d26:	9306      	str	r3, [sp, #24]
 8021d28:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021d2c:	9010      	str	r0, [sp, #64]	; 0x40
 8021d2e:	6850      	ldr	r0, [r2, #4]
 8021d30:	6812      	ldr	r2, [r2, #0]
 8021d32:	fb00 1303 	mla	r3, r0, r3, r1
 8021d36:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021d3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021d3c:	681b      	ldr	r3, [r3, #0]
 8021d3e:	9307      	str	r3, [sp, #28]
 8021d40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021d42:	685f      	ldr	r7, [r3, #4]
 8021d44:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8021d48:	3704      	adds	r7, #4
 8021d4a:	9b08      	ldr	r3, [sp, #32]
 8021d4c:	2b00      	cmp	r3, #0
 8021d4e:	dc03      	bgt.n	8021d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021d50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021d52:	2b00      	cmp	r3, #0
 8021d54:	f340 81b2 	ble.w	80220bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021d58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021d5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d62:	1e48      	subs	r0, r1, #1
 8021d64:	f102 3cff 	add.w	ip, r2, #4294967295
 8021d68:	9b06      	ldr	r3, [sp, #24]
 8021d6a:	2b00      	cmp	r3, #0
 8021d6c:	f340 80a9 	ble.w	8021ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8021d70:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021d74:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021d78:	d406      	bmi.n	8021d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021d7a:	4586      	cmp	lr, r0
 8021d7c:	da04      	bge.n	8021d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021d7e:	2b00      	cmp	r3, #0
 8021d80:	db02      	blt.n	8021d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021d82:	4563      	cmp	r3, ip
 8021d84:	f2c0 809e 	blt.w	8021ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021d88:	f11e 0e01 	adds.w	lr, lr, #1
 8021d8c:	f100 808f 	bmi.w	8021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021d90:	4571      	cmp	r1, lr
 8021d92:	f2c0 808c 	blt.w	8021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021d96:	3301      	adds	r3, #1
 8021d98:	f100 8089 	bmi.w	8021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021d9c:	429a      	cmp	r2, r3
 8021d9e:	f2c0 8086 	blt.w	8021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021da2:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021da6:	46c8      	mov	r8, r9
 8021da8:	f1bb 0f00 	cmp.w	fp, #0
 8021dac:	f340 80a6 	ble.w	8021efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8021db0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8021db2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021db4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021db8:	689b      	ldr	r3, [r3, #8]
 8021dba:	1422      	asrs	r2, r4, #16
 8021dbc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021dc0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021dc4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021dc8:	f100 80e3 	bmi.w	8021f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021dcc:	f103 3aff 	add.w	sl, r3, #4294967295
 8021dd0:	4552      	cmp	r2, sl
 8021dd2:	f280 80de 	bge.w	8021f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021dd6:	f1bc 0f00 	cmp.w	ip, #0
 8021dda:	f2c0 80da 	blt.w	8021f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021dde:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021de2:	45d4      	cmp	ip, sl
 8021de4:	f280 80d5 	bge.w	8021f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021de8:	b21b      	sxth	r3, r3
 8021dea:	fb0c 2203 	mla	r2, ip, r3, r2
 8021dee:	9d07      	ldr	r5, [sp, #28]
 8021df0:	eb05 0a02 	add.w	sl, r5, r2
 8021df4:	5caa      	ldrb	r2, [r5, r2]
 8021df6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8021dfa:	2800      	cmp	r0, #0
 8021dfc:	f000 80c0 	beq.w	8021f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021e00:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021e04:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021e08:	920b      	str	r2, [sp, #44]	; 0x2c
 8021e0a:	b151      	cbz	r1, 8021e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021e0c:	eb0a 0203 	add.w	r2, sl, r3
 8021e10:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021e14:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021e18:	9309      	str	r3, [sp, #36]	; 0x24
 8021e1a:	7853      	ldrb	r3, [r2, #1]
 8021e1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021e20:	930c      	str	r3, [sp, #48]	; 0x30
 8021e22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021e24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021e26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021e2a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021e2e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021e32:	ea4c 0c03 	orr.w	ip, ip, r3
 8021e36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021e38:	041b      	lsls	r3, r3, #16
 8021e3a:	fb10 f201 	smulbb	r2, r0, r1
 8021e3e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021e42:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021e46:	10d2      	asrs	r2, r2, #3
 8021e48:	432b      	orrs	r3, r5
 8021e4a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8021e4e:	4353      	muls	r3, r2
 8021e50:	fb0a 330c 	mla	r3, sl, ip, r3
 8021e54:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021e58:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021e5c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021e60:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021e64:	f1c1 0c10 	rsb	ip, r1, #16
 8021e68:	ebac 0c00 	sub.w	ip, ip, r0
 8021e6c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021e70:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021e74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e76:	0418      	lsls	r0, r3, #16
 8021e78:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021e7c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021e80:	4318      	orrs	r0, r3
 8021e82:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021e86:	fb02 c200 	mla	r2, r2, r0, ip
 8021e8a:	0d53      	lsrs	r3, r2, #21
 8021e8c:	0952      	lsrs	r2, r2, #5
 8021e8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e92:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e96:	431a      	orrs	r2, r3
 8021e98:	f8a8 2000 	strh.w	r2, [r8]
 8021e9c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021e9e:	441c      	add	r4, r3
 8021ea0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ea2:	f108 0802 	add.w	r8, r8, #2
 8021ea6:	441e      	add	r6, r3
 8021ea8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021eac:	e77c      	b.n	8021da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021eae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021eb0:	441c      	add	r4, r3
 8021eb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021eb4:	441e      	add	r6, r3
 8021eb6:	9b06      	ldr	r3, [sp, #24]
 8021eb8:	3b01      	subs	r3, #1
 8021eba:	9306      	str	r3, [sp, #24]
 8021ebc:	f109 0902 	add.w	r9, r9, #2
 8021ec0:	e752      	b.n	8021d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021ec2:	d020      	beq.n	8021f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021ec4:	9b06      	ldr	r3, [sp, #24]
 8021ec6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021ec8:	3b01      	subs	r3, #1
 8021eca:	fb00 4003 	mla	r0, r0, r3, r4
 8021ece:	1400      	asrs	r0, r0, #16
 8021ed0:	f53f af67 	bmi.w	8021da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ed4:	3901      	subs	r1, #1
 8021ed6:	4288      	cmp	r0, r1
 8021ed8:	f6bf af63 	bge.w	8021da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021edc:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021ede:	fb01 6303 	mla	r3, r1, r3, r6
 8021ee2:	141b      	asrs	r3, r3, #16
 8021ee4:	f53f af5d 	bmi.w	8021da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ee8:	3a01      	subs	r2, #1
 8021eea:	4293      	cmp	r3, r2
 8021eec:	f6bf af59 	bge.w	8021da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021ef0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8021ef4:	46ca      	mov	sl, r9
 8021ef6:	f1b8 0f00 	cmp.w	r8, #0
 8021efa:	dc67      	bgt.n	8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8021efc:	9b06      	ldr	r3, [sp, #24]
 8021efe:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021f02:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021f06:	9b08      	ldr	r3, [sp, #32]
 8021f08:	2b00      	cmp	r3, #0
 8021f0a:	f340 80d7 	ble.w	80220bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021f0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021f12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021f16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8021f1a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021f20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021f24:	eeb0 6a62 	vmov.f32	s12, s5
 8021f28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021f2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021f30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021f34:	ee16 4a10 	vmov	r4, s12
 8021f38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021f3c:	eeb0 6a43 	vmov.f32	s12, s6
 8021f40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f44:	ee12 2a90 	vmov	r2, s5
 8021f48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f50:	ee13 2a10 	vmov	r2, s6
 8021f54:	931f      	str	r3, [sp, #124]	; 0x7c
 8021f56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f58:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f5c:	9320      	str	r3, [sp, #128]	; 0x80
 8021f5e:	9b08      	ldr	r3, [sp, #32]
 8021f60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021f62:	3b01      	subs	r3, #1
 8021f64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021f68:	9308      	str	r3, [sp, #32]
 8021f6a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f6c:	bf08      	it	eq
 8021f6e:	4613      	moveq	r3, r2
 8021f70:	ee16 6a10 	vmov	r6, s12
 8021f74:	9306      	str	r3, [sp, #24]
 8021f76:	eeb0 3a67 	vmov.f32	s6, s15
 8021f7a:	eef0 2a47 	vmov.f32	s5, s14
 8021f7e:	e6e4      	b.n	8021d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021f80:	2900      	cmp	r1, #0
 8021f82:	f43f af4e 	beq.w	8021e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021f86:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021f8a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021f8e:	9309      	str	r3, [sp, #36]	; 0x24
 8021f90:	e747      	b.n	8021e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021f92:	f112 0a01 	adds.w	sl, r2, #1
 8021f96:	d481      	bmi.n	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021f98:	4553      	cmp	r3, sl
 8021f9a:	f6ff af7f 	blt.w	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021f9e:	f11c 0a01 	adds.w	sl, ip, #1
 8021fa2:	f53f af7b 	bmi.w	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021fa6:	45d6      	cmp	lr, sl
 8021fa8:	f6ff af78 	blt.w	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021fac:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8021fb0:	b21b      	sxth	r3, r3
 8021fb2:	fa0f f28e 	sxth.w	r2, lr
 8021fb6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8021fba:	9201      	str	r2, [sp, #4]
 8021fbc:	9300      	str	r3, [sp, #0]
 8021fbe:	9a07      	ldr	r2, [sp, #28]
 8021fc0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021fc2:	463b      	mov	r3, r7
 8021fc4:	4641      	mov	r1, r8
 8021fc6:	f7ff fe21 	bl	8021c0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8021fca:	e767      	b.n	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021fcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fce:	9d07      	ldr	r5, [sp, #28]
 8021fd0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021fd4:	1422      	asrs	r2, r4, #16
 8021fd6:	1431      	asrs	r1, r6, #16
 8021fd8:	fb03 2101 	mla	r1, r3, r1, r2
 8021fdc:	9a07      	ldr	r2, [sp, #28]
 8021fde:	440a      	add	r2, r1
 8021fe0:	5c69      	ldrb	r1, [r5, r1]
 8021fe2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8021fe6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021fea:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8021fee:	f1be 0f00 	cmp.w	lr, #0
 8021ff2:	d05c      	beq.n	80220ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8021ff4:	f892 c001 	ldrb.w	ip, [r2, #1]
 8021ff8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8021ffc:	950d      	str	r5, [sp, #52]	; 0x34
 8021ffe:	b150      	cbz	r0, 8022016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022000:	eb02 0c03 	add.w	ip, r2, r3
 8022004:	5cd3      	ldrb	r3, [r2, r3]
 8022006:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802200a:	930a      	str	r3, [sp, #40]	; 0x28
 802200c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022010:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022014:	930e      	str	r3, [sp, #56]	; 0x38
 8022016:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022018:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802201a:	fb1e f200 	smulbb	r2, lr, r0
 802201e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022022:	10d2      	asrs	r2, r2, #3
 8022024:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022028:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802202c:	ea4c 0c03 	orr.w	ip, ip, r3
 8022030:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8022034:	9311      	str	r3, [sp, #68]	; 0x44
 8022036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022038:	041b      	lsls	r3, r3, #16
 802203a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802203e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022042:	ea43 030b 	orr.w	r3, r3, fp
 8022046:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022048:	4353      	muls	r3, r2
 802204a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802204e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8022052:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022056:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802205a:	ea43 0b01 	orr.w	fp, r3, r1
 802205e:	f1c0 0110 	rsb	r1, r0, #16
 8022062:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022064:	eba1 0e0e 	sub.w	lr, r1, lr
 8022068:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802206c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022070:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8022074:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8022078:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802207c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022080:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022084:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022088:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802208c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022090:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022094:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022098:	ea43 0c0c 	orr.w	ip, r3, ip
 802209c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802209e:	f82a cb02 	strh.w	ip, [sl], #2
 80220a2:	441c      	add	r4, r3
 80220a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80220a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80220aa:	441e      	add	r6, r3
 80220ac:	e723      	b.n	8021ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80220ae:	2800      	cmp	r0, #0
 80220b0:	d0b1      	beq.n	8022016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80220b2:	5cd3      	ldrb	r3, [r2, r3]
 80220b4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80220b8:	930a      	str	r3, [sp, #40]	; 0x28
 80220ba:	e7ac      	b.n	8022016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80220bc:	b013      	add	sp, #76	; 0x4c
 80220be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080220c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80220c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80220c6:	880d      	ldrh	r5, [r1, #0]
 80220c8:	b087      	sub	sp, #28
 80220ca:	10ef      	asrs	r7, r5, #3
 80220cc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80220d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80220d4:	00ed      	lsls	r5, r5, #3
 80220d6:	9701      	str	r7, [sp, #4]
 80220d8:	b2ed      	uxtb	r5, r5
 80220da:	9502      	str	r5, [sp, #8]
 80220dc:	9d01      	ldr	r5, [sp, #4]
 80220de:	9103      	str	r1, [sp, #12]
 80220e0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80220e4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80220e8:	9902      	ldr	r1, [sp, #8]
 80220ea:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80220ee:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80220f2:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80220f6:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80220fa:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80220fe:	022d      	lsls	r5, r5, #8
 8022100:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8022104:	fb06 0709 	mla	r7, r6, r9, r0
 8022108:	430d      	orrs	r5, r1
 802210a:	2e00      	cmp	r6, #0
 802210c:	eb02 0c07 	add.w	ip, r2, r7
 8022110:	9505      	str	r5, [sp, #20]
 8022112:	f2c0 80b6 	blt.w	8022282 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8022116:	45b3      	cmp	fp, r6
 8022118:	f340 80b3 	ble.w	8022282 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802211c:	2800      	cmp	r0, #0
 802211e:	f2c0 80ae 	blt.w	802227e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8022122:	4581      	cmp	r9, r0
 8022124:	f340 80ab 	ble.w	802227e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8022128:	5dd7      	ldrb	r7, [r2, r7]
 802212a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802212e:	441f      	add	r7, r3
 8022130:	1c42      	adds	r2, r0, #1
 8022132:	f100 80a9 	bmi.w	8022288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8022136:	4591      	cmp	r9, r2
 8022138:	f340 80a6 	ble.w	8022288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802213c:	2c00      	cmp	r4, #0
 802213e:	f000 80a3 	beq.w	8022288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8022142:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8022146:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802214a:	441d      	add	r5, r3
 802214c:	3601      	adds	r6, #1
 802214e:	f100 809f 	bmi.w	8022290 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8022152:	45b3      	cmp	fp, r6
 8022154:	f340 809c 	ble.w	8022290 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8022158:	f1be 0f00 	cmp.w	lr, #0
 802215c:	f000 8098 	beq.w	8022290 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8022160:	2800      	cmp	r0, #0
 8022162:	f2c0 8093 	blt.w	802228c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8022166:	4581      	cmp	r9, r0
 8022168:	f340 8090 	ble.w	802228c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802216c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8022170:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022174:	441e      	add	r6, r3
 8022176:	3001      	adds	r0, #1
 8022178:	f100 808d 	bmi.w	8022296 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802217c:	4581      	cmp	r9, r0
 802217e:	f340 808a 	ble.w	8022296 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8022182:	2c00      	cmp	r4, #0
 8022184:	f000 8087 	beq.w	8022296 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8022188:	44e1      	add	r9, ip
 802218a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802218e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022192:	4413      	add	r3, r2
 8022194:	b2a4      	uxth	r4, r4
 8022196:	fa1f fe8e 	uxth.w	lr, lr
 802219a:	fb04 fb0e 	mul.w	fp, r4, lr
 802219e:	0124      	lsls	r4, r4, #4
 80221a0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80221a4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80221a8:	eba4 040b 	sub.w	r4, r4, fp
 80221ac:	fa1f f08e 	uxth.w	r0, lr
 80221b0:	b2a2      	uxth	r2, r4
 80221b2:	78ac      	ldrb	r4, [r5, #2]
 80221b4:	f897 c002 	ldrb.w	ip, [r7, #2]
 80221b8:	9901      	ldr	r1, [sp, #4]
 80221ba:	eba9 0900 	sub.w	r9, r9, r0
 80221be:	fa1f f989 	uxth.w	r9, r9
 80221c2:	4354      	muls	r4, r2
 80221c4:	fb09 440c 	mla	r4, r9, ip, r4
 80221c8:	f896 c002 	ldrb.w	ip, [r6, #2]
 80221cc:	fb00 440c 	mla	r4, r0, ip, r4
 80221d0:	f893 c002 	ldrb.w	ip, [r3, #2]
 80221d4:	fa1f fe88 	uxth.w	lr, r8
 80221d8:	ea6f 0808 	mvn.w	r8, r8
 80221dc:	fa5f f888 	uxtb.w	r8, r8
 80221e0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80221e4:	fb1a fa08 	smulbb	sl, sl, r8
 80221e8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80221ec:	fb0c ac0e 	mla	ip, ip, lr, sl
 80221f0:	f895 a001 	ldrb.w	sl, [r5, #1]
 80221f4:	787c      	ldrb	r4, [r7, #1]
 80221f6:	782d      	ldrb	r5, [r5, #0]
 80221f8:	783f      	ldrb	r7, [r7, #0]
 80221fa:	fb02 fa0a 	mul.w	sl, r2, sl
 80221fe:	fb09 aa04 	mla	sl, r9, r4, sl
 8022202:	7874      	ldrb	r4, [r6, #1]
 8022204:	436a      	muls	r2, r5
 8022206:	7835      	ldrb	r5, [r6, #0]
 8022208:	fb00 aa04 	mla	sl, r0, r4, sl
 802220c:	fb09 2207 	mla	r2, r9, r7, r2
 8022210:	785c      	ldrb	r4, [r3, #1]
 8022212:	781b      	ldrb	r3, [r3, #0]
 8022214:	fb00 2005 	mla	r0, r0, r5, r2
 8022218:	fb0b a404 	mla	r4, fp, r4, sl
 802221c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8022220:	9b02      	ldr	r3, [sp, #8]
 8022222:	fb11 fa08 	smulbb	sl, r1, r8
 8022226:	fa1f fc8c 	uxth.w	ip, ip
 802222a:	fb13 f808 	smulbb	r8, r3, r8
 802222e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8022232:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8022236:	fb04 a40e 	mla	r4, r4, lr, sl
 802223a:	f10c 0301 	add.w	r3, ip, #1
 802223e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8022242:	fa1f fe8e 	uxth.w	lr, lr
 8022246:	b2a4      	uxth	r4, r4
 8022248:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802224c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8022250:	f104 0a01 	add.w	sl, r4, #1
 8022254:	f10e 0c01 	add.w	ip, lr, #1
 8022258:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802225c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8022260:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8022264:	0964      	lsrs	r4, r4, #5
 8022266:	ea4c 0c03 	orr.w	ip, ip, r3
 802226a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802226e:	9b03      	ldr	r3, [sp, #12]
 8022270:	ea4c 0c04 	orr.w	ip, ip, r4
 8022274:	f8a3 c000 	strh.w	ip, [r3]
 8022278:	b007      	add	sp, #28
 802227a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802227e:	af05      	add	r7, sp, #20
 8022280:	e756      	b.n	8022130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8022282:	ad05      	add	r5, sp, #20
 8022284:	462f      	mov	r7, r5
 8022286:	e761      	b.n	802214c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8022288:	ad05      	add	r5, sp, #20
 802228a:	e75f      	b.n	802214c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802228c:	ae05      	add	r6, sp, #20
 802228e:	e772      	b.n	8022176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8022290:	ab05      	add	r3, sp, #20
 8022292:	461e      	mov	r6, r3
 8022294:	e77e      	b.n	8022194 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8022296:	ab05      	add	r3, sp, #20
 8022298:	e77c      	b.n	8022194 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802229a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802229a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802229e:	b095      	sub	sp, #84	; 0x54
 80222a0:	9212      	str	r2, [sp, #72]	; 0x48
 80222a2:	9309      	str	r3, [sp, #36]	; 0x24
 80222a4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80222a6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80222aa:	930f      	str	r3, [sp, #60]	; 0x3c
 80222ac:	910e      	str	r1, [sp, #56]	; 0x38
 80222ae:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80222b2:	9013      	str	r0, [sp, #76]	; 0x4c
 80222b4:	6850      	ldr	r0, [r2, #4]
 80222b6:	6812      	ldr	r2, [r2, #0]
 80222b8:	fb00 1303 	mla	r3, r0, r3, r1
 80222bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80222c0:	930a      	str	r3, [sp, #40]	; 0x28
 80222c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80222c4:	681b      	ldr	r3, [r3, #0]
 80222c6:	930d      	str	r3, [sp, #52]	; 0x34
 80222c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80222ca:	685c      	ldr	r4, [r3, #4]
 80222cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222ce:	43db      	mvns	r3, r3
 80222d0:	b2db      	uxtb	r3, r3
 80222d2:	3404      	adds	r4, #4
 80222d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80222d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80222d8:	2b00      	cmp	r3, #0
 80222da:	dc03      	bgt.n	80222e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80222dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80222de:	2b00      	cmp	r3, #0
 80222e0:	f340 8255 	ble.w	802278e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80222e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80222e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80222ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80222ee:	1e48      	subs	r0, r1, #1
 80222f0:	1e55      	subs	r5, r2, #1
 80222f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80222f4:	2b00      	cmp	r3, #0
 80222f6:	f340 80f9 	ble.w	80224ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80222fa:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80222fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80222fe:	1436      	asrs	r6, r6, #16
 8022300:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022304:	d406      	bmi.n	8022314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022306:	4286      	cmp	r6, r0
 8022308:	da04      	bge.n	8022314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802230a:	2b00      	cmp	r3, #0
 802230c:	db02      	blt.n	8022314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802230e:	42ab      	cmp	r3, r5
 8022310:	f2c0 80ed 	blt.w	80224ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8022314:	3601      	adds	r6, #1
 8022316:	f100 80da 	bmi.w	80224ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802231a:	42b1      	cmp	r1, r6
 802231c:	f2c0 80d7 	blt.w	80224ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8022320:	3301      	adds	r3, #1
 8022322:	f100 80d4 	bmi.w	80224ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8022326:	429a      	cmp	r2, r3
 8022328:	f2c0 80d1 	blt.w	80224ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802232c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802232e:	9311      	str	r3, [sp, #68]	; 0x44
 8022330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022332:	930c      	str	r3, [sp, #48]	; 0x30
 8022334:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022336:	2b00      	cmp	r3, #0
 8022338:	f340 80fa 	ble.w	8022530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802233c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802233e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022340:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8022342:	68c6      	ldr	r6, [r0, #12]
 8022344:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022346:	141d      	asrs	r5, r3, #16
 8022348:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802234c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802234e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8022350:	1400      	asrs	r0, r0, #16
 8022352:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8022356:	6892      	ldr	r2, [r2, #8]
 8022358:	f100 813e 	bmi.w	80225d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802235c:	1e57      	subs	r7, r2, #1
 802235e:	42b8      	cmp	r0, r7
 8022360:	f280 813a 	bge.w	80225d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8022364:	2d00      	cmp	r5, #0
 8022366:	f2c0 8137 	blt.w	80225d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802236a:	1e77      	subs	r7, r6, #1
 802236c:	42bd      	cmp	r5, r7
 802236e:	f280 8133 	bge.w	80225d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8022372:	b212      	sxth	r2, r2
 8022374:	fb05 0002 	mla	r0, r5, r2, r0
 8022378:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802237a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802237e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8022382:	182e      	adds	r6, r5, r0
 8022384:	eb04 050a 	add.w	r5, r4, sl
 8022388:	2b00      	cmp	r3, #0
 802238a:	f000 8117 	beq.w	80225bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802238e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8022392:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8022396:	44a4      	add	ip, r4
 8022398:	2900      	cmp	r1, #0
 802239a:	f000 8117 	beq.w	80225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802239e:	18b0      	adds	r0, r6, r2
 80223a0:	5cb2      	ldrb	r2, [r6, r2]
 80223a2:	7840      	ldrb	r0, [r0, #1]
 80223a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80223a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80223ac:	4422      	add	r2, r4
 80223ae:	4420      	add	r0, r4
 80223b0:	b29b      	uxth	r3, r3
 80223b2:	b289      	uxth	r1, r1
 80223b4:	fb03 f901 	mul.w	r9, r3, r1
 80223b8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80223bc:	011b      	lsls	r3, r3, #4
 80223be:	b289      	uxth	r1, r1
 80223c0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80223c4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80223c8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80223ca:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80223ce:	f8b6 e000 	ldrh.w	lr, [r6]
 80223d2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80223d6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80223da:	eba3 0309 	sub.w	r3, r3, r9
 80223de:	b29b      	uxth	r3, r3
 80223e0:	eba8 0801 	sub.w	r8, r8, r1
 80223e4:	fa1f f888 	uxth.w	r8, r8
 80223e8:	435f      	muls	r7, r3
 80223ea:	fb08 770b 	mla	r7, r8, fp, r7
 80223ee:	f892 b002 	ldrb.w	fp, [r2, #2]
 80223f2:	9310      	str	r3, [sp, #64]	; 0x40
 80223f4:	fb01 770b 	mla	r7, r1, fp, r7
 80223f8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80223fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80223fe:	fb09 770b 	mla	r7, r9, fp, r7
 8022402:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8022406:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802240a:	fb1b fb03 	smulbb	fp, fp, r3
 802240e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022412:	fb07 b706 	mla	r7, r7, r6, fp
 8022416:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022418:	f895 b001 	ldrb.w	fp, [r5, #1]
 802241c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8022420:	f89c c000 	ldrb.w	ip, [ip]
 8022424:	435d      	muls	r5, r3
 8022426:	fb08 550b 	mla	r5, r8, fp, r5
 802242a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802242e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022430:	fb01 550b 	mla	r5, r1, fp, r5
 8022434:	f890 b001 	ldrb.w	fp, [r0, #1]
 8022438:	fb09 550b 	mla	r5, r9, fp, r5
 802243c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8022440:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8022444:	fb1b fb03 	smulbb	fp, fp, r3
 8022448:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802244a:	fb03 f30c 	mul.w	r3, r3, ip
 802244e:	f892 c000 	ldrb.w	ip, [r2]
 8022452:	fb08 330a 	mla	r3, r8, sl, r3
 8022456:	fb01 330c 	mla	r3, r1, ip, r3
 802245a:	f890 c000 	ldrb.w	ip, [r0]
 802245e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022462:	fb09 3c0c 	mla	ip, r9, ip, r3
 8022466:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022468:	fa5f fe8e 	uxtb.w	lr, lr
 802246c:	b2bf      	uxth	r7, r7
 802246e:	fb1e fe03 	smulbb	lr, lr, r3
 8022472:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022476:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802247a:	fb05 b506 	mla	r5, r5, r6, fp
 802247e:	1c7b      	adds	r3, r7, #1
 8022480:	fb0c e606 	mla	r6, ip, r6, lr
 8022484:	b2ad      	uxth	r5, r5
 8022486:	b2b6      	uxth	r6, r6
 8022488:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802248c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8022490:	f105 0b01 	add.w	fp, r5, #1
 8022494:	1c77      	adds	r7, r6, #1
 8022496:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802249a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802249e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80224a2:	096d      	lsrs	r5, r5, #5
 80224a4:	431f      	orrs	r7, r3
 80224a6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80224aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80224ac:	433d      	orrs	r5, r7
 80224ae:	801d      	strh	r5, [r3, #0]
 80224b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80224b2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80224b4:	3302      	adds	r3, #2
 80224b6:	930c      	str	r3, [sp, #48]	; 0x30
 80224b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80224ba:	4413      	add	r3, r2
 80224bc:	931f      	str	r3, [sp, #124]	; 0x7c
 80224be:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80224c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80224c2:	4413      	add	r3, r2
 80224c4:	9320      	str	r3, [sp, #128]	; 0x80
 80224c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80224c8:	3b01      	subs	r3, #1
 80224ca:	9311      	str	r3, [sp, #68]	; 0x44
 80224cc:	e732      	b.n	8022334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80224ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80224d0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80224d2:	4433      	add	r3, r6
 80224d4:	931f      	str	r3, [sp, #124]	; 0x7c
 80224d6:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80224d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80224da:	4433      	add	r3, r6
 80224dc:	9320      	str	r3, [sp, #128]	; 0x80
 80224de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224e0:	3b01      	subs	r3, #1
 80224e2:	9309      	str	r3, [sp, #36]	; 0x24
 80224e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80224e6:	3302      	adds	r3, #2
 80224e8:	930a      	str	r3, [sp, #40]	; 0x28
 80224ea:	e702      	b.n	80222f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80224ec:	d027      	beq.n	802253e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80224ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224f0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80224f2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80224f4:	3b01      	subs	r3, #1
 80224f6:	fb00 5003 	mla	r0, r0, r3, r5
 80224fa:	1400      	asrs	r0, r0, #16
 80224fc:	f53f af16 	bmi.w	802232c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022500:	3901      	subs	r1, #1
 8022502:	4288      	cmp	r0, r1
 8022504:	f6bf af12 	bge.w	802232c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022508:	9922      	ldr	r1, [sp, #136]	; 0x88
 802250a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802250c:	fb01 0303 	mla	r3, r1, r3, r0
 8022510:	141b      	asrs	r3, r3, #16
 8022512:	f53f af0b 	bmi.w	802232c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022516:	3a01      	subs	r2, #1
 8022518:	4293      	cmp	r3, r2
 802251a:	f6bf af07 	bge.w	802232c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802251e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022520:	9311      	str	r3, [sp, #68]	; 0x44
 8022522:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8022526:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022528:	930c      	str	r3, [sp, #48]	; 0x30
 802252a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802252c:	2b00      	cmp	r3, #0
 802252e:	dc70      	bgt.n	8022612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8022530:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022532:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022534:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022538:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802253c:	930a      	str	r3, [sp, #40]	; 0x28
 802253e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022540:	2b00      	cmp	r3, #0
 8022542:	f340 8124 	ble.w	802278e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8022546:	ee30 0a04 	vadd.f32	s0, s0, s8
 802254a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802254e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022552:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022554:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022558:	ee31 1a05 	vadd.f32	s2, s2, s10
 802255c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022560:	eef0 6a62 	vmov.f32	s13, s5
 8022564:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022568:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802256c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022570:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8022574:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022578:	eef0 6a43 	vmov.f32	s13, s6
 802257c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022580:	ee12 2a90 	vmov	r2, s5
 8022584:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022588:	fb92 f3f3 	sdiv	r3, r2, r3
 802258c:	ee13 2a10 	vmov	r2, s6
 8022590:	9321      	str	r3, [sp, #132]	; 0x84
 8022592:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022594:	fb92 f3f3 	sdiv	r3, r2, r3
 8022598:	9322      	str	r3, [sp, #136]	; 0x88
 802259a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802259c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802259e:	3b01      	subs	r3, #1
 80225a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225a4:	930e      	str	r3, [sp, #56]	; 0x38
 80225a6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80225a8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80225ac:	bf08      	it	eq
 80225ae:	4613      	moveq	r3, r2
 80225b0:	9309      	str	r3, [sp, #36]	; 0x24
 80225b2:	eeb0 3a67 	vmov.f32	s6, s15
 80225b6:	eef0 2a47 	vmov.f32	s5, s14
 80225ba:	e68c      	b.n	80222d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80225bc:	b149      	cbz	r1, 80225d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80225be:	5cb2      	ldrb	r2, [r6, r2]
 80225c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80225c4:	4422      	add	r2, r4
 80225c6:	4628      	mov	r0, r5
 80225c8:	46ac      	mov	ip, r5
 80225ca:	e6f1      	b.n	80223b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80225cc:	4628      	mov	r0, r5
 80225ce:	462a      	mov	r2, r5
 80225d0:	e6ee      	b.n	80223b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80225d2:	4628      	mov	r0, r5
 80225d4:	462a      	mov	r2, r5
 80225d6:	e7f7      	b.n	80225c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80225d8:	1c47      	adds	r7, r0, #1
 80225da:	f53f af69 	bmi.w	80224b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80225de:	42ba      	cmp	r2, r7
 80225e0:	f6ff af66 	blt.w	80224b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80225e4:	1c6f      	adds	r7, r5, #1
 80225e6:	f53f af63 	bmi.w	80224b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80225ea:	42be      	cmp	r6, r7
 80225ec:	f6ff af60 	blt.w	80224b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80225f0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80225f2:	9002      	str	r0, [sp, #8]
 80225f4:	b236      	sxth	r6, r6
 80225f6:	b212      	sxth	r2, r2
 80225f8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80225fc:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8022600:	9200      	str	r2, [sp, #0]
 8022602:	9601      	str	r6, [sp, #4]
 8022604:	4623      	mov	r3, r4
 8022606:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802260a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802260c:	f7ff fd59 	bl	80220c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8022610:	e74e      	b.n	80224b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022612:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8022614:	9820      	ldr	r0, [sp, #128]	; 0x80
 8022616:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8022618:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802261a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802261e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8022620:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8022624:	142d      	asrs	r5, r5, #16
 8022626:	1400      	asrs	r0, r0, #16
 8022628:	fb02 5000 	mla	r0, r2, r0, r5
 802262c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802262e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8022632:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8022636:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802263a:	182e      	adds	r6, r5, r0
 802263c:	eb04 0509 	add.w	r5, r4, r9
 8022640:	2b00      	cmp	r3, #0
 8022642:	f000 8096 	beq.w	8022772 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8022646:	7877      	ldrb	r7, [r6, #1]
 8022648:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802264c:	4427      	add	r7, r4
 802264e:	2900      	cmp	r1, #0
 8022650:	f000 8097 	beq.w	8022782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8022654:	18b0      	adds	r0, r6, r2
 8022656:	5cb2      	ldrb	r2, [r6, r2]
 8022658:	7840      	ldrb	r0, [r0, #1]
 802265a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802265e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022662:	4422      	add	r2, r4
 8022664:	4420      	add	r0, r4
 8022666:	b29b      	uxth	r3, r3
 8022668:	b289      	uxth	r1, r1
 802266a:	fb03 f801 	mul.w	r8, r3, r1
 802266e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8022670:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022674:	f8b6 c000 	ldrh.w	ip, [r6]
 8022678:	78be      	ldrb	r6, [r7, #2]
 802267a:	f814 9009 	ldrb.w	r9, [r4, r9]
 802267e:	011b      	lsls	r3, r3, #4
 8022680:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8022684:	b289      	uxth	r1, r1
 8022686:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802268a:	eba3 0308 	sub.w	r3, r3, r8
 802268e:	b29b      	uxth	r3, r3
 8022690:	ebae 0e01 	sub.w	lr, lr, r1
 8022694:	fa1f fe8e 	uxth.w	lr, lr
 8022698:	435e      	muls	r6, r3
 802269a:	fb0e 660b 	mla	r6, lr, fp, r6
 802269e:	f892 b002 	ldrb.w	fp, [r2, #2]
 80226a2:	9310      	str	r3, [sp, #64]	; 0x40
 80226a4:	fb01 660b 	mla	r6, r1, fp, r6
 80226a8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80226ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80226ae:	fb08 660b 	mla	r6, r8, fp, r6
 80226b2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80226b6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80226ba:	fb1b fb03 	smulbb	fp, fp, r3
 80226be:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80226c2:	fb06 b60a 	mla	r6, r6, sl, fp
 80226c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80226c8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80226cc:	787d      	ldrb	r5, [r7, #1]
 80226ce:	783f      	ldrb	r7, [r7, #0]
 80226d0:	435d      	muls	r5, r3
 80226d2:	fb0e 550b 	mla	r5, lr, fp, r5
 80226d6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80226da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80226dc:	fb01 550b 	mla	r5, r1, fp, r5
 80226e0:	f890 b001 	ldrb.w	fp, [r0, #1]
 80226e4:	fb08 550b 	mla	r5, r8, fp, r5
 80226e8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80226ec:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80226f0:	fb1b fb03 	smulbb	fp, fp, r3
 80226f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80226f6:	437b      	muls	r3, r7
 80226f8:	7817      	ldrb	r7, [r2, #0]
 80226fa:	fb0e 3309 	mla	r3, lr, r9, r3
 80226fe:	fb01 3307 	mla	r3, r1, r7, r3
 8022702:	7807      	ldrb	r7, [r0, #0]
 8022704:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022708:	fb08 3707 	mla	r7, r8, r7, r3
 802270c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802270e:	fa5f fc8c 	uxtb.w	ip, ip
 8022712:	fb1c fc03 	smulbb	ip, ip, r3
 8022716:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802271a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802271e:	fb05 b50a 	mla	r5, r5, sl, fp
 8022722:	fb07 c70a 	mla	r7, r7, sl, ip
 8022726:	b2b6      	uxth	r6, r6
 8022728:	b2ad      	uxth	r5, r5
 802272a:	b2bf      	uxth	r7, r7
 802272c:	1c73      	adds	r3, r6, #1
 802272e:	1c7a      	adds	r2, r7, #1
 8022730:	f105 0b01 	add.w	fp, r5, #1
 8022734:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022738:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802273c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8022740:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022744:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8022748:	096d      	lsrs	r5, r5, #5
 802274a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802274c:	4316      	orrs	r6, r2
 802274e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022752:	432e      	orrs	r6, r5
 8022754:	f823 6b02 	strh.w	r6, [r3], #2
 8022758:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802275a:	930c      	str	r3, [sp, #48]	; 0x30
 802275c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802275e:	4413      	add	r3, r2
 8022760:	931f      	str	r3, [sp, #124]	; 0x7c
 8022762:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022764:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022766:	4413      	add	r3, r2
 8022768:	9320      	str	r3, [sp, #128]	; 0x80
 802276a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802276c:	3b01      	subs	r3, #1
 802276e:	9311      	str	r3, [sp, #68]	; 0x44
 8022770:	e6db      	b.n	802252a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8022772:	b149      	cbz	r1, 8022788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022774:	5cb2      	ldrb	r2, [r6, r2]
 8022776:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802277a:	4422      	add	r2, r4
 802277c:	4628      	mov	r0, r5
 802277e:	462f      	mov	r7, r5
 8022780:	e771      	b.n	8022666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8022782:	4628      	mov	r0, r5
 8022784:	462a      	mov	r2, r5
 8022786:	e76e      	b.n	8022666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8022788:	4628      	mov	r0, r5
 802278a:	462a      	mov	r2, r5
 802278c:	e7f7      	b.n	802277e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802278e:	b015      	add	sp, #84	; 0x54
 8022790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8022794:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022798:	880f      	ldrh	r7, [r1, #0]
 802279a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802279e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80227a2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80227a6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80227aa:	023c      	lsls	r4, r7, #8
 80227ac:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80227b0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80227b4:	017c      	lsls	r4, r7, #5
 80227b6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80227ba:	00ff      	lsls	r7, r7, #3
 80227bc:	ea4b 0404 	orr.w	r4, fp, r4
 80227c0:	b2ff      	uxtb	r7, r7
 80227c2:	fb05 ca0e 	mla	sl, r5, lr, ip
 80227c6:	4327      	orrs	r7, r4
 80227c8:	2d00      	cmp	r5, #0
 80227ca:	eb02 080a 	add.w	r8, r2, sl
 80227ce:	9701      	str	r7, [sp, #4]
 80227d0:	db7e      	blt.n	80228d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80227d2:	45a9      	cmp	r9, r5
 80227d4:	dd7c      	ble.n	80228d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80227d6:	f1bc 0f00 	cmp.w	ip, #0
 80227da:	db77      	blt.n	80228cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80227dc:	45e6      	cmp	lr, ip
 80227de:	dd75      	ble.n	80228cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80227e0:	f812 700a 	ldrb.w	r7, [r2, sl]
 80227e4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80227e8:	441f      	add	r7, r3
 80227ea:	f11c 0201 	adds.w	r2, ip, #1
 80227ee:	d472      	bmi.n	80228d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80227f0:	4596      	cmp	lr, r2
 80227f2:	dd70      	ble.n	80228d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80227f4:	2800      	cmp	r0, #0
 80227f6:	d06e      	beq.n	80228d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80227f8:	f898 4001 	ldrb.w	r4, [r8, #1]
 80227fc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8022800:	441c      	add	r4, r3
 8022802:	3501      	adds	r5, #1
 8022804:	d46b      	bmi.n	80228de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8022806:	45a9      	cmp	r9, r5
 8022808:	dd69      	ble.n	80228de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802280a:	2e00      	cmp	r6, #0
 802280c:	d067      	beq.n	80228de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802280e:	f1bc 0f00 	cmp.w	ip, #0
 8022812:	db62      	blt.n	80228da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8022814:	45e6      	cmp	lr, ip
 8022816:	dd60      	ble.n	80228da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8022818:	f818 500e 	ldrb.w	r5, [r8, lr]
 802281c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8022820:	441d      	add	r5, r3
 8022822:	f11c 0201 	adds.w	r2, ip, #1
 8022826:	d45d      	bmi.n	80228e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8022828:	4596      	cmp	lr, r2
 802282a:	dd5b      	ble.n	80228e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802282c:	2800      	cmp	r0, #0
 802282e:	d059      	beq.n	80228e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8022830:	44c6      	add	lr, r8
 8022832:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022836:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802283a:	4413      	add	r3, r2
 802283c:	b280      	uxth	r0, r0
 802283e:	b2b2      	uxth	r2, r6
 8022840:	fb00 f602 	mul.w	r6, r0, r2
 8022844:	0100      	lsls	r0, r0, #4
 8022846:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802284a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 802284e:	1b80      	subs	r0, r0, r6
 8022850:	fa1f fc82 	uxth.w	ip, r2
 8022854:	b282      	uxth	r2, r0
 8022856:	78a0      	ldrb	r0, [r4, #2]
 8022858:	f897 e002 	ldrb.w	lr, [r7, #2]
 802285c:	f897 9000 	ldrb.w	r9, [r7]
 8022860:	787f      	ldrb	r7, [r7, #1]
 8022862:	eba8 080c 	sub.w	r8, r8, ip
 8022866:	fa1f f888 	uxth.w	r8, r8
 802286a:	4350      	muls	r0, r2
 802286c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8022870:	78a8      	ldrb	r0, [r5, #2]
 8022872:	fb0c e000 	mla	r0, ip, r0, lr
 8022876:	f893 e002 	ldrb.w	lr, [r3, #2]
 802287a:	fb06 0e0e 	mla	lr, r6, lr, r0
 802287e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8022882:	f894 e000 	ldrb.w	lr, [r4]
 8022886:	fb02 fe0e 	mul.w	lr, r2, lr
 802288a:	fb08 e909 	mla	r9, r8, r9, lr
 802288e:	f895 e000 	ldrb.w	lr, [r5]
 8022892:	fb0c 990e 	mla	r9, ip, lr, r9
 8022896:	f893 e000 	ldrb.w	lr, [r3]
 802289a:	785b      	ldrb	r3, [r3, #1]
 802289c:	fb06 9e0e 	mla	lr, r6, lr, r9
 80228a0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80228a4:	ea4e 0e00 	orr.w	lr, lr, r0
 80228a8:	7860      	ldrb	r0, [r4, #1]
 80228aa:	4350      	muls	r0, r2
 80228ac:	786a      	ldrb	r2, [r5, #1]
 80228ae:	fb08 0007 	mla	r0, r8, r7, r0
 80228b2:	fb0c 0202 	mla	r2, ip, r2, r0
 80228b6:	fb06 2303 	mla	r3, r6, r3, r2
 80228ba:	095b      	lsrs	r3, r3, #5
 80228bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228c0:	ea4e 0303 	orr.w	r3, lr, r3
 80228c4:	800b      	strh	r3, [r1, #0]
 80228c6:	b003      	add	sp, #12
 80228c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80228cc:	af01      	add	r7, sp, #4
 80228ce:	e78c      	b.n	80227ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80228d0:	ac01      	add	r4, sp, #4
 80228d2:	4627      	mov	r7, r4
 80228d4:	e795      	b.n	8022802 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80228d6:	ac01      	add	r4, sp, #4
 80228d8:	e793      	b.n	8022802 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80228da:	ad01      	add	r5, sp, #4
 80228dc:	e7a1      	b.n	8022822 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80228de:	ab01      	add	r3, sp, #4
 80228e0:	461d      	mov	r5, r3
 80228e2:	e7ab      	b.n	802283c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80228e4:	ab01      	add	r3, sp, #4
 80228e6:	e7a9      	b.n	802283c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080228e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80228e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228ec:	b08f      	sub	sp, #60	; 0x3c
 80228ee:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80228f2:	920c      	str	r2, [sp, #48]	; 0x30
 80228f4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80228f6:	910a      	str	r1, [sp, #40]	; 0x28
 80228f8:	9306      	str	r3, [sp, #24]
 80228fa:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80228fe:	900d      	str	r0, [sp, #52]	; 0x34
 8022900:	6850      	ldr	r0, [r2, #4]
 8022902:	6812      	ldr	r2, [r2, #0]
 8022904:	fb00 1303 	mla	r3, r0, r3, r1
 8022908:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802290c:	9307      	str	r3, [sp, #28]
 802290e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022910:	681b      	ldr	r3, [r3, #0]
 8022912:	9308      	str	r3, [sp, #32]
 8022914:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022916:	685c      	ldr	r4, [r3, #4]
 8022918:	3404      	adds	r4, #4
 802291a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802291c:	2b00      	cmp	r3, #0
 802291e:	dc03      	bgt.n	8022928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8022920:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022922:	2b00      	cmp	r3, #0
 8022924:	f340 81d6 	ble.w	8022cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8022928:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802292a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802292e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022932:	1e48      	subs	r0, r1, #1
 8022934:	1e56      	subs	r6, r2, #1
 8022936:	9b06      	ldr	r3, [sp, #24]
 8022938:	2b00      	cmp	r3, #0
 802293a:	f340 80b7 	ble.w	8022aac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802293e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8022942:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022946:	d406      	bmi.n	8022956 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022948:	4287      	cmp	r7, r0
 802294a:	da04      	bge.n	8022956 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802294c:	2b00      	cmp	r3, #0
 802294e:	db02      	blt.n	8022956 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022950:	42b3      	cmp	r3, r6
 8022952:	f2c0 80ac 	blt.w	8022aae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022956:	3701      	adds	r7, #1
 8022958:	f100 809d 	bmi.w	8022a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802295c:	42b9      	cmp	r1, r7
 802295e:	f2c0 809a 	blt.w	8022a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022962:	3301      	adds	r3, #1
 8022964:	f100 8097 	bmi.w	8022a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022968:	429a      	cmp	r2, r3
 802296a:	f2c0 8094 	blt.w	8022a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802296e:	9b06      	ldr	r3, [sp, #24]
 8022970:	930b      	str	r3, [sp, #44]	; 0x2c
 8022972:	9b07      	ldr	r3, [sp, #28]
 8022974:	9309      	str	r3, [sp, #36]	; 0x24
 8022976:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022978:	2b00      	cmp	r3, #0
 802297a:	f340 80b5 	ble.w	8022ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802297e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8022980:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8022982:	68c7      	ldr	r7, [r0, #12]
 8022984:	6892      	ldr	r2, [r2, #8]
 8022986:	ea5f 402b 	movs.w	r0, fp, asr #16
 802298a:	ea4f 4625 	mov.w	r6, r5, asr #16
 802298e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022992:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022996:	f100 80fb 	bmi.w	8022b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802299a:	f102 3cff 	add.w	ip, r2, #4294967295
 802299e:	4560      	cmp	r0, ip
 80229a0:	f280 80f6 	bge.w	8022b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80229a4:	2e00      	cmp	r6, #0
 80229a6:	f2c0 80f3 	blt.w	8022b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80229aa:	f107 3cff 	add.w	ip, r7, #4294967295
 80229ae:	4566      	cmp	r6, ip
 80229b0:	f280 80ee 	bge.w	8022b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80229b4:	b212      	sxth	r2, r2
 80229b6:	fb06 0002 	mla	r0, r6, r2, r0
 80229ba:	9e08      	ldr	r6, [sp, #32]
 80229bc:	1837      	adds	r7, r6, r0
 80229be:	5c30      	ldrb	r0, [r6, r0]
 80229c0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80229c4:	eb04 0c08 	add.w	ip, r4, r8
 80229c8:	2b00      	cmp	r3, #0
 80229ca:	f000 80d3 	beq.w	8022b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80229ce:	787e      	ldrb	r6, [r7, #1]
 80229d0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80229d4:	4426      	add	r6, r4
 80229d6:	2900      	cmp	r1, #0
 80229d8:	f000 80d4 	beq.w	8022b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80229dc:	18b8      	adds	r0, r7, r2
 80229de:	5cba      	ldrb	r2, [r7, r2]
 80229e0:	7840      	ldrb	r0, [r0, #1]
 80229e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80229e6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80229ea:	4422      	add	r2, r4
 80229ec:	4420      	add	r0, r4
 80229ee:	b29b      	uxth	r3, r3
 80229f0:	b289      	uxth	r1, r1
 80229f2:	fb03 f901 	mul.w	r9, r3, r1
 80229f6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80229fa:	011b      	lsls	r3, r3, #4
 80229fc:	b289      	uxth	r1, r1
 80229fe:	78b7      	ldrb	r7, [r6, #2]
 8022a00:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022a04:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022a08:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022a0c:	eba3 0309 	sub.w	r3, r3, r9
 8022a10:	b29b      	uxth	r3, r3
 8022a12:	ebae 0e01 	sub.w	lr, lr, r1
 8022a16:	fa1f fe8e 	uxth.w	lr, lr
 8022a1a:	435f      	muls	r7, r3
 8022a1c:	fb0e 770a 	mla	r7, lr, sl, r7
 8022a20:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022a24:	fb01 770a 	mla	r7, r1, sl, r7
 8022a28:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022a2c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022a30:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022a34:	f896 8000 	ldrb.w	r8, [r6]
 8022a38:	7876      	ldrb	r6, [r6, #1]
 8022a3a:	fb03 f808 	mul.w	r8, r3, r8
 8022a3e:	fb0e 8807 	mla	r8, lr, r7, r8
 8022a42:	7817      	ldrb	r7, [r2, #0]
 8022a44:	fb01 8807 	mla	r8, r1, r7, r8
 8022a48:	7807      	ldrb	r7, [r0, #0]
 8022a4a:	fb09 8707 	mla	r7, r9, r7, r8
 8022a4e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022a52:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022a56:	ea47 070a 	orr.w	r7, r7, sl
 8022a5a:	4373      	muls	r3, r6
 8022a5c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8022a60:	fb0e 330c 	mla	r3, lr, ip, r3
 8022a64:	fb01 310a 	mla	r1, r1, sl, r3
 8022a68:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022a6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a6e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8022a72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022a76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022a7a:	ea47 070a 	orr.w	r7, r7, sl
 8022a7e:	801f      	strh	r7, [r3, #0]
 8022a80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a82:	3302      	adds	r3, #2
 8022a84:	9309      	str	r3, [sp, #36]	; 0x24
 8022a86:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022a88:	449b      	add	fp, r3
 8022a8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a8c:	441d      	add	r5, r3
 8022a8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022a90:	3b01      	subs	r3, #1
 8022a92:	930b      	str	r3, [sp, #44]	; 0x2c
 8022a94:	e76f      	b.n	8022976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022a96:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022a98:	449b      	add	fp, r3
 8022a9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a9c:	441d      	add	r5, r3
 8022a9e:	9b06      	ldr	r3, [sp, #24]
 8022aa0:	3b01      	subs	r3, #1
 8022aa2:	9306      	str	r3, [sp, #24]
 8022aa4:	9b07      	ldr	r3, [sp, #28]
 8022aa6:	3302      	adds	r3, #2
 8022aa8:	9307      	str	r3, [sp, #28]
 8022aaa:	e744      	b.n	8022936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8022aac:	d023      	beq.n	8022af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8022aae:	9b06      	ldr	r3, [sp, #24]
 8022ab0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022ab2:	3b01      	subs	r3, #1
 8022ab4:	fb00 b003 	mla	r0, r0, r3, fp
 8022ab8:	1400      	asrs	r0, r0, #16
 8022aba:	f53f af58 	bmi.w	802296e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022abe:	3901      	subs	r1, #1
 8022ac0:	4288      	cmp	r0, r1
 8022ac2:	f6bf af54 	bge.w	802296e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022ac6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022ac8:	fb01 5303 	mla	r3, r1, r3, r5
 8022acc:	141b      	asrs	r3, r3, #16
 8022ace:	f53f af4e 	bmi.w	802296e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022ad2:	3a01      	subs	r2, #1
 8022ad4:	4293      	cmp	r3, r2
 8022ad6:	f6bf af4a 	bge.w	802296e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022ada:	9b06      	ldr	r3, [sp, #24]
 8022adc:	9309      	str	r3, [sp, #36]	; 0x24
 8022ade:	9b07      	ldr	r3, [sp, #28]
 8022ae0:	930b      	str	r3, [sp, #44]	; 0x2c
 8022ae2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022ae4:	2b00      	cmp	r3, #0
 8022ae6:	dc70      	bgt.n	8022bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022ae8:	9b06      	ldr	r3, [sp, #24]
 8022aea:	9a07      	ldr	r2, [sp, #28]
 8022aec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022af0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022af4:	9307      	str	r3, [sp, #28]
 8022af6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022af8:	2b00      	cmp	r3, #0
 8022afa:	f340 80eb 	ble.w	8022cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8022afe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b02:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022b06:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b0a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022b0c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b10:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b14:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b18:	eef0 6a62 	vmov.f32	s13, s5
 8022b1c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b28:	ee16 ba90 	vmov	fp, s13
 8022b2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b30:	eef0 6a43 	vmov.f32	s13, s6
 8022b34:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b38:	ee12 2a90 	vmov	r2, s5
 8022b3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b40:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b44:	ee13 2a10 	vmov	r2, s6
 8022b48:	931b      	str	r3, [sp, #108]	; 0x6c
 8022b4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022b4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b50:	931c      	str	r3, [sp, #112]	; 0x70
 8022b52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b54:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022b56:	3b01      	subs	r3, #1
 8022b58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b5c:	930a      	str	r3, [sp, #40]	; 0x28
 8022b5e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022b60:	bf08      	it	eq
 8022b62:	4613      	moveq	r3, r2
 8022b64:	ee16 5a90 	vmov	r5, s13
 8022b68:	9306      	str	r3, [sp, #24]
 8022b6a:	eeb0 3a67 	vmov.f32	s6, s15
 8022b6e:	eef0 2a47 	vmov.f32	s5, s14
 8022b72:	e6d2      	b.n	802291a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8022b74:	b149      	cbz	r1, 8022b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022b76:	5cba      	ldrb	r2, [r7, r2]
 8022b78:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022b7c:	4422      	add	r2, r4
 8022b7e:	4660      	mov	r0, ip
 8022b80:	4666      	mov	r6, ip
 8022b82:	e734      	b.n	80229ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8022b84:	4660      	mov	r0, ip
 8022b86:	4662      	mov	r2, ip
 8022b88:	e731      	b.n	80229ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8022b8a:	4660      	mov	r0, ip
 8022b8c:	4662      	mov	r2, ip
 8022b8e:	e7f7      	b.n	8022b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8022b90:	f110 0c01 	adds.w	ip, r0, #1
 8022b94:	f53f af74 	bmi.w	8022a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022b98:	4562      	cmp	r2, ip
 8022b9a:	f6ff af71 	blt.w	8022a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022b9e:	f116 0c01 	adds.w	ip, r6, #1
 8022ba2:	f53f af6d 	bmi.w	8022a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022ba6:	4567      	cmp	r7, ip
 8022ba8:	f6ff af6a 	blt.w	8022a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022bac:	b23f      	sxth	r7, r7
 8022bae:	b212      	sxth	r2, r2
 8022bb0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8022bb4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8022bb8:	9200      	str	r2, [sp, #0]
 8022bba:	9701      	str	r7, [sp, #4]
 8022bbc:	4623      	mov	r3, r4
 8022bbe:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8022bc2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022bc4:	f7ff fde6 	bl	8022794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8022bc8:	e75a      	b.n	8022a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022bca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8022bcc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8022bd0:	ea4f 462b 	mov.w	r6, fp, asr #16
 8022bd4:	1428      	asrs	r0, r5, #16
 8022bd6:	fb02 6000 	mla	r0, r2, r0, r6
 8022bda:	9e08      	ldr	r6, [sp, #32]
 8022bdc:	f816 8000 	ldrb.w	r8, [r6, r0]
 8022be0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022be4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8022be8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022bec:	1837      	adds	r7, r6, r0
 8022bee:	eb04 0c08 	add.w	ip, r4, r8
 8022bf2:	2b00      	cmp	r3, #0
 8022bf4:	d060      	beq.n	8022cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8022bf6:	787e      	ldrb	r6, [r7, #1]
 8022bf8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022bfc:	4426      	add	r6, r4
 8022bfe:	2900      	cmp	r1, #0
 8022c00:	d062      	beq.n	8022cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8022c02:	18b8      	adds	r0, r7, r2
 8022c04:	5cba      	ldrb	r2, [r7, r2]
 8022c06:	7840      	ldrb	r0, [r0, #1]
 8022c08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022c0c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022c10:	4422      	add	r2, r4
 8022c12:	4420      	add	r0, r4
 8022c14:	b29b      	uxth	r3, r3
 8022c16:	b289      	uxth	r1, r1
 8022c18:	fb03 f901 	mul.w	r9, r3, r1
 8022c1c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022c20:	011b      	lsls	r3, r3, #4
 8022c22:	b289      	uxth	r1, r1
 8022c24:	78b7      	ldrb	r7, [r6, #2]
 8022c26:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022c2a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022c2e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022c32:	eba3 0309 	sub.w	r3, r3, r9
 8022c36:	b29b      	uxth	r3, r3
 8022c38:	ebae 0e01 	sub.w	lr, lr, r1
 8022c3c:	fa1f fe8e 	uxth.w	lr, lr
 8022c40:	435f      	muls	r7, r3
 8022c42:	fb0e 770a 	mla	r7, lr, sl, r7
 8022c46:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022c4a:	fb01 770a 	mla	r7, r1, sl, r7
 8022c4e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022c52:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022c56:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022c5a:	f896 8000 	ldrb.w	r8, [r6]
 8022c5e:	7876      	ldrb	r6, [r6, #1]
 8022c60:	fb03 f808 	mul.w	r8, r3, r8
 8022c64:	fb0e 8807 	mla	r8, lr, r7, r8
 8022c68:	7817      	ldrb	r7, [r2, #0]
 8022c6a:	fb01 8807 	mla	r8, r1, r7, r8
 8022c6e:	7807      	ldrb	r7, [r0, #0]
 8022c70:	fb09 8707 	mla	r7, r9, r7, r8
 8022c74:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022c78:	4373      	muls	r3, r6
 8022c7a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022c7e:	7856      	ldrb	r6, [r2, #1]
 8022c80:	ea47 070a 	orr.w	r7, r7, sl
 8022c84:	fb0e 330c 	mla	r3, lr, ip, r3
 8022c88:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022c8c:	fb01 3306 	mla	r3, r1, r6, r3
 8022c90:	fb09 3a0a 	mla	sl, r9, sl, r3
 8022c94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022c98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022c9a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022c9e:	ea47 070a 	orr.w	r7, r7, sl
 8022ca2:	f823 7b02 	strh.w	r7, [r3], #2
 8022ca6:	930b      	str	r3, [sp, #44]	; 0x2c
 8022ca8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022caa:	449b      	add	fp, r3
 8022cac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022cae:	441d      	add	r5, r3
 8022cb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022cb2:	3b01      	subs	r3, #1
 8022cb4:	9309      	str	r3, [sp, #36]	; 0x24
 8022cb6:	e714      	b.n	8022ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8022cb8:	b149      	cbz	r1, 8022cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022cba:	5cba      	ldrb	r2, [r7, r2]
 8022cbc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022cc0:	4422      	add	r2, r4
 8022cc2:	4660      	mov	r0, ip
 8022cc4:	4666      	mov	r6, ip
 8022cc6:	e7a5      	b.n	8022c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8022cc8:	4660      	mov	r0, ip
 8022cca:	4662      	mov	r2, ip
 8022ccc:	e7a2      	b.n	8022c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8022cce:	4660      	mov	r0, ip
 8022cd0:	4662      	mov	r2, ip
 8022cd2:	e7f7      	b.n	8022cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8022cd4:	b00f      	add	sp, #60	; 0x3c
 8022cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022cda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8022cda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022cde:	b085      	sub	sp, #20
 8022ce0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8022ce4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8022ce8:	9102      	str	r1, [sp, #8]
 8022cea:	2c00      	cmp	r4, #0
 8022cec:	fb04 710c 	mla	r1, r4, ip, r7
 8022cf0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8022cf4:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8022cf8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8022cfc:	eb02 0e01 	add.w	lr, r2, r1
 8022d00:	f2c0 8122 	blt.w	8022f48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8022d04:	45a0      	cmp	r8, r4
 8022d06:	f340 811f 	ble.w	8022f48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8022d0a:	2f00      	cmp	r7, #0
 8022d0c:	f2c0 811a 	blt.w	8022f44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8022d10:	45bc      	cmp	ip, r7
 8022d12:	f340 8117 	ble.w	8022f44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8022d16:	5c52      	ldrb	r2, [r2, r1]
 8022d18:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8022d1c:	1c7a      	adds	r2, r7, #1
 8022d1e:	f100 8116 	bmi.w	8022f4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8022d22:	4594      	cmp	ip, r2
 8022d24:	f340 8113 	ble.w	8022f4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8022d28:	2e00      	cmp	r6, #0
 8022d2a:	f000 8112 	beq.w	8022f52 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8022d2e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022d32:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022d36:	3401      	adds	r4, #1
 8022d38:	f100 810f 	bmi.w	8022f5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8022d3c:	45a0      	cmp	r8, r4
 8022d3e:	f340 810c 	ble.w	8022f5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8022d42:	2800      	cmp	r0, #0
 8022d44:	f000 810c 	beq.w	8022f60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8022d48:	2f00      	cmp	r7, #0
 8022d4a:	f2c0 8104 	blt.w	8022f56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8022d4e:	45bc      	cmp	ip, r7
 8022d50:	f340 8101 	ble.w	8022f56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8022d54:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8022d58:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8022d5c:	3701      	adds	r7, #1
 8022d5e:	f100 8102 	bmi.w	8022f66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022d62:	45bc      	cmp	ip, r7
 8022d64:	f340 80ff 	ble.w	8022f66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022d68:	2e00      	cmp	r6, #0
 8022d6a:	f000 80fe 	beq.w	8022f6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8022d6e:	44f4      	add	ip, lr
 8022d70:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8022d74:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022d78:	b2b6      	uxth	r6, r6
 8022d7a:	b280      	uxth	r0, r0
 8022d7c:	fb00 fe06 	mul.w	lr, r0, r6
 8022d80:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022d84:	0136      	lsls	r6, r6, #4
 8022d86:	eba6 070e 	sub.w	r7, r6, lr
 8022d8a:	b280      	uxth	r0, r0
 8022d8c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022d90:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022d94:	b2bf      	uxth	r7, r7
 8022d96:	1a1b      	subs	r3, r3, r0
 8022d98:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022d9c:	b29b      	uxth	r3, r3
 8022d9e:	fb0a f607 	mul.w	r6, sl, r7
 8022da2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022da6:	fb0b 6603 	mla	r6, fp, r3, r6
 8022daa:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022dae:	fb00 6609 	mla	r6, r0, r9, r6
 8022db2:	fb0e 6608 	mla	r6, lr, r8, r6
 8022db6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022dba:	9600      	str	r6, [sp, #0]
 8022dbc:	2e00      	cmp	r6, #0
 8022dbe:	f000 80be 	beq.w	8022f3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8022dc2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022dc6:	fb0b fc0c 	mul.w	ip, fp, ip
 8022dca:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8022dce:	fb0b f505 	mul.w	r5, fp, r5
 8022dd2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022dd6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022dda:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022dde:	44dc      	add	ip, fp
 8022de0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022de4:	9501      	str	r5, [sp, #4]
 8022de6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022dea:	9503      	str	r5, [sp, #12]
 8022dec:	9d01      	ldr	r5, [sp, #4]
 8022dee:	9e02      	ldr	r6, [sp, #8]
 8022df0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022df4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022df8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022dfc:	fb0a fc0c 	mul.w	ip, sl, ip
 8022e00:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022e04:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022e08:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022e0c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022e10:	4465      	add	r5, ip
 8022e12:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022e16:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022e1a:	fb09 fc0c 	mul.w	ip, r9, ip
 8022e1e:	fb09 f904 	mul.w	r9, r9, r4
 8022e22:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022e26:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022e2a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022e2e:	fb08 f404 	mul.w	r4, r8, r4
 8022e32:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022e36:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022e3a:	fb08 f802 	mul.w	r8, r8, r2
 8022e3e:	fb0a fa01 	mul.w	sl, sl, r1
 8022e42:	0a22      	lsrs	r2, r4, #8
 8022e44:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022e48:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022e4c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022e50:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022e54:	4414      	add	r4, r2
 8022e56:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022e5a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022e5e:	0a2d      	lsrs	r5, r5, #8
 8022e60:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022e64:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022e68:	9a03      	ldr	r2, [sp, #12]
 8022e6a:	8836      	ldrh	r6, [r6, #0]
 8022e6c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022e70:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022e74:	437d      	muls	r5, r7
 8022e76:	4461      	add	r1, ip
 8022e78:	0a24      	lsrs	r4, r4, #8
 8022e7a:	fb02 5503 	mla	r5, r2, r3, r5
 8022e7e:	0a09      	lsrs	r1, r1, #8
 8022e80:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022e84:	fb04 540e 	mla	r4, r4, lr, r5
 8022e88:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022e8c:	fb01 4100 	mla	r1, r1, r0, r4
 8022e90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022e94:	0a09      	lsrs	r1, r1, #8
 8022e96:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022e9a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022e9e:	fb07 f70a 	mul.w	r7, r7, sl
 8022ea2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022ea6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022eaa:	fb03 7101 	mla	r1, r3, r1, r7
 8022eae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022eb2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022eb6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022eba:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022ebe:	fb00 e101 	mla	r1, r0, r1, lr
 8022ec2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8022ec6:	9a00      	ldr	r2, [sp, #0]
 8022ec8:	b287      	uxth	r7, r0
 8022eca:	437a      	muls	r2, r7
 8022ecc:	0a09      	lsrs	r1, r1, #8
 8022ece:	1c53      	adds	r3, r2, #1
 8022ed0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022ed4:	4321      	orrs	r1, r4
 8022ed6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022eda:	1235      	asrs	r5, r6, #8
 8022edc:	0c0a      	lsrs	r2, r1, #16
 8022ede:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022ee2:	b2db      	uxtb	r3, r3
 8022ee4:	fb12 f207 	smulbb	r2, r2, r7
 8022ee8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022eec:	fb05 2503 	mla	r5, r5, r3, r2
 8022ef0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022ef4:	10f2      	asrs	r2, r6, #3
 8022ef6:	b2c8      	uxtb	r0, r1
 8022ef8:	00f6      	lsls	r6, r6, #3
 8022efa:	fb14 f407 	smulbb	r4, r4, r7
 8022efe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022f02:	b2f6      	uxtb	r6, r6
 8022f04:	fb10 f007 	smulbb	r0, r0, r7
 8022f08:	fb02 4203 	mla	r2, r2, r3, r4
 8022f0c:	b2ad      	uxth	r5, r5
 8022f0e:	fb06 0303 	mla	r3, r6, r3, r0
 8022f12:	b299      	uxth	r1, r3
 8022f14:	b294      	uxth	r4, r2
 8022f16:	1c6b      	adds	r3, r5, #1
 8022f18:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022f1c:	1c62      	adds	r2, r4, #1
 8022f1e:	1c4b      	adds	r3, r1, #1
 8022f20:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022f24:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022f28:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022f2c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022f30:	0952      	lsrs	r2, r2, #5
 8022f32:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022f36:	432b      	orrs	r3, r5
 8022f38:	4313      	orrs	r3, r2
 8022f3a:	9a02      	ldr	r2, [sp, #8]
 8022f3c:	8013      	strh	r3, [r2, #0]
 8022f3e:	b005      	add	sp, #20
 8022f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f44:	2500      	movs	r5, #0
 8022f46:	e6e9      	b.n	8022d1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8022f48:	2100      	movs	r1, #0
 8022f4a:	460d      	mov	r5, r1
 8022f4c:	e6f3      	b.n	8022d36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022f4e:	2100      	movs	r1, #0
 8022f50:	e6f1      	b.n	8022d36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022f52:	4631      	mov	r1, r6
 8022f54:	e6ef      	b.n	8022d36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022f56:	2400      	movs	r4, #0
 8022f58:	e700      	b.n	8022d5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8022f5a:	2200      	movs	r2, #0
 8022f5c:	4614      	mov	r4, r2
 8022f5e:	e70b      	b.n	8022d78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022f60:	4602      	mov	r2, r0
 8022f62:	4604      	mov	r4, r0
 8022f64:	e708      	b.n	8022d78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022f66:	2200      	movs	r2, #0
 8022f68:	e706      	b.n	8022d78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022f6a:	4632      	mov	r2, r6
 8022f6c:	e704      	b.n	8022d78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08022f6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f72:	b09f      	sub	sp, #124	; 0x7c
 8022f74:	921b      	str	r2, [sp, #108]	; 0x6c
 8022f76:	9309      	str	r3, [sp, #36]	; 0x24
 8022f78:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8022f7a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8022f7e:	931c      	str	r3, [sp, #112]	; 0x70
 8022f80:	9119      	str	r1, [sp, #100]	; 0x64
 8022f82:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8022f86:	901d      	str	r0, [sp, #116]	; 0x74
 8022f88:	6850      	ldr	r0, [r2, #4]
 8022f8a:	6812      	ldr	r2, [r2, #0]
 8022f8c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8022f8e:	fb00 1303 	mla	r3, r0, r3, r1
 8022f92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022f96:	930c      	str	r3, [sp, #48]	; 0x30
 8022f98:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022f9a:	681b      	ldr	r3, [r3, #0]
 8022f9c:	9312      	str	r3, [sp, #72]	; 0x48
 8022f9e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022fa0:	685e      	ldr	r6, [r3, #4]
 8022fa2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8022fa6:	930d      	str	r3, [sp, #52]	; 0x34
 8022fa8:	3604      	adds	r6, #4
 8022faa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022fac:	2b00      	cmp	r3, #0
 8022fae:	dc03      	bgt.n	8022fb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022fb0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022fb2:	2b00      	cmp	r3, #0
 8022fb4:	f340 8388 	ble.w	80236c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022fb8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022fba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022fbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022fc2:	1e48      	subs	r0, r1, #1
 8022fc4:	1e57      	subs	r7, r2, #1
 8022fc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022fc8:	2b00      	cmp	r3, #0
 8022fca:	f340 8195 	ble.w	80232f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022fce:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022fd0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022fd4:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022fd8:	d406      	bmi.n	8022fe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022fda:	4584      	cmp	ip, r0
 8022fdc:	da04      	bge.n	8022fe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022fde:	2b00      	cmp	r3, #0
 8022fe0:	db02      	blt.n	8022fe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022fe2:	42bb      	cmp	r3, r7
 8022fe4:	f2c0 8189 	blt.w	80232fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8022fe8:	f11c 0c01 	adds.w	ip, ip, #1
 8022fec:	f100 8177 	bmi.w	80232de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022ff0:	4561      	cmp	r1, ip
 8022ff2:	f2c0 8174 	blt.w	80232de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022ff6:	3301      	adds	r3, #1
 8022ff8:	f100 8171 	bmi.w	80232de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022ffc:	429a      	cmp	r2, r3
 8022ffe:	f2c0 816e 	blt.w	80232de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023002:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023004:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023006:	931a      	str	r3, [sp, #104]	; 0x68
 8023008:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802300a:	2b00      	cmp	r3, #0
 802300c:	f340 8193 	ble.w	8023336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8023010:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023012:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023016:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023018:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802301c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802301e:	141b      	asrs	r3, r3, #16
 8023020:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023024:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023028:	f100 81d6 	bmi.w	80233d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802302c:	f100 38ff 	add.w	r8, r0, #4294967295
 8023030:	4543      	cmp	r3, r8
 8023032:	f280 81d1 	bge.w	80233d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023036:	f1bc 0f00 	cmp.w	ip, #0
 802303a:	f2c0 81cd 	blt.w	80233d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802303e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023042:	45c4      	cmp	ip, r8
 8023044:	f280 81c8 	bge.w	80233d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023048:	b200      	sxth	r0, r0
 802304a:	fb0c 3300 	mla	r3, ip, r0, r3
 802304e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023050:	eb04 0803 	add.w	r8, r4, r3
 8023054:	5ce3      	ldrb	r3, [r4, r3]
 8023056:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802305a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802305e:	2a00      	cmp	r2, #0
 8023060:	f000 81af 	beq.w	80233c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023064:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023068:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802306c:	940e      	str	r4, [sp, #56]	; 0x38
 802306e:	0e24      	lsrs	r4, r4, #24
 8023070:	9415      	str	r4, [sp, #84]	; 0x54
 8023072:	b179      	cbz	r1, 8023094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023074:	eb08 0c00 	add.w	ip, r8, r0
 8023078:	f818 0000 	ldrb.w	r0, [r8, r0]
 802307c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023080:	900a      	str	r0, [sp, #40]	; 0x28
 8023082:	0e00      	lsrs	r0, r0, #24
 8023084:	9013      	str	r0, [sp, #76]	; 0x4c
 8023086:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802308a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802308e:	900f      	str	r0, [sp, #60]	; 0x3c
 8023090:	0e00      	lsrs	r0, r0, #24
 8023092:	9016      	str	r0, [sp, #88]	; 0x58
 8023094:	b292      	uxth	r2, r2
 8023096:	b289      	uxth	r1, r1
 8023098:	fb02 f901 	mul.w	r9, r2, r1
 802309c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80230a0:	0112      	lsls	r2, r2, #4
 80230a2:	eba2 0809 	sub.w	r8, r2, r9
 80230a6:	b289      	uxth	r1, r1
 80230a8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80230ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 80230ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80230b0:	fa1f f888 	uxth.w	r8, r8
 80230b4:	1a52      	subs	r2, r2, r1
 80230b6:	b292      	uxth	r2, r2
 80230b8:	fb08 f000 	mul.w	r0, r8, r0
 80230bc:	fb02 000e 	mla	r0, r2, lr, r0
 80230c0:	fb01 0004 	mla	r0, r1, r4, r0
 80230c4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80230c6:	fb09 0004 	mla	r0, r9, r4, r0
 80230ca:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80230ce:	2800      	cmp	r0, #0
 80230d0:	f000 80fa 	beq.w	80232c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80230d4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80230d8:	d01b      	beq.n	8023112 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80230da:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80230de:	fb0e fa0a 	mul.w	sl, lr, sl
 80230e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80230e6:	fb0e fe03 	mul.w	lr, lr, r3
 80230ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80230ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80230f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80230f6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80230fa:	4453      	add	r3, sl
 80230fc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023100:	0a1b      	lsrs	r3, r3, #8
 8023102:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023106:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802310a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802310e:	ea43 030c 	orr.w	r3, r3, ip
 8023112:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023114:	2cff      	cmp	r4, #255	; 0xff
 8023116:	d021      	beq.n	802315c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023118:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802311a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802311e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023120:	fb04 fb0b 	mul.w	fp, r4, fp
 8023124:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023126:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802312a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802312c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023130:	fb04 fa0a 	mul.w	sl, r4, sl
 8023134:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023138:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802313c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023140:	44de      	add	lr, fp
 8023142:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023146:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802314a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802314e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023152:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023156:	ea4e 040a 	orr.w	r4, lr, sl
 802315a:	940e      	str	r4, [sp, #56]	; 0x38
 802315c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802315e:	2cff      	cmp	r4, #255	; 0xff
 8023160:	d021      	beq.n	80231a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8023162:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023164:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023168:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802316a:	fb04 fb0b 	mul.w	fp, r4, fp
 802316e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023170:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023174:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023176:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802317a:	fb04 fa0a 	mul.w	sl, r4, sl
 802317e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023182:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023186:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802318a:	44de      	add	lr, fp
 802318c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023190:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023194:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023198:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802319c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231a0:	ea4e 040a 	orr.w	r4, lr, sl
 80231a4:	940a      	str	r4, [sp, #40]	; 0x28
 80231a6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80231a8:	2cff      	cmp	r4, #255	; 0xff
 80231aa:	d021      	beq.n	80231f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80231ac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80231ae:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80231b2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80231b4:	fb04 fb0b 	mul.w	fp, r4, fp
 80231b8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80231ba:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80231be:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80231c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80231c4:	fb04 fa0a 	mul.w	sl, r4, sl
 80231c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80231cc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80231d0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80231d4:	44de      	add	lr, fp
 80231d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80231da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80231de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80231e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231ea:	ea4e 040a 	orr.w	r4, lr, sl
 80231ee:	940f      	str	r4, [sp, #60]	; 0x3c
 80231f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80231f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80231f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80231f8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80231fc:	fb08 fc0c 	mul.w	ip, r8, ip
 8023200:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023204:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023208:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802320a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802320e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023212:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023214:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023218:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802321c:	fb08 f80e 	mul.w	r8, r8, lr
 8023220:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023224:	fb02 8303 	mla	r3, r2, r3, r8
 8023228:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802322a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802322c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023230:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023232:	fb01 330a 	mla	r3, r1, sl, r3
 8023236:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802323a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802323c:	fb09 3901 	mla	r9, r9, r1, r3
 8023240:	4342      	muls	r2, r0
 8023242:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023246:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802324a:	883b      	ldrh	r3, [r7, #0]
 802324c:	1c50      	adds	r0, r2, #1
 802324e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023252:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023256:	ea4c 0c09 	orr.w	ip, ip, r9
 802325a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802325e:	1219      	asrs	r1, r3, #8
 8023260:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023264:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023268:	b2c0      	uxtb	r0, r0
 802326a:	fb12 f204 	smulbb	r2, r2, r4
 802326e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023272:	fb01 2100 	mla	r1, r1, r0, r2
 8023276:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802327a:	10da      	asrs	r2, r3, #3
 802327c:	fa5f fc8c 	uxtb.w	ip, ip
 8023280:	00db      	lsls	r3, r3, #3
 8023282:	fb1c fc04 	smulbb	ip, ip, r4
 8023286:	b2db      	uxtb	r3, r3
 8023288:	b289      	uxth	r1, r1
 802328a:	fb03 c300 	mla	r3, r3, r0, ip
 802328e:	fa1f fc83 	uxth.w	ip, r3
 8023292:	1c4b      	adds	r3, r1, #1
 8023294:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023298:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802329c:	fb1e fe04 	smulbb	lr, lr, r4
 80232a0:	f10c 0301 	add.w	r3, ip, #1
 80232a4:	fb02 e200 	mla	r2, r2, r0, lr
 80232a8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80232ac:	b292      	uxth	r2, r2
 80232ae:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80232b2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80232b6:	430b      	orrs	r3, r1
 80232b8:	1c51      	adds	r1, r2, #1
 80232ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80232be:	0952      	lsrs	r2, r2, #5
 80232c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232c4:	4313      	orrs	r3, r2
 80232c6:	803b      	strh	r3, [r7, #0]
 80232c8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80232ca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80232cc:	441a      	add	r2, r3
 80232ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80232d0:	9229      	str	r2, [sp, #164]	; 0xa4
 80232d2:	441d      	add	r5, r3
 80232d4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80232d6:	3b01      	subs	r3, #1
 80232d8:	3702      	adds	r7, #2
 80232da:	931a      	str	r3, [sp, #104]	; 0x68
 80232dc:	e694      	b.n	8023008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80232de:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80232e0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80232e2:	441c      	add	r4, r3
 80232e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80232e6:	9429      	str	r4, [sp, #164]	; 0xa4
 80232e8:	441d      	add	r5, r3
 80232ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232ec:	3b01      	subs	r3, #1
 80232ee:	9309      	str	r3, [sp, #36]	; 0x24
 80232f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80232f2:	3302      	adds	r3, #2
 80232f4:	930c      	str	r3, [sp, #48]	; 0x30
 80232f6:	e666      	b.n	8022fc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80232f8:	d024      	beq.n	8023344 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80232fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232fc:	982b      	ldr	r0, [sp, #172]	; 0xac
 80232fe:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8023300:	3b01      	subs	r3, #1
 8023302:	fb00 4003 	mla	r0, r0, r3, r4
 8023306:	1400      	asrs	r0, r0, #16
 8023308:	f53f ae7b 	bmi.w	8023002 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802330c:	3901      	subs	r1, #1
 802330e:	4288      	cmp	r0, r1
 8023310:	f6bf ae77 	bge.w	8023002 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023314:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8023316:	fb01 5303 	mla	r3, r1, r3, r5
 802331a:	141b      	asrs	r3, r3, #16
 802331c:	f53f ae71 	bmi.w	8023002 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023320:	3a01      	subs	r2, #1
 8023322:	4293      	cmp	r3, r2
 8023324:	f6bf ae6d 	bge.w	8023002 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023328:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802332c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8023330:	f1bb 0f00 	cmp.w	fp, #0
 8023334:	dc70      	bgt.n	8023418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8023336:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023338:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802333c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802333e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023342:	930c      	str	r3, [sp, #48]	; 0x30
 8023344:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023346:	2b00      	cmp	r3, #0
 8023348:	f340 81be 	ble.w	80236c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802334c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023350:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023354:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023358:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802335a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802335e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023362:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023366:	eef0 6a62 	vmov.f32	s13, s5
 802336a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802336e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023372:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023376:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802337a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802337e:	eef0 6a43 	vmov.f32	s13, s6
 8023382:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023386:	ee12 2a90 	vmov	r2, s5
 802338a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802338e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023392:	ee13 2a10 	vmov	r2, s6
 8023396:	932b      	str	r3, [sp, #172]	; 0xac
 8023398:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802339a:	fb92 f3f3 	sdiv	r3, r2, r3
 802339e:	932c      	str	r3, [sp, #176]	; 0xb0
 80233a0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80233a2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80233a4:	3b01      	subs	r3, #1
 80233a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80233aa:	9319      	str	r3, [sp, #100]	; 0x64
 80233ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80233ae:	bf08      	it	eq
 80233b0:	4613      	moveq	r3, r2
 80233b2:	ee16 5a90 	vmov	r5, s13
 80233b6:	9309      	str	r3, [sp, #36]	; 0x24
 80233b8:	eeb0 3a67 	vmov.f32	s6, s15
 80233bc:	eef0 2a47 	vmov.f32	s5, s14
 80233c0:	e5f3      	b.n	8022faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80233c2:	2900      	cmp	r1, #0
 80233c4:	f43f ae66 	beq.w	8023094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80233c8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80233cc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80233d0:	900a      	str	r0, [sp, #40]	; 0x28
 80233d2:	0e00      	lsrs	r0, r0, #24
 80233d4:	9013      	str	r0, [sp, #76]	; 0x4c
 80233d6:	e65d      	b.n	8023094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80233d8:	f113 0801 	adds.w	r8, r3, #1
 80233dc:	f53f af74 	bmi.w	80232c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80233e0:	4540      	cmp	r0, r8
 80233e2:	f6ff af71 	blt.w	80232c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80233e6:	f11c 0801 	adds.w	r8, ip, #1
 80233ea:	f53f af6d 	bmi.w	80232c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80233ee:	45c6      	cmp	lr, r8
 80233f0:	f6ff af6a 	blt.w	80232c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80233f4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80233f6:	9302      	str	r3, [sp, #8]
 80233f8:	b200      	sxth	r0, r0
 80233fa:	fa0f f38e 	sxth.w	r3, lr
 80233fe:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8023402:	e9cd c203 	strd	ip, r2, [sp, #12]
 8023406:	9301      	str	r3, [sp, #4]
 8023408:	9000      	str	r0, [sp, #0]
 802340a:	4633      	mov	r3, r6
 802340c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802340e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8023410:	4639      	mov	r1, r7
 8023412:	f7ff fc62 	bl	8022cda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8023416:	e757      	b.n	80232c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023418:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802341a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802341c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023420:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023422:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023426:	1427      	asrs	r7, r4, #16
 8023428:	142b      	asrs	r3, r5, #16
 802342a:	fb01 7303 	mla	r3, r1, r3, r7
 802342e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023430:	18e7      	adds	r7, r4, r3
 8023432:	5ce3      	ldrb	r3, [r4, r3]
 8023434:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023438:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802343c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023440:	2a00      	cmp	r2, #0
 8023442:	f000 8137 	beq.w	80236b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023446:	f897 e001 	ldrb.w	lr, [r7, #1]
 802344a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802344e:	9410      	str	r4, [sp, #64]	; 0x40
 8023450:	0e24      	lsrs	r4, r4, #24
 8023452:	9417      	str	r4, [sp, #92]	; 0x5c
 8023454:	b170      	cbz	r0, 8023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023456:	eb07 0e01 	add.w	lr, r7, r1
 802345a:	5c79      	ldrb	r1, [r7, r1]
 802345c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023460:	910b      	str	r1, [sp, #44]	; 0x2c
 8023462:	0e09      	lsrs	r1, r1, #24
 8023464:	9114      	str	r1, [sp, #80]	; 0x50
 8023466:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802346a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802346e:	9111      	str	r1, [sp, #68]	; 0x44
 8023470:	0e09      	lsrs	r1, r1, #24
 8023472:	9118      	str	r1, [sp, #96]	; 0x60
 8023474:	b292      	uxth	r2, r2
 8023476:	b280      	uxth	r0, r0
 8023478:	fb02 f800 	mul.w	r8, r2, r0
 802347c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023480:	0112      	lsls	r2, r2, #4
 8023482:	eba2 0e08 	sub.w	lr, r2, r8
 8023486:	b280      	uxth	r0, r0
 8023488:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802348c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802348e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023490:	fa1f fe8e 	uxth.w	lr, lr
 8023494:	1a12      	subs	r2, r2, r0
 8023496:	b292      	uxth	r2, r2
 8023498:	fb0e f101 	mul.w	r1, lr, r1
 802349c:	fb02 110c 	mla	r1, r2, ip, r1
 80234a0:	fb00 1104 	mla	r1, r0, r4, r1
 80234a4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80234a6:	fb08 1104 	mla	r1, r8, r4, r1
 80234aa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80234ae:	2900      	cmp	r1, #0
 80234b0:	f000 80f5 	beq.w	802369e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80234b4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80234b8:	d019      	beq.n	80234ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80234ba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80234be:	fb0c fa0a 	mul.w	sl, ip, sl
 80234c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80234c6:	fb0c fc03 	mul.w	ip, ip, r3
 80234ca:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80234ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80234d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80234d6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80234da:	4453      	add	r3, sl
 80234dc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80234e0:	0a1b      	lsrs	r3, r3, #8
 80234e2:	0a3f      	lsrs	r7, r7, #8
 80234e4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80234e8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80234ec:	433b      	orrs	r3, r7
 80234ee:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80234f0:	2cff      	cmp	r4, #255	; 0xff
 80234f2:	d020      	beq.n	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80234f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80234f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80234fa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80234fc:	4367      	muls	r7, r4
 80234fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023500:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023504:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8023506:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802350a:	fb04 fa0a 	mul.w	sl, r4, sl
 802350e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023512:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023516:	44bc      	add	ip, r7
 8023518:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802351c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023520:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023524:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023528:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802352c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023530:	ea4c 040a 	orr.w	r4, ip, sl
 8023534:	9410      	str	r4, [sp, #64]	; 0x40
 8023536:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023538:	2cff      	cmp	r4, #255	; 0xff
 802353a:	d020      	beq.n	802357e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802353c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802353e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023542:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023544:	4367      	muls	r7, r4
 8023546:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023548:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802354c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802354e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023552:	fb04 fa0a 	mul.w	sl, r4, sl
 8023556:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802355a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802355e:	44bc      	add	ip, r7
 8023560:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023564:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023568:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802356c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023570:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023574:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023578:	ea4c 040a 	orr.w	r4, ip, sl
 802357c:	940b      	str	r4, [sp, #44]	; 0x2c
 802357e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8023580:	2cff      	cmp	r4, #255	; 0xff
 8023582:	d020      	beq.n	80235c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8023584:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023586:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802358a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802358c:	4367      	muls	r7, r4
 802358e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023590:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023594:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8023596:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802359a:	fb04 fa0a 	mul.w	sl, r4, sl
 802359e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80235a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80235a6:	44bc      	add	ip, r7
 80235a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80235ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80235b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80235bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235c0:	ea4c 040a 	orr.w	r4, ip, sl
 80235c4:	9411      	str	r4, [sp, #68]	; 0x44
 80235c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80235c8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80235cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80235ce:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80235d2:	fb0e f707 	mul.w	r7, lr, r7
 80235d6:	fb02 770c 	mla	r7, r2, ip, r7
 80235da:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80235de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80235e0:	fb00 770c 	mla	r7, r0, ip, r7
 80235e4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80235e8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80235ea:	fb08 770c 	mla	r7, r8, ip, r7
 80235ee:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80235f2:	fb0e fe0c 	mul.w	lr, lr, ip
 80235f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80235fa:	fb02 e303 	mla	r3, r2, r3, lr
 80235fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023600:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023602:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023606:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8023608:	fb00 330a 	mla	r3, r0, sl, r3
 802360c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023610:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023614:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023616:	f8b9 0000 	ldrh.w	r0, [r9]
 802361a:	434b      	muls	r3, r1
 802361c:	0a3f      	lsrs	r7, r7, #8
 802361e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023622:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023626:	1c59      	adds	r1, r3, #1
 8023628:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802362c:	ea47 070c 	orr.w	r7, r7, ip
 8023630:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023634:	1202      	asrs	r2, r0, #8
 8023636:	0c3b      	lsrs	r3, r7, #16
 8023638:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802363c:	b2c9      	uxtb	r1, r1
 802363e:	fb13 f304 	smulbb	r3, r3, r4
 8023642:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023646:	fb02 3201 	mla	r2, r2, r1, r3
 802364a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802364e:	10c3      	asrs	r3, r0, #3
 8023650:	b2ff      	uxtb	r7, r7
 8023652:	00c0      	lsls	r0, r0, #3
 8023654:	b292      	uxth	r2, r2
 8023656:	fb1c fc04 	smulbb	ip, ip, r4
 802365a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802365e:	b2c0      	uxtb	r0, r0
 8023660:	fb17 f704 	smulbb	r7, r7, r4
 8023664:	fb03 c301 	mla	r3, r3, r1, ip
 8023668:	fb00 7001 	mla	r0, r0, r1, r7
 802366c:	f102 0c01 	add.w	ip, r2, #1
 8023670:	b280      	uxth	r0, r0
 8023672:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8023676:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802367a:	1c42      	adds	r2, r0, #1
 802367c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023680:	b29b      	uxth	r3, r3
 8023682:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023686:	ea42 020c 	orr.w	r2, r2, ip
 802368a:	f103 0c01 	add.w	ip, r3, #1
 802368e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023692:	095b      	lsrs	r3, r3, #5
 8023694:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023698:	431a      	orrs	r2, r3
 802369a:	f8a9 2000 	strh.w	r2, [r9]
 802369e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80236a0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80236a2:	441a      	add	r2, r3
 80236a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80236a6:	9229      	str	r2, [sp, #164]	; 0xa4
 80236a8:	f109 0902 	add.w	r9, r9, #2
 80236ac:	441d      	add	r5, r3
 80236ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 80236b2:	e63d      	b.n	8023330 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80236b4:	2800      	cmp	r0, #0
 80236b6:	f43f aedd 	beq.w	8023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80236ba:	5c79      	ldrb	r1, [r7, r1]
 80236bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80236c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80236c2:	0e09      	lsrs	r1, r1, #24
 80236c4:	9114      	str	r1, [sp, #80]	; 0x50
 80236c6:	e6d5      	b.n	8023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80236c8:	b01f      	add	sp, #124	; 0x7c
 80236ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080236ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80236ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236d2:	b089      	sub	sp, #36	; 0x24
 80236d4:	9101      	str	r1, [sp, #4]
 80236d6:	9801      	ldr	r0, [sp, #4]
 80236d8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80236dc:	8800      	ldrh	r0, [r0, #0]
 80236de:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80236e2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80236e6:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80236ea:	1206      	asrs	r6, r0, #8
 80236ec:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80236f0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80236f4:	9602      	str	r6, [sp, #8]
 80236f6:	10c6      	asrs	r6, r0, #3
 80236f8:	00c0      	lsls	r0, r0, #3
 80236fa:	b2c0      	uxtb	r0, r0
 80236fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8023700:	9004      	str	r0, [sp, #16]
 8023702:	2f00      	cmp	r7, #0
 8023704:	fb07 100c 	mla	r0, r7, ip, r1
 8023708:	9603      	str	r6, [sp, #12]
 802370a:	eb02 0e00 	add.w	lr, r2, r0
 802370e:	f2c0 810a 	blt.w	8023926 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8023712:	45b8      	cmp	r8, r7
 8023714:	f340 8107 	ble.w	8023926 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8023718:	2900      	cmp	r1, #0
 802371a:	f2c0 8102 	blt.w	8023922 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802371e:	458c      	cmp	ip, r1
 8023720:	f340 80ff 	ble.w	8023922 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8023724:	5c12      	ldrb	r2, [r2, r0]
 8023726:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802372a:	1c4a      	adds	r2, r1, #1
 802372c:	f100 80fe 	bmi.w	802392c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8023730:	4594      	cmp	ip, r2
 8023732:	f340 80fb 	ble.w	802392c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8023736:	2d00      	cmp	r5, #0
 8023738:	f000 80fa 	beq.w	8023930 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802373c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023740:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8023744:	3701      	adds	r7, #1
 8023746:	f100 80f7 	bmi.w	8023938 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802374a:	45b8      	cmp	r8, r7
 802374c:	f340 80f4 	ble.w	8023938 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8023750:	2c00      	cmp	r4, #0
 8023752:	f000 80f4 	beq.w	802393e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8023756:	2900      	cmp	r1, #0
 8023758:	eb0e 020c 	add.w	r2, lr, ip
 802375c:	f2c0 80ea 	blt.w	8023934 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8023760:	458c      	cmp	ip, r1
 8023762:	f340 80e7 	ble.w	8023934 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8023766:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802376a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802376e:	3101      	adds	r1, #1
 8023770:	f100 80e8 	bmi.w	8023944 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8023774:	458c      	cmp	ip, r1
 8023776:	f340 80e5 	ble.w	8023944 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802377a:	2d00      	cmp	r5, #0
 802377c:	f000 80e4 	beq.w	8023948 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8023780:	7852      	ldrb	r2, [r2, #1]
 8023782:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023786:	0e0b      	lsrs	r3, r1, #24
 8023788:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802378c:	9300      	str	r3, [sp, #0]
 802378e:	b2a4      	uxth	r4, r4
 8023790:	b2ab      	uxth	r3, r5
 8023792:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8023796:	fb03 f904 	mul.w	r9, r3, r4
 802379a:	fb0a f505 	mul.w	r5, sl, r5
 802379e:	011b      	lsls	r3, r3, #4
 80237a0:	eba3 0e09 	sub.w	lr, r3, r9
 80237a4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80237a8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80237ac:	0a28      	lsrs	r0, r5, #8
 80237ae:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80237b2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80237b6:	4405      	add	r5, r0
 80237b8:	0a2d      	lsrs	r5, r5, #8
 80237ba:	fb0a f303 	mul.w	r3, sl, r3
 80237be:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80237c2:	9005      	str	r0, [sp, #20]
 80237c4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80237c8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80237cc:	0a1b      	lsrs	r3, r3, #8
 80237ce:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80237d2:	9306      	str	r3, [sp, #24]
 80237d4:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80237d8:	fb0b f303 	mul.w	r3, fp, r3
 80237dc:	0a1d      	lsrs	r5, r3, #8
 80237de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80237e2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80237e6:	fb0b f606 	mul.w	r6, fp, r6
 80237ea:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80237ee:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80237f2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80237f6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80237fa:	fb08 f707 	mul.w	r7, r8, r7
 80237fe:	441d      	add	r5, r3
 8023800:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8023804:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023808:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802380c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8023810:	fb08 fc0c 	mul.w	ip, r8, ip
 8023814:	0a1b      	lsrs	r3, r3, #8
 8023816:	9307      	str	r3, [sp, #28]
 8023818:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802381c:	0e0b      	lsrs	r3, r1, #24
 802381e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8023822:	435f      	muls	r7, r3
 8023824:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023828:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802382c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8023830:	4460      	add	r0, ip
 8023832:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023836:	b2a4      	uxth	r4, r4
 8023838:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802383c:	0a2d      	lsrs	r5, r5, #8
 802383e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023842:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023846:	fa1f fe8e 	uxth.w	lr, lr
 802384a:	4359      	muls	r1, r3
 802384c:	1b12      	subs	r2, r2, r4
 802384e:	9b05      	ldr	r3, [sp, #20]
 8023850:	44bc      	add	ip, r7
 8023852:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023856:	b292      	uxth	r2, r2
 8023858:	fb05 f50e 	mul.w	r5, r5, lr
 802385c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023860:	fb03 5502 	mla	r5, r3, r2, r5
 8023864:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023868:	9b06      	ldr	r3, [sp, #24]
 802386a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802386e:	0a36      	lsrs	r6, r6, #8
 8023870:	0a00      	lsrs	r0, r0, #8
 8023872:	fb0c 5509 	mla	r5, ip, r9, r5
 8023876:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802387a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802387e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023882:	fb00 5504 	mla	r5, r0, r4, r5
 8023886:	fb0e f606 	mul.w	r6, lr, r6
 802388a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802388e:	0a09      	lsrs	r1, r1, #8
 8023890:	9b07      	ldr	r3, [sp, #28]
 8023892:	fb02 6000 	mla	r0, r2, r0, r6
 8023896:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802389a:	fb09 0001 	mla	r0, r9, r1, r0
 802389e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80238a2:	fb0e fe0b 	mul.w	lr, lr, fp
 80238a6:	fb04 0003 	mla	r0, r4, r3, r0
 80238aa:	fb02 e20a 	mla	r2, r2, sl, lr
 80238ae:	9b00      	ldr	r3, [sp, #0]
 80238b0:	fb04 2408 	mla	r4, r4, r8, r2
 80238b4:	fb09 4903 	mla	r9, r9, r3, r4
 80238b8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80238bc:	9b02      	ldr	r3, [sp, #8]
 80238be:	9a04      	ldr	r2, [sp, #16]
 80238c0:	fa5f f989 	uxtb.w	r9, r9
 80238c4:	fb03 f109 	mul.w	r1, r3, r9
 80238c8:	9b03      	ldr	r3, [sp, #12]
 80238ca:	0a2d      	lsrs	r5, r5, #8
 80238cc:	0a00      	lsrs	r0, r0, #8
 80238ce:	fb03 f309 	mul.w	r3, r3, r9
 80238d2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80238d6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80238da:	4305      	orrs	r5, r0
 80238dc:	fb02 f909 	mul.w	r9, r2, r9
 80238e0:	1c58      	adds	r0, r3, #1
 80238e2:	1c4a      	adds	r2, r1, #1
 80238e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80238e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80238ec:	0a2b      	lsrs	r3, r5, #8
 80238ee:	0c2a      	lsrs	r2, r5, #16
 80238f0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80238f4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80238f8:	00db      	lsls	r3, r3, #3
 80238fa:	0212      	lsls	r2, r2, #8
 80238fc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023900:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023904:	4313      	orrs	r3, r2
 8023906:	f109 0201 	add.w	r2, r9, #1
 802390a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802390e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8023912:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8023916:	431d      	orrs	r5, r3
 8023918:	9b01      	ldr	r3, [sp, #4]
 802391a:	801d      	strh	r5, [r3, #0]
 802391c:	b009      	add	sp, #36	; 0x24
 802391e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023922:	2000      	movs	r0, #0
 8023924:	e701      	b.n	802372a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8023926:	2600      	movs	r6, #0
 8023928:	4630      	mov	r0, r6
 802392a:	e70b      	b.n	8023744 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802392c:	2600      	movs	r6, #0
 802392e:	e709      	b.n	8023744 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8023930:	462e      	mov	r6, r5
 8023932:	e707      	b.n	8023744 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8023934:	2700      	movs	r7, #0
 8023936:	e71a      	b.n	802376e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8023938:	2100      	movs	r1, #0
 802393a:	460f      	mov	r7, r1
 802393c:	e723      	b.n	8023786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802393e:	4621      	mov	r1, r4
 8023940:	4627      	mov	r7, r4
 8023942:	e720      	b.n	8023786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8023944:	2100      	movs	r1, #0
 8023946:	e71e      	b.n	8023786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8023948:	4629      	mov	r1, r5
 802394a:	e71c      	b.n	8023786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802394c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802394c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023950:	b09b      	sub	sp, #108	; 0x6c
 8023952:	9218      	str	r2, [sp, #96]	; 0x60
 8023954:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023956:	9116      	str	r1, [sp, #88]	; 0x58
 8023958:	9307      	str	r3, [sp, #28]
 802395a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802395e:	9019      	str	r0, [sp, #100]	; 0x64
 8023960:	6850      	ldr	r0, [r2, #4]
 8023962:	6812      	ldr	r2, [r2, #0]
 8023964:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8023966:	fb00 1303 	mla	r3, r0, r3, r1
 802396a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802396e:	930a      	str	r3, [sp, #40]	; 0x28
 8023970:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023972:	681b      	ldr	r3, [r3, #0]
 8023974:	930f      	str	r3, [sp, #60]	; 0x3c
 8023976:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023978:	685e      	ldr	r6, [r3, #4]
 802397a:	3604      	adds	r6, #4
 802397c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802397e:	2b00      	cmp	r3, #0
 8023980:	dc03      	bgt.n	802398a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8023982:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023984:	2b00      	cmp	r3, #0
 8023986:	f340 8373 	ble.w	8024070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802398a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802398c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023990:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023994:	1e48      	subs	r0, r1, #1
 8023996:	1e57      	subs	r7, r2, #1
 8023998:	9b07      	ldr	r3, [sp, #28]
 802399a:	2b00      	cmp	r3, #0
 802399c:	f340 8190 	ble.w	8023cc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80239a0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80239a2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80239a6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80239aa:	d406      	bmi.n	80239ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239ac:	4584      	cmp	ip, r0
 80239ae:	da04      	bge.n	80239ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239b0:	2b00      	cmp	r3, #0
 80239b2:	db02      	blt.n	80239ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239b4:	42bb      	cmp	r3, r7
 80239b6:	f2c0 8184 	blt.w	8023cc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80239ba:	f11c 0c01 	adds.w	ip, ip, #1
 80239be:	f100 8172 	bmi.w	8023ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80239c2:	4561      	cmp	r1, ip
 80239c4:	f2c0 816f 	blt.w	8023ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80239c8:	3301      	adds	r3, #1
 80239ca:	f100 816c 	bmi.w	8023ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80239ce:	429a      	cmp	r2, r3
 80239d0:	f2c0 8169 	blt.w	8023ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80239d4:	9b07      	ldr	r3, [sp, #28]
 80239d6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80239d8:	9317      	str	r3, [sp, #92]	; 0x5c
 80239da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80239dc:	2b00      	cmp	r3, #0
 80239de:	f340 818e 	ble.w	8023cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80239e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80239e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80239e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80239ea:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80239ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80239f0:	141b      	asrs	r3, r3, #16
 80239f2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80239f6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80239fa:	f100 81d1 	bmi.w	8023da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80239fe:	f101 38ff 	add.w	r8, r1, #4294967295
 8023a02:	4543      	cmp	r3, r8
 8023a04:	f280 81cc 	bge.w	8023da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023a08:	f1bc 0f00 	cmp.w	ip, #0
 8023a0c:	f2c0 81c8 	blt.w	8023da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023a10:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023a14:	45c4      	cmp	ip, r8
 8023a16:	f280 81c3 	bge.w	8023da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023a1a:	b209      	sxth	r1, r1
 8023a1c:	fb0c 3301 	mla	r3, ip, r1, r3
 8023a20:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023a22:	eb04 0803 	add.w	r8, r4, r3
 8023a26:	5ce3      	ldrb	r3, [r4, r3]
 8023a28:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023a2c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023a30:	2a00      	cmp	r2, #0
 8023a32:	f000 81aa 	beq.w	8023d8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8023a36:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023a3a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023a3e:	940b      	str	r4, [sp, #44]	; 0x2c
 8023a40:	0e24      	lsrs	r4, r4, #24
 8023a42:	9412      	str	r4, [sp, #72]	; 0x48
 8023a44:	b178      	cbz	r0, 8023a66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023a46:	eb08 0c01 	add.w	ip, r8, r1
 8023a4a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023a4e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023a52:	9108      	str	r1, [sp, #32]
 8023a54:	0e09      	lsrs	r1, r1, #24
 8023a56:	9110      	str	r1, [sp, #64]	; 0x40
 8023a58:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8023a5c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023a60:	910c      	str	r1, [sp, #48]	; 0x30
 8023a62:	0e09      	lsrs	r1, r1, #24
 8023a64:	9113      	str	r1, [sp, #76]	; 0x4c
 8023a66:	b292      	uxth	r2, r2
 8023a68:	b280      	uxth	r0, r0
 8023a6a:	fb02 f900 	mul.w	r9, r2, r0
 8023a6e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023a72:	0112      	lsls	r2, r2, #4
 8023a74:	eba2 0809 	sub.w	r8, r2, r9
 8023a78:	b280      	uxth	r0, r0
 8023a7a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023a7e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023a80:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023a82:	fa1f f888 	uxth.w	r8, r8
 8023a86:	1a12      	subs	r2, r2, r0
 8023a88:	b292      	uxth	r2, r2
 8023a8a:	fb08 f101 	mul.w	r1, r8, r1
 8023a8e:	fb02 110e 	mla	r1, r2, lr, r1
 8023a92:	fb00 1104 	mla	r1, r0, r4, r1
 8023a96:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023a98:	fb09 1104 	mla	r1, r9, r4, r1
 8023a9c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023aa0:	2900      	cmp	r1, #0
 8023aa2:	f000 80f5 	beq.w	8023c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023aa6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023aaa:	d01b      	beq.n	8023ae4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023aac:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023ab0:	fb0e fa0a 	mul.w	sl, lr, sl
 8023ab4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ab8:	fb0e fe03 	mul.w	lr, lr, r3
 8023abc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023ac0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023ac4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023ac8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023acc:	4453      	add	r3, sl
 8023ace:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023ad2:	0a1b      	lsrs	r3, r3, #8
 8023ad4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ad8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023adc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ae0:	ea43 030c 	orr.w	r3, r3, ip
 8023ae4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023ae6:	2cff      	cmp	r4, #255	; 0xff
 8023ae8:	d021      	beq.n	8023b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8023aea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023aec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023af0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023af2:	fb04 fb0b 	mul.w	fp, r4, fp
 8023af6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023af8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023afc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023afe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b02:	fb04 fa0a 	mul.w	sl, r4, sl
 8023b06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023b0e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023b12:	44de      	add	lr, fp
 8023b14:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023b18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023b1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b28:	ea4e 040a 	orr.w	r4, lr, sl
 8023b2c:	940b      	str	r4, [sp, #44]	; 0x2c
 8023b2e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023b30:	2cff      	cmp	r4, #255	; 0xff
 8023b32:	d021      	beq.n	8023b78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8023b34:	9c08      	ldr	r4, [sp, #32]
 8023b36:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023b3a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023b3c:	fb04 fb0b 	mul.w	fp, r4, fp
 8023b40:	9c08      	ldr	r4, [sp, #32]
 8023b42:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023b46:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023b48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b4c:	fb04 fa0a 	mul.w	sl, r4, sl
 8023b50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023b58:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023b5c:	44de      	add	lr, fp
 8023b5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023b62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023b66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b72:	ea4e 040a 	orr.w	r4, lr, sl
 8023b76:	9408      	str	r4, [sp, #32]
 8023b78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023b7a:	2cff      	cmp	r4, #255	; 0xff
 8023b7c:	d021      	beq.n	8023bc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023b7e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023b80:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023b84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023b86:	fb04 fb0b 	mul.w	fp, r4, fp
 8023b8a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023b8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023b90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023b92:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b96:	fb04 fa0a 	mul.w	sl, r4, sl
 8023b9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023b9e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023ba2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023ba6:	44de      	add	lr, fp
 8023ba8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023bac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023bb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023bb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023bb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023bbc:	ea4e 040a 	orr.w	r4, lr, sl
 8023bc0:	940c      	str	r4, [sp, #48]	; 0x30
 8023bc2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023bc4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023bc8:	9c08      	ldr	r4, [sp, #32]
 8023bca:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8023bce:	fb08 fc0c 	mul.w	ip, r8, ip
 8023bd2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023bd6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023bda:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023bdc:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023be0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023be4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023be6:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023bea:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8023bee:	fb08 f80e 	mul.w	r8, r8, lr
 8023bf2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023bf6:	fb02 8303 	mla	r3, r2, r3, r8
 8023bfa:	9a08      	ldr	r2, [sp, #32]
 8023bfc:	f8b7 8000 	ldrh.w	r8, [r7]
 8023c00:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023c04:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023c06:	fb00 330a 	mla	r3, r0, sl, r3
 8023c0a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8023c0e:	fb09 3900 	mla	r9, r9, r0, r3
 8023c12:	43c9      	mvns	r1, r1
 8023c14:	ea4f 2228 	mov.w	r2, r8, asr #8
 8023c18:	fa5f fe81 	uxtb.w	lr, r1
 8023c1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023c24:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023c28:	fb02 f20e 	mul.w	r2, r2, lr
 8023c2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c30:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023c34:	ea4c 0c09 	orr.w	ip, ip, r9
 8023c38:	1c53      	adds	r3, r2, #1
 8023c3a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8023c3e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8023c42:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8023c46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023c4a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023c4e:	4a63      	ldr	r2, [pc, #396]	; (8023ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8023c50:	fb00 f00e 	mul.w	r0, r0, lr
 8023c54:	b2db      	uxtb	r3, r3
 8023c56:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8023c5a:	1c43      	adds	r3, r0, #1
 8023c5c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023c60:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8023c64:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8023c68:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023c6c:	b2c9      	uxtb	r1, r1
 8023c6e:	00db      	lsls	r3, r3, #3
 8023c70:	fb01 f10e 	mul.w	r1, r1, lr
 8023c74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023c78:	4313      	orrs	r3, r2
 8023c7a:	1c4a      	adds	r2, r1, #1
 8023c7c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023c80:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023c84:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023c88:	ea4c 0c03 	orr.w	ip, ip, r3
 8023c8c:	f8a7 c000 	strh.w	ip, [r7]
 8023c90:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023c92:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023c94:	441a      	add	r2, r3
 8023c96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023c98:	9225      	str	r2, [sp, #148]	; 0x94
 8023c9a:	441d      	add	r5, r3
 8023c9c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023c9e:	3b01      	subs	r3, #1
 8023ca0:	3702      	adds	r7, #2
 8023ca2:	9317      	str	r3, [sp, #92]	; 0x5c
 8023ca4:	e699      	b.n	80239da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023ca6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023ca8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8023caa:	441c      	add	r4, r3
 8023cac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023cae:	9425      	str	r4, [sp, #148]	; 0x94
 8023cb0:	441d      	add	r5, r3
 8023cb2:	9b07      	ldr	r3, [sp, #28]
 8023cb4:	3b01      	subs	r3, #1
 8023cb6:	9307      	str	r3, [sp, #28]
 8023cb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023cba:	3302      	adds	r3, #2
 8023cbc:	930a      	str	r3, [sp, #40]	; 0x28
 8023cbe:	e66b      	b.n	8023998 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8023cc0:	d024      	beq.n	8023d0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8023cc2:	9b07      	ldr	r3, [sp, #28]
 8023cc4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023cc6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8023cc8:	3b01      	subs	r3, #1
 8023cca:	fb00 4003 	mla	r0, r0, r3, r4
 8023cce:	1400      	asrs	r0, r0, #16
 8023cd0:	f53f ae80 	bmi.w	80239d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023cd4:	3901      	subs	r1, #1
 8023cd6:	4288      	cmp	r0, r1
 8023cd8:	f6bf ae7c 	bge.w	80239d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023cdc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023cde:	fb01 5303 	mla	r3, r1, r3, r5
 8023ce2:	141b      	asrs	r3, r3, #16
 8023ce4:	f53f ae76 	bmi.w	80239d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023ce8:	3a01      	subs	r2, #1
 8023cea:	4293      	cmp	r3, r2
 8023cec:	f6bf ae72 	bge.w	80239d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023cf0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023cf4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023cf8:	f1bb 0f00 	cmp.w	fp, #0
 8023cfc:	dc70      	bgt.n	8023de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8023cfe:	9b07      	ldr	r3, [sp, #28]
 8023d00:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023d04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d06:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023d0a:	930a      	str	r3, [sp, #40]	; 0x28
 8023d0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023d0e:	2b00      	cmp	r3, #0
 8023d10:	f340 81ae 	ble.w	8024070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8023d14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023d18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023d1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023d26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023d2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d2e:	eef0 6a62 	vmov.f32	s13, s5
 8023d32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d3e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8023d42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d46:	eef0 6a43 	vmov.f32	s13, s6
 8023d4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d4e:	ee12 2a90 	vmov	r2, s5
 8023d52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d56:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d5a:	ee13 2a10 	vmov	r2, s6
 8023d5e:	9327      	str	r3, [sp, #156]	; 0x9c
 8023d60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d62:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d66:	9328      	str	r3, [sp, #160]	; 0xa0
 8023d68:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023d6a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8023d6c:	3b01      	subs	r3, #1
 8023d6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d72:	9316      	str	r3, [sp, #88]	; 0x58
 8023d74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d76:	bf08      	it	eq
 8023d78:	4613      	moveq	r3, r2
 8023d7a:	ee16 5a90 	vmov	r5, s13
 8023d7e:	9307      	str	r3, [sp, #28]
 8023d80:	eeb0 3a67 	vmov.f32	s6, s15
 8023d84:	eef0 2a47 	vmov.f32	s5, s14
 8023d88:	e5f8      	b.n	802397c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8023d8a:	2800      	cmp	r0, #0
 8023d8c:	f43f ae6b 	beq.w	8023a66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023d90:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023d94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023d98:	9108      	str	r1, [sp, #32]
 8023d9a:	0e09      	lsrs	r1, r1, #24
 8023d9c:	9110      	str	r1, [sp, #64]	; 0x40
 8023d9e:	e662      	b.n	8023a66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023da0:	f113 0801 	adds.w	r8, r3, #1
 8023da4:	f53f af74 	bmi.w	8023c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023da8:	4541      	cmp	r1, r8
 8023daa:	f6ff af71 	blt.w	8023c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023dae:	f11c 0801 	adds.w	r8, ip, #1
 8023db2:	f53f af6d 	bmi.w	8023c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023db6:	45c6      	cmp	lr, r8
 8023db8:	f6ff af6a 	blt.w	8023c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023dbc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8023dc0:	b209      	sxth	r1, r1
 8023dc2:	fa0f f38e 	sxth.w	r3, lr
 8023dc6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8023dca:	9301      	str	r3, [sp, #4]
 8023dcc:	9100      	str	r1, [sp, #0]
 8023dce:	4633      	mov	r3, r6
 8023dd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023dd2:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023dd4:	4639      	mov	r1, r7
 8023dd6:	f7ff fc7a 	bl	80236ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8023dda:	e759      	b.n	8023c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023ddc:	fffff800 	.word	0xfffff800
 8023de0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8023de2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8023de4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023de8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023dea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023dee:	1427      	asrs	r7, r4, #16
 8023df0:	142b      	asrs	r3, r5, #16
 8023df2:	fb01 7303 	mla	r3, r1, r3, r7
 8023df6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023df8:	18e7      	adds	r7, r4, r3
 8023dfa:	5ce3      	ldrb	r3, [r4, r3]
 8023dfc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023e00:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023e04:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023e08:	2a00      	cmp	r2, #0
 8023e0a:	f000 8127 	beq.w	802405c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023e0e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023e12:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023e16:	940d      	str	r4, [sp, #52]	; 0x34
 8023e18:	0e24      	lsrs	r4, r4, #24
 8023e1a:	9414      	str	r4, [sp, #80]	; 0x50
 8023e1c:	b170      	cbz	r0, 8023e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8023e1e:	eb07 0e01 	add.w	lr, r7, r1
 8023e22:	5c79      	ldrb	r1, [r7, r1]
 8023e24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023e28:	9109      	str	r1, [sp, #36]	; 0x24
 8023e2a:	0e09      	lsrs	r1, r1, #24
 8023e2c:	9111      	str	r1, [sp, #68]	; 0x44
 8023e2e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8023e32:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023e36:	910e      	str	r1, [sp, #56]	; 0x38
 8023e38:	0e09      	lsrs	r1, r1, #24
 8023e3a:	9115      	str	r1, [sp, #84]	; 0x54
 8023e3c:	b292      	uxth	r2, r2
 8023e3e:	b280      	uxth	r0, r0
 8023e40:	fb02 f800 	mul.w	r8, r2, r0
 8023e44:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023e48:	0112      	lsls	r2, r2, #4
 8023e4a:	eba2 0e08 	sub.w	lr, r2, r8
 8023e4e:	b280      	uxth	r0, r0
 8023e50:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8023e54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023e56:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023e58:	fa1f fe8e 	uxth.w	lr, lr
 8023e5c:	1a09      	subs	r1, r1, r0
 8023e5e:	b289      	uxth	r1, r1
 8023e60:	fb0e f202 	mul.w	r2, lr, r2
 8023e64:	fb01 220c 	mla	r2, r1, ip, r2
 8023e68:	fb00 2204 	mla	r2, r0, r4, r2
 8023e6c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023e6e:	fb08 2204 	mla	r2, r8, r4, r2
 8023e72:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023e76:	2a00      	cmp	r2, #0
 8023e78:	f000 80e5 	beq.w	8024046 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8023e7c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023e80:	d019      	beq.n	8023eb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8023e82:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023e86:	fb0c fa0a 	mul.w	sl, ip, sl
 8023e8a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023e8e:	fb0c fc03 	mul.w	ip, ip, r3
 8023e92:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023e96:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023e9a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023e9e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023ea2:	4453      	add	r3, sl
 8023ea4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023ea8:	0a1b      	lsrs	r3, r3, #8
 8023eaa:	0a3f      	lsrs	r7, r7, #8
 8023eac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023eb0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023eb4:	433b      	orrs	r3, r7
 8023eb6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023eb8:	2cff      	cmp	r4, #255	; 0xff
 8023eba:	d020      	beq.n	8023efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8023ebc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023ebe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023ec2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023ec4:	4367      	muls	r7, r4
 8023ec6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023ec8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023ecc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023ece:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ed2:	fb04 fa0a 	mul.w	sl, r4, sl
 8023ed6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023eda:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ede:	44bc      	add	ip, r7
 8023ee0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023ee4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023ee8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023eec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ef0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ef4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ef8:	ea4c 040a 	orr.w	r4, ip, sl
 8023efc:	940d      	str	r4, [sp, #52]	; 0x34
 8023efe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023f00:	2cff      	cmp	r4, #255	; 0xff
 8023f02:	d020      	beq.n	8023f46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8023f04:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023f06:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023f0a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023f0c:	4367      	muls	r7, r4
 8023f0e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023f10:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023f14:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023f16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023f1a:	fb04 fa0a 	mul.w	sl, r4, sl
 8023f1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023f22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f26:	44bc      	add	ip, r7
 8023f28:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023f2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023f30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f40:	ea4c 040a 	orr.w	r4, ip, sl
 8023f44:	9409      	str	r4, [sp, #36]	; 0x24
 8023f46:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023f48:	2cff      	cmp	r4, #255	; 0xff
 8023f4a:	d020      	beq.n	8023f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8023f4c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023f4e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023f52:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023f54:	4367      	muls	r7, r4
 8023f56:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023f58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023f5c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023f5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023f62:	fb04 fa0a 	mul.w	sl, r4, sl
 8023f66:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023f6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f6e:	44bc      	add	ip, r7
 8023f70:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023f74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023f78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f88:	ea4c 040a 	orr.w	r4, ip, sl
 8023f8c:	940e      	str	r4, [sp, #56]	; 0x38
 8023f8e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023f90:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023f94:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023f96:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023f9a:	fb0e f707 	mul.w	r7, lr, r7
 8023f9e:	fb01 770c 	mla	r7, r1, ip, r7
 8023fa2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023fa6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023fa8:	fb00 770c 	mla	r7, r0, ip, r7
 8023fac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023fb0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023fb2:	fb08 770c 	mla	r7, r8, ip, r7
 8023fb6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8023fba:	fb0e fe0c 	mul.w	lr, lr, ip
 8023fbe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023fc2:	fb01 e303 	mla	r3, r1, r3, lr
 8023fc6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023fc8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023fcc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8023fce:	fb00 330a 	mla	r3, r0, sl, r3
 8023fd2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023fd6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023fda:	f8b9 3000 	ldrh.w	r3, [r9]
 8023fde:	43d2      	mvns	r2, r2
 8023fe0:	1218      	asrs	r0, r3, #8
 8023fe2:	b2d2      	uxtb	r2, r2
 8023fe4:	10d9      	asrs	r1, r3, #3
 8023fe6:	0a3f      	lsrs	r7, r7, #8
 8023fe8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023ff0:	00db      	lsls	r3, r3, #3
 8023ff2:	4350      	muls	r0, r2
 8023ff4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023ff8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ffc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024000:	b2db      	uxtb	r3, r3
 8024002:	ea47 070c 	orr.w	r7, r7, ip
 8024006:	4351      	muls	r1, r2
 8024008:	4353      	muls	r3, r2
 802400a:	1c42      	adds	r2, r0, #1
 802400c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024010:	0c3a      	lsrs	r2, r7, #16
 8024012:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024016:	4a18      	ldr	r2, [pc, #96]	; (8024078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8024018:	b2c0      	uxtb	r0, r0
 802401a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802401e:	1c4a      	adds	r2, r1, #1
 8024020:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024024:	0a3a      	lsrs	r2, r7, #8
 8024026:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802402a:	00c9      	lsls	r1, r1, #3
 802402c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024030:	4301      	orrs	r1, r0
 8024032:	1c58      	adds	r0, r3, #1
 8024034:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024038:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802403c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8024040:	4308      	orrs	r0, r1
 8024042:	f8a9 0000 	strh.w	r0, [r9]
 8024046:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024048:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802404a:	441a      	add	r2, r3
 802404c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802404e:	9225      	str	r2, [sp, #148]	; 0x94
 8024050:	f109 0902 	add.w	r9, r9, #2
 8024054:	441d      	add	r5, r3
 8024056:	f10b 3bff 	add.w	fp, fp, #4294967295
 802405a:	e64d      	b.n	8023cf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802405c:	2800      	cmp	r0, #0
 802405e:	f43f aeed 	beq.w	8023e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024062:	5c79      	ldrb	r1, [r7, r1]
 8024064:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024068:	9109      	str	r1, [sp, #36]	; 0x24
 802406a:	0e09      	lsrs	r1, r1, #24
 802406c:	9111      	str	r1, [sp, #68]	; 0x44
 802406e:	e6e5      	b.n	8023e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024070:	b01b      	add	sp, #108	; 0x6c
 8024072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024076:	bf00      	nop
 8024078:	fffff800 	.word	0xfffff800

0802407c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802407c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024080:	b085      	sub	sp, #20
 8024082:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024086:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802408a:	9103      	str	r1, [sp, #12]
 802408c:	fb00 7406 	mla	r4, r0, r6, r7
 8024090:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8024094:	2800      	cmp	r0, #0
 8024096:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802409a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802409e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80240a2:	9501      	str	r5, [sp, #4]
 80240a4:	eb03 0904 	add.w	r9, r3, r4
 80240a8:	f2c0 8150 	blt.w	802434c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80240ac:	4583      	cmp	fp, r0
 80240ae:	f340 814d 	ble.w	802434c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80240b2:	2f00      	cmp	r7, #0
 80240b4:	f2c0 8146 	blt.w	8024344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80240b8:	42be      	cmp	r6, r7
 80240ba:	f340 8143 	ble.w	8024344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80240be:	f813 c004 	ldrb.w	ip, [r3, r4]
 80240c2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80240c6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80240ca:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80240ce:	4355      	muls	r5, r2
 80240d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80240d4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80240d8:	fb0c f203 	mul.w	r2, ip, r3
 80240dc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80240e0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80240e4:	441d      	add	r5, r3
 80240e6:	f102 0320 	add.w	r3, r2, #32
 80240ea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80240ee:	0a1b      	lsrs	r3, r3, #8
 80240f0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80240f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80240f8:	431c      	orrs	r4, r3
 80240fa:	1c7b      	adds	r3, r7, #1
 80240fc:	f100 812b 	bmi.w	8024356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8024100:	429e      	cmp	r6, r3
 8024102:	f340 8128 	ble.w	8024356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8024106:	2900      	cmp	r1, #0
 8024108:	f000 8128 	beq.w	802435c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802410c:	9a01      	ldr	r2, [sp, #4]
 802410e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8024112:	8855      	ldrh	r5, [r2, #2]
 8024114:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8024118:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802411c:	fb08 f802 	mul.w	r8, r8, r2
 8024120:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024124:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8024128:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802412c:	435d      	muls	r5, r3
 802412e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024132:	44d0      	add	r8, sl
 8024134:	f105 0a20 	add.w	sl, r5, #32
 8024138:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802413c:	0a2d      	lsrs	r5, r5, #8
 802413e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8024142:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024146:	432a      	orrs	r2, r5
 8024148:	3001      	adds	r0, #1
 802414a:	f100 810d 	bmi.w	8024368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802414e:	4583      	cmp	fp, r0
 8024150:	f340 810a 	ble.w	8024368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8024154:	f1be 0f00 	cmp.w	lr, #0
 8024158:	f000 810b 	beq.w	8024372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802415c:	2f00      	cmp	r7, #0
 802415e:	f2c0 8100 	blt.w	8024362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8024162:	42be      	cmp	r6, r7
 8024164:	f340 80fd 	ble.w	8024362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8024168:	9801      	ldr	r0, [sp, #4]
 802416a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802416e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8024172:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024176:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802417a:	fb0a fa00 	mul.w	sl, sl, r0
 802417e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024182:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8024186:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802418a:	fb05 f808 	mul.w	r8, r5, r8
 802418e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8024192:	4482      	add	sl, r0
 8024194:	f108 0020 	add.w	r0, r8, #32
 8024198:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802419c:	0a00      	lsrs	r0, r0, #8
 802419e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80241a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80241a6:	ea4b 0b00 	orr.w	fp, fp, r0
 80241aa:	3701      	adds	r7, #1
 80241ac:	f100 80e6 	bmi.w	802437c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80241b0:	42be      	cmp	r6, r7
 80241b2:	f340 80e3 	ble.w	802437c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80241b6:	2900      	cmp	r1, #0
 80241b8:	f000 80e3 	beq.w	8024382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80241bc:	3601      	adds	r6, #1
 80241be:	9801      	ldr	r0, [sp, #4]
 80241c0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80241c4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80241c8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80241cc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80241d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80241d4:	fb09 f906 	mul.w	r9, r9, r6
 80241d8:	fb07 f800 	mul.w	r8, r7, r0
 80241dc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80241e0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80241e4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80241e8:	44d1      	add	r9, sl
 80241ea:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80241ee:	f108 0020 	add.w	r0, r8, #32
 80241f2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80241f6:	0a00      	lsrs	r0, r0, #8
 80241f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80241fc:	4330      	orrs	r0, r6
 80241fe:	b28e      	uxth	r6, r1
 8024200:	fa1f f98e 	uxth.w	r9, lr
 8024204:	fb06 f809 	mul.w	r8, r6, r9
 8024208:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802420c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8024210:	0136      	lsls	r6, r6, #4
 8024212:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024216:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802421a:	9601      	str	r6, [sp, #4]
 802421c:	ea4a 0404 	orr.w	r4, sl, r4
 8024220:	fa1f f689 	uxth.w	r6, r9
 8024224:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024228:	fb11 f90e 	smulbb	r9, r1, lr
 802422c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8024230:	9602      	str	r6, [sp, #8]
 8024232:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024236:	4626      	mov	r6, r4
 8024238:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802423c:	f1ce 0410 	rsb	r4, lr, #16
 8024240:	1a64      	subs	r4, r4, r1
 8024242:	ea4a 0202 	orr.w	r2, sl, r2
 8024246:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802424a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802424e:	434a      	muls	r2, r1
 8024250:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024254:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024258:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802425c:	fb04 2406 	mla	r4, r4, r6, r2
 8024260:	ea4a 0000 	orr.w	r0, sl, r0
 8024264:	fb09 4200 	mla	r2, r9, r0, r4
 8024268:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802426c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024270:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024274:	ea44 0b0b 	orr.w	fp, r4, fp
 8024278:	9c01      	ldr	r4, [sp, #4]
 802427a:	9e02      	ldr	r6, [sp, #8]
 802427c:	9903      	ldr	r1, [sp, #12]
 802427e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8024282:	1ba4      	subs	r4, r4, r6
 8024284:	9e01      	ldr	r6, [sp, #4]
 8024286:	8808      	ldrh	r0, [r1, #0]
 8024288:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802428c:	eba6 0608 	sub.w	r6, r6, r8
 8024290:	b2b6      	uxth	r6, r6
 8024292:	b2a4      	uxth	r4, r4
 8024294:	4373      	muls	r3, r6
 8024296:	fb0c 3304 	mla	r3, ip, r4, r3
 802429a:	9c02      	ldr	r4, [sp, #8]
 802429c:	fb04 3505 	mla	r5, r4, r5, r3
 80242a0:	fb08 5707 	mla	r7, r8, r7, r5
 80242a4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80242a8:	b289      	uxth	r1, r1
 80242aa:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80242ae:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80242b2:	434f      	muls	r7, r1
 80242b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80242b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80242bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242c0:	1c7b      	adds	r3, r7, #1
 80242c2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80242c6:	ea42 0e0e 	orr.w	lr, r2, lr
 80242ca:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80242ce:	fa1f f28e 	uxth.w	r2, lr
 80242d2:	1203      	asrs	r3, r0, #8
 80242d4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80242d8:	b2ff      	uxtb	r7, r7
 80242da:	1215      	asrs	r5, r2, #8
 80242dc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80242e0:	fb13 f307 	smulbb	r3, r3, r7
 80242e4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80242e8:	fb05 3501 	mla	r5, r5, r1, r3
 80242ec:	10c3      	asrs	r3, r0, #3
 80242ee:	10d4      	asrs	r4, r2, #3
 80242f0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80242f4:	fb13 f307 	smulbb	r3, r3, r7
 80242f8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80242fc:	fb04 3401 	mla	r4, r4, r1, r3
 8024300:	00c3      	lsls	r3, r0, #3
 8024302:	00d2      	lsls	r2, r2, #3
 8024304:	b2db      	uxtb	r3, r3
 8024306:	fb13 f307 	smulbb	r3, r3, r7
 802430a:	b2d2      	uxtb	r2, r2
 802430c:	fb02 3101 	mla	r1, r2, r1, r3
 8024310:	b2ad      	uxth	r5, r5
 8024312:	b289      	uxth	r1, r1
 8024314:	b2a4      	uxth	r4, r4
 8024316:	1c6b      	adds	r3, r5, #1
 8024318:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802431c:	1c62      	adds	r2, r4, #1
 802431e:	1c4b      	adds	r3, r1, #1
 8024320:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024324:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024328:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802432c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024330:	0964      	lsrs	r4, r4, #5
 8024332:	432b      	orrs	r3, r5
 8024334:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024338:	9a03      	ldr	r2, [sp, #12]
 802433a:	4323      	orrs	r3, r4
 802433c:	8013      	strh	r3, [r2, #0]
 802433e:	b005      	add	sp, #20
 8024340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024344:	f04f 0c00 	mov.w	ip, #0
 8024348:	4664      	mov	r4, ip
 802434a:	e6d6      	b.n	80240fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802434c:	2300      	movs	r3, #0
 802434e:	469c      	mov	ip, r3
 8024350:	461a      	mov	r2, r3
 8024352:	461c      	mov	r4, r3
 8024354:	e6f8      	b.n	8024148 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8024356:	2300      	movs	r3, #0
 8024358:	461a      	mov	r2, r3
 802435a:	e6f5      	b.n	8024148 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802435c:	460b      	mov	r3, r1
 802435e:	460a      	mov	r2, r1
 8024360:	e6f2      	b.n	8024148 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8024362:	2500      	movs	r5, #0
 8024364:	46ab      	mov	fp, r5
 8024366:	e720      	b.n	80241aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8024368:	2700      	movs	r7, #0
 802436a:	463d      	mov	r5, r7
 802436c:	4638      	mov	r0, r7
 802436e:	46bb      	mov	fp, r7
 8024370:	e745      	b.n	80241fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8024372:	4677      	mov	r7, lr
 8024374:	4675      	mov	r5, lr
 8024376:	4670      	mov	r0, lr
 8024378:	46f3      	mov	fp, lr
 802437a:	e740      	b.n	80241fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802437c:	2700      	movs	r7, #0
 802437e:	4638      	mov	r0, r7
 8024380:	e73d      	b.n	80241fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8024382:	460f      	mov	r7, r1
 8024384:	4608      	mov	r0, r1
 8024386:	e73a      	b.n	80241fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08024388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802438c:	b097      	sub	sp, #92	; 0x5c
 802438e:	9214      	str	r2, [sp, #80]	; 0x50
 8024390:	9308      	str	r3, [sp, #32]
 8024392:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024394:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024398:	9312      	str	r3, [sp, #72]	; 0x48
 802439a:	9111      	str	r1, [sp, #68]	; 0x44
 802439c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80243a0:	9015      	str	r0, [sp, #84]	; 0x54
 80243a2:	6850      	ldr	r0, [r2, #4]
 80243a4:	6812      	ldr	r2, [r2, #0]
 80243a6:	fb00 1303 	mla	r3, r0, r3, r1
 80243aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80243ae:	9309      	str	r3, [sp, #36]	; 0x24
 80243b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243b2:	681b      	ldr	r3, [r3, #0]
 80243b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80243b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243b8:	685b      	ldr	r3, [r3, #4]
 80243ba:	930c      	str	r3, [sp, #48]	; 0x30
 80243bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80243c0:	930a      	str	r3, [sp, #40]	; 0x28
 80243c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80243c4:	2b00      	cmp	r3, #0
 80243c6:	dc03      	bgt.n	80243d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80243c8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80243ca:	2b00      	cmp	r3, #0
 80243cc:	f340 83cb 	ble.w	8024b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80243d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80243d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80243da:	1e48      	subs	r0, r1, #1
 80243dc:	1e55      	subs	r5, r2, #1
 80243de:	9b08      	ldr	r3, [sp, #32]
 80243e0:	2b00      	cmp	r3, #0
 80243e2:	f340 81a3 	ble.w	802472c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80243e6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80243e8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80243ea:	1436      	asrs	r6, r6, #16
 80243ec:	ea4f 4323 	mov.w	r3, r3, asr #16
 80243f0:	d406      	bmi.n	8024400 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80243f2:	4286      	cmp	r6, r0
 80243f4:	da04      	bge.n	8024400 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80243f6:	2b00      	cmp	r3, #0
 80243f8:	db02      	blt.n	8024400 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80243fa:	42ab      	cmp	r3, r5
 80243fc:	f2c0 8197 	blt.w	802472e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8024400:	3601      	adds	r6, #1
 8024402:	f100 8184 	bmi.w	802470e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8024406:	42b1      	cmp	r1, r6
 8024408:	f2c0 8181 	blt.w	802470e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802440c:	3301      	adds	r3, #1
 802440e:	f100 817e 	bmi.w	802470e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8024412:	429a      	cmp	r2, r3
 8024414:	f2c0 817b 	blt.w	802470e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8024418:	9b08      	ldr	r3, [sp, #32]
 802441a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802441c:	9313      	str	r3, [sp, #76]	; 0x4c
 802441e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024422:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024424:	2b00      	cmp	r3, #0
 8024426:	f340 81a4 	ble.w	8024772 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802442a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802442c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802442e:	1418      	asrs	r0, r3, #16
 8024430:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024432:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8024436:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8024438:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802443c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802443e:	142d      	asrs	r5, r5, #16
 8024440:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8024444:	f100 81f8 	bmi.w	8024838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024448:	f102 3eff 	add.w	lr, r2, #4294967295
 802444c:	4575      	cmp	r5, lr
 802444e:	f280 81f3 	bge.w	8024838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024452:	2800      	cmp	r0, #0
 8024454:	f2c0 81f0 	blt.w	8024838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024458:	f103 3eff 	add.w	lr, r3, #4294967295
 802445c:	4570      	cmp	r0, lr
 802445e:	f280 81eb 	bge.w	8024838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024462:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024464:	b212      	sxth	r2, r2
 8024466:	fb00 5002 	mla	r0, r0, r2, r5
 802446a:	fa1f fe81 	uxth.w	lr, r1
 802446e:	eb03 0a00 	add.w	sl, r3, r0
 8024472:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8024476:	f813 9000 	ldrb.w	r9, [r3, r0]
 802447a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802447e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8024482:	b29b      	uxth	r3, r3
 8024484:	f1bc 0f00 	cmp.w	ip, #0
 8024488:	f000 81b9 	beq.w	80247fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802448c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024490:	940d      	str	r4, [sp, #52]	; 0x34
 8024492:	eb0a 0b02 	add.w	fp, sl, r2
 8024496:	fa1f fa8c 	uxth.w	sl, ip
 802449a:	fb0a fe0e 	mul.w	lr, sl, lr
 802449e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80244a2:	fa1f fa8a 	uxth.w	sl, sl
 80244a6:	eba5 050e 	sub.w	r5, r5, lr
 80244aa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80244ae:	940e      	str	r4, [sp, #56]	; 0x38
 80244b0:	eba3 030a 	sub.w	r3, r3, sl
 80244b4:	b2ad      	uxth	r5, r5
 80244b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80244b8:	b29b      	uxth	r3, r3
 80244ba:	fb08 f505 	mul.w	r5, r8, r5
 80244be:	fb09 5303 	mla	r3, r9, r3, r5
 80244c2:	fb0a 3304 	mla	r3, sl, r4, r3
 80244c6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80244c8:	fb0e 3304 	mla	r3, lr, r4, r3
 80244cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80244d0:	2b00      	cmp	r3, #0
 80244d2:	f000 810f 	beq.w	80246f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80244d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80244d8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80244dc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80244e0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80244e4:	f000 8190 	beq.w	8024808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80244e8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80244ec:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80244f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80244f4:	fb09 f000 	mul.w	r0, r9, r0
 80244f8:	fb0a fe0e 	mul.w	lr, sl, lr
 80244fc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024500:	f100 0b20 	add.w	fp, r0, #32
 8024504:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8024508:	44ce      	add	lr, r9
 802450a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802450e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024512:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024516:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802451a:	ea4e 0909 	orr.w	r9, lr, r9
 802451e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024522:	8868      	ldrh	r0, [r5, #2]
 8024524:	d019      	beq.n	802455a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8024526:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802452a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802452e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024532:	fb08 f800 	mul.w	r8, r8, r0
 8024536:	fb0a fe0e 	mul.w	lr, sl, lr
 802453a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802453e:	f108 0b20 	add.w	fp, r8, #32
 8024542:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8024546:	4486      	add	lr, r0
 8024548:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802454c:	0a00      	lsrs	r0, r0, #8
 802454e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024552:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024556:	ea4e 0000 	orr.w	r0, lr, r0
 802455a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802455e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8024562:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024566:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802456a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802456e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024572:	ea4e 0909 	orr.w	r9, lr, r9
 8024576:	ea4a 0000 	orr.w	r0, sl, r0
 802457a:	f1bc 0f00 	cmp.w	ip, #0
 802457e:	f000 8145 	beq.w	802480c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8024582:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8024586:	3a01      	subs	r2, #1
 8024588:	0052      	lsls	r2, r2, #1
 802458a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802458c:	3202      	adds	r2, #2
 802458e:	2cff      	cmp	r4, #255	; 0xff
 8024590:	eb05 0e02 	add.w	lr, r5, r2
 8024594:	5aaa      	ldrh	r2, [r5, r2]
 8024596:	d018      	beq.n	80245ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8024598:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802459c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80245a0:	fb04 fa02 	mul.w	sl, r4, r2
 80245a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80245a8:	fb08 f805 	mul.w	r8, r8, r5
 80245ac:	f10a 0520 	add.w	r5, sl, #32
 80245b0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80245b4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80245b8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80245bc:	4442      	add	r2, r8
 80245be:	0a2d      	lsrs	r5, r5, #8
 80245c0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80245c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80245c8:	432a      	orrs	r2, r5
 80245ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80245cc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80245d0:	2cff      	cmp	r4, #255	; 0xff
 80245d2:	d01a      	beq.n	802460a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80245d4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80245d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80245dc:	fb04 fa05 	mul.w	sl, r4, r5
 80245e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80245e4:	fb08 f80e 	mul.w	r8, r8, lr
 80245e8:	f10a 0e20 	add.w	lr, sl, #32
 80245ec:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80245f0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80245f4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80245f8:	4445      	add	r5, r8
 80245fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80245fe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8024602:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8024606:	ea45 050e 	orr.w	r5, r5, lr
 802460a:	fb1c fe01 	smulbb	lr, ip, r1
 802460e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8024612:	f1cc 0810 	rsb	r8, ip, #16
 8024616:	eba8 0801 	sub.w	r8, r8, r1
 802461a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802461e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8024622:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8024626:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802462a:	4341      	muls	r1, r0
 802462c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024630:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024634:	ea4a 0202 	orr.w	r2, sl, r2
 8024638:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802463c:	fb09 1108 	mla	r1, r9, r8, r1
 8024640:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024644:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024648:	fb0c 1102 	mla	r1, ip, r2, r1
 802464c:	ea4b 0505 	orr.w	r5, fp, r5
 8024650:	fb0e 1e05 	mla	lr, lr, r5, r1
 8024654:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024658:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802465c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024660:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024664:	ea42 0e0e 	orr.w	lr, r2, lr
 8024668:	fa1f f28e 	uxth.w	r2, lr
 802466c:	2bff      	cmp	r3, #255	; 0xff
 802466e:	d103      	bne.n	8024678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8024670:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024672:	29ff      	cmp	r1, #255	; 0xff
 8024674:	f000 80de 	beq.w	8024834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8024678:	990a      	ldr	r1, [sp, #40]	; 0x28
 802467a:	8838      	ldrh	r0, [r7, #0]
 802467c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802467e:	434b      	muls	r3, r1
 8024680:	f103 0c01 	add.w	ip, r3, #1
 8024684:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8024688:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802468c:	fa5f fc83 	uxtb.w	ip, r3
 8024690:	1203      	asrs	r3, r0, #8
 8024692:	1215      	asrs	r5, r2, #8
 8024694:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024698:	fb13 f30c 	smulbb	r3, r3, ip
 802469c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80246a0:	fb05 3501 	mla	r5, r5, r1, r3
 80246a4:	10c3      	asrs	r3, r0, #3
 80246a6:	10d1      	asrs	r1, r2, #3
 80246a8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80246ac:	fb13 f30c 	smulbb	r3, r3, ip
 80246b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80246b4:	fb01 3104 	mla	r1, r1, r4, r3
 80246b8:	00c3      	lsls	r3, r0, #3
 80246ba:	00d2      	lsls	r2, r2, #3
 80246bc:	b2db      	uxtb	r3, r3
 80246be:	b2d2      	uxtb	r2, r2
 80246c0:	fb13 f30c 	smulbb	r3, r3, ip
 80246c4:	b2ad      	uxth	r5, r5
 80246c6:	fb02 3304 	mla	r3, r2, r4, r3
 80246ca:	b29a      	uxth	r2, r3
 80246cc:	1c6b      	adds	r3, r5, #1
 80246ce:	b289      	uxth	r1, r1
 80246d0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80246d4:	1c53      	adds	r3, r2, #1
 80246d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80246da:	1c4a      	adds	r2, r1, #1
 80246dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80246e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80246e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80246e8:	0949      	lsrs	r1, r1, #5
 80246ea:	432b      	orrs	r3, r5
 80246ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80246f0:	430b      	orrs	r3, r1
 80246f2:	803b      	strh	r3, [r7, #0]
 80246f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80246f6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80246f8:	4413      	add	r3, r2
 80246fa:	9321      	str	r3, [sp, #132]	; 0x84
 80246fc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80246fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024700:	441a      	add	r2, r3
 8024702:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024704:	9222      	str	r2, [sp, #136]	; 0x88
 8024706:	3b01      	subs	r3, #1
 8024708:	3702      	adds	r7, #2
 802470a:	9313      	str	r3, [sp, #76]	; 0x4c
 802470c:	e689      	b.n	8024422 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802470e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024710:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8024712:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8024714:	4433      	add	r3, r6
 8024716:	9321      	str	r3, [sp, #132]	; 0x84
 8024718:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802471a:	441c      	add	r4, r3
 802471c:	9b08      	ldr	r3, [sp, #32]
 802471e:	9422      	str	r4, [sp, #136]	; 0x88
 8024720:	3b01      	subs	r3, #1
 8024722:	9308      	str	r3, [sp, #32]
 8024724:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024726:	3302      	adds	r3, #2
 8024728:	9309      	str	r3, [sp, #36]	; 0x24
 802472a:	e658      	b.n	80243de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802472c:	d028      	beq.n	8024780 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802472e:	9b08      	ldr	r3, [sp, #32]
 8024730:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024732:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8024734:	3b01      	subs	r3, #1
 8024736:	fb00 5003 	mla	r0, r0, r3, r5
 802473a:	1400      	asrs	r0, r0, #16
 802473c:	f53f ae6c 	bmi.w	8024418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024740:	3901      	subs	r1, #1
 8024742:	4288      	cmp	r0, r1
 8024744:	f6bf ae68 	bge.w	8024418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024748:	9924      	ldr	r1, [sp, #144]	; 0x90
 802474a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802474c:	fb01 0303 	mla	r3, r1, r3, r0
 8024750:	141b      	asrs	r3, r3, #16
 8024752:	f53f ae61 	bmi.w	8024418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024756:	3a01      	subs	r2, #1
 8024758:	4293      	cmp	r3, r2
 802475a:	f6bf ae5d 	bge.w	8024418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802475e:	9b08      	ldr	r3, [sp, #32]
 8024760:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8024764:	9313      	str	r3, [sp, #76]	; 0x4c
 8024766:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802476a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802476c:	2b00      	cmp	r3, #0
 802476e:	f300 8082 	bgt.w	8024876 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8024772:	9b08      	ldr	r3, [sp, #32]
 8024774:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024778:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802477a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802477e:	9309      	str	r3, [sp, #36]	; 0x24
 8024780:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024782:	2b00      	cmp	r3, #0
 8024784:	f340 81ef 	ble.w	8024b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8024788:	ee30 0a04 	vadd.f32	s0, s0, s8
 802478c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024790:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024794:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024796:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802479a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802479e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80247a2:	eef0 6a62 	vmov.f32	s13, s5
 80247a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80247aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80247b2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80247b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80247ba:	eef0 6a43 	vmov.f32	s13, s6
 80247be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80247c2:	ee12 2a90 	vmov	r2, s5
 80247c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80247ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80247ce:	ee13 2a10 	vmov	r2, s6
 80247d2:	9323      	str	r3, [sp, #140]	; 0x8c
 80247d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80247da:	9324      	str	r3, [sp, #144]	; 0x90
 80247dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80247de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80247e0:	3b01      	subs	r3, #1
 80247e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247e6:	9311      	str	r3, [sp, #68]	; 0x44
 80247e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247ea:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80247ee:	bf08      	it	eq
 80247f0:	4613      	moveq	r3, r2
 80247f2:	9308      	str	r3, [sp, #32]
 80247f4:	eeb0 3a67 	vmov.f32	s6, s15
 80247f8:	eef0 2a47 	vmov.f32	s5, s14
 80247fc:	e5e1      	b.n	80243c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80247fe:	fb08 f505 	mul.w	r5, r8, r5
 8024802:	fb09 5303 	mla	r3, r9, r3, r5
 8024806:	e661      	b.n	80244cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8024808:	4681      	mov	r9, r0
 802480a:	e688      	b.n	802451e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802480c:	f1c1 0210 	rsb	r2, r1, #16
 8024810:	4341      	muls	r1, r0
 8024812:	fb09 1902 	mla	r9, r9, r2, r1
 8024816:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802481a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802481e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8024822:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024826:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802482a:	ea42 0909 	orr.w	r9, r2, r9
 802482e:	fa1f f289 	uxth.w	r2, r9
 8024832:	e71b      	b.n	802466c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8024834:	803a      	strh	r2, [r7, #0]
 8024836:	e75d      	b.n	80246f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024838:	f115 0e01 	adds.w	lr, r5, #1
 802483c:	f53f af5a 	bmi.w	80246f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024840:	4572      	cmp	r2, lr
 8024842:	f6ff af57 	blt.w	80246f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024846:	f110 0e01 	adds.w	lr, r0, #1
 802484a:	f53f af53 	bmi.w	80246f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802484e:	4573      	cmp	r3, lr
 8024850:	f6ff af50 	blt.w	80246f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024854:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024856:	9502      	str	r5, [sp, #8]
 8024858:	b21b      	sxth	r3, r3
 802485a:	b212      	sxth	r2, r2
 802485c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8024860:	9301      	str	r3, [sp, #4]
 8024862:	9200      	str	r2, [sp, #0]
 8024864:	e9cd c405 	strd	ip, r4, [sp, #20]
 8024868:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 802486c:	4639      	mov	r1, r7
 802486e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024870:	f7ff fc04 	bl	802407c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8024874:	e73e      	b.n	80246f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024876:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024878:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802487c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802487e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024882:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024884:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024888:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802488a:	141f      	asrs	r7, r3, #16
 802488c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802488e:	141b      	asrs	r3, r3, #16
 8024890:	fb01 3707 	mla	r7, r1, r7, r3
 8024894:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024896:	fa1f fc82 	uxth.w	ip, r2
 802489a:	eb03 0a07 	add.w	sl, r3, r7
 802489e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80248a2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80248a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80248aa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80248ae:	b29b      	uxth	r3, r3
 80248b0:	2d00      	cmp	r5, #0
 80248b2:	f000 813d 	beq.w	8024b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80248b6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80248ba:	940f      	str	r4, [sp, #60]	; 0x3c
 80248bc:	eb0a 0b01 	add.w	fp, sl, r1
 80248c0:	fa1f fa85 	uxth.w	sl, r5
 80248c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80248c8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80248cc:	fa1f fa8a 	uxth.w	sl, sl
 80248d0:	eba0 000c 	sub.w	r0, r0, ip
 80248d4:	eba3 030a 	sub.w	r3, r3, sl
 80248d8:	b280      	uxth	r0, r0
 80248da:	fb08 f000 	mul.w	r0, r8, r0
 80248de:	b29b      	uxth	r3, r3
 80248e0:	fb09 0303 	mla	r3, r9, r3, r0
 80248e4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80248e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80248ea:	9410      	str	r4, [sp, #64]	; 0x40
 80248ec:	fb0a 3300 	mla	r3, sl, r0, r3
 80248f0:	fb0c 3304 	mla	r3, ip, r4, r3
 80248f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80248f8:	2b00      	cmp	r3, #0
 80248fa:	f000 810b 	beq.w	8024b14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80248fe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8024900:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024902:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024906:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802490a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802490e:	f000 8114 	beq.w	8024b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8024912:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024916:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802491a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802491e:	fb09 f707 	mul.w	r7, r9, r7
 8024922:	fb0a fc0c 	mul.w	ip, sl, ip
 8024926:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802492a:	f107 0b20 	add.w	fp, r7, #32
 802492e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024932:	44cc      	add	ip, r9
 8024934:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024938:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802493c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024940:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024944:	ea4c 0909 	orr.w	r9, ip, r9
 8024948:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802494c:	8847      	ldrh	r7, [r0, #2]
 802494e:	d019      	beq.n	8024984 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8024950:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024954:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024958:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802495c:	fb08 f807 	mul.w	r8, r8, r7
 8024960:	fb0a fc0c 	mul.w	ip, sl, ip
 8024964:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024968:	f108 0b20 	add.w	fp, r8, #32
 802496c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024970:	44bc      	add	ip, r7
 8024972:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024976:	0a3f      	lsrs	r7, r7, #8
 8024978:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802497c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024980:	ea4c 0707 	orr.w	r7, ip, r7
 8024984:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024988:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802498c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8024990:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024994:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024998:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802499c:	ea4c 0909 	orr.w	r9, ip, r9
 80249a0:	ea4a 0707 	orr.w	r7, sl, r7
 80249a4:	2d00      	cmp	r5, #0
 80249a6:	f000 80ca 	beq.w	8024b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80249aa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80249ae:	3901      	subs	r1, #1
 80249b0:	0049      	lsls	r1, r1, #1
 80249b2:	3102      	adds	r1, #2
 80249b4:	eb00 0c01 	add.w	ip, r0, r1
 80249b8:	5a41      	ldrh	r1, [r0, r1]
 80249ba:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80249bc:	28ff      	cmp	r0, #255	; 0xff
 80249be:	d019      	beq.n	80249f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80249c0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80249c2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80249c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80249ca:	fb04 fa01 	mul.w	sl, r4, r1
 80249ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80249d2:	fb08 f800 	mul.w	r8, r8, r0
 80249d6:	f10a 0020 	add.w	r0, sl, #32
 80249da:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80249de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80249e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80249e6:	4441      	add	r1, r8
 80249e8:	0a00      	lsrs	r0, r0, #8
 80249ea:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80249ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80249f2:	4301      	orrs	r1, r0
 80249f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80249f6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80249fa:	2cff      	cmp	r4, #255	; 0xff
 80249fc:	d01a      	beq.n	8024a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80249fe:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024a02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024a06:	fb04 fa00 	mul.w	sl, r4, r0
 8024a0a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024a0e:	fb08 f80c 	mul.w	r8, r8, ip
 8024a12:	f10a 0c20 	add.w	ip, sl, #32
 8024a16:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8024a1a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8024a1e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024a22:	4440      	add	r0, r8
 8024a24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a28:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8024a2c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024a30:	ea40 000c 	orr.w	r0, r0, ip
 8024a34:	fb15 fc02 	smulbb	ip, r5, r2
 8024a38:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8024a3c:	f1c5 0810 	rsb	r8, r5, #16
 8024a40:	eba8 0802 	sub.w	r8, r8, r2
 8024a44:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024a48:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8024a4c:	437a      	muls	r2, r7
 8024a4e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024a52:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024a56:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024a5a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024a5e:	fb09 2208 	mla	r2, r9, r8, r2
 8024a62:	ea4a 0101 	orr.w	r1, sl, r1
 8024a66:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8024a6a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024a6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024a72:	fb05 2201 	mla	r2, r5, r1, r2
 8024a76:	ea4b 0000 	orr.w	r0, fp, r0
 8024a7a:	fb0c 2200 	mla	r2, ip, r0, r2
 8024a7e:	0d57      	lsrs	r7, r2, #21
 8024a80:	0952      	lsrs	r2, r2, #5
 8024a82:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024a86:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024a8a:	433a      	orrs	r2, r7
 8024a8c:	2bff      	cmp	r3, #255	; 0xff
 8024a8e:	b292      	uxth	r2, r2
 8024a90:	d102      	bne.n	8024a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024a92:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024a94:	29ff      	cmp	r1, #255	; 0xff
 8024a96:	d063      	beq.n	8024b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8024a98:	980a      	ldr	r0, [sp, #40]	; 0x28
 8024a9a:	f8be 1000 	ldrh.w	r1, [lr]
 8024a9e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024aa0:	4343      	muls	r3, r0
 8024aa2:	1c58      	adds	r0, r3, #1
 8024aa4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8024aa8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8024aac:	1208      	asrs	r0, r1, #8
 8024aae:	b2db      	uxtb	r3, r3
 8024ab0:	1215      	asrs	r5, r2, #8
 8024ab2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024ab6:	fb10 f003 	smulbb	r0, r0, r3
 8024aba:	10cf      	asrs	r7, r1, #3
 8024abc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024ac0:	00c9      	lsls	r1, r1, #3
 8024ac2:	fb05 0504 	mla	r5, r5, r4, r0
 8024ac6:	b2c9      	uxtb	r1, r1
 8024ac8:	10d0      	asrs	r0, r2, #3
 8024aca:	00d2      	lsls	r2, r2, #3
 8024acc:	fb11 f103 	smulbb	r1, r1, r3
 8024ad0:	b2d2      	uxtb	r2, r2
 8024ad2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8024ad6:	fb02 1204 	mla	r2, r2, r4, r1
 8024ada:	fb17 f703 	smulbb	r7, r7, r3
 8024ade:	b2ad      	uxth	r5, r5
 8024ae0:	b292      	uxth	r2, r2
 8024ae2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024ae6:	fb00 7004 	mla	r0, r0, r4, r7
 8024aea:	1c6b      	adds	r3, r5, #1
 8024aec:	1c57      	adds	r7, r2, #1
 8024aee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024af2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024af6:	b280      	uxth	r0, r0
 8024af8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8024afc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024b00:	433d      	orrs	r5, r7
 8024b02:	1c47      	adds	r7, r0, #1
 8024b04:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024b08:	097f      	lsrs	r7, r7, #5
 8024b0a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024b0e:	433d      	orrs	r5, r7
 8024b10:	f8ae 5000 	strh.w	r5, [lr]
 8024b14:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024b16:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8024b18:	4413      	add	r3, r2
 8024b1a:	9321      	str	r3, [sp, #132]	; 0x84
 8024b1c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8024b1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b20:	441a      	add	r2, r3
 8024b22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024b24:	9222      	str	r2, [sp, #136]	; 0x88
 8024b26:	3b01      	subs	r3, #1
 8024b28:	f10e 0e02 	add.w	lr, lr, #2
 8024b2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8024b2e:	e61c      	b.n	802476a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8024b30:	fb08 f000 	mul.w	r0, r8, r0
 8024b34:	fb09 0303 	mla	r3, r9, r3, r0
 8024b38:	e6dc      	b.n	80248f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8024b3a:	46b9      	mov	r9, r7
 8024b3c:	e704      	b.n	8024948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8024b3e:	f1c2 0110 	rsb	r1, r2, #16
 8024b42:	437a      	muls	r2, r7
 8024b44:	fb09 2901 	mla	r9, r9, r1, r2
 8024b48:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024b4c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024b50:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024b54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024b58:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024b5c:	4302      	orrs	r2, r0
 8024b5e:	e795      	b.n	8024a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8024b60:	f8ae 2000 	strh.w	r2, [lr]
 8024b64:	e7d6      	b.n	8024b14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8024b66:	b017      	add	sp, #92	; 0x5c
 8024b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024b6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8024b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b70:	b085      	sub	sp, #20
 8024b72:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024b76:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024b7a:	9103      	str	r1, [sp, #12]
 8024b7c:	fb00 7406 	mla	r4, r0, r6, r7
 8024b80:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8024b84:	2800      	cmp	r0, #0
 8024b86:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8024b8a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8024b8e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024b92:	9501      	str	r5, [sp, #4]
 8024b94:	eb02 0904 	add.w	r9, r2, r4
 8024b98:	f2c0 8141 	blt.w	8024e1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8024b9c:	4583      	cmp	fp, r0
 8024b9e:	f340 813e 	ble.w	8024e1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8024ba2:	2f00      	cmp	r7, #0
 8024ba4:	f2c0 8137 	blt.w	8024e16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8024ba8:	42be      	cmp	r6, r7
 8024baa:	f340 8134 	ble.w	8024e16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8024bae:	f812 c004 	ldrb.w	ip, [r2, r4]
 8024bb2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8024bb6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024bba:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8024bbe:	4355      	muls	r5, r2
 8024bc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024bc4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8024bc8:	fb0c f203 	mul.w	r2, ip, r3
 8024bcc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8024bd0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8024bd4:	441d      	add	r5, r3
 8024bd6:	f102 0320 	add.w	r3, r2, #32
 8024bda:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024bde:	0a1b      	lsrs	r3, r3, #8
 8024be0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8024be4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024be8:	431c      	orrs	r4, r3
 8024bea:	1c7b      	adds	r3, r7, #1
 8024bec:	f100 811c 	bmi.w	8024e28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8024bf0:	429e      	cmp	r6, r3
 8024bf2:	f340 8119 	ble.w	8024e28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8024bf6:	2900      	cmp	r1, #0
 8024bf8:	f000 8119 	beq.w	8024e2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8024bfc:	9a01      	ldr	r2, [sp, #4]
 8024bfe:	f899 3001 	ldrb.w	r3, [r9, #1]
 8024c02:	8855      	ldrh	r5, [r2, #2]
 8024c04:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8024c08:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8024c0c:	fb08 f802 	mul.w	r8, r8, r2
 8024c10:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024c14:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8024c18:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8024c1c:	435d      	muls	r5, r3
 8024c1e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024c22:	44d0      	add	r8, sl
 8024c24:	f105 0a20 	add.w	sl, r5, #32
 8024c28:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8024c2c:	0a2d      	lsrs	r5, r5, #8
 8024c2e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8024c32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024c36:	432a      	orrs	r2, r5
 8024c38:	3001      	adds	r0, #1
 8024c3a:	f100 80fe 	bmi.w	8024e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8024c3e:	4583      	cmp	fp, r0
 8024c40:	f340 80fb 	ble.w	8024e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8024c44:	f1be 0f00 	cmp.w	lr, #0
 8024c48:	f000 80fc 	beq.w	8024e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8024c4c:	2f00      	cmp	r7, #0
 8024c4e:	f2c0 80f1 	blt.w	8024e34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024c52:	42be      	cmp	r6, r7
 8024c54:	f340 80ee 	ble.w	8024e34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024c58:	9801      	ldr	r0, [sp, #4]
 8024c5a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8024c5e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8024c62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024c66:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8024c6a:	fb0a fa00 	mul.w	sl, sl, r0
 8024c6e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024c72:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8024c76:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8024c7a:	fb05 f808 	mul.w	r8, r5, r8
 8024c7e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8024c82:	4482      	add	sl, r0
 8024c84:	f108 0020 	add.w	r0, r8, #32
 8024c88:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024c8c:	0a00      	lsrs	r0, r0, #8
 8024c8e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8024c92:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024c96:	ea4b 0b00 	orr.w	fp, fp, r0
 8024c9a:	3701      	adds	r7, #1
 8024c9c:	f100 80d7 	bmi.w	8024e4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024ca0:	42be      	cmp	r6, r7
 8024ca2:	f340 80d4 	ble.w	8024e4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024ca6:	2900      	cmp	r1, #0
 8024ca8:	f000 80d4 	beq.w	8024e54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8024cac:	3601      	adds	r6, #1
 8024cae:	9801      	ldr	r0, [sp, #4]
 8024cb0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024cb4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8024cb8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8024cbc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8024cc0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024cc4:	fb09 f906 	mul.w	r9, r9, r6
 8024cc8:	fb07 f800 	mul.w	r8, r7, r0
 8024ccc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8024cd0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8024cd4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8024cd8:	44d1      	add	r9, sl
 8024cda:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8024cde:	f108 0020 	add.w	r0, r8, #32
 8024ce2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024ce6:	0a00      	lsrs	r0, r0, #8
 8024ce8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024cec:	4330      	orrs	r0, r6
 8024cee:	b28e      	uxth	r6, r1
 8024cf0:	fa1f f98e 	uxth.w	r9, lr
 8024cf4:	fb06 f809 	mul.w	r8, r6, r9
 8024cf8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8024cfc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8024d00:	0136      	lsls	r6, r6, #4
 8024d02:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024d06:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8024d0a:	9601      	str	r6, [sp, #4]
 8024d0c:	ea4a 0404 	orr.w	r4, sl, r4
 8024d10:	fa1f f689 	uxth.w	r6, r9
 8024d14:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024d18:	fb11 f90e 	smulbb	r9, r1, lr
 8024d1c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8024d20:	9602      	str	r6, [sp, #8]
 8024d22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024d26:	4626      	mov	r6, r4
 8024d28:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024d2c:	f1ce 0410 	rsb	r4, lr, #16
 8024d30:	1a64      	subs	r4, r4, r1
 8024d32:	ea4a 0202 	orr.w	r2, sl, r2
 8024d36:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8024d3a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8024d3e:	434a      	muls	r2, r1
 8024d40:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024d44:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024d48:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024d4c:	fb04 2406 	mla	r4, r4, r6, r2
 8024d50:	ea4a 0000 	orr.w	r0, sl, r0
 8024d54:	fb09 4200 	mla	r2, r9, r0, r4
 8024d58:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8024d5c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024d60:	9801      	ldr	r0, [sp, #4]
 8024d62:	9903      	ldr	r1, [sp, #12]
 8024d64:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024d68:	ea44 0b0b 	orr.w	fp, r4, fp
 8024d6c:	9c02      	ldr	r4, [sp, #8]
 8024d6e:	8809      	ldrh	r1, [r1, #0]
 8024d70:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8024d74:	1b00      	subs	r0, r0, r4
 8024d76:	9c01      	ldr	r4, [sp, #4]
 8024d78:	eba4 0608 	sub.w	r6, r4, r8
 8024d7c:	b2b6      	uxth	r6, r6
 8024d7e:	b280      	uxth	r0, r0
 8024d80:	4373      	muls	r3, r6
 8024d82:	fb0c 3300 	mla	r3, ip, r0, r3
 8024d86:	9802      	ldr	r0, [sp, #8]
 8024d88:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8024d8c:	fb00 3505 	mla	r5, r0, r5, r3
 8024d90:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8024d94:	fb08 5707 	mla	r7, r8, r7, r5
 8024d98:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024d9c:	120b      	asrs	r3, r1, #8
 8024d9e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024da2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8024da6:	b2ff      	uxtb	r7, r7
 8024da8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024dac:	10c8      	asrs	r0, r1, #3
 8024dae:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024db2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024db6:	00c9      	lsls	r1, r1, #3
 8024db8:	437b      	muls	r3, r7
 8024dba:	ea42 0e0e 	orr.w	lr, r2, lr
 8024dbe:	b2c9      	uxtb	r1, r1
 8024dc0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024dc4:	fa1f f28e 	uxth.w	r2, lr
 8024dc8:	4378      	muls	r0, r7
 8024dca:	434f      	muls	r7, r1
 8024dcc:	1c59      	adds	r1, r3, #1
 8024dce:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024dd2:	1213      	asrs	r3, r2, #8
 8024dd4:	f023 0307 	bic.w	r3, r3, #7
 8024dd8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024ddc:	1c41      	adds	r1, r0, #1
 8024dde:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024de2:	10d1      	asrs	r1, r2, #3
 8024de4:	f021 0103 	bic.w	r1, r1, #3
 8024de8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024dec:	021b      	lsls	r3, r3, #8
 8024dee:	00c9      	lsls	r1, r1, #3
 8024df0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024df4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024df8:	430b      	orrs	r3, r1
 8024dfa:	1c79      	adds	r1, r7, #1
 8024dfc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8024e00:	00d2      	lsls	r2, r2, #3
 8024e02:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024e06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024e0a:	431a      	orrs	r2, r3
 8024e0c:	9b03      	ldr	r3, [sp, #12]
 8024e0e:	801a      	strh	r2, [r3, #0]
 8024e10:	b005      	add	sp, #20
 8024e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024e16:	f04f 0c00 	mov.w	ip, #0
 8024e1a:	4664      	mov	r4, ip
 8024e1c:	e6e5      	b.n	8024bea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8024e1e:	2300      	movs	r3, #0
 8024e20:	469c      	mov	ip, r3
 8024e22:	461a      	mov	r2, r3
 8024e24:	461c      	mov	r4, r3
 8024e26:	e707      	b.n	8024c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024e28:	2300      	movs	r3, #0
 8024e2a:	461a      	mov	r2, r3
 8024e2c:	e704      	b.n	8024c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024e2e:	460b      	mov	r3, r1
 8024e30:	460a      	mov	r2, r1
 8024e32:	e701      	b.n	8024c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024e34:	2500      	movs	r5, #0
 8024e36:	46ab      	mov	fp, r5
 8024e38:	e72f      	b.n	8024c9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8024e3a:	2700      	movs	r7, #0
 8024e3c:	463d      	mov	r5, r7
 8024e3e:	4638      	mov	r0, r7
 8024e40:	46bb      	mov	fp, r7
 8024e42:	e754      	b.n	8024cee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024e44:	4677      	mov	r7, lr
 8024e46:	4675      	mov	r5, lr
 8024e48:	4670      	mov	r0, lr
 8024e4a:	46f3      	mov	fp, lr
 8024e4c:	e74f      	b.n	8024cee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024e4e:	2700      	movs	r7, #0
 8024e50:	4638      	mov	r0, r7
 8024e52:	e74c      	b.n	8024cee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024e54:	460f      	mov	r7, r1
 8024e56:	4608      	mov	r0, r1
 8024e58:	e749      	b.n	8024cee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08024e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e60:	b093      	sub	sp, #76	; 0x4c
 8024e62:	9210      	str	r2, [sp, #64]	; 0x40
 8024e64:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024e66:	910e      	str	r1, [sp, #56]	; 0x38
 8024e68:	9306      	str	r3, [sp, #24]
 8024e6a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024e6e:	9011      	str	r0, [sp, #68]	; 0x44
 8024e70:	6850      	ldr	r0, [r2, #4]
 8024e72:	6812      	ldr	r2, [r2, #0]
 8024e74:	fb00 1303 	mla	r3, r0, r3, r1
 8024e78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024e7c:	9307      	str	r3, [sp, #28]
 8024e7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e80:	681b      	ldr	r3, [r3, #0]
 8024e82:	9308      	str	r3, [sp, #32]
 8024e84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e86:	685b      	ldr	r3, [r3, #4]
 8024e88:	9309      	str	r3, [sp, #36]	; 0x24
 8024e8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024e8c:	2b00      	cmp	r3, #0
 8024e8e:	dc03      	bgt.n	8024e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024e90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024e92:	2b00      	cmp	r3, #0
 8024e94:	f340 83b4 	ble.w	8025600 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024e98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024ea2:	1e48      	subs	r0, r1, #1
 8024ea4:	1e55      	subs	r5, r2, #1
 8024ea6:	9b06      	ldr	r3, [sp, #24]
 8024ea8:	2b00      	cmp	r3, #0
 8024eaa:	f340 8163 	ble.w	8025174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8024eae:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8024eb0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024eb2:	1436      	asrs	r6, r6, #16
 8024eb4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024eb8:	d406      	bmi.n	8024ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024eba:	4286      	cmp	r6, r0
 8024ebc:	da04      	bge.n	8024ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024ebe:	2b00      	cmp	r3, #0
 8024ec0:	db02      	blt.n	8024ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024ec2:	42ab      	cmp	r3, r5
 8024ec4:	f2c0 8157 	blt.w	8025176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8024ec8:	3601      	adds	r6, #1
 8024eca:	f100 8144 	bmi.w	8025156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024ece:	42b1      	cmp	r1, r6
 8024ed0:	f2c0 8141 	blt.w	8025156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024ed4:	3301      	adds	r3, #1
 8024ed6:	f100 813e 	bmi.w	8025156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024eda:	429a      	cmp	r2, r3
 8024edc:	f2c0 813b 	blt.w	8025156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024ee0:	9b06      	ldr	r3, [sp, #24]
 8024ee2:	9f07      	ldr	r7, [sp, #28]
 8024ee4:	930f      	str	r3, [sp, #60]	; 0x3c
 8024ee6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024eea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024eec:	2b00      	cmp	r3, #0
 8024eee:	f340 8164 	ble.w	80251ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8024ef2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024ef4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8024ef6:	1418      	asrs	r0, r3, #16
 8024ef8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024efa:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8024efe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024f00:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024f04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f06:	142d      	asrs	r5, r5, #16
 8024f08:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8024f0c:	f100 81ee 	bmi.w	80252ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024f10:	f102 3eff 	add.w	lr, r2, #4294967295
 8024f14:	4575      	cmp	r5, lr
 8024f16:	f280 81e9 	bge.w	80252ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024f1a:	2800      	cmp	r0, #0
 8024f1c:	f2c0 81e6 	blt.w	80252ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024f20:	f103 3eff 	add.w	lr, r3, #4294967295
 8024f24:	4570      	cmp	r0, lr
 8024f26:	f280 81e1 	bge.w	80252ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024f2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024f2c:	b212      	sxth	r2, r2
 8024f2e:	fb00 5002 	mla	r0, r0, r2, r5
 8024f32:	fa1f fe81 	uxth.w	lr, r1
 8024f36:	eb03 0a00 	add.w	sl, r3, r0
 8024f3a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8024f3e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8024f42:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024f46:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8024f4a:	b29b      	uxth	r3, r3
 8024f4c:	f1bc 0f00 	cmp.w	ip, #0
 8024f50:	f000 8179 	beq.w	8025246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8024f54:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024f58:	940a      	str	r4, [sp, #40]	; 0x28
 8024f5a:	eb0a 0b02 	add.w	fp, sl, r2
 8024f5e:	fa1f fa8c 	uxth.w	sl, ip
 8024f62:	fb0a fe0e 	mul.w	lr, sl, lr
 8024f66:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8024f6a:	fa1f fa8a 	uxth.w	sl, sl
 8024f6e:	eba5 050e 	sub.w	r5, r5, lr
 8024f72:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024f76:	940b      	str	r4, [sp, #44]	; 0x2c
 8024f78:	eba3 030a 	sub.w	r3, r3, sl
 8024f7c:	b2ad      	uxth	r5, r5
 8024f7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024f80:	b29b      	uxth	r3, r3
 8024f82:	fb08 f505 	mul.w	r5, r8, r5
 8024f86:	fb09 5303 	mla	r3, r9, r3, r5
 8024f8a:	fb0a 3304 	mla	r3, sl, r4, r3
 8024f8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024f90:	fb0e 3304 	mla	r3, lr, r4, r3
 8024f94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f98:	2b00      	cmp	r3, #0
 8024f9a:	f000 80cf 	beq.w	802513c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024f9e:	9c08      	ldr	r4, [sp, #32]
 8024fa0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024fa4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024fa8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8024fac:	f000 8150 	beq.w	8025250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024fb0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024fb4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024fb8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024fbc:	fb09 f000 	mul.w	r0, r9, r0
 8024fc0:	fb0a fe0e 	mul.w	lr, sl, lr
 8024fc4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024fc8:	f100 0b20 	add.w	fp, r0, #32
 8024fcc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8024fd0:	44ce      	add	lr, r9
 8024fd2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024fd6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024fda:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024fde:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024fe2:	ea4e 0909 	orr.w	r9, lr, r9
 8024fe6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024fea:	8868      	ldrh	r0, [r5, #2]
 8024fec:	d019      	beq.n	8025022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8024fee:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024ff2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024ff6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024ffa:	fb08 f800 	mul.w	r8, r8, r0
 8024ffe:	fb0a fe0e 	mul.w	lr, sl, lr
 8025002:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025006:	f108 0b20 	add.w	fp, r8, #32
 802500a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802500e:	4486      	add	lr, r0
 8025010:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025014:	0a00      	lsrs	r0, r0, #8
 8025016:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802501a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802501e:	ea4e 0000 	orr.w	r0, lr, r0
 8025022:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025026:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802502a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802502e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025032:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025036:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802503a:	ea4e 0909 	orr.w	r9, lr, r9
 802503e:	ea4a 0000 	orr.w	r0, sl, r0
 8025042:	f1bc 0f00 	cmp.w	ip, #0
 8025046:	f000 8105 	beq.w	8025254 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802504a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802504e:	3a01      	subs	r2, #1
 8025050:	0052      	lsls	r2, r2, #1
 8025052:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025054:	3202      	adds	r2, #2
 8025056:	2cff      	cmp	r4, #255	; 0xff
 8025058:	eb05 0e02 	add.w	lr, r5, r2
 802505c:	5aaa      	ldrh	r2, [r5, r2]
 802505e:	d018      	beq.n	8025092 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025060:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025064:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025068:	fb04 fa02 	mul.w	sl, r4, r2
 802506c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025070:	fb08 f805 	mul.w	r8, r8, r5
 8025074:	f10a 0520 	add.w	r5, sl, #32
 8025078:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802507c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025080:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025084:	4442      	add	r2, r8
 8025086:	0a2d      	lsrs	r5, r5, #8
 8025088:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802508c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025090:	432a      	orrs	r2, r5
 8025092:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025094:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025098:	2cff      	cmp	r4, #255	; 0xff
 802509a:	d01a      	beq.n	80250d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802509c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80250a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80250a4:	fb04 fa05 	mul.w	sl, r4, r5
 80250a8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80250ac:	fb08 f80e 	mul.w	r8, r8, lr
 80250b0:	f10a 0e20 	add.w	lr, sl, #32
 80250b4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80250b8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80250bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80250c0:	4445      	add	r5, r8
 80250c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80250c6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80250ca:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80250ce:	ea45 050e 	orr.w	r5, r5, lr
 80250d2:	fb1c fe01 	smulbb	lr, ip, r1
 80250d6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80250da:	f1cc 0810 	rsb	r8, ip, #16
 80250de:	eba8 0801 	sub.w	r8, r8, r1
 80250e2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80250e6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80250ea:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80250ee:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80250f2:	4341      	muls	r1, r0
 80250f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80250f8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80250fc:	ea4a 0202 	orr.w	r2, sl, r2
 8025100:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8025104:	fb09 1108 	mla	r1, r9, r8, r1
 8025108:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802510c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025110:	fb0c 1102 	mla	r1, ip, r2, r1
 8025114:	ea4b 0505 	orr.w	r5, fp, r5
 8025118:	fb0e 1e05 	mla	lr, lr, r5, r1
 802511c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025120:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025124:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025128:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802512c:	ea42 0e0e 	orr.w	lr, r2, lr
 8025130:	fa1f f28e 	uxth.w	r2, lr
 8025134:	2bff      	cmp	r3, #255	; 0xff
 8025136:	f040 80a1 	bne.w	802527c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802513a:	803a      	strh	r2, [r7, #0]
 802513c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802513e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8025140:	4413      	add	r3, r2
 8025142:	931d      	str	r3, [sp, #116]	; 0x74
 8025144:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8025146:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025148:	441a      	add	r2, r3
 802514a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802514c:	921e      	str	r2, [sp, #120]	; 0x78
 802514e:	3b01      	subs	r3, #1
 8025150:	3702      	adds	r7, #2
 8025152:	930f      	str	r3, [sp, #60]	; 0x3c
 8025154:	e6c9      	b.n	8024eea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025156:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025158:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802515a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802515c:	4433      	add	r3, r6
 802515e:	931d      	str	r3, [sp, #116]	; 0x74
 8025160:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025162:	441c      	add	r4, r3
 8025164:	9b06      	ldr	r3, [sp, #24]
 8025166:	941e      	str	r4, [sp, #120]	; 0x78
 8025168:	3b01      	subs	r3, #1
 802516a:	9306      	str	r3, [sp, #24]
 802516c:	9b07      	ldr	r3, [sp, #28]
 802516e:	3302      	adds	r3, #2
 8025170:	9307      	str	r3, [sp, #28]
 8025172:	e698      	b.n	8024ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8025174:	d028      	beq.n	80251c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025176:	9b06      	ldr	r3, [sp, #24]
 8025178:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802517a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802517c:	3b01      	subs	r3, #1
 802517e:	fb00 5003 	mla	r0, r0, r3, r5
 8025182:	1400      	asrs	r0, r0, #16
 8025184:	f53f aeac 	bmi.w	8024ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025188:	3901      	subs	r1, #1
 802518a:	4288      	cmp	r0, r1
 802518c:	f6bf aea8 	bge.w	8024ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025190:	9920      	ldr	r1, [sp, #128]	; 0x80
 8025192:	981e      	ldr	r0, [sp, #120]	; 0x78
 8025194:	fb01 0303 	mla	r3, r1, r3, r0
 8025198:	141b      	asrs	r3, r3, #16
 802519a:	f53f aea1 	bmi.w	8024ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802519e:	3a01      	subs	r2, #1
 80251a0:	4293      	cmp	r3, r2
 80251a2:	f6bf ae9d 	bge.w	8024ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80251a6:	9b06      	ldr	r3, [sp, #24]
 80251a8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80251ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80251ae:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80251b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80251b4:	2b00      	cmp	r3, #0
 80251b6:	f300 80b6 	bgt.w	8025326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80251ba:	9b06      	ldr	r3, [sp, #24]
 80251bc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80251c0:	9b07      	ldr	r3, [sp, #28]
 80251c2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80251c6:	9307      	str	r3, [sp, #28]
 80251c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80251ca:	2b00      	cmp	r3, #0
 80251cc:	f340 8218 	ble.w	8025600 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80251d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80251d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80251d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80251dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80251de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80251e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80251e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80251ea:	eef0 6a62 	vmov.f32	s13, s5
 80251ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80251f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80251f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80251fa:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80251fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025202:	eef0 6a43 	vmov.f32	s13, s6
 8025206:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802520a:	ee12 2a90 	vmov	r2, s5
 802520e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025212:	fb92 f3f3 	sdiv	r3, r2, r3
 8025216:	ee13 2a10 	vmov	r2, s6
 802521a:	931f      	str	r3, [sp, #124]	; 0x7c
 802521c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802521e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025222:	9320      	str	r3, [sp, #128]	; 0x80
 8025224:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025226:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025228:	3b01      	subs	r3, #1
 802522a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802522e:	930e      	str	r3, [sp, #56]	; 0x38
 8025230:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025232:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8025236:	bf08      	it	eq
 8025238:	4613      	moveq	r3, r2
 802523a:	9306      	str	r3, [sp, #24]
 802523c:	eeb0 3a67 	vmov.f32	s6, s15
 8025240:	eef0 2a47 	vmov.f32	s5, s14
 8025244:	e621      	b.n	8024e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8025246:	fb08 f505 	mul.w	r5, r8, r5
 802524a:	fb09 5303 	mla	r3, r9, r3, r5
 802524e:	e6a1      	b.n	8024f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8025250:	4681      	mov	r9, r0
 8025252:	e6c8      	b.n	8024fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8025254:	f1c1 0210 	rsb	r2, r1, #16
 8025258:	4341      	muls	r1, r0
 802525a:	fb09 1902 	mla	r9, r9, r2, r1
 802525e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025262:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8025266:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802526a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802526e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025272:	ea42 0909 	orr.w	r9, r2, r9
 8025276:	fa1f f289 	uxth.w	r2, r9
 802527a:	e75b      	b.n	8025134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802527c:	f8b7 c000 	ldrh.w	ip, [r7]
 8025280:	43db      	mvns	r3, r3
 8025282:	ea4f 202c 	mov.w	r0, ip, asr #8
 8025286:	fa5f fe83 	uxtb.w	lr, r3
 802528a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802528e:	fb00 f00e 	mul.w	r0, r0, lr
 8025292:	1c41      	adds	r1, r0, #1
 8025294:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025298:	1211      	asrs	r1, r2, #8
 802529a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802529e:	f021 0107 	bic.w	r1, r1, #7
 80252a2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80252a6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80252aa:	48d7      	ldr	r0, [pc, #860]	; (8025608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80252ac:	fb05 f50e 	mul.w	r5, r5, lr
 80252b0:	b2c9      	uxtb	r1, r1
 80252b2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80252b6:	1c69      	adds	r1, r5, #1
 80252b8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80252bc:	10d1      	asrs	r1, r2, #3
 80252be:	f021 0103 	bic.w	r1, r1, #3
 80252c2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80252c6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80252ca:	b2db      	uxtb	r3, r3
 80252cc:	00c9      	lsls	r1, r1, #3
 80252ce:	fb03 f30e 	mul.w	r3, r3, lr
 80252d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80252d6:	4301      	orrs	r1, r0
 80252d8:	1c58      	adds	r0, r3, #1
 80252da:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80252de:	00d2      	lsls	r2, r2, #3
 80252e0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80252e4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80252e8:	430a      	orrs	r2, r1
 80252ea:	e726      	b.n	802513a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80252ec:	f115 0e01 	adds.w	lr, r5, #1
 80252f0:	f53f af24 	bmi.w	802513c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80252f4:	4572      	cmp	r2, lr
 80252f6:	f6ff af21 	blt.w	802513c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80252fa:	f110 0e01 	adds.w	lr, r0, #1
 80252fe:	f53f af1d 	bmi.w	802513c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025302:	4573      	cmp	r3, lr
 8025304:	f6ff af1a 	blt.w	802513c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025308:	b21b      	sxth	r3, r3
 802530a:	b212      	sxth	r2, r2
 802530c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8025310:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8025314:	9301      	str	r3, [sp, #4]
 8025316:	9200      	str	r2, [sp, #0]
 8025318:	4639      	mov	r1, r7
 802531a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802531e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025320:	f7ff fc24 	bl	8024b6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8025324:	e70a      	b.n	802513c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025326:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025328:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802532c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802532e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8025332:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025334:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025338:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802533a:	141f      	asrs	r7, r3, #16
 802533c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802533e:	141b      	asrs	r3, r3, #16
 8025340:	fb01 3707 	mla	r7, r1, r7, r3
 8025344:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025346:	fa1f fc82 	uxth.w	ip, r2
 802534a:	eb03 0a07 	add.w	sl, r3, r7
 802534e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025352:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025356:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802535a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802535e:	b29b      	uxth	r3, r3
 8025360:	2d00      	cmp	r5, #0
 8025362:	f000 80fe 	beq.w	8025562 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8025366:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802536a:	940c      	str	r4, [sp, #48]	; 0x30
 802536c:	eb0a 0b01 	add.w	fp, sl, r1
 8025370:	fa1f fa85 	uxth.w	sl, r5
 8025374:	fb0a fc0c 	mul.w	ip, sl, ip
 8025378:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802537c:	fa1f fa8a 	uxth.w	sl, sl
 8025380:	eba0 000c 	sub.w	r0, r0, ip
 8025384:	eba3 030a 	sub.w	r3, r3, sl
 8025388:	b280      	uxth	r0, r0
 802538a:	fb08 f000 	mul.w	r0, r8, r0
 802538e:	b29b      	uxth	r3, r3
 8025390:	fb09 0303 	mla	r3, r9, r3, r0
 8025394:	980c      	ldr	r0, [sp, #48]	; 0x30
 8025396:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802539a:	940d      	str	r4, [sp, #52]	; 0x34
 802539c:	fb0a 3300 	mla	r3, sl, r0, r3
 80253a0:	fb0c 3304 	mla	r3, ip, r4, r3
 80253a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80253a8:	2b00      	cmp	r3, #0
 80253aa:	f000 80cc 	beq.w	8025546 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80253ae:	9808      	ldr	r0, [sp, #32]
 80253b0:	9c08      	ldr	r4, [sp, #32]
 80253b2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80253b6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80253ba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80253be:	f000 80d5 	beq.w	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80253c2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80253c6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80253ca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80253ce:	fb09 f707 	mul.w	r7, r9, r7
 80253d2:	fb0a fc0c 	mul.w	ip, sl, ip
 80253d6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80253da:	f107 0b20 	add.w	fp, r7, #32
 80253de:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80253e2:	44cc      	add	ip, r9
 80253e4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80253e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80253ec:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80253f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80253f4:	ea4c 0909 	orr.w	r9, ip, r9
 80253f8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80253fc:	8847      	ldrh	r7, [r0, #2]
 80253fe:	d019      	beq.n	8025434 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8025400:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025404:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025408:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802540c:	fb08 f807 	mul.w	r8, r8, r7
 8025410:	fb0a fc0c 	mul.w	ip, sl, ip
 8025414:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025418:	f108 0b20 	add.w	fp, r8, #32
 802541c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025420:	44bc      	add	ip, r7
 8025422:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025426:	0a3f      	lsrs	r7, r7, #8
 8025428:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802542c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025430:	ea4c 0707 	orr.w	r7, ip, r7
 8025434:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8025438:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802543c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8025440:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025444:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025448:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802544c:	ea4c 0909 	orr.w	r9, ip, r9
 8025450:	ea4a 0707 	orr.w	r7, sl, r7
 8025454:	2d00      	cmp	r5, #0
 8025456:	f000 808b 	beq.w	8025570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802545a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802545e:	3901      	subs	r1, #1
 8025460:	0049      	lsls	r1, r1, #1
 8025462:	3102      	adds	r1, #2
 8025464:	eb00 0c01 	add.w	ip, r0, r1
 8025468:	5a41      	ldrh	r1, [r0, r1]
 802546a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802546c:	28ff      	cmp	r0, #255	; 0xff
 802546e:	d019      	beq.n	80254a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8025470:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8025472:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025476:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802547a:	fb04 fa01 	mul.w	sl, r4, r1
 802547e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025482:	fb08 f800 	mul.w	r8, r8, r0
 8025486:	f10a 0020 	add.w	r0, sl, #32
 802548a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802548e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025492:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025496:	4441      	add	r1, r8
 8025498:	0a00      	lsrs	r0, r0, #8
 802549a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802549e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80254a2:	4301      	orrs	r1, r0
 80254a4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254a6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80254aa:	2cff      	cmp	r4, #255	; 0xff
 80254ac:	d01a      	beq.n	80254e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80254ae:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80254b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80254b6:	fb04 fa00 	mul.w	sl, r4, r0
 80254ba:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80254be:	fb08 f80c 	mul.w	r8, r8, ip
 80254c2:	f10a 0c20 	add.w	ip, sl, #32
 80254c6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80254ca:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80254ce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80254d2:	4440      	add	r0, r8
 80254d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254d8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80254dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80254e0:	ea40 000c 	orr.w	r0, r0, ip
 80254e4:	fb15 fc02 	smulbb	ip, r5, r2
 80254e8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80254ec:	f1c5 0810 	rsb	r8, r5, #16
 80254f0:	eba8 0802 	sub.w	r8, r8, r2
 80254f4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80254f8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80254fc:	437a      	muls	r2, r7
 80254fe:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025502:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025506:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802550a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802550e:	fb09 2208 	mla	r2, r9, r8, r2
 8025512:	ea4a 0101 	orr.w	r1, sl, r1
 8025516:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802551a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802551e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025522:	fb05 2201 	mla	r2, r5, r1, r2
 8025526:	ea4b 0000 	orr.w	r0, fp, r0
 802552a:	fb0c 2200 	mla	r2, ip, r0, r2
 802552e:	0d57      	lsrs	r7, r2, #21
 8025530:	0952      	lsrs	r2, r2, #5
 8025532:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025536:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802553a:	433a      	orrs	r2, r7
 802553c:	2bff      	cmp	r3, #255	; 0xff
 802553e:	b292      	uxth	r2, r2
 8025540:	d127      	bne.n	8025592 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8025542:	f8ae 2000 	strh.w	r2, [lr]
 8025546:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025548:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802554a:	4413      	add	r3, r2
 802554c:	931d      	str	r3, [sp, #116]	; 0x74
 802554e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8025550:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025552:	441a      	add	r2, r3
 8025554:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025556:	921e      	str	r2, [sp, #120]	; 0x78
 8025558:	3b01      	subs	r3, #1
 802555a:	f10e 0e02 	add.w	lr, lr, #2
 802555e:	930f      	str	r3, [sp, #60]	; 0x3c
 8025560:	e627      	b.n	80251b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025562:	fb08 f000 	mul.w	r0, r8, r0
 8025566:	fb09 0303 	mla	r3, r9, r3, r0
 802556a:	e71b      	b.n	80253a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802556c:	46b9      	mov	r9, r7
 802556e:	e743      	b.n	80253f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8025570:	f1c2 0110 	rsb	r1, r2, #16
 8025574:	437a      	muls	r2, r7
 8025576:	fb09 2901 	mla	r9, r9, r1, r2
 802557a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802557e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025582:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025586:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802558a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802558e:	4302      	orrs	r2, r0
 8025590:	e7d4      	b.n	802553c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8025592:	f8be 7000 	ldrh.w	r7, [lr]
 8025596:	4c1c      	ldr	r4, [pc, #112]	; (8025608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8025598:	43db      	mvns	r3, r3
 802559a:	1238      	asrs	r0, r7, #8
 802559c:	fa5f fc83 	uxtb.w	ip, r3
 80255a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80255a4:	10fd      	asrs	r5, r7, #3
 80255a6:	fb00 f00c 	mul.w	r0, r0, ip
 80255aa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80255ae:	fb05 f10c 	mul.w	r1, r5, ip
 80255b2:	1c45      	adds	r5, r0, #1
 80255b4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80255b8:	1215      	asrs	r5, r2, #8
 80255ba:	f025 0507 	bic.w	r5, r5, #7
 80255be:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80255c2:	1c4d      	adds	r5, r1, #1
 80255c4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80255c8:	10d1      	asrs	r1, r2, #3
 80255ca:	f021 0103 	bic.w	r1, r1, #3
 80255ce:	00fb      	lsls	r3, r7, #3
 80255d0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80255d4:	b2db      	uxtb	r3, r3
 80255d6:	b2c0      	uxtb	r0, r0
 80255d8:	00c9      	lsls	r1, r1, #3
 80255da:	fb03 f30c 	mul.w	r3, r3, ip
 80255de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80255e2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80255e6:	4308      	orrs	r0, r1
 80255e8:	1c59      	adds	r1, r3, #1
 80255ea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80255ee:	00d2      	lsls	r2, r2, #3
 80255f0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80255f4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80255f8:	4318      	orrs	r0, r3
 80255fa:	f8ae 0000 	strh.w	r0, [lr]
 80255fe:	e7a2      	b.n	8025546 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8025600:	b013      	add	sp, #76	; 0x4c
 8025602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025606:	bf00      	nop
 8025608:	fffff800 	.word	0xfffff800

0802560c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802560c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025610:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8025614:	fb05 4c03 	mla	ip, r5, r3, r4
 8025618:	2d00      	cmp	r5, #0
 802561a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802561e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8025622:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025626:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802562a:	8808      	ldrh	r0, [r1, #0]
 802562c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8025630:	f2c0 80a7 	blt.w	8025782 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8025634:	45aa      	cmp	sl, r5
 8025636:	f340 80a4 	ble.w	8025782 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802563a:	2c00      	cmp	r4, #0
 802563c:	f2c0 809f 	blt.w	802577e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8025640:	42a3      	cmp	r3, r4
 8025642:	f340 809c 	ble.w	802577e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8025646:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802564a:	1c62      	adds	r2, r4, #1
 802564c:	f100 809c 	bmi.w	8025788 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8025650:	4293      	cmp	r3, r2
 8025652:	f340 8099 	ble.w	8025788 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8025656:	f1b9 0f00 	cmp.w	r9, #0
 802565a:	f000 8095 	beq.w	8025788 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802565e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8025662:	3501      	adds	r5, #1
 8025664:	f100 8094 	bmi.w	8025790 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8025668:	45aa      	cmp	sl, r5
 802566a:	f340 8091 	ble.w	8025790 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802566e:	2f00      	cmp	r7, #0
 8025670:	f000 808e 	beq.w	8025790 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8025674:	2c00      	cmp	r4, #0
 8025676:	f2c0 8089 	blt.w	802578c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802567a:	42a3      	cmp	r3, r4
 802567c:	f340 8086 	ble.w	802578c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8025680:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8025684:	3401      	adds	r4, #1
 8025686:	f100 8086 	bmi.w	8025796 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802568a:	42a3      	cmp	r3, r4
 802568c:	f340 8083 	ble.w	8025796 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8025690:	f1b9 0f00 	cmp.w	r9, #0
 8025694:	d07f      	beq.n	8025796 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8025696:	3301      	adds	r3, #1
 8025698:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802569c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80256a0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80256a4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80256a8:	fb19 fe07 	smulbb	lr, r9, r7
 80256ac:	ea44 0808 	orr.w	r8, r4, r8
 80256b0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80256b4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80256b8:	f1c7 0210 	rsb	r2, r7, #16
 80256bc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80256c0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80256c4:	ea44 0c0c 	orr.w	ip, r4, ip
 80256c8:	eba2 0209 	sub.w	r2, r2, r9
 80256cc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80256d0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80256d4:	fb04 f40c 	mul.w	r4, r4, ip
 80256d8:	fb02 4808 	mla	r8, r2, r8, r4
 80256dc:	041a      	lsls	r2, r3, #16
 80256de:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80256e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80256e6:	4313      	orrs	r3, r2
 80256e8:	042a      	lsls	r2, r5, #16
 80256ea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80256ee:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80256f2:	fb0e 8303 	mla	r3, lr, r3, r8
 80256f6:	432a      	orrs	r2, r5
 80256f8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80256fc:	fb07 3202 	mla	r2, r7, r2, r3
 8025700:	0d53      	lsrs	r3, r2, #21
 8025702:	0952      	lsrs	r2, r2, #5
 8025704:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025708:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802570c:	431a      	orrs	r2, r3
 802570e:	b293      	uxth	r3, r2
 8025710:	b2b4      	uxth	r4, r6
 8025712:	1202      	asrs	r2, r0, #8
 8025714:	43f6      	mvns	r6, r6
 8025716:	b2f6      	uxtb	r6, r6
 8025718:	121d      	asrs	r5, r3, #8
 802571a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802571e:	fb12 f206 	smulbb	r2, r2, r6
 8025722:	10c7      	asrs	r7, r0, #3
 8025724:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025728:	00c0      	lsls	r0, r0, #3
 802572a:	fb05 2504 	mla	r5, r5, r4, r2
 802572e:	b2c0      	uxtb	r0, r0
 8025730:	10da      	asrs	r2, r3, #3
 8025732:	00db      	lsls	r3, r3, #3
 8025734:	b2db      	uxtb	r3, r3
 8025736:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802573a:	fb10 f006 	smulbb	r0, r0, r6
 802573e:	b2ad      	uxth	r5, r5
 8025740:	fb03 0004 	mla	r0, r3, r4, r0
 8025744:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025748:	fb17 f706 	smulbb	r7, r7, r6
 802574c:	b280      	uxth	r0, r0
 802574e:	1c6b      	adds	r3, r5, #1
 8025750:	fb02 7204 	mla	r2, r2, r4, r7
 8025754:	b292      	uxth	r2, r2
 8025756:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802575a:	1c43      	adds	r3, r0, #1
 802575c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8025760:	1c50      	adds	r0, r2, #1
 8025762:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8025766:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802576a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802576e:	0952      	lsrs	r2, r2, #5
 8025770:	432b      	orrs	r3, r5
 8025772:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025776:	4313      	orrs	r3, r2
 8025778:	800b      	strh	r3, [r1, #0]
 802577a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802577e:	4680      	mov	r8, r0
 8025780:	e763      	b.n	802564a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8025782:	4684      	mov	ip, r0
 8025784:	4680      	mov	r8, r0
 8025786:	e76c      	b.n	8025662 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8025788:	4684      	mov	ip, r0
 802578a:	e76a      	b.n	8025662 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802578c:	4605      	mov	r5, r0
 802578e:	e779      	b.n	8025684 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8025790:	4603      	mov	r3, r0
 8025792:	4605      	mov	r5, r0
 8025794:	e782      	b.n	802569c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8025796:	4603      	mov	r3, r0
 8025798:	e780      	b.n	802569c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802579a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802579a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802579e:	b093      	sub	sp, #76	; 0x4c
 80257a0:	461d      	mov	r5, r3
 80257a2:	9210      	str	r2, [sp, #64]	; 0x40
 80257a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257a6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80257aa:	920b      	str	r2, [sp, #44]	; 0x2c
 80257ac:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80257b0:	910a      	str	r1, [sp, #40]	; 0x28
 80257b2:	6859      	ldr	r1, [r3, #4]
 80257b4:	681b      	ldr	r3, [r3, #0]
 80257b6:	9011      	str	r0, [sp, #68]	; 0x44
 80257b8:	fb01 2707 	mla	r7, r1, r7, r2
 80257bc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80257c0:	9307      	str	r3, [sp, #28]
 80257c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80257c4:	681b      	ldr	r3, [r3, #0]
 80257c6:	9309      	str	r3, [sp, #36]	; 0x24
 80257c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80257ca:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80257ce:	43db      	mvns	r3, r3
 80257d0:	b2db      	uxtb	r3, r3
 80257d2:	9308      	str	r3, [sp, #32]
 80257d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80257d6:	2b00      	cmp	r3, #0
 80257d8:	dc03      	bgt.n	80257e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80257da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80257dc:	2b00      	cmp	r3, #0
 80257de:	f340 8203 	ble.w	8025be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80257e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80257e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80257e8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80257ec:	1e48      	subs	r0, r1, #1
 80257ee:	f102 3cff 	add.w	ip, r2, #4294967295
 80257f2:	2d00      	cmp	r5, #0
 80257f4:	f340 80da 	ble.w	80259ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80257f8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80257fc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025800:	d406      	bmi.n	8025810 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8025802:	4586      	cmp	lr, r0
 8025804:	da04      	bge.n	8025810 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8025806:	2b00      	cmp	r3, #0
 8025808:	db02      	blt.n	8025810 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802580a:	4563      	cmp	r3, ip
 802580c:	f2c0 80cf 	blt.w	80259ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025810:	f11e 0e01 	adds.w	lr, lr, #1
 8025814:	f100 80c1 	bmi.w	802599a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8025818:	4571      	cmp	r1, lr
 802581a:	f2c0 80be 	blt.w	802599a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802581e:	3301      	adds	r3, #1
 8025820:	f100 80bb 	bmi.w	802599a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8025824:	429a      	cmp	r2, r3
 8025826:	f2c0 80b8 	blt.w	802599a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802582a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802582e:	46a9      	mov	r9, r5
 8025830:	f1b9 0f00 	cmp.w	r9, #0
 8025834:	f340 80d8 	ble.w	80259e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8025838:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802583a:	1421      	asrs	r1, r4, #16
 802583c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025840:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025844:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025848:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802584c:	f100 8111 	bmi.w	8025a72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025850:	f10e 3aff 	add.w	sl, lr, #4294967295
 8025854:	4551      	cmp	r1, sl
 8025856:	f280 810c 	bge.w	8025a72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802585a:	2800      	cmp	r0, #0
 802585c:	f2c0 8109 	blt.w	8025a72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025860:	f103 3aff 	add.w	sl, r3, #4294967295
 8025864:	4550      	cmp	r0, sl
 8025866:	f280 8104 	bge.w	8025a72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802586a:	fa0f f38e 	sxth.w	r3, lr
 802586e:	fb00 1103 	mla	r1, r0, r3, r1
 8025872:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025874:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8025878:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802587c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8025880:	f1bc 0f00 	cmp.w	ip, #0
 8025884:	d007      	beq.n	8025896 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8025886:	005b      	lsls	r3, r3, #1
 8025888:	eb0a 0003 	add.w	r0, sl, r3
 802588c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8025890:	930c      	str	r3, [sp, #48]	; 0x30
 8025892:	8843      	ldrh	r3, [r0, #2]
 8025894:	930d      	str	r3, [sp, #52]	; 0x34
 8025896:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802589a:	fb12 f30c 	smulbb	r3, r2, ip
 802589e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80258a2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80258a6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80258aa:	10db      	asrs	r3, r3, #3
 80258ac:	ea40 000e 	orr.w	r0, r0, lr
 80258b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80258b4:	f1cc 0e10 	rsb	lr, ip, #16
 80258b8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80258bc:	ebae 0e02 	sub.w	lr, lr, r2
 80258c0:	ea4a 0101 	orr.w	r1, sl, r1
 80258c4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80258c8:	4351      	muls	r1, r2
 80258ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80258cc:	9f08      	ldr	r7, [sp, #32]
 80258ce:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80258d2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80258d6:	0410      	lsls	r0, r2, #16
 80258d8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80258dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80258e0:	4310      	orrs	r0, r2
 80258e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80258e4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80258e6:	0412      	lsls	r2, r2, #16
 80258e8:	fb03 e000 	mla	r0, r3, r0, lr
 80258ec:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80258f0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80258f4:	ea42 020e 	orr.w	r2, r2, lr
 80258f8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80258fc:	fb03 0302 	mla	r3, r3, r2, r0
 8025900:	0d5a      	lsrs	r2, r3, #21
 8025902:	095b      	lsrs	r3, r3, #5
 8025904:	f8b8 0000 	ldrh.w	r0, [r8]
 8025908:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802590c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025910:	4313      	orrs	r3, r2
 8025912:	b29b      	uxth	r3, r3
 8025914:	1201      	asrs	r1, r0, #8
 8025916:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802591a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802591e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025922:	fb11 f107 	smulbb	r1, r1, r7
 8025926:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802592a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802592e:	00c0      	lsls	r0, r0, #3
 8025930:	fb0c 1c02 	mla	ip, ip, r2, r1
 8025934:	b2c0      	uxtb	r0, r0
 8025936:	10d9      	asrs	r1, r3, #3
 8025938:	00db      	lsls	r3, r3, #3
 802593a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802593e:	b2db      	uxtb	r3, r3
 8025940:	fb10 f007 	smulbb	r0, r0, r7
 8025944:	fa1f fc8c 	uxth.w	ip, ip
 8025948:	fb03 0302 	mla	r3, r3, r2, r0
 802594c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025950:	fb1e fe07 	smulbb	lr, lr, r7
 8025954:	fb01 e102 	mla	r1, r1, r2, lr
 8025958:	b29a      	uxth	r2, r3
 802595a:	f10c 0301 	add.w	r3, ip, #1
 802595e:	b289      	uxth	r1, r1
 8025960:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025964:	1c53      	adds	r3, r2, #1
 8025966:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802596a:	1c4a      	adds	r2, r1, #1
 802596c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025970:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8025974:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025978:	0949      	lsrs	r1, r1, #5
 802597a:	ea43 030c 	orr.w	r3, r3, ip
 802597e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025982:	430b      	orrs	r3, r1
 8025984:	f8a8 3000 	strh.w	r3, [r8]
 8025988:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802598a:	441c      	add	r4, r3
 802598c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802598e:	f108 0802 	add.w	r8, r8, #2
 8025992:	441e      	add	r6, r3
 8025994:	f109 39ff 	add.w	r9, r9, #4294967295
 8025998:	e74a      	b.n	8025830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802599a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802599c:	441c      	add	r4, r3
 802599e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259a0:	441e      	add	r6, r3
 80259a2:	9b07      	ldr	r3, [sp, #28]
 80259a4:	3302      	adds	r3, #2
 80259a6:	3d01      	subs	r5, #1
 80259a8:	9307      	str	r3, [sp, #28]
 80259aa:	e722      	b.n	80257f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80259ac:	d022      	beq.n	80259f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80259ae:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80259b0:	1e6b      	subs	r3, r5, #1
 80259b2:	fb00 4003 	mla	r0, r0, r3, r4
 80259b6:	1400      	asrs	r0, r0, #16
 80259b8:	f53f af37 	bmi.w	802582a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80259bc:	3901      	subs	r1, #1
 80259be:	4288      	cmp	r0, r1
 80259c0:	f6bf af33 	bge.w	802582a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80259c4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80259c6:	fb01 6303 	mla	r3, r1, r3, r6
 80259ca:	141b      	asrs	r3, r3, #16
 80259cc:	f53f af2d 	bmi.w	802582a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80259d0:	3a01      	subs	r2, #1
 80259d2:	4293      	cmp	r3, r2
 80259d4:	f6bf af29 	bge.w	802582a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80259d8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80259dc:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80259e0:	46a8      	mov	r8, r5
 80259e2:	f1b8 0f00 	cmp.w	r8, #0
 80259e6:	dc5e      	bgt.n	8025aa6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80259e8:	9b07      	ldr	r3, [sp, #28]
 80259ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80259ee:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80259f2:	9307      	str	r3, [sp, #28]
 80259f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80259f6:	2b00      	cmp	r3, #0
 80259f8:	f340 80f6 	ble.w	8025be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80259fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025a00:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025a04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025a08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025a0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025a0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025a12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025a16:	eef0 6a62 	vmov.f32	s13, s5
 8025a1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025a1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a22:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025a26:	ee16 4a90 	vmov	r4, s13
 8025a2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025a2e:	eef0 6a43 	vmov.f32	s13, s6
 8025a32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025a36:	ee12 2a90 	vmov	r2, s5
 8025a3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025a3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a42:	ee13 2a10 	vmov	r2, s6
 8025a46:	931f      	str	r3, [sp, #124]	; 0x7c
 8025a48:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025a4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a4e:	9320      	str	r3, [sp, #128]	; 0x80
 8025a50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025a52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025a54:	3b01      	subs	r3, #1
 8025a56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a5a:	930a      	str	r3, [sp, #40]	; 0x28
 8025a5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025a5e:	ee16 6a90 	vmov	r6, s13
 8025a62:	bf14      	ite	ne
 8025a64:	461d      	movne	r5, r3
 8025a66:	4615      	moveq	r5, r2
 8025a68:	eeb0 3a67 	vmov.f32	s6, s15
 8025a6c:	eef0 2a47 	vmov.f32	s5, s14
 8025a70:	e6b0      	b.n	80257d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025a72:	f111 0a01 	adds.w	sl, r1, #1
 8025a76:	d487      	bmi.n	8025988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025a78:	45d6      	cmp	lr, sl
 8025a7a:	db85      	blt.n	8025988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025a7c:	f110 0a01 	adds.w	sl, r0, #1
 8025a80:	d482      	bmi.n	8025988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025a82:	4553      	cmp	r3, sl
 8025a84:	db80      	blt.n	8025988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025a86:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8025a88:	9101      	str	r1, [sp, #4]
 8025a8a:	b21b      	sxth	r3, r3
 8025a8c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8025a90:	9300      	str	r3, [sp, #0]
 8025a92:	e9cd c704 	strd	ip, r7, [sp, #16]
 8025a96:	fa0f f38e 	sxth.w	r3, lr
 8025a9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025a9c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025a9e:	4641      	mov	r1, r8
 8025aa0:	f7ff fdb4 	bl	802560c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8025aa4:	e770      	b.n	8025988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025aa6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025aa8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8025aaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025aae:	1430      	asrs	r0, r6, #16
 8025ab0:	1423      	asrs	r3, r4, #16
 8025ab2:	fb01 3000 	mla	r0, r1, r0, r3
 8025ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025ab8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8025abc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8025ac0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025ac4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025ac8:	8858      	ldrh	r0, [r3, #2]
 8025aca:	f1be 0f00 	cmp.w	lr, #0
 8025ace:	d00b      	beq.n	8025ae8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8025ad0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025ad4:	3901      	subs	r1, #1
 8025ad6:	0049      	lsls	r1, r1, #1
 8025ad8:	3102      	adds	r1, #2
 8025ada:	eb03 0b01 	add.w	fp, r3, r1
 8025ade:	5a5b      	ldrh	r3, [r3, r1]
 8025ae0:	930e      	str	r3, [sp, #56]	; 0x38
 8025ae2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025ae6:	930f      	str	r3, [sp, #60]	; 0x3c
 8025ae8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8025aec:	fb12 f30e 	smulbb	r3, r2, lr
 8025af0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025af4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025af8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8025afc:	10db      	asrs	r3, r3, #3
 8025afe:	ea41 010c 	orr.w	r1, r1, ip
 8025b02:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025b06:	f1ce 0c10 	rsb	ip, lr, #16
 8025b0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025b0e:	ebac 0c02 	sub.w	ip, ip, r2
 8025b12:	ea4b 0000 	orr.w	r0, fp, r0
 8025b16:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025b1a:	4350      	muls	r0, r2
 8025b1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025b1e:	9f08      	ldr	r7, [sp, #32]
 8025b20:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8025b24:	fb0c 0c01 	mla	ip, ip, r1, r0
 8025b28:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025b2c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8025b30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025b32:	980e      	ldr	r0, [sp, #56]	; 0x38
 8025b34:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025b38:	0412      	lsls	r2, r2, #16
 8025b3a:	ea4b 0101 	orr.w	r1, fp, r1
 8025b3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025b42:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025b46:	fb03 c101 	mla	r1, r3, r1, ip
 8025b4a:	4302      	orrs	r2, r0
 8025b4c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8025b50:	fb03 1202 	mla	r2, r3, r2, r1
 8025b54:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8025b58:	0952      	lsrs	r2, r2, #5
 8025b5a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8025b5e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8025b62:	f8b9 2000 	ldrh.w	r2, [r9]
 8025b66:	ea4b 0303 	orr.w	r3, fp, r3
 8025b6a:	b29b      	uxth	r3, r3
 8025b6c:	1211      	asrs	r1, r2, #8
 8025b6e:	1218      	asrs	r0, r3, #8
 8025b70:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025b74:	fb11 f107 	smulbb	r1, r1, r7
 8025b78:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8025b7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b80:	00d2      	lsls	r2, r2, #3
 8025b82:	fb00 100a 	mla	r0, r0, sl, r1
 8025b86:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8025b8a:	10d9      	asrs	r1, r3, #3
 8025b8c:	b2d2      	uxtb	r2, r2
 8025b8e:	00db      	lsls	r3, r3, #3
 8025b90:	fb1c fc07 	smulbb	ip, ip, r7
 8025b94:	fb12 f207 	smulbb	r2, r2, r7
 8025b98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025b9c:	b2db      	uxtb	r3, r3
 8025b9e:	b280      	uxth	r0, r0
 8025ba0:	fb01 c10a 	mla	r1, r1, sl, ip
 8025ba4:	fb03 230a 	mla	r3, r3, sl, r2
 8025ba8:	b29b      	uxth	r3, r3
 8025baa:	b289      	uxth	r1, r1
 8025bac:	1c42      	adds	r2, r0, #1
 8025bae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025bb2:	f101 0c01 	add.w	ip, r1, #1
 8025bb6:	1c5a      	adds	r2, r3, #1
 8025bb8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025bbc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8025bc0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025bc2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025bc6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025bca:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025bce:	4310      	orrs	r0, r2
 8025bd0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025bd4:	441c      	add	r4, r3
 8025bd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025bd8:	ea40 000c 	orr.w	r0, r0, ip
 8025bdc:	f829 0b02 	strh.w	r0, [r9], #2
 8025be0:	441e      	add	r6, r3
 8025be2:	f108 38ff 	add.w	r8, r8, #4294967295
 8025be6:	e6fc      	b.n	80259e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8025be8:	b013      	add	sp, #76	; 0x4c
 8025bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025bee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8025bee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8025bf2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8025bf6:	fb0e 4703 	mla	r7, lr, r3, r4
 8025bfa:	f1be 0f00 	cmp.w	lr, #0
 8025bfe:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8025c02:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8025c06:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8025c0a:	8808      	ldrh	r0, [r1, #0]
 8025c0c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8025c10:	db60      	blt.n	8025cd4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8025c12:	45f1      	cmp	r9, lr
 8025c14:	dd5e      	ble.n	8025cd4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8025c16:	2c00      	cmp	r4, #0
 8025c18:	db5a      	blt.n	8025cd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8025c1a:	42a3      	cmp	r3, r4
 8025c1c:	dd58      	ble.n	8025cd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8025c1e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8025c22:	1c62      	adds	r2, r4, #1
 8025c24:	d459      	bmi.n	8025cda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025c26:	4293      	cmp	r3, r2
 8025c28:	dd57      	ble.n	8025cda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025c2a:	2d00      	cmp	r5, #0
 8025c2c:	d055      	beq.n	8025cda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025c2e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8025c32:	f11e 0e01 	adds.w	lr, lr, #1
 8025c36:	d454      	bmi.n	8025ce2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025c38:	45f1      	cmp	r9, lr
 8025c3a:	dd52      	ble.n	8025ce2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025c3c:	2e00      	cmp	r6, #0
 8025c3e:	d050      	beq.n	8025ce2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025c40:	2c00      	cmp	r4, #0
 8025c42:	db4c      	blt.n	8025cde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025c44:	42a3      	cmp	r3, r4
 8025c46:	dd4a      	ble.n	8025cde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025c48:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8025c4c:	3401      	adds	r4, #1
 8025c4e:	d405      	bmi.n	8025c5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025c50:	42a3      	cmp	r3, r4
 8025c52:	dd03      	ble.n	8025c5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025c54:	b115      	cbz	r5, 8025c5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025c56:	3301      	adds	r3, #1
 8025c58:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8025c5c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8025c60:	fb15 f406 	smulbb	r4, r5, r6
 8025c64:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8025c68:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8025c6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025c70:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025c74:	ea43 0c0c 	orr.w	ip, r3, ip
 8025c78:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025c7c:	f1c6 0310 	rsb	r3, r6, #16
 8025c80:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8025c84:	1b5b      	subs	r3, r3, r5
 8025c86:	ea4e 0707 	orr.w	r7, lr, r7
 8025c8a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8025c8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025c92:	437d      	muls	r5, r7
 8025c94:	fb03 5c0c 	mla	ip, r3, ip, r5
 8025c98:	0403      	lsls	r3, r0, #16
 8025c9a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8025c9e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025ca2:	4318      	orrs	r0, r3
 8025ca4:	0413      	lsls	r3, r2, #16
 8025ca6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8025caa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025cae:	4313      	orrs	r3, r2
 8025cb0:	fb04 c000 	mla	r0, r4, r0, ip
 8025cb4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8025cb8:	fb06 0003 	mla	r0, r6, r3, r0
 8025cbc:	0d43      	lsrs	r3, r0, #21
 8025cbe:	0940      	lsrs	r0, r0, #5
 8025cc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025cc4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025cc8:	4318      	orrs	r0, r3
 8025cca:	8008      	strh	r0, [r1, #0]
 8025ccc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025cd0:	4684      	mov	ip, r0
 8025cd2:	e7a6      	b.n	8025c22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8025cd4:	4607      	mov	r7, r0
 8025cd6:	4684      	mov	ip, r0
 8025cd8:	e7ab      	b.n	8025c32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8025cda:	4607      	mov	r7, r0
 8025cdc:	e7a9      	b.n	8025c32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8025cde:	4602      	mov	r2, r0
 8025ce0:	e7b4      	b.n	8025c4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8025ce2:	4602      	mov	r2, r0
 8025ce4:	e7ba      	b.n	8025c5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08025ce6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025ce6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025cea:	b08f      	sub	sp, #60	; 0x3c
 8025cec:	461d      	mov	r5, r3
 8025cee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025cf0:	920c      	str	r2, [sp, #48]	; 0x30
 8025cf2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8025cf6:	9107      	str	r1, [sp, #28]
 8025cf8:	6859      	ldr	r1, [r3, #4]
 8025cfa:	681b      	ldr	r3, [r3, #0]
 8025cfc:	900d      	str	r0, [sp, #52]	; 0x34
 8025cfe:	fb01 2707 	mla	r7, r1, r7, r2
 8025d02:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8025d06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d08:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8025d0c:	f8d3 8000 	ldr.w	r8, [r3]
 8025d10:	9b07      	ldr	r3, [sp, #28]
 8025d12:	2b00      	cmp	r3, #0
 8025d14:	dc03      	bgt.n	8025d1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025d16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025d18:	2b00      	cmp	r3, #0
 8025d1a:	f340 8181 	ble.w	8026020 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025d1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025d24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025d28:	1e48      	subs	r0, r1, #1
 8025d2a:	f102 3cff 	add.w	ip, r2, #4294967295
 8025d2e:	2d00      	cmp	r5, #0
 8025d30:	f340 809b 	ble.w	8025e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8025d34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025d38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025d3c:	d406      	bmi.n	8025d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025d3e:	4586      	cmp	lr, r0
 8025d40:	da04      	bge.n	8025d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025d42:	2b00      	cmp	r3, #0
 8025d44:	db02      	blt.n	8025d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025d46:	4563      	cmp	r3, ip
 8025d48:	f2c0 8090 	blt.w	8025e6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025d4c:	f11e 0e01 	adds.w	lr, lr, #1
 8025d50:	f100 8084 	bmi.w	8025e5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025d54:	4571      	cmp	r1, lr
 8025d56:	f2c0 8081 	blt.w	8025e5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025d5a:	3301      	adds	r3, #1
 8025d5c:	d47e      	bmi.n	8025e5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025d5e:	429a      	cmp	r2, r3
 8025d60:	db7c      	blt.n	8025e5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025d62:	46aa      	mov	sl, r5
 8025d64:	46b9      	mov	r9, r7
 8025d66:	f1ba 0f00 	cmp.w	sl, #0
 8025d6a:	f340 8099 	ble.w	8025ea0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8025d6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025d70:	1421      	asrs	r1, r4, #16
 8025d72:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025d76:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025d7a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025d7e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025d82:	f100 80d0 	bmi.w	8025f26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025d86:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025d8a:	4559      	cmp	r1, fp
 8025d8c:	f280 80cb 	bge.w	8025f26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025d90:	2800      	cmp	r0, #0
 8025d92:	f2c0 80c8 	blt.w	8025f26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025d96:	f103 3bff 	add.w	fp, r3, #4294967295
 8025d9a:	4558      	cmp	r0, fp
 8025d9c:	f280 80c3 	bge.w	8025f26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025da0:	fa0f fe8e 	sxth.w	lr, lr
 8025da4:	fb00 110e 	mla	r1, r0, lr, r1
 8025da8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8025dac:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8025db0:	8841      	ldrh	r1, [r0, #2]
 8025db2:	f1bc 0f00 	cmp.w	ip, #0
 8025db6:	d00b      	beq.n	8025dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8025db8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8025dbc:	3b01      	subs	r3, #1
 8025dbe:	005b      	lsls	r3, r3, #1
 8025dc0:	3302      	adds	r3, #2
 8025dc2:	eb00 0e03 	add.w	lr, r0, r3
 8025dc6:	5ac3      	ldrh	r3, [r0, r3]
 8025dc8:	9308      	str	r3, [sp, #32]
 8025dca:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8025dce:	9309      	str	r3, [sp, #36]	; 0x24
 8025dd0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8025dd4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025dd8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025ddc:	ea40 000b 	orr.w	r0, r0, fp
 8025de0:	fb12 f30c 	smulbb	r3, r2, ip
 8025de4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025de8:	10db      	asrs	r3, r3, #3
 8025dea:	f1cc 0e10 	rsb	lr, ip, #16
 8025dee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025df2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025df6:	ebae 0e02 	sub.w	lr, lr, r2
 8025dfa:	ea4b 0101 	orr.w	r1, fp, r1
 8025dfe:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025e02:	4351      	muls	r1, r2
 8025e04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025e06:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8025e0a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8025e0e:	0410      	lsls	r0, r2, #16
 8025e10:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025e14:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025e18:	4310      	orrs	r0, r2
 8025e1a:	9a08      	ldr	r2, [sp, #32]
 8025e1c:	9908      	ldr	r1, [sp, #32]
 8025e1e:	0412      	lsls	r2, r2, #16
 8025e20:	fb03 e000 	mla	r0, r3, r0, lr
 8025e24:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025e28:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8025e2c:	ea42 020e 	orr.w	r2, r2, lr
 8025e30:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025e34:	fb03 0302 	mla	r3, r3, r2, r0
 8025e38:	0d5a      	lsrs	r2, r3, #21
 8025e3a:	095b      	lsrs	r3, r3, #5
 8025e3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e40:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025e44:	4313      	orrs	r3, r2
 8025e46:	f8a9 3000 	strh.w	r3, [r9]
 8025e4a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8025e4c:	441c      	add	r4, r3
 8025e4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025e50:	f109 0902 	add.w	r9, r9, #2
 8025e54:	441e      	add	r6, r3
 8025e56:	f10a 3aff 	add.w	sl, sl, #4294967295
 8025e5a:	e784      	b.n	8025d66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8025e5c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8025e5e:	441c      	add	r4, r3
 8025e60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025e62:	3d01      	subs	r5, #1
 8025e64:	441e      	add	r6, r3
 8025e66:	3702      	adds	r7, #2
 8025e68:	e761      	b.n	8025d2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025e6a:	d01d      	beq.n	8025ea8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8025e6c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8025e6e:	1e6b      	subs	r3, r5, #1
 8025e70:	fb00 4003 	mla	r0, r0, r3, r4
 8025e74:	1400      	asrs	r0, r0, #16
 8025e76:	f53f af74 	bmi.w	8025d62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025e7a:	3901      	subs	r1, #1
 8025e7c:	4288      	cmp	r0, r1
 8025e7e:	f6bf af70 	bge.w	8025d62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025e82:	991c      	ldr	r1, [sp, #112]	; 0x70
 8025e84:	fb01 6303 	mla	r3, r1, r3, r6
 8025e88:	141b      	asrs	r3, r3, #16
 8025e8a:	f53f af6a 	bmi.w	8025d62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025e8e:	3a01      	subs	r2, #1
 8025e90:	4293      	cmp	r3, r2
 8025e92:	f6bf af66 	bge.w	8025d62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025e96:	46a9      	mov	r9, r5
 8025e98:	46ba      	mov	sl, r7
 8025e9a:	f1b9 0f00 	cmp.w	r9, #0
 8025e9e:	dc5a      	bgt.n	8025f56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8025ea0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025ea4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8025ea8:	9b07      	ldr	r3, [sp, #28]
 8025eaa:	2b00      	cmp	r3, #0
 8025eac:	f340 80b8 	ble.w	8026020 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025eb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025eb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025eb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025ebc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025ebe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025ec2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025ec6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025eca:	eef0 6a62 	vmov.f32	s13, s5
 8025ece:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025ed2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025ed6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025eda:	ee16 4a90 	vmov	r4, s13
 8025ede:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025ee2:	eef0 6a43 	vmov.f32	s13, s6
 8025ee6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025eea:	ee12 2a90 	vmov	r2, s5
 8025eee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025ef2:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ef6:	ee13 2a10 	vmov	r2, s6
 8025efa:	931b      	str	r3, [sp, #108]	; 0x6c
 8025efc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025efe:	fb92 f3f3 	sdiv	r3, r2, r3
 8025f02:	931c      	str	r3, [sp, #112]	; 0x70
 8025f04:	9b07      	ldr	r3, [sp, #28]
 8025f06:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025f08:	3b01      	subs	r3, #1
 8025f0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025f0e:	9307      	str	r3, [sp, #28]
 8025f10:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025f12:	ee16 6a90 	vmov	r6, s13
 8025f16:	bf14      	ite	ne
 8025f18:	461d      	movne	r5, r3
 8025f1a:	4615      	moveq	r5, r2
 8025f1c:	eeb0 3a67 	vmov.f32	s6, s15
 8025f20:	eef0 2a47 	vmov.f32	s5, s14
 8025f24:	e6f4      	b.n	8025d10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8025f26:	f111 0b01 	adds.w	fp, r1, #1
 8025f2a:	d48e      	bmi.n	8025e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025f2c:	45de      	cmp	lr, fp
 8025f2e:	db8c      	blt.n	8025e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025f30:	f110 0b01 	adds.w	fp, r0, #1
 8025f34:	d489      	bmi.n	8025e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025f36:	455b      	cmp	r3, fp
 8025f38:	db87      	blt.n	8025e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025f3a:	b21b      	sxth	r3, r3
 8025f3c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8025f40:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8025f44:	9300      	str	r3, [sp, #0]
 8025f46:	4642      	mov	r2, r8
 8025f48:	fa0f f38e 	sxth.w	r3, lr
 8025f4c:	4649      	mov	r1, r9
 8025f4e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025f50:	f7ff fe4d 	bl	8025bee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8025f54:	e779      	b.n	8025e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025f56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025f58:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025f5c:	1420      	asrs	r0, r4, #16
 8025f5e:	1431      	asrs	r1, r6, #16
 8025f60:	fb03 0101 	mla	r1, r3, r1, r0
 8025f64:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8025f68:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025f6c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8025f70:	8841      	ldrh	r1, [r0, #2]
 8025f72:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025f76:	f1be 0f00 	cmp.w	lr, #0
 8025f7a:	d00b      	beq.n	8025f94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025f7c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8025f80:	3b01      	subs	r3, #1
 8025f82:	005b      	lsls	r3, r3, #1
 8025f84:	3302      	adds	r3, #2
 8025f86:	eb00 0b03 	add.w	fp, r0, r3
 8025f8a:	5ac3      	ldrh	r3, [r0, r3]
 8025f8c:	930a      	str	r3, [sp, #40]	; 0x28
 8025f8e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025f92:	930b      	str	r3, [sp, #44]	; 0x2c
 8025f94:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8025f98:	fb12 f30e 	smulbb	r3, r2, lr
 8025f9c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025fa0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025fa4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025fa8:	10db      	asrs	r3, r3, #3
 8025faa:	ea40 000c 	orr.w	r0, r0, ip
 8025fae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025fb2:	f1ce 0c10 	rsb	ip, lr, #16
 8025fb6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025fba:	ebac 0c02 	sub.w	ip, ip, r2
 8025fbe:	ea4b 0101 	orr.w	r1, fp, r1
 8025fc2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025fc6:	4351      	muls	r1, r2
 8025fc8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025fca:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8025fce:	fb0c 1c00 	mla	ip, ip, r0, r1
 8025fd2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025fd6:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8025fda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025fdc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8025fde:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025fe2:	0412      	lsls	r2, r2, #16
 8025fe4:	ea4b 0000 	orr.w	r0, fp, r0
 8025fe8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025fec:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8025ff0:	fb03 c000 	mla	r0, r3, r0, ip
 8025ff4:	ea42 0b0b 	orr.w	fp, r2, fp
 8025ff8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8025ffc:	fb03 000b 	mla	r0, r3, fp, r0
 8026000:	0d43      	lsrs	r3, r0, #21
 8026002:	0940      	lsrs	r0, r0, #5
 8026004:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026008:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802600c:	4318      	orrs	r0, r3
 802600e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026010:	f82a 0b02 	strh.w	r0, [sl], #2
 8026014:	441c      	add	r4, r3
 8026016:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026018:	f109 39ff 	add.w	r9, r9, #4294967295
 802601c:	441e      	add	r6, r3
 802601e:	e73c      	b.n	8025e9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8026020:	b00f      	add	sp, #60	; 0x3c
 8026022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8026026:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802602a:	b085      	sub	sp, #20
 802602c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8026030:	9102      	str	r1, [sp, #8]
 8026032:	2c00      	cmp	r4, #0
 8026034:	fb04 7103 	mla	r1, r4, r3, r7
 8026038:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802603c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026040:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8026044:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026048:	f2c0 811b 	blt.w	8026282 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802604c:	45a6      	cmp	lr, r4
 802604e:	f340 8118 	ble.w	8026282 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026052:	2f00      	cmp	r7, #0
 8026054:	f2c0 8113 	blt.w	802627e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026058:	42bb      	cmp	r3, r7
 802605a:	f340 8110 	ble.w	802627e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802605e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026062:	1c7a      	adds	r2, r7, #1
 8026064:	f100 8110 	bmi.w	8026288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026068:	4293      	cmp	r3, r2
 802606a:	f340 810d 	ble.w	8026288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802606e:	2e00      	cmp	r6, #0
 8026070:	f000 810c 	beq.w	802628c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8026074:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026078:	3401      	adds	r4, #1
 802607a:	f100 810b 	bmi.w	8026294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802607e:	45a6      	cmp	lr, r4
 8026080:	f340 8108 	ble.w	8026294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026084:	2800      	cmp	r0, #0
 8026086:	f000 8108 	beq.w	802629a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802608a:	2f00      	cmp	r7, #0
 802608c:	f2c0 8100 	blt.w	8026290 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026090:	42bb      	cmp	r3, r7
 8026092:	f340 80fd 	ble.w	8026290 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026096:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802609a:	3701      	adds	r7, #1
 802609c:	f100 8100 	bmi.w	80262a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80260a0:	42bb      	cmp	r3, r7
 80260a2:	f340 80fd 	ble.w	80262a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80260a6:	2e00      	cmp	r6, #0
 80260a8:	f000 80fc 	beq.w	80262a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80260ac:	3301      	adds	r3, #1
 80260ae:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80260b2:	b2b6      	uxth	r6, r6
 80260b4:	b280      	uxth	r0, r0
 80260b6:	fb00 fe06 	mul.w	lr, r0, r6
 80260ba:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80260be:	0136      	lsls	r6, r6, #4
 80260c0:	eba6 070e 	sub.w	r7, r6, lr
 80260c4:	b280      	uxth	r0, r0
 80260c6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80260ca:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80260ce:	b2bf      	uxth	r7, r7
 80260d0:	1a1b      	subs	r3, r3, r0
 80260d2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80260d6:	b29b      	uxth	r3, r3
 80260d8:	fb0a f607 	mul.w	r6, sl, r7
 80260dc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80260e0:	fb0b 6603 	mla	r6, fp, r3, r6
 80260e4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80260e8:	fb00 6609 	mla	r6, r0, r9, r6
 80260ec:	fb0e 6608 	mla	r6, lr, r8, r6
 80260f0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80260f4:	9600      	str	r6, [sp, #0]
 80260f6:	2e00      	cmp	r6, #0
 80260f8:	f000 80be 	beq.w	8026278 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80260fc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026100:	fb0b fc0c 	mul.w	ip, fp, ip
 8026104:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8026108:	fb0b f505 	mul.w	r5, fp, r5
 802610c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8026110:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8026114:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026118:	44dc      	add	ip, fp
 802611a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802611e:	9501      	str	r5, [sp, #4]
 8026120:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8026124:	9503      	str	r5, [sp, #12]
 8026126:	9d01      	ldr	r5, [sp, #4]
 8026128:	9e02      	ldr	r6, [sp, #8]
 802612a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802612e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8026132:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8026136:	fb0a fc0c 	mul.w	ip, sl, ip
 802613a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802613e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8026142:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8026146:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802614a:	4465      	add	r5, ip
 802614c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8026150:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8026154:	fb09 fc0c 	mul.w	ip, r9, ip
 8026158:	fb09 f904 	mul.w	r9, r9, r4
 802615c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8026160:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8026164:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8026168:	fb08 f404 	mul.w	r4, r8, r4
 802616c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8026170:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026174:	fb08 f802 	mul.w	r8, r8, r2
 8026178:	fb0a fa01 	mul.w	sl, sl, r1
 802617c:	0a22      	lsrs	r2, r4, #8
 802617e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8026182:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026186:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802618a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802618e:	4414      	add	r4, r2
 8026190:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026194:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8026198:	0a2d      	lsrs	r5, r5, #8
 802619a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802619e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80261a2:	9a03      	ldr	r2, [sp, #12]
 80261a4:	8836      	ldrh	r6, [r6, #0]
 80261a6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80261aa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80261ae:	437d      	muls	r5, r7
 80261b0:	4461      	add	r1, ip
 80261b2:	0a24      	lsrs	r4, r4, #8
 80261b4:	fb02 5503 	mla	r5, r2, r3, r5
 80261b8:	0a09      	lsrs	r1, r1, #8
 80261ba:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80261be:	fb04 540e 	mla	r4, r4, lr, r5
 80261c2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80261c6:	fb01 4100 	mla	r1, r1, r0, r4
 80261ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80261ce:	0a09      	lsrs	r1, r1, #8
 80261d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80261d4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80261d8:	fb07 f70a 	mul.w	r7, r7, sl
 80261dc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80261e0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80261e4:	fb03 7101 	mla	r1, r3, r1, r7
 80261e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80261ec:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80261f0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80261f4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80261f8:	fb00 e101 	mla	r1, r0, r1, lr
 80261fc:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8026200:	9a00      	ldr	r2, [sp, #0]
 8026202:	b287      	uxth	r7, r0
 8026204:	437a      	muls	r2, r7
 8026206:	0a09      	lsrs	r1, r1, #8
 8026208:	1c53      	adds	r3, r2, #1
 802620a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802620e:	4321      	orrs	r1, r4
 8026210:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026214:	1235      	asrs	r5, r6, #8
 8026216:	0c0a      	lsrs	r2, r1, #16
 8026218:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802621c:	b2db      	uxtb	r3, r3
 802621e:	fb12 f207 	smulbb	r2, r2, r7
 8026222:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026226:	fb05 2503 	mla	r5, r5, r3, r2
 802622a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802622e:	10f2      	asrs	r2, r6, #3
 8026230:	b2c8      	uxtb	r0, r1
 8026232:	00f6      	lsls	r6, r6, #3
 8026234:	fb14 f407 	smulbb	r4, r4, r7
 8026238:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802623c:	b2f6      	uxtb	r6, r6
 802623e:	fb10 f007 	smulbb	r0, r0, r7
 8026242:	fb02 4203 	mla	r2, r2, r3, r4
 8026246:	b2ad      	uxth	r5, r5
 8026248:	fb06 0303 	mla	r3, r6, r3, r0
 802624c:	b299      	uxth	r1, r3
 802624e:	b294      	uxth	r4, r2
 8026250:	1c6b      	adds	r3, r5, #1
 8026252:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026256:	1c62      	adds	r2, r4, #1
 8026258:	1c4b      	adds	r3, r1, #1
 802625a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802625e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8026262:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026266:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802626a:	0952      	lsrs	r2, r2, #5
 802626c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026270:	432b      	orrs	r3, r5
 8026272:	4313      	orrs	r3, r2
 8026274:	9a02      	ldr	r2, [sp, #8]
 8026276:	8013      	strh	r3, [r2, #0]
 8026278:	b005      	add	sp, #20
 802627a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802627e:	2500      	movs	r5, #0
 8026280:	e6ef      	b.n	8026062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8026282:	2100      	movs	r1, #0
 8026284:	460d      	mov	r5, r1
 8026286:	e6f7      	b.n	8026078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8026288:	2100      	movs	r1, #0
 802628a:	e6f5      	b.n	8026078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802628c:	4631      	mov	r1, r6
 802628e:	e6f3      	b.n	8026078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8026290:	2400      	movs	r4, #0
 8026292:	e702      	b.n	802609a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8026294:	2200      	movs	r2, #0
 8026296:	4614      	mov	r4, r2
 8026298:	e70b      	b.n	80260b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802629a:	4602      	mov	r2, r0
 802629c:	4604      	mov	r4, r0
 802629e:	e708      	b.n	80260b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80262a0:	2200      	movs	r2, #0
 80262a2:	e706      	b.n	80260b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80262a4:	4632      	mov	r2, r6
 80262a6:	e704      	b.n	80260b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080262a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80262a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80262ac:	b09d      	sub	sp, #116	; 0x74
 80262ae:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80262b2:	9219      	str	r2, [sp, #100]	; 0x64
 80262b4:	9307      	str	r3, [sp, #28]
 80262b6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80262b8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80262bc:	931a      	str	r3, [sp, #104]	; 0x68
 80262be:	9117      	str	r1, [sp, #92]	; 0x5c
 80262c0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80262c4:	901b      	str	r0, [sp, #108]	; 0x6c
 80262c6:	6850      	ldr	r0, [r2, #4]
 80262c8:	6812      	ldr	r2, [r2, #0]
 80262ca:	fb00 1303 	mla	r3, r0, r3, r1
 80262ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80262d2:	930a      	str	r3, [sp, #40]	; 0x28
 80262d4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80262d6:	681b      	ldr	r3, [r3, #0]
 80262d8:	9310      	str	r3, [sp, #64]	; 0x40
 80262da:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80262de:	930b      	str	r3, [sp, #44]	; 0x2c
 80262e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80262e2:	2b00      	cmp	r3, #0
 80262e4:	dc03      	bgt.n	80262ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80262e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80262e8:	2b00      	cmp	r3, #0
 80262ea:	f340 8375 	ble.w	80269d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80262ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80262f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80262f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80262f8:	1e48      	subs	r0, r1, #1
 80262fa:	1e57      	subs	r7, r2, #1
 80262fc:	9b07      	ldr	r3, [sp, #28]
 80262fe:	2b00      	cmp	r3, #0
 8026300:	f340 818e 	ble.w	8026620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8026304:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026308:	ea4f 4326 	mov.w	r3, r6, asr #16
 802630c:	d406      	bmi.n	802631c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802630e:	4584      	cmp	ip, r0
 8026310:	da04      	bge.n	802631c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8026312:	2b00      	cmp	r3, #0
 8026314:	db02      	blt.n	802631c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8026316:	42bb      	cmp	r3, r7
 8026318:	f2c0 8183 	blt.w	8026622 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802631c:	f11c 0c01 	adds.w	ip, ip, #1
 8026320:	f100 8173 	bmi.w	802660a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8026324:	4561      	cmp	r1, ip
 8026326:	f2c0 8170 	blt.w	802660a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802632a:	3301      	adds	r3, #1
 802632c:	f100 816d 	bmi.w	802660a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8026330:	429a      	cmp	r2, r3
 8026332:	f2c0 816a 	blt.w	802660a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8026336:	9b07      	ldr	r3, [sp, #28]
 8026338:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802633a:	9318      	str	r3, [sp, #96]	; 0x60
 802633c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802633e:	2b00      	cmp	r3, #0
 8026340:	f340 818c 	ble.w	802665c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8026344:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8026346:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026348:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802634c:	689b      	ldr	r3, [r3, #8]
 802634e:	1422      	asrs	r2, r4, #16
 8026350:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8026354:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026358:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802635c:	f100 81cd 	bmi.w	80266fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8026360:	f103 38ff 	add.w	r8, r3, #4294967295
 8026364:	4542      	cmp	r2, r8
 8026366:	f280 81c8 	bge.w	80266fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802636a:	f1bc 0f00 	cmp.w	ip, #0
 802636e:	f2c0 81c4 	blt.w	80266fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8026372:	f10e 38ff 	add.w	r8, lr, #4294967295
 8026376:	45c4      	cmp	ip, r8
 8026378:	f280 81bf 	bge.w	80266fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802637c:	b21b      	sxth	r3, r3
 802637e:	fb0c 2203 	mla	r2, ip, r3, r2
 8026382:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026384:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8026388:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802638c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8026390:	2800      	cmp	r0, #0
 8026392:	f000 81a9 	beq.w	80266e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8026396:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802639a:	950c      	str	r5, [sp, #48]	; 0x30
 802639c:	0e2d      	lsrs	r5, r5, #24
 802639e:	9513      	str	r5, [sp, #76]	; 0x4c
 80263a0:	b181      	cbz	r1, 80263c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80263a2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80263a6:	3b01      	subs	r3, #1
 80263a8:	009b      	lsls	r3, r3, #2
 80263aa:	3304      	adds	r3, #4
 80263ac:	eb08 0c03 	add.w	ip, r8, r3
 80263b0:	f858 3003 	ldr.w	r3, [r8, r3]
 80263b4:	9308      	str	r3, [sp, #32]
 80263b6:	0e1b      	lsrs	r3, r3, #24
 80263b8:	9311      	str	r3, [sp, #68]	; 0x44
 80263ba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80263be:	930d      	str	r3, [sp, #52]	; 0x34
 80263c0:	0e1b      	lsrs	r3, r3, #24
 80263c2:	9314      	str	r3, [sp, #80]	; 0x50
 80263c4:	b280      	uxth	r0, r0
 80263c6:	b289      	uxth	r1, r1
 80263c8:	fb00 f901 	mul.w	r9, r0, r1
 80263cc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80263d0:	0100      	lsls	r0, r0, #4
 80263d2:	eba0 0809 	sub.w	r8, r0, r9
 80263d6:	b289      	uxth	r1, r1
 80263d8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80263dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80263de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80263e0:	fa1f f888 	uxth.w	r8, r8
 80263e4:	1a5b      	subs	r3, r3, r1
 80263e6:	b29b      	uxth	r3, r3
 80263e8:	fb08 f000 	mul.w	r0, r8, r0
 80263ec:	fb03 000e 	mla	r0, r3, lr, r0
 80263f0:	fb01 0005 	mla	r0, r1, r5, r0
 80263f4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80263f6:	fb09 0005 	mla	r0, r9, r5, r0
 80263fa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80263fe:	2800      	cmp	r0, #0
 8026400:	f000 80fa 	beq.w	80265f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026404:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026408:	d01b      	beq.n	8026442 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802640a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802640e:	fb0e fa0a 	mul.w	sl, lr, sl
 8026412:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026416:	fb0e fe02 	mul.w	lr, lr, r2
 802641a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802641e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026422:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026426:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802642a:	4452      	add	r2, sl
 802642c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026430:	0a12      	lsrs	r2, r2, #8
 8026432:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026436:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802643a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802643e:	ea42 020c 	orr.w	r2, r2, ip
 8026442:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026444:	2dff      	cmp	r5, #255	; 0xff
 8026446:	d021      	beq.n	802648c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026448:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802644a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802644e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026450:	fb05 fb0b 	mul.w	fp, r5, fp
 8026454:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026456:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802645a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802645c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026460:	fb05 fa0a 	mul.w	sl, r5, sl
 8026464:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026468:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802646c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026470:	44de      	add	lr, fp
 8026472:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026476:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802647a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802647e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026482:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026486:	ea4e 050a 	orr.w	r5, lr, sl
 802648a:	950c      	str	r5, [sp, #48]	; 0x30
 802648c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802648e:	2dff      	cmp	r5, #255	; 0xff
 8026490:	d021      	beq.n	80264d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8026492:	9d08      	ldr	r5, [sp, #32]
 8026494:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026498:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802649a:	fb05 fb0b 	mul.w	fp, r5, fp
 802649e:	9d08      	ldr	r5, [sp, #32]
 80264a0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80264a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80264a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80264aa:	fb05 fa0a 	mul.w	sl, r5, sl
 80264ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80264b2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80264b6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80264ba:	44de      	add	lr, fp
 80264bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80264c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80264c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80264c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80264cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80264d0:	ea4e 050a 	orr.w	r5, lr, sl
 80264d4:	9508      	str	r5, [sp, #32]
 80264d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80264d8:	2dff      	cmp	r5, #255	; 0xff
 80264da:	d021      	beq.n	8026520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80264dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80264de:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80264e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80264e4:	fb05 fb0b 	mul.w	fp, r5, fp
 80264e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80264ea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80264ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80264f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80264f4:	fb05 fa0a 	mul.w	sl, r5, sl
 80264f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80264fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026500:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026504:	44de      	add	lr, fp
 8026506:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802650a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802650e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026512:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026516:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802651a:	ea4e 050a 	orr.w	r5, lr, sl
 802651e:	950d      	str	r5, [sp, #52]	; 0x34
 8026520:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026522:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026526:	9d08      	ldr	r5, [sp, #32]
 8026528:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802652c:	fb08 fc0c 	mul.w	ip, r8, ip
 8026530:	fb03 cc0e 	mla	ip, r3, lr, ip
 8026534:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026538:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802653a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802653e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026542:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026544:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026548:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802654c:	fb08 f80e 	mul.w	r8, r8, lr
 8026550:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026554:	fb03 8202 	mla	r2, r3, r2, r8
 8026558:	9b08      	ldr	r3, [sp, #32]
 802655a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802655c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8026560:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026562:	fb01 220a 	mla	r2, r1, sl, r2
 8026566:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802656a:	fb09 2901 	mla	r9, r9, r1, r2
 802656e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026570:	883b      	ldrh	r3, [r7, #0]
 8026572:	4342      	muls	r2, r0
 8026574:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026578:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802657c:	1c50      	adds	r0, r2, #1
 802657e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026582:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8026586:	ea4c 0c09 	orr.w	ip, ip, r9
 802658a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802658e:	1219      	asrs	r1, r3, #8
 8026590:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8026594:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8026598:	b2c0      	uxtb	r0, r0
 802659a:	fb12 f205 	smulbb	r2, r2, r5
 802659e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80265a2:	fb01 2100 	mla	r1, r1, r0, r2
 80265a6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80265aa:	10da      	asrs	r2, r3, #3
 80265ac:	fa5f fc8c 	uxtb.w	ip, ip
 80265b0:	00db      	lsls	r3, r3, #3
 80265b2:	fb1c fc05 	smulbb	ip, ip, r5
 80265b6:	b2db      	uxtb	r3, r3
 80265b8:	b289      	uxth	r1, r1
 80265ba:	fb03 c300 	mla	r3, r3, r0, ip
 80265be:	fa1f fc83 	uxth.w	ip, r3
 80265c2:	1c4b      	adds	r3, r1, #1
 80265c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80265c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80265cc:	fb1e fe05 	smulbb	lr, lr, r5
 80265d0:	f10c 0301 	add.w	r3, ip, #1
 80265d4:	fb02 e200 	mla	r2, r2, r0, lr
 80265d8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80265dc:	b292      	uxth	r2, r2
 80265de:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80265e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80265e6:	430b      	orrs	r3, r1
 80265e8:	1c51      	adds	r1, r2, #1
 80265ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80265ee:	0952      	lsrs	r2, r2, #5
 80265f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80265f4:	4313      	orrs	r3, r2
 80265f6:	803b      	strh	r3, [r7, #0]
 80265f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80265fa:	441c      	add	r4, r3
 80265fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80265fe:	441e      	add	r6, r3
 8026600:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026602:	3b01      	subs	r3, #1
 8026604:	3702      	adds	r7, #2
 8026606:	9318      	str	r3, [sp, #96]	; 0x60
 8026608:	e698      	b.n	802633c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802660a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802660c:	441c      	add	r4, r3
 802660e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026610:	441e      	add	r6, r3
 8026612:	9b07      	ldr	r3, [sp, #28]
 8026614:	3b01      	subs	r3, #1
 8026616:	9307      	str	r3, [sp, #28]
 8026618:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802661a:	3302      	adds	r3, #2
 802661c:	930a      	str	r3, [sp, #40]	; 0x28
 802661e:	e66d      	b.n	80262fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8026620:	d023      	beq.n	802666a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8026622:	9b07      	ldr	r3, [sp, #28]
 8026624:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8026626:	3b01      	subs	r3, #1
 8026628:	fb00 4003 	mla	r0, r0, r3, r4
 802662c:	1400      	asrs	r0, r0, #16
 802662e:	f53f ae82 	bmi.w	8026336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026632:	3901      	subs	r1, #1
 8026634:	4288      	cmp	r0, r1
 8026636:	f6bf ae7e 	bge.w	8026336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802663a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802663c:	fb01 6303 	mla	r3, r1, r3, r6
 8026640:	141b      	asrs	r3, r3, #16
 8026642:	f53f ae78 	bmi.w	8026336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026646:	3a01      	subs	r2, #1
 8026648:	4293      	cmp	r3, r2
 802664a:	f6bf ae74 	bge.w	8026336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802664e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026652:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8026656:	f1bb 0f00 	cmp.w	fp, #0
 802665a:	dc6c      	bgt.n	8026736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802665c:	9b07      	ldr	r3, [sp, #28]
 802665e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026662:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026664:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026668:	930a      	str	r3, [sp, #40]	; 0x28
 802666a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802666c:	2b00      	cmp	r3, #0
 802666e:	f340 81b3 	ble.w	80269d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8026672:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026676:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802667a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802667e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8026680:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026684:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026688:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802668c:	eef0 6a62 	vmov.f32	s13, s5
 8026690:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026694:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026698:	ee77 2a62 	vsub.f32	s5, s14, s5
 802669c:	ee16 4a90 	vmov	r4, s13
 80266a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80266a4:	eef0 6a43 	vmov.f32	s13, s6
 80266a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80266ac:	ee12 2a90 	vmov	r2, s5
 80266b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80266b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80266b8:	ee13 2a10 	vmov	r2, s6
 80266bc:	9329      	str	r3, [sp, #164]	; 0xa4
 80266be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80266c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80266c4:	932a      	str	r3, [sp, #168]	; 0xa8
 80266c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80266c8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80266ca:	3b01      	subs	r3, #1
 80266cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80266d0:	9317      	str	r3, [sp, #92]	; 0x5c
 80266d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80266d4:	bf08      	it	eq
 80266d6:	4613      	moveq	r3, r2
 80266d8:	ee16 6a90 	vmov	r6, s13
 80266dc:	9307      	str	r3, [sp, #28]
 80266de:	eeb0 3a67 	vmov.f32	s6, s15
 80266e2:	eef0 2a47 	vmov.f32	s5, s14
 80266e6:	e5fb      	b.n	80262e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80266e8:	2900      	cmp	r1, #0
 80266ea:	f43f ae6b 	beq.w	80263c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80266ee:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80266f2:	9308      	str	r3, [sp, #32]
 80266f4:	0e1b      	lsrs	r3, r3, #24
 80266f6:	9311      	str	r3, [sp, #68]	; 0x44
 80266f8:	e664      	b.n	80263c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80266fa:	f112 0801 	adds.w	r8, r2, #1
 80266fe:	f53f af7b 	bmi.w	80265f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026702:	4543      	cmp	r3, r8
 8026704:	f6ff af78 	blt.w	80265f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026708:	f11c 0801 	adds.w	r8, ip, #1
 802670c:	f53f af74 	bmi.w	80265f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026710:	45c6      	cmp	lr, r8
 8026712:	f6ff af71 	blt.w	80265f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026716:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8026718:	9201      	str	r2, [sp, #4]
 802671a:	fa0f f28e 	sxth.w	r2, lr
 802671e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8026722:	e9cd c002 	strd	ip, r0, [sp, #8]
 8026726:	9200      	str	r2, [sp, #0]
 8026728:	b21b      	sxth	r3, r3
 802672a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802672c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802672e:	4639      	mov	r1, r7
 8026730:	f7ff fc79 	bl	8026026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8026734:	e760      	b.n	80265f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026736:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026738:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802673a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802673e:	1427      	asrs	r7, r4, #16
 8026740:	1433      	asrs	r3, r6, #16
 8026742:	fb01 7303 	mla	r3, r1, r3, r7
 8026746:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802674a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802674e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026752:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026756:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802675a:	2a00      	cmp	r2, #0
 802675c:	f000 8133 	beq.w	80269c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8026760:	687d      	ldr	r5, [r7, #4]
 8026762:	950e      	str	r5, [sp, #56]	; 0x38
 8026764:	0e2d      	lsrs	r5, r5, #24
 8026766:	9515      	str	r5, [sp, #84]	; 0x54
 8026768:	b178      	cbz	r0, 802678a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802676a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802676e:	3901      	subs	r1, #1
 8026770:	0089      	lsls	r1, r1, #2
 8026772:	3104      	adds	r1, #4
 8026774:	eb07 0e01 	add.w	lr, r7, r1
 8026778:	5879      	ldr	r1, [r7, r1]
 802677a:	9109      	str	r1, [sp, #36]	; 0x24
 802677c:	0e09      	lsrs	r1, r1, #24
 802677e:	9112      	str	r1, [sp, #72]	; 0x48
 8026780:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026784:	910f      	str	r1, [sp, #60]	; 0x3c
 8026786:	0e09      	lsrs	r1, r1, #24
 8026788:	9116      	str	r1, [sp, #88]	; 0x58
 802678a:	b292      	uxth	r2, r2
 802678c:	b280      	uxth	r0, r0
 802678e:	fb02 f800 	mul.w	r8, r2, r0
 8026792:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8026796:	0112      	lsls	r2, r2, #4
 8026798:	eba2 0e08 	sub.w	lr, r2, r8
 802679c:	b280      	uxth	r0, r0
 802679e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80267a2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80267a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80267a6:	fa1f fe8e 	uxth.w	lr, lr
 80267aa:	1a12      	subs	r2, r2, r0
 80267ac:	b292      	uxth	r2, r2
 80267ae:	fb0e f101 	mul.w	r1, lr, r1
 80267b2:	fb02 110c 	mla	r1, r2, ip, r1
 80267b6:	fb00 1105 	mla	r1, r0, r5, r1
 80267ba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80267bc:	fb08 1105 	mla	r1, r8, r5, r1
 80267c0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80267c4:	2900      	cmp	r1, #0
 80267c6:	f000 80f5 	beq.w	80269b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80267ca:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80267ce:	d019      	beq.n	8026804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80267d0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80267d4:	fb0c fa0a 	mul.w	sl, ip, sl
 80267d8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80267dc:	fb0c fc03 	mul.w	ip, ip, r3
 80267e0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80267e4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80267e8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80267ec:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80267f0:	4453      	add	r3, sl
 80267f2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80267f6:	0a1b      	lsrs	r3, r3, #8
 80267f8:	0a3f      	lsrs	r7, r7, #8
 80267fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80267fe:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8026802:	433b      	orrs	r3, r7
 8026804:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026806:	2dff      	cmp	r5, #255	; 0xff
 8026808:	d020      	beq.n	802684c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802680a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802680c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026810:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026812:	436f      	muls	r7, r5
 8026814:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026816:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802681a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802681c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026820:	fb05 fa0a 	mul.w	sl, r5, sl
 8026824:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026828:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802682c:	44bc      	add	ip, r7
 802682e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026832:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026836:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802683a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802683e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026842:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026846:	ea4c 050a 	orr.w	r5, ip, sl
 802684a:	950e      	str	r5, [sp, #56]	; 0x38
 802684c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802684e:	2dff      	cmp	r5, #255	; 0xff
 8026850:	d020      	beq.n	8026894 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8026852:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026854:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026858:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802685a:	436f      	muls	r7, r5
 802685c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802685e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026862:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026864:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026868:	fb05 fa0a 	mul.w	sl, r5, sl
 802686c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026870:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026874:	44bc      	add	ip, r7
 8026876:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802687a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802687e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026882:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026886:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802688a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802688e:	ea4c 050a 	orr.w	r5, ip, sl
 8026892:	9509      	str	r5, [sp, #36]	; 0x24
 8026894:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026896:	2dff      	cmp	r5, #255	; 0xff
 8026898:	d020      	beq.n	80268dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802689a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802689c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80268a0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80268a2:	436f      	muls	r7, r5
 80268a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80268a6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80268aa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80268ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80268b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80268b4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80268b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80268bc:	44bc      	add	ip, r7
 80268be:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80268c2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80268c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80268ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80268ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80268d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80268d6:	ea4c 050a 	orr.w	r5, ip, sl
 80268da:	950f      	str	r5, [sp, #60]	; 0x3c
 80268dc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80268de:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80268e2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80268e4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80268e8:	fb0e f707 	mul.w	r7, lr, r7
 80268ec:	fb02 770c 	mla	r7, r2, ip, r7
 80268f0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80268f4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80268f6:	fb00 770c 	mla	r7, r0, ip, r7
 80268fa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80268fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026900:	fb08 770c 	mla	r7, r8, ip, r7
 8026904:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026908:	fb0e fe0c 	mul.w	lr, lr, ip
 802690c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026910:	fb02 e303 	mla	r3, r2, r3, lr
 8026914:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026916:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026918:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802691c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802691e:	fb00 330a 	mla	r3, r0, sl, r3
 8026922:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8026926:	fb08 3c0c 	mla	ip, r8, ip, r3
 802692a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802692c:	f8b9 0000 	ldrh.w	r0, [r9]
 8026930:	4359      	muls	r1, r3
 8026932:	0a3f      	lsrs	r7, r7, #8
 8026934:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026938:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802693c:	1c4b      	adds	r3, r1, #1
 802693e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026942:	ea47 070c 	orr.w	r7, r7, ip
 8026946:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802694a:	1202      	asrs	r2, r0, #8
 802694c:	0c3b      	lsrs	r3, r7, #16
 802694e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8026952:	b2c9      	uxtb	r1, r1
 8026954:	fb13 f305 	smulbb	r3, r3, r5
 8026958:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802695c:	fb02 3201 	mla	r2, r2, r1, r3
 8026960:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8026964:	10c3      	asrs	r3, r0, #3
 8026966:	b2ff      	uxtb	r7, r7
 8026968:	00c0      	lsls	r0, r0, #3
 802696a:	b2c0      	uxtb	r0, r0
 802696c:	fb17 f705 	smulbb	r7, r7, r5
 8026970:	fb00 7001 	mla	r0, r0, r1, r7
 8026974:	b292      	uxth	r2, r2
 8026976:	fb1c fc05 	smulbb	ip, ip, r5
 802697a:	b280      	uxth	r0, r0
 802697c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026980:	fb03 c301 	mla	r3, r3, r1, ip
 8026984:	1c51      	adds	r1, r2, #1
 8026986:	f100 0c01 	add.w	ip, r0, #1
 802698a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802698e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8026992:	b29b      	uxth	r3, r3
 8026994:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8026998:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802699c:	ea4c 0202 	orr.w	r2, ip, r2
 80269a0:	f103 0c01 	add.w	ip, r3, #1
 80269a4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80269a8:	095b      	lsrs	r3, r3, #5
 80269aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80269ae:	431a      	orrs	r2, r3
 80269b0:	f8a9 2000 	strh.w	r2, [r9]
 80269b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80269b6:	441c      	add	r4, r3
 80269b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80269ba:	f109 0902 	add.w	r9, r9, #2
 80269be:	441e      	add	r6, r3
 80269c0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80269c4:	e647      	b.n	8026656 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80269c6:	2800      	cmp	r0, #0
 80269c8:	f43f aedf 	beq.w	802678a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80269cc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80269d0:	9109      	str	r1, [sp, #36]	; 0x24
 80269d2:	0e09      	lsrs	r1, r1, #24
 80269d4:	9112      	str	r1, [sp, #72]	; 0x48
 80269d6:	e6d8      	b.n	802678a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80269d8:	b01d      	add	sp, #116	; 0x74
 80269da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080269de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80269de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80269e2:	b085      	sub	sp, #20
 80269e4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80269e8:	9102      	str	r1, [sp, #8]
 80269ea:	2c00      	cmp	r4, #0
 80269ec:	fb04 7103 	mla	r1, r4, r3, r7
 80269f0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80269f4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80269f8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80269fc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026a00:	f2c0 810c 	blt.w	8026c1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8026a04:	45a6      	cmp	lr, r4
 8026a06:	f340 8109 	ble.w	8026c1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8026a0a:	2f00      	cmp	r7, #0
 8026a0c:	f2c0 8104 	blt.w	8026c18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8026a10:	42bb      	cmp	r3, r7
 8026a12:	f340 8101 	ble.w	8026c18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8026a16:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026a1a:	1c7a      	adds	r2, r7, #1
 8026a1c:	f100 8101 	bmi.w	8026c22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8026a20:	4293      	cmp	r3, r2
 8026a22:	f340 80fe 	ble.w	8026c22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8026a26:	2e00      	cmp	r6, #0
 8026a28:	f000 80fd 	beq.w	8026c26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8026a2c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026a30:	3401      	adds	r4, #1
 8026a32:	f100 80fc 	bmi.w	8026c2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8026a36:	45a6      	cmp	lr, r4
 8026a38:	f340 80f9 	ble.w	8026c2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8026a3c:	2800      	cmp	r0, #0
 8026a3e:	f000 80f9 	beq.w	8026c34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8026a42:	2f00      	cmp	r7, #0
 8026a44:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8026a48:	f2c0 80ef 	blt.w	8026c2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8026a4c:	42bb      	cmp	r3, r7
 8026a4e:	f340 80ec 	ble.w	8026c2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8026a52:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026a56:	3701      	adds	r7, #1
 8026a58:	f100 80ef 	bmi.w	8026c3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8026a5c:	42bb      	cmp	r3, r7
 8026a5e:	f340 80ec 	ble.w	8026c3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8026a62:	2e00      	cmp	r6, #0
 8026a64:	f000 80eb 	beq.w	8026c3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8026a68:	6852      	ldr	r2, [r2, #4]
 8026a6a:	b2b6      	uxth	r6, r6
 8026a6c:	b280      	uxth	r0, r0
 8026a6e:	fb00 fe06 	mul.w	lr, r0, r6
 8026a72:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8026a76:	0136      	lsls	r6, r6, #4
 8026a78:	eba6 070e 	sub.w	r7, r6, lr
 8026a7c:	b280      	uxth	r0, r0
 8026a7e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8026a82:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8026a86:	b2bf      	uxth	r7, r7
 8026a88:	1a1b      	subs	r3, r3, r0
 8026a8a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8026a8e:	b29b      	uxth	r3, r3
 8026a90:	fb07 f60a 	mul.w	r6, r7, sl
 8026a94:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026a98:	fb0b 6603 	mla	r6, fp, r3, r6
 8026a9c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8026aa0:	fb00 6609 	mla	r6, r0, r9, r6
 8026aa4:	fb0e 6608 	mla	r6, lr, r8, r6
 8026aa8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8026aac:	9600      	str	r6, [sp, #0]
 8026aae:	2e00      	cmp	r6, #0
 8026ab0:	f000 80af 	beq.w	8026c12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8026ab4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026ab8:	fb0b fc0c 	mul.w	ip, fp, ip
 8026abc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8026ac0:	fb0b f505 	mul.w	r5, fp, r5
 8026ac4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8026ac8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8026acc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026ad0:	44dc      	add	ip, fp
 8026ad2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026ad6:	9501      	str	r5, [sp, #4]
 8026ad8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8026adc:	9503      	str	r5, [sp, #12]
 8026ade:	9d01      	ldr	r5, [sp, #4]
 8026ae0:	9e02      	ldr	r6, [sp, #8]
 8026ae2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8026ae6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8026aea:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8026aee:	fb0a fc0c 	mul.w	ip, sl, ip
 8026af2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8026af6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8026afa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8026afe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026b02:	4465      	add	r5, ip
 8026b04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8026b08:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8026b0c:	fb09 fc0c 	mul.w	ip, r9, ip
 8026b10:	fb09 f904 	mul.w	r9, r9, r4
 8026b14:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8026b18:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8026b1c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8026b20:	fb08 f404 	mul.w	r4, r8, r4
 8026b24:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8026b28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026b2c:	fb08 f802 	mul.w	r8, r8, r2
 8026b30:	fb0a fa01 	mul.w	sl, sl, r1
 8026b34:	0a22      	lsrs	r2, r4, #8
 8026b36:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8026b3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026b3e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8026b42:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8026b46:	4414      	add	r4, r2
 8026b48:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026b4c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8026b50:	0a2d      	lsrs	r5, r5, #8
 8026b52:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8026b56:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8026b5a:	9a03      	ldr	r2, [sp, #12]
 8026b5c:	8836      	ldrh	r6, [r6, #0]
 8026b5e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8026b62:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026b66:	437d      	muls	r5, r7
 8026b68:	4461      	add	r1, ip
 8026b6a:	0a24      	lsrs	r4, r4, #8
 8026b6c:	fb02 5503 	mla	r5, r2, r3, r5
 8026b70:	0a09      	lsrs	r1, r1, #8
 8026b72:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8026b76:	fb04 540e 	mla	r4, r4, lr, r5
 8026b7a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8026b7e:	fb01 4100 	mla	r1, r1, r0, r4
 8026b82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026b86:	0a09      	lsrs	r1, r1, #8
 8026b88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026b8c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8026b90:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8026b94:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8026b98:	fb07 f70a 	mul.w	r7, r7, sl
 8026b9c:	fb03 7101 	mla	r1, r3, r1, r7
 8026ba0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026ba4:	9b00      	ldr	r3, [sp, #0]
 8026ba6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8026baa:	fb0e 1e08 	mla	lr, lr, r8, r1
 8026bae:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8026bb2:	fb00 e101 	mla	r1, r0, r1, lr
 8026bb6:	43da      	mvns	r2, r3
 8026bb8:	1233      	asrs	r3, r6, #8
 8026bba:	b2d2      	uxtb	r2, r2
 8026bbc:	10f0      	asrs	r0, r6, #3
 8026bbe:	0a09      	lsrs	r1, r1, #8
 8026bc0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026bc4:	00f6      	lsls	r6, r6, #3
 8026bc6:	4353      	muls	r3, r2
 8026bc8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8026bcc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026bd0:	b2f6      	uxtb	r6, r6
 8026bd2:	4321      	orrs	r1, r4
 8026bd4:	4350      	muls	r0, r2
 8026bd6:	4356      	muls	r6, r2
 8026bd8:	1c5a      	adds	r2, r3, #1
 8026bda:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026bde:	0c0b      	lsrs	r3, r1, #16
 8026be0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026be4:	1c42      	adds	r2, r0, #1
 8026be6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026bea:	0a0a      	lsrs	r2, r1, #8
 8026bec:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026bf0:	021b      	lsls	r3, r3, #8
 8026bf2:	00d2      	lsls	r2, r2, #3
 8026bf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026bf8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8026bfc:	4313      	orrs	r3, r2
 8026bfe:	1c72      	adds	r2, r6, #1
 8026c00:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8026c04:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8026c08:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026c0c:	4319      	orrs	r1, r3
 8026c0e:	9b02      	ldr	r3, [sp, #8]
 8026c10:	8019      	strh	r1, [r3, #0]
 8026c12:	b005      	add	sp, #20
 8026c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026c18:	2500      	movs	r5, #0
 8026c1a:	e6fe      	b.n	8026a1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8026c1c:	2100      	movs	r1, #0
 8026c1e:	460d      	mov	r5, r1
 8026c20:	e706      	b.n	8026a30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026c22:	2100      	movs	r1, #0
 8026c24:	e704      	b.n	8026a30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026c26:	4631      	mov	r1, r6
 8026c28:	e702      	b.n	8026a30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026c2a:	2400      	movs	r4, #0
 8026c2c:	e713      	b.n	8026a56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8026c2e:	2200      	movs	r2, #0
 8026c30:	4614      	mov	r4, r2
 8026c32:	e71a      	b.n	8026a6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026c34:	4602      	mov	r2, r0
 8026c36:	4604      	mov	r4, r0
 8026c38:	e717      	b.n	8026a6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026c3a:	2200      	movs	r2, #0
 8026c3c:	e715      	b.n	8026a6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026c3e:	4632      	mov	r2, r6
 8026c40:	e713      	b.n	8026a6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08026c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c48:	b09b      	sub	sp, #108	; 0x6c
 8026c4a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8026c4e:	9218      	str	r2, [sp, #96]	; 0x60
 8026c50:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8026c52:	9116      	str	r1, [sp, #88]	; 0x58
 8026c54:	9307      	str	r3, [sp, #28]
 8026c56:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8026c5a:	9019      	str	r0, [sp, #100]	; 0x64
 8026c5c:	6850      	ldr	r0, [r2, #4]
 8026c5e:	6812      	ldr	r2, [r2, #0]
 8026c60:	fb00 1303 	mla	r3, r0, r3, r1
 8026c64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026c68:	930a      	str	r3, [sp, #40]	; 0x28
 8026c6a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026c6c:	681b      	ldr	r3, [r3, #0]
 8026c6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026c70:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026c72:	2b00      	cmp	r3, #0
 8026c74:	dc03      	bgt.n	8026c7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026c76:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026c78:	2b00      	cmp	r3, #0
 8026c7a:	f340 8386 	ble.w	802738a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8026c7e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026c80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026c84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026c88:	1e48      	subs	r0, r1, #1
 8026c8a:	1e57      	subs	r7, r2, #1
 8026c8c:	9b07      	ldr	r3, [sp, #28]
 8026c8e:	2b00      	cmp	r3, #0
 8026c90:	f340 8166 	ble.w	8026f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8026c94:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026c98:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026c9c:	d406      	bmi.n	8026cac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026c9e:	4584      	cmp	ip, r0
 8026ca0:	da04      	bge.n	8026cac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026ca2:	2b00      	cmp	r3, #0
 8026ca4:	db02      	blt.n	8026cac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026ca6:	42bb      	cmp	r3, r7
 8026ca8:	f2c0 815b 	blt.w	8026f62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8026cac:	f11c 0c01 	adds.w	ip, ip, #1
 8026cb0:	f100 814b 	bmi.w	8026f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026cb4:	4561      	cmp	r1, ip
 8026cb6:	f2c0 8148 	blt.w	8026f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026cba:	3301      	adds	r3, #1
 8026cbc:	f100 8145 	bmi.w	8026f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026cc0:	429a      	cmp	r2, r3
 8026cc2:	f2c0 8142 	blt.w	8026f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026cc6:	9b07      	ldr	r3, [sp, #28]
 8026cc8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8026cca:	9317      	str	r3, [sp, #92]	; 0x5c
 8026ccc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026cce:	2b00      	cmp	r3, #0
 8026cd0:	f340 8165 	ble.w	8026f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026cd4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8026cd6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026cd8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8026cdc:	689b      	ldr	r3, [r3, #8]
 8026cde:	1422      	asrs	r2, r4, #16
 8026ce0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8026ce4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026ce8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026cec:	f100 81d5 	bmi.w	802709a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026cf0:	f103 38ff 	add.w	r8, r3, #4294967295
 8026cf4:	4542      	cmp	r2, r8
 8026cf6:	f280 81d0 	bge.w	802709a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026cfa:	f1bc 0f00 	cmp.w	ip, #0
 8026cfe:	f2c0 81cc 	blt.w	802709a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026d02:	f10e 38ff 	add.w	r8, lr, #4294967295
 8026d06:	45c4      	cmp	ip, r8
 8026d08:	f280 81c7 	bge.w	802709a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026d0c:	b21b      	sxth	r3, r3
 8026d0e:	fb0c 2203 	mla	r2, ip, r3, r2
 8026d12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026d14:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8026d18:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8026d1c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8026d20:	2900      	cmp	r1, #0
 8026d22:	f000 8182 	beq.w	802702a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026d26:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8026d2a:	950b      	str	r5, [sp, #44]	; 0x2c
 8026d2c:	0e2d      	lsrs	r5, r5, #24
 8026d2e:	9512      	str	r5, [sp, #72]	; 0x48
 8026d30:	b180      	cbz	r0, 8026d54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8026d32:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8026d36:	3b01      	subs	r3, #1
 8026d38:	009b      	lsls	r3, r3, #2
 8026d3a:	3304      	adds	r3, #4
 8026d3c:	eb08 0c03 	add.w	ip, r8, r3
 8026d40:	f858 3003 	ldr.w	r3, [r8, r3]
 8026d44:	9308      	str	r3, [sp, #32]
 8026d46:	0e1b      	lsrs	r3, r3, #24
 8026d48:	9310      	str	r3, [sp, #64]	; 0x40
 8026d4a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8026d4e:	930c      	str	r3, [sp, #48]	; 0x30
 8026d50:	0e1b      	lsrs	r3, r3, #24
 8026d52:	9313      	str	r3, [sp, #76]	; 0x4c
 8026d54:	b289      	uxth	r1, r1
 8026d56:	b280      	uxth	r0, r0
 8026d58:	fb01 f900 	mul.w	r9, r1, r0
 8026d5c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8026d60:	0109      	lsls	r1, r1, #4
 8026d62:	eba1 0809 	sub.w	r8, r1, r9
 8026d66:	b280      	uxth	r0, r0
 8026d68:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8026d6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8026d6e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026d70:	fa1f f888 	uxth.w	r8, r8
 8026d74:	1a09      	subs	r1, r1, r0
 8026d76:	b289      	uxth	r1, r1
 8026d78:	fb08 f303 	mul.w	r3, r8, r3
 8026d7c:	fb01 330e 	mla	r3, r1, lr, r3
 8026d80:	fb00 3305 	mla	r3, r0, r5, r3
 8026d84:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026d86:	fb09 3305 	mla	r3, r9, r5, r3
 8026d8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026d8e:	2b00      	cmp	r3, #0
 8026d90:	f000 80d2 	beq.w	8026f38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026d94:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026d98:	d01b      	beq.n	8026dd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8026d9a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8026d9e:	fb0e fa0a 	mul.w	sl, lr, sl
 8026da2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026da6:	fb0e fe02 	mul.w	lr, lr, r2
 8026daa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8026dae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026db2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026db6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8026dba:	4452      	add	r2, sl
 8026dbc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026dc0:	0a12      	lsrs	r2, r2, #8
 8026dc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026dc6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026dca:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026dce:	ea42 020c 	orr.w	r2, r2, ip
 8026dd2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026dd4:	2dff      	cmp	r5, #255	; 0xff
 8026dd6:	d021      	beq.n	8026e1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026dd8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026dda:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026dde:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026de0:	fb05 fb0b 	mul.w	fp, r5, fp
 8026de4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026de6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026dea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026dec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026df0:	fb05 fa0a 	mul.w	sl, r5, sl
 8026df4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026df8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026dfc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026e00:	44de      	add	lr, fp
 8026e02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026e06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026e0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026e0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026e12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026e16:	ea4e 050a 	orr.w	r5, lr, sl
 8026e1a:	950b      	str	r5, [sp, #44]	; 0x2c
 8026e1c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026e1e:	2dff      	cmp	r5, #255	; 0xff
 8026e20:	d021      	beq.n	8026e66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026e22:	9d08      	ldr	r5, [sp, #32]
 8026e24:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026e28:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026e2a:	fb05 fb0b 	mul.w	fp, r5, fp
 8026e2e:	9d08      	ldr	r5, [sp, #32]
 8026e30:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8026e34:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026e36:	fb05 fa0e 	mul.w	sl, r5, lr
 8026e3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026e3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026e42:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026e46:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026e4a:	44de      	add	lr, fp
 8026e4c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026e50:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026e54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026e58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026e5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026e60:	ea4e 050a 	orr.w	r5, lr, sl
 8026e64:	9508      	str	r5, [sp, #32]
 8026e66:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026e68:	2dff      	cmp	r5, #255	; 0xff
 8026e6a:	d021      	beq.n	8026eb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8026e6c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026e6e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026e72:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026e74:	fb05 fb0b 	mul.w	fp, r5, fp
 8026e78:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026e7a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026e7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026e80:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026e84:	fb05 fa0a 	mul.w	sl, r5, sl
 8026e88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026e8c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026e90:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026e94:	44de      	add	lr, fp
 8026e96:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026e9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026e9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026ea2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026ea6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026eaa:	ea4e 050a 	orr.w	r5, lr, sl
 8026eae:	950c      	str	r5, [sp, #48]	; 0x30
 8026eb0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026eb2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026eb6:	9d08      	ldr	r5, [sp, #32]
 8026eb8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8026ebc:	fb08 fc0c 	mul.w	ip, r8, ip
 8026ec0:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026ec4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026ec8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026eca:	fb00 cc0e 	mla	ip, r0, lr, ip
 8026ece:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026ed2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026ed4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026ed8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8026edc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026ee0:	fb08 f80e 	mul.w	r8, r8, lr
 8026ee4:	fb01 8202 	mla	r2, r1, r2, r8
 8026ee8:	9908      	ldr	r1, [sp, #32]
 8026eea:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8026eee:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026ef0:	fb00 220a 	mla	r2, r0, sl, r2
 8026ef4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8026ef8:	fb09 2900 	mla	r9, r9, r0, r2
 8026efc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026f00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026f04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026f08:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8026f0c:	ea4c 0c09 	orr.w	ip, ip, r9
 8026f10:	2bff      	cmp	r3, #255	; 0xff
 8026f12:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8026f16:	f040 8091 	bne.w	802703c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8026f1a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8026f1e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8026f22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026f26:	f022 0207 	bic.w	r2, r2, #7
 8026f2a:	431a      	orrs	r2, r3
 8026f2c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8026f30:	ea4c 0c02 	orr.w	ip, ip, r2
 8026f34:	f8a7 c000 	strh.w	ip, [r7]
 8026f38:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8026f3a:	441c      	add	r4, r3
 8026f3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026f3e:	441e      	add	r6, r3
 8026f40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026f42:	3b01      	subs	r3, #1
 8026f44:	3702      	adds	r7, #2
 8026f46:	9317      	str	r3, [sp, #92]	; 0x5c
 8026f48:	e6c0      	b.n	8026ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8026f4a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8026f4c:	441c      	add	r4, r3
 8026f4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026f50:	441e      	add	r6, r3
 8026f52:	9b07      	ldr	r3, [sp, #28]
 8026f54:	3b01      	subs	r3, #1
 8026f56:	9307      	str	r3, [sp, #28]
 8026f58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026f5a:	3302      	adds	r3, #2
 8026f5c:	930a      	str	r3, [sp, #40]	; 0x28
 8026f5e:	e695      	b.n	8026c8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026f60:	d024      	beq.n	8026fac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8026f62:	9b07      	ldr	r3, [sp, #28]
 8026f64:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8026f66:	3b01      	subs	r3, #1
 8026f68:	fb00 4003 	mla	r0, r0, r3, r4
 8026f6c:	1400      	asrs	r0, r0, #16
 8026f6e:	f53f aeaa 	bmi.w	8026cc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026f72:	3901      	subs	r1, #1
 8026f74:	4288      	cmp	r0, r1
 8026f76:	f6bf aea6 	bge.w	8026cc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026f7a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8026f7c:	fb01 6303 	mla	r3, r1, r3, r6
 8026f80:	141b      	asrs	r3, r3, #16
 8026f82:	f53f aea0 	bmi.w	8026cc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026f86:	3a01      	subs	r2, #1
 8026f88:	4293      	cmp	r3, r2
 8026f8a:	f6bf ae9c 	bge.w	8026cc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026f8e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026f92:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8026f96:	f1bb 0f00 	cmp.w	fp, #0
 8026f9a:	f300 809a 	bgt.w	80270d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8026f9e:	9b07      	ldr	r3, [sp, #28]
 8026fa0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026fa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026fa6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026faa:	930a      	str	r3, [sp, #40]	; 0x28
 8026fac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026fae:	2b00      	cmp	r3, #0
 8026fb0:	f340 81eb 	ble.w	802738a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8026fb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026fb8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026fbc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026fc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026fc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026fc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026fca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026fce:	eef0 6a62 	vmov.f32	s13, s5
 8026fd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026fd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026fda:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026fde:	ee16 4a90 	vmov	r4, s13
 8026fe2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026fe6:	eef0 6a43 	vmov.f32	s13, s6
 8026fea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026fee:	ee12 2a90 	vmov	r2, s5
 8026ff2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026ff6:	fb92 f3f3 	sdiv	r3, r2, r3
 8026ffa:	ee13 2a10 	vmov	r2, s6
 8026ffe:	9327      	str	r3, [sp, #156]	; 0x9c
 8027000:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027002:	fb92 f3f3 	sdiv	r3, r2, r3
 8027006:	9328      	str	r3, [sp, #160]	; 0xa0
 8027008:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802700a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802700c:	3b01      	subs	r3, #1
 802700e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027012:	9316      	str	r3, [sp, #88]	; 0x58
 8027014:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027016:	bf08      	it	eq
 8027018:	4613      	moveq	r3, r2
 802701a:	ee16 6a90 	vmov	r6, s13
 802701e:	9307      	str	r3, [sp, #28]
 8027020:	eeb0 3a67 	vmov.f32	s6, s15
 8027024:	eef0 2a47 	vmov.f32	s5, s14
 8027028:	e622      	b.n	8026c70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802702a:	2800      	cmp	r0, #0
 802702c:	f43f ae92 	beq.w	8026d54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027030:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027034:	9308      	str	r3, [sp, #32]
 8027036:	0e1b      	lsrs	r3, r3, #24
 8027038:	9310      	str	r3, [sp, #64]	; 0x40
 802703a:	e68b      	b.n	8026d54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802703c:	8839      	ldrh	r1, [r7, #0]
 802703e:	4dd4      	ldr	r5, [pc, #848]	; (8027390 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8027040:	43db      	mvns	r3, r3
 8027042:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8027046:	fa5f f883 	uxtb.w	r8, r3
 802704a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802704e:	fb0e fe08 	mul.w	lr, lr, r8
 8027052:	10c8      	asrs	r0, r1, #3
 8027054:	00cb      	lsls	r3, r1, #3
 8027056:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802705a:	f10e 0101 	add.w	r1, lr, #1
 802705e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027062:	fb00 f008 	mul.w	r0, r0, r8
 8027066:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802706a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802706e:	f100 0e01 	add.w	lr, r0, #1
 8027072:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8027076:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802707a:	b2db      	uxtb	r3, r3
 802707c:	b2c9      	uxtb	r1, r1
 802707e:	00d2      	lsls	r2, r2, #3
 8027080:	fb03 f308 	mul.w	r3, r3, r8
 8027084:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8027088:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802708c:	430a      	orrs	r2, r1
 802708e:	1c59      	adds	r1, r3, #1
 8027090:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027094:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8027098:	e748      	b.n	8026f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802709a:	f112 0801 	adds.w	r8, r2, #1
 802709e:	f53f af4b 	bmi.w	8026f38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80270a2:	4543      	cmp	r3, r8
 80270a4:	f6ff af48 	blt.w	8026f38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80270a8:	f11c 0801 	adds.w	r8, ip, #1
 80270ac:	f53f af44 	bmi.w	8026f38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80270b0:	45c6      	cmp	lr, r8
 80270b2:	f6ff af41 	blt.w	8026f38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80270b6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80270ba:	fa0f f28e 	sxth.w	r2, lr
 80270be:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80270c2:	9200      	str	r2, [sp, #0]
 80270c4:	b21b      	sxth	r3, r3
 80270c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80270c8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80270ca:	4639      	mov	r1, r7
 80270cc:	f7ff fc87 	bl	80269de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80270d0:	e732      	b.n	8026f38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80270d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80270d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80270d6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80270da:	1421      	asrs	r1, r4, #16
 80270dc:	1433      	asrs	r3, r6, #16
 80270de:	fb07 1303 	mla	r3, r7, r3, r1
 80270e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80270e4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80270e8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80270ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80270f0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80270f4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80270f8:	2a00      	cmp	r2, #0
 80270fa:	f000 8107 	beq.w	802730c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80270fe:	684d      	ldr	r5, [r1, #4]
 8027100:	950d      	str	r5, [sp, #52]	; 0x34
 8027102:	0e2d      	lsrs	r5, r5, #24
 8027104:	9514      	str	r5, [sp, #80]	; 0x50
 8027106:	b178      	cbz	r0, 8027128 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8027108:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802710c:	3f01      	subs	r7, #1
 802710e:	00bf      	lsls	r7, r7, #2
 8027110:	3704      	adds	r7, #4
 8027112:	eb01 0e07 	add.w	lr, r1, r7
 8027116:	59c9      	ldr	r1, [r1, r7]
 8027118:	9109      	str	r1, [sp, #36]	; 0x24
 802711a:	0e09      	lsrs	r1, r1, #24
 802711c:	9111      	str	r1, [sp, #68]	; 0x44
 802711e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027122:	910e      	str	r1, [sp, #56]	; 0x38
 8027124:	0e09      	lsrs	r1, r1, #24
 8027126:	9115      	str	r1, [sp, #84]	; 0x54
 8027128:	b292      	uxth	r2, r2
 802712a:	b280      	uxth	r0, r0
 802712c:	fb02 f900 	mul.w	r9, r2, r0
 8027130:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027134:	0112      	lsls	r2, r2, #4
 8027136:	eba2 0e09 	sub.w	lr, r2, r9
 802713a:	b280      	uxth	r0, r0
 802713c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8027140:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027142:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027144:	fa1f fe8e 	uxth.w	lr, lr
 8027148:	1a09      	subs	r1, r1, r0
 802714a:	b289      	uxth	r1, r1
 802714c:	fb0e f202 	mul.w	r2, lr, r2
 8027150:	fb01 220c 	mla	r2, r1, ip, r2
 8027154:	fb00 2205 	mla	r2, r0, r5, r2
 8027158:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802715a:	fb09 2205 	mla	r2, r9, r5, r2
 802715e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8027162:	2a00      	cmp	r2, #0
 8027164:	f000 80c9 	beq.w	80272fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8027168:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802716c:	d019      	beq.n	80271a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802716e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027172:	fb0c fa0a 	mul.w	sl, ip, sl
 8027176:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802717a:	fb0c fc03 	mul.w	ip, ip, r3
 802717e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027182:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027186:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802718a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802718e:	4453      	add	r3, sl
 8027190:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027194:	0a1b      	lsrs	r3, r3, #8
 8027196:	0a3f      	lsrs	r7, r7, #8
 8027198:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802719c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80271a0:	433b      	orrs	r3, r7
 80271a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80271a4:	2dff      	cmp	r5, #255	; 0xff
 80271a6:	d020      	beq.n	80271ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80271a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80271aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80271ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80271b0:	436f      	muls	r7, r5
 80271b2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80271b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80271b8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80271ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80271be:	fb05 fa0a 	mul.w	sl, r5, sl
 80271c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80271c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80271ca:	44bc      	add	ip, r7
 80271cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80271d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80271d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80271d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80271dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80271e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80271e4:	ea4c 050a 	orr.w	r5, ip, sl
 80271e8:	950d      	str	r5, [sp, #52]	; 0x34
 80271ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80271ec:	2dff      	cmp	r5, #255	; 0xff
 80271ee:	d020      	beq.n	8027232 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80271f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80271f2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80271f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80271f8:	436f      	muls	r7, r5
 80271fa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80271fc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027200:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027202:	fb05 fa0c 	mul.w	sl, r5, ip
 8027206:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802720a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802720e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027212:	44bc      	add	ip, r7
 8027214:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027218:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802721c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027220:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027224:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027228:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802722c:	ea4c 050a 	orr.w	r5, ip, sl
 8027230:	9509      	str	r5, [sp, #36]	; 0x24
 8027232:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027234:	2dff      	cmp	r5, #255	; 0xff
 8027236:	d020      	beq.n	802727a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8027238:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802723a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802723e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027240:	436f      	muls	r7, r5
 8027242:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027244:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027248:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802724a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802724e:	fb05 fa0a 	mul.w	sl, r5, sl
 8027252:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027256:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802725a:	44bc      	add	ip, r7
 802725c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027260:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027264:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027268:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802726c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027270:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027274:	ea4c 050a 	orr.w	r5, ip, sl
 8027278:	950e      	str	r5, [sp, #56]	; 0x38
 802727a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802727c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027280:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027282:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027286:	fb0e f707 	mul.w	r7, lr, r7
 802728a:	fb01 770c 	mla	r7, r1, ip, r7
 802728e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027292:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027294:	fb00 770c 	mla	r7, r0, ip, r7
 8027298:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802729c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802729e:	fb09 770c 	mla	r7, r9, ip, r7
 80272a2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80272a6:	fb0e fe0c 	mul.w	lr, lr, ip
 80272aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80272ae:	fb01 e303 	mla	r3, r1, r3, lr
 80272b2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80272b4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80272b8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80272ba:	fb00 330a 	mla	r3, r0, sl, r3
 80272be:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80272c2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80272c6:	0a3f      	lsrs	r7, r7, #8
 80272c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80272cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80272d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80272d4:	ea47 070c 	orr.w	r7, r7, ip
 80272d8:	2aff      	cmp	r2, #255	; 0xff
 80272da:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80272de:	d11e      	bne.n	802731e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80272e0:	097a      	lsrs	r2, r7, #5
 80272e2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80272e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80272ea:	f023 0307 	bic.w	r3, r3, #7
 80272ee:	4313      	orrs	r3, r2
 80272f0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80272f4:	431f      	orrs	r7, r3
 80272f6:	f8a8 7000 	strh.w	r7, [r8]
 80272fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80272fc:	441c      	add	r4, r3
 80272fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027300:	f108 0802 	add.w	r8, r8, #2
 8027304:	441e      	add	r6, r3
 8027306:	f10b 3bff 	add.w	fp, fp, #4294967295
 802730a:	e644      	b.n	8026f96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802730c:	2800      	cmp	r0, #0
 802730e:	f43f af0b 	beq.w	8027128 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8027312:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8027316:	9109      	str	r1, [sp, #36]	; 0x24
 8027318:	0e09      	lsrs	r1, r1, #24
 802731a:	9111      	str	r1, [sp, #68]	; 0x44
 802731c:	e704      	b.n	8027128 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802731e:	f8b8 1000 	ldrh.w	r1, [r8]
 8027322:	43d2      	mvns	r2, r2
 8027324:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8027328:	fa5f fe82 	uxtb.w	lr, r2
 802732c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8027330:	fb0c fc0e 	mul.w	ip, ip, lr
 8027334:	10c8      	asrs	r0, r1, #3
 8027336:	00ca      	lsls	r2, r1, #3
 8027338:	f10c 0101 	add.w	r1, ip, #1
 802733c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027340:	0c39      	lsrs	r1, r7, #16
 8027342:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027346:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802734a:	4911      	ldr	r1, [pc, #68]	; (8027390 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802734c:	fb00 f00e 	mul.w	r0, r0, lr
 8027350:	fa5f fc8c 	uxtb.w	ip, ip
 8027354:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8027358:	b2d2      	uxtb	r2, r2
 802735a:	1c41      	adds	r1, r0, #1
 802735c:	fb02 f20e 	mul.w	r2, r2, lr
 8027360:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8027364:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027368:	1c51      	adds	r1, r2, #1
 802736a:	00c0      	lsls	r0, r0, #3
 802736c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027370:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027374:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8027378:	ea4c 0c00 	orr.w	ip, ip, r0
 802737c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8027380:	ea47 0c0c 	orr.w	ip, r7, ip
 8027384:	f8a8 c000 	strh.w	ip, [r8]
 8027388:	e7b7      	b.n	80272fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802738a:	b01b      	add	sp, #108	; 0x6c
 802738c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027390:	fffff800 	.word	0xfffff800

08027394 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8027394:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027398:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802739c:	2d00      	cmp	r5, #0
 802739e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80273a2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80273a6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80273aa:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80273ae:	fb05 0e03 	mla	lr, r5, r3, r0
 80273b2:	f2c0 808c 	blt.w	80274ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80273b6:	45a9      	cmp	r9, r5
 80273b8:	f340 8089 	ble.w	80274ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80273bc:	2800      	cmp	r0, #0
 80273be:	f2c0 8084 	blt.w	80274ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80273c2:	4580      	cmp	r8, r0
 80273c4:	f340 8081 	ble.w	80274ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80273c8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80273cc:	f01e 0f01 	tst.w	lr, #1
 80273d0:	5d16      	ldrb	r6, [r2, r4]
 80273d2:	bf0c      	ite	eq
 80273d4:	f006 060f 	andeq.w	r6, r6, #15
 80273d8:	1136      	asrne	r6, r6, #4
 80273da:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80273de:	b2f6      	uxtb	r6, r6
 80273e0:	1c44      	adds	r4, r0, #1
 80273e2:	d477      	bmi.n	80274d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80273e4:	45a0      	cmp	r8, r4
 80273e6:	dd75      	ble.n	80274d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80273e8:	2f00      	cmp	r7, #0
 80273ea:	d075      	beq.n	80274d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80273ec:	f10e 0a01 	add.w	sl, lr, #1
 80273f0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80273f4:	f01a 0f01 	tst.w	sl, #1
 80273f8:	5d14      	ldrb	r4, [r2, r4]
 80273fa:	bf0c      	ite	eq
 80273fc:	f004 040f 	andeq.w	r4, r4, #15
 8027400:	1124      	asrne	r4, r4, #4
 8027402:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8027406:	b2e4      	uxtb	r4, r4
 8027408:	3501      	adds	r5, #1
 802740a:	d469      	bmi.n	80274e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802740c:	45a9      	cmp	r9, r5
 802740e:	dd67      	ble.n	80274e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8027410:	f1bc 0f00 	cmp.w	ip, #0
 8027414:	d067      	beq.n	80274e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8027416:	2800      	cmp	r0, #0
 8027418:	db60      	blt.n	80274dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802741a:	4580      	cmp	r8, r0
 802741c:	dd5e      	ble.n	80274dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802741e:	eb03 090e 	add.w	r9, r3, lr
 8027422:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8027426:	f019 0f01 	tst.w	r9, #1
 802742a:	5d55      	ldrb	r5, [r2, r5]
 802742c:	bf0c      	ite	eq
 802742e:	f005 050f 	andeq.w	r5, r5, #15
 8027432:	112d      	asrne	r5, r5, #4
 8027434:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8027438:	b2ed      	uxtb	r5, r5
 802743a:	3001      	adds	r0, #1
 802743c:	d456      	bmi.n	80274ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802743e:	4580      	cmp	r8, r0
 8027440:	dd54      	ble.n	80274ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8027442:	2f00      	cmp	r7, #0
 8027444:	d054      	beq.n	80274f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8027446:	3301      	adds	r3, #1
 8027448:	449e      	add	lr, r3
 802744a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802744e:	f01e 0f01 	tst.w	lr, #1
 8027452:	5cd0      	ldrb	r0, [r2, r3]
 8027454:	bf0c      	ite	eq
 8027456:	f000 000f 	andeq.w	r0, r0, #15
 802745a:	1100      	asrne	r0, r0, #4
 802745c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027460:	b2c3      	uxtb	r3, r0
 8027462:	b2ba      	uxth	r2, r7
 8027464:	fa1f fc8c 	uxth.w	ip, ip
 8027468:	fb02 f00c 	mul.w	r0, r2, ip
 802746c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8027470:	0112      	lsls	r2, r2, #4
 8027472:	fa1f fc8c 	uxth.w	ip, ip
 8027476:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802747a:	1a12      	subs	r2, r2, r0
 802747c:	eba7 070c 	sub.w	r7, r7, ip
 8027480:	b292      	uxth	r2, r2
 8027482:	b2bf      	uxth	r7, r7
 8027484:	4362      	muls	r2, r4
 8027486:	fb06 2207 	mla	r2, r6, r7, r2
 802748a:	fb0c 2505 	mla	r5, ip, r5, r2
 802748e:	fb00 5303 	mla	r3, r0, r3, r5
 8027492:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027496:	b1b3      	cbz	r3, 80274c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8027498:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802749c:	435a      	muls	r2, r3
 802749e:	1c53      	adds	r3, r2, #1
 80274a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80274a4:	4a2d      	ldr	r2, [pc, #180]	; (802755c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80274a6:	121b      	asrs	r3, r3, #8
 80274a8:	6812      	ldr	r2, [r2, #0]
 80274aa:	2bff      	cmp	r3, #255	; 0xff
 80274ac:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80274b0:	d120      	bne.n	80274f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80274b2:	4b2b      	ldr	r3, [pc, #172]	; (8027560 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80274b4:	0950      	lsrs	r0, r2, #5
 80274b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80274ba:	4033      	ands	r3, r6
 80274bc:	4318      	orrs	r0, r3
 80274be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80274c2:	4302      	orrs	r2, r0
 80274c4:	800a      	strh	r2, [r1, #0]
 80274c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80274ca:	2600      	movs	r6, #0
 80274cc:	e788      	b.n	80273e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80274ce:	2400      	movs	r4, #0
 80274d0:	4626      	mov	r6, r4
 80274d2:	e799      	b.n	8027408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80274d4:	2400      	movs	r4, #0
 80274d6:	e797      	b.n	8027408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80274d8:	463c      	mov	r4, r7
 80274da:	e795      	b.n	8027408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80274dc:	2500      	movs	r5, #0
 80274de:	e7ac      	b.n	802743a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80274e0:	2300      	movs	r3, #0
 80274e2:	461d      	mov	r5, r3
 80274e4:	e7bd      	b.n	8027462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80274e6:	4663      	mov	r3, ip
 80274e8:	4665      	mov	r5, ip
 80274ea:	e7ba      	b.n	8027462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80274ec:	2300      	movs	r3, #0
 80274ee:	e7b8      	b.n	8027462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80274f0:	463b      	mov	r3, r7
 80274f2:	e7b6      	b.n	8027462 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80274f4:	880d      	ldrh	r5, [r1, #0]
 80274f6:	b29f      	uxth	r7, r3
 80274f8:	122c      	asrs	r4, r5, #8
 80274fa:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80274fe:	43db      	mvns	r3, r3
 8027500:	b2db      	uxtb	r3, r3
 8027502:	fb10 f007 	smulbb	r0, r0, r7
 8027506:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802750a:	fb04 0403 	mla	r4, r4, r3, r0
 802750e:	b2f6      	uxtb	r6, r6
 8027510:	10e8      	asrs	r0, r5, #3
 8027512:	b2d2      	uxtb	r2, r2
 8027514:	00ed      	lsls	r5, r5, #3
 8027516:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802751a:	fb12 f207 	smulbb	r2, r2, r7
 802751e:	fb16 f607 	smulbb	r6, r6, r7
 8027522:	b2ed      	uxtb	r5, r5
 8027524:	b2a4      	uxth	r4, r4
 8027526:	fb00 6603 	mla	r6, r0, r3, r6
 802752a:	fb05 2303 	mla	r3, r5, r3, r2
 802752e:	b29a      	uxth	r2, r3
 8027530:	1c63      	adds	r3, r4, #1
 8027532:	b2b0      	uxth	r0, r6
 8027534:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8027538:	1c53      	adds	r3, r2, #1
 802753a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802753e:	1c42      	adds	r2, r0, #1
 8027540:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027544:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027548:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802754c:	0940      	lsrs	r0, r0, #5
 802754e:	4323      	orrs	r3, r4
 8027550:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027554:	4303      	orrs	r3, r0
 8027556:	800b      	strh	r3, [r1, #0]
 8027558:	e7b5      	b.n	80274c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802755a:	bf00      	nop
 802755c:	2001385c 	.word	0x2001385c
 8027560:	00fff800 	.word	0x00fff800

08027564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027568:	b097      	sub	sp, #92	; 0x5c
 802756a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802756e:	9214      	str	r2, [sp, #80]	; 0x50
 8027570:	9309      	str	r3, [sp, #36]	; 0x24
 8027572:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8027574:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8027578:	910d      	str	r1, [sp, #52]	; 0x34
 802757a:	930f      	str	r3, [sp, #60]	; 0x3c
 802757c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8027580:	9015      	str	r0, [sp, #84]	; 0x54
 8027582:	6850      	ldr	r0, [r2, #4]
 8027584:	6812      	ldr	r2, [r2, #0]
 8027586:	fb00 1303 	mla	r3, r0, r3, r1
 802758a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802758e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027590:	689b      	ldr	r3, [r3, #8]
 8027592:	3301      	adds	r3, #1
 8027594:	f023 0301 	bic.w	r3, r3, #1
 8027598:	930a      	str	r3, [sp, #40]	; 0x28
 802759a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802759c:	681f      	ldr	r7, [r3, #0]
 802759e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80275a0:	2b00      	cmp	r3, #0
 80275a2:	dc03      	bgt.n	80275ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80275a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80275a6:	2b00      	cmp	r3, #0
 80275a8:	f340 8287 	ble.w	8027aba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80275ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80275ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80275b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80275b6:	1e48      	subs	r0, r1, #1
 80275b8:	f102 3cff 	add.w	ip, r2, #4294967295
 80275bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80275be:	2b00      	cmp	r3, #0
 80275c0:	f340 80c4 	ble.w	802774c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80275c4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80275c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80275cc:	d406      	bmi.n	80275dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80275ce:	4586      	cmp	lr, r0
 80275d0:	da04      	bge.n	80275dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80275d2:	2b00      	cmp	r3, #0
 80275d4:	db02      	blt.n	80275dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80275d6:	4563      	cmp	r3, ip
 80275d8:	f2c0 80b9 	blt.w	802774e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80275dc:	f11e 0e01 	adds.w	lr, lr, #1
 80275e0:	f100 80aa 	bmi.w	8027738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80275e4:	4571      	cmp	r1, lr
 80275e6:	f2c0 80a7 	blt.w	8027738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80275ea:	3301      	adds	r3, #1
 80275ec:	f100 80a4 	bmi.w	8027738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80275f0:	429a      	cmp	r2, r3
 80275f2:	f2c0 80a1 	blt.w	8027738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80275f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80275f8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80275fc:	930e      	str	r3, [sp, #56]	; 0x38
 80275fe:	46c8      	mov	r8, r9
 8027600:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8027602:	2b00      	cmp	r3, #0
 8027604:	f340 80c3 	ble.w	802778e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8027608:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802760a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802760e:	1423      	asrs	r3, r4, #16
 8027610:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027614:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027618:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802761c:	f100 814d 	bmi.w	80278ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8027620:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027624:	455b      	cmp	r3, fp
 8027626:	f280 8148 	bge.w	80278ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802762a:	2800      	cmp	r0, #0
 802762c:	f2c0 8145 	blt.w	80278ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8027630:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027634:	4558      	cmp	r0, fp
 8027636:	f280 8140 	bge.w	80278ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802763a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802763c:	fb00 3305 	mla	r3, r0, r5, r3
 8027640:	0858      	lsrs	r0, r3, #1
 8027642:	07dd      	lsls	r5, r3, #31
 8027644:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027648:	bf54      	ite	pl
 802764a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802764e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027652:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027656:	fa5f fc8c 	uxtb.w	ip, ip
 802765a:	2a00      	cmp	r2, #0
 802765c:	f000 80db 	beq.w	8027816 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8027660:	1c58      	adds	r0, r3, #1
 8027662:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027666:	07c0      	lsls	r0, r0, #31
 8027668:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802766c:	bf54      	ite	pl
 802766e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027672:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027676:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802767a:	fa5f f08e 	uxtb.w	r0, lr
 802767e:	9010      	str	r0, [sp, #64]	; 0x40
 8027680:	b1c9      	cbz	r1, 80276b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8027682:	4453      	add	r3, sl
 8027684:	0858      	lsrs	r0, r3, #1
 8027686:	07dd      	lsls	r5, r3, #31
 8027688:	5c38      	ldrb	r0, [r7, r0]
 802768a:	bf54      	ite	pl
 802768c:	f000 000f 	andpl.w	r0, r0, #15
 8027690:	1100      	asrmi	r0, r0, #4
 8027692:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027696:	3301      	adds	r3, #1
 8027698:	b2c0      	uxtb	r0, r0
 802769a:	900b      	str	r0, [sp, #44]	; 0x2c
 802769c:	0858      	lsrs	r0, r3, #1
 802769e:	07dd      	lsls	r5, r3, #31
 80276a0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80276a4:	bf54      	ite	pl
 80276a6:	f00e 030f 	andpl.w	r3, lr, #15
 80276aa:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80276ae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80276b2:	b2db      	uxtb	r3, r3
 80276b4:	9311      	str	r3, [sp, #68]	; 0x44
 80276b6:	b292      	uxth	r2, r2
 80276b8:	b289      	uxth	r1, r1
 80276ba:	fb02 f301 	mul.w	r3, r2, r1
 80276be:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80276c2:	0112      	lsls	r2, r2, #4
 80276c4:	b289      	uxth	r1, r1
 80276c6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80276ca:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80276cc:	1ad2      	subs	r2, r2, r3
 80276ce:	1a40      	subs	r0, r0, r1
 80276d0:	b292      	uxth	r2, r2
 80276d2:	436a      	muls	r2, r5
 80276d4:	b280      	uxth	r0, r0
 80276d6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80276da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80276dc:	fb01 c102 	mla	r1, r1, r2, ip
 80276e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80276e2:	fb03 1302 	mla	r3, r3, r2, r1
 80276e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80276ea:	b1db      	cbz	r3, 8027724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80276ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80276ee:	4353      	muls	r3, r2
 80276f0:	1c5a      	adds	r2, r3, #1
 80276f2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80276f6:	4ac6      	ldr	r2, [pc, #792]	; (8027a10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80276f8:	121b      	asrs	r3, r3, #8
 80276fa:	6812      	ldr	r2, [r2, #0]
 80276fc:	2bff      	cmp	r3, #255	; 0xff
 80276fe:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8027702:	f040 8099 	bne.w	8027838 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8027706:	0953      	lsrs	r3, r2, #5
 8027708:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802770c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027710:	f02c 0c07 	bic.w	ip, ip, #7
 8027714:	ea43 0c0c 	orr.w	ip, r3, ip
 8027718:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802771c:	ea4c 0202 	orr.w	r2, ip, r2
 8027720:	f8a8 2000 	strh.w	r2, [r8]
 8027724:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8027726:	441c      	add	r4, r3
 8027728:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802772a:	441e      	add	r6, r3
 802772c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802772e:	3b01      	subs	r3, #1
 8027730:	f108 0802 	add.w	r8, r8, #2
 8027734:	930e      	str	r3, [sp, #56]	; 0x38
 8027736:	e763      	b.n	8027600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027738:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802773a:	441c      	add	r4, r3
 802773c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802773e:	441e      	add	r6, r3
 8027740:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027742:	3b01      	subs	r3, #1
 8027744:	9309      	str	r3, [sp, #36]	; 0x24
 8027746:	f109 0902 	add.w	r9, r9, #2
 802774a:	e737      	b.n	80275bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802774c:	d024      	beq.n	8027798 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802774e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027750:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8027752:	3b01      	subs	r3, #1
 8027754:	fb00 4003 	mla	r0, r0, r3, r4
 8027758:	1400      	asrs	r0, r0, #16
 802775a:	f53f af4c 	bmi.w	80275f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802775e:	3901      	subs	r1, #1
 8027760:	4288      	cmp	r0, r1
 8027762:	f6bf af48 	bge.w	80275f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027766:	9924      	ldr	r1, [sp, #144]	; 0x90
 8027768:	fb01 6303 	mla	r3, r1, r3, r6
 802776c:	141b      	asrs	r3, r3, #16
 802776e:	f53f af42 	bmi.w	80275f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027772:	3a01      	subs	r2, #1
 8027774:	4293      	cmp	r3, r2
 8027776:	f6bf af3e 	bge.w	80275f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802777a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802777e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8027782:	930e      	str	r3, [sp, #56]	; 0x38
 8027784:	46c8      	mov	r8, r9
 8027786:	f1bb 0f00 	cmp.w	fp, #0
 802778a:	f300 80b7 	bgt.w	80278fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802778e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027790:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027794:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027798:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802779a:	2b00      	cmp	r3, #0
 802779c:	f340 818d 	ble.w	8027aba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80277a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80277a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80277a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80277ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80277ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80277b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80277b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80277ba:	eef0 6a62 	vmov.f32	s13, s5
 80277be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80277c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80277c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80277ca:	ee16 4a90 	vmov	r4, s13
 80277ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80277d2:	eef0 6a43 	vmov.f32	s13, s6
 80277d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80277da:	ee12 2a90 	vmov	r2, s5
 80277de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80277e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80277e6:	ee13 2a10 	vmov	r2, s6
 80277ea:	9323      	str	r3, [sp, #140]	; 0x8c
 80277ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80277ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80277f2:	9324      	str	r3, [sp, #144]	; 0x90
 80277f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80277f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80277f8:	3b01      	subs	r3, #1
 80277fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80277fe:	930d      	str	r3, [sp, #52]	; 0x34
 8027800:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027802:	bf08      	it	eq
 8027804:	4613      	moveq	r3, r2
 8027806:	ee16 6a90 	vmov	r6, s13
 802780a:	9309      	str	r3, [sp, #36]	; 0x24
 802780c:	eeb0 3a67 	vmov.f32	s6, s15
 8027810:	eef0 2a47 	vmov.f32	s5, s14
 8027814:	e6c3      	b.n	802759e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027816:	2900      	cmp	r1, #0
 8027818:	f43f af4d 	beq.w	80276b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802781c:	eb0a 0003 	add.w	r0, sl, r3
 8027820:	0843      	lsrs	r3, r0, #1
 8027822:	07c0      	lsls	r0, r0, #31
 8027824:	5cfb      	ldrb	r3, [r7, r3]
 8027826:	bf54      	ite	pl
 8027828:	f003 030f 	andpl.w	r3, r3, #15
 802782c:	111b      	asrmi	r3, r3, #4
 802782e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027832:	b2db      	uxtb	r3, r3
 8027834:	930b      	str	r3, [sp, #44]	; 0x2c
 8027836:	e73e      	b.n	80276b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8027838:	f8b8 e000 	ldrh.w	lr, [r8]
 802783c:	fa1f fb83 	uxth.w	fp, r3
 8027840:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027844:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027848:	43db      	mvns	r3, r3
 802784a:	b2db      	uxtb	r3, r3
 802784c:	fb11 f10b 	smulbb	r1, r1, fp
 8027850:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027854:	fb00 1003 	mla	r0, r0, r3, r1
 8027858:	fa5f fc8c 	uxtb.w	ip, ip
 802785c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027860:	b2d2      	uxtb	r2, r2
 8027862:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027866:	b280      	uxth	r0, r0
 8027868:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802786c:	fb1c fc0b 	smulbb	ip, ip, fp
 8027870:	fa5f fe8e 	uxtb.w	lr, lr
 8027874:	fb12 fb0b 	smulbb	fp, r2, fp
 8027878:	fb01 cc03 	mla	ip, r1, r3, ip
 802787c:	fb0e bb03 	mla	fp, lr, r3, fp
 8027880:	1c43      	adds	r3, r0, #1
 8027882:	fa1f fc8c 	uxth.w	ip, ip
 8027886:	fa1f fb8b 	uxth.w	fp, fp
 802788a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802788e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8027892:	f10c 0101 	add.w	r1, ip, #1
 8027896:	f10b 0001 	add.w	r0, fp, #1
 802789a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802789e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80278a2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80278a6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80278aa:	4318      	orrs	r0, r3
 80278ac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80278b0:	ea40 000c 	orr.w	r0, r0, ip
 80278b4:	f8a8 0000 	strh.w	r0, [r8]
 80278b8:	e734      	b.n	8027724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80278ba:	f113 0b01 	adds.w	fp, r3, #1
 80278be:	f53f af31 	bmi.w	8027724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80278c2:	45dc      	cmp	ip, fp
 80278c4:	f6ff af2e 	blt.w	8027724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80278c8:	f110 0b01 	adds.w	fp, r0, #1
 80278cc:	f53f af2a 	bmi.w	8027724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80278d0:	45de      	cmp	lr, fp
 80278d2:	f6ff af27 	blt.w	8027724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80278d6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80278d8:	9302      	str	r3, [sp, #8]
 80278da:	fa0f f38e 	sxth.w	r3, lr
 80278de:	9301      	str	r3, [sp, #4]
 80278e0:	fa0f f38c 	sxth.w	r3, ip
 80278e4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80278e8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80278ec:	9300      	str	r3, [sp, #0]
 80278ee:	463a      	mov	r2, r7
 80278f0:	4653      	mov	r3, sl
 80278f2:	4641      	mov	r1, r8
 80278f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80278f6:	f7ff fd4d 	bl	8027394 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80278fa:	e713      	b.n	8027724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80278fc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80278fe:	1422      	asrs	r2, r4, #16
 8027900:	1433      	asrs	r3, r6, #16
 8027902:	fb05 2303 	mla	r3, r5, r3, r2
 8027906:	085a      	lsrs	r2, r3, #1
 8027908:	07dd      	lsls	r5, r3, #31
 802790a:	5cba      	ldrb	r2, [r7, r2]
 802790c:	bf54      	ite	pl
 802790e:	f002 020f 	andpl.w	r2, r2, #15
 8027912:	1112      	asrmi	r2, r2, #4
 8027914:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027918:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802791c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027920:	b2d2      	uxtb	r2, r2
 8027922:	2900      	cmp	r1, #0
 8027924:	d076      	beq.n	8027a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8027926:	f103 0e01 	add.w	lr, r3, #1
 802792a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802792e:	f01e 0f01 	tst.w	lr, #1
 8027932:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027936:	bf0c      	ite	eq
 8027938:	f00c 0c0f 	andeq.w	ip, ip, #15
 802793c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8027940:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027944:	fa5f f58c 	uxtb.w	r5, ip
 8027948:	9512      	str	r5, [sp, #72]	; 0x48
 802794a:	b300      	cbz	r0, 802798e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802794c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802794e:	442b      	add	r3, r5
 8027950:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027954:	07dd      	lsls	r5, r3, #31
 8027956:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802795a:	bf54      	ite	pl
 802795c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027960:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027964:	3301      	adds	r3, #1
 8027966:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802796a:	fa5f f58c 	uxtb.w	r5, ip
 802796e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027972:	950c      	str	r5, [sp, #48]	; 0x30
 8027974:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027978:	07dd      	lsls	r5, r3, #31
 802797a:	bf54      	ite	pl
 802797c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027980:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027984:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027988:	fa5f f38c 	uxtb.w	r3, ip
 802798c:	9313      	str	r3, [sp, #76]	; 0x4c
 802798e:	b289      	uxth	r1, r1
 8027990:	b280      	uxth	r0, r0
 8027992:	fb01 f300 	mul.w	r3, r1, r0
 8027996:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802799a:	0109      	lsls	r1, r1, #4
 802799c:	b280      	uxth	r0, r0
 802799e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80279a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80279a4:	1ac9      	subs	r1, r1, r3
 80279a6:	ebac 0c00 	sub.w	ip, ip, r0
 80279aa:	b289      	uxth	r1, r1
 80279ac:	4369      	muls	r1, r5
 80279ae:	fa1f fc8c 	uxth.w	ip, ip
 80279b2:	fb02 120c 	mla	r2, r2, ip, r1
 80279b6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80279b8:	fb00 2001 	mla	r0, r0, r1, r2
 80279bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80279be:	fb03 0302 	mla	r3, r3, r2, r0
 80279c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80279c6:	b1d3      	cbz	r3, 80279fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80279c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80279ca:	4353      	muls	r3, r2
 80279cc:	1c5a      	adds	r2, r3, #1
 80279ce:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80279d2:	4a0f      	ldr	r2, [pc, #60]	; (8027a10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80279d4:	121b      	asrs	r3, r3, #8
 80279d6:	6812      	ldr	r2, [r2, #0]
 80279d8:	2bff      	cmp	r3, #255	; 0xff
 80279da:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80279de:	d12d      	bne.n	8027a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80279e0:	0953      	lsrs	r3, r2, #5
 80279e2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80279e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80279ea:	f02c 0c07 	bic.w	ip, ip, #7
 80279ee:	ea43 0c0c 	orr.w	ip, r3, ip
 80279f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80279f6:	ea4c 0202 	orr.w	r2, ip, r2
 80279fa:	f8a8 2000 	strh.w	r2, [r8]
 80279fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8027a00:	441c      	add	r4, r3
 8027a02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027a04:	f108 0802 	add.w	r8, r8, #2
 8027a08:	441e      	add	r6, r3
 8027a0a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027a0e:	e6ba      	b.n	8027786 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027a10:	2001385c 	.word	0x2001385c
 8027a14:	2800      	cmp	r0, #0
 8027a16:	d0ba      	beq.n	802798e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8027a18:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027a1a:	442b      	add	r3, r5
 8027a1c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027a20:	07db      	lsls	r3, r3, #31
 8027a22:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027a26:	bf54      	ite	pl
 8027a28:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027a2c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027a30:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027a34:	fa5f f38c 	uxtb.w	r3, ip
 8027a38:	930c      	str	r3, [sp, #48]	; 0x30
 8027a3a:	e7a8      	b.n	802798e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8027a3c:	f8b8 e000 	ldrh.w	lr, [r8]
 8027a40:	fa1f fa83 	uxth.w	sl, r3
 8027a44:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027a48:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027a4c:	43db      	mvns	r3, r3
 8027a4e:	b2db      	uxtb	r3, r3
 8027a50:	fb11 f10a 	smulbb	r1, r1, sl
 8027a54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027a58:	fb00 1003 	mla	r0, r0, r3, r1
 8027a5c:	b2d2      	uxtb	r2, r2
 8027a5e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027a62:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027a66:	fa5f fe8e 	uxtb.w	lr, lr
 8027a6a:	fb12 f20a 	smulbb	r2, r2, sl
 8027a6e:	fb0e 2203 	mla	r2, lr, r3, r2
 8027a72:	fa5f fc8c 	uxtb.w	ip, ip
 8027a76:	b280      	uxth	r0, r0
 8027a78:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8027a7c:	b292      	uxth	r2, r2
 8027a7e:	fb1c fc0a 	smulbb	ip, ip, sl
 8027a82:	fb01 cc03 	mla	ip, r1, r3, ip
 8027a86:	1c43      	adds	r3, r0, #1
 8027a88:	1c51      	adds	r1, r2, #1
 8027a8a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027a8e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8027a92:	fa1f fc8c 	uxth.w	ip, ip
 8027a96:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8027a9a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8027a9e:	4308      	orrs	r0, r1
 8027aa0:	f10c 0101 	add.w	r1, ip, #1
 8027aa4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027aa8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027aac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8027ab0:	ea40 000c 	orr.w	r0, r0, ip
 8027ab4:	f8a8 0000 	strh.w	r0, [r8]
 8027ab8:	e7a1      	b.n	80279fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8027aba:	b017      	add	sp, #92	; 0x5c
 8027abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027ac0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8027ac0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027ac4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8027ac8:	2d00      	cmp	r5, #0
 8027aca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8027ace:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8027ad2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8027ad6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8027ada:	fb05 0e03 	mla	lr, r5, r3, r0
 8027ade:	f2c0 80b0 	blt.w	8027c42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8027ae2:	45a9      	cmp	r9, r5
 8027ae4:	f340 80ad 	ble.w	8027c42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8027ae8:	2800      	cmp	r0, #0
 8027aea:	f2c0 80a8 	blt.w	8027c3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8027aee:	4580      	cmp	r8, r0
 8027af0:	f340 80a5 	ble.w	8027c3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8027af4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8027af8:	f01e 0f01 	tst.w	lr, #1
 8027afc:	5d16      	ldrb	r6, [r2, r4]
 8027afe:	bf0c      	ite	eq
 8027b00:	f006 060f 	andeq.w	r6, r6, #15
 8027b04:	1136      	asrne	r6, r6, #4
 8027b06:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8027b0a:	b2f6      	uxtb	r6, r6
 8027b0c:	1c44      	adds	r4, r0, #1
 8027b0e:	f100 809b 	bmi.w	8027c48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8027b12:	45a0      	cmp	r8, r4
 8027b14:	f340 8098 	ble.w	8027c48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8027b18:	2f00      	cmp	r7, #0
 8027b1a:	f000 8097 	beq.w	8027c4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8027b1e:	f10e 0a01 	add.w	sl, lr, #1
 8027b22:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8027b26:	f01a 0f01 	tst.w	sl, #1
 8027b2a:	5d14      	ldrb	r4, [r2, r4]
 8027b2c:	bf0c      	ite	eq
 8027b2e:	f004 040f 	andeq.w	r4, r4, #15
 8027b32:	1124      	asrne	r4, r4, #4
 8027b34:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8027b38:	b2e4      	uxtb	r4, r4
 8027b3a:	3501      	adds	r5, #1
 8027b3c:	f100 808a 	bmi.w	8027c54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8027b40:	45a9      	cmp	r9, r5
 8027b42:	f340 8087 	ble.w	8027c54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8027b46:	f1bc 0f00 	cmp.w	ip, #0
 8027b4a:	f000 8086 	beq.w	8027c5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8027b4e:	2800      	cmp	r0, #0
 8027b50:	db7e      	blt.n	8027c50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8027b52:	4580      	cmp	r8, r0
 8027b54:	dd7c      	ble.n	8027c50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8027b56:	eb03 090e 	add.w	r9, r3, lr
 8027b5a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8027b5e:	f019 0f01 	tst.w	r9, #1
 8027b62:	5d55      	ldrb	r5, [r2, r5]
 8027b64:	bf0c      	ite	eq
 8027b66:	f005 050f 	andeq.w	r5, r5, #15
 8027b6a:	112d      	asrne	r5, r5, #4
 8027b6c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8027b70:	b2ed      	uxtb	r5, r5
 8027b72:	3001      	adds	r0, #1
 8027b74:	d474      	bmi.n	8027c60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8027b76:	4580      	cmp	r8, r0
 8027b78:	dd72      	ble.n	8027c60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8027b7a:	2f00      	cmp	r7, #0
 8027b7c:	d072      	beq.n	8027c64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8027b7e:	3301      	adds	r3, #1
 8027b80:	449e      	add	lr, r3
 8027b82:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8027b86:	f01e 0f01 	tst.w	lr, #1
 8027b8a:	5cd0      	ldrb	r0, [r2, r3]
 8027b8c:	bf0c      	ite	eq
 8027b8e:	f000 000f 	andeq.w	r0, r0, #15
 8027b92:	1100      	asrne	r0, r0, #4
 8027b94:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027b98:	b2c3      	uxtb	r3, r0
 8027b9a:	b2ba      	uxth	r2, r7
 8027b9c:	fa1f fc8c 	uxth.w	ip, ip
 8027ba0:	fb02 f00c 	mul.w	r0, r2, ip
 8027ba4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8027ba8:	0112      	lsls	r2, r2, #4
 8027baa:	fa1f fc8c 	uxth.w	ip, ip
 8027bae:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8027bb2:	1a12      	subs	r2, r2, r0
 8027bb4:	eba7 070c 	sub.w	r7, r7, ip
 8027bb8:	b292      	uxth	r2, r2
 8027bba:	b2bf      	uxth	r7, r7
 8027bbc:	4362      	muls	r2, r4
 8027bbe:	fb06 2207 	mla	r2, r6, r7, r2
 8027bc2:	fb0c 2505 	mla	r5, ip, r5, r2
 8027bc6:	fb00 5303 	mla	r3, r0, r3, r5
 8027bca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027bce:	b3a3      	cbz	r3, 8027c3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8027bd0:	4a25      	ldr	r2, [pc, #148]	; (8027c68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8027bd2:	880e      	ldrh	r6, [r1, #0]
 8027bd4:	6815      	ldr	r5, [r2, #0]
 8027bd6:	1234      	asrs	r4, r6, #8
 8027bd8:	b29a      	uxth	r2, r3
 8027bda:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8027bde:	43db      	mvns	r3, r3
 8027be0:	b2db      	uxtb	r3, r3
 8027be2:	fb10 f002 	smulbb	r0, r0, r2
 8027be6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027bea:	fb04 0403 	mla	r4, r4, r3, r0
 8027bee:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8027bf2:	10f0      	asrs	r0, r6, #3
 8027bf4:	b2ed      	uxtb	r5, r5
 8027bf6:	00f6      	lsls	r6, r6, #3
 8027bf8:	fb17 f702 	smulbb	r7, r7, r2
 8027bfc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027c00:	fb15 f202 	smulbb	r2, r5, r2
 8027c04:	b2f6      	uxtb	r6, r6
 8027c06:	b2a4      	uxth	r4, r4
 8027c08:	fb00 7003 	mla	r0, r0, r3, r7
 8027c0c:	fb06 2303 	mla	r3, r6, r3, r2
 8027c10:	b29a      	uxth	r2, r3
 8027c12:	1c63      	adds	r3, r4, #1
 8027c14:	b280      	uxth	r0, r0
 8027c16:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8027c1a:	1c53      	adds	r3, r2, #1
 8027c1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027c20:	1c42      	adds	r2, r0, #1
 8027c22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027c26:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027c2a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027c2e:	0940      	lsrs	r0, r0, #5
 8027c30:	4323      	orrs	r3, r4
 8027c32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027c36:	4303      	orrs	r3, r0
 8027c38:	800b      	strh	r3, [r1, #0]
 8027c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027c3e:	2600      	movs	r6, #0
 8027c40:	e764      	b.n	8027b0c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8027c42:	2400      	movs	r4, #0
 8027c44:	4626      	mov	r6, r4
 8027c46:	e778      	b.n	8027b3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027c48:	2400      	movs	r4, #0
 8027c4a:	e776      	b.n	8027b3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027c4c:	463c      	mov	r4, r7
 8027c4e:	e774      	b.n	8027b3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027c50:	2500      	movs	r5, #0
 8027c52:	e78e      	b.n	8027b72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8027c54:	2300      	movs	r3, #0
 8027c56:	461d      	mov	r5, r3
 8027c58:	e79f      	b.n	8027b9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027c5a:	4663      	mov	r3, ip
 8027c5c:	4665      	mov	r5, ip
 8027c5e:	e79c      	b.n	8027b9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027c60:	2300      	movs	r3, #0
 8027c62:	e79a      	b.n	8027b9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027c64:	463b      	mov	r3, r7
 8027c66:	e798      	b.n	8027b9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027c68:	2001385c 	.word	0x2001385c

08027c6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c70:	b093      	sub	sp, #76	; 0x4c
 8027c72:	461d      	mov	r5, r3
 8027c74:	920c      	str	r2, [sp, #48]	; 0x30
 8027c76:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8027c78:	9107      	str	r1, [sp, #28]
 8027c7a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8027c7e:	9011      	str	r0, [sp, #68]	; 0x44
 8027c80:	6850      	ldr	r0, [r2, #4]
 8027c82:	6812      	ldr	r2, [r2, #0]
 8027c84:	fb00 1303 	mla	r3, r0, r3, r1
 8027c88:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8027c8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027c8e:	689b      	ldr	r3, [r3, #8]
 8027c90:	3301      	adds	r3, #1
 8027c92:	f023 0301 	bic.w	r3, r3, #1
 8027c96:	9306      	str	r3, [sp, #24]
 8027c98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027c9a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8027c9e:	681f      	ldr	r7, [r3, #0]
 8027ca0:	9b07      	ldr	r3, [sp, #28]
 8027ca2:	2b00      	cmp	r3, #0
 8027ca4:	dc03      	bgt.n	8027cae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8027ca6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8027ca8:	2b00      	cmp	r3, #0
 8027caa:	f340 8267 	ble.w	802817c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8027cae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027cb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027cb4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027cb8:	1e48      	subs	r0, r1, #1
 8027cba:	f102 3cff 	add.w	ip, r2, #4294967295
 8027cbe:	2d00      	cmp	r5, #0
 8027cc0:	f340 80b8 	ble.w	8027e34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8027cc4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027cc8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027ccc:	d406      	bmi.n	8027cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027cce:	4586      	cmp	lr, r0
 8027cd0:	da04      	bge.n	8027cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027cd2:	2b00      	cmp	r3, #0
 8027cd4:	db02      	blt.n	8027cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027cd6:	4563      	cmp	r3, ip
 8027cd8:	f2c0 80ad 	blt.w	8027e36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8027cdc:	f11e 0e01 	adds.w	lr, lr, #1
 8027ce0:	f100 80a0 	bmi.w	8027e24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027ce4:	4571      	cmp	r1, lr
 8027ce6:	f2c0 809d 	blt.w	8027e24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027cea:	3301      	adds	r3, #1
 8027cec:	f100 809a 	bmi.w	8027e24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027cf0:	429a      	cmp	r2, r3
 8027cf2:	f2c0 8097 	blt.w	8027e24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027cf6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8027cfa:	9509      	str	r5, [sp, #36]	; 0x24
 8027cfc:	46c8      	mov	r8, r9
 8027cfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027d00:	2b00      	cmp	r3, #0
 8027d02:	f340 80b6 	ble.w	8027e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8027d06:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8027d0a:	9308      	str	r3, [sp, #32]
 8027d0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027d0e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8027d12:	1423      	asrs	r3, r4, #16
 8027d14:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027d18:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027d1c:	f100 813e 	bmi.w	8027f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027d20:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027d24:	455b      	cmp	r3, fp
 8027d26:	f280 8139 	bge.w	8027f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027d2a:	2800      	cmp	r0, #0
 8027d2c:	f2c0 8136 	blt.w	8027f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027d30:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027d34:	4558      	cmp	r0, fp
 8027d36:	f280 8131 	bge.w	8027f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027d3a:	9a06      	ldr	r2, [sp, #24]
 8027d3c:	fb00 3302 	mla	r3, r0, r2, r3
 8027d40:	0858      	lsrs	r0, r3, #1
 8027d42:	07da      	lsls	r2, r3, #31
 8027d44:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027d48:	9a08      	ldr	r2, [sp, #32]
 8027d4a:	bf54      	ite	pl
 8027d4c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027d50:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027d54:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027d58:	fa5f fc8c 	uxtb.w	ip, ip
 8027d5c:	2a00      	cmp	r2, #0
 8027d5e:	f000 80cb 	beq.w	8027ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8027d62:	1c58      	adds	r0, r3, #1
 8027d64:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027d68:	07c0      	lsls	r0, r0, #31
 8027d6a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8027d6e:	bf54      	ite	pl
 8027d70:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027d74:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027d78:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8027d7c:	fa5f fe8e 	uxtb.w	lr, lr
 8027d80:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8027d84:	b1b9      	cbz	r1, 8027db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027d86:	4453      	add	r3, sl
 8027d88:	0858      	lsrs	r0, r3, #1
 8027d8a:	07da      	lsls	r2, r3, #31
 8027d8c:	5c38      	ldrb	r0, [r7, r0]
 8027d8e:	bf54      	ite	pl
 8027d90:	f000 000f 	andpl.w	r0, r0, #15
 8027d94:	1100      	asrmi	r0, r0, #4
 8027d96:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027d9a:	b2c0      	uxtb	r0, r0
 8027d9c:	900a      	str	r0, [sp, #40]	; 0x28
 8027d9e:	1c58      	adds	r0, r3, #1
 8027da0:	0843      	lsrs	r3, r0, #1
 8027da2:	07c2      	lsls	r2, r0, #31
 8027da4:	5cfb      	ldrb	r3, [r7, r3]
 8027da6:	bf54      	ite	pl
 8027da8:	f003 030f 	andpl.w	r3, r3, #15
 8027dac:	111b      	asrmi	r3, r3, #4
 8027dae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027db2:	b2db      	uxtb	r3, r3
 8027db4:	930e      	str	r3, [sp, #56]	; 0x38
 8027db6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8027dba:	b289      	uxth	r1, r1
 8027dbc:	fb02 f301 	mul.w	r3, r2, r1
 8027dc0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027dc4:	0112      	lsls	r2, r2, #4
 8027dc6:	b289      	uxth	r1, r1
 8027dc8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8027dcc:	1a40      	subs	r0, r0, r1
 8027dce:	fa1f fe80 	uxth.w	lr, r0
 8027dd2:	1ad2      	subs	r2, r2, r3
 8027dd4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027dd6:	b292      	uxth	r2, r2
 8027dd8:	4342      	muls	r2, r0
 8027dda:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8027dde:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027de0:	fb01 c102 	mla	r1, r1, r2, ip
 8027de4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8027de6:	fb03 1302 	mla	r3, r3, r2, r1
 8027dea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027dee:	2bff      	cmp	r3, #255	; 0xff
 8027df0:	f040 8093 	bne.w	8027f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027df4:	4bbe      	ldr	r3, [pc, #760]	; (80280f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027df6:	681a      	ldr	r2, [r3, #0]
 8027df8:	4bbe      	ldr	r3, [pc, #760]	; (80280f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8027dfa:	0951      	lsrs	r1, r2, #5
 8027dfc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8027e00:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8027e04:	430b      	orrs	r3, r1
 8027e06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027e0a:	4313      	orrs	r3, r2
 8027e0c:	f8a8 3000 	strh.w	r3, [r8]
 8027e10:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027e12:	441c      	add	r4, r3
 8027e14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027e16:	441e      	add	r6, r3
 8027e18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027e1a:	3b01      	subs	r3, #1
 8027e1c:	f108 0802 	add.w	r8, r8, #2
 8027e20:	9309      	str	r3, [sp, #36]	; 0x24
 8027e22:	e76c      	b.n	8027cfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027e24:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027e26:	441c      	add	r4, r3
 8027e28:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027e2a:	3d01      	subs	r5, #1
 8027e2c:	441e      	add	r6, r3
 8027e2e:	f109 0902 	add.w	r9, r9, #2
 8027e32:	e744      	b.n	8027cbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8027e34:	d021      	beq.n	8027e7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027e36:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8027e38:	1e6b      	subs	r3, r5, #1
 8027e3a:	fb00 4003 	mla	r0, r0, r3, r4
 8027e3e:	1400      	asrs	r0, r0, #16
 8027e40:	f53f af59 	bmi.w	8027cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027e44:	3901      	subs	r1, #1
 8027e46:	4288      	cmp	r0, r1
 8027e48:	f6bf af55 	bge.w	8027cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027e4c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8027e4e:	fb01 6303 	mla	r3, r1, r3, r6
 8027e52:	141b      	asrs	r3, r3, #16
 8027e54:	f53f af4f 	bmi.w	8027cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027e58:	3a01      	subs	r2, #1
 8027e5a:	4293      	cmp	r3, r2
 8027e5c:	f6bf af4b 	bge.w	8027cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027e60:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8027e64:	9308      	str	r3, [sp, #32]
 8027e66:	46a8      	mov	r8, r5
 8027e68:	46ce      	mov	lr, r9
 8027e6a:	f1b8 0f00 	cmp.w	r8, #0
 8027e6e:	f300 80b5 	bgt.w	8027fdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8027e72:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027e76:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027e7a:	9b07      	ldr	r3, [sp, #28]
 8027e7c:	2b00      	cmp	r3, #0
 8027e7e:	f340 817d 	ble.w	802817c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8027e82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027e86:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027e8a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027e8e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027e90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027e94:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027e98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027e9c:	eef0 6a62 	vmov.f32	s13, s5
 8027ea0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027ea4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027ea8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027eac:	ee16 4a90 	vmov	r4, s13
 8027eb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027eb4:	eef0 6a43 	vmov.f32	s13, s6
 8027eb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027ebc:	ee12 2a90 	vmov	r2, s5
 8027ec0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027ec4:	fb92 f3f3 	sdiv	r3, r2, r3
 8027ec8:	ee13 2a10 	vmov	r2, s6
 8027ecc:	931f      	str	r3, [sp, #124]	; 0x7c
 8027ece:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027ed0:	fb92 f3f3 	sdiv	r3, r2, r3
 8027ed4:	9320      	str	r3, [sp, #128]	; 0x80
 8027ed6:	9b07      	ldr	r3, [sp, #28]
 8027ed8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8027eda:	3b01      	subs	r3, #1
 8027edc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027ee0:	9307      	str	r3, [sp, #28]
 8027ee2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027ee4:	ee16 6a90 	vmov	r6, s13
 8027ee8:	bf14      	ite	ne
 8027eea:	461d      	movne	r5, r3
 8027eec:	4615      	moveq	r5, r2
 8027eee:	eeb0 3a67 	vmov.f32	s6, s15
 8027ef2:	eef0 2a47 	vmov.f32	s5, s14
 8027ef6:	e6d3      	b.n	8027ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8027ef8:	2900      	cmp	r1, #0
 8027efa:	f43f af5c 	beq.w	8027db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027efe:	eb0a 0003 	add.w	r0, sl, r3
 8027f02:	0843      	lsrs	r3, r0, #1
 8027f04:	07c0      	lsls	r0, r0, #31
 8027f06:	5cfb      	ldrb	r3, [r7, r3]
 8027f08:	bf54      	ite	pl
 8027f0a:	f003 030f 	andpl.w	r3, r3, #15
 8027f0e:	111b      	asrmi	r3, r3, #4
 8027f10:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027f14:	b2db      	uxtb	r3, r3
 8027f16:	930a      	str	r3, [sp, #40]	; 0x28
 8027f18:	e74d      	b.n	8027db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027f1a:	2b00      	cmp	r3, #0
 8027f1c:	f43f af78 	beq.w	8027e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027f20:	4a73      	ldr	r2, [pc, #460]	; (80280f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027f22:	f8b8 c000 	ldrh.w	ip, [r8]
 8027f26:	6810      	ldr	r0, [r2, #0]
 8027f28:	fa1f fe83 	uxth.w	lr, r3
 8027f2c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8027f30:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027f34:	43db      	mvns	r3, r3
 8027f36:	b2db      	uxtb	r3, r3
 8027f38:	fb12 f20e 	smulbb	r2, r2, lr
 8027f3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027f40:	fb01 2103 	mla	r1, r1, r3, r2
 8027f44:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027f48:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027f4c:	b2c0      	uxtb	r0, r0
 8027f4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8027f52:	fb1b fb0e 	smulbb	fp, fp, lr
 8027f56:	b289      	uxth	r1, r1
 8027f58:	fb10 fe0e 	smulbb	lr, r0, lr
 8027f5c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027f60:	fa5f fc8c 	uxtb.w	ip, ip
 8027f64:	fb02 b203 	mla	r2, r2, r3, fp
 8027f68:	1c48      	adds	r0, r1, #1
 8027f6a:	fb0c e303 	mla	r3, ip, r3, lr
 8027f6e:	b292      	uxth	r2, r2
 8027f70:	b29b      	uxth	r3, r3
 8027f72:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8027f76:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8027f7a:	f102 0b01 	add.w	fp, r2, #1
 8027f7e:	1c59      	adds	r1, r3, #1
 8027f80:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8027f84:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8027f88:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8027f8c:	0952      	lsrs	r2, r2, #5
 8027f8e:	4301      	orrs	r1, r0
 8027f90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027f94:	4311      	orrs	r1, r2
 8027f96:	f8a8 1000 	strh.w	r1, [r8]
 8027f9a:	e739      	b.n	8027e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027f9c:	f113 0b01 	adds.w	fp, r3, #1
 8027fa0:	f53f af36 	bmi.w	8027e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027fa4:	45dc      	cmp	ip, fp
 8027fa6:	f6ff af33 	blt.w	8027e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027faa:	f110 0b01 	adds.w	fp, r0, #1
 8027fae:	f53f af2f 	bmi.w	8027e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027fb2:	45de      	cmp	lr, fp
 8027fb4:	f6ff af2c 	blt.w	8027e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027fb8:	9a08      	ldr	r2, [sp, #32]
 8027fba:	9302      	str	r3, [sp, #8]
 8027fbc:	fa0f f38e 	sxth.w	r3, lr
 8027fc0:	9301      	str	r3, [sp, #4]
 8027fc2:	fa0f f38c 	sxth.w	r3, ip
 8027fc6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8027fca:	9105      	str	r1, [sp, #20]
 8027fcc:	9300      	str	r3, [sp, #0]
 8027fce:	463a      	mov	r2, r7
 8027fd0:	4653      	mov	r3, sl
 8027fd2:	4641      	mov	r1, r8
 8027fd4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8027fd6:	f7ff fd73 	bl	8027ac0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8027fda:	e719      	b.n	8027e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027fdc:	9906      	ldr	r1, [sp, #24]
 8027fde:	1422      	asrs	r2, r4, #16
 8027fe0:	1433      	asrs	r3, r6, #16
 8027fe2:	fb01 2303 	mla	r3, r1, r3, r2
 8027fe6:	085a      	lsrs	r2, r3, #1
 8027fe8:	07d9      	lsls	r1, r3, #31
 8027fea:	5cba      	ldrb	r2, [r7, r2]
 8027fec:	bf54      	ite	pl
 8027fee:	f002 020f 	andpl.w	r2, r2, #15
 8027ff2:	1112      	asrmi	r2, r2, #4
 8027ff4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027ff8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027ffc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028000:	b2d2      	uxtb	r2, r2
 8028002:	2800      	cmp	r0, #0
 8028004:	d062      	beq.n	80280cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8028006:	f103 0a01 	add.w	sl, r3, #1
 802800a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802800e:	f01a 0f01 	tst.w	sl, #1
 8028012:	5c79      	ldrb	r1, [r7, r1]
 8028014:	bf0c      	ite	eq
 8028016:	f001 010f 	andeq.w	r1, r1, #15
 802801a:	1109      	asrne	r1, r1, #4
 802801c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028020:	b2c9      	uxtb	r1, r1
 8028022:	910f      	str	r1, [sp, #60]	; 0x3c
 8028024:	f1bc 0f00 	cmp.w	ip, #0
 8028028:	d019      	beq.n	802805e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802802a:	9908      	ldr	r1, [sp, #32]
 802802c:	440b      	add	r3, r1
 802802e:	0859      	lsrs	r1, r3, #1
 8028030:	f013 0f01 	tst.w	r3, #1
 8028034:	5c79      	ldrb	r1, [r7, r1]
 8028036:	bf0c      	ite	eq
 8028038:	f001 010f 	andeq.w	r1, r1, #15
 802803c:	1109      	asrne	r1, r1, #4
 802803e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028042:	b2c9      	uxtb	r1, r1
 8028044:	3301      	adds	r3, #1
 8028046:	910b      	str	r1, [sp, #44]	; 0x2c
 8028048:	0859      	lsrs	r1, r3, #1
 802804a:	07db      	lsls	r3, r3, #31
 802804c:	5c79      	ldrb	r1, [r7, r1]
 802804e:	bf54      	ite	pl
 8028050:	f001 010f 	andpl.w	r1, r1, #15
 8028054:	1109      	asrmi	r1, r1, #4
 8028056:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802805a:	b2c9      	uxtb	r1, r1
 802805c:	9110      	str	r1, [sp, #64]	; 0x40
 802805e:	b280      	uxth	r0, r0
 8028060:	fa1f fc8c 	uxth.w	ip, ip
 8028064:	fb00 f30c 	mul.w	r3, r0, ip
 8028068:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802806c:	0100      	lsls	r0, r0, #4
 802806e:	fa1f fc8c 	uxth.w	ip, ip
 8028072:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8028076:	eba1 010c 	sub.w	r1, r1, ip
 802807a:	fa1f fa81 	uxth.w	sl, r1
 802807e:	1ac0      	subs	r0, r0, r3
 8028080:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028082:	b280      	uxth	r0, r0
 8028084:	4348      	muls	r0, r1
 8028086:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8028088:	fb02 020a 	mla	r2, r2, sl, r0
 802808c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8028090:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028092:	fb03 c302 	mla	r3, r3, r2, ip
 8028096:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802809a:	2bff      	cmp	r3, #255	; 0xff
 802809c:	d12c      	bne.n	80280f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802809e:	4b14      	ldr	r3, [pc, #80]	; (80280f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80280a0:	681a      	ldr	r2, [r3, #0]
 80280a2:	4b14      	ldr	r3, [pc, #80]	; (80280f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80280a4:	0951      	lsrs	r1, r2, #5
 80280a6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80280aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80280ae:	430b      	orrs	r3, r1
 80280b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80280b4:	4313      	orrs	r3, r2
 80280b6:	f8ae 3000 	strh.w	r3, [lr]
 80280ba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80280bc:	441c      	add	r4, r3
 80280be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80280c0:	f10e 0e02 	add.w	lr, lr, #2
 80280c4:	441e      	add	r6, r3
 80280c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80280ca:	e6ce      	b.n	8027e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80280cc:	f1bc 0f00 	cmp.w	ip, #0
 80280d0:	d0c5      	beq.n	802805e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80280d2:	9908      	ldr	r1, [sp, #32]
 80280d4:	440b      	add	r3, r1
 80280d6:	0859      	lsrs	r1, r3, #1
 80280d8:	07db      	lsls	r3, r3, #31
 80280da:	5c79      	ldrb	r1, [r7, r1]
 80280dc:	bf54      	ite	pl
 80280de:	f001 010f 	andpl.w	r1, r1, #15
 80280e2:	1109      	asrmi	r1, r1, #4
 80280e4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80280e8:	b2c9      	uxtb	r1, r1
 80280ea:	910b      	str	r1, [sp, #44]	; 0x2c
 80280ec:	e7b7      	b.n	802805e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80280ee:	bf00      	nop
 80280f0:	2001385c 	.word	0x2001385c
 80280f4:	fffff800 	.word	0xfffff800
 80280f8:	2b00      	cmp	r3, #0
 80280fa:	d0de      	beq.n	80280ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80280fc:	4a21      	ldr	r2, [pc, #132]	; (8028184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80280fe:	f8be c000 	ldrh.w	ip, [lr]
 8028102:	6810      	ldr	r0, [r2, #0]
 8028104:	fa1f fa83 	uxth.w	sl, r3
 8028108:	ea4f 212c 	mov.w	r1, ip, asr #8
 802810c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028110:	43db      	mvns	r3, r3
 8028112:	b2db      	uxtb	r3, r3
 8028114:	fb12 f20a 	smulbb	r2, r2, sl
 8028118:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802811c:	fb01 2103 	mla	r1, r1, r3, r2
 8028120:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028124:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028128:	b2c0      	uxtb	r0, r0
 802812a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802812e:	fa5f fc8c 	uxtb.w	ip, ip
 8028132:	fb10 f00a 	smulbb	r0, r0, sl
 8028136:	fb0c 0003 	mla	r0, ip, r3, r0
 802813a:	b289      	uxth	r1, r1
 802813c:	fb1b fb0a 	smulbb	fp, fp, sl
 8028140:	b280      	uxth	r0, r0
 8028142:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028146:	fb02 b203 	mla	r2, r2, r3, fp
 802814a:	1c4b      	adds	r3, r1, #1
 802814c:	f100 0b01 	add.w	fp, r0, #1
 8028150:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8028154:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8028158:	b292      	uxth	r2, r2
 802815a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802815e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8028162:	ea4b 0101 	orr.w	r1, fp, r1
 8028166:	f102 0b01 	add.w	fp, r2, #1
 802816a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802816e:	0952      	lsrs	r2, r2, #5
 8028170:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028174:	4311      	orrs	r1, r2
 8028176:	f8ae 1000 	strh.w	r1, [lr]
 802817a:	e79e      	b.n	80280ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802817c:	b013      	add	sp, #76	; 0x4c
 802817e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028182:	bf00      	nop
 8028184:	2001385c 	.word	0x2001385c

08028188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8028188:	b570      	push	{r4, r5, r6, lr}
 802818a:	1208      	asrs	r0, r1, #8
 802818c:	b29e      	uxth	r6, r3
 802818e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8028192:	1213      	asrs	r3, r2, #8
 8028194:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028198:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802819c:	fb13 f305 	smulbb	r3, r3, r5
 80281a0:	fb10 f006 	smulbb	r0, r0, r6
 80281a4:	4418      	add	r0, r3
 80281a6:	10cc      	asrs	r4, r1, #3
 80281a8:	10d3      	asrs	r3, r2, #3
 80281aa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80281ae:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80281b2:	fb13 f305 	smulbb	r3, r3, r5
 80281b6:	fb14 f406 	smulbb	r4, r4, r6
 80281ba:	00c9      	lsls	r1, r1, #3
 80281bc:	00d2      	lsls	r2, r2, #3
 80281be:	441c      	add	r4, r3
 80281c0:	b2d2      	uxtb	r2, r2
 80281c2:	b2cb      	uxtb	r3, r1
 80281c4:	fb12 f205 	smulbb	r2, r2, r5
 80281c8:	b280      	uxth	r0, r0
 80281ca:	fb13 f306 	smulbb	r3, r3, r6
 80281ce:	4413      	add	r3, r2
 80281d0:	1c42      	adds	r2, r0, #1
 80281d2:	b29b      	uxth	r3, r3
 80281d4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80281d8:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80281dc:	1c58      	adds	r0, r3, #1
 80281de:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80281e2:	b2a4      	uxth	r4, r4
 80281e4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80281e8:	4310      	orrs	r0, r2
 80281ea:	1c62      	adds	r2, r4, #1
 80281ec:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80281f0:	0964      	lsrs	r4, r4, #5
 80281f2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80281f6:	4320      	orrs	r0, r4
 80281f8:	bd70      	pop	{r4, r5, r6, pc}
	...

080281fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80281fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028200:	b08f      	sub	sp, #60	; 0x3c
 8028202:	461c      	mov	r4, r3
 8028204:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8028208:	9004      	str	r0, [sp, #16]
 802820a:	460d      	mov	r5, r1
 802820c:	4616      	mov	r6, r2
 802820e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8028210:	2f00      	cmp	r7, #0
 8028212:	f000 80f6 	beq.w	8028402 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8028216:	6820      	ldr	r0, [r4, #0]
 8028218:	6861      	ldr	r1, [r4, #4]
 802821a:	aa0a      	add	r2, sp, #40	; 0x28
 802821c:	c203      	stmia	r2!, {r0, r1}
 802821e:	6818      	ldr	r0, [r3, #0]
 8028220:	6859      	ldr	r1, [r3, #4]
 8028222:	aa0c      	add	r2, sp, #48	; 0x30
 8028224:	c203      	stmia	r2!, {r0, r1}
 8028226:	a80a      	add	r0, sp, #40	; 0x28
 8028228:	f7ef fa5e 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802822c:	4621      	mov	r1, r4
 802822e:	a80c      	add	r0, sp, #48	; 0x30
 8028230:	f7ef fa9e 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028234:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8028238:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802823c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8028240:	f002 0301 	and.w	r3, r2, #1
 8028244:	9306      	str	r3, [sp, #24]
 8028246:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802824a:	f003 0101 	and.w	r1, r3, #1
 802824e:	9105      	str	r1, [sp, #20]
 8028250:	9805      	ldr	r0, [sp, #20]
 8028252:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8028256:	4403      	add	r3, r0
 8028258:	fb01 2303 	mla	r3, r1, r3, r2
 802825c:	f04f 0802 	mov.w	r8, #2
 8028260:	fb93 f3f8 	sdiv	r3, r3, r8
 8028264:	441d      	add	r5, r3
 8028266:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802826a:	441a      	add	r2, r3
 802826c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8028270:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8028274:	4419      	add	r1, r3
 8028276:	4b64      	ldr	r3, [pc, #400]	; (8028408 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8028278:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802827c:	6818      	ldr	r0, [r3, #0]
 802827e:	6803      	ldr	r3, [r0, #0]
 8028280:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8028282:	4798      	blx	r3
 8028284:	4a61      	ldr	r2, [pc, #388]	; (802840c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8028286:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802828a:	8813      	ldrh	r3, [r2, #0]
 802828c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8028290:	2fff      	cmp	r7, #255	; 0xff
 8028292:	fb03 a404 	mla	r4, r3, r4, sl
 8028296:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802829a:	f106 0604 	add.w	r6, r6, #4
 802829e:	4611      	mov	r1, r2
 80282a0:	fb03 fb0b 	mul.w	fp, r3, fp
 80282a4:	d06b      	beq.n	802837e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80282a6:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80282aa:	9303      	str	r3, [sp, #12]
 80282ac:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80282b0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80282b4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80282b8:	9b07      	ldr	r3, [sp, #28]
 80282ba:	42a3      	cmp	r3, r4
 80282bc:	f240 809c 	bls.w	80283f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80282c0:	9b06      	ldr	r3, [sp, #24]
 80282c2:	2b00      	cmp	r3, #0
 80282c4:	d039      	beq.n	802833a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80282c6:	782b      	ldrb	r3, [r5, #0]
 80282c8:	8822      	ldrh	r2, [r4, #0]
 80282ca:	9804      	ldr	r0, [sp, #16]
 80282cc:	f003 030f 	and.w	r3, r3, #15
 80282d0:	f105 0801 	add.w	r8, r5, #1
 80282d4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80282d8:	9b03      	ldr	r3, [sp, #12]
 80282da:	9300      	str	r3, [sp, #0]
 80282dc:	463b      	mov	r3, r7
 80282de:	f7ff ff53 	bl	8028188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80282e2:	f824 0b02 	strh.w	r0, [r4], #2
 80282e6:	f109 3bff 	add.w	fp, r9, #4294967295
 80282ea:	f1bb 0f01 	cmp.w	fp, #1
 80282ee:	46a2      	mov	sl, r4
 80282f0:	f104 0404 	add.w	r4, r4, #4
 80282f4:	dd24      	ble.n	8028340 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80282f6:	f898 3000 	ldrb.w	r3, [r8]
 80282fa:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80282fe:	9804      	ldr	r0, [sp, #16]
 8028300:	091b      	lsrs	r3, r3, #4
 8028302:	f1ab 0b02 	sub.w	fp, fp, #2
 8028306:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802830a:	9b03      	ldr	r3, [sp, #12]
 802830c:	9300      	str	r3, [sp, #0]
 802830e:	463b      	mov	r3, r7
 8028310:	f7ff ff3a 	bl	8028188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8028314:	f824 0c04 	strh.w	r0, [r4, #-4]
 8028318:	f818 3b01 	ldrb.w	r3, [r8], #1
 802831c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8028320:	9804      	ldr	r0, [sp, #16]
 8028322:	f003 030f 	and.w	r3, r3, #15
 8028326:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802832a:	9b03      	ldr	r3, [sp, #12]
 802832c:	9300      	str	r3, [sp, #0]
 802832e:	463b      	mov	r3, r7
 8028330:	f7ff ff2a 	bl	8028188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8028334:	f824 0c02 	strh.w	r0, [r4, #-2]
 8028338:	e7d7      	b.n	80282ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802833a:	46a8      	mov	r8, r5
 802833c:	46cb      	mov	fp, r9
 802833e:	e7d4      	b.n	80282ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8028340:	d10e      	bne.n	8028360 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8028342:	f898 3000 	ldrb.w	r3, [r8]
 8028346:	f8ba 2000 	ldrh.w	r2, [sl]
 802834a:	9804      	ldr	r0, [sp, #16]
 802834c:	091b      	lsrs	r3, r3, #4
 802834e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8028352:	9b03      	ldr	r3, [sp, #12]
 8028354:	9300      	str	r3, [sp, #0]
 8028356:	463b      	mov	r3, r7
 8028358:	f7ff ff16 	bl	8028188 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802835c:	f82a 0b02 	strh.w	r0, [sl], #2
 8028360:	9b08      	ldr	r3, [sp, #32]
 8028362:	9a05      	ldr	r2, [sp, #20]
 8028364:	881c      	ldrh	r4, [r3, #0]
 8028366:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802836a:	eba4 0409 	sub.w	r4, r4, r9
 802836e:	4413      	add	r3, r2
 8028370:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8028374:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028376:	fb93 f3f2 	sdiv	r3, r3, r2
 802837a:	441d      	add	r5, r3
 802837c:	e79c      	b.n	80282b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802837e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8028382:	45a3      	cmp	fp, r4
 8028384:	d938      	bls.n	80283f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8028386:	9b06      	ldr	r3, [sp, #24]
 8028388:	b1f3      	cbz	r3, 80283c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802838a:	782b      	ldrb	r3, [r5, #0]
 802838c:	f003 030f 	and.w	r3, r3, #15
 8028390:	1c6a      	adds	r2, r5, #1
 8028392:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8028396:	8023      	strh	r3, [r4, #0]
 8028398:	f109 30ff 	add.w	r0, r9, #4294967295
 802839c:	3402      	adds	r4, #2
 802839e:	2801      	cmp	r0, #1
 80283a0:	4623      	mov	r3, r4
 80283a2:	f104 0404 	add.w	r4, r4, #4
 80283a6:	dd12      	ble.n	80283ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80283a8:	7813      	ldrb	r3, [r2, #0]
 80283aa:	091b      	lsrs	r3, r3, #4
 80283ac:	3802      	subs	r0, #2
 80283ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80283b2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80283b6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80283ba:	f003 030f 	and.w	r3, r3, #15
 80283be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80283c2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80283c6:	e7ea      	b.n	802839e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80283c8:	462a      	mov	r2, r5
 80283ca:	4648      	mov	r0, r9
 80283cc:	e7e7      	b.n	802839e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80283ce:	d106      	bne.n	80283de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80283d0:	7812      	ldrb	r2, [r2, #0]
 80283d2:	0912      	lsrs	r2, r2, #4
 80283d4:	3302      	adds	r3, #2
 80283d6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80283da:	f823 2c02 	strh.w	r2, [r3, #-2]
 80283de:	880c      	ldrh	r4, [r1, #0]
 80283e0:	9a05      	ldr	r2, [sp, #20]
 80283e2:	eba4 0409 	sub.w	r4, r4, r9
 80283e6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80283ea:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80283ee:	4413      	add	r3, r2
 80283f0:	fb93 f3f8 	sdiv	r3, r3, r8
 80283f4:	441d      	add	r5, r3
 80283f6:	e7c4      	b.n	8028382 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80283f8:	4b03      	ldr	r3, [pc, #12]	; (8028408 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80283fa:	6818      	ldr	r0, [r3, #0]
 80283fc:	6803      	ldr	r3, [r0, #0]
 80283fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028400:	4798      	blx	r3
 8028402:	b00f      	add	sp, #60	; 0x3c
 8028404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028408:	2001384c 	.word	0x2001384c
 802840c:	20013846 	.word	0x20013846

08028410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8028410:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028412:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8028416:	2dff      	cmp	r5, #255	; 0xff
 8028418:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802841c:	d10c      	bne.n	8028438 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802841e:	2bff      	cmp	r3, #255	; 0xff
 8028420:	d10a      	bne.n	8028438 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8028422:	4b25      	ldr	r3, [pc, #148]	; (80284b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8028424:	0948      	lsrs	r0, r1, #5
 8028426:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802842a:	403b      	ands	r3, r7
 802842c:	4318      	orrs	r0, r3
 802842e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8028432:	4308      	orrs	r0, r1
 8028434:	b280      	uxth	r0, r0
 8028436:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028438:	fb15 f503 	smulbb	r5, r5, r3
 802843c:	b2ab      	uxth	r3, r5
 802843e:	1c5d      	adds	r5, r3, #1
 8028440:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8028444:	1214      	asrs	r4, r2, #8
 8028446:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802844a:	fa1f fc85 	uxth.w	ip, r5
 802844e:	10d6      	asrs	r6, r2, #3
 8028450:	00d0      	lsls	r0, r2, #3
 8028452:	43ed      	mvns	r5, r5
 8028454:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028458:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802845c:	b2eb      	uxtb	r3, r5
 802845e:	b2c0      	uxtb	r0, r0
 8028460:	fb12 f20c 	smulbb	r2, r2, ip
 8028464:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8028468:	fb04 2403 	mla	r4, r4, r3, r2
 802846c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8028470:	b2c8      	uxtb	r0, r1
 8028472:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8028476:	b2fd      	uxtb	r5, r7
 8028478:	fb10 f00c 	smulbb	r0, r0, ip
 802847c:	b2a4      	uxth	r4, r4
 802847e:	fb02 0003 	mla	r0, r2, r3, r0
 8028482:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8028486:	fb15 f50c 	smulbb	r5, r5, ip
 802848a:	fb06 5503 	mla	r5, r6, r3, r5
 802848e:	b283      	uxth	r3, r0
 8028490:	1c60      	adds	r0, r4, #1
 8028492:	b2ad      	uxth	r5, r5
 8028494:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8028498:	1c58      	adds	r0, r3, #1
 802849a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802849e:	1c6b      	adds	r3, r5, #1
 80284a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80284a4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80284a8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80284ac:	096d      	lsrs	r5, r5, #5
 80284ae:	4320      	orrs	r0, r4
 80284b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80284b4:	4328      	orrs	r0, r5
 80284b6:	e7be      	b.n	8028436 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80284b8:	00fff800 	.word	0x00fff800

080284bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80284bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284c0:	461c      	mov	r4, r3
 80284c2:	b08d      	sub	sp, #52	; 0x34
 80284c4:	460d      	mov	r5, r1
 80284c6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80284c8:	6861      	ldr	r1, [r4, #4]
 80284ca:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80284ce:	4680      	mov	r8, r0
 80284d0:	6820      	ldr	r0, [r4, #0]
 80284d2:	4616      	mov	r6, r2
 80284d4:	aa08      	add	r2, sp, #32
 80284d6:	c203      	stmia	r2!, {r0, r1}
 80284d8:	6818      	ldr	r0, [r3, #0]
 80284da:	6859      	ldr	r1, [r3, #4]
 80284dc:	aa0a      	add	r2, sp, #40	; 0x28
 80284de:	c203      	stmia	r2!, {r0, r1}
 80284e0:	a808      	add	r0, sp, #32
 80284e2:	f7ef f901 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80284e6:	4621      	mov	r1, r4
 80284e8:	a80a      	add	r0, sp, #40	; 0x28
 80284ea:	f7ef f941 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80284ee:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80284f2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80284f6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80284fa:	f002 0301 	and.w	r3, r2, #1
 80284fe:	9303      	str	r3, [sp, #12]
 8028500:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8028504:	f003 0101 	and.w	r1, r3, #1
 8028508:	9102      	str	r1, [sp, #8]
 802850a:	9802      	ldr	r0, [sp, #8]
 802850c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8028510:	4403      	add	r3, r0
 8028512:	fb01 2303 	mla	r3, r1, r3, r2
 8028516:	f04f 0a02 	mov.w	sl, #2
 802851a:	fb93 f3fa 	sdiv	r3, r3, sl
 802851e:	441d      	add	r5, r3
 8028520:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8028524:	441a      	add	r2, r3
 8028526:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802852a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802852e:	4a3f      	ldr	r2, [pc, #252]	; (802862c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8028530:	9205      	str	r2, [sp, #20]
 8028532:	4419      	add	r1, r3
 8028534:	6810      	ldr	r0, [r2, #0]
 8028536:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802853a:	6803      	ldr	r3, [r0, #0]
 802853c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802853e:	4798      	blx	r3
 8028540:	4b3b      	ldr	r3, [pc, #236]	; (8028630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8028542:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8028546:	8819      	ldrh	r1, [r3, #0]
 8028548:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802854c:	fb01 c404 	mla	r4, r1, r4, ip
 8028550:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8028554:	434f      	muls	r7, r1
 8028556:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802855a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802855e:	3604      	adds	r6, #4
 8028560:	9204      	str	r2, [sp, #16]
 8028562:	9b04      	ldr	r3, [sp, #16]
 8028564:	429c      	cmp	r4, r3
 8028566:	d258      	bcs.n	802861a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8028568:	9b03      	ldr	r3, [sp, #12]
 802856a:	2b00      	cmp	r3, #0
 802856c:	d034      	beq.n	80285d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802856e:	782b      	ldrb	r3, [r5, #0]
 8028570:	f003 030f 	and.w	r3, r3, #15
 8028574:	1c6f      	adds	r7, r5, #1
 8028576:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802857a:	0e0b      	lsrs	r3, r1, #24
 802857c:	d006      	beq.n	802858c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802857e:	8822      	ldrh	r2, [r4, #0]
 8028580:	9300      	str	r3, [sp, #0]
 8028582:	4640      	mov	r0, r8
 8028584:	464b      	mov	r3, r9
 8028586:	f7ff ff43 	bl	8028410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802858a:	8020      	strh	r0, [r4, #0]
 802858c:	3402      	adds	r4, #2
 802858e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8028592:	f1ba 0f01 	cmp.w	sl, #1
 8028596:	dd22      	ble.n	80285de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8028598:	783b      	ldrb	r3, [r7, #0]
 802859a:	091b      	lsrs	r3, r3, #4
 802859c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80285a0:	0e0b      	lsrs	r3, r1, #24
 80285a2:	d006      	beq.n	80285b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80285a4:	8822      	ldrh	r2, [r4, #0]
 80285a6:	9300      	str	r3, [sp, #0]
 80285a8:	4640      	mov	r0, r8
 80285aa:	464b      	mov	r3, r9
 80285ac:	f7ff ff30 	bl	8028410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80285b0:	8020      	strh	r0, [r4, #0]
 80285b2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80285b6:	f003 030f 	and.w	r3, r3, #15
 80285ba:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80285be:	0e0b      	lsrs	r3, r1, #24
 80285c0:	d006      	beq.n	80285d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80285c2:	8862      	ldrh	r2, [r4, #2]
 80285c4:	9300      	str	r3, [sp, #0]
 80285c6:	4640      	mov	r0, r8
 80285c8:	464b      	mov	r3, r9
 80285ca:	f7ff ff21 	bl	8028410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80285ce:	8060      	strh	r0, [r4, #2]
 80285d0:	3404      	adds	r4, #4
 80285d2:	f1aa 0a02 	sub.w	sl, sl, #2
 80285d6:	e7dc      	b.n	8028592 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80285d8:	462f      	mov	r7, r5
 80285da:	46da      	mov	sl, fp
 80285dc:	e7d9      	b.n	8028592 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80285de:	d10d      	bne.n	80285fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80285e0:	783b      	ldrb	r3, [r7, #0]
 80285e2:	091b      	lsrs	r3, r3, #4
 80285e4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80285e8:	0e0b      	lsrs	r3, r1, #24
 80285ea:	d006      	beq.n	80285fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80285ec:	8822      	ldrh	r2, [r4, #0]
 80285ee:	9300      	str	r3, [sp, #0]
 80285f0:	4640      	mov	r0, r8
 80285f2:	464b      	mov	r3, r9
 80285f4:	f7ff ff0c 	bl	8028410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80285f8:	8020      	strh	r0, [r4, #0]
 80285fa:	3402      	adds	r4, #2
 80285fc:	9b06      	ldr	r3, [sp, #24]
 80285fe:	9a02      	ldr	r2, [sp, #8]
 8028600:	881b      	ldrh	r3, [r3, #0]
 8028602:	eba3 030b 	sub.w	r3, r3, fp
 8028606:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802860a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802860e:	4413      	add	r3, r2
 8028610:	9a07      	ldr	r2, [sp, #28]
 8028612:	fb93 f3f2 	sdiv	r3, r3, r2
 8028616:	441d      	add	r5, r3
 8028618:	e7a3      	b.n	8028562 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802861a:	9b05      	ldr	r3, [sp, #20]
 802861c:	6818      	ldr	r0, [r3, #0]
 802861e:	6803      	ldr	r3, [r0, #0]
 8028620:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028622:	4798      	blx	r3
 8028624:	b00d      	add	sp, #52	; 0x34
 8028626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802862a:	bf00      	nop
 802862c:	2001384c 	.word	0x2001384c
 8028630:	20013846 	.word	0x20013846

08028634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8028634:	b570      	push	{r4, r5, r6, lr}
 8028636:	1214      	asrs	r4, r2, #8
 8028638:	788d      	ldrb	r5, [r1, #2]
 802863a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802863e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028642:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8028646:	fb15 f503 	smulbb	r5, r5, r3
 802864a:	fb04 5506 	mla	r5, r4, r6, r5
 802864e:	10d0      	asrs	r0, r2, #3
 8028650:	784c      	ldrb	r4, [r1, #1]
 8028652:	7809      	ldrb	r1, [r1, #0]
 8028654:	00d2      	lsls	r2, r2, #3
 8028656:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802865a:	b2d2      	uxtb	r2, r2
 802865c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8028660:	fb14 f403 	smulbb	r4, r4, r3
 8028664:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8028668:	fb11 f303 	smulbb	r3, r1, r3
 802866c:	fb00 4406 	mla	r4, r0, r6, r4
 8028670:	fb02 3306 	mla	r3, r2, r6, r3
 8028674:	b2ad      	uxth	r5, r5
 8028676:	b29b      	uxth	r3, r3
 8028678:	b2a4      	uxth	r4, r4
 802867a:	1c68      	adds	r0, r5, #1
 802867c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8028680:	1c62      	adds	r2, r4, #1
 8028682:	1c58      	adds	r0, r3, #1
 8028684:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028688:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802868c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8028690:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028694:	0964      	lsrs	r4, r4, #5
 8028696:	4328      	orrs	r0, r5
 8028698:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802869c:	4320      	orrs	r0, r4
 802869e:	bd70      	pop	{r4, r5, r6, pc}

080286a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80286a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80286a4:	b08f      	sub	sp, #60	; 0x3c
 80286a6:	461c      	mov	r4, r3
 80286a8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80286ac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80286ae:	4682      	mov	sl, r0
 80286b0:	460e      	mov	r6, r1
 80286b2:	4615      	mov	r5, r2
 80286b4:	2f00      	cmp	r7, #0
 80286b6:	f000 8142 	beq.w	802893e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80286ba:	6820      	ldr	r0, [r4, #0]
 80286bc:	6861      	ldr	r1, [r4, #4]
 80286be:	aa0a      	add	r2, sp, #40	; 0x28
 80286c0:	c203      	stmia	r2!, {r0, r1}
 80286c2:	6818      	ldr	r0, [r3, #0]
 80286c4:	6859      	ldr	r1, [r3, #4]
 80286c6:	aa0c      	add	r2, sp, #48	; 0x30
 80286c8:	c203      	stmia	r2!, {r0, r1}
 80286ca:	a80a      	add	r0, sp, #40	; 0x28
 80286cc:	f7ef f80c 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80286d0:	4621      	mov	r1, r4
 80286d2:	a80c      	add	r0, sp, #48	; 0x30
 80286d4:	f7ef f84c 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80286d8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80286dc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80286e0:	f002 0301 	and.w	r3, r2, #1
 80286e4:	9306      	str	r3, [sp, #24]
 80286e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80286ea:	f003 0101 	and.w	r1, r3, #1
 80286ee:	9105      	str	r1, [sp, #20]
 80286f0:	9805      	ldr	r0, [sp, #20]
 80286f2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80286f6:	4403      	add	r3, r0
 80286f8:	fb01 2303 	mla	r3, r1, r3, r2
 80286fc:	f04f 0802 	mov.w	r8, #2
 8028700:	fb93 f3f8 	sdiv	r3, r3, r8
 8028704:	441e      	add	r6, r3
 8028706:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802870a:	441a      	add	r2, r3
 802870c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8028710:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8028714:	4419      	add	r1, r3
 8028716:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802871a:	9303      	str	r3, [sp, #12]
 802871c:	4b89      	ldr	r3, [pc, #548]	; (8028944 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802871e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8028722:	6818      	ldr	r0, [r3, #0]
 8028724:	6803      	ldr	r3, [r0, #0]
 8028726:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8028728:	4798      	blx	r3
 802872a:	4a87      	ldr	r2, [pc, #540]	; (8028948 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802872c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8028730:	8813      	ldrh	r3, [r2, #0]
 8028732:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8028736:	2fff      	cmp	r7, #255	; 0xff
 8028738:	fb03 9404 	mla	r4, r3, r4, r9
 802873c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8028740:	f105 0504 	add.w	r5, r5, #4
 8028744:	4694      	mov	ip, r2
 8028746:	fb03 f30b 	mul.w	r3, r3, fp
 802874a:	d071      	beq.n	8028830 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802874c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8028750:	43f9      	mvns	r1, r7
 8028752:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8028756:	b2c9      	uxtb	r1, r1
 8028758:	9104      	str	r1, [sp, #16]
 802875a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802875e:	9b07      	ldr	r3, [sp, #28]
 8028760:	42a3      	cmp	r3, r4
 8028762:	f240 80e7 	bls.w	8028934 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8028766:	9b06      	ldr	r3, [sp, #24]
 8028768:	2b00      	cmp	r3, #0
 802876a:	d03d      	beq.n	80287e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802876c:	7831      	ldrb	r1, [r6, #0]
 802876e:	9b04      	ldr	r3, [sp, #16]
 8028770:	8822      	ldrh	r2, [r4, #0]
 8028772:	9300      	str	r3, [sp, #0]
 8028774:	f001 010f 	and.w	r1, r1, #15
 8028778:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802877c:	463b      	mov	r3, r7
 802877e:	4429      	add	r1, r5
 8028780:	4650      	mov	r0, sl
 8028782:	f7ff ff57 	bl	8028634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8028786:	9b03      	ldr	r3, [sp, #12]
 8028788:	f824 0b02 	strh.w	r0, [r4], #2
 802878c:	f106 0801 	add.w	r8, r6, #1
 8028790:	f103 3bff 	add.w	fp, r3, #4294967295
 8028794:	f1bb 0f01 	cmp.w	fp, #1
 8028798:	46a1      	mov	r9, r4
 802879a:	f104 0404 	add.w	r4, r4, #4
 802879e:	dd27      	ble.n	80287f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80287a0:	f898 1000 	ldrb.w	r1, [r8]
 80287a4:	9b04      	ldr	r3, [sp, #16]
 80287a6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80287aa:	9300      	str	r3, [sp, #0]
 80287ac:	0909      	lsrs	r1, r1, #4
 80287ae:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80287b2:	463b      	mov	r3, r7
 80287b4:	4429      	add	r1, r5
 80287b6:	4650      	mov	r0, sl
 80287b8:	f7ff ff3c 	bl	8028634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80287bc:	f824 0c04 	strh.w	r0, [r4, #-4]
 80287c0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80287c4:	9b04      	ldr	r3, [sp, #16]
 80287c6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80287ca:	9300      	str	r3, [sp, #0]
 80287cc:	f001 010f 	and.w	r1, r1, #15
 80287d0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80287d4:	463b      	mov	r3, r7
 80287d6:	4429      	add	r1, r5
 80287d8:	4650      	mov	r0, sl
 80287da:	f7ff ff2b 	bl	8028634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80287de:	f1ab 0b02 	sub.w	fp, fp, #2
 80287e2:	f824 0c02 	strh.w	r0, [r4, #-2]
 80287e6:	e7d5      	b.n	8028794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80287e8:	46b0      	mov	r8, r6
 80287ea:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80287ee:	e7d1      	b.n	8028794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80287f0:	d10f      	bne.n	8028812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80287f2:	f898 1000 	ldrb.w	r1, [r8]
 80287f6:	9b04      	ldr	r3, [sp, #16]
 80287f8:	f8b9 2000 	ldrh.w	r2, [r9]
 80287fc:	9300      	str	r3, [sp, #0]
 80287fe:	0909      	lsrs	r1, r1, #4
 8028800:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028804:	463b      	mov	r3, r7
 8028806:	4429      	add	r1, r5
 8028808:	4650      	mov	r0, sl
 802880a:	f7ff ff13 	bl	8028634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802880e:	f829 0b02 	strh.w	r0, [r9], #2
 8028812:	9b08      	ldr	r3, [sp, #32]
 8028814:	9a05      	ldr	r2, [sp, #20]
 8028816:	881c      	ldrh	r4, [r3, #0]
 8028818:	9b03      	ldr	r3, [sp, #12]
 802881a:	1ae4      	subs	r4, r4, r3
 802881c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8028820:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8028824:	4413      	add	r3, r2
 8028826:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028828:	fb93 f3f2 	sdiv	r3, r3, r2
 802882c:	441e      	add	r6, r3
 802882e:	e796      	b.n	802875e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8028830:	4f46      	ldr	r7, [pc, #280]	; (802894c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8028832:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8028836:	42a3      	cmp	r3, r4
 8028838:	d97c      	bls.n	8028934 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802883a:	9a06      	ldr	r2, [sp, #24]
 802883c:	2a00      	cmp	r2, #0
 802883e:	d054      	beq.n	80288ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8028840:	7830      	ldrb	r0, [r6, #0]
 8028842:	f000 000f 	and.w	r0, r0, #15
 8028846:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802884a:	eb05 0e00 	add.w	lr, r5, r0
 802884e:	5c28      	ldrb	r0, [r5, r0]
 8028850:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8028854:	f89e e001 	ldrb.w	lr, [lr, #1]
 8028858:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802885c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8028860:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8028864:	ea42 020e 	orr.w	r2, r2, lr
 8028868:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802886c:	f824 2b02 	strh.w	r2, [r4], #2
 8028870:	9a03      	ldr	r2, [sp, #12]
 8028872:	1c71      	adds	r1, r6, #1
 8028874:	f102 3eff 	add.w	lr, r2, #4294967295
 8028878:	f1be 0f01 	cmp.w	lr, #1
 802887c:	4620      	mov	r0, r4
 802887e:	f104 0404 	add.w	r4, r4, #4
 8028882:	dd36      	ble.n	80288f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8028884:	7808      	ldrb	r0, [r1, #0]
 8028886:	0900      	lsrs	r0, r0, #4
 8028888:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802888c:	eb05 0a00 	add.w	sl, r5, r0
 8028890:	f1ae 0e02 	sub.w	lr, lr, #2
 8028894:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8028898:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802889c:	00d2      	lsls	r2, r2, #3
 802889e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80288a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80288a6:	ea49 0202 	orr.w	r2, r9, r2
 80288aa:	f815 9000 	ldrb.w	r9, [r5, r0]
 80288ae:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80288b2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80288b6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80288ba:	f000 000f 	and.w	r0, r0, #15
 80288be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80288c2:	eb05 0a00 	add.w	sl, r5, r0
 80288c6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80288ca:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80288ce:	00d2      	lsls	r2, r2, #3
 80288d0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80288d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80288d8:	ea49 0202 	orr.w	r2, r9, r2
 80288dc:	f815 9000 	ldrb.w	r9, [r5, r0]
 80288e0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80288e4:	f824 2c02 	strh.w	r2, [r4, #-2]
 80288e8:	e7c6      	b.n	8028878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80288ea:	4631      	mov	r1, r6
 80288ec:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80288f0:	e7c2      	b.n	8028878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80288f2:	d111      	bne.n	8028918 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80288f4:	7809      	ldrb	r1, [r1, #0]
 80288f6:	0909      	lsrs	r1, r1, #4
 80288f8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80288fc:	186c      	adds	r4, r5, r1
 80288fe:	5c69      	ldrb	r1, [r5, r1]
 8028900:	78a2      	ldrb	r2, [r4, #2]
 8028902:	7864      	ldrb	r4, [r4, #1]
 8028904:	00e4      	lsls	r4, r4, #3
 8028906:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802890a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802890e:	4322      	orrs	r2, r4
 8028910:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8028914:	f820 2b02 	strh.w	r2, [r0], #2
 8028918:	9a03      	ldr	r2, [sp, #12]
 802891a:	f8bc 4000 	ldrh.w	r4, [ip]
 802891e:	9905      	ldr	r1, [sp, #20]
 8028920:	1aa4      	subs	r4, r4, r2
 8028922:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8028926:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802892a:	440a      	add	r2, r1
 802892c:	fb92 f2f8 	sdiv	r2, r2, r8
 8028930:	4416      	add	r6, r2
 8028932:	e780      	b.n	8028836 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8028934:	4b03      	ldr	r3, [pc, #12]	; (8028944 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8028936:	6818      	ldr	r0, [r3, #0]
 8028938:	6803      	ldr	r3, [r0, #0]
 802893a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802893c:	4798      	blx	r3
 802893e:	b00f      	add	sp, #60	; 0x3c
 8028940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028944:	2001384c 	.word	0x2001384c
 8028948:	20013846 	.word	0x20013846
 802894c:	fffff800 	.word	0xfffff800

08028950 <CRC_Lock>:
 8028950:	b530      	push	{r4, r5, lr}
 8028952:	4a20      	ldr	r2, [pc, #128]	; (80289d4 <CRC_Lock+0x84>)
 8028954:	6813      	ldr	r3, [r2, #0]
 8028956:	f023 0301 	bic.w	r3, r3, #1
 802895a:	6013      	str	r3, [r2, #0]
 802895c:	4b1e      	ldr	r3, [pc, #120]	; (80289d8 <CRC_Lock+0x88>)
 802895e:	681a      	ldr	r2, [r3, #0]
 8028960:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8028964:	4022      	ands	r2, r4
 8028966:	f24c 2540 	movw	r5, #49728	; 0xc240
 802896a:	42aa      	cmp	r2, r5
 802896c:	d005      	beq.n	802897a <CRC_Lock+0x2a>
 802896e:	681b      	ldr	r3, [r3, #0]
 8028970:	f24c 2270 	movw	r2, #49776	; 0xc270
 8028974:	4023      	ands	r3, r4
 8028976:	4293      	cmp	r3, r2
 8028978:	d124      	bne.n	80289c4 <CRC_Lock+0x74>
 802897a:	4b18      	ldr	r3, [pc, #96]	; (80289dc <CRC_Lock+0x8c>)
 802897c:	681b      	ldr	r3, [r3, #0]
 802897e:	bb0b      	cbnz	r3, 80289c4 <CRC_Lock+0x74>
 8028980:	4b17      	ldr	r3, [pc, #92]	; (80289e0 <CRC_Lock+0x90>)
 8028982:	681a      	ldr	r2, [r3, #0]
 8028984:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8028988:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802898c:	d00d      	beq.n	80289aa <CRC_Lock+0x5a>
 802898e:	681a      	ldr	r2, [r3, #0]
 8028990:	f240 4483 	movw	r4, #1155	; 0x483
 8028994:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8028998:	42a2      	cmp	r2, r4
 802899a:	d006      	beq.n	80289aa <CRC_Lock+0x5a>
 802899c:	681b      	ldr	r3, [r3, #0]
 802899e:	f240 4285 	movw	r2, #1157	; 0x485
 80289a2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80289a6:	4293      	cmp	r3, r2
 80289a8:	d10c      	bne.n	80289c4 <CRC_Lock+0x74>
 80289aa:	4b0e      	ldr	r3, [pc, #56]	; (80289e4 <CRC_Lock+0x94>)
 80289ac:	2201      	movs	r2, #1
 80289ae:	601a      	str	r2, [r3, #0]
 80289b0:	681a      	ldr	r2, [r3, #0]
 80289b2:	2a00      	cmp	r2, #0
 80289b4:	d1fc      	bne.n	80289b0 <CRC_Lock+0x60>
 80289b6:	4b0c      	ldr	r3, [pc, #48]	; (80289e8 <CRC_Lock+0x98>)
 80289b8:	6018      	str	r0, [r3, #0]
 80289ba:	6818      	ldr	r0, [r3, #0]
 80289bc:	1a43      	subs	r3, r0, r1
 80289be:	4258      	negs	r0, r3
 80289c0:	4158      	adcs	r0, r3
 80289c2:	bd30      	pop	{r4, r5, pc}
 80289c4:	4b09      	ldr	r3, [pc, #36]	; (80289ec <CRC_Lock+0x9c>)
 80289c6:	2201      	movs	r2, #1
 80289c8:	601a      	str	r2, [r3, #0]
 80289ca:	681a      	ldr	r2, [r3, #0]
 80289cc:	2a00      	cmp	r2, #0
 80289ce:	d1fc      	bne.n	80289ca <CRC_Lock+0x7a>
 80289d0:	4b07      	ldr	r3, [pc, #28]	; (80289f0 <CRC_Lock+0xa0>)
 80289d2:	e7f1      	b.n	80289b8 <CRC_Lock+0x68>
 80289d4:	e0002000 	.word	0xe0002000
 80289d8:	e000ed00 	.word	0xe000ed00
 80289dc:	e0042000 	.word	0xe0042000
 80289e0:	5c001000 	.word	0x5c001000
 80289e4:	58024c08 	.word	0x58024c08
 80289e8:	58024c00 	.word	0x58024c00
 80289ec:	40023008 	.word	0x40023008
 80289f0:	40023000 	.word	0x40023000

080289f4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80289f4:	6101      	str	r1, [r0, #16]
 80289f6:	4770      	bx	lr

080289f8 <_ZN8touchgfx8Gestures4tickEv>:
 80289f8:	7b83      	ldrb	r3, [r0, #14]
 80289fa:	b14b      	cbz	r3, 8028a10 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80289fc:	8903      	ldrh	r3, [r0, #8]
 80289fe:	3301      	adds	r3, #1
 8028a00:	b29b      	uxth	r3, r3
 8028a02:	2b07      	cmp	r3, #7
 8028a04:	8103      	strh	r3, [r0, #8]
 8028a06:	bf81      	itttt	hi
 8028a08:	2300      	movhi	r3, #0
 8028a0a:	8143      	strhhi	r3, [r0, #10]
 8028a0c:	8183      	strhhi	r3, [r0, #12]
 8028a0e:	7383      	strbhi	r3, [r0, #14]
 8028a10:	4770      	bx	lr
	...

08028a14 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8028a14:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8028a18:	4698      	mov	r8, r3
 8028a1a:	8883      	ldrh	r3, [r0, #4]
 8028a1c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8028a20:	eba8 0303 	sub.w	r3, r8, r3
 8028a24:	b21b      	sxth	r3, r3
 8028a26:	4604      	mov	r4, r0
 8028a28:	2b00      	cmp	r3, #0
 8028a2a:	4617      	mov	r7, r2
 8028a2c:	4a18      	ldr	r2, [pc, #96]	; (8028a90 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8028a2e:	9200      	str	r2, [sp, #0]
 8028a30:	bfb8      	it	lt
 8028a32:	425b      	neglt	r3, r3
 8028a34:	8aa2      	ldrh	r2, [r4, #20]
 8028a36:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8028a3a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8028a3e:	b21b      	sxth	r3, r3
 8028a40:	460e      	mov	r6, r1
 8028a42:	4293      	cmp	r3, r2
 8028a44:	88c1      	ldrh	r1, [r0, #6]
 8028a46:	f8ad 1008 	strh.w	r1, [sp, #8]
 8028a4a:	f04f 0000 	mov.w	r0, #0
 8028a4e:	f88d 0004 	strb.w	r0, [sp, #4]
 8028a52:	f8ad 500c 	strh.w	r5, [sp, #12]
 8028a56:	dc07      	bgt.n	8028a68 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8028a58:	1a69      	subs	r1, r5, r1
 8028a5a:	b209      	sxth	r1, r1
 8028a5c:	2900      	cmp	r1, #0
 8028a5e:	bfb8      	it	lt
 8028a60:	4249      	neglt	r1, r1
 8028a62:	b209      	sxth	r1, r1
 8028a64:	428a      	cmp	r2, r1
 8028a66:	da10      	bge.n	8028a8a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8028a68:	6920      	ldr	r0, [r4, #16]
 8028a6a:	6803      	ldr	r3, [r0, #0]
 8028a6c:	4669      	mov	r1, sp
 8028a6e:	685b      	ldr	r3, [r3, #4]
 8028a70:	4798      	blx	r3
 8028a72:	eba8 0606 	sub.w	r6, r8, r6
 8028a76:	2300      	movs	r3, #0
 8028a78:	1bef      	subs	r7, r5, r7
 8028a7a:	2001      	movs	r0, #1
 8028a7c:	8123      	strh	r3, [r4, #8]
 8028a7e:	8166      	strh	r6, [r4, #10]
 8028a80:	81a7      	strh	r7, [r4, #12]
 8028a82:	f8a4 8004 	strh.w	r8, [r4, #4]
 8028a86:	80e5      	strh	r5, [r4, #6]
 8028a88:	73a0      	strb	r0, [r4, #14]
 8028a8a:	b004      	add	sp, #16
 8028a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a90:	08030ee4 	.word	0x08030ee4

08028a94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8028a94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028a96:	461e      	mov	r6, r3
 8028a98:	1e4b      	subs	r3, r1, #1
 8028a9a:	2b01      	cmp	r3, #1
 8028a9c:	b085      	sub	sp, #20
 8028a9e:	4604      	mov	r4, r0
 8028aa0:	460d      	mov	r5, r1
 8028aa2:	4617      	mov	r7, r2
 8028aa4:	d84b      	bhi.n	8028b3e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8028aa6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8028aaa:	1cd3      	adds	r3, r2, #3
 8028aac:	b29b      	uxth	r3, r3
 8028aae:	2b06      	cmp	r3, #6
 8028ab0:	d916      	bls.n	8028ae0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8028ab2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8028b54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8028ab6:	f8cd c004 	str.w	ip, [sp, #4]
 8028aba:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8028abe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028ac2:	6900      	ldr	r0, [r0, #16]
 8028ac4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8028ac8:	f04f 0c00 	mov.w	ip, #0
 8028acc:	f88d c008 	strb.w	ip, [sp, #8]
 8028ad0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8028ad4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028ad8:	6803      	ldr	r3, [r0, #0]
 8028ada:	a901      	add	r1, sp, #4
 8028adc:	689b      	ldr	r3, [r3, #8]
 8028ade:	4798      	blx	r3
 8028ae0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028ae4:	1cd3      	adds	r3, r2, #3
 8028ae6:	b29b      	uxth	r3, r3
 8028ae8:	2b06      	cmp	r3, #6
 8028aea:	d916      	bls.n	8028b1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028aec:	f8df c064 	ldr.w	ip, [pc, #100]	; 8028b54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8028af0:	f8cd c004 	str.w	ip, [sp, #4]
 8028af4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8028af8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028afc:	6920      	ldr	r0, [r4, #16]
 8028afe:	f8ad 100c 	strh.w	r1, [sp, #12]
 8028b02:	f04f 0c01 	mov.w	ip, #1
 8028b06:	f88d c008 	strb.w	ip, [sp, #8]
 8028b0a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8028b0e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028b12:	6803      	ldr	r3, [r0, #0]
 8028b14:	a901      	add	r1, sp, #4
 8028b16:	689b      	ldr	r3, [r3, #8]
 8028b18:	4798      	blx	r3
 8028b1a:	4b0d      	ldr	r3, [pc, #52]	; (8028b50 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8028b1c:	9301      	str	r3, [sp, #4]
 8028b1e:	6920      	ldr	r0, [r4, #16]
 8028b20:	f88d 5008 	strb.w	r5, [sp, #8]
 8028b24:	2300      	movs	r3, #0
 8028b26:	f8ad 700a 	strh.w	r7, [sp, #10]
 8028b2a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8028b2e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028b32:	6803      	ldr	r3, [r0, #0]
 8028b34:	a901      	add	r1, sp, #4
 8028b36:	681b      	ldr	r3, [r3, #0]
 8028b38:	4798      	blx	r3
 8028b3a:	b005      	add	sp, #20
 8028b3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028b3e:	2900      	cmp	r1, #0
 8028b40:	d1eb      	bne.n	8028b1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028b42:	80a2      	strh	r2, [r4, #4]
 8028b44:	80c6      	strh	r6, [r0, #6]
 8028b46:	60a1      	str	r1, [r4, #8]
 8028b48:	81a1      	strh	r1, [r4, #12]
 8028b4a:	73a1      	strb	r1, [r4, #14]
 8028b4c:	e7e5      	b.n	8028b1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028b4e:	bf00      	nop
 8028b50:	08030ed0 	.word	0x08030ed0
 8028b54:	08030ef8 	.word	0x08030ef8

08028b58 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8028b58:	10c9      	asrs	r1, r1, #3
 8028b5a:	2900      	cmp	r1, #0
 8028b5c:	bfb8      	it	lt
 8028b5e:	4249      	neglt	r1, r1
 8028b60:	2801      	cmp	r0, #1
 8028b62:	d108      	bne.n	8028b76 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8028b64:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8028b68:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8028b6c:	4601      	mov	r1, r0
 8028b6e:	dd02      	ble.n	8028b76 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8028b70:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8028b74:	4770      	bx	lr
 8028b76:	29ff      	cmp	r1, #255	; 0xff
 8028b78:	bfa8      	it	ge
 8028b7a:	21ff      	movge	r1, #255	; 0xff
 8028b7c:	4608      	mov	r0, r1
 8028b7e:	4770      	bx	lr

08028b80 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8028b80:	b410      	push	{r4}
 8028b82:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8028b86:	429c      	cmp	r4, r3
 8028b88:	d803      	bhi.n	8028b92 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8028b8a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028b8e:	f7ed b8b1 	b.w	8015cf4 <_ZN8touchgfx7Outline6lineToEii>
 8028b92:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028b96:	4770      	bx	lr

08028b98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8028b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028b9c:	b08b      	sub	sp, #44	; 0x2c
 8028b9e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8028ba2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8028ba6:	9308      	str	r3, [sp, #32]
 8028ba8:	4606      	mov	r6, r0
 8028baa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8028bae:	9309      	str	r3, [sp, #36]	; 0x24
 8028bb0:	468a      	mov	sl, r1
 8028bb2:	f7ed fa0c 	bl	8015fce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8028bb6:	68b5      	ldr	r5, [r6, #8]
 8028bb8:	4604      	mov	r4, r0
 8028bba:	2d00      	cmp	r5, #0
 8028bbc:	d044      	beq.n	8028c48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8028bbe:	6873      	ldr	r3, [r6, #4]
 8028bc0:	42ab      	cmp	r3, r5
 8028bc2:	d33d      	bcc.n	8028c40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8028bc4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8028bc8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8028bcc:	eb02 0b03 	add.w	fp, r2, r3
 8028bd0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8028bd4:	fb02 1203 	mla	r2, r2, r3, r1
 8028bd8:	9205      	str	r2, [sp, #20]
 8028bda:	1e6a      	subs	r2, r5, #1
 8028bdc:	9204      	str	r2, [sp, #16]
 8028bde:	f04f 0800 	mov.w	r8, #0
 8028be2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8028be6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8028bea:	454b      	cmp	r3, r9
 8028bec:	463a      	mov	r2, r7
 8028bee:	d008      	beq.n	8028c02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8028bf0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8028bf4:	eb03 0b09 	add.w	fp, r3, r9
 8028bf8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8028bfc:	fb03 1309 	mla	r3, r3, r9, r1
 8028c00:	9305      	str	r3, [sp, #20]
 8028c02:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8028c06:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8028c0a:	4498      	add	r8, r3
 8028c0c:	9b04      	ldr	r3, [sp, #16]
 8028c0e:	3b01      	subs	r3, #1
 8028c10:	9304      	str	r3, [sp, #16]
 8028c12:	9b04      	ldr	r3, [sp, #16]
 8028c14:	3301      	adds	r3, #1
 8028c16:	d015      	beq.n	8028c44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8028c18:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8028c1c:	42bb      	cmp	r3, r7
 8028c1e:	d117      	bne.n	8028c50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8028c20:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8028c24:	9b04      	ldr	r3, [sp, #16]
 8028c26:	4548      	cmp	r0, r9
 8028c28:	f103 33ff 	add.w	r3, r3, #4294967295
 8028c2c:	d17f      	bne.n	8028d2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8028c2e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8028c32:	4401      	add	r1, r0
 8028c34:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8028c38:	4480      	add	r8, r0
 8028c3a:	e7e9      	b.n	8028c10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8028c3c:	461f      	mov	r7, r3
 8028c3e:	e044      	b.n	8028cca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8028c40:	2000      	movs	r0, #0
 8028c42:	e002      	b.n	8028c4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8028c44:	2900      	cmp	r1, #0
 8028c46:	d16f      	bne.n	8028d28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8028c48:	2001      	movs	r0, #1
 8028c4a:	b00b      	add	sp, #44	; 0x2c
 8028c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028c50:	2900      	cmp	r1, #0
 8028c52:	d030      	beq.n	8028cb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8028c54:	2f00      	cmp	r7, #0
 8028c56:	db29      	blt.n	8028cac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028c58:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8028c5c:	42bb      	cmp	r3, r7
 8028c5e:	dd25      	ble.n	8028cac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028c60:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8028c64:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8028c68:	f7ff ff76 	bl	8028b58 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8028c6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028c6e:	fb10 f003 	smulbb	r0, r0, r3
 8028c72:	b280      	uxth	r0, r0
 8028c74:	1c41      	adds	r1, r0, #1
 8028c76:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028c7a:	1209      	asrs	r1, r1, #8
 8028c7c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8028c80:	d014      	beq.n	8028cac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028c82:	9808      	ldr	r0, [sp, #32]
 8028c84:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8028c86:	b2c9      	uxtb	r1, r1
 8028c88:	b2ba      	uxth	r2, r7
 8028c8a:	9102      	str	r1, [sp, #8]
 8028c8c:	2101      	movs	r1, #1
 8028c8e:	4413      	add	r3, r2
 8028c90:	9101      	str	r1, [sp, #4]
 8028c92:	4402      	add	r2, r0
 8028c94:	fa0f f18b 	sxth.w	r1, fp
 8028c98:	f8da 0000 	ldr.w	r0, [sl]
 8028c9c:	9100      	str	r1, [sp, #0]
 8028c9e:	6941      	ldr	r1, [r0, #20]
 8028ca0:	b21b      	sxth	r3, r3
 8028ca2:	460d      	mov	r5, r1
 8028ca4:	b212      	sxth	r2, r2
 8028ca6:	9905      	ldr	r1, [sp, #20]
 8028ca8:	4650      	mov	r0, sl
 8028caa:	47a8      	blx	r5
 8028cac:	9b04      	ldr	r3, [sp, #16]
 8028cae:	3301      	adds	r3, #1
 8028cb0:	f107 0201 	add.w	r2, r7, #1
 8028cb4:	d0c8      	beq.n	8028c48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8028cb6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8028cba:	1abb      	subs	r3, r7, r2
 8028cbc:	2b00      	cmp	r3, #0
 8028cbe:	dd31      	ble.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028cc0:	2a00      	cmp	r2, #0
 8028cc2:	dabb      	bge.n	8028c3c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8028cc4:	2f00      	cmp	r7, #0
 8028cc6:	dd2d      	ble.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028cc8:	2200      	movs	r2, #0
 8028cca:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8028cce:	19d1      	adds	r1, r2, r7
 8028cd0:	4299      	cmp	r1, r3
 8028cd2:	db02      	blt.n	8028cda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8028cd4:	1a9f      	subs	r7, r3, r2
 8028cd6:	2f00      	cmp	r7, #0
 8028cd8:	dd24      	ble.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028cda:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8028cde:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8028ce2:	f7ff ff39 	bl	8028b58 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8028ce6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028ce8:	fb10 f003 	smulbb	r0, r0, r3
 8028cec:	b280      	uxth	r0, r0
 8028cee:	1c41      	adds	r1, r0, #1
 8028cf0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028cf4:	1209      	asrs	r1, r1, #8
 8028cf6:	f011 0fff 	tst.w	r1, #255	; 0xff
 8028cfa:	d013      	beq.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028cfc:	9808      	ldr	r0, [sp, #32]
 8028cfe:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8028d00:	b292      	uxth	r2, r2
 8028d02:	b2c9      	uxtb	r1, r1
 8028d04:	4413      	add	r3, r2
 8028d06:	9102      	str	r1, [sp, #8]
 8028d08:	4402      	add	r2, r0
 8028d0a:	b23f      	sxth	r7, r7
 8028d0c:	f8da 0000 	ldr.w	r0, [sl]
 8028d10:	9701      	str	r7, [sp, #4]
 8028d12:	fa0f f18b 	sxth.w	r1, fp
 8028d16:	9100      	str	r1, [sp, #0]
 8028d18:	6947      	ldr	r7, [r0, #20]
 8028d1a:	9905      	ldr	r1, [sp, #20]
 8028d1c:	b21b      	sxth	r3, r3
 8028d1e:	b212      	sxth	r2, r2
 8028d20:	4650      	mov	r0, sl
 8028d22:	47b8      	blx	r7
 8028d24:	464b      	mov	r3, r9
 8028d26:	e75c      	b.n	8028be2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8028d28:	2f00      	cmp	r7, #0
 8028d2a:	da95      	bge.n	8028c58 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8028d2c:	e78c      	b.n	8028c48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8028d2e:	2900      	cmp	r1, #0
 8028d30:	d0f8      	beq.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028d32:	e78f      	b.n	8028c54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08028d34 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8028d34:	4b4b      	ldr	r3, [pc, #300]	; (8028e64 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8028d36:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8028d3a:	2500      	movs	r5, #0
 8028d3c:	f100 0620 	add.w	r6, r0, #32
 8028d40:	4604      	mov	r4, r0
 8028d42:	e9c0 3100 	strd	r3, r1, [r0]
 8028d46:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8028d4a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8028d4e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8028d52:	f100 0718 	add.w	r7, r0, #24
 8028d56:	4630      	mov	r0, r6
 8028d58:	4690      	mov	r8, r2
 8028d5a:	f7ec fb03 	bl	8015364 <_ZN8touchgfx7OutlineC1Ev>
 8028d5e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8028d62:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8028d66:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8028d6a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8028d6e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8028d72:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8028d76:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8028d7a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8028d7e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8028d82:	f9b8 2000 	ldrsh.w	r2, [r8]
 8028d86:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8028d8a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8028d8e:	9500      	str	r5, [sp, #0]
 8028d90:	4410      	add	r0, r2
 8028d92:	b280      	uxth	r0, r0
 8028d94:	fa0f fa80 	sxth.w	sl, r0
 8028d98:	45aa      	cmp	sl, r5
 8028d9a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8028d9e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8028da2:	dd5c      	ble.n	8028e5e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028da4:	4591      	cmp	r9, r2
 8028da6:	dd5a      	ble.n	8028e5e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028da8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8028dac:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8028db0:	440b      	add	r3, r1
 8028db2:	b29b      	uxth	r3, r3
 8028db4:	b21d      	sxth	r5, r3
 8028db6:	2d00      	cmp	r5, #0
 8028db8:	dd51      	ble.n	8028e5e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028dba:	458e      	cmp	lr, r1
 8028dbc:	dd4f      	ble.n	8028e5e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028dbe:	45d1      	cmp	r9, sl
 8028dc0:	bfb8      	it	lt
 8028dc2:	fa1f f089 	uxthlt.w	r0, r9
 8028dc6:	45ae      	cmp	lr, r5
 8028dc8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8028dcc:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8028dd0:	bfb8      	it	lt
 8028dd2:	fa1f f38e 	uxthlt.w	r3, lr
 8028dd6:	1a80      	subs	r0, r0, r2
 8028dd8:	1a5b      	subs	r3, r3, r1
 8028dda:	f8ad 0004 	strh.w	r0, [sp, #4]
 8028dde:	f8ad 3006 	strh.w	r3, [sp, #6]
 8028de2:	f8ad 2000 	strh.w	r2, [sp]
 8028de6:	f8ad 1002 	strh.w	r1, [sp, #2]
 8028dea:	466d      	mov	r5, sp
 8028dec:	e895 0003 	ldmia.w	r5, {r0, r1}
 8028df0:	e887 0003 	stmia.w	r7, {r0, r1}
 8028df4:	f8dc 3000 	ldr.w	r3, [ip]
 8028df8:	4660      	mov	r0, ip
 8028dfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028dfc:	4639      	mov	r1, r7
 8028dfe:	4798      	blx	r3
 8028e00:	6861      	ldr	r1, [r4, #4]
 8028e02:	4628      	mov	r0, r5
 8028e04:	3104      	adds	r1, #4
 8028e06:	f7ee fcb3 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028e0a:	4638      	mov	r0, r7
 8028e0c:	f7ee fc6c 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028e10:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028e14:	f8bd 2000 	ldrh.w	r2, [sp]
 8028e18:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8028e1c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8028e20:	4630      	mov	r0, r6
 8028e22:	f7ec fa83 	bl	801532c <_ZN8touchgfx7Outline5resetEv>
 8028e26:	f9bd 3000 	ldrsh.w	r3, [sp]
 8028e2a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8028e2e:	015b      	lsls	r3, r3, #5
 8028e30:	60a3      	str	r3, [r4, #8]
 8028e32:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028e36:	015b      	lsls	r3, r3, #5
 8028e38:	60e3      	str	r3, [r4, #12]
 8028e3a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8028e3e:	015b      	lsls	r3, r3, #5
 8028e40:	6123      	str	r3, [r4, #16]
 8028e42:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8028e46:	015b      	lsls	r3, r3, #5
 8028e48:	6163      	str	r3, [r4, #20]
 8028e4a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8028e4e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8028e52:	4620      	mov	r0, r4
 8028e54:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8028e58:	b002      	add	sp, #8
 8028e5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028e5e:	2300      	movs	r3, #0
 8028e60:	9301      	str	r3, [sp, #4]
 8028e62:	e7c2      	b.n	8028dea <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8028e64:	0803121c 	.word	0x0803121c

08028e68 <_ZN8touchgfx6Canvas5closeEv>:
 8028e68:	b538      	push	{r3, r4, r5, lr}
 8028e6a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8028e6e:	4604      	mov	r4, r0
 8028e70:	b193      	cbz	r3, 8028e98 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028e72:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8028e76:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8028e7a:	4213      	tst	r3, r2
 8028e7c:	d10c      	bne.n	8028e98 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028e7e:	f100 0520 	add.w	r5, r0, #32
 8028e82:	b123      	cbz	r3, 8028e8e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8028e84:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8028e88:	4628      	mov	r0, r5
 8028e8a:	f7ff fe79 	bl	8028b80 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028e8e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8028e92:	4628      	mov	r0, r5
 8028e94:	f7ff fe74 	bl	8028b80 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028e98:	2300      	movs	r3, #0
 8028e9a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8028e9e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8028ea2:	4298      	cmp	r0, r3
 8028ea4:	bf34      	ite	cc
 8028ea6:	2000      	movcc	r0, #0
 8028ea8:	2001      	movcs	r0, #1
 8028eaa:	bd38      	pop	{r3, r4, r5, pc}

08028eac <_ZN8touchgfx6Canvas6renderEh>:
 8028eac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028eb0:	4604      	mov	r4, r0
 8028eb2:	6840      	ldr	r0, [r0, #4]
 8028eb4:	6803      	ldr	r3, [r0, #0]
 8028eb6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028eb8:	460d      	mov	r5, r1
 8028eba:	4798      	blx	r3
 8028ebc:	fb10 f105 	smulbb	r1, r0, r5
 8028ec0:	b289      	uxth	r1, r1
 8028ec2:	1c4d      	adds	r5, r1, #1
 8028ec4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8028ec8:	122d      	asrs	r5, r5, #8
 8028eca:	f000 809d 	beq.w	8029008 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8028ece:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8028ed2:	2b00      	cmp	r3, #0
 8028ed4:	f000 8098 	beq.w	8029008 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8028ed8:	4620      	mov	r0, r4
 8028eda:	f7ff ffc5 	bl	8028e68 <_ZN8touchgfx6Canvas5closeEv>
 8028ede:	4607      	mov	r7, r0
 8028ee0:	2800      	cmp	r0, #0
 8028ee2:	d048      	beq.n	8028f76 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8028ee4:	6863      	ldr	r3, [r4, #4]
 8028ee6:	4e49      	ldr	r6, [pc, #292]	; (802900c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8028ee8:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8028eea:	6837      	ldr	r7, [r6, #0]
 8028eec:	6803      	ldr	r3, [r0, #0]
 8028eee:	689b      	ldr	r3, [r3, #8]
 8028ef0:	4798      	blx	r3
 8028ef2:	4601      	mov	r1, r0
 8028ef4:	4638      	mov	r0, r7
 8028ef6:	f7ea f9bb 	bl	8013270 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8028efa:	4607      	mov	r7, r0
 8028efc:	f7dc fad6 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8028f00:	6803      	ldr	r3, [r0, #0]
 8028f02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028f04:	4798      	blx	r3
 8028f06:	4680      	mov	r8, r0
 8028f08:	f7dc fad0 	bl	80054ac <_ZN8touchgfx3HAL3lcdEv>
 8028f0c:	6803      	ldr	r3, [r0, #0]
 8028f0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028f10:	4798      	blx	r3
 8028f12:	280b      	cmp	r0, #11
 8028f14:	d85d      	bhi.n	8028fd2 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8028f16:	e8df f000 	tbb	[pc, r0]
 8028f1a:	5e53      	.short	0x5e53
 8028f1c:	325c066e 	.word	0x325c066e
 8028f20:	67676742 	.word	0x67676742
 8028f24:	6767      	.short	0x6767
 8028f26:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028f2a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028f2e:	2208      	movs	r2, #8
 8028f30:	fb91 f2f2 	sdiv	r2, r1, r2
 8028f34:	fb08 2303 	mla	r3, r8, r3, r2
 8028f38:	441f      	add	r7, r3
 8028f3a:	424b      	negs	r3, r1
 8028f3c:	f003 0307 	and.w	r3, r3, #7
 8028f40:	f001 0107 	and.w	r1, r1, #7
 8028f44:	bf58      	it	pl
 8028f46:	4259      	negpl	r1, r3
 8028f48:	b2c9      	uxtb	r1, r1
 8028f4a:	b2ed      	uxtb	r5, r5
 8028f4c:	e9cd 1500 	strd	r1, r5, [sp]
 8028f50:	6860      	ldr	r0, [r4, #4]
 8028f52:	463a      	mov	r2, r7
 8028f54:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8028f56:	fa0f f388 	sxth.w	r3, r8
 8028f5a:	f104 0020 	add.w	r0, r4, #32
 8028f5e:	f7ff fe1b 	bl	8028b98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8028f62:	6863      	ldr	r3, [r4, #4]
 8028f64:	4607      	mov	r7, r0
 8028f66:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8028f68:	6803      	ldr	r3, [r0, #0]
 8028f6a:	691b      	ldr	r3, [r3, #16]
 8028f6c:	4798      	blx	r3
 8028f6e:	6830      	ldr	r0, [r6, #0]
 8028f70:	6803      	ldr	r3, [r0, #0]
 8028f72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028f74:	4798      	blx	r3
 8028f76:	4638      	mov	r0, r7
 8028f78:	b002      	add	sp, #8
 8028f7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028f7e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028f82:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028f86:	2204      	movs	r2, #4
 8028f88:	fb91 f2f2 	sdiv	r2, r1, r2
 8028f8c:	fb08 2303 	mla	r3, r8, r3, r2
 8028f90:	441f      	add	r7, r3
 8028f92:	424b      	negs	r3, r1
 8028f94:	f003 0303 	and.w	r3, r3, #3
 8028f98:	f001 0103 	and.w	r1, r1, #3
 8028f9c:	e7d2      	b.n	8028f44 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8028f9e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028fa2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028fa6:	2900      	cmp	r1, #0
 8028fa8:	f04f 0202 	mov.w	r2, #2
 8028fac:	fb91 f2f2 	sdiv	r2, r1, r2
 8028fb0:	f001 0101 	and.w	r1, r1, #1
 8028fb4:	fb08 2303 	mla	r3, r8, r3, r2
 8028fb8:	441f      	add	r7, r3
 8028fba:	bfb8      	it	lt
 8028fbc:	4249      	neglt	r1, r1
 8028fbe:	e7c3      	b.n	8028f48 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8028fc0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028fc4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028fc8:	fb08 f303 	mul.w	r3, r8, r3
 8028fcc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028fd0:	441f      	add	r7, r3
 8028fd2:	2100      	movs	r1, #0
 8028fd4:	e7b9      	b.n	8028f4a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8028fd6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028fda:	fb08 f203 	mul.w	r2, r8, r3
 8028fde:	8b23      	ldrh	r3, [r4, #24]
 8028fe0:	2103      	movs	r1, #3
 8028fe2:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028fe6:	e7f3      	b.n	8028fd0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028fe8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028fec:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028ff0:	fb08 2303 	mla	r3, r8, r3, r2
 8028ff4:	e7ec      	b.n	8028fd0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028ff6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028ffa:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028ffe:	fb08 f303 	mul.w	r3, r8, r3
 8029002:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029006:	e7e3      	b.n	8028fd0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029008:	2701      	movs	r7, #1
 802900a:	e7b4      	b.n	8028f76 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802900c:	2001384c 	.word	0x2001384c

08029010 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8029010:	b510      	push	{r4, lr}
 8029012:	4b07      	ldr	r3, [pc, #28]	; (8029030 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8029014:	781b      	ldrb	r3, [r3, #0]
 8029016:	2b01      	cmp	r3, #1
 8029018:	d108      	bne.n	802902c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802901a:	6843      	ldr	r3, [r0, #4]
 802901c:	6814      	ldr	r4, [r2, #0]
 802901e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8029022:	680b      	ldr	r3, [r1, #0]
 8029024:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8029028:	6013      	str	r3, [r2, #0]
 802902a:	600c      	str	r4, [r1, #0]
 802902c:	bd10      	pop	{r4, pc}
 802902e:	bf00      	nop
 8029030:	20013844 	.word	0x20013844

08029034 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8029034:	b513      	push	{r0, r1, r4, lr}
 8029036:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802903a:	4604      	mov	r4, r0
 802903c:	e9cd 2100 	strd	r2, r1, [sp]
 8029040:	b9a3      	cbnz	r3, 802906c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8029042:	466a      	mov	r2, sp
 8029044:	a901      	add	r1, sp, #4
 8029046:	4620      	mov	r0, r4
 8029048:	f7ff ffe2 	bl	8029010 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802904c:	68a3      	ldr	r3, [r4, #8]
 802904e:	9901      	ldr	r1, [sp, #4]
 8029050:	9a00      	ldr	r2, [sp, #0]
 8029052:	1ac9      	subs	r1, r1, r3
 8029054:	68e3      	ldr	r3, [r4, #12]
 8029056:	9101      	str	r1, [sp, #4]
 8029058:	1ad2      	subs	r2, r2, r3
 802905a:	2a00      	cmp	r2, #0
 802905c:	9200      	str	r2, [sp, #0]
 802905e:	da0b      	bge.n	8029078 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8029060:	2301      	movs	r3, #1
 8029062:	2900      	cmp	r1, #0
 8029064:	da0e      	bge.n	8029084 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8029066:	f043 0304 	orr.w	r3, r3, #4
 802906a:	e013      	b.n	8029094 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802906c:	f7ff fefc 	bl	8028e68 <_ZN8touchgfx6Canvas5closeEv>
 8029070:	2800      	cmp	r0, #0
 8029072:	d1e6      	bne.n	8029042 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8029074:	b002      	add	sp, #8
 8029076:	bd10      	pop	{r4, pc}
 8029078:	6963      	ldr	r3, [r4, #20]
 802907a:	429a      	cmp	r2, r3
 802907c:	bfac      	ite	ge
 802907e:	2302      	movge	r3, #2
 8029080:	2300      	movlt	r3, #0
 8029082:	e7ee      	b.n	8029062 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8029084:	6920      	ldr	r0, [r4, #16]
 8029086:	4281      	cmp	r1, r0
 8029088:	bfac      	ite	ge
 802908a:	2008      	movge	r0, #8
 802908c:	2000      	movlt	r0, #0
 802908e:	4318      	orrs	r0, r3
 8029090:	b2c3      	uxtb	r3, r0
 8029092:	b158      	cbz	r0, 80290ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8029094:	2200      	movs	r2, #0
 8029096:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802909a:	9901      	ldr	r1, [sp, #4]
 802909c:	9a00      	ldr	r2, [sp, #0]
 802909e:	66a1      	str	r1, [r4, #104]	; 0x68
 80290a0:	66e2      	str	r2, [r4, #108]	; 0x6c
 80290a2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80290a6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80290aa:	e7e3      	b.n	8029074 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80290ac:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80290b0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80290b4:	4298      	cmp	r0, r3
 80290b6:	d803      	bhi.n	80290c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80290b8:	f104 0020 	add.w	r0, r4, #32
 80290bc:	f7ec fe34 	bl	8015d28 <_ZN8touchgfx7Outline6moveToEii>
 80290c0:	2301      	movs	r3, #1
 80290c2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80290c6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80290ca:	2300      	movs	r3, #0
 80290cc:	e7e5      	b.n	802909a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80290ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80290d0:	ab02      	add	r3, sp, #8
 80290d2:	4604      	mov	r4, r0
 80290d4:	f843 2d08 	str.w	r2, [r3, #-8]!
 80290d8:	9101      	str	r1, [sp, #4]
 80290da:	461a      	mov	r2, r3
 80290dc:	a901      	add	r1, sp, #4
 80290de:	f7ff ff97 	bl	8029010 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80290e2:	68a3      	ldr	r3, [r4, #8]
 80290e4:	9901      	ldr	r1, [sp, #4]
 80290e6:	9a00      	ldr	r2, [sp, #0]
 80290e8:	1ac9      	subs	r1, r1, r3
 80290ea:	68e3      	ldr	r3, [r4, #12]
 80290ec:	9101      	str	r1, [sp, #4]
 80290ee:	1ad2      	subs	r2, r2, r3
 80290f0:	2a00      	cmp	r2, #0
 80290f2:	9200      	str	r2, [sp, #0]
 80290f4:	db1c      	blt.n	8029130 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80290f6:	6963      	ldr	r3, [r4, #20]
 80290f8:	429a      	cmp	r2, r3
 80290fa:	bfac      	ite	ge
 80290fc:	2002      	movge	r0, #2
 80290fe:	2000      	movlt	r0, #0
 8029100:	2900      	cmp	r1, #0
 8029102:	db17      	blt.n	8029134 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8029104:	6923      	ldr	r3, [r4, #16]
 8029106:	4299      	cmp	r1, r3
 8029108:	bfac      	ite	ge
 802910a:	2308      	movge	r3, #8
 802910c:	2300      	movlt	r3, #0
 802910e:	4303      	orrs	r3, r0
 8029110:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8029114:	b2dd      	uxtb	r5, r3
 8029116:	b978      	cbnz	r0, 8029138 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8029118:	f104 0020 	add.w	r0, r4, #32
 802911c:	f7ff fd30 	bl	8028b80 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029120:	9b01      	ldr	r3, [sp, #4]
 8029122:	65e3      	str	r3, [r4, #92]	; 0x5c
 8029124:	9b00      	ldr	r3, [sp, #0]
 8029126:	6623      	str	r3, [r4, #96]	; 0x60
 8029128:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802912c:	b002      	add	sp, #8
 802912e:	bd70      	pop	{r4, r5, r6, pc}
 8029130:	2001      	movs	r0, #1
 8029132:	e7e5      	b.n	8029100 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8029134:	2304      	movs	r3, #4
 8029136:	e7ea      	b.n	802910e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8029138:	b113      	cbz	r3, 8029140 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802913a:	ea10 0305 	ands.w	r3, r0, r5
 802913e:	d11c      	bne.n	802917a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8029140:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8029144:	f104 0620 	add.w	r6, r4, #32
 8029148:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802914c:	b98b      	cbnz	r3, 8029172 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802914e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8029152:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8029156:	4298      	cmp	r0, r3
 8029158:	d802      	bhi.n	8029160 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802915a:	4630      	mov	r0, r6
 802915c:	f7ec fde4 	bl	8015d28 <_ZN8touchgfx7Outline6moveToEii>
 8029160:	2301      	movs	r3, #1
 8029162:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029166:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802916a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802916e:	4630      	mov	r0, r6
 8029170:	e7d4      	b.n	802911c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8029172:	4630      	mov	r0, r6
 8029174:	f7ff fd04 	bl	8028b80 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029178:	e7f7      	b.n	802916a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802917a:	461d      	mov	r5, r3
 802917c:	e7d0      	b.n	8029120 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08029180 <_ZN8touchgfx6CanvasD1Ev>:
 8029180:	b510      	push	{r4, lr}
 8029182:	4b04      	ldr	r3, [pc, #16]	; (8029194 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8029184:	4604      	mov	r4, r0
 8029186:	f840 3b20 	str.w	r3, [r0], #32
 802918a:	f7ec f8c7 	bl	801531c <_ZN8touchgfx7OutlineD1Ev>
 802918e:	4620      	mov	r0, r4
 8029190:	bd10      	pop	{r4, pc}
 8029192:	bf00      	nop
 8029194:	0803121c 	.word	0x0803121c

08029198 <_ZN8touchgfx6CanvasD0Ev>:
 8029198:	b510      	push	{r4, lr}
 802919a:	4604      	mov	r4, r0
 802919c:	f7ff fff0 	bl	8029180 <_ZN8touchgfx6CanvasD1Ev>
 80291a0:	4620      	mov	r0, r4
 80291a2:	2170      	movs	r1, #112	; 0x70
 80291a4:	f002 fd09 	bl	802bbba <_ZdlPvj>
 80291a8:	4620      	mov	r0, r4
 80291aa:	bd10      	pop	{r4, pc}

080291ac <_ZN8touchgfx6CircleD1Ev>:
 80291ac:	4770      	bx	lr

080291ae <_ZN8touchgfx6CircleD0Ev>:
 80291ae:	b510      	push	{r4, lr}
 80291b0:	2148      	movs	r1, #72	; 0x48
 80291b2:	4604      	mov	r4, r0
 80291b4:	f002 fd01 	bl	802bbba <_ZdlPvj>
 80291b8:	4620      	mov	r0, r4
 80291ba:	bd10      	pop	{r4, pc}

080291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80291bc:	b508      	push	{r3, lr}
 80291be:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 80291c2:	f7ea fbab 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80291c6:	bd08      	pop	{r3, pc}

080291c8 <_ZN8touchgfx6CircleC1Ev>:
 80291c8:	b510      	push	{r4, lr}
 80291ca:	4604      	mov	r4, r0
 80291cc:	f7ea fa42 	bl	8013654 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80291d0:	4b08      	ldr	r3, [pc, #32]	; (80291f4 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80291d2:	6023      	str	r3, [r4, #0]
 80291d4:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80291d8:	2300      	movs	r3, #0
 80291da:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80291de:	f24b 4205 	movw	r2, #46085	; 0xb405
 80291e2:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80291e6:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80291ea:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80291ee:	60a3      	str	r3, [r4, #8]
 80291f0:	4620      	mov	r0, r4
 80291f2:	bd10      	pop	{r4, pc}
 80291f4:	08031230 	.word	0x08031230

080291f8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80291f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80291fc:	428a      	cmp	r2, r1
 80291fe:	4680      	mov	r8, r0
 8029200:	4610      	mov	r0, r2
 8029202:	4699      	mov	r9, r3
 8029204:	bfa6      	itte	ge
 8029206:	460a      	movge	r2, r1
 8029208:	4603      	movge	r3, r0
 802920a:	460b      	movlt	r3, r1
 802920c:	1a99      	subs	r1, r3, r2
 802920e:	b085      	sub	sp, #20
 8029210:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8029214:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8029218:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802921a:	bfa4      	itt	ge
 802921c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8029220:	2200      	movge	r2, #0
 8029222:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8029226:	9300      	str	r3, [sp, #0]
 8029228:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802922c:	f102 0b01 	add.w	fp, r2, #1
 8029230:	2c00      	cmp	r4, #0
 8029232:	f040 80af 	bne.w	8029394 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8029236:	4610      	mov	r0, r2
 8029238:	9201      	str	r2, [sp, #4]
 802923a:	f7ea fb6f 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802923e:	a903      	add	r1, sp, #12
 8029240:	9003      	str	r0, [sp, #12]
 8029242:	4650      	mov	r0, sl
 8029244:	f7ea fa32 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029248:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802924c:	9a01      	ldr	r2, [sp, #4]
 802924e:	4408      	add	r0, r1
 8029250:	f8d9 1000 	ldr.w	r1, [r9]
 8029254:	4281      	cmp	r1, r0
 8029256:	bfc8      	it	gt
 8029258:	f8c9 0000 	strgt.w	r0, [r9]
 802925c:	6839      	ldr	r1, [r7, #0]
 802925e:	4288      	cmp	r0, r1
 8029260:	bfc8      	it	gt
 8029262:	6038      	strgt	r0, [r7, #0]
 8029264:	4610      	mov	r0, r2
 8029266:	f7ff ffa9 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802926a:	a903      	add	r1, sp, #12
 802926c:	9003      	str	r0, [sp, #12]
 802926e:	4650      	mov	r0, sl
 8029270:	f7ea fa1c 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029274:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8029278:	1a10      	subs	r0, r2, r0
 802927a:	6832      	ldr	r2, [r6, #0]
 802927c:	4282      	cmp	r2, r0
 802927e:	bfc8      	it	gt
 8029280:	6030      	strgt	r0, [r6, #0]
 8029282:	682a      	ldr	r2, [r5, #0]
 8029284:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8029288:	4290      	cmp	r0, r2
 802928a:	fb9b f2f1 	sdiv	r2, fp, r1
 802928e:	fb01 b212 	mls	r2, r1, r2, fp
 8029292:	eba1 0202 	sub.w	r2, r1, r2
 8029296:	bfc8      	it	gt
 8029298:	6028      	strgt	r0, [r5, #0]
 802929a:	fb92 f0f1 	sdiv	r0, r2, r1
 802929e:	fb01 2210 	mls	r2, r1, r0, r2
 80292a2:	4493      	add	fp, r2
 80292a4:	9b00      	ldr	r3, [sp, #0]
 80292a6:	455b      	cmp	r3, fp
 80292a8:	db2a      	blt.n	8029300 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80292aa:	4658      	mov	r0, fp
 80292ac:	f7ea fb36 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80292b0:	a903      	add	r1, sp, #12
 80292b2:	9003      	str	r0, [sp, #12]
 80292b4:	4650      	mov	r0, sl
 80292b6:	f7ea f9f9 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80292ba:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80292be:	4410      	add	r0, r2
 80292c0:	f8d9 2000 	ldr.w	r2, [r9]
 80292c4:	4282      	cmp	r2, r0
 80292c6:	bfc8      	it	gt
 80292c8:	f8c9 0000 	strgt.w	r0, [r9]
 80292cc:	683a      	ldr	r2, [r7, #0]
 80292ce:	4290      	cmp	r0, r2
 80292d0:	bfc8      	it	gt
 80292d2:	6038      	strgt	r0, [r7, #0]
 80292d4:	4658      	mov	r0, fp
 80292d6:	f7ff ff71 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80292da:	a903      	add	r1, sp, #12
 80292dc:	9003      	str	r0, [sp, #12]
 80292de:	4650      	mov	r0, sl
 80292e0:	f7ea f9e4 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80292e4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80292e8:	1a10      	subs	r0, r2, r0
 80292ea:	6832      	ldr	r2, [r6, #0]
 80292ec:	4282      	cmp	r2, r0
 80292ee:	bfc8      	it	gt
 80292f0:	6030      	strgt	r0, [r6, #0]
 80292f2:	682a      	ldr	r2, [r5, #0]
 80292f4:	4290      	cmp	r0, r2
 80292f6:	bfc8      	it	gt
 80292f8:	6028      	strgt	r0, [r5, #0]
 80292fa:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80292fe:	e7d1      	b.n	80292a4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8029300:	9b00      	ldr	r3, [sp, #0]
 8029302:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8029306:	455b      	cmp	r3, fp
 8029308:	dd27      	ble.n	802935a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802930a:	4618      	mov	r0, r3
 802930c:	f7ea fb06 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029310:	a903      	add	r1, sp, #12
 8029312:	9003      	str	r0, [sp, #12]
 8029314:	4650      	mov	r0, sl
 8029316:	f7ea f9c9 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802931a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802931e:	4410      	add	r0, r2
 8029320:	f8d9 2000 	ldr.w	r2, [r9]
 8029324:	4282      	cmp	r2, r0
 8029326:	bfc8      	it	gt
 8029328:	f8c9 0000 	strgt.w	r0, [r9]
 802932c:	683a      	ldr	r2, [r7, #0]
 802932e:	4290      	cmp	r0, r2
 8029330:	bfc8      	it	gt
 8029332:	6038      	strgt	r0, [r7, #0]
 8029334:	9800      	ldr	r0, [sp, #0]
 8029336:	f7ff ff41 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802933a:	a903      	add	r1, sp, #12
 802933c:	9003      	str	r0, [sp, #12]
 802933e:	4650      	mov	r0, sl
 8029340:	f7ea f9b4 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029344:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8029348:	1a10      	subs	r0, r2, r0
 802934a:	6832      	ldr	r2, [r6, #0]
 802934c:	4282      	cmp	r2, r0
 802934e:	bfc8      	it	gt
 8029350:	6030      	strgt	r0, [r6, #0]
 8029352:	682a      	ldr	r2, [r5, #0]
 8029354:	4290      	cmp	r0, r2
 8029356:	bfc8      	it	gt
 8029358:	6028      	strgt	r0, [r5, #0]
 802935a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802935e:	f8d9 1000 	ldr.w	r1, [r9]
 8029362:	4291      	cmp	r1, r2
 8029364:	bfc8      	it	gt
 8029366:	f8c9 2000 	strgt.w	r2, [r9]
 802936a:	683a      	ldr	r2, [r7, #0]
 802936c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8029370:	429a      	cmp	r2, r3
 8029372:	bfb8      	it	lt
 8029374:	603b      	strlt	r3, [r7, #0]
 8029376:	6832      	ldr	r2, [r6, #0]
 8029378:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802937c:	429a      	cmp	r2, r3
 802937e:	bfc8      	it	gt
 8029380:	6033      	strgt	r3, [r6, #0]
 8029382:	682a      	ldr	r2, [r5, #0]
 8029384:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8029388:	429a      	cmp	r2, r3
 802938a:	da00      	bge.n	802938e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802938c:	602b      	str	r3, [r5, #0]
 802938e:	b005      	add	sp, #20
 8029390:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029394:	2002      	movs	r0, #2
 8029396:	3401      	adds	r4, #1
 8029398:	fb94 f4f0 	sdiv	r4, r4, r0
 802939c:	4610      	mov	r0, r2
 802939e:	9201      	str	r2, [sp, #4]
 80293a0:	f7ea fabc 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80293a4:	a903      	add	r1, sp, #12
 80293a6:	9003      	str	r0, [sp, #12]
 80293a8:	4650      	mov	r0, sl
 80293aa:	f7ea f97f 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80293ae:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80293b2:	9a01      	ldr	r2, [sp, #4]
 80293b4:	4408      	add	r0, r1
 80293b6:	f8d9 1000 	ldr.w	r1, [r9]
 80293ba:	1b03      	subs	r3, r0, r4
 80293bc:	4299      	cmp	r1, r3
 80293be:	bfc8      	it	gt
 80293c0:	f8c9 3000 	strgt.w	r3, [r9]
 80293c4:	6839      	ldr	r1, [r7, #0]
 80293c6:	428b      	cmp	r3, r1
 80293c8:	bfc8      	it	gt
 80293ca:	603b      	strgt	r3, [r7, #0]
 80293cc:	f8d9 1000 	ldr.w	r1, [r9]
 80293d0:	4420      	add	r0, r4
 80293d2:	4281      	cmp	r1, r0
 80293d4:	bfc8      	it	gt
 80293d6:	f8c9 0000 	strgt.w	r0, [r9]
 80293da:	6839      	ldr	r1, [r7, #0]
 80293dc:	4288      	cmp	r0, r1
 80293de:	bfc8      	it	gt
 80293e0:	6038      	strgt	r0, [r7, #0]
 80293e2:	4610      	mov	r0, r2
 80293e4:	f7ff feea 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80293e8:	a903      	add	r1, sp, #12
 80293ea:	9003      	str	r0, [sp, #12]
 80293ec:	4650      	mov	r0, sl
 80293ee:	f7ea f95d 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80293f2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80293f6:	1a10      	subs	r0, r2, r0
 80293f8:	6832      	ldr	r2, [r6, #0]
 80293fa:	1b01      	subs	r1, r0, r4
 80293fc:	428a      	cmp	r2, r1
 80293fe:	bfc8      	it	gt
 8029400:	6031      	strgt	r1, [r6, #0]
 8029402:	682a      	ldr	r2, [r5, #0]
 8029404:	4291      	cmp	r1, r2
 8029406:	bfc8      	it	gt
 8029408:	6029      	strgt	r1, [r5, #0]
 802940a:	6832      	ldr	r2, [r6, #0]
 802940c:	4420      	add	r0, r4
 802940e:	4282      	cmp	r2, r0
 8029410:	bfc8      	it	gt
 8029412:	6030      	strgt	r0, [r6, #0]
 8029414:	682a      	ldr	r2, [r5, #0]
 8029416:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802941a:	4290      	cmp	r0, r2
 802941c:	fb9b f2f1 	sdiv	r2, fp, r1
 8029420:	fb01 b212 	mls	r2, r1, r2, fp
 8029424:	eba1 0202 	sub.w	r2, r1, r2
 8029428:	bfc8      	it	gt
 802942a:	6028      	strgt	r0, [r5, #0]
 802942c:	fb92 f0f1 	sdiv	r0, r2, r1
 8029430:	fb01 2210 	mls	r2, r1, r0, r2
 8029434:	4493      	add	fp, r2
 8029436:	9b00      	ldr	r3, [sp, #0]
 8029438:	455b      	cmp	r3, fp
 802943a:	db40      	blt.n	80294be <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802943c:	4658      	mov	r0, fp
 802943e:	f7ea fa6d 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029442:	a903      	add	r1, sp, #12
 8029444:	9003      	str	r0, [sp, #12]
 8029446:	4650      	mov	r0, sl
 8029448:	f7ea f930 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802944c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8029450:	4410      	add	r0, r2
 8029452:	f8d9 2000 	ldr.w	r2, [r9]
 8029456:	1b01      	subs	r1, r0, r4
 8029458:	428a      	cmp	r2, r1
 802945a:	bfc8      	it	gt
 802945c:	f8c9 1000 	strgt.w	r1, [r9]
 8029460:	683a      	ldr	r2, [r7, #0]
 8029462:	4291      	cmp	r1, r2
 8029464:	bfc8      	it	gt
 8029466:	6039      	strgt	r1, [r7, #0]
 8029468:	f8d9 2000 	ldr.w	r2, [r9]
 802946c:	4420      	add	r0, r4
 802946e:	4282      	cmp	r2, r0
 8029470:	bfc8      	it	gt
 8029472:	f8c9 0000 	strgt.w	r0, [r9]
 8029476:	683a      	ldr	r2, [r7, #0]
 8029478:	4290      	cmp	r0, r2
 802947a:	bfc8      	it	gt
 802947c:	6038      	strgt	r0, [r7, #0]
 802947e:	4658      	mov	r0, fp
 8029480:	f7ff fe9c 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029484:	a903      	add	r1, sp, #12
 8029486:	9003      	str	r0, [sp, #12]
 8029488:	4650      	mov	r0, sl
 802948a:	f7ea f90f 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802948e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8029492:	1a10      	subs	r0, r2, r0
 8029494:	6832      	ldr	r2, [r6, #0]
 8029496:	1b01      	subs	r1, r0, r4
 8029498:	428a      	cmp	r2, r1
 802949a:	bfc8      	it	gt
 802949c:	6031      	strgt	r1, [r6, #0]
 802949e:	682a      	ldr	r2, [r5, #0]
 80294a0:	4291      	cmp	r1, r2
 80294a2:	bfc8      	it	gt
 80294a4:	6029      	strgt	r1, [r5, #0]
 80294a6:	6832      	ldr	r2, [r6, #0]
 80294a8:	4420      	add	r0, r4
 80294aa:	4282      	cmp	r2, r0
 80294ac:	bfc8      	it	gt
 80294ae:	6030      	strgt	r0, [r6, #0]
 80294b0:	682a      	ldr	r2, [r5, #0]
 80294b2:	4290      	cmp	r0, r2
 80294b4:	bfc8      	it	gt
 80294b6:	6028      	strgt	r0, [r5, #0]
 80294b8:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80294bc:	e7bb      	b.n	8029436 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80294be:	9b00      	ldr	r3, [sp, #0]
 80294c0:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80294c4:	455b      	cmp	r3, fp
 80294c6:	f77f af62 	ble.w	802938e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80294ca:	4618      	mov	r0, r3
 80294cc:	f7ea fa26 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80294d0:	a903      	add	r1, sp, #12
 80294d2:	9003      	str	r0, [sp, #12]
 80294d4:	4650      	mov	r0, sl
 80294d6:	f7ea f8e9 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80294da:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80294de:	4410      	add	r0, r2
 80294e0:	f8d9 2000 	ldr.w	r2, [r9]
 80294e4:	1b01      	subs	r1, r0, r4
 80294e6:	428a      	cmp	r2, r1
 80294e8:	bfc8      	it	gt
 80294ea:	f8c9 1000 	strgt.w	r1, [r9]
 80294ee:	683a      	ldr	r2, [r7, #0]
 80294f0:	4291      	cmp	r1, r2
 80294f2:	bfc8      	it	gt
 80294f4:	6039      	strgt	r1, [r7, #0]
 80294f6:	f8d9 2000 	ldr.w	r2, [r9]
 80294fa:	4420      	add	r0, r4
 80294fc:	4282      	cmp	r2, r0
 80294fe:	bfc8      	it	gt
 8029500:	f8c9 0000 	strgt.w	r0, [r9]
 8029504:	683b      	ldr	r3, [r7, #0]
 8029506:	4298      	cmp	r0, r3
 8029508:	bfc8      	it	gt
 802950a:	6038      	strgt	r0, [r7, #0]
 802950c:	9800      	ldr	r0, [sp, #0]
 802950e:	f7ff fe55 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029512:	a903      	add	r1, sp, #12
 8029514:	9003      	str	r0, [sp, #12]
 8029516:	4650      	mov	r0, sl
 8029518:	f7ea f8c8 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802951c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8029520:	6832      	ldr	r2, [r6, #0]
 8029522:	1a18      	subs	r0, r3, r0
 8029524:	1b03      	subs	r3, r0, r4
 8029526:	429a      	cmp	r2, r3
 8029528:	bfc8      	it	gt
 802952a:	6033      	strgt	r3, [r6, #0]
 802952c:	682a      	ldr	r2, [r5, #0]
 802952e:	4293      	cmp	r3, r2
 8029530:	bfc8      	it	gt
 8029532:	602b      	strgt	r3, [r5, #0]
 8029534:	6833      	ldr	r3, [r6, #0]
 8029536:	4404      	add	r4, r0
 8029538:	42a3      	cmp	r3, r4
 802953a:	bfc8      	it	gt
 802953c:	6034      	strgt	r4, [r6, #0]
 802953e:	682b      	ldr	r3, [r5, #0]
 8029540:	429c      	cmp	r4, r3
 8029542:	bfc8      	it	gt
 8029544:	602c      	strgt	r4, [r5, #0]
 8029546:	e722      	b.n	802938e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08029548 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8029548:	b530      	push	{r4, r5, lr}
 802954a:	4604      	mov	r4, r0
 802954c:	4608      	mov	r0, r1
 802954e:	4611      	mov	r1, r2
 8029550:	461a      	mov	r2, r3
 8029552:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8029556:	b089      	sub	sp, #36	; 0x24
 8029558:	015b      	lsls	r3, r3, #5
 802955a:	9304      	str	r3, [sp, #16]
 802955c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8029560:	2500      	movs	r5, #0
 8029562:	015b      	lsls	r3, r3, #5
 8029564:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8029568:	ab07      	add	r3, sp, #28
 802956a:	9302      	str	r3, [sp, #8]
 802956c:	ab06      	add	r3, sp, #24
 802956e:	9301      	str	r3, [sp, #4]
 8029570:	ab05      	add	r3, sp, #20
 8029572:	9300      	str	r3, [sp, #0]
 8029574:	ab04      	add	r3, sp, #16
 8029576:	9505      	str	r5, [sp, #20]
 8029578:	f7ff fe3e 	bl	80291f8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802957c:	2520      	movs	r5, #32
 802957e:	9a04      	ldr	r2, [sp, #16]
 8029580:	9805      	ldr	r0, [sp, #20]
 8029582:	fb92 f2f5 	sdiv	r2, r2, r5
 8029586:	fb90 f0f5 	sdiv	r0, r0, r5
 802958a:	b292      	uxth	r2, r2
 802958c:	3002      	adds	r0, #2
 802958e:	1a80      	subs	r0, r0, r2
 8029590:	9b06      	ldr	r3, [sp, #24]
 8029592:	9907      	ldr	r1, [sp, #28]
 8029594:	fb93 f3f5 	sdiv	r3, r3, r5
 8029598:	fb91 f1f5 	sdiv	r1, r1, r5
 802959c:	b29b      	uxth	r3, r3
 802959e:	3102      	adds	r1, #2
 80295a0:	1ac9      	subs	r1, r1, r3
 80295a2:	3a01      	subs	r2, #1
 80295a4:	3b01      	subs	r3, #1
 80295a6:	80a0      	strh	r0, [r4, #4]
 80295a8:	4620      	mov	r0, r4
 80295aa:	8022      	strh	r2, [r4, #0]
 80295ac:	8063      	strh	r3, [r4, #2]
 80295ae:	80e1      	strh	r1, [r4, #6]
 80295b0:	b009      	add	sp, #36	; 0x24
 80295b2:	bd30      	pop	{r4, r5, pc}

080295b4 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80295b4:	b510      	push	{r4, lr}
 80295b6:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80295ba:	4604      	mov	r4, r0
 80295bc:	f7ff ffc4 	bl	8029548 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80295c0:	4620      	mov	r0, r4
 80295c2:	bd10      	pop	{r4, pc}

080295c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80295c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80295c6:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80295ca:	4606      	mov	r6, r0
 80295cc:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80295d0:	6813      	ldr	r3, [r2, #0]
 80295d2:	42a5      	cmp	r5, r4
 80295d4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80295d8:	da2b      	bge.n	8029632 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80295da:	42a3      	cmp	r3, r4
 80295dc:	dd14      	ble.n	8029608 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80295de:	b168      	cbz	r0, 80295fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80295e0:	4267      	negs	r7, r4
 80295e2:	fb97 f2f0 	sdiv	r2, r7, r0
 80295e6:	fb00 7212 	mls	r2, r0, r2, r7
 80295ea:	1a82      	subs	r2, r0, r2
 80295ec:	fb92 f7f0 	sdiv	r7, r2, r0
 80295f0:	fb00 2017 	mls	r0, r0, r7, r2
 80295f4:	1a24      	subs	r4, r4, r0
 80295f6:	42ac      	cmp	r4, r5
 80295f8:	bfb8      	it	lt
 80295fa:	462c      	movlt	r4, r5
 80295fc:	4630      	mov	r0, r6
 80295fe:	4622      	mov	r2, r4
 8029600:	f7ff ffa2 	bl	8029548 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8029604:	4630      	mov	r0, r6
 8029606:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029608:	42ab      	cmp	r3, r5
 802960a:	dd0e      	ble.n	802962a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802960c:	b168      	cbz	r0, 802962a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802960e:	425f      	negs	r7, r3
 8029610:	fb97 f2f0 	sdiv	r2, r7, r0
 8029614:	fb00 7212 	mls	r2, r0, r2, r7
 8029618:	1a82      	subs	r2, r0, r2
 802961a:	fb92 f7f0 	sdiv	r7, r2, r0
 802961e:	fb00 2017 	mls	r0, r0, r7, r2
 8029622:	1a1b      	subs	r3, r3, r0
 8029624:	42ab      	cmp	r3, r5
 8029626:	bfb8      	it	lt
 8029628:	462b      	movlt	r3, r5
 802962a:	4622      	mov	r2, r4
 802962c:	461c      	mov	r4, r3
 802962e:	4613      	mov	r3, r2
 8029630:	e7e4      	b.n	80295fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8029632:	42a3      	cmp	r3, r4
 8029634:	da10      	bge.n	8029658 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8029636:	b148      	cbz	r0, 802964c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8029638:	fb94 f2f0 	sdiv	r2, r4, r0
 802963c:	fb00 4212 	mls	r2, r0, r2, r4
 8029640:	1a82      	subs	r2, r0, r2
 8029642:	fb92 f7f0 	sdiv	r7, r2, r0
 8029646:	fb00 2017 	mls	r0, r0, r7, r2
 802964a:	4404      	add	r4, r0
 802964c:	42a5      	cmp	r5, r4
 802964e:	bfa8      	it	ge
 8029650:	4625      	movge	r5, r4
 8029652:	461c      	mov	r4, r3
 8029654:	462b      	mov	r3, r5
 8029656:	e7d1      	b.n	80295fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8029658:	42ab      	cmp	r3, r5
 802965a:	dacf      	bge.n	80295fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802965c:	2800      	cmp	r0, #0
 802965e:	d0cd      	beq.n	80295fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8029660:	fb93 f2f0 	sdiv	r2, r3, r0
 8029664:	fb00 3212 	mls	r2, r0, r2, r3
 8029668:	1a82      	subs	r2, r0, r2
 802966a:	fb92 f7f0 	sdiv	r7, r2, r0
 802966e:	fb00 2017 	mls	r0, r0, r7, r2
 8029672:	4403      	add	r3, r0
 8029674:	42ab      	cmp	r3, r5
 8029676:	bfa8      	it	ge
 8029678:	462b      	movge	r3, r5
 802967a:	e7bf      	b.n	80295fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802967c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802967c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029680:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8029684:	42ae      	cmp	r6, r5
 8029686:	bfa2      	ittt	ge
 8029688:	4633      	movge	r3, r6
 802968a:	462e      	movge	r6, r5
 802968c:	461d      	movge	r5, r3
 802968e:	1bab      	subs	r3, r5, r6
 8029690:	468b      	mov	fp, r1
 8029692:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8029694:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8029698:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802969c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80296a0:	f04f 0220 	mov.w	r2, #32
 80296a4:	b0ab      	sub	sp, #172	; 0xac
 80296a6:	4604      	mov	r4, r0
 80296a8:	bfa4      	itt	ge
 80296aa:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80296ae:	2600      	movge	r6, #0
 80296b0:	fb99 f9f2 	sdiv	r9, r9, r2
 80296b4:	fb9a faf2 	sdiv	sl, sl, r2
 80296b8:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80296ba:	2900      	cmp	r1, #0
 80296bc:	f000 80f5 	beq.w	80298aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 80296c0:	f9bb 0000 	ldrsh.w	r0, [fp]
 80296c4:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80296c8:	eba9 0700 	sub.w	r7, r9, r0
 80296cc:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80296d0:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80296d4:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80296d8:	ebaa 0802 	sub.w	r8, sl, r2
 80296dc:	4407      	add	r7, r0
 80296de:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80296e2:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80296e6:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80296ea:	b23f      	sxth	r7, r7
 80296ec:	4490      	add	r8, r2
 80296ee:	eba9 0707 	sub.w	r7, r9, r7
 80296f2:	fa0f f888 	sxth.w	r8, r8
 80296f6:	ebaa 0808 	sub.w	r8, sl, r8
 80296fa:	2f00      	cmp	r7, #0
 80296fc:	bfb8      	it	lt
 80296fe:	427f      	neglt	r7, r7
 8029700:	f1b8 0f00 	cmp.w	r8, #0
 8029704:	bfb8      	it	lt
 8029706:	f1c8 0800 	rsblt	r8, r8, #0
 802970a:	45bc      	cmp	ip, r7
 802970c:	bfcc      	ite	gt
 802970e:	f10c 0701 	addgt.w	r7, ip, #1
 8029712:	3701      	addle	r7, #1
 8029714:	4540      	cmp	r0, r8
 8029716:	bfc8      	it	gt
 8029718:	f100 0801 	addgt.w	r8, r0, #1
 802971c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8029720:	f100 0001 	add.w	r0, r0, #1
 8029724:	ea4f 0060 	mov.w	r0, r0, asr #1
 8029728:	f04f 0202 	mov.w	r2, #2
 802972c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8029730:	fb91 f1f2 	sdiv	r1, r1, r2
 8029734:	eba3 0301 	sub.w	r3, r3, r1
 8029738:	bfd8      	it	le
 802973a:	f108 0801 	addle.w	r8, r8, #1
 802973e:	9201      	str	r2, [sp, #4]
 8029740:	930d      	str	r3, [sp, #52]	; 0x34
 8029742:	f7ea f8cb 	bl	80138dc <_ZN8touchgfx7CWRUtil4sineEi>
 8029746:	a92a      	add	r1, sp, #168	; 0xa8
 8029748:	fb08 f808 	mul.w	r8, r8, r8
 802974c:	f841 0d70 	str.w	r0, [r1, #-112]!
 8029750:	a80d      	add	r0, sp, #52	; 0x34
 8029752:	f7e9 ffab 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029756:	fb07 8707 	mla	r7, r7, r7, r8
 802975a:	f04f 0c20 	mov.w	ip, #32
 802975e:	fb90 f0fc 	sdiv	r0, r0, ip
 8029762:	4340      	muls	r0, r0
 8029764:	4287      	cmp	r7, r0
 8029766:	9a01      	ldr	r2, [sp, #4]
 8029768:	da04      	bge.n	8029774 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802976a:	2401      	movs	r4, #1
 802976c:	4620      	mov	r0, r4
 802976e:	b02b      	add	sp, #172	; 0xac
 8029770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029774:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8029776:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029778:	fb91 f3f2 	sdiv	r3, r1, r2
 802977c:	4403      	add	r3, r0
 802977e:	fb93 f3fc 	sdiv	r3, r3, ip
 8029782:	f9bb 1000 	ldrsh.w	r1, [fp]
 8029786:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802978a:	440a      	add	r2, r1
 802978c:	b212      	sxth	r2, r2
 802978e:	454a      	cmp	r2, r9
 8029790:	bfa8      	it	ge
 8029792:	464a      	movge	r2, r9
 8029794:	428a      	cmp	r2, r1
 8029796:	bfac      	ite	ge
 8029798:	eba9 0902 	subge.w	r9, r9, r2
 802979c:	eba9 0901 	sublt.w	r9, r9, r1
 80297a0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80297a4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80297a8:	440a      	add	r2, r1
 80297aa:	b212      	sxth	r2, r2
 80297ac:	4552      	cmp	r2, sl
 80297ae:	bfa8      	it	ge
 80297b0:	4652      	movge	r2, sl
 80297b2:	428a      	cmp	r2, r1
 80297b4:	bfac      	ite	ge
 80297b6:	ebaa 0a02 	subge.w	sl, sl, r2
 80297ba:	ebaa 0a01 	sublt.w	sl, sl, r1
 80297be:	3301      	adds	r3, #1
 80297c0:	fb0a fa0a 	mul.w	sl, sl, sl
 80297c4:	fb09 a909 	mla	r9, r9, r9, sl
 80297c8:	435b      	muls	r3, r3
 80297ca:	4599      	cmp	r9, r3
 80297cc:	dccd      	bgt.n	802976a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80297ce:	465a      	mov	r2, fp
 80297d0:	4621      	mov	r1, r4
 80297d2:	a80e      	add	r0, sp, #56	; 0x38
 80297d4:	f7ff faae 	bl	8028d34 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80297d8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80297da:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80297dc:	9209      	str	r2, [sp, #36]	; 0x24
 80297de:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80297e2:	930a      	str	r3, [sp, #40]	; 0x28
 80297e4:	dd07      	ble.n	80297f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80297e6:	2102      	movs	r1, #2
 80297e8:	fb93 f3f1 	sdiv	r3, r3, r1
 80297ec:	4413      	add	r3, r2
 80297ee:	930a      	str	r3, [sp, #40]	; 0x28
 80297f0:	fb93 f3f1 	sdiv	r3, r3, r1
 80297f4:	9309      	str	r3, [sp, #36]	; 0x24
 80297f6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80297fa:	4630      	mov	r0, r6
 80297fc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029800:	930b      	str	r3, [sp, #44]	; 0x2c
 8029802:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8029806:	f7ea f889 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802980a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802980e:	f04f 0a02 	mov.w	sl, #2
 8029812:	f849 0d74 	str.w	r0, [r9, #-116]!
 8029816:	a80b      	add	r0, sp, #44	; 0x2c
 8029818:	4649      	mov	r1, r9
 802981a:	f7e9 ff47 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802981e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8029820:	fb90 f0fa 	sdiv	r0, r0, sl
 8029824:	eb00 0b03 	add.w	fp, r0, r3
 8029828:	4630      	mov	r0, r6
 802982a:	f7ff fcc7 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802982e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8029832:	017f      	lsls	r7, r7, #5
 8029834:	f848 0d78 	str.w	r0, [r8, #-120]!
 8029838:	a80b      	add	r0, sp, #44	; 0x2c
 802983a:	4641      	mov	r1, r8
 802983c:	f7e9 ff36 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029840:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8029842:	fb90 f0fa 	sdiv	r0, r0, sl
 8029846:	4659      	mov	r1, fp
 8029848:	1a12      	subs	r2, r2, r0
 802984a:	a80e      	add	r0, sp, #56	; 0x38
 802984c:	f7ff fbf2 	bl	8029034 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8029850:	f106 0a20 	add.w	sl, r6, #32
 8029854:	bb67      	cbnz	r7, 80298b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8029856:	46b3      	mov	fp, r6
 8029858:	45aa      	cmp	sl, r5
 802985a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802985c:	dc33      	bgt.n	80298c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802985e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029860:	4650      	mov	r0, sl
 8029862:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8029866:	920b      	str	r2, [sp, #44]	; 0x2c
 8029868:	f7ea f858 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802986c:	4641      	mov	r1, r8
 802986e:	900c      	str	r0, [sp, #48]	; 0x30
 8029870:	a80b      	add	r0, sp, #44	; 0x2c
 8029872:	f7e9 ff1b 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029876:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8029878:	2302      	movs	r3, #2
 802987a:	fb90 f0f3 	sdiv	r0, r0, r3
 802987e:	eb00 0b02 	add.w	fp, r0, r2
 8029882:	4650      	mov	r0, sl
 8029884:	f7ff fc9a 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029888:	4649      	mov	r1, r9
 802988a:	900d      	str	r0, [sp, #52]	; 0x34
 802988c:	a80b      	add	r0, sp, #44	; 0x2c
 802988e:	f7e9 ff0d 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029892:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8029894:	2302      	movs	r3, #2
 8029896:	4659      	mov	r1, fp
 8029898:	fb90 f0f3 	sdiv	r0, r0, r3
 802989c:	1a12      	subs	r2, r2, r0
 802989e:	a80e      	add	r0, sp, #56	; 0x38
 80298a0:	46d3      	mov	fp, sl
 80298a2:	f7ff fc14 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80298a6:	44ba      	add	sl, r7
 80298a8:	e7d6      	b.n	8029858 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 80298aa:	fb93 f3f2 	sdiv	r3, r3, r2
 80298ae:	e768      	b.n	8029782 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80298b0:	fb9a f2f7 	sdiv	r2, sl, r7
 80298b4:	fb07 a212 	mls	r2, r7, r2, sl
 80298b8:	1aba      	subs	r2, r7, r2
 80298ba:	fb92 f1f7 	sdiv	r1, r2, r7
 80298be:	fb07 2211 	mls	r2, r7, r1, r2
 80298c2:	4492      	add	sl, r2
 80298c4:	e7c7      	b.n	8029856 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80298c6:	45ab      	cmp	fp, r5
 80298c8:	da23      	bge.n	8029912 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80298ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80298cc:	4628      	mov	r0, r5
 80298ce:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80298d2:	920b      	str	r2, [sp, #44]	; 0x2c
 80298d4:	f7ea f822 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80298d8:	4641      	mov	r1, r8
 80298da:	900c      	str	r0, [sp, #48]	; 0x30
 80298dc:	a80b      	add	r0, sp, #44	; 0x2c
 80298de:	f7e9 fee5 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80298e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80298e4:	f04f 0a02 	mov.w	sl, #2
 80298e8:	fb90 f0fa 	sdiv	r0, r0, sl
 80298ec:	4403      	add	r3, r0
 80298ee:	4628      	mov	r0, r5
 80298f0:	9301      	str	r3, [sp, #4]
 80298f2:	f7ff fc63 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80298f6:	4649      	mov	r1, r9
 80298f8:	900d      	str	r0, [sp, #52]	; 0x34
 80298fa:	a80b      	add	r0, sp, #44	; 0x2c
 80298fc:	f7e9 fed6 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029900:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8029902:	9b01      	ldr	r3, [sp, #4]
 8029904:	fb90 f0fa 	sdiv	r0, r0, sl
 8029908:	4619      	mov	r1, r3
 802990a:	1a12      	subs	r2, r2, r0
 802990c:	a80e      	add	r0, sp, #56	; 0x38
 802990e:	f7ff fbde 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8029912:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8029914:	b99b      	cbnz	r3, 802993e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8029916:	1bad      	subs	r5, r5, r6
 8029918:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802991c:	da04      	bge.n	8029928 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802991e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8029922:	a80e      	add	r0, sp, #56	; 0x38
 8029924:	f7ff fbd3 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8029928:	21ff      	movs	r1, #255	; 0xff
 802992a:	a80e      	add	r0, sp, #56	; 0x38
 802992c:	f7ff fabe 	bl	8028eac <_ZN8touchgfx6Canvas6renderEh>
 8029930:	4604      	mov	r4, r0
 8029932:	4b8a      	ldr	r3, [pc, #552]	; (8029b5c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8029934:	930e      	str	r3, [sp, #56]	; 0x38
 8029936:	a816      	add	r0, sp, #88	; 0x58
 8029938:	f7eb fcf0 	bl	801531c <_ZN8touchgfx7OutlineD1Ev>
 802993c:	e716      	b.n	802976c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802993e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8029942:	429a      	cmp	r2, r3
 8029944:	f0c0 8107 	bcc.w	8029b56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8029948:	1bab      	subs	r3, r5, r6
 802994a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802994e:	9301      	str	r3, [sp, #4]
 8029950:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8029954:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8029958:	da43      	bge.n	80299e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802995a:	4628      	mov	r0, r5
 802995c:	f7e9 ffde 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029960:	4649      	mov	r1, r9
 8029962:	900d      	str	r0, [sp, #52]	; 0x34
 8029964:	a809      	add	r0, sp, #36	; 0x24
 8029966:	f7e9 fea1 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802996a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802996c:	18c3      	adds	r3, r0, r3
 802996e:	4628      	mov	r0, r5
 8029970:	9303      	str	r3, [sp, #12]
 8029972:	f7ff fc23 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029976:	4649      	mov	r1, r9
 8029978:	900d      	str	r0, [sp, #52]	; 0x34
 802997a:	a809      	add	r0, sp, #36	; 0x24
 802997c:	f7e9 fe96 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029980:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8029982:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8029986:	1a1b      	subs	r3, r3, r0
 8029988:	9302      	str	r3, [sp, #8]
 802998a:	9204      	str	r2, [sp, #16]
 802998c:	eb0a 0305 	add.w	r3, sl, r5
 8029990:	9a04      	ldr	r2, [sp, #16]
 8029992:	4293      	cmp	r3, r2
 8029994:	da25      	bge.n	80299e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8029996:	4618      	mov	r0, r3
 8029998:	9306      	str	r3, [sp, #24]
 802999a:	f7e9 ffbf 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802999e:	4649      	mov	r1, r9
 80299a0:	900d      	str	r0, [sp, #52]	; 0x34
 80299a2:	a80a      	add	r0, sp, #40	; 0x28
 80299a4:	f7e9 fe82 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80299a8:	9b03      	ldr	r3, [sp, #12]
 80299aa:	2202      	movs	r2, #2
 80299ac:	fb90 f0f2 	sdiv	r0, r0, r2
 80299b0:	18c3      	adds	r3, r0, r3
 80299b2:	9305      	str	r3, [sp, #20]
 80299b4:	9b06      	ldr	r3, [sp, #24]
 80299b6:	9207      	str	r2, [sp, #28]
 80299b8:	4618      	mov	r0, r3
 80299ba:	f7ff fbff 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80299be:	a92a      	add	r1, sp, #168	; 0xa8
 80299c0:	f841 0d78 	str.w	r0, [r1, #-120]!
 80299c4:	a80a      	add	r0, sp, #40	; 0x28
 80299c6:	f7e9 fe71 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80299ca:	9b02      	ldr	r3, [sp, #8]
 80299cc:	9a07      	ldr	r2, [sp, #28]
 80299ce:	9905      	ldr	r1, [sp, #20]
 80299d0:	fb90 f2f2 	sdiv	r2, r0, r2
 80299d4:	a80e      	add	r0, sp, #56	; 0x38
 80299d6:	1a9a      	subs	r2, r3, r2
 80299d8:	f7ff fb79 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80299dc:	9b06      	ldr	r3, [sp, #24]
 80299de:	4453      	add	r3, sl
 80299e0:	e7d6      	b.n	8029990 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80299e2:	45ab      	cmp	fp, r5
 80299e4:	da25      	bge.n	8029a32 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 80299e6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80299ea:	4628      	mov	r0, r5
 80299ec:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80299f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80299f2:	f7e9 ff93 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80299f6:	4641      	mov	r1, r8
 80299f8:	900c      	str	r0, [sp, #48]	; 0x30
 80299fa:	a80b      	add	r0, sp, #44	; 0x2c
 80299fc:	f7e9 fe56 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029a00:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8029a02:	2202      	movs	r2, #2
 8029a04:	fb90 f0f2 	sdiv	r0, r0, r2
 8029a08:	eb00 0903 	add.w	r9, r0, r3
 8029a0c:	4628      	mov	r0, r5
 8029a0e:	9202      	str	r2, [sp, #8]
 8029a10:	f7ff fbd4 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029a14:	a92a      	add	r1, sp, #168	; 0xa8
 8029a16:	f841 0d74 	str.w	r0, [r1, #-116]!
 8029a1a:	a80b      	add	r0, sp, #44	; 0x2c
 8029a1c:	f7e9 fe46 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029a20:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8029a22:	9a02      	ldr	r2, [sp, #8]
 8029a24:	fb90 f2f2 	sdiv	r2, r0, r2
 8029a28:	4649      	mov	r1, r9
 8029a2a:	1a9a      	subs	r2, r3, r2
 8029a2c:	a80e      	add	r0, sp, #56	; 0x38
 8029a2e:	f7ff fb4e 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8029a32:	46d9      	mov	r9, fp
 8029a34:	2502      	movs	r5, #2
 8029a36:	45b1      	cmp	r9, r6
 8029a38:	db25      	blt.n	8029a86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8029a3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8029a3e:	4648      	mov	r0, r9
 8029a40:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8029a44:	930b      	str	r3, [sp, #44]	; 0x2c
 8029a46:	f7e9 ff69 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029a4a:	4641      	mov	r1, r8
 8029a4c:	900c      	str	r0, [sp, #48]	; 0x30
 8029a4e:	a80b      	add	r0, sp, #44	; 0x2c
 8029a50:	f7e9 fe2c 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029a54:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8029a56:	fb90 f0f5 	sdiv	r0, r0, r5
 8029a5a:	eb00 0b03 	add.w	fp, r0, r3
 8029a5e:	4648      	mov	r0, r9
 8029a60:	f7ff fbac 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029a64:	a90d      	add	r1, sp, #52	; 0x34
 8029a66:	900d      	str	r0, [sp, #52]	; 0x34
 8029a68:	a80b      	add	r0, sp, #44	; 0x2c
 8029a6a:	f7e9 fe1f 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029a6e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8029a70:	fb90 f0f5 	sdiv	r0, r0, r5
 8029a74:	4659      	mov	r1, fp
 8029a76:	1a12      	subs	r2, r2, r0
 8029a78:	a80e      	add	r0, sp, #56	; 0x38
 8029a7a:	46cb      	mov	fp, r9
 8029a7c:	f7ff fb27 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8029a80:	eba9 0907 	sub.w	r9, r9, r7
 8029a84:	e7d7      	b.n	8029a36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8029a86:	455e      	cmp	r6, fp
 8029a88:	da22      	bge.n	8029ad0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8029a8a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8029a8e:	4630      	mov	r0, r6
 8029a90:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8029a94:	930b      	str	r3, [sp, #44]	; 0x2c
 8029a96:	f7e9 ff41 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029a9a:	4641      	mov	r1, r8
 8029a9c:	900c      	str	r0, [sp, #48]	; 0x30
 8029a9e:	a80b      	add	r0, sp, #44	; 0x2c
 8029aa0:	f7e9 fe04 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029aa4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8029aa6:	2502      	movs	r5, #2
 8029aa8:	fb90 f0f5 	sdiv	r0, r0, r5
 8029aac:	4407      	add	r7, r0
 8029aae:	4630      	mov	r0, r6
 8029ab0:	f7ff fb84 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029ab4:	a92a      	add	r1, sp, #168	; 0xa8
 8029ab6:	f841 0d74 	str.w	r0, [r1, #-116]!
 8029aba:	a80b      	add	r0, sp, #44	; 0x2c
 8029abc:	f7e9 fdf6 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029ac0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8029ac2:	fb90 f0f5 	sdiv	r0, r0, r5
 8029ac6:	4639      	mov	r1, r7
 8029ac8:	1a12      	subs	r2, r2, r0
 8029aca:	a80e      	add	r0, sp, #56	; 0x38
 8029acc:	f7ff faff 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8029ad0:	9b01      	ldr	r3, [sp, #4]
 8029ad2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8029ad6:	f6bf af27 	bge.w	8029928 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8029ada:	4630      	mov	r0, r6
 8029adc:	f7e9 ff1e 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029ae0:	ad2a      	add	r5, sp, #168	; 0xa8
 8029ae2:	f04f 0b02 	mov.w	fp, #2
 8029ae6:	f845 0d74 	str.w	r0, [r5, #-116]!
 8029aea:	a809      	add	r0, sp, #36	; 0x24
 8029aec:	4629      	mov	r1, r5
 8029aee:	f7e9 fddd 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029af2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8029af4:	eb00 0903 	add.w	r9, r0, r3
 8029af8:	4630      	mov	r0, r6
 8029afa:	f7ff fb5f 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029afe:	4629      	mov	r1, r5
 8029b00:	900d      	str	r0, [sp, #52]	; 0x34
 8029b02:	a809      	add	r0, sp, #36	; 0x24
 8029b04:	f7e9 fdd2 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029b08:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8029b0a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8029b0e:	eba3 0800 	sub.w	r8, r3, r0
 8029b12:	4454      	add	r4, sl
 8029b14:	42a6      	cmp	r6, r4
 8029b16:	f77f af07 	ble.w	8029928 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8029b1a:	4620      	mov	r0, r4
 8029b1c:	f7e9 fefe 	bl	801391c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029b20:	4629      	mov	r1, r5
 8029b22:	900d      	str	r0, [sp, #52]	; 0x34
 8029b24:	a80a      	add	r0, sp, #40	; 0x28
 8029b26:	f7e9 fdc1 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029b2a:	fb90 f0fb 	sdiv	r0, r0, fp
 8029b2e:	eb00 0709 	add.w	r7, r0, r9
 8029b32:	4620      	mov	r0, r4
 8029b34:	f7ff fb42 	bl	80291bc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8029b38:	a90c      	add	r1, sp, #48	; 0x30
 8029b3a:	900c      	str	r0, [sp, #48]	; 0x30
 8029b3c:	a80a      	add	r0, sp, #40	; 0x28
 8029b3e:	f7e9 fdb5 	bl	80136ac <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8029b42:	4639      	mov	r1, r7
 8029b44:	fb90 f2fb 	sdiv	r2, r0, fp
 8029b48:	a80e      	add	r0, sp, #56	; 0x38
 8029b4a:	eba8 0202 	sub.w	r2, r8, r2
 8029b4e:	f7ff fabe 	bl	80290ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8029b52:	4454      	add	r4, sl
 8029b54:	e7de      	b.n	8029b14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8029b56:	2400      	movs	r4, #0
 8029b58:	e6eb      	b.n	8029932 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8029b5a:	bf00      	nop
 8029b5c:	0803121c 	.word	0x0803121c

08029b60 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8029b60:	b570      	push	{r4, r5, r6, lr}
 8029b62:	790b      	ldrb	r3, [r1, #4]
 8029b64:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8029b68:	2b00      	cmp	r3, #0
 8029b6a:	bf0c      	ite	eq
 8029b6c:	2301      	moveq	r3, #1
 8029b6e:	2300      	movne	r3, #0
 8029b70:	4604      	mov	r4, r0
 8029b72:	460e      	mov	r6, r1
 8029b74:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8029b78:	d109      	bne.n	8029b8e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8029b7a:	b14d      	cbz	r5, 8029b90 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8029b7c:	7933      	ldrb	r3, [r6, #4]
 8029b7e:	2b01      	cmp	r3, #1
 8029b80:	d10c      	bne.n	8029b9c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8029b82:	6823      	ldr	r3, [r4, #0]
 8029b84:	4620      	mov	r0, r4
 8029b86:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8029b88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8029b8c:	4718      	bx	r3
 8029b8e:	b12d      	cbz	r5, 8029b9c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8029b90:	6823      	ldr	r3, [r4, #0]
 8029b92:	4620      	mov	r0, r4
 8029b94:	695b      	ldr	r3, [r3, #20]
 8029b96:	4798      	blx	r3
 8029b98:	2d00      	cmp	r5, #0
 8029b9a:	d1ef      	bne.n	8029b7c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8029b9c:	bd70      	pop	{r4, r5, r6, pc}

08029b9e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8029b9e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8029ba2:	4770      	bx	lr

08029ba4 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8029ba4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8029ba8:	4770      	bx	lr

08029baa <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8029baa:	6802      	ldr	r2, [r0, #0]
 8029bac:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8029bb0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8029bb2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8029bb6:	4710      	bx	r2

08029bb8 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8029bb8:	6802      	ldr	r2, [r0, #0]
 8029bba:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8029bbe:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8029bc0:	eef0 0a40 	vmov.f32	s1, s0
 8029bc4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8029bc8:	4710      	bx	r2

08029bca <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8029bca:	6802      	ldr	r2, [r0, #0]
 8029bcc:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8029bd0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8029bd2:	eeb0 1a40 	vmov.f32	s2, s0
 8029bd6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8029bda:	4710      	bx	r2

08029bdc <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8029bdc:	6802      	ldr	r2, [r0, #0]
 8029bde:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8029be2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8029be4:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8029be8:	4710      	bx	r2

08029bea <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8029bea:	6802      	ldr	r2, [r0, #0]
 8029bec:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8029bf0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8029bf2:	eef0 0a40 	vmov.f32	s1, s0
 8029bf6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8029bfa:	4710      	bx	r2

08029bfc <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8029bfc:	6802      	ldr	r2, [r0, #0]
 8029bfe:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8029c02:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8029c04:	eeb0 1a40 	vmov.f32	s2, s0
 8029c08:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8029c0c:	4710      	bx	r2

08029c0e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8029c0e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8029c12:	4770      	bx	lr

08029c14 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8029c14:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8029c18:	4770      	bx	lr

08029c1a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8029c1a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8029c1e:	4770      	bx	lr

08029c20 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8029c20:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8029c24:	4770      	bx	lr

08029c26 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8029c26:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8029c2a:	4770      	bx	lr

08029c2c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8029c2c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8029c30:	4770      	bx	lr

08029c32 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8029c32:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8029c36:	4770      	bx	lr

08029c38 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8029c38:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8029c3c:	4770      	bx	lr

08029c3e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8029c3e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8029c42:	4770      	bx	lr

08029c44 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8029c44:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8029c48:	4770      	bx	lr

08029c4a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8029c4a:	ee07 2a90 	vmov	s15, r2
 8029c4e:	6803      	ldr	r3, [r0, #0]
 8029c50:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8029c54:	ee07 1a90 	vmov	s15, r1
 8029c58:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8029c5c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8029c60:	4718      	bx	r3

08029c62 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8029c62:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8029c66:	4770      	bx	lr

08029c68 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8029c68:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8029c6c:	4770      	bx	lr

08029c6e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8029c6e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8029c72:	4770      	bx	lr

08029c74 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8029c74:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8029c78:	4770      	bx	lr

08029c7a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8029c7a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8029c7e:	4770      	bx	lr

08029c80 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8029c80:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8029c84:	4770      	bx	lr

08029c86 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8029c86:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8029c8a:	4770      	bx	lr

08029c8c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8029c8c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8029c90:	4770      	bx	lr

08029c92 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8029c92:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8029c96:	4770      	bx	lr

08029c98 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8029c98:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8029c9c:	4770      	bx	lr

08029c9e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8029c9e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8029ca2:	4770      	bx	lr

08029ca4 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8029ca4:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8029ca8:	4770      	bx	lr

08029caa <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8029caa:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8029cae:	4770      	bx	lr

08029cb0 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8029cb0:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8029cb4:	4770      	bx	lr

08029cb6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8029cb6:	b510      	push	{r4, lr}
 8029cb8:	ed2d 8b04 	vpush	{d8-d9}
 8029cbc:	6803      	ldr	r3, [r0, #0]
 8029cbe:	4604      	mov	r4, r0
 8029cc0:	699b      	ldr	r3, [r3, #24]
 8029cc2:	eeb0 8a40 	vmov.f32	s16, s0
 8029cc6:	eef0 8a60 	vmov.f32	s17, s1
 8029cca:	eeb0 9a41 	vmov.f32	s18, s2
 8029cce:	4798      	blx	r3
 8029cd0:	6823      	ldr	r3, [r4, #0]
 8029cd2:	4620      	mov	r0, r4
 8029cd4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8029cd6:	eeb0 1a49 	vmov.f32	s2, s18
 8029cda:	eef0 0a68 	vmov.f32	s1, s17
 8029cde:	eeb0 0a48 	vmov.f32	s0, s16
 8029ce2:	4798      	blx	r3
 8029ce4:	ecbd 8b04 	vpop	{d8-d9}
 8029ce8:	6823      	ldr	r3, [r4, #0]
 8029cea:	4620      	mov	r0, r4
 8029cec:	699b      	ldr	r3, [r3, #24]
 8029cee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029cf2:	4718      	bx	r3

08029cf4 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8029cf4:	b510      	push	{r4, lr}
 8029cf6:	ed2d 8b02 	vpush	{d8}
 8029cfa:	6803      	ldr	r3, [r0, #0]
 8029cfc:	4604      	mov	r4, r0
 8029cfe:	699b      	ldr	r3, [r3, #24]
 8029d00:	eeb0 8a40 	vmov.f32	s16, s0
 8029d04:	4798      	blx	r3
 8029d06:	6823      	ldr	r3, [r4, #0]
 8029d08:	4620      	mov	r0, r4
 8029d0a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8029d0e:	eeb0 0a48 	vmov.f32	s0, s16
 8029d12:	4798      	blx	r3
 8029d14:	ecbd 8b02 	vpop	{d8}
 8029d18:	6823      	ldr	r3, [r4, #0]
 8029d1a:	4620      	mov	r0, r4
 8029d1c:	699b      	ldr	r3, [r3, #24]
 8029d1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029d22:	4718      	bx	r3

08029d24 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8029d24:	2200      	movs	r2, #0
 8029d26:	8002      	strh	r2, [r0, #0]
 8029d28:	8042      	strh	r2, [r0, #2]
 8029d2a:	8082      	strh	r2, [r0, #4]
 8029d2c:	80c2      	strh	r2, [r0, #6]
 8029d2e:	4770      	bx	lr

08029d30 <_ZN8touchgfx13TextureMapperD1Ev>:
 8029d30:	4770      	bx	lr

08029d32 <_ZN8touchgfx13TextureMapperD0Ev>:
 8029d32:	b510      	push	{r4, lr}
 8029d34:	2190      	movs	r1, #144	; 0x90
 8029d36:	4604      	mov	r4, r0
 8029d38:	f001 ff3f 	bl	802bbba <_ZdlPvj>
 8029d3c:	4620      	mov	r0, r4
 8029d3e:	bd10      	pop	{r4, pc}

08029d40 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8029d40:	b538      	push	{r3, r4, r5, lr}
 8029d42:	2500      	movs	r5, #0
 8029d44:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8029d48:	2301      	movs	r3, #1
 8029d4a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8029d4e:	4b1f      	ldr	r3, [pc, #124]	; (8029dcc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8029d50:	8085      	strh	r5, [r0, #4]
 8029d52:	80c5      	strh	r5, [r0, #6]
 8029d54:	8105      	strh	r5, [r0, #8]
 8029d56:	8145      	strh	r5, [r0, #10]
 8029d58:	8185      	strh	r5, [r0, #12]
 8029d5a:	81c5      	strh	r5, [r0, #14]
 8029d5c:	8205      	strh	r5, [r0, #16]
 8029d5e:	8245      	strh	r5, [r0, #18]
 8029d60:	61c5      	str	r5, [r0, #28]
 8029d62:	8405      	strh	r5, [r0, #32]
 8029d64:	8445      	strh	r5, [r0, #34]	; 0x22
 8029d66:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8029d6a:	6003      	str	r3, [r0, #0]
 8029d6c:	880b      	ldrh	r3, [r1, #0]
 8029d6e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8029d70:	23ff      	movs	r3, #255	; 0xff
 8029d72:	4604      	mov	r4, r0
 8029d74:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8029d78:	f7eb f96b 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8029d7c:	4b14      	ldr	r3, [pc, #80]	; (8029dd0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8029d7e:	6023      	str	r3, [r4, #0]
 8029d80:	2300      	movs	r3, #0
 8029d82:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8029d86:	4913      	ldr	r1, [pc, #76]	; (8029dd4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8029d88:	62e3      	str	r3, [r4, #44]	; 0x2c
 8029d8a:	6323      	str	r3, [r4, #48]	; 0x30
 8029d8c:	6363      	str	r3, [r4, #52]	; 0x34
 8029d8e:	63a3      	str	r3, [r4, #56]	; 0x38
 8029d90:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029d92:	6463      	str	r3, [r4, #68]	; 0x44
 8029d94:	64a3      	str	r3, [r4, #72]	; 0x48
 8029d96:	6523      	str	r3, [r4, #80]	; 0x50
 8029d98:	6563      	str	r3, [r4, #84]	; 0x54
 8029d9a:	65e3      	str	r3, [r4, #92]	; 0x5c
 8029d9c:	6623      	str	r3, [r4, #96]	; 0x60
 8029d9e:	66a3      	str	r3, [r4, #104]	; 0x68
 8029da0:	66e3      	str	r3, [r4, #108]	; 0x6c
 8029da2:	6763      	str	r3, [r4, #116]	; 0x74
 8029da4:	67a3      	str	r3, [r4, #120]	; 0x78
 8029da6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8029daa:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8029dae:	230c      	movs	r3, #12
 8029db0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8029db4:	6422      	str	r2, [r4, #64]	; 0x40
 8029db6:	64e1      	str	r1, [r4, #76]	; 0x4c
 8029db8:	65a1      	str	r1, [r4, #88]	; 0x58
 8029dba:	6662      	str	r2, [r4, #100]	; 0x64
 8029dbc:	6722      	str	r2, [r4, #112]	; 0x70
 8029dbe:	67e2      	str	r2, [r4, #124]	; 0x7c
 8029dc0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8029dc4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8029dc8:	4620      	mov	r0, r4
 8029dca:	bd38      	pop	{r3, r4, r5, pc}
 8029dcc:	08030cc4 	.word	0x08030cc4
 8029dd0:	080312a8 	.word	0x080312a8
 8029dd4:	447a0000 	.word	0x447a0000

08029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8029dd8:	b570      	push	{r4, r5, r6, lr}
 8029dda:	ed2d 8b04 	vpush	{d8-d9}
 8029dde:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8029de2:	add0      	add	r5, sp, #832	; 0x340
 8029de4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8029de6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8029dea:	4604      	mov	r4, r0
 8029dec:	4628      	mov	r0, r5
 8029dee:	f7f1 fa7f 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029df2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8029df4:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8029df8:	4606      	mov	r6, r0
 8029dfa:	4628      	mov	r0, r5
 8029dfc:	f7f1 faac 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029e00:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8029e04:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8029e08:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8029e0a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8029e0e:	9312      	str	r3, [sp, #72]	; 0x48
 8029e10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029e14:	1c72      	adds	r2, r6, #1
 8029e16:	3001      	adds	r0, #1
 8029e18:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8029e1c:	ee07 2a90 	vmov	s15, r2
 8029e20:	ee06 0a90 	vmov	s13, r0
 8029e24:	ee36 6a47 	vsub.f32	s12, s12, s14
 8029e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029e2c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8029e30:	ee77 7a86 	vadd.f32	s15, s15, s12
 8029e34:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8029e38:	9316      	str	r3, [sp, #88]	; 0x58
 8029e3a:	931a      	str	r3, [sp, #104]	; 0x68
 8029e3c:	931e      	str	r3, [sp, #120]	; 0x78
 8029e3e:	2300      	movs	r3, #0
 8029e40:	9320      	str	r3, [sp, #128]	; 0x80
 8029e42:	9321      	str	r3, [sp, #132]	; 0x84
 8029e44:	9322      	str	r3, [sp, #136]	; 0x88
 8029e46:	9324      	str	r3, [sp, #144]	; 0x90
 8029e48:	9325      	str	r3, [sp, #148]	; 0x94
 8029e4a:	9326      	str	r3, [sp, #152]	; 0x98
 8029e4c:	9328      	str	r3, [sp, #160]	; 0xa0
 8029e4e:	9329      	str	r3, [sp, #164]	; 0xa4
 8029e50:	932a      	str	r3, [sp, #168]	; 0xa8
 8029e52:	932c      	str	r3, [sp, #176]	; 0xb0
 8029e54:	932d      	str	r3, [sp, #180]	; 0xb4
 8029e56:	932e      	str	r3, [sp, #184]	; 0xb8
 8029e58:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8029e5c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8029e60:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029e64:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029e68:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8029e6c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8029e70:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8029e74:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8029e78:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8029e7c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8029e80:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8029e84:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8029e88:	a830      	add	r0, sp, #192	; 0xc0
 8029e8a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8029e8e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8029e92:	f000 fc43 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029e96:	eeb1 0a49 	vneg.f32	s0, s18
 8029e9a:	a830      	add	r0, sp, #192	; 0xc0
 8029e9c:	f000 fd12 	bl	802a8c4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029ea0:	eeb1 0a68 	vneg.f32	s0, s17
 8029ea4:	f000 fd1c 	bl	802a8e0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029ea8:	eeb1 0a48 	vneg.f32	s0, s16
 8029eac:	f000 fd27 	bl	802a8fe <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029eb0:	a840      	add	r0, sp, #256	; 0x100
 8029eb2:	f000 fc33 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029eb6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8029eba:	a840      	add	r0, sp, #256	; 0x100
 8029ebc:	f000 fc86 	bl	802a7cc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8029ec0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8029ec4:	f000 fcac 	bl	802a820 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8029ec8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8029ecc:	f000 fcd1 	bl	802a872 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8029ed0:	a850      	add	r0, sp, #320	; 0x140
 8029ed2:	f000 fc23 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029ed6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8029eda:	a850      	add	r0, sp, #320	; 0x140
 8029edc:	f000 fd1e 	bl	802a91c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8029ee0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8029ee4:	f000 fd26 	bl	802a934 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8029ee8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8029eec:	f000 fd2f 	bl	802a94e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8029ef0:	a860      	add	r0, sp, #384	; 0x180
 8029ef2:	f000 fc13 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029ef6:	eeb0 0a49 	vmov.f32	s0, s18
 8029efa:	a860      	add	r0, sp, #384	; 0x180
 8029efc:	f000 fce2 	bl	802a8c4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029f00:	eeb0 0a68 	vmov.f32	s0, s17
 8029f04:	f000 fcec 	bl	802a8e0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029f08:	eeb0 0a48 	vmov.f32	s0, s16
 8029f0c:	f000 fcf7 	bl	802a8fe <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029f10:	aa50      	add	r2, sp, #320	; 0x140
 8029f12:	a960      	add	r1, sp, #384	; 0x180
 8029f14:	a8b0      	add	r0, sp, #704	; 0x2c0
 8029f16:	f000 fc1b 	bl	802a750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029f1a:	4628      	mov	r0, r5
 8029f1c:	aa40      	add	r2, sp, #256	; 0x100
 8029f1e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8029f20:	f000 fc16 	bl	802a750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029f24:	4629      	mov	r1, r5
 8029f26:	aa30      	add	r2, sp, #192	; 0xc0
 8029f28:	a870      	add	r0, sp, #448	; 0x1c0
 8029f2a:	f000 fc11 	bl	802a750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029f2e:	a880      	add	r0, sp, #512	; 0x200
 8029f30:	f000 fbf4 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029f34:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8029f38:	a880      	add	r0, sp, #512	; 0x200
 8029f3a:	eeb1 0a40 	vneg.f32	s0, s0
 8029f3e:	f000 fcc1 	bl	802a8c4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029f42:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8029f46:	a880      	add	r0, sp, #512	; 0x200
 8029f48:	eeb1 0a40 	vneg.f32	s0, s0
 8029f4c:	f000 fcc8 	bl	802a8e0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029f50:	a890      	add	r0, sp, #576	; 0x240
 8029f52:	f000 fbe3 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029f56:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8029f5a:	a890      	add	r0, sp, #576	; 0x240
 8029f5c:	f000 fc26 	bl	802a7ac <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8029f60:	a8a0      	add	r0, sp, #640	; 0x280
 8029f62:	f000 fbdb 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029f66:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8029f6a:	a8a0      	add	r0, sp, #640	; 0x280
 8029f6c:	f000 fcaa 	bl	802a8c4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029f70:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8029f74:	f000 fcb4 	bl	802a8e0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029f78:	aa90      	add	r2, sp, #576	; 0x240
 8029f7a:	a9a0      	add	r1, sp, #640	; 0x280
 8029f7c:	a8b0      	add	r0, sp, #704	; 0x2c0
 8029f7e:	f000 fbe7 	bl	802a750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029f82:	4628      	mov	r0, r5
 8029f84:	aa80      	add	r2, sp, #512	; 0x200
 8029f86:	a9b0      	add	r1, sp, #704	; 0x2c0
 8029f88:	f000 fbe2 	bl	802a750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029f8c:	4629      	mov	r1, r5
 8029f8e:	aa70      	add	r2, sp, #448	; 0x1c0
 8029f90:	4668      	mov	r0, sp
 8029f92:	466d      	mov	r5, sp
 8029f94:	f000 fbdc 	bl	802a750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029f98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029f9a:	ae70      	add	r6, sp, #448	; 0x1c0
 8029f9c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029f9e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029fa0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029fa2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029fa4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029fa6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8029faa:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8029fae:	2500      	movs	r5, #0
 8029fb0:	0129      	lsls	r1, r5, #4
 8029fb2:	ab20      	add	r3, sp, #128	; 0x80
 8029fb4:	185e      	adds	r6, r3, r1
 8029fb6:	ab10      	add	r3, sp, #64	; 0x40
 8029fb8:	4419      	add	r1, r3
 8029fba:	a870      	add	r0, sp, #448	; 0x1c0
 8029fbc:	f000 fb7e 	bl	802a6bc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8029fc0:	3501      	adds	r5, #1
 8029fc2:	2d04      	cmp	r5, #4
 8029fc4:	ed86 0a00 	vstr	s0, [r6]
 8029fc8:	edc6 0a01 	vstr	s1, [r6, #4]
 8029fcc:	ed86 1a02 	vstr	s2, [r6, #8]
 8029fd0:	edc6 1a03 	vstr	s3, [r6, #12]
 8029fd4:	d1ec      	bne.n	8029fb0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8029fd6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8029fda:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8029fde:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8029fe2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029fe6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8029fea:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029fee:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8029ff2:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8029ff6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029ffa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029ffe:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802a002:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802a006:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802a00a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802a00e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802a012:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802a016:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802a01a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802a01e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802a022:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802a026:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802a02a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802a02e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802a032:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802a036:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802a03a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802a03e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802a042:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802a046:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802a04a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802a04e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802a052:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802a056:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802a05a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802a05e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802a062:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802a066:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802a06a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802a06e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a072:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802a076:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802a07a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802a07e:	ecbd 8b04 	vpop	{d8-d9}
 802a082:	bd70      	pop	{r4, r5, r6, pc}

0802a084 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802a084:	b510      	push	{r4, lr}
 802a086:	4604      	mov	r4, r0
 802a088:	f7ea ffe3 	bl	8015052 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802a08c:	4620      	mov	r0, r4
 802a08e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a092:	f7ff bea1 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a096 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802a096:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802a09a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802a09e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802a0a2:	f7ff be99 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a0a6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802a0a6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802a0aa:	f7ff be95 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a0ae <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802a0ae:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802a0b2:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802a0b6:	f7ff be8f 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a0ba <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802a0ba:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a0be:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802a0c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a0c6:	bfd8      	it	le
 802a0c8:	eeb0 0a67 	vmovle.f32	s0, s15
 802a0cc:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802a0d0:	f7ff be82 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a0d4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802a0d4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802a0d8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802a0dc:	f7ff be7c 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a0e0 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802a0e0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802a0e4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802a0e8:	f7ff be76 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a0ec <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802a0ec:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802a0f0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802a0f4:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802a0f8:	f7ff be6e 	b.w	8029dd8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802a0fc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802a0fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a100:	ed2d 8b04 	vpush	{d8-d9}
 802a104:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802a108:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802a10c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802a110:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802a114:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802a118:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a11c:	bf54      	ite	pl
 802a11e:	eeb0 0a69 	vmovpl.f32	s0, s19
 802a122:	eeb0 0a48 	vmovmi.f32	s0, s16
 802a126:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802a12a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a12e:	bfd8      	it	le
 802a130:	eeb0 0a49 	vmovle.f32	s0, s18
 802a134:	eef4 8ac0 	vcmpe.f32	s17, s0
 802a138:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a13c:	bfd8      	it	le
 802a13e:	eeb0 0a68 	vmovle.f32	s0, s17
 802a142:	460c      	mov	r4, r1
 802a144:	4607      	mov	r7, r0
 802a146:	f001 ff2b 	bl	802bfa0 <floorf>
 802a14a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a14e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a152:	bf58      	it	pl
 802a154:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802a158:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802a15c:	bf56      	itet	pl
 802a15e:	ee10 3a10 	vmovpl	r3, s0
 802a162:	2600      	movmi	r6, #0
 802a164:	b21e      	sxthpl	r6, r3
 802a166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a16a:	bfd8      	it	le
 802a16c:	eeb0 8a69 	vmovle.f32	s16, s19
 802a170:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802a174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a178:	bf58      	it	pl
 802a17a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802a17e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802a182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a186:	bf54      	ite	pl
 802a188:	eeb0 0a68 	vmovpl.f32	s0, s17
 802a18c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802a190:	f001 fec4 	bl	802bf1c <ceilf>
 802a194:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802a198:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802a19c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802a1a0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802a1a4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802a1a8:	ee07 8a90 	vmov	s15, r8
 802a1ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a1b0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802a1b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1b8:	bfd8      	it	le
 802a1ba:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802a1be:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802a1c2:	bfdc      	itt	le
 802a1c4:	ee10 3a10 	vmovle	r3, s0
 802a1c8:	fa0f f883 	sxthle.w	r8, r3
 802a1cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1d0:	bf54      	ite	pl
 802a1d2:	eeb0 0a69 	vmovpl.f32	s0, s19
 802a1d6:	eeb0 0a48 	vmovmi.f32	s0, s16
 802a1da:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802a1de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1e2:	bfd8      	it	le
 802a1e4:	eeb0 0a49 	vmovle.f32	s0, s18
 802a1e8:	eef4 8ac0 	vcmpe.f32	s17, s0
 802a1ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1f0:	bfd8      	it	le
 802a1f2:	eeb0 0a68 	vmovle.f32	s0, s17
 802a1f6:	f001 fed3 	bl	802bfa0 <floorf>
 802a1fa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a1fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a202:	bf58      	it	pl
 802a204:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802a208:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802a20c:	bf56      	itet	pl
 802a20e:	ee10 3a10 	vmovpl	r3, s0
 802a212:	2500      	movmi	r5, #0
 802a214:	b21d      	sxthpl	r5, r3
 802a216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a21a:	bfd8      	it	le
 802a21c:	eeb0 8a69 	vmovle.f32	s16, s19
 802a220:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802a224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a228:	bf58      	it	pl
 802a22a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802a22e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802a232:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a236:	bf54      	ite	pl
 802a238:	eeb0 0a68 	vmovpl.f32	s0, s17
 802a23c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802a240:	f001 fe6c 	bl	802bf1c <ceilf>
 802a244:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802a248:	803e      	strh	r6, [r7, #0]
 802a24a:	ee07 3a90 	vmov	s15, r3
 802a24e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a252:	807d      	strh	r5, [r7, #2]
 802a254:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802a258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a25c:	bfd8      	it	le
 802a25e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802a262:	eba8 0606 	sub.w	r6, r8, r6
 802a266:	bfdc      	itt	le
 802a268:	ee10 3a10 	vmovle	r3, s0
 802a26c:	b21b      	sxthle	r3, r3
 802a26e:	1b5d      	subs	r5, r3, r5
 802a270:	80be      	strh	r6, [r7, #4]
 802a272:	80fd      	strh	r5, [r7, #6]
 802a274:	ecbd 8b04 	vpop	{d8-d9}
 802a278:	4638      	mov	r0, r7
 802a27a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802a27e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802a27e:	b513      	push	{r0, r1, r4, lr}
 802a280:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802a284:	4604      	mov	r4, r0
 802a286:	b143      	cbz	r3, 802a29a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802a288:	4601      	mov	r1, r0
 802a28a:	4668      	mov	r0, sp
 802a28c:	f7ff ff36 	bl	802a0fc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802a290:	6823      	ldr	r3, [r4, #0]
 802a292:	4669      	mov	r1, sp
 802a294:	691b      	ldr	r3, [r3, #16]
 802a296:	4620      	mov	r0, r4
 802a298:	4798      	blx	r3
 802a29a:	b002      	add	sp, #8
 802a29c:	bd10      	pop	{r4, pc}

0802a29e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802a29e:	4603      	mov	r3, r0
 802a2a0:	3026      	adds	r0, #38	; 0x26
 802a2a2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802a2a6:	b90b      	cbnz	r3, 802a2ac <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802a2a8:	f7ee bdfa 	b.w	8018ea0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802a2ac:	f7ee be08 	b.w	8018ec0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802a2b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802a2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a2b4:	ed2d 8b04 	vpush	{d8-d9}
 802a2b8:	4604      	mov	r4, r0
 802a2ba:	469b      	mov	fp, r3
 802a2bc:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802a2c0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a2c4:	f9b1 6000 	ldrsh.w	r6, [r1]
 802a2c8:	8888      	ldrh	r0, [r1, #4]
 802a2ca:	b0b3      	sub	sp, #204	; 0xcc
 802a2cc:	4430      	add	r0, r6
 802a2ce:	b280      	uxth	r0, r0
 802a2d0:	9206      	str	r2, [sp, #24]
 802a2d2:	fa0f fe80 	sxth.w	lr, r0
 802a2d6:	2200      	movs	r2, #0
 802a2d8:	4596      	cmp	lr, r2
 802a2da:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802a2de:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802a2e2:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802a2e6:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802a2e8:	9211      	str	r2, [sp, #68]	; 0x44
 802a2ea:	f340 8129 	ble.w	802a540 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802a2ee:	45b4      	cmp	ip, r6
 802a2f0:	f340 8126 	ble.w	802a540 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802a2f4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802a2f8:	88ca      	ldrh	r2, [r1, #6]
 802a2fa:	442a      	add	r2, r5
 802a2fc:	b292      	uxth	r2, r2
 802a2fe:	b211      	sxth	r1, r2
 802a300:	2900      	cmp	r1, #0
 802a302:	f340 811d 	ble.w	802a540 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802a306:	42ab      	cmp	r3, r5
 802a308:	f340 811a 	ble.w	802a540 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802a30c:	45f4      	cmp	ip, lr
 802a30e:	bfb8      	it	lt
 802a310:	fa1f f08c 	uxthlt.w	r0, ip
 802a314:	428b      	cmp	r3, r1
 802a316:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802a31a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802a31e:	bfb8      	it	lt
 802a320:	b29a      	uxthlt	r2, r3
 802a322:	1b80      	subs	r0, r0, r6
 802a324:	1b52      	subs	r2, r2, r5
 802a326:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802a32a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802a32e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802a332:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802a336:	ab11      	add	r3, sp, #68	; 0x44
 802a338:	e893 0003 	ldmia.w	r3, {r0, r1}
 802a33c:	6822      	ldr	r2, [r4, #0]
 802a33e:	9307      	str	r3, [sp, #28]
 802a340:	ad13      	add	r5, sp, #76	; 0x4c
 802a342:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802a344:	e885 0003 	stmia.w	r5, {r0, r1}
 802a348:	4629      	mov	r1, r5
 802a34a:	4620      	mov	r0, r4
 802a34c:	4790      	blx	r2
 802a34e:	4621      	mov	r1, r4
 802a350:	a815      	add	r0, sp, #84	; 0x54
 802a352:	f7ee fd01 	bl	8018d58 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802a356:	a815      	add	r0, sp, #84	; 0x54
 802a358:	f7ed f9c6 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a35c:	9b07      	ldr	r3, [sp, #28]
 802a35e:	1d26      	adds	r6, r4, #4
 802a360:	4618      	mov	r0, r3
 802a362:	4631      	mov	r1, r6
 802a364:	f7ed fa04 	bl	8017770 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a368:	4628      	mov	r0, r5
 802a36a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802a36e:	f7ed f9bb 	bl	80176e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a372:	4628      	mov	r0, r5
 802a374:	f7f1 f8a8 	bl	801b4c8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802a378:	9007      	str	r0, [sp, #28]
 802a37a:	2800      	cmp	r0, #0
 802a37c:	f000 80db 	beq.w	802a536 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802a380:	f8db 2000 	ldr.w	r2, [fp]
 802a384:	9209      	str	r2, [sp, #36]	; 0x24
 802a386:	f8db 2004 	ldr.w	r2, [fp, #4]
 802a38a:	920a      	str	r2, [sp, #40]	; 0x28
 802a38c:	f8db 2008 	ldr.w	r2, [fp, #8]
 802a390:	920b      	str	r2, [sp, #44]	; 0x2c
 802a392:	f8db 200c 	ldr.w	r2, [fp, #12]
 802a396:	920c      	str	r2, [sp, #48]	; 0x30
 802a398:	f8da 2000 	ldr.w	r2, [sl]
 802a39c:	920d      	str	r2, [sp, #52]	; 0x34
 802a39e:	f8da 2004 	ldr.w	r2, [sl, #4]
 802a3a2:	920e      	str	r2, [sp, #56]	; 0x38
 802a3a4:	f8da 2008 	ldr.w	r2, [sl, #8]
 802a3a8:	920f      	str	r2, [sp, #60]	; 0x3c
 802a3aa:	f8da 200c 	ldr.w	r2, [sl, #12]
 802a3ae:	9210      	str	r2, [sp, #64]	; 0x40
 802a3b0:	a90d      	add	r1, sp, #52	; 0x34
 802a3b2:	4632      	mov	r2, r6
 802a3b4:	a809      	add	r0, sp, #36	; 0x24
 802a3b6:	f7ed f9bf 	bl	8017738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802a3ba:	4632      	mov	r2, r6
 802a3bc:	a90e      	add	r1, sp, #56	; 0x38
 802a3be:	a80a      	add	r0, sp, #40	; 0x28
 802a3c0:	f7ed f9ba 	bl	8017738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802a3c4:	4632      	mov	r2, r6
 802a3c6:	a90f      	add	r1, sp, #60	; 0x3c
 802a3c8:	a80b      	add	r0, sp, #44	; 0x2c
 802a3ca:	f7ed f9b5 	bl	8017738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802a3ce:	4632      	mov	r2, r6
 802a3d0:	a910      	add	r1, sp, #64	; 0x40
 802a3d2:	a80c      	add	r0, sp, #48	; 0x30
 802a3d4:	f7ed f9b0 	bl	8017738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802a3d8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802a3dc:	edd7 4a00 	vldr	s9, [r7]
 802a3e0:	edd7 5a01 	vldr	s11, [r7, #4]
 802a3e4:	ed98 4a00 	vldr	s8, [r8]
 802a3e8:	ed98 5a01 	vldr	s10, [r8, #4]
 802a3ec:	ed99 9a00 	vldr	s18, [r9]
 802a3f0:	ed99 8a01 	vldr	s16, [r9, #4]
 802a3f4:	edd9 8a02 	vldr	s17, [r9, #8]
 802a3f8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802a3fc:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802a400:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802a404:	eef0 6a67 	vmov.f32	s13, s15
 802a408:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802a40c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802a410:	eeb0 7a67 	vmov.f32	s14, s15
 802a414:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802a418:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802a41c:	eeb0 6a67 	vmov.f32	s12, s15
 802a420:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802a424:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802a428:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802a42c:	ee16 6a10 	vmov	r6, s12
 802a430:	eeb0 6a67 	vmov.f32	s12, s15
 802a434:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802a438:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802a43c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802a440:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802a444:	68ff      	ldr	r7, [r7, #12]
 802a446:	9624      	str	r6, [sp, #144]	; 0x90
 802a448:	ee16 0a10 	vmov	r0, s12
 802a44c:	eeb0 6a67 	vmov.f32	s12, s15
 802a450:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802a454:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802a458:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802a45c:	ee16 1a10 	vmov	r1, s12
 802a460:	eeb0 6a67 	vmov.f32	s12, s15
 802a464:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802a468:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802a46c:	ee16 2a10 	vmov	r2, s12
 802a470:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802a474:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802a478:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802a47c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802a480:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802a484:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802a488:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802a48c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802a490:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802a494:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802a498:	922d      	str	r2, [sp, #180]	; 0xb4
 802a49a:	4a2b      	ldr	r2, [pc, #172]	; (802a548 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802a49c:	9b06      	ldr	r3, [sp, #24]
 802a49e:	8812      	ldrh	r2, [r2, #0]
 802a4a0:	9317      	str	r3, [sp, #92]	; 0x5c
 802a4a2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802a4a6:	9b07      	ldr	r3, [sp, #28]
 802a4a8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802a4ac:	4628      	mov	r0, r5
 802a4ae:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802a4b2:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802a4b6:	9218      	str	r2, [sp, #96]	; 0x60
 802a4b8:	9319      	str	r3, [sp, #100]	; 0x64
 802a4ba:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802a4be:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802a4c2:	9731      	str	r7, [sp, #196]	; 0xc4
 802a4c4:	f7f1 f830 	bl	801b528 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802a4c8:	901a      	str	r0, [sp, #104]	; 0x68
 802a4ca:	4628      	mov	r0, r5
 802a4cc:	f7f0 ff10 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802a4d0:	901b      	str	r0, [sp, #108]	; 0x6c
 802a4d2:	4628      	mov	r0, r5
 802a4d4:	f7f0 ff40 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802a4d8:	901c      	str	r0, [sp, #112]	; 0x70
 802a4da:	4628      	mov	r0, r5
 802a4dc:	f7f0 ff08 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802a4e0:	eeb4 9a48 	vcmp.f32	s18, s16
 802a4e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a4e8:	901d      	str	r0, [sp, #116]	; 0x74
 802a4ea:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802a4ee:	d107      	bne.n	802a500 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802a4f0:	eeb4 8a68 	vcmp.f32	s16, s17
 802a4f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a4f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802a4fc:	bf08      	it	eq
 802a4fe:	461e      	moveq	r6, r3
 802a500:	4b12      	ldr	r3, [pc, #72]	; (802a54c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802a502:	681b      	ldr	r3, [r3, #0]
 802a504:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802a508:	b10a      	cbz	r2, 802a50e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802a50a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802a50c:	b905      	cbnz	r5, 802a510 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802a50e:	689d      	ldr	r5, [r3, #8]
 802a510:	682b      	ldr	r3, [r5, #0]
 802a512:	4620      	mov	r0, r4
 802a514:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802a516:	f7ff fec2 	bl	802a29e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802a51a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802a51e:	9604      	str	r6, [sp, #16]
 802a520:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802a524:	ab13      	add	r3, sp, #76	; 0x4c
 802a526:	9301      	str	r3, [sp, #4]
 802a528:	ab15      	add	r3, sp, #84	; 0x54
 802a52a:	9300      	str	r3, [sp, #0]
 802a52c:	aa1e      	add	r2, sp, #120	; 0x78
 802a52e:	ab19      	add	r3, sp, #100	; 0x64
 802a530:	a917      	add	r1, sp, #92	; 0x5c
 802a532:	4628      	mov	r0, r5
 802a534:	47b8      	blx	r7
 802a536:	b033      	add	sp, #204	; 0xcc
 802a538:	ecbd 8b04 	vpop	{d8-d9}
 802a53c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a540:	2300      	movs	r3, #0
 802a542:	9312      	str	r3, [sp, #72]	; 0x48
 802a544:	e6f7      	b.n	802a336 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802a546:	bf00      	nop
 802a548:	20013846 	.word	0x20013846
 802a54c:	2001384c 	.word	0x2001384c

0802a550 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802a550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a554:	ed2d 8b02 	vpush	{d8}
 802a558:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802a55c:	b098      	sub	sp, #96	; 0x60
 802a55e:	4604      	mov	r4, r0
 802a560:	4688      	mov	r8, r1
 802a562:	2b00      	cmp	r3, #0
 802a564:	d077      	beq.n	802a656 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802a566:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802a56a:	4628      	mov	r0, r5
 802a56c:	f7f0 fec0 	bl	801b2f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802a570:	ee07 0a90 	vmov	s15, r0
 802a574:	4628      	mov	r0, r5
 802a576:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802a57a:	f7f0 feed 	bl	801b358 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802a57e:	4b4e      	ldr	r3, [pc, #312]	; (802a6b8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802a580:	781b      	ldrb	r3, [r3, #0]
 802a582:	ee07 0a90 	vmov	s15, r0
 802a586:	2b01      	cmp	r3, #1
 802a588:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a58c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802a590:	d066      	beq.n	802a660 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802a592:	eeb0 6a47 	vmov.f32	s12, s14
 802a596:	ee17 3a10 	vmov	r3, s14
 802a59a:	eeb0 4a48 	vmov.f32	s8, s16
 802a59e:	eeb0 7a48 	vmov.f32	s14, s16
 802a5a2:	eef0 4a67 	vmov.f32	s9, s15
 802a5a6:	eeb0 8a67 	vmov.f32	s16, s15
 802a5aa:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802a5ae:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802a5b2:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802a5b6:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802a5ba:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802a5be:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802a5c2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802a5c4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802a5c6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802a5c8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802a5cc:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802a5d0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a5d4:	ee73 1a65 	vsub.f32	s3, s6, s11
 802a5d8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802a5dc:	ee32 1a45 	vsub.f32	s2, s4, s10
 802a5e0:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802a5e4:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802a5e8:	eee1 6a21 	vfma.f32	s13, s2, s3
 802a5ec:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802a5f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a5f4:	dd3d      	ble.n	802a672 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802a5f6:	ed8d 5a04 	vstr	s10, [sp, #16]
 802a5fa:	ed8d 2a05 	vstr	s4, [sp, #20]
 802a5fe:	edcd 2a06 	vstr	s5, [sp, #24]
 802a602:	f8cd c01c 	str.w	ip, [sp, #28]
 802a606:	edcd 5a08 	vstr	s11, [sp, #32]
 802a60a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802a60e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802a612:	970b      	str	r7, [sp, #44]	; 0x2c
 802a614:	960c      	str	r6, [sp, #48]	; 0x30
 802a616:	950d      	str	r5, [sp, #52]	; 0x34
 802a618:	920e      	str	r2, [sp, #56]	; 0x38
 802a61a:	900f      	str	r0, [sp, #60]	; 0x3c
 802a61c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802a620:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802a624:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802a628:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802a62c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802a630:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802a634:	9316      	str	r3, [sp, #88]	; 0x58
 802a636:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802a63a:	ab14      	add	r3, sp, #80	; 0x50
 802a63c:	9303      	str	r3, [sp, #12]
 802a63e:	ab10      	add	r3, sp, #64	; 0x40
 802a640:	9302      	str	r3, [sp, #8]
 802a642:	ab0c      	add	r3, sp, #48	; 0x30
 802a644:	9301      	str	r3, [sp, #4]
 802a646:	ab08      	add	r3, sp, #32
 802a648:	9300      	str	r3, [sp, #0]
 802a64a:	2200      	movs	r2, #0
 802a64c:	ab04      	add	r3, sp, #16
 802a64e:	4641      	mov	r1, r8
 802a650:	4620      	mov	r0, r4
 802a652:	f7ff fe2d 	bl	802a2b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802a656:	b018      	add	sp, #96	; 0x60
 802a658:	ecbd 8b02 	vpop	{d8}
 802a65c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a660:	eeb0 6a48 	vmov.f32	s12, s16
 802a664:	eef0 4a47 	vmov.f32	s9, s14
 802a668:	ee17 3a90 	vmov	r3, s15
 802a66c:	eeb0 4a67 	vmov.f32	s8, s15
 802a670:	e79b      	b.n	802a5aa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802a672:	ed8d 5a05 	vstr	s10, [sp, #20]
 802a676:	ed8d 2a04 	vstr	s4, [sp, #16]
 802a67a:	f8cd c018 	str.w	ip, [sp, #24]
 802a67e:	edcd 2a07 	vstr	s5, [sp, #28]
 802a682:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802a686:	ed8d 3a08 	vstr	s6, [sp, #32]
 802a68a:	970a      	str	r7, [sp, #40]	; 0x28
 802a68c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802a690:	960d      	str	r6, [sp, #52]	; 0x34
 802a692:	950c      	str	r5, [sp, #48]	; 0x30
 802a694:	900e      	str	r0, [sp, #56]	; 0x38
 802a696:	920f      	str	r2, [sp, #60]	; 0x3c
 802a698:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802a69c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802a6a0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802a6a4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802a6a8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802a6ac:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802a6b0:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802a6b4:	9317      	str	r3, [sp, #92]	; 0x5c
 802a6b6:	e7c0      	b.n	802a63a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802a6b8:	20013844 	.word	0x20013844

0802a6bc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802a6bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a6be:	b08d      	sub	sp, #52	; 0x34
 802a6c0:	2300      	movs	r3, #0
 802a6c2:	9304      	str	r3, [sp, #16]
 802a6c4:	9305      	str	r3, [sp, #20]
 802a6c6:	9306      	str	r3, [sp, #24]
 802a6c8:	aa04      	add	r2, sp, #16
 802a6ca:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802a6ce:	9307      	str	r3, [sp, #28]
 802a6d0:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802a6d4:	4613      	mov	r3, r2
 802a6d6:	f101 0710 	add.w	r7, r1, #16
 802a6da:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802a718 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802a6de:	460c      	mov	r4, r1
 802a6e0:	4605      	mov	r5, r0
 802a6e2:	ecb4 7a01 	vldmia	r4!, {s14}
 802a6e6:	ecf5 6a01 	vldmia	r5!, {s13}
 802a6ea:	42bc      	cmp	r4, r7
 802a6ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a6f0:	d1f7      	bne.n	802a6e2 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802a6f2:	3010      	adds	r0, #16
 802a6f4:	42b0      	cmp	r0, r6
 802a6f6:	ece2 7a01 	vstmia	r2!, {s15}
 802a6fa:	d1ee      	bne.n	802a6da <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802a6fc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802a6fe:	ac0c      	add	r4, sp, #48	; 0x30
 802a700:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802a704:	ed9d 0a08 	vldr	s0, [sp, #32]
 802a708:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802a70c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802a710:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802a714:	b00d      	add	sp, #52	; 0x34
 802a716:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a718:	00000000 	.word	0x00000000

0802a71c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802a71c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802a74c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802a720:	2300      	movs	r3, #0
 802a722:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a726:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802a72a:	2200      	movs	r2, #0
 802a72c:	4293      	cmp	r3, r2
 802a72e:	f102 0201 	add.w	r2, r2, #1
 802a732:	bf14      	ite	ne
 802a734:	eef0 6a47 	vmovne.f32	s13, s14
 802a738:	eef0 6a67 	vmoveq.f32	s13, s15
 802a73c:	2a04      	cmp	r2, #4
 802a73e:	ece1 6a01 	vstmia	r1!, {s13}
 802a742:	d1f3      	bne.n	802a72c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802a744:	3301      	adds	r3, #1
 802a746:	2b04      	cmp	r3, #4
 802a748:	d1ed      	bne.n	802a726 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802a74a:	4770      	bx	lr
 802a74c:	00000000 	.word	0x00000000

0802a750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802a750:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a754:	460c      	mov	r4, r1
 802a756:	4605      	mov	r5, r0
 802a758:	4690      	mov	r8, r2
 802a75a:	f7ff ffdf 	bl	802a71c <_ZN8touchgfx9Matrix4x4C1Ev>
 802a75e:	4628      	mov	r0, r5
 802a760:	4621      	mov	r1, r4
 802a762:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802a766:	2300      	movs	r3, #0
 802a768:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802a7a8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802a76c:	eb08 0603 	add.w	r6, r8, r3
 802a770:	460f      	mov	r7, r1
 802a772:	2400      	movs	r4, #0
 802a774:	4632      	mov	r2, r6
 802a776:	ecf7 6a01 	vldmia	r7!, {s13}
 802a77a:	ed92 7a00 	vldr	s14, [r2]
 802a77e:	3401      	adds	r4, #1
 802a780:	2c04      	cmp	r4, #4
 802a782:	f106 0610 	add.w	r6, r6, #16
 802a786:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a78a:	d1f3      	bne.n	802a774 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802a78c:	18c2      	adds	r2, r0, r3
 802a78e:	3304      	adds	r3, #4
 802a790:	2b10      	cmp	r3, #16
 802a792:	edc2 7a00 	vstr	s15, [r2]
 802a796:	d1e7      	bne.n	802a768 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802a798:	3110      	adds	r1, #16
 802a79a:	4561      	cmp	r1, ip
 802a79c:	f100 0010 	add.w	r0, r0, #16
 802a7a0:	d1e1      	bne.n	802a766 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802a7a2:	4628      	mov	r0, r5
 802a7a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a7a8:	00000000 	.word	0x00000000

0802a7ac <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802a7ac:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a7b0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802a7b4:	f100 0320 	add.w	r3, r0, #32
 802a7b8:	3030      	adds	r0, #48	; 0x30
 802a7ba:	ecf3 7a01 	vldmia	r3!, {s15}
 802a7be:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a7c2:	4283      	cmp	r3, r0
 802a7c4:	edc3 7a03 	vstr	s15, [r3, #12]
 802a7c8:	d1f7      	bne.n	802a7ba <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802a7ca:	4770      	bx	lr

0802a7cc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802a7cc:	b510      	push	{r4, lr}
 802a7ce:	ed2d 8b02 	vpush	{d8}
 802a7d2:	4604      	mov	r4, r0
 802a7d4:	eef0 8a40 	vmov.f32	s17, s0
 802a7d8:	f001 fb56 	bl	802be88 <sinf>
 802a7dc:	eeb0 8a40 	vmov.f32	s16, s0
 802a7e0:	eeb0 0a68 	vmov.f32	s0, s17
 802a7e4:	f001 fb04 	bl	802bdf0 <cosf>
 802a7e8:	f104 0310 	add.w	r3, r4, #16
 802a7ec:	f104 0220 	add.w	r2, r4, #32
 802a7f0:	eeb1 6a48 	vneg.f32	s12, s16
 802a7f4:	edd3 7a04 	vldr	s15, [r3, #16]
 802a7f8:	edd3 6a00 	vldr	s13, [r3]
 802a7fc:	ee26 7a27 	vmul.f32	s14, s12, s15
 802a800:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a804:	eea6 7a80 	vfma.f32	s14, s13, s0
 802a808:	eee6 7a88 	vfma.f32	s15, s13, s16
 802a80c:	eca3 7a01 	vstmia	r3!, {s14}
 802a810:	429a      	cmp	r2, r3
 802a812:	edc3 7a03 	vstr	s15, [r3, #12]
 802a816:	d1ed      	bne.n	802a7f4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802a818:	ecbd 8b02 	vpop	{d8}
 802a81c:	4620      	mov	r0, r4
 802a81e:	bd10      	pop	{r4, pc}

0802a820 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802a820:	b510      	push	{r4, lr}
 802a822:	ed2d 8b02 	vpush	{d8}
 802a826:	4604      	mov	r4, r0
 802a828:	eef0 8a40 	vmov.f32	s17, s0
 802a82c:	f001 fb2c 	bl	802be88 <sinf>
 802a830:	eeb0 8a40 	vmov.f32	s16, s0
 802a834:	eeb0 0a68 	vmov.f32	s0, s17
 802a838:	f001 fada 	bl	802bdf0 <cosf>
 802a83c:	4623      	mov	r3, r4
 802a83e:	f104 0210 	add.w	r2, r4, #16
 802a842:	eeb1 6a48 	vneg.f32	s12, s16
 802a846:	edd3 7a08 	vldr	s15, [r3, #32]
 802a84a:	edd3 6a00 	vldr	s13, [r3]
 802a84e:	ee27 7a88 	vmul.f32	s14, s15, s16
 802a852:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a856:	eea6 7a80 	vfma.f32	s14, s13, s0
 802a85a:	eee6 7a26 	vfma.f32	s15, s12, s13
 802a85e:	eca3 7a01 	vstmia	r3!, {s14}
 802a862:	429a      	cmp	r2, r3
 802a864:	edc3 7a07 	vstr	s15, [r3, #28]
 802a868:	d1ed      	bne.n	802a846 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802a86a:	ecbd 8b02 	vpop	{d8}
 802a86e:	4620      	mov	r0, r4
 802a870:	bd10      	pop	{r4, pc}

0802a872 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802a872:	b510      	push	{r4, lr}
 802a874:	ed2d 8b02 	vpush	{d8}
 802a878:	4604      	mov	r4, r0
 802a87a:	eef0 8a40 	vmov.f32	s17, s0
 802a87e:	f001 fb03 	bl	802be88 <sinf>
 802a882:	eeb0 8a40 	vmov.f32	s16, s0
 802a886:	eeb0 0a68 	vmov.f32	s0, s17
 802a88a:	f001 fab1 	bl	802bdf0 <cosf>
 802a88e:	4623      	mov	r3, r4
 802a890:	f104 0210 	add.w	r2, r4, #16
 802a894:	eeb1 6a48 	vneg.f32	s12, s16
 802a898:	edd3 7a04 	vldr	s15, [r3, #16]
 802a89c:	edd3 6a00 	vldr	s13, [r3]
 802a8a0:	ee26 7a27 	vmul.f32	s14, s12, s15
 802a8a4:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a8a8:	eea6 7a80 	vfma.f32	s14, s13, s0
 802a8ac:	eee6 7a88 	vfma.f32	s15, s13, s16
 802a8b0:	eca3 7a01 	vstmia	r3!, {s14}
 802a8b4:	429a      	cmp	r2, r3
 802a8b6:	edc3 7a03 	vstr	s15, [r3, #12]
 802a8ba:	d1ed      	bne.n	802a898 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802a8bc:	ecbd 8b02 	vpop	{d8}
 802a8c0:	4620      	mov	r0, r4
 802a8c2:	bd10      	pop	{r4, pc}

0802a8c4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802a8c4:	4603      	mov	r3, r0
 802a8c6:	f100 0210 	add.w	r2, r0, #16
 802a8ca:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802a8ce:	edd3 7a00 	vldr	s15, [r3]
 802a8d2:	eee7 7a00 	vfma.f32	s15, s14, s0
 802a8d6:	ece3 7a01 	vstmia	r3!, {s15}
 802a8da:	4293      	cmp	r3, r2
 802a8dc:	d1f5      	bne.n	802a8ca <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802a8de:	4770      	bx	lr

0802a8e0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802a8e0:	f100 0310 	add.w	r3, r0, #16
 802a8e4:	f100 0220 	add.w	r2, r0, #32
 802a8e8:	ed93 7a08 	vldr	s14, [r3, #32]
 802a8ec:	edd3 7a00 	vldr	s15, [r3]
 802a8f0:	eee7 7a00 	vfma.f32	s15, s14, s0
 802a8f4:	ece3 7a01 	vstmia	r3!, {s15}
 802a8f8:	4293      	cmp	r3, r2
 802a8fa:	d1f5      	bne.n	802a8e8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802a8fc:	4770      	bx	lr

0802a8fe <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802a8fe:	f100 0320 	add.w	r3, r0, #32
 802a902:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802a906:	ed93 7a04 	vldr	s14, [r3, #16]
 802a90a:	edd3 7a00 	vldr	s15, [r3]
 802a90e:	eee7 7a00 	vfma.f32	s15, s14, s0
 802a912:	ece3 7a01 	vstmia	r3!, {s15}
 802a916:	4293      	cmp	r3, r2
 802a918:	d1f5      	bne.n	802a906 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802a91a:	4770      	bx	lr

0802a91c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802a91c:	4603      	mov	r3, r0
 802a91e:	f100 0210 	add.w	r2, r0, #16
 802a922:	edd3 7a00 	vldr	s15, [r3]
 802a926:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a92a:	ece3 7a01 	vstmia	r3!, {s15}
 802a92e:	4293      	cmp	r3, r2
 802a930:	d1f7      	bne.n	802a922 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802a932:	4770      	bx	lr

0802a934 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802a934:	f100 0310 	add.w	r3, r0, #16
 802a938:	f100 0220 	add.w	r2, r0, #32
 802a93c:	edd3 7a00 	vldr	s15, [r3]
 802a940:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a944:	ece3 7a01 	vstmia	r3!, {s15}
 802a948:	4293      	cmp	r3, r2
 802a94a:	d1f7      	bne.n	802a93c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802a94c:	4770      	bx	lr

0802a94e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802a94e:	f100 0320 	add.w	r3, r0, #32
 802a952:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802a956:	edd3 7a00 	vldr	s15, [r3]
 802a95a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a95e:	ece3 7a01 	vstmia	r3!, {s15}
 802a962:	4293      	cmp	r3, r2
 802a964:	d1f7      	bne.n	802a956 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802a966:	4770      	bx	lr

0802a968 <arm_max_f32>:
 802a968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a96c:	1e4f      	subs	r7, r1, #1
 802a96e:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802a972:	f100 0e04 	add.w	lr, r0, #4
 802a976:	edd0 7a00 	vldr	s15, [r0]
 802a97a:	d058      	beq.n	802aa2e <arm_max_f32+0xc6>
 802a97c:	3014      	adds	r0, #20
 802a97e:	46c4      	mov	ip, r8
 802a980:	2604      	movs	r6, #4
 802a982:	2400      	movs	r4, #0
 802a984:	ed10 6a04 	vldr	s12, [r0, #-16]
 802a988:	ed50 6a03 	vldr	s13, [r0, #-12]
 802a98c:	ed10 7a02 	vldr	s14, [r0, #-8]
 802a990:	ed50 5a01 	vldr	s11, [r0, #-4]
 802a994:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802a998:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a99c:	bfc8      	it	gt
 802a99e:	eef0 7a46 	vmovgt.f32	s15, s12
 802a9a2:	f1a6 0503 	sub.w	r5, r6, #3
 802a9a6:	eef4 7ae6 	vcmpe.f32	s15, s13
 802a9aa:	bfc8      	it	gt
 802a9ac:	462c      	movgt	r4, r5
 802a9ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9b2:	bf48      	it	mi
 802a9b4:	eef0 7a66 	vmovmi.f32	s15, s13
 802a9b8:	f1a6 0502 	sub.w	r5, r6, #2
 802a9bc:	eef4 7ac7 	vcmpe.f32	s15, s14
 802a9c0:	bf48      	it	mi
 802a9c2:	462c      	movmi	r4, r5
 802a9c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9c8:	bf48      	it	mi
 802a9ca:	eef0 7a47 	vmovmi.f32	s15, s14
 802a9ce:	f106 35ff 	add.w	r5, r6, #4294967295
 802a9d2:	eef4 7ae5 	vcmpe.f32	s15, s11
 802a9d6:	bf48      	it	mi
 802a9d8:	462c      	movmi	r4, r5
 802a9da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9de:	bf48      	it	mi
 802a9e0:	4634      	movmi	r4, r6
 802a9e2:	bf48      	it	mi
 802a9e4:	eef0 7a65 	vmovmi.f32	s15, s11
 802a9e8:	f1bc 0c01 	subs.w	ip, ip, #1
 802a9ec:	f106 0604 	add.w	r6, r6, #4
 802a9f0:	f100 0010 	add.w	r0, r0, #16
 802a9f4:	d1c6      	bne.n	802a984 <arm_max_f32+0x1c>
 802a9f6:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802a9fa:	f017 0003 	ands.w	r0, r7, #3
 802a9fe:	d018      	beq.n	802aa32 <arm_max_f32+0xca>
 802aa00:	1a08      	subs	r0, r1, r0
 802aa02:	ecbe 7a01 	vldmia	lr!, {s14}
 802aa06:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802aa0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aa0e:	bfc8      	it	gt
 802aa10:	4604      	movgt	r4, r0
 802aa12:	f100 0001 	add.w	r0, r0, #1
 802aa16:	bfd8      	it	le
 802aa18:	eeb0 7a67 	vmovle.f32	s14, s15
 802aa1c:	4288      	cmp	r0, r1
 802aa1e:	eef0 7a47 	vmov.f32	s15, s14
 802aa22:	d1ee      	bne.n	802aa02 <arm_max_f32+0x9a>
 802aa24:	ed82 7a00 	vstr	s14, [r2]
 802aa28:	601c      	str	r4, [r3, #0]
 802aa2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802aa2e:	4644      	mov	r4, r8
 802aa30:	e7e3      	b.n	802a9fa <arm_max_f32+0x92>
 802aa32:	eeb0 7a67 	vmov.f32	s14, s15
 802aa36:	e7f5      	b.n	802aa24 <arm_max_f32+0xbc>

0802aa38 <arm_rfft_fast_init_f32>:
 802aa38:	084b      	lsrs	r3, r1, #1
 802aa3a:	2b80      	cmp	r3, #128	; 0x80
 802aa3c:	b410      	push	{r4}
 802aa3e:	8201      	strh	r1, [r0, #16]
 802aa40:	8003      	strh	r3, [r0, #0]
 802aa42:	d047      	beq.n	802aad4 <arm_rfft_fast_init_f32+0x9c>
 802aa44:	d917      	bls.n	802aa76 <arm_rfft_fast_init_f32+0x3e>
 802aa46:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802aa4a:	d03d      	beq.n	802aac8 <arm_rfft_fast_init_f32+0x90>
 802aa4c:	d929      	bls.n	802aaa2 <arm_rfft_fast_init_f32+0x6a>
 802aa4e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802aa52:	d020      	beq.n	802aa96 <arm_rfft_fast_init_f32+0x5e>
 802aa54:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802aa58:	d113      	bne.n	802aa82 <arm_rfft_fast_init_f32+0x4a>
 802aa5a:	4921      	ldr	r1, [pc, #132]	; (802aae0 <arm_rfft_fast_init_f32+0xa8>)
 802aa5c:	4a21      	ldr	r2, [pc, #132]	; (802aae4 <arm_rfft_fast_init_f32+0xac>)
 802aa5e:	4b22      	ldr	r3, [pc, #136]	; (802aae8 <arm_rfft_fast_init_f32+0xb0>)
 802aa60:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802aa64:	8184      	strh	r4, [r0, #12]
 802aa66:	6081      	str	r1, [r0, #8]
 802aa68:	6042      	str	r2, [r0, #4]
 802aa6a:	6143      	str	r3, [r0, #20]
 802aa6c:	2000      	movs	r0, #0
 802aa6e:	b240      	sxtb	r0, r0
 802aa70:	f85d 4b04 	ldr.w	r4, [sp], #4
 802aa74:	4770      	bx	lr
 802aa76:	2b20      	cmp	r3, #32
 802aa78:	d01c      	beq.n	802aab4 <arm_rfft_fast_init_f32+0x7c>
 802aa7a:	2b40      	cmp	r3, #64	; 0x40
 802aa7c:	d006      	beq.n	802aa8c <arm_rfft_fast_init_f32+0x54>
 802aa7e:	2b10      	cmp	r3, #16
 802aa80:	d01d      	beq.n	802aabe <arm_rfft_fast_init_f32+0x86>
 802aa82:	20ff      	movs	r0, #255	; 0xff
 802aa84:	b240      	sxtb	r0, r0
 802aa86:	f85d 4b04 	ldr.w	r4, [sp], #4
 802aa8a:	4770      	bx	lr
 802aa8c:	2438      	movs	r4, #56	; 0x38
 802aa8e:	4917      	ldr	r1, [pc, #92]	; (802aaec <arm_rfft_fast_init_f32+0xb4>)
 802aa90:	4a17      	ldr	r2, [pc, #92]	; (802aaf0 <arm_rfft_fast_init_f32+0xb8>)
 802aa92:	4b18      	ldr	r3, [pc, #96]	; (802aaf4 <arm_rfft_fast_init_f32+0xbc>)
 802aa94:	e7e6      	b.n	802aa64 <arm_rfft_fast_init_f32+0x2c>
 802aa96:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802aa9a:	4917      	ldr	r1, [pc, #92]	; (802aaf8 <arm_rfft_fast_init_f32+0xc0>)
 802aa9c:	4a17      	ldr	r2, [pc, #92]	; (802aafc <arm_rfft_fast_init_f32+0xc4>)
 802aa9e:	4b18      	ldr	r3, [pc, #96]	; (802ab00 <arm_rfft_fast_init_f32+0xc8>)
 802aaa0:	e7e0      	b.n	802aa64 <arm_rfft_fast_init_f32+0x2c>
 802aaa2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802aaa6:	d1ec      	bne.n	802aa82 <arm_rfft_fast_init_f32+0x4a>
 802aaa8:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802aaac:	4915      	ldr	r1, [pc, #84]	; (802ab04 <arm_rfft_fast_init_f32+0xcc>)
 802aaae:	4a16      	ldr	r2, [pc, #88]	; (802ab08 <arm_rfft_fast_init_f32+0xd0>)
 802aab0:	4b16      	ldr	r3, [pc, #88]	; (802ab0c <arm_rfft_fast_init_f32+0xd4>)
 802aab2:	e7d7      	b.n	802aa64 <arm_rfft_fast_init_f32+0x2c>
 802aab4:	2430      	movs	r4, #48	; 0x30
 802aab6:	4916      	ldr	r1, [pc, #88]	; (802ab10 <arm_rfft_fast_init_f32+0xd8>)
 802aab8:	4a16      	ldr	r2, [pc, #88]	; (802ab14 <arm_rfft_fast_init_f32+0xdc>)
 802aaba:	4b17      	ldr	r3, [pc, #92]	; (802ab18 <arm_rfft_fast_init_f32+0xe0>)
 802aabc:	e7d2      	b.n	802aa64 <arm_rfft_fast_init_f32+0x2c>
 802aabe:	2414      	movs	r4, #20
 802aac0:	4916      	ldr	r1, [pc, #88]	; (802ab1c <arm_rfft_fast_init_f32+0xe4>)
 802aac2:	4a17      	ldr	r2, [pc, #92]	; (802ab20 <arm_rfft_fast_init_f32+0xe8>)
 802aac4:	4b17      	ldr	r3, [pc, #92]	; (802ab24 <arm_rfft_fast_init_f32+0xec>)
 802aac6:	e7cd      	b.n	802aa64 <arm_rfft_fast_init_f32+0x2c>
 802aac8:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802aacc:	4916      	ldr	r1, [pc, #88]	; (802ab28 <arm_rfft_fast_init_f32+0xf0>)
 802aace:	4a17      	ldr	r2, [pc, #92]	; (802ab2c <arm_rfft_fast_init_f32+0xf4>)
 802aad0:	4b17      	ldr	r3, [pc, #92]	; (802ab30 <arm_rfft_fast_init_f32+0xf8>)
 802aad2:	e7c7      	b.n	802aa64 <arm_rfft_fast_init_f32+0x2c>
 802aad4:	24d0      	movs	r4, #208	; 0xd0
 802aad6:	4917      	ldr	r1, [pc, #92]	; (802ab34 <arm_rfft_fast_init_f32+0xfc>)
 802aad8:	4a17      	ldr	r2, [pc, #92]	; (802ab38 <arm_rfft_fast_init_f32+0x100>)
 802aada:	4b18      	ldr	r3, [pc, #96]	; (802ab3c <arm_rfft_fast_init_f32+0x104>)
 802aadc:	e7c2      	b.n	802aa64 <arm_rfft_fast_init_f32+0x2c>
 802aade:	bf00      	nop
 802aae0:	080401bc 	.word	0x080401bc
 802aae4:	080313b4 	.word	0x080313b4
 802aae8:	08037524 	.word	0x08037524
 802aaec:	080354b4 	.word	0x080354b4
 802aaf0:	08041f7c 	.word	0x08041f7c
 802aaf4:	0804446c 	.word	0x0804446c
 802aaf8:	0803dea4 	.word	0x0803dea4
 802aafc:	0803bda4 	.word	0x0803bda4
 802ab00:	08035524 	.word	0x08035524
 802ab04:	080440fc 	.word	0x080440fc
 802ab08:	0803b524 	.word	0x0803b524
 802ab0c:	0804217c 	.word	0x0804217c
 802ab10:	0803ed5c 	.word	0x0803ed5c
 802ab14:	0803dda4 	.word	0x0803dda4
 802ab18:	080353b4 	.word	0x080353b4
 802ab1c:	0803ecb4 	.word	0x0803ecb4
 802ab20:	0803bd24 	.word	0x0803bd24
 802ab24:	0803ecdc 	.word	0x0803ecdc
 802ab28:	0804297c 	.word	0x0804297c
 802ab2c:	0803f1bc 	.word	0x0803f1bc
 802ab30:	08042cfc 	.word	0x08042cfc
 802ab34:	0804466c 	.word	0x0804466c
 802ab38:	0803edbc 	.word	0x0803edbc
 802ab3c:	08043cfc 	.word	0x08043cfc

0802ab40 <arm_rfft_fast_f32>:
 802ab40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ab44:	8a06      	ldrh	r6, [r0, #16]
 802ab46:	0876      	lsrs	r6, r6, #1
 802ab48:	4607      	mov	r7, r0
 802ab4a:	4615      	mov	r5, r2
 802ab4c:	8006      	strh	r6, [r0, #0]
 802ab4e:	460c      	mov	r4, r1
 802ab50:	2b00      	cmp	r3, #0
 802ab52:	d15c      	bne.n	802ac0e <arm_rfft_fast_f32+0xce>
 802ab54:	461a      	mov	r2, r3
 802ab56:	2301      	movs	r3, #1
 802ab58:	f000 fbe6 	bl	802b328 <arm_cfft_f32>
 802ab5c:	edd4 7a00 	vldr	s15, [r4]
 802ab60:	ed94 7a01 	vldr	s14, [r4, #4]
 802ab64:	883e      	ldrh	r6, [r7, #0]
 802ab66:	6978      	ldr	r0, [r7, #20]
 802ab68:	ee37 7a07 	vadd.f32	s14, s14, s14
 802ab6c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802ab70:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802ab74:	ee77 6a87 	vadd.f32	s13, s15, s14
 802ab78:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab7c:	3e01      	subs	r6, #1
 802ab7e:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802ab82:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802ab86:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802ab8a:	ed85 7a00 	vstr	s14, [r5]
 802ab8e:	edc5 7a01 	vstr	s15, [r5, #4]
 802ab92:	3010      	adds	r0, #16
 802ab94:	f105 0210 	add.w	r2, r5, #16
 802ab98:	3b08      	subs	r3, #8
 802ab9a:	f104 0110 	add.w	r1, r4, #16
 802ab9e:	ed51 4a02 	vldr	s9, [r1, #-8]
 802aba2:	ed93 5a02 	vldr	s10, [r3, #8]
 802aba6:	ed11 7a01 	vldr	s14, [r1, #-4]
 802abaa:	ed10 6a02 	vldr	s12, [r0, #-8]
 802abae:	edd3 5a03 	vldr	s11, [r3, #12]
 802abb2:	ed50 6a01 	vldr	s13, [r0, #-4]
 802abb6:	ee75 7a64 	vsub.f32	s15, s10, s9
 802abba:	ee35 4a87 	vadd.f32	s8, s11, s14
 802abbe:	ee35 5a24 	vadd.f32	s10, s10, s9
 802abc2:	ee77 5a65 	vsub.f32	s11, s14, s11
 802abc6:	ee66 4a27 	vmul.f32	s9, s12, s15
 802abca:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802abce:	ee34 5a85 	vadd.f32	s10, s9, s10
 802abd2:	ee26 6a04 	vmul.f32	s12, s12, s8
 802abd6:	ee66 6a84 	vmul.f32	s13, s13, s8
 802abda:	ee77 7a25 	vadd.f32	s15, s14, s11
 802abde:	ee76 6a85 	vadd.f32	s13, s13, s10
 802abe2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802abe6:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802abea:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802abee:	3e01      	subs	r6, #1
 802abf0:	ed42 6a02 	vstr	s13, [r2, #-8]
 802abf4:	ed42 7a01 	vstr	s15, [r2, #-4]
 802abf8:	f1a3 0308 	sub.w	r3, r3, #8
 802abfc:	f101 0108 	add.w	r1, r1, #8
 802ac00:	f100 0008 	add.w	r0, r0, #8
 802ac04:	f102 0208 	add.w	r2, r2, #8
 802ac08:	d1c9      	bne.n	802ab9e <arm_rfft_fast_f32+0x5e>
 802ac0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ac0e:	edd1 7a00 	vldr	s15, [r1]
 802ac12:	edd1 6a01 	vldr	s13, [r1, #4]
 802ac16:	6941      	ldr	r1, [r0, #20]
 802ac18:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ac1c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ac20:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802ac24:	ee27 7a23 	vmul.f32	s14, s14, s7
 802ac28:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802ac2c:	3e01      	subs	r6, #1
 802ac2e:	ed82 7a00 	vstr	s14, [r2]
 802ac32:	edc2 7a01 	vstr	s15, [r2, #4]
 802ac36:	00f0      	lsls	r0, r6, #3
 802ac38:	b3ee      	cbz	r6, 802acb6 <arm_rfft_fast_f32+0x176>
 802ac3a:	3808      	subs	r0, #8
 802ac3c:	f101 0e10 	add.w	lr, r1, #16
 802ac40:	4420      	add	r0, r4
 802ac42:	f104 0110 	add.w	r1, r4, #16
 802ac46:	f102 0c10 	add.w	ip, r2, #16
 802ac4a:	ed90 7a02 	vldr	s14, [r0, #8]
 802ac4e:	ed51 6a02 	vldr	s13, [r1, #-8]
 802ac52:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802ac56:	ed90 4a03 	vldr	s8, [r0, #12]
 802ac5a:	ed11 5a01 	vldr	s10, [r1, #-4]
 802ac5e:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802ac62:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802ac66:	ee74 4a05 	vadd.f32	s9, s8, s10
 802ac6a:	ee26 3a27 	vmul.f32	s6, s12, s15
 802ac6e:	ee77 6a26 	vadd.f32	s13, s14, s13
 802ac72:	ee35 5a44 	vsub.f32	s10, s10, s8
 802ac76:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802ac7a:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802ac7e:	ee77 7a05 	vadd.f32	s15, s14, s10
 802ac82:	ee26 6a24 	vmul.f32	s12, s12, s9
 802ac86:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802ac8a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802ac8e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802ac92:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802ac96:	ee27 7a23 	vmul.f32	s14, s14, s7
 802ac9a:	3e01      	subs	r6, #1
 802ac9c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802aca0:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802aca4:	f1a0 0008 	sub.w	r0, r0, #8
 802aca8:	f101 0108 	add.w	r1, r1, #8
 802acac:	f10e 0e08 	add.w	lr, lr, #8
 802acb0:	f10c 0c08 	add.w	ip, ip, #8
 802acb4:	d1c9      	bne.n	802ac4a <arm_rfft_fast_f32+0x10a>
 802acb6:	4638      	mov	r0, r7
 802acb8:	4629      	mov	r1, r5
 802acba:	461a      	mov	r2, r3
 802acbc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802acc0:	2301      	movs	r3, #1
 802acc2:	f000 bb31 	b.w	802b328 <arm_cfft_f32>
 802acc6:	bf00      	nop

0802acc8 <arm_cfft_radix8by2_f32>:
 802acc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802accc:	ed2d 8b08 	vpush	{d8-d11}
 802acd0:	f8b0 e000 	ldrh.w	lr, [r0]
 802acd4:	6842      	ldr	r2, [r0, #4]
 802acd6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802acda:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802acde:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802ace2:	4607      	mov	r7, r0
 802ace4:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802ace8:	f000 80af 	beq.w	802ae4a <arm_cfft_radix8by2_f32+0x182>
 802acec:	3310      	adds	r3, #16
 802acee:	18ce      	adds	r6, r1, r3
 802acf0:	3210      	adds	r2, #16
 802acf2:	4443      	add	r3, r8
 802acf4:	f101 0510 	add.w	r5, r1, #16
 802acf8:	f108 0410 	add.w	r4, r8, #16
 802acfc:	ed54 1a04 	vldr	s3, [r4, #-16]
 802ad00:	ed13 4a04 	vldr	s8, [r3, #-16]
 802ad04:	ed53 3a03 	vldr	s7, [r3, #-12]
 802ad08:	ed53 5a02 	vldr	s11, [r3, #-8]
 802ad0c:	ed13 5a01 	vldr	s10, [r3, #-4]
 802ad10:	ed54 6a03 	vldr	s13, [r4, #-12]
 802ad14:	ed14 0a02 	vldr	s0, [r4, #-8]
 802ad18:	ed16 2a04 	vldr	s4, [r6, #-16]
 802ad1c:	ed56 2a03 	vldr	s5, [r6, #-12]
 802ad20:	ed15 6a03 	vldr	s12, [r5, #-12]
 802ad24:	ed15 7a01 	vldr	s14, [r5, #-4]
 802ad28:	ed15 3a04 	vldr	s6, [r5, #-16]
 802ad2c:	ed54 7a01 	vldr	s15, [r4, #-4]
 802ad30:	ed56 0a02 	vldr	s1, [r6, #-8]
 802ad34:	ed16 1a01 	vldr	s2, [r6, #-4]
 802ad38:	ed55 4a02 	vldr	s9, [r5, #-8]
 802ad3c:	ee73 ba21 	vadd.f32	s23, s6, s3
 802ad40:	ee36 ba26 	vadd.f32	s22, s12, s13
 802ad44:	ee37 aa27 	vadd.f32	s20, s14, s15
 802ad48:	ee72 9a04 	vadd.f32	s19, s4, s8
 802ad4c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802ad50:	ee31 8a05 	vadd.f32	s16, s2, s10
 802ad54:	ee74 aa80 	vadd.f32	s21, s9, s0
 802ad58:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802ad5c:	ed45 ba04 	vstr	s23, [r5, #-16]
 802ad60:	ed05 ba03 	vstr	s22, [r5, #-12]
 802ad64:	ed45 aa02 	vstr	s21, [r5, #-8]
 802ad68:	ed05 aa01 	vstr	s20, [r5, #-4]
 802ad6c:	ed06 8a01 	vstr	s16, [r6, #-4]
 802ad70:	ed46 9a04 	vstr	s19, [r6, #-16]
 802ad74:	ed06 9a03 	vstr	s18, [r6, #-12]
 802ad78:	ed46 8a02 	vstr	s17, [r6, #-8]
 802ad7c:	ee76 6a66 	vsub.f32	s13, s12, s13
 802ad80:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802ad84:	ed12 6a03 	vldr	s12, [r2, #-12]
 802ad88:	ed52 2a04 	vldr	s5, [r2, #-16]
 802ad8c:	ee33 3a61 	vsub.f32	s6, s6, s3
 802ad90:	ee34 4a42 	vsub.f32	s8, s8, s4
 802ad94:	ee26 8a86 	vmul.f32	s16, s13, s12
 802ad98:	ee24 2a06 	vmul.f32	s4, s8, s12
 802ad9c:	ee63 1a22 	vmul.f32	s3, s6, s5
 802ada0:	ee24 4a22 	vmul.f32	s8, s8, s5
 802ada4:	ee23 3a06 	vmul.f32	s6, s6, s12
 802ada8:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802adac:	ee23 6a86 	vmul.f32	s12, s7, s12
 802adb0:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802adb4:	ee36 6a04 	vadd.f32	s12, s12, s8
 802adb8:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802adbc:	ee72 3a63 	vsub.f32	s7, s4, s7
 802adc0:	ee71 2a88 	vadd.f32	s5, s3, s16
 802adc4:	ed44 6a03 	vstr	s13, [r4, #-12]
 802adc8:	ed44 2a04 	vstr	s5, [r4, #-16]
 802adcc:	ed43 3a04 	vstr	s7, [r3, #-16]
 802add0:	ed03 6a03 	vstr	s12, [r3, #-12]
 802add4:	ee77 7a67 	vsub.f32	s15, s14, s15
 802add8:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802addc:	ed12 7a01 	vldr	s14, [r2, #-4]
 802ade0:	ed52 5a02 	vldr	s11, [r2, #-8]
 802ade4:	ee35 6a41 	vsub.f32	s12, s10, s2
 802ade8:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802adec:	ee67 3a87 	vmul.f32	s7, s15, s14
 802adf0:	ee26 5a87 	vmul.f32	s10, s13, s14
 802adf4:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802adf8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802adfc:	ee64 4a87 	vmul.f32	s9, s9, s14
 802ae00:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802ae04:	ee26 7a07 	vmul.f32	s14, s12, s14
 802ae08:	ee26 6a25 	vmul.f32	s12, s12, s11
 802ae0c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802ae10:	ee74 5a23 	vadd.f32	s11, s8, s7
 802ae14:	ee35 6a46 	vsub.f32	s12, s10, s12
 802ae18:	ee37 7a26 	vadd.f32	s14, s14, s13
 802ae1c:	f1be 0e01 	subs.w	lr, lr, #1
 802ae20:	ed44 5a02 	vstr	s11, [r4, #-8]
 802ae24:	f105 0510 	add.w	r5, r5, #16
 802ae28:	ed44 7a01 	vstr	s15, [r4, #-4]
 802ae2c:	f106 0610 	add.w	r6, r6, #16
 802ae30:	ed03 6a02 	vstr	s12, [r3, #-8]
 802ae34:	ed03 7a01 	vstr	s14, [r3, #-4]
 802ae38:	f102 0210 	add.w	r2, r2, #16
 802ae3c:	f104 0410 	add.w	r4, r4, #16
 802ae40:	f103 0310 	add.w	r3, r3, #16
 802ae44:	f47f af5a 	bne.w	802acfc <arm_cfft_radix8by2_f32+0x34>
 802ae48:	687a      	ldr	r2, [r7, #4]
 802ae4a:	fa1f f48c 	uxth.w	r4, ip
 802ae4e:	4608      	mov	r0, r1
 802ae50:	2302      	movs	r3, #2
 802ae52:	4621      	mov	r1, r4
 802ae54:	f000 fbca 	bl	802b5ec <arm_radix8_butterfly_f32>
 802ae58:	ecbd 8b08 	vpop	{d8-d11}
 802ae5c:	4640      	mov	r0, r8
 802ae5e:	4621      	mov	r1, r4
 802ae60:	687a      	ldr	r2, [r7, #4]
 802ae62:	2302      	movs	r3, #2
 802ae64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ae68:	f000 bbc0 	b.w	802b5ec <arm_radix8_butterfly_f32>

0802ae6c <arm_cfft_radix8by4_f32>:
 802ae6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ae70:	ed2d 8b0a 	vpush	{d8-d12}
 802ae74:	8802      	ldrh	r2, [r0, #0]
 802ae76:	ed91 6a00 	vldr	s12, [r1]
 802ae7a:	b08f      	sub	sp, #60	; 0x3c
 802ae7c:	460f      	mov	r7, r1
 802ae7e:	0852      	lsrs	r2, r2, #1
 802ae80:	0093      	lsls	r3, r2, #2
 802ae82:	900c      	str	r0, [sp, #48]	; 0x30
 802ae84:	9103      	str	r1, [sp, #12]
 802ae86:	6841      	ldr	r1, [r0, #4]
 802ae88:	ed97 7a01 	vldr	s14, [r7, #4]
 802ae8c:	4638      	mov	r0, r7
 802ae8e:	4418      	add	r0, r3
 802ae90:	4606      	mov	r6, r0
 802ae92:	9009      	str	r0, [sp, #36]	; 0x24
 802ae94:	4418      	add	r0, r3
 802ae96:	edd0 6a00 	vldr	s13, [r0]
 802ae9a:	edd6 3a00 	vldr	s7, [r6]
 802ae9e:	edd6 2a01 	vldr	s5, [r6, #4]
 802aea2:	edd0 7a01 	vldr	s15, [r0, #4]
 802aea6:	900a      	str	r0, [sp, #40]	; 0x28
 802aea8:	ee76 5a26 	vadd.f32	s11, s12, s13
 802aeac:	4604      	mov	r4, r0
 802aeae:	4625      	mov	r5, r4
 802aeb0:	441c      	add	r4, r3
 802aeb2:	ed94 4a00 	vldr	s8, [r4]
 802aeb6:	ed94 5a01 	vldr	s10, [r4, #4]
 802aeba:	9401      	str	r4, [sp, #4]
 802aebc:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802aec0:	4630      	mov	r0, r6
 802aec2:	ee74 4a24 	vadd.f32	s9, s8, s9
 802aec6:	463e      	mov	r6, r7
 802aec8:	ee14 ea90 	vmov	lr, s9
 802aecc:	ee76 6a66 	vsub.f32	s13, s12, s13
 802aed0:	f846 eb08 	str.w	lr, [r6], #8
 802aed4:	ee37 6a27 	vadd.f32	s12, s14, s15
 802aed8:	edd0 4a01 	vldr	s9, [r0, #4]
 802aedc:	9604      	str	r6, [sp, #16]
 802aede:	ee77 7a67 	vsub.f32	s15, s14, s15
 802aee2:	9e01      	ldr	r6, [sp, #4]
 802aee4:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802aee8:	ed96 2a01 	vldr	s4, [r6, #4]
 802aeec:	ee36 7a24 	vadd.f32	s14, s12, s9
 802aef0:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802aef4:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802aef8:	ee36 6a62 	vsub.f32	s12, s12, s5
 802aefc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802af00:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802af04:	ee73 3a45 	vsub.f32	s7, s6, s10
 802af08:	4604      	mov	r4, r0
 802af0a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802af0e:	ee75 6a26 	vadd.f32	s13, s10, s13
 802af12:	46a3      	mov	fp, r4
 802af14:	ee37 7a02 	vadd.f32	s14, s14, s4
 802af18:	ee34 5a84 	vadd.f32	s10, s9, s8
 802af1c:	ee13 8a90 	vmov	r8, s7
 802af20:	46a4      	mov	ip, r4
 802af22:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802af26:	ed87 7a01 	vstr	s14, [r7, #4]
 802af2a:	f84b 8b08 	str.w	r8, [fp], #8
 802af2e:	f1ac 0704 	sub.w	r7, ip, #4
 802af32:	ed8c 5a01 	vstr	s10, [ip, #4]
 802af36:	f101 0c08 	add.w	ip, r1, #8
 802af3a:	462c      	mov	r4, r5
 802af3c:	f8cd c014 	str.w	ip, [sp, #20]
 802af40:	ee15 ca90 	vmov	ip, s11
 802af44:	f844 cb08 	str.w	ip, [r4], #8
 802af48:	9407      	str	r4, [sp, #28]
 802af4a:	f101 0410 	add.w	r4, r1, #16
 802af4e:	ed85 6a01 	vstr	s12, [r5, #4]
 802af52:	0852      	lsrs	r2, r2, #1
 802af54:	9402      	str	r4, [sp, #8]
 802af56:	462c      	mov	r4, r5
 802af58:	f101 0518 	add.w	r5, r1, #24
 802af5c:	920b      	str	r2, [sp, #44]	; 0x2c
 802af5e:	46b2      	mov	sl, r6
 802af60:	9506      	str	r5, [sp, #24]
 802af62:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802af66:	3a02      	subs	r2, #2
 802af68:	ee16 5a90 	vmov	r5, s13
 802af6c:	46b6      	mov	lr, r6
 802af6e:	4630      	mov	r0, r6
 802af70:	0852      	lsrs	r2, r2, #1
 802af72:	f84a 5b08 	str.w	r5, [sl], #8
 802af76:	f1a0 0604 	sub.w	r6, r0, #4
 802af7a:	edce 7a01 	vstr	s15, [lr, #4]
 802af7e:	9208      	str	r2, [sp, #32]
 802af80:	f000 8130 	beq.w	802b1e4 <arm_cfft_radix8by4_f32+0x378>
 802af84:	4691      	mov	r9, r2
 802af86:	9a03      	ldr	r2, [sp, #12]
 802af88:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802af8c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802af90:	3b08      	subs	r3, #8
 802af92:	f102 0510 	add.w	r5, r2, #16
 802af96:	f101 0c20 	add.w	ip, r1, #32
 802af9a:	f1a4 020c 	sub.w	r2, r4, #12
 802af9e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802afa2:	4433      	add	r3, r6
 802afa4:	3410      	adds	r4, #16
 802afa6:	4650      	mov	r0, sl
 802afa8:	4659      	mov	r1, fp
 802afaa:	ed55 3a02 	vldr	s7, [r5, #-8]
 802afae:	ed14 5a02 	vldr	s10, [r4, #-8]
 802afb2:	ed91 7a00 	vldr	s14, [r1]
 802afb6:	edd0 7a00 	vldr	s15, [r0]
 802afba:	ed15 4a01 	vldr	s8, [r5, #-4]
 802afbe:	ed54 5a01 	vldr	s11, [r4, #-4]
 802afc2:	edd0 6a01 	vldr	s13, [r0, #4]
 802afc6:	ed91 6a01 	vldr	s12, [r1, #4]
 802afca:	ee33 8a85 	vadd.f32	s16, s7, s10
 802afce:	ee34 0a25 	vadd.f32	s0, s8, s11
 802afd2:	ee78 4a07 	vadd.f32	s9, s16, s14
 802afd6:	ee74 5a65 	vsub.f32	s11, s8, s11
 802afda:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802afde:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802afe2:	ed45 4a02 	vstr	s9, [r5, #-8]
 802afe6:	edd1 4a01 	vldr	s9, [r1, #4]
 802afea:	ed90 4a01 	vldr	s8, [r0, #4]
 802afee:	ee70 4a24 	vadd.f32	s9, s0, s9
 802aff2:	ee76 aa05 	vadd.f32	s21, s12, s10
 802aff6:	ee74 4a84 	vadd.f32	s9, s9, s8
 802affa:	ee35 aac7 	vsub.f32	s20, s11, s14
 802affe:	ed45 4a01 	vstr	s9, [r5, #-4]
 802b002:	edd6 1a00 	vldr	s3, [r6]
 802b006:	edd7 0a00 	vldr	s1, [r7]
 802b00a:	ed92 4a02 	vldr	s8, [r2, #8]
 802b00e:	edd3 3a02 	vldr	s7, [r3, #8]
 802b012:	ed93 2a01 	vldr	s4, [r3, #4]
 802b016:	ed16 1a01 	vldr	s2, [r6, #-4]
 802b01a:	edd2 2a01 	vldr	s5, [r2, #4]
 802b01e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802b022:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802b026:	ee39 3a81 	vadd.f32	s6, s19, s2
 802b02a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802b02e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802b032:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802b036:	ee7a aae6 	vsub.f32	s21, s21, s13
 802b03a:	ee18 aa90 	vmov	sl, s17
 802b03e:	f847 a908 	str.w	sl, [r7], #-8
 802b042:	edd2 8a01 	vldr	s17, [r2, #4]
 802b046:	ed93 9a01 	vldr	s18, [r3, #4]
 802b04a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802b04e:	ee3a aa27 	vadd.f32	s20, s20, s15
 802b052:	ee78 8a89 	vadd.f32	s17, s17, s18
 802b056:	ee74 0a63 	vsub.f32	s1, s8, s7
 802b05a:	edc7 8a01 	vstr	s17, [r7, #4]
 802b05e:	ed18 ba02 	vldr	s22, [r8, #-8]
 802b062:	ed58 8a01 	vldr	s17, [r8, #-4]
 802b066:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802b06a:	ee6a ba28 	vmul.f32	s23, s20, s17
 802b06e:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802b072:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802b076:	ee30 9a81 	vadd.f32	s18, s1, s2
 802b07a:	ee79 9a82 	vadd.f32	s19, s19, s4
 802b07e:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802b082:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802b086:	ee69 baa8 	vmul.f32	s23, s19, s17
 802b08a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802b08e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802b092:	ee69 8a28 	vmul.f32	s17, s18, s17
 802b096:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802b09a:	ee1c aa10 	vmov	sl, s24
 802b09e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802b0a2:	f841 ab08 	str.w	sl, [r1], #8
 802b0a6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802b0aa:	ee3b bacb 	vsub.f32	s22, s23, s22
 802b0ae:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802b0b2:	ee33 3a62 	vsub.f32	s6, s6, s5
 802b0b6:	ed01 aa01 	vstr	s20, [r1, #-4]
 802b0ba:	edc2 8a01 	vstr	s17, [r2, #4]
 802b0be:	ed82 ba02 	vstr	s22, [r2, #8]
 802b0c2:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802b0c6:	ee74 3a63 	vsub.f32	s7, s8, s7
 802b0ca:	ee38 8a47 	vsub.f32	s16, s16, s14
 802b0ce:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802b0d2:	ee30 0a46 	vsub.f32	s0, s0, s12
 802b0d6:	ee33 3a42 	vsub.f32	s6, s6, s4
 802b0da:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b0de:	ee30 0a66 	vsub.f32	s0, s0, s13
 802b0e2:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802b0e6:	ee63 8a04 	vmul.f32	s17, s6, s8
 802b0ea:	ee28 aa24 	vmul.f32	s20, s16, s9
 802b0ee:	ee60 9a04 	vmul.f32	s19, s0, s8
 802b0f2:	ee28 8a04 	vmul.f32	s16, s16, s8
 802b0f6:	ee20 0a24 	vmul.f32	s0, s0, s9
 802b0fa:	ee63 3a84 	vmul.f32	s7, s7, s8
 802b0fe:	ee39 4a68 	vsub.f32	s8, s18, s17
 802b102:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802b106:	ee14 aa10 	vmov	sl, s8
 802b10a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802b10e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802b112:	ed44 9a02 	vstr	s19, [r4, #-8]
 802b116:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802b11a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802b11e:	f846 a908 	str.w	sl, [r6], #-8
 802b122:	ee35 6a46 	vsub.f32	s12, s10, s12
 802b126:	ee35 7a87 	vadd.f32	s14, s11, s14
 802b12a:	edc6 3a01 	vstr	s7, [r6, #4]
 802b12e:	ee76 6a86 	vadd.f32	s13, s13, s12
 802b132:	ee77 7a67 	vsub.f32	s15, s14, s15
 802b136:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802b13a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802b13e:	ee67 5a86 	vmul.f32	s11, s15, s12
 802b142:	ee26 5a87 	vmul.f32	s10, s13, s14
 802b146:	ee72 2a62 	vsub.f32	s5, s4, s5
 802b14a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802b14e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802b152:	ee75 5a25 	vadd.f32	s11, s10, s11
 802b156:	ee62 0a86 	vmul.f32	s1, s5, s12
 802b15a:	ee66 6a86 	vmul.f32	s13, s13, s12
 802b15e:	ee67 7a87 	vmul.f32	s15, s15, s14
 802b162:	ee21 6a06 	vmul.f32	s12, s2, s12
 802b166:	ee62 2a87 	vmul.f32	s5, s5, s14
 802b16a:	ee21 1a07 	vmul.f32	s2, s2, s14
 802b16e:	ee15 aa90 	vmov	sl, s11
 802b172:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b176:	f840 ab08 	str.w	sl, [r0], #8
 802b17a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802b17e:	ee76 2a22 	vadd.f32	s5, s12, s5
 802b182:	f1b9 0901 	subs.w	r9, r9, #1
 802b186:	ed40 7a01 	vstr	s15, [r0, #-4]
 802b18a:	f105 0508 	add.w	r5, r5, #8
 802b18e:	ed83 1a02 	vstr	s2, [r3, #8]
 802b192:	edc3 2a01 	vstr	s5, [r3, #4]
 802b196:	f108 0808 	add.w	r8, r8, #8
 802b19a:	f1a2 0208 	sub.w	r2, r2, #8
 802b19e:	f10c 0c10 	add.w	ip, ip, #16
 802b1a2:	f104 0408 	add.w	r4, r4, #8
 802b1a6:	f10e 0e18 	add.w	lr, lr, #24
 802b1aa:	f1a3 0308 	sub.w	r3, r3, #8
 802b1ae:	f47f aefc 	bne.w	802afaa <arm_cfft_radix8by4_f32+0x13e>
 802b1b2:	9908      	ldr	r1, [sp, #32]
 802b1b4:	9802      	ldr	r0, [sp, #8]
 802b1b6:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802b1ba:	00cb      	lsls	r3, r1, #3
 802b1bc:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802b1c0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802b1c4:	9102      	str	r1, [sp, #8]
 802b1c6:	9904      	ldr	r1, [sp, #16]
 802b1c8:	4419      	add	r1, r3
 802b1ca:	9104      	str	r1, [sp, #16]
 802b1cc:	9905      	ldr	r1, [sp, #20]
 802b1ce:	4419      	add	r1, r3
 802b1d0:	9105      	str	r1, [sp, #20]
 802b1d2:	9907      	ldr	r1, [sp, #28]
 802b1d4:	449b      	add	fp, r3
 802b1d6:	4419      	add	r1, r3
 802b1d8:	449a      	add	sl, r3
 802b1da:	9b06      	ldr	r3, [sp, #24]
 802b1dc:	9107      	str	r1, [sp, #28]
 802b1de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802b1e2:	9306      	str	r3, [sp, #24]
 802b1e4:	9a04      	ldr	r2, [sp, #16]
 802b1e6:	9807      	ldr	r0, [sp, #28]
 802b1e8:	edd2 3a00 	vldr	s7, [r2]
 802b1ec:	ed90 4a00 	vldr	s8, [r0]
 802b1f0:	eddb 7a00 	vldr	s15, [fp]
 802b1f4:	ed9a 3a00 	vldr	s6, [sl]
 802b1f8:	edd2 4a01 	vldr	s9, [r2, #4]
 802b1fc:	ed90 7a01 	vldr	s14, [r0, #4]
 802b200:	ed9b 2a01 	vldr	s4, [fp, #4]
 802b204:	edda 5a01 	vldr	s11, [sl, #4]
 802b208:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802b20c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802b20e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802b212:	ee34 6a87 	vadd.f32	s12, s9, s14
 802b216:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802b21a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802b21e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802b222:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802b226:	ed82 5a00 	vstr	s10, [r2]
 802b22a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802b22e:	edda 4a01 	vldr	s9, [sl, #4]
 802b232:	ee36 5a05 	vadd.f32	s10, s12, s10
 802b236:	ee72 3a04 	vadd.f32	s7, s4, s8
 802b23a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802b23e:	ee77 4a67 	vsub.f32	s9, s14, s15
 802b242:	ed82 5a01 	vstr	s10, [r2, #4]
 802b246:	9a05      	ldr	r2, [sp, #20]
 802b248:	ee34 5a83 	vadd.f32	s10, s9, s6
 802b24c:	edd2 1a00 	vldr	s3, [r2]
 802b250:	edd2 2a01 	vldr	s5, [r2, #4]
 802b254:	9a02      	ldr	r2, [sp, #8]
 802b256:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802b25a:	ee36 6a42 	vsub.f32	s12, s12, s4
 802b25e:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802b262:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802b266:	ee65 2a22 	vmul.f32	s5, s10, s5
 802b26a:	ee25 5a21 	vmul.f32	s10, s10, s3
 802b26e:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802b272:	ee35 5a63 	vsub.f32	s10, s10, s7
 802b276:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802b27a:	edcb 2a00 	vstr	s5, [fp]
 802b27e:	ed8b 5a01 	vstr	s10, [fp, #4]
 802b282:	edd2 3a01 	vldr	s7, [r2, #4]
 802b286:	ed92 5a00 	vldr	s10, [r2]
 802b28a:	9a06      	ldr	r2, [sp, #24]
 802b28c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802b290:	ee36 6a65 	vsub.f32	s12, s12, s11
 802b294:	ee66 4a85 	vmul.f32	s9, s13, s10
 802b298:	ee26 5a05 	vmul.f32	s10, s12, s10
 802b29c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802b2a0:	ee26 6a23 	vmul.f32	s12, s12, s7
 802b2a4:	ee75 6a66 	vsub.f32	s13, s10, s13
 802b2a8:	ee34 6a86 	vadd.f32	s12, s9, s12
 802b2ac:	ee34 4a42 	vsub.f32	s8, s8, s4
 802b2b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b2b4:	edc0 6a01 	vstr	s13, [r0, #4]
 802b2b8:	ed80 6a00 	vstr	s12, [r0]
 802b2bc:	ed92 6a01 	vldr	s12, [r2, #4]
 802b2c0:	9803      	ldr	r0, [sp, #12]
 802b2c2:	ee77 7a43 	vsub.f32	s15, s14, s6
 802b2c6:	ee75 5a84 	vadd.f32	s11, s11, s8
 802b2ca:	ed92 7a00 	vldr	s14, [r2]
 802b2ce:	ee65 6a87 	vmul.f32	s13, s11, s14
 802b2d2:	ee27 7a87 	vmul.f32	s14, s15, s14
 802b2d6:	ee65 5a86 	vmul.f32	s11, s11, s12
 802b2da:	ee67 7a86 	vmul.f32	s15, s15, s12
 802b2de:	ee77 5a65 	vsub.f32	s11, s14, s11
 802b2e2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802b2e6:	edca 5a01 	vstr	s11, [sl, #4]
 802b2ea:	edca 7a00 	vstr	s15, [sl]
 802b2ee:	6872      	ldr	r2, [r6, #4]
 802b2f0:	4621      	mov	r1, r4
 802b2f2:	2304      	movs	r3, #4
 802b2f4:	f000 f97a 	bl	802b5ec <arm_radix8_butterfly_f32>
 802b2f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b2fa:	6872      	ldr	r2, [r6, #4]
 802b2fc:	4621      	mov	r1, r4
 802b2fe:	2304      	movs	r3, #4
 802b300:	f000 f974 	bl	802b5ec <arm_radix8_butterfly_f32>
 802b304:	980a      	ldr	r0, [sp, #40]	; 0x28
 802b306:	6872      	ldr	r2, [r6, #4]
 802b308:	4621      	mov	r1, r4
 802b30a:	2304      	movs	r3, #4
 802b30c:	f000 f96e 	bl	802b5ec <arm_radix8_butterfly_f32>
 802b310:	9801      	ldr	r0, [sp, #4]
 802b312:	6872      	ldr	r2, [r6, #4]
 802b314:	4621      	mov	r1, r4
 802b316:	2304      	movs	r3, #4
 802b318:	b00f      	add	sp, #60	; 0x3c
 802b31a:	ecbd 8b0a 	vpop	{d8-d12}
 802b31e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b322:	f000 b963 	b.w	802b5ec <arm_radix8_butterfly_f32>
 802b326:	bf00      	nop

0802b328 <arm_cfft_f32>:
 802b328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b32c:	2a01      	cmp	r2, #1
 802b32e:	4606      	mov	r6, r0
 802b330:	4617      	mov	r7, r2
 802b332:	460c      	mov	r4, r1
 802b334:	4698      	mov	r8, r3
 802b336:	8805      	ldrh	r5, [r0, #0]
 802b338:	d054      	beq.n	802b3e4 <arm_cfft_f32+0xbc>
 802b33a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802b33e:	d04c      	beq.n	802b3da <arm_cfft_f32+0xb2>
 802b340:	d916      	bls.n	802b370 <arm_cfft_f32+0x48>
 802b342:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802b346:	d01a      	beq.n	802b37e <arm_cfft_f32+0x56>
 802b348:	d95c      	bls.n	802b404 <arm_cfft_f32+0xdc>
 802b34a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802b34e:	d044      	beq.n	802b3da <arm_cfft_f32+0xb2>
 802b350:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802b354:	d105      	bne.n	802b362 <arm_cfft_f32+0x3a>
 802b356:	4620      	mov	r0, r4
 802b358:	4629      	mov	r1, r5
 802b35a:	6872      	ldr	r2, [r6, #4]
 802b35c:	2301      	movs	r3, #1
 802b35e:	f000 f945 	bl	802b5ec <arm_radix8_butterfly_f32>
 802b362:	f1b8 0f00 	cmp.w	r8, #0
 802b366:	d111      	bne.n	802b38c <arm_cfft_f32+0x64>
 802b368:	2f01      	cmp	r7, #1
 802b36a:	d016      	beq.n	802b39a <arm_cfft_f32+0x72>
 802b36c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b370:	2d20      	cmp	r5, #32
 802b372:	d032      	beq.n	802b3da <arm_cfft_f32+0xb2>
 802b374:	d94a      	bls.n	802b40c <arm_cfft_f32+0xe4>
 802b376:	2d40      	cmp	r5, #64	; 0x40
 802b378:	d0ed      	beq.n	802b356 <arm_cfft_f32+0x2e>
 802b37a:	2d80      	cmp	r5, #128	; 0x80
 802b37c:	d1f1      	bne.n	802b362 <arm_cfft_f32+0x3a>
 802b37e:	4630      	mov	r0, r6
 802b380:	4621      	mov	r1, r4
 802b382:	f7ff fca1 	bl	802acc8 <arm_cfft_radix8by2_f32>
 802b386:	f1b8 0f00 	cmp.w	r8, #0
 802b38a:	d0ed      	beq.n	802b368 <arm_cfft_f32+0x40>
 802b38c:	4620      	mov	r0, r4
 802b38e:	89b1      	ldrh	r1, [r6, #12]
 802b390:	68b2      	ldr	r2, [r6, #8]
 802b392:	f7d4 ff2d 	bl	80001f0 <arm_bitreversal_32>
 802b396:	2f01      	cmp	r7, #1
 802b398:	d1e8      	bne.n	802b36c <arm_cfft_f32+0x44>
 802b39a:	ee07 5a90 	vmov	s15, r5
 802b39e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802b3a2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b3a6:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802b3aa:	2d00      	cmp	r5, #0
 802b3ac:	d0de      	beq.n	802b36c <arm_cfft_f32+0x44>
 802b3ae:	f104 0108 	add.w	r1, r4, #8
 802b3b2:	2300      	movs	r3, #0
 802b3b4:	3301      	adds	r3, #1
 802b3b6:	429d      	cmp	r5, r3
 802b3b8:	f101 0108 	add.w	r1, r1, #8
 802b3bc:	ed11 7a04 	vldr	s14, [r1, #-16]
 802b3c0:	ed51 7a03 	vldr	s15, [r1, #-12]
 802b3c4:	ee27 7a26 	vmul.f32	s14, s14, s13
 802b3c8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802b3cc:	ed01 7a04 	vstr	s14, [r1, #-16]
 802b3d0:	ed41 7a03 	vstr	s15, [r1, #-12]
 802b3d4:	d1ee      	bne.n	802b3b4 <arm_cfft_f32+0x8c>
 802b3d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b3da:	4630      	mov	r0, r6
 802b3dc:	4621      	mov	r1, r4
 802b3de:	f7ff fd45 	bl	802ae6c <arm_cfft_radix8by4_f32>
 802b3e2:	e7be      	b.n	802b362 <arm_cfft_f32+0x3a>
 802b3e4:	b1ad      	cbz	r5, 802b412 <arm_cfft_f32+0xea>
 802b3e6:	f101 030c 	add.w	r3, r1, #12
 802b3ea:	2200      	movs	r2, #0
 802b3ec:	ed53 7a02 	vldr	s15, [r3, #-8]
 802b3f0:	3201      	adds	r2, #1
 802b3f2:	eef1 7a67 	vneg.f32	s15, s15
 802b3f6:	4295      	cmp	r5, r2
 802b3f8:	ed43 7a02 	vstr	s15, [r3, #-8]
 802b3fc:	f103 0308 	add.w	r3, r3, #8
 802b400:	d1f4      	bne.n	802b3ec <arm_cfft_f32+0xc4>
 802b402:	e79a      	b.n	802b33a <arm_cfft_f32+0x12>
 802b404:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802b408:	d0a5      	beq.n	802b356 <arm_cfft_f32+0x2e>
 802b40a:	e7aa      	b.n	802b362 <arm_cfft_f32+0x3a>
 802b40c:	2d10      	cmp	r5, #16
 802b40e:	d0b6      	beq.n	802b37e <arm_cfft_f32+0x56>
 802b410:	e7a7      	b.n	802b362 <arm_cfft_f32+0x3a>
 802b412:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802b416:	d894      	bhi.n	802b342 <arm_cfft_f32+0x1a>
 802b418:	e7aa      	b.n	802b370 <arm_cfft_f32+0x48>
 802b41a:	bf00      	nop

0802b41c <arm_cmplx_mag_f32>:
 802b41c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b420:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802b424:	b084      	sub	sp, #16
 802b426:	d07f      	beq.n	802b528 <arm_cmplx_mag_f32+0x10c>
 802b428:	2700      	movs	r7, #0
 802b42a:	f100 0420 	add.w	r4, r0, #32
 802b42e:	f101 0510 	add.w	r5, r1, #16
 802b432:	4646      	mov	r6, r8
 802b434:	e05a      	b.n	802b4ec <arm_cmplx_mag_f32+0xd0>
 802b436:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802b43a:	eeb4 0a40 	vcmp.f32	s0, s0
 802b43e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b442:	f040 80a4 	bne.w	802b58e <arm_cmplx_mag_f32+0x172>
 802b446:	ed05 0a04 	vstr	s0, [r5, #-16]
 802b44a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802b44e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802b452:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802b456:	ee20 0a00 	vmul.f32	s0, s0, s0
 802b45a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802b45e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802b462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b466:	f2c0 808f 	blt.w	802b588 <arm_cmplx_mag_f32+0x16c>
 802b46a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802b46e:	eeb4 0a40 	vcmp.f32	s0, s0
 802b472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b476:	f040 80af 	bne.w	802b5d8 <arm_cmplx_mag_f32+0x1bc>
 802b47a:	ed05 0a03 	vstr	s0, [r5, #-12]
 802b47e:	ed54 7a04 	vldr	s15, [r4, #-16]
 802b482:	ed14 0a03 	vldr	s0, [r4, #-12]
 802b486:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802b48a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802b48e:	ee77 7a80 	vadd.f32	s15, s15, s0
 802b492:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802b496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b49a:	db72      	blt.n	802b582 <arm_cmplx_mag_f32+0x166>
 802b49c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802b4a0:	eeb4 0a40 	vcmp.f32	s0, s0
 802b4a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b4a8:	f040 808c 	bne.w	802b5c4 <arm_cmplx_mag_f32+0x1a8>
 802b4ac:	ed05 0a02 	vstr	s0, [r5, #-8]
 802b4b0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802b4b4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802b4b8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802b4bc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802b4c0:	ee77 7a80 	vadd.f32	s15, s15, s0
 802b4c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802b4c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b4cc:	db20      	blt.n	802b510 <arm_cmplx_mag_f32+0xf4>
 802b4ce:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802b4d2:	eeb4 0a40 	vcmp.f32	s0, s0
 802b4d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b4da:	d169      	bne.n	802b5b0 <arm_cmplx_mag_f32+0x194>
 802b4dc:	3e01      	subs	r6, #1
 802b4de:	ed05 0a01 	vstr	s0, [r5, #-4]
 802b4e2:	f104 0420 	add.w	r4, r4, #32
 802b4e6:	f105 0510 	add.w	r5, r5, #16
 802b4ea:	d019      	beq.n	802b520 <arm_cmplx_mag_f32+0x104>
 802b4ec:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802b4f0:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802b4f4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802b4f8:	ee20 0a00 	vmul.f32	s0, s0, s0
 802b4fc:	ee77 7a80 	vadd.f32	s15, s15, s0
 802b500:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802b504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b508:	da95      	bge.n	802b436 <arm_cmplx_mag_f32+0x1a>
 802b50a:	f845 7c10 	str.w	r7, [r5, #-16]
 802b50e:	e79c      	b.n	802b44a <arm_cmplx_mag_f32+0x2e>
 802b510:	3e01      	subs	r6, #1
 802b512:	f845 7c04 	str.w	r7, [r5, #-4]
 802b516:	f104 0420 	add.w	r4, r4, #32
 802b51a:	f105 0510 	add.w	r5, r5, #16
 802b51e:	d1e5      	bne.n	802b4ec <arm_cmplx_mag_f32+0xd0>
 802b520:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802b524:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802b528:	f012 0503 	ands.w	r5, r2, #3
 802b52c:	d026      	beq.n	802b57c <arm_cmplx_mag_f32+0x160>
 802b52e:	2600      	movs	r6, #0
 802b530:	f100 0408 	add.w	r4, r0, #8
 802b534:	e00c      	b.n	802b550 <arm_cmplx_mag_f32+0x134>
 802b536:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802b53a:	eeb4 0a40 	vcmp.f32	s0, s0
 802b53e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b542:	d12e      	bne.n	802b5a2 <arm_cmplx_mag_f32+0x186>
 802b544:	3d01      	subs	r5, #1
 802b546:	ed01 0a01 	vstr	s0, [r1, #-4]
 802b54a:	f104 0408 	add.w	r4, r4, #8
 802b54e:	d015      	beq.n	802b57c <arm_cmplx_mag_f32+0x160>
 802b550:	ed54 7a02 	vldr	s15, [r4, #-8]
 802b554:	ed14 0a01 	vldr	s0, [r4, #-4]
 802b558:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802b55c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802b560:	3104      	adds	r1, #4
 802b562:	ee77 7a80 	vadd.f32	s15, s15, s0
 802b566:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802b56a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b56e:	dae2      	bge.n	802b536 <arm_cmplx_mag_f32+0x11a>
 802b570:	3d01      	subs	r5, #1
 802b572:	f841 6c04 	str.w	r6, [r1, #-4]
 802b576:	f104 0408 	add.w	r4, r4, #8
 802b57a:	d1e9      	bne.n	802b550 <arm_cmplx_mag_f32+0x134>
 802b57c:	b004      	add	sp, #16
 802b57e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b582:	f845 7c08 	str.w	r7, [r5, #-8]
 802b586:	e793      	b.n	802b4b0 <arm_cmplx_mag_f32+0x94>
 802b588:	f845 7c0c 	str.w	r7, [r5, #-12]
 802b58c:	e777      	b.n	802b47e <arm_cmplx_mag_f32+0x62>
 802b58e:	eeb0 0a67 	vmov.f32	s0, s15
 802b592:	9203      	str	r2, [sp, #12]
 802b594:	9102      	str	r1, [sp, #8]
 802b596:	9001      	str	r0, [sp, #4]
 802b598:	f000 fb38 	bl	802bc0c <sqrtf>
 802b59c:	a801      	add	r0, sp, #4
 802b59e:	c807      	ldmia	r0, {r0, r1, r2}
 802b5a0:	e751      	b.n	802b446 <arm_cmplx_mag_f32+0x2a>
 802b5a2:	eeb0 0a67 	vmov.f32	s0, s15
 802b5a6:	9101      	str	r1, [sp, #4]
 802b5a8:	f000 fb30 	bl	802bc0c <sqrtf>
 802b5ac:	9901      	ldr	r1, [sp, #4]
 802b5ae:	e7c9      	b.n	802b544 <arm_cmplx_mag_f32+0x128>
 802b5b0:	eeb0 0a67 	vmov.f32	s0, s15
 802b5b4:	9203      	str	r2, [sp, #12]
 802b5b6:	9102      	str	r1, [sp, #8]
 802b5b8:	9001      	str	r0, [sp, #4]
 802b5ba:	f000 fb27 	bl	802bc0c <sqrtf>
 802b5be:	a801      	add	r0, sp, #4
 802b5c0:	c807      	ldmia	r0, {r0, r1, r2}
 802b5c2:	e78b      	b.n	802b4dc <arm_cmplx_mag_f32+0xc0>
 802b5c4:	eeb0 0a67 	vmov.f32	s0, s15
 802b5c8:	9203      	str	r2, [sp, #12]
 802b5ca:	9102      	str	r1, [sp, #8]
 802b5cc:	9001      	str	r0, [sp, #4]
 802b5ce:	f000 fb1d 	bl	802bc0c <sqrtf>
 802b5d2:	a801      	add	r0, sp, #4
 802b5d4:	c807      	ldmia	r0, {r0, r1, r2}
 802b5d6:	e769      	b.n	802b4ac <arm_cmplx_mag_f32+0x90>
 802b5d8:	eeb0 0a67 	vmov.f32	s0, s15
 802b5dc:	9203      	str	r2, [sp, #12]
 802b5de:	9102      	str	r1, [sp, #8]
 802b5e0:	9001      	str	r0, [sp, #4]
 802b5e2:	f000 fb13 	bl	802bc0c <sqrtf>
 802b5e6:	a801      	add	r0, sp, #4
 802b5e8:	c807      	ldmia	r0, {r0, r1, r2}
 802b5ea:	e746      	b.n	802b47a <arm_cmplx_mag_f32+0x5e>

0802b5ec <arm_radix8_butterfly_f32>:
 802b5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b5f0:	ed2d 8b10 	vpush	{d8-d15}
 802b5f4:	b09d      	sub	sp, #116	; 0x74
 802b5f6:	461c      	mov	r4, r3
 802b5f8:	ed9f bac8 	vldr	s22, [pc, #800]	; 802b91c <arm_radix8_butterfly_f32+0x330>
 802b5fc:	921a      	str	r2, [sp, #104]	; 0x68
 802b5fe:	1d03      	adds	r3, r0, #4
 802b600:	4682      	mov	sl, r0
 802b602:	4689      	mov	r9, r1
 802b604:	468b      	mov	fp, r1
 802b606:	931b      	str	r3, [sp, #108]	; 0x6c
 802b608:	9400      	str	r4, [sp, #0]
 802b60a:	469e      	mov	lr, r3
 802b60c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802b610:	005a      	lsls	r2, r3, #1
 802b612:	18d6      	adds	r6, r2, r3
 802b614:	18f5      	adds	r5, r6, r3
 802b616:	9203      	str	r2, [sp, #12]
 802b618:	195a      	adds	r2, r3, r5
 802b61a:	18d0      	adds	r0, r2, r3
 802b61c:	00df      	lsls	r7, r3, #3
 802b61e:	1819      	adds	r1, r3, r0
 802b620:	463c      	mov	r4, r7
 802b622:	9701      	str	r7, [sp, #4]
 802b624:	4457      	add	r7, sl
 802b626:	930c      	str	r3, [sp, #48]	; 0x30
 802b628:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802b62c:	011b      	lsls	r3, r3, #4
 802b62e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802b632:	eb07 0c04 	add.w	ip, r7, r4
 802b636:	9c00      	ldr	r4, [sp, #0]
 802b638:	9302      	str	r3, [sp, #8]
 802b63a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802b63e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802b642:	3204      	adds	r2, #4
 802b644:	3104      	adds	r1, #4
 802b646:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802b64a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802b64e:	f04f 0800 	mov.w	r8, #0
 802b652:	eddc 7a00 	vldr	s15, [ip]
 802b656:	edd7 6a00 	vldr	s13, [r7]
 802b65a:	edd6 3a00 	vldr	s7, [r6]
 802b65e:	ed5e aa01 	vldr	s21, [lr, #-4]
 802b662:	edd5 4a00 	vldr	s9, [r5]
 802b666:	ed90 2a00 	vldr	s4, [r0]
 802b66a:	ed12 7a01 	vldr	s14, [r2, #-4]
 802b66e:	ed51 0a01 	vldr	s1, [r1, #-4]
 802b672:	ee77 8a82 	vadd.f32	s17, s15, s4
 802b676:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802b67a:	ee76 1a87 	vadd.f32	s3, s13, s14
 802b67e:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802b682:	ee31 6a84 	vadd.f32	s12, s3, s8
 802b686:	ee33 5a28 	vadd.f32	s10, s6, s17
 802b68a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802b68e:	ee75 6a06 	vadd.f32	s13, s10, s12
 802b692:	ee35 5a46 	vsub.f32	s10, s10, s12
 802b696:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802b69a:	ed85 5a00 	vstr	s10, [r5]
 802b69e:	ed96 1a01 	vldr	s2, [r6, #4]
 802b6a2:	edd7 5a01 	vldr	s11, [r7, #4]
 802b6a6:	ed92 aa00 	vldr	s20, [r2]
 802b6aa:	ed91 6a00 	vldr	s12, [r1]
 802b6ae:	ed9e 9a00 	vldr	s18, [lr]
 802b6b2:	ed95 5a01 	vldr	s10, [r5, #4]
 802b6b6:	eddc 6a01 	vldr	s13, [ip, #4]
 802b6ba:	edd0 9a01 	vldr	s19, [r0, #4]
 802b6be:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802b6c2:	ee71 2a46 	vsub.f32	s5, s2, s12
 802b6c6:	ee75 3aca 	vsub.f32	s7, s11, s20
 802b6ca:	ee37 0a60 	vsub.f32	s0, s14, s1
 802b6ce:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802b6d2:	ee37 7a20 	vadd.f32	s14, s14, s1
 802b6d6:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802b6da:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802b6de:	ee79 3a05 	vadd.f32	s7, s18, s10
 802b6e2:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802b6e6:	ee39 5a45 	vsub.f32	s10, s18, s10
 802b6ea:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802b6ee:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802b6f2:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802b6f6:	ee31 6a06 	vadd.f32	s12, s2, s12
 802b6fa:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802b6fe:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802b702:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802b706:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802b70a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802b70e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802b712:	ee75 8a86 	vadd.f32	s17, s11, s12
 802b716:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802b71a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802b71e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802b722:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802b726:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802b72a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802b72e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802b732:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802b736:	ee75 4a22 	vadd.f32	s9, s10, s5
 802b73a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802b73e:	ee72 7a67 	vsub.f32	s15, s4, s15
 802b742:	ee33 8a06 	vadd.f32	s16, s6, s12
 802b746:	ee75 2a87 	vadd.f32	s5, s11, s14
 802b74a:	ee31 9a28 	vadd.f32	s18, s2, s17
 802b74e:	ee33 6a46 	vsub.f32	s12, s6, s12
 802b752:	ee74 0a61 	vsub.f32	s1, s8, s3
 802b756:	ee33 2a80 	vadd.f32	s4, s7, s0
 802b75a:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802b75e:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802b762:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802b766:	ee31 1a68 	vsub.f32	s2, s2, s17
 802b76a:	ee34 4a21 	vadd.f32	s8, s8, s3
 802b76e:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802b772:	ee74 4a85 	vadd.f32	s9, s9, s10
 802b776:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802b77a:	44d8      	add	r8, fp
 802b77c:	45c1      	cmp	r9, r8
 802b77e:	ed8e 9a00 	vstr	s18, [lr]
 802b782:	ed85 1a01 	vstr	s2, [r5, #4]
 802b786:	449e      	add	lr, r3
 802b788:	ed8c 8a00 	vstr	s16, [ip]
 802b78c:	441d      	add	r5, r3
 802b78e:	ed80 6a00 	vstr	s12, [r0]
 802b792:	edcc 0a01 	vstr	s1, [ip, #4]
 802b796:	ed80 4a01 	vstr	s8, [r0, #4]
 802b79a:	449c      	add	ip, r3
 802b79c:	ed87 2a00 	vstr	s4, [r7]
 802b7a0:	4418      	add	r0, r3
 802b7a2:	ed41 3a01 	vstr	s7, [r1, #-4]
 802b7a6:	ed42 2a01 	vstr	s5, [r2, #-4]
 802b7aa:	ed86 7a00 	vstr	s14, [r6]
 802b7ae:	ed87 3a01 	vstr	s6, [r7, #4]
 802b7b2:	edc1 4a00 	vstr	s9, [r1]
 802b7b6:	441f      	add	r7, r3
 802b7b8:	edc2 5a00 	vstr	s11, [r2]
 802b7bc:	4419      	add	r1, r3
 802b7be:	edc6 6a01 	vstr	s13, [r6, #4]
 802b7c2:	441a      	add	r2, r3
 802b7c4:	441e      	add	r6, r3
 802b7c6:	f63f af44 	bhi.w	802b652 <arm_radix8_butterfly_f32+0x66>
 802b7ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 802b7cc:	2907      	cmp	r1, #7
 802b7ce:	4620      	mov	r0, r4
 802b7d0:	f240 81e9 	bls.w	802bba6 <arm_radix8_butterfly_f32+0x5ba>
 802b7d4:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802b7d8:	193e      	adds	r6, r7, r4
 802b7da:	1935      	adds	r5, r6, r4
 802b7dc:	9c03      	ldr	r4, [sp, #12]
 802b7de:	9000      	str	r0, [sp, #0]
 802b7e0:	4622      	mov	r2, r4
 802b7e2:	3201      	adds	r2, #1
 802b7e4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802b7e8:	9900      	ldr	r1, [sp, #0]
 802b7ea:	1828      	adds	r0, r5, r0
 802b7ec:	eb00 0e01 	add.w	lr, r0, r1
 802b7f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 802b7f2:	440a      	add	r2, r1
 802b7f4:	eb04 0c01 	add.w	ip, r4, r1
 802b7f8:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802b7fc:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802b800:	9a00      	ldr	r2, [sp, #0]
 802b802:	940f      	str	r4, [sp, #60]	; 0x3c
 802b804:	00ed      	lsls	r5, r5, #3
 802b806:	9511      	str	r5, [sp, #68]	; 0x44
 802b808:	00d5      	lsls	r5, r2, #3
 802b80a:	950d      	str	r5, [sp, #52]	; 0x34
 802b80c:	9d01      	ldr	r5, [sp, #4]
 802b80e:	3508      	adds	r5, #8
 802b810:	9516      	str	r5, [sp, #88]	; 0x58
 802b812:	9d02      	ldr	r5, [sp, #8]
 802b814:	3508      	adds	r5, #8
 802b816:	0114      	lsls	r4, r2, #4
 802b818:	9517      	str	r5, [sp, #92]	; 0x5c
 802b81a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802b81c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802b81e:	940e      	str	r4, [sp, #56]	; 0x38
 802b820:	00c0      	lsls	r0, r0, #3
 802b822:	9010      	str	r0, [sp, #64]	; 0x40
 802b824:	18aa      	adds	r2, r5, r2
 802b826:	9207      	str	r2, [sp, #28]
 802b828:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802b82a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802b82c:	18aa      	adds	r2, r5, r2
 802b82e:	9208      	str	r2, [sp, #32]
 802b830:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802b832:	18aa      	adds	r2, r5, r2
 802b834:	9209      	str	r2, [sp, #36]	; 0x24
 802b836:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802b83a:	f10e 0204 	add.w	r2, lr, #4
 802b83e:	920a      	str	r2, [sp, #40]	; 0x28
 802b840:	00c9      	lsls	r1, r1, #3
 802b842:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802b844:	310c      	adds	r1, #12
 802b846:	00f6      	lsls	r6, r6, #3
 802b848:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802b84c:	9114      	str	r1, [sp, #80]	; 0x50
 802b84e:	18a9      	adds	r1, r5, r2
 802b850:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802b852:	9612      	str	r6, [sp, #72]	; 0x48
 802b854:	00ff      	lsls	r7, r7, #3
 802b856:	19ae      	adds	r6, r5, r6
 802b858:	3008      	adds	r0, #8
 802b85a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802b85e:	9606      	str	r6, [sp, #24]
 802b860:	9019      	str	r0, [sp, #100]	; 0x64
 802b862:	18aa      	adds	r2, r5, r2
 802b864:	0164      	lsls	r4, r4, #5
 802b866:	19ee      	adds	r6, r5, r7
 802b868:	f10c 000c 	add.w	r0, ip, #12
 802b86c:	9713      	str	r7, [sp, #76]	; 0x4c
 802b86e:	9604      	str	r6, [sp, #16]
 802b870:	9015      	str	r0, [sp, #84]	; 0x54
 802b872:	9103      	str	r1, [sp, #12]
 802b874:	9205      	str	r2, [sp, #20]
 802b876:	f104 0208 	add.w	r2, r4, #8
 802b87a:	9218      	str	r2, [sp, #96]	; 0x60
 802b87c:	f04f 0801 	mov.w	r8, #1
 802b880:	2200      	movs	r2, #0
 802b882:	f102 0108 	add.w	r1, r2, #8
 802b886:	460f      	mov	r7, r1
 802b888:	910b      	str	r1, [sp, #44]	; 0x2c
 802b88a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802b88c:	188e      	adds	r6, r1, r2
 802b88e:	9916      	ldr	r1, [sp, #88]	; 0x58
 802b890:	188d      	adds	r5, r1, r2
 802b892:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802b894:	188c      	adds	r4, r1, r2
 802b896:	9919      	ldr	r1, [sp, #100]	; 0x64
 802b898:	1888      	adds	r0, r1, r2
 802b89a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802b89c:	eb01 0c02 	add.w	ip, r1, r2
 802b8a0:	9915      	ldr	r1, [sp, #84]	; 0x54
 802b8a2:	440a      	add	r2, r1
 802b8a4:	9903      	ldr	r1, [sp, #12]
 802b8a6:	edd1 fa00 	vldr	s31, [r1]
 802b8aa:	9905      	ldr	r1, [sp, #20]
 802b8ac:	ed91 fa00 	vldr	s30, [r1]
 802b8b0:	9904      	ldr	r1, [sp, #16]
 802b8b2:	edd1 ea00 	vldr	s29, [r1]
 802b8b6:	9906      	ldr	r1, [sp, #24]
 802b8b8:	ed91 ea00 	vldr	s28, [r1]
 802b8bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 802b8be:	edd1 da00 	vldr	s27, [r1]
 802b8c2:	9908      	ldr	r1, [sp, #32]
 802b8c4:	ed91 da00 	vldr	s26, [r1]
 802b8c8:	9907      	ldr	r1, [sp, #28]
 802b8ca:	edd1 ca00 	vldr	s25, [r1]
 802b8ce:	9903      	ldr	r1, [sp, #12]
 802b8d0:	ed91 ca01 	vldr	s24, [r1, #4]
 802b8d4:	9905      	ldr	r1, [sp, #20]
 802b8d6:	edd1 ba01 	vldr	s23, [r1, #4]
 802b8da:	9904      	ldr	r1, [sp, #16]
 802b8dc:	edd1 aa01 	vldr	s21, [r1, #4]
 802b8e0:	9906      	ldr	r1, [sp, #24]
 802b8e2:	ed91 aa01 	vldr	s20, [r1, #4]
 802b8e6:	9909      	ldr	r1, [sp, #36]	; 0x24
 802b8e8:	edd1 7a01 	vldr	s15, [r1, #4]
 802b8ec:	9908      	ldr	r1, [sp, #32]
 802b8ee:	edcd 7a00 	vstr	s15, [sp]
 802b8f2:	edd1 7a01 	vldr	s15, [r1, #4]
 802b8f6:	9907      	ldr	r1, [sp, #28]
 802b8f8:	edcd 7a01 	vstr	s15, [sp, #4]
 802b8fc:	edd1 7a01 	vldr	s15, [r1, #4]
 802b900:	eb0a 0e07 	add.w	lr, sl, r7
 802b904:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802b906:	edcd 7a02 	vstr	s15, [sp, #8]
 802b90a:	eb0c 010a 	add.w	r1, ip, sl
 802b90e:	4456      	add	r6, sl
 802b910:	4455      	add	r5, sl
 802b912:	4454      	add	r4, sl
 802b914:	4450      	add	r0, sl
 802b916:	4452      	add	r2, sl
 802b918:	46c4      	mov	ip, r8
 802b91a:	e001      	b.n	802b920 <arm_radix8_butterfly_f32+0x334>
 802b91c:	3f3504f3 	.word	0x3f3504f3
 802b920:	ed96 5a00 	vldr	s10, [r6]
 802b924:	ed52 9a01 	vldr	s19, [r2, #-4]
 802b928:	ed11 6a01 	vldr	s12, [r1, #-4]
 802b92c:	edd0 7a00 	vldr	s15, [r0]
 802b930:	ed17 7a01 	vldr	s14, [r7, #-4]
 802b934:	edde 3a00 	vldr	s7, [lr]
 802b938:	ed94 3a00 	vldr	s6, [r4]
 802b93c:	ed95 2a00 	vldr	s4, [r5]
 802b940:	ed9e 0a01 	vldr	s0, [lr, #4]
 802b944:	ee33 8a85 	vadd.f32	s16, s7, s10
 802b948:	ee32 1a06 	vadd.f32	s2, s4, s12
 802b94c:	ee33 4a29 	vadd.f32	s8, s6, s19
 802b950:	ee77 4a87 	vadd.f32	s9, s15, s14
 802b954:	ee78 1a04 	vadd.f32	s3, s16, s8
 802b958:	ee71 6a24 	vadd.f32	s13, s2, s9
 802b95c:	ee32 2a46 	vsub.f32	s4, s4, s12
 802b960:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802b964:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b968:	ed8e 6a00 	vstr	s12, [lr]
 802b96c:	edd0 8a01 	vldr	s17, [r0, #4]
 802b970:	ed95 9a01 	vldr	s18, [r5, #4]
 802b974:	edd1 2a00 	vldr	s5, [r1]
 802b978:	ed97 7a00 	vldr	s14, [r7]
 802b97c:	edd4 0a01 	vldr	s1, [r4, #4]
 802b980:	ed96 6a01 	vldr	s12, [r6, #4]
 802b984:	edd2 5a00 	vldr	s11, [r2]
 802b988:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802b98c:	ee33 3a69 	vsub.f32	s6, s6, s19
 802b990:	ee39 5a62 	vsub.f32	s10, s18, s5
 802b994:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802b998:	ee38 4a44 	vsub.f32	s8, s16, s8
 802b99c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802b9a0:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802b9a4:	ee79 2a22 	vadd.f32	s5, s18, s5
 802b9a8:	ee75 8a69 	vsub.f32	s17, s10, s19
 802b9ac:	ee32 9a27 	vadd.f32	s18, s4, s15
 802b9b0:	ee35 5a29 	vadd.f32	s10, s10, s19
 802b9b4:	ee72 7a67 	vsub.f32	s15, s4, s15
 802b9b8:	ee30 2a06 	vadd.f32	s4, s0, s12
 802b9bc:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802b9c0:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802b9c4:	ee32 9a08 	vadd.f32	s18, s4, s16
 802b9c8:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802b9cc:	ee32 2a48 	vsub.f32	s4, s4, s16
 802b9d0:	ee71 4a64 	vsub.f32	s9, s2, s9
 802b9d4:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802b9d8:	ee32 1a87 	vadd.f32	s2, s5, s14
 802b9dc:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802b9e0:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802b9e4:	ee30 6a46 	vsub.f32	s12, s0, s12
 802b9e8:	ee73 0a29 	vadd.f32	s1, s6, s19
 802b9ec:	ee36 0a28 	vadd.f32	s0, s12, s17
 802b9f0:	ee33 3a69 	vsub.f32	s6, s6, s19
 802b9f4:	ee32 7a64 	vsub.f32	s14, s4, s9
 802b9f8:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802b9fc:	ee36 6a68 	vsub.f32	s12, s12, s17
 802ba00:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802ba04:	ee75 8a85 	vadd.f32	s17, s11, s10
 802ba08:	ee74 3a22 	vadd.f32	s7, s8, s5
 802ba0c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802ba10:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802ba14:	ee79 1a41 	vsub.f32	s3, s18, s2
 802ba18:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802ba1c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802ba20:	ee74 2a62 	vsub.f32	s5, s8, s5
 802ba24:	ee72 4a24 	vadd.f32	s9, s4, s9
 802ba28:	ee30 4a60 	vsub.f32	s8, s0, s1
 802ba2c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802ba30:	ee30 0a20 	vadd.f32	s0, s0, s1
 802ba34:	ee77 9a85 	vadd.f32	s19, s15, s10
 802ba38:	ee36 6a03 	vadd.f32	s12, s12, s6
 802ba3c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802ba40:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802ba44:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802ba48:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802ba4c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802ba50:	ee39 1a01 	vadd.f32	s2, s18, s2
 802ba54:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802ba58:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802ba5c:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802ba60:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802ba64:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802ba68:	ee35 3a03 	vadd.f32	s6, s10, s6
 802ba6c:	ee72 6a66 	vsub.f32	s13, s4, s13
 802ba70:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802ba74:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802ba78:	ed9d 4a02 	vldr	s8, [sp, #8]
 802ba7c:	ed8e 1a01 	vstr	s2, [lr, #4]
 802ba80:	ee77 3a63 	vsub.f32	s7, s14, s7
 802ba84:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802ba88:	ed9d 7a01 	vldr	s14, [sp, #4]
 802ba8c:	ed86 3a00 	vstr	s6, [r6]
 802ba90:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ba94:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ba98:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802ba9c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802baa0:	ee67 2a22 	vmul.f32	s5, s14, s5
 802baa4:	ee64 1a00 	vmul.f32	s3, s8, s0
 802baa8:	ee27 7a24 	vmul.f32	s14, s14, s9
 802baac:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802bab0:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802bab4:	ee64 8a28 	vmul.f32	s17, s8, s17
 802bab8:	ed9d 4a00 	vldr	s8, [sp]
 802babc:	edc6 6a01 	vstr	s13, [r6, #4]
 802bac0:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802bac4:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802bac8:	ee64 9a29 	vmul.f32	s19, s8, s19
 802bacc:	ee24 4a25 	vmul.f32	s8, s8, s11
 802bad0:	ee30 7a87 	vadd.f32	s14, s1, s14
 802bad4:	ee74 4a84 	vadd.f32	s9, s9, s8
 802bad8:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802badc:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802bae0:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802bae4:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802bae8:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802baec:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802baf0:	ee75 1a21 	vadd.f32	s3, s10, s3
 802baf4:	ee30 0a68 	vsub.f32	s0, s0, s17
 802baf8:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802bafc:	ee70 0a84 	vadd.f32	s1, s1, s8
 802bb00:	ee36 6a67 	vsub.f32	s12, s12, s15
 802bb04:	44dc      	add	ip, fp
 802bb06:	45e1      	cmp	r9, ip
 802bb08:	ed84 9a00 	vstr	s18, [r4]
 802bb0c:	edc4 3a01 	vstr	s7, [r4, #4]
 802bb10:	449e      	add	lr, r3
 802bb12:	ed02 7a01 	vstr	s14, [r2, #-4]
 802bb16:	edc2 2a00 	vstr	s5, [r2]
 802bb1a:	441e      	add	r6, r3
 802bb1c:	ed85 2a00 	vstr	s4, [r5]
 802bb20:	ed85 8a01 	vstr	s16, [r5, #4]
 802bb24:	441c      	add	r4, r3
 802bb26:	ed47 1a01 	vstr	s3, [r7, #-4]
 802bb2a:	ed87 0a00 	vstr	s0, [r7]
 802bb2e:	441a      	add	r2, r3
 802bb30:	ed41 4a01 	vstr	s9, [r1, #-4]
 802bb34:	edc1 9a00 	vstr	s19, [r1]
 802bb38:	441d      	add	r5, r3
 802bb3a:	edc0 0a00 	vstr	s1, [r0]
 802bb3e:	441f      	add	r7, r3
 802bb40:	ed80 6a01 	vstr	s12, [r0, #4]
 802bb44:	4419      	add	r1, r3
 802bb46:	4418      	add	r0, r3
 802bb48:	f63f aeea 	bhi.w	802b920 <arm_radix8_butterfly_f32+0x334>
 802bb4c:	9a03      	ldr	r2, [sp, #12]
 802bb4e:	990d      	ldr	r1, [sp, #52]	; 0x34
 802bb50:	440a      	add	r2, r1
 802bb52:	9203      	str	r2, [sp, #12]
 802bb54:	990e      	ldr	r1, [sp, #56]	; 0x38
 802bb56:	9a05      	ldr	r2, [sp, #20]
 802bb58:	440a      	add	r2, r1
 802bb5a:	9205      	str	r2, [sp, #20]
 802bb5c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802bb5e:	9a04      	ldr	r2, [sp, #16]
 802bb60:	440a      	add	r2, r1
 802bb62:	9204      	str	r2, [sp, #16]
 802bb64:	9912      	ldr	r1, [sp, #72]	; 0x48
 802bb66:	9a06      	ldr	r2, [sp, #24]
 802bb68:	440a      	add	r2, r1
 802bb6a:	9206      	str	r2, [sp, #24]
 802bb6c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802bb6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802bb70:	440a      	add	r2, r1
 802bb72:	9209      	str	r2, [sp, #36]	; 0x24
 802bb74:	9910      	ldr	r1, [sp, #64]	; 0x40
 802bb76:	9a08      	ldr	r2, [sp, #32]
 802bb78:	440a      	add	r2, r1
 802bb7a:	9208      	str	r2, [sp, #32]
 802bb7c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802bb7e:	9a07      	ldr	r2, [sp, #28]
 802bb80:	440a      	add	r2, r1
 802bb82:	9207      	str	r2, [sp, #28]
 802bb84:	990c      	ldr	r1, [sp, #48]	; 0x30
 802bb86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802bb88:	f108 0801 	add.w	r8, r8, #1
 802bb8c:	3208      	adds	r2, #8
 802bb8e:	4588      	cmp	r8, r1
 802bb90:	920a      	str	r2, [sp, #40]	; 0x28
 802bb92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802bb94:	f47f ae75 	bne.w	802b882 <arm_radix8_butterfly_f32+0x296>
 802bb98:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802bb9c:	9300      	str	r3, [sp, #0]
 802bb9e:	46c3      	mov	fp, r8
 802bba0:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802bba4:	e532      	b.n	802b60c <arm_radix8_butterfly_f32+0x20>
 802bba6:	b01d      	add	sp, #116	; 0x74
 802bba8:	ecbd 8b10 	vpop	{d8-d15}
 802bbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802bbb0 <__aeabi_atexit>:
 802bbb0:	460b      	mov	r3, r1
 802bbb2:	4601      	mov	r1, r0
 802bbb4:	4618      	mov	r0, r3
 802bbb6:	f000 bfc7 	b.w	802cb48 <__cxa_atexit>

0802bbba <_ZdlPvj>:
 802bbba:	f000 b812 	b.w	802bbe2 <_ZdlPv>

0802bbbe <__cxa_guard_acquire>:
 802bbbe:	6803      	ldr	r3, [r0, #0]
 802bbc0:	07db      	lsls	r3, r3, #31
 802bbc2:	d406      	bmi.n	802bbd2 <__cxa_guard_acquire+0x14>
 802bbc4:	7843      	ldrb	r3, [r0, #1]
 802bbc6:	b103      	cbz	r3, 802bbca <__cxa_guard_acquire+0xc>
 802bbc8:	deff      	udf	#255	; 0xff
 802bbca:	2301      	movs	r3, #1
 802bbcc:	7043      	strb	r3, [r0, #1]
 802bbce:	4618      	mov	r0, r3
 802bbd0:	4770      	bx	lr
 802bbd2:	2000      	movs	r0, #0
 802bbd4:	4770      	bx	lr

0802bbd6 <__cxa_guard_release>:
 802bbd6:	2301      	movs	r3, #1
 802bbd8:	6003      	str	r3, [r0, #0]
 802bbda:	4770      	bx	lr

0802bbdc <__cxa_pure_virtual>:
 802bbdc:	b508      	push	{r3, lr}
 802bbde:	f000 f80f 	bl	802bc00 <_ZSt9terminatev>

0802bbe2 <_ZdlPv>:
 802bbe2:	f000 befd 	b.w	802c9e0 <free>

0802bbe6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802bbe6:	b508      	push	{r3, lr}
 802bbe8:	4780      	blx	r0
 802bbea:	f000 fec5 	bl	802c978 <abort>
	...

0802bbf0 <_ZSt13get_terminatev>:
 802bbf0:	4b02      	ldr	r3, [pc, #8]	; (802bbfc <_ZSt13get_terminatev+0xc>)
 802bbf2:	6818      	ldr	r0, [r3, #0]
 802bbf4:	f3bf 8f5b 	dmb	ish
 802bbf8:	4770      	bx	lr
 802bbfa:	bf00      	nop
 802bbfc:	20000108 	.word	0x20000108

0802bc00 <_ZSt9terminatev>:
 802bc00:	b508      	push	{r3, lr}
 802bc02:	f7ff fff5 	bl	802bbf0 <_ZSt13get_terminatev>
 802bc06:	f7ff ffee 	bl	802bbe6 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802bc0c <sqrtf>:
 802bc0c:	b508      	push	{r3, lr}
 802bc0e:	ed2d 8b02 	vpush	{d8}
 802bc12:	eeb0 8a40 	vmov.f32	s16, s0
 802bc16:	f000 f97d 	bl	802bf14 <__ieee754_sqrtf>
 802bc1a:	eeb4 8a48 	vcmp.f32	s16, s16
 802bc1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bc22:	d60c      	bvs.n	802bc3e <sqrtf+0x32>
 802bc24:	eddf 8a07 	vldr	s17, [pc, #28]	; 802bc44 <sqrtf+0x38>
 802bc28:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802bc2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bc30:	d505      	bpl.n	802bc3e <sqrtf+0x32>
 802bc32:	f001 f9a7 	bl	802cf84 <__errno>
 802bc36:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802bc3a:	2321      	movs	r3, #33	; 0x21
 802bc3c:	6003      	str	r3, [r0, #0]
 802bc3e:	ecbd 8b02 	vpop	{d8}
 802bc42:	bd08      	pop	{r3, pc}
 802bc44:	00000000 	.word	0x00000000

0802bc48 <atanf>:
 802bc48:	b538      	push	{r3, r4, r5, lr}
 802bc4a:	ee10 5a10 	vmov	r5, s0
 802bc4e:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802bc52:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802bc56:	eef0 7a40 	vmov.f32	s15, s0
 802bc5a:	db10      	blt.n	802bc7e <atanf+0x36>
 802bc5c:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802bc60:	dd04      	ble.n	802bc6c <atanf+0x24>
 802bc62:	ee70 7a00 	vadd.f32	s15, s0, s0
 802bc66:	eeb0 0a67 	vmov.f32	s0, s15
 802bc6a:	bd38      	pop	{r3, r4, r5, pc}
 802bc6c:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802bda4 <atanf+0x15c>
 802bc70:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802bda8 <atanf+0x160>
 802bc74:	2d00      	cmp	r5, #0
 802bc76:	bfd8      	it	le
 802bc78:	eef0 7a47 	vmovle.f32	s15, s14
 802bc7c:	e7f3      	b.n	802bc66 <atanf+0x1e>
 802bc7e:	4b4b      	ldr	r3, [pc, #300]	; (802bdac <atanf+0x164>)
 802bc80:	429c      	cmp	r4, r3
 802bc82:	dc10      	bgt.n	802bca6 <atanf+0x5e>
 802bc84:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802bc88:	da0a      	bge.n	802bca0 <atanf+0x58>
 802bc8a:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802bdb0 <atanf+0x168>
 802bc8e:	ee30 7a07 	vadd.f32	s14, s0, s14
 802bc92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802bc96:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802bc9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bc9e:	dce2      	bgt.n	802bc66 <atanf+0x1e>
 802bca0:	f04f 33ff 	mov.w	r3, #4294967295
 802bca4:	e013      	b.n	802bcce <atanf+0x86>
 802bca6:	f000 f8e7 	bl	802be78 <fabsf>
 802bcaa:	4b42      	ldr	r3, [pc, #264]	; (802bdb4 <atanf+0x16c>)
 802bcac:	429c      	cmp	r4, r3
 802bcae:	dc4f      	bgt.n	802bd50 <atanf+0x108>
 802bcb0:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802bcb4:	429c      	cmp	r4, r3
 802bcb6:	dc41      	bgt.n	802bd3c <atanf+0xf4>
 802bcb8:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802bcbc:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802bcc0:	eea0 7a27 	vfma.f32	s14, s0, s15
 802bcc4:	2300      	movs	r3, #0
 802bcc6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802bcca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802bcce:	1c5a      	adds	r2, r3, #1
 802bcd0:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802bcd4:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802bdb8 <atanf+0x170>
 802bcd8:	eddf 5a38 	vldr	s11, [pc, #224]	; 802bdbc <atanf+0x174>
 802bcdc:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802bdc0 <atanf+0x178>
 802bce0:	ee66 6a06 	vmul.f32	s13, s12, s12
 802bce4:	eee6 5a87 	vfma.f32	s11, s13, s14
 802bce8:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802bdc4 <atanf+0x17c>
 802bcec:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802bcf0:	eddf 5a35 	vldr	s11, [pc, #212]	; 802bdc8 <atanf+0x180>
 802bcf4:	eee7 5a26 	vfma.f32	s11, s14, s13
 802bcf8:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802bdcc <atanf+0x184>
 802bcfc:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802bd00:	eddf 5a33 	vldr	s11, [pc, #204]	; 802bdd0 <atanf+0x188>
 802bd04:	eee7 5a26 	vfma.f32	s11, s14, s13
 802bd08:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802bdd4 <atanf+0x18c>
 802bd0c:	eea6 5a87 	vfma.f32	s10, s13, s14
 802bd10:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802bdd8 <atanf+0x190>
 802bd14:	eea5 7a26 	vfma.f32	s14, s10, s13
 802bd18:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802bddc <atanf+0x194>
 802bd1c:	eea7 5a26 	vfma.f32	s10, s14, s13
 802bd20:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802bde0 <atanf+0x198>
 802bd24:	eea5 7a26 	vfma.f32	s14, s10, s13
 802bd28:	ee27 7a26 	vmul.f32	s14, s14, s13
 802bd2c:	eea5 7a86 	vfma.f32	s14, s11, s12
 802bd30:	ee27 7a87 	vmul.f32	s14, s15, s14
 802bd34:	d121      	bne.n	802bd7a <atanf+0x132>
 802bd36:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bd3a:	e794      	b.n	802bc66 <atanf+0x1e>
 802bd3c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802bd40:	ee30 7a67 	vsub.f32	s14, s0, s15
 802bd44:	ee30 0a27 	vadd.f32	s0, s0, s15
 802bd48:	2301      	movs	r3, #1
 802bd4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802bd4e:	e7be      	b.n	802bcce <atanf+0x86>
 802bd50:	4b24      	ldr	r3, [pc, #144]	; (802bde4 <atanf+0x19c>)
 802bd52:	429c      	cmp	r4, r3
 802bd54:	dc0b      	bgt.n	802bd6e <atanf+0x126>
 802bd56:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802bd5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802bd5e:	eea0 7a27 	vfma.f32	s14, s0, s15
 802bd62:	2302      	movs	r3, #2
 802bd64:	ee70 6a67 	vsub.f32	s13, s0, s15
 802bd68:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802bd6c:	e7af      	b.n	802bcce <atanf+0x86>
 802bd6e:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802bd72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802bd76:	2303      	movs	r3, #3
 802bd78:	e7a9      	b.n	802bcce <atanf+0x86>
 802bd7a:	4a1b      	ldr	r2, [pc, #108]	; (802bde8 <atanf+0x1a0>)
 802bd7c:	491b      	ldr	r1, [pc, #108]	; (802bdec <atanf+0x1a4>)
 802bd7e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802bd82:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802bd86:	edd3 6a00 	vldr	s13, [r3]
 802bd8a:	ee37 7a66 	vsub.f32	s14, s14, s13
 802bd8e:	2d00      	cmp	r5, #0
 802bd90:	ee37 7a67 	vsub.f32	s14, s14, s15
 802bd94:	edd2 7a00 	vldr	s15, [r2]
 802bd98:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bd9c:	bfb8      	it	lt
 802bd9e:	eef1 7a67 	vneglt.f32	s15, s15
 802bda2:	e760      	b.n	802bc66 <atanf+0x1e>
 802bda4:	3fc90fdb 	.word	0x3fc90fdb
 802bda8:	bfc90fdb 	.word	0xbfc90fdb
 802bdac:	3edfffff 	.word	0x3edfffff
 802bdb0:	7149f2ca 	.word	0x7149f2ca
 802bdb4:	3f97ffff 	.word	0x3f97ffff
 802bdb8:	3c8569d7 	.word	0x3c8569d7
 802bdbc:	3d4bda59 	.word	0x3d4bda59
 802bdc0:	bd6ef16b 	.word	0xbd6ef16b
 802bdc4:	3d886b35 	.word	0x3d886b35
 802bdc8:	3dba2e6e 	.word	0x3dba2e6e
 802bdcc:	3e124925 	.word	0x3e124925
 802bdd0:	3eaaaaab 	.word	0x3eaaaaab
 802bdd4:	bd15a221 	.word	0xbd15a221
 802bdd8:	bd9d8795 	.word	0xbd9d8795
 802bddc:	bde38e38 	.word	0xbde38e38
 802bde0:	be4ccccd 	.word	0xbe4ccccd
 802bde4:	401bffff 	.word	0x401bffff
 802bde8:	0804480c 	.word	0x0804480c
 802bdec:	0804481c 	.word	0x0804481c

0802bdf0 <cosf>:
 802bdf0:	ee10 3a10 	vmov	r3, s0
 802bdf4:	b507      	push	{r0, r1, r2, lr}
 802bdf6:	4a1e      	ldr	r2, [pc, #120]	; (802be70 <cosf+0x80>)
 802bdf8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802bdfc:	4293      	cmp	r3, r2
 802bdfe:	dc06      	bgt.n	802be0e <cosf+0x1e>
 802be00:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802be74 <cosf+0x84>
 802be04:	b003      	add	sp, #12
 802be06:	f85d eb04 	ldr.w	lr, [sp], #4
 802be0a:	f000 b90b 	b.w	802c024 <__kernel_cosf>
 802be0e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802be12:	db04      	blt.n	802be1e <cosf+0x2e>
 802be14:	ee30 0a40 	vsub.f32	s0, s0, s0
 802be18:	b003      	add	sp, #12
 802be1a:	f85d fb04 	ldr.w	pc, [sp], #4
 802be1e:	4668      	mov	r0, sp
 802be20:	f000 f9a6 	bl	802c170 <__ieee754_rem_pio2f>
 802be24:	f000 0003 	and.w	r0, r0, #3
 802be28:	2801      	cmp	r0, #1
 802be2a:	d009      	beq.n	802be40 <cosf+0x50>
 802be2c:	2802      	cmp	r0, #2
 802be2e:	d010      	beq.n	802be52 <cosf+0x62>
 802be30:	b9b0      	cbnz	r0, 802be60 <cosf+0x70>
 802be32:	eddd 0a01 	vldr	s1, [sp, #4]
 802be36:	ed9d 0a00 	vldr	s0, [sp]
 802be3a:	f000 f8f3 	bl	802c024 <__kernel_cosf>
 802be3e:	e7eb      	b.n	802be18 <cosf+0x28>
 802be40:	eddd 0a01 	vldr	s1, [sp, #4]
 802be44:	ed9d 0a00 	vldr	s0, [sp]
 802be48:	f000 f94a 	bl	802c0e0 <__kernel_sinf>
 802be4c:	eeb1 0a40 	vneg.f32	s0, s0
 802be50:	e7e2      	b.n	802be18 <cosf+0x28>
 802be52:	eddd 0a01 	vldr	s1, [sp, #4]
 802be56:	ed9d 0a00 	vldr	s0, [sp]
 802be5a:	f000 f8e3 	bl	802c024 <__kernel_cosf>
 802be5e:	e7f5      	b.n	802be4c <cosf+0x5c>
 802be60:	eddd 0a01 	vldr	s1, [sp, #4]
 802be64:	ed9d 0a00 	vldr	s0, [sp]
 802be68:	2001      	movs	r0, #1
 802be6a:	f000 f939 	bl	802c0e0 <__kernel_sinf>
 802be6e:	e7d3      	b.n	802be18 <cosf+0x28>
 802be70:	3f490fd8 	.word	0x3f490fd8
 802be74:	00000000 	.word	0x00000000

0802be78 <fabsf>:
 802be78:	ee10 3a10 	vmov	r3, s0
 802be7c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802be80:	ee00 3a10 	vmov	s0, r3
 802be84:	4770      	bx	lr
	...

0802be88 <sinf>:
 802be88:	ee10 3a10 	vmov	r3, s0
 802be8c:	b507      	push	{r0, r1, r2, lr}
 802be8e:	4a1f      	ldr	r2, [pc, #124]	; (802bf0c <sinf+0x84>)
 802be90:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802be94:	4293      	cmp	r3, r2
 802be96:	dc07      	bgt.n	802bea8 <sinf+0x20>
 802be98:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802bf10 <sinf+0x88>
 802be9c:	2000      	movs	r0, #0
 802be9e:	b003      	add	sp, #12
 802bea0:	f85d eb04 	ldr.w	lr, [sp], #4
 802bea4:	f000 b91c 	b.w	802c0e0 <__kernel_sinf>
 802bea8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802beac:	db04      	blt.n	802beb8 <sinf+0x30>
 802beae:	ee30 0a40 	vsub.f32	s0, s0, s0
 802beb2:	b003      	add	sp, #12
 802beb4:	f85d fb04 	ldr.w	pc, [sp], #4
 802beb8:	4668      	mov	r0, sp
 802beba:	f000 f959 	bl	802c170 <__ieee754_rem_pio2f>
 802bebe:	f000 0003 	and.w	r0, r0, #3
 802bec2:	2801      	cmp	r0, #1
 802bec4:	d00a      	beq.n	802bedc <sinf+0x54>
 802bec6:	2802      	cmp	r0, #2
 802bec8:	d00f      	beq.n	802beea <sinf+0x62>
 802beca:	b9c0      	cbnz	r0, 802befe <sinf+0x76>
 802becc:	eddd 0a01 	vldr	s1, [sp, #4]
 802bed0:	ed9d 0a00 	vldr	s0, [sp]
 802bed4:	2001      	movs	r0, #1
 802bed6:	f000 f903 	bl	802c0e0 <__kernel_sinf>
 802beda:	e7ea      	b.n	802beb2 <sinf+0x2a>
 802bedc:	eddd 0a01 	vldr	s1, [sp, #4]
 802bee0:	ed9d 0a00 	vldr	s0, [sp]
 802bee4:	f000 f89e 	bl	802c024 <__kernel_cosf>
 802bee8:	e7e3      	b.n	802beb2 <sinf+0x2a>
 802beea:	eddd 0a01 	vldr	s1, [sp, #4]
 802beee:	ed9d 0a00 	vldr	s0, [sp]
 802bef2:	2001      	movs	r0, #1
 802bef4:	f000 f8f4 	bl	802c0e0 <__kernel_sinf>
 802bef8:	eeb1 0a40 	vneg.f32	s0, s0
 802befc:	e7d9      	b.n	802beb2 <sinf+0x2a>
 802befe:	eddd 0a01 	vldr	s1, [sp, #4]
 802bf02:	ed9d 0a00 	vldr	s0, [sp]
 802bf06:	f000 f88d 	bl	802c024 <__kernel_cosf>
 802bf0a:	e7f5      	b.n	802bef8 <sinf+0x70>
 802bf0c:	3f490fd8 	.word	0x3f490fd8
 802bf10:	00000000 	.word	0x00000000

0802bf14 <__ieee754_sqrtf>:
 802bf14:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802bf18:	4770      	bx	lr
	...

0802bf1c <ceilf>:
 802bf1c:	ee10 3a10 	vmov	r3, s0
 802bf20:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802bf24:	3a7f      	subs	r2, #127	; 0x7f
 802bf26:	2a16      	cmp	r2, #22
 802bf28:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802bf2c:	dc2a      	bgt.n	802bf84 <ceilf+0x68>
 802bf2e:	2a00      	cmp	r2, #0
 802bf30:	da11      	bge.n	802bf56 <ceilf+0x3a>
 802bf32:	eddf 7a19 	vldr	s15, [pc, #100]	; 802bf98 <ceilf+0x7c>
 802bf36:	ee30 0a27 	vadd.f32	s0, s0, s15
 802bf3a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802bf3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bf42:	dd05      	ble.n	802bf50 <ceilf+0x34>
 802bf44:	2b00      	cmp	r3, #0
 802bf46:	db23      	blt.n	802bf90 <ceilf+0x74>
 802bf48:	2900      	cmp	r1, #0
 802bf4a:	bf18      	it	ne
 802bf4c:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802bf50:	ee00 3a10 	vmov	s0, r3
 802bf54:	4770      	bx	lr
 802bf56:	4911      	ldr	r1, [pc, #68]	; (802bf9c <ceilf+0x80>)
 802bf58:	4111      	asrs	r1, r2
 802bf5a:	420b      	tst	r3, r1
 802bf5c:	d0fa      	beq.n	802bf54 <ceilf+0x38>
 802bf5e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802bf98 <ceilf+0x7c>
 802bf62:	ee30 0a27 	vadd.f32	s0, s0, s15
 802bf66:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802bf6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bf6e:	ddef      	ble.n	802bf50 <ceilf+0x34>
 802bf70:	2b00      	cmp	r3, #0
 802bf72:	bfc2      	ittt	gt
 802bf74:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802bf78:	fa40 f202 	asrgt.w	r2, r0, r2
 802bf7c:	189b      	addgt	r3, r3, r2
 802bf7e:	ea23 0301 	bic.w	r3, r3, r1
 802bf82:	e7e5      	b.n	802bf50 <ceilf+0x34>
 802bf84:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802bf88:	d3e4      	bcc.n	802bf54 <ceilf+0x38>
 802bf8a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802bf8e:	4770      	bx	lr
 802bf90:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802bf94:	e7dc      	b.n	802bf50 <ceilf+0x34>
 802bf96:	bf00      	nop
 802bf98:	7149f2ca 	.word	0x7149f2ca
 802bf9c:	007fffff 	.word	0x007fffff

0802bfa0 <floorf>:
 802bfa0:	ee10 3a10 	vmov	r3, s0
 802bfa4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802bfa8:	3a7f      	subs	r2, #127	; 0x7f
 802bfaa:	2a16      	cmp	r2, #22
 802bfac:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802bfb0:	dc2a      	bgt.n	802c008 <floorf+0x68>
 802bfb2:	2a00      	cmp	r2, #0
 802bfb4:	da11      	bge.n	802bfda <floorf+0x3a>
 802bfb6:	eddf 7a18 	vldr	s15, [pc, #96]	; 802c018 <floorf+0x78>
 802bfba:	ee30 0a27 	vadd.f32	s0, s0, s15
 802bfbe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802bfc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bfc6:	dd05      	ble.n	802bfd4 <floorf+0x34>
 802bfc8:	2b00      	cmp	r3, #0
 802bfca:	da23      	bge.n	802c014 <floorf+0x74>
 802bfcc:	4a13      	ldr	r2, [pc, #76]	; (802c01c <floorf+0x7c>)
 802bfce:	2900      	cmp	r1, #0
 802bfd0:	bf18      	it	ne
 802bfd2:	4613      	movne	r3, r2
 802bfd4:	ee00 3a10 	vmov	s0, r3
 802bfd8:	4770      	bx	lr
 802bfda:	4911      	ldr	r1, [pc, #68]	; (802c020 <floorf+0x80>)
 802bfdc:	4111      	asrs	r1, r2
 802bfde:	420b      	tst	r3, r1
 802bfe0:	d0fa      	beq.n	802bfd8 <floorf+0x38>
 802bfe2:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802c018 <floorf+0x78>
 802bfe6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802bfea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802bfee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bff2:	ddef      	ble.n	802bfd4 <floorf+0x34>
 802bff4:	2b00      	cmp	r3, #0
 802bff6:	bfbe      	ittt	lt
 802bff8:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802bffc:	fa40 f202 	asrlt.w	r2, r0, r2
 802c000:	189b      	addlt	r3, r3, r2
 802c002:	ea23 0301 	bic.w	r3, r3, r1
 802c006:	e7e5      	b.n	802bfd4 <floorf+0x34>
 802c008:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802c00c:	d3e4      	bcc.n	802bfd8 <floorf+0x38>
 802c00e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802c012:	4770      	bx	lr
 802c014:	2300      	movs	r3, #0
 802c016:	e7dd      	b.n	802bfd4 <floorf+0x34>
 802c018:	7149f2ca 	.word	0x7149f2ca
 802c01c:	bf800000 	.word	0xbf800000
 802c020:	007fffff 	.word	0x007fffff

0802c024 <__kernel_cosf>:
 802c024:	ee10 3a10 	vmov	r3, s0
 802c028:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802c02c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802c030:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802c034:	da05      	bge.n	802c042 <__kernel_cosf+0x1e>
 802c036:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802c03a:	ee17 2a90 	vmov	r2, s15
 802c03e:	2a00      	cmp	r2, #0
 802c040:	d03b      	beq.n	802c0ba <__kernel_cosf+0x96>
 802c042:	ee20 7a00 	vmul.f32	s14, s0, s0
 802c046:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802c0c0 <__kernel_cosf+0x9c>
 802c04a:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802c0c4 <__kernel_cosf+0xa0>
 802c04e:	4a1e      	ldr	r2, [pc, #120]	; (802c0c8 <__kernel_cosf+0xa4>)
 802c050:	eea7 6a27 	vfma.f32	s12, s14, s15
 802c054:	4293      	cmp	r3, r2
 802c056:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802c0cc <__kernel_cosf+0xa8>
 802c05a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802c05e:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802c0d0 <__kernel_cosf+0xac>
 802c062:	eea7 6a87 	vfma.f32	s12, s15, s14
 802c066:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802c0d4 <__kernel_cosf+0xb0>
 802c06a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802c06e:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802c0d8 <__kernel_cosf+0xb4>
 802c072:	eea7 6a87 	vfma.f32	s12, s15, s14
 802c076:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802c07a:	ee26 6a07 	vmul.f32	s12, s12, s14
 802c07e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802c082:	eee7 0a06 	vfma.f32	s1, s14, s12
 802c086:	ee67 7a27 	vmul.f32	s15, s14, s15
 802c08a:	dc04      	bgt.n	802c096 <__kernel_cosf+0x72>
 802c08c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802c090:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802c094:	4770      	bx	lr
 802c096:	4a11      	ldr	r2, [pc, #68]	; (802c0dc <__kernel_cosf+0xb8>)
 802c098:	4293      	cmp	r3, r2
 802c09a:	bfda      	itte	le
 802c09c:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802c0a0:	ee07 3a10 	vmovle	s14, r3
 802c0a4:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802c0a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c0ac:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802c0b0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802c0b4:	ee30 0a67 	vsub.f32	s0, s0, s15
 802c0b8:	4770      	bx	lr
 802c0ba:	eeb0 0a66 	vmov.f32	s0, s13
 802c0be:	4770      	bx	lr
 802c0c0:	ad47d74e 	.word	0xad47d74e
 802c0c4:	310f74f6 	.word	0x310f74f6
 802c0c8:	3e999999 	.word	0x3e999999
 802c0cc:	b493f27c 	.word	0xb493f27c
 802c0d0:	37d00d01 	.word	0x37d00d01
 802c0d4:	bab60b61 	.word	0xbab60b61
 802c0d8:	3d2aaaab 	.word	0x3d2aaaab
 802c0dc:	3f480000 	.word	0x3f480000

0802c0e0 <__kernel_sinf>:
 802c0e0:	ee10 3a10 	vmov	r3, s0
 802c0e4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802c0e8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802c0ec:	da04      	bge.n	802c0f8 <__kernel_sinf+0x18>
 802c0ee:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802c0f2:	ee17 3a90 	vmov	r3, s15
 802c0f6:	b35b      	cbz	r3, 802c150 <__kernel_sinf+0x70>
 802c0f8:	ee20 7a00 	vmul.f32	s14, s0, s0
 802c0fc:	eddf 7a15 	vldr	s15, [pc, #84]	; 802c154 <__kernel_sinf+0x74>
 802c100:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802c158 <__kernel_sinf+0x78>
 802c104:	eea7 6a27 	vfma.f32	s12, s14, s15
 802c108:	eddf 7a14 	vldr	s15, [pc, #80]	; 802c15c <__kernel_sinf+0x7c>
 802c10c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802c110:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802c160 <__kernel_sinf+0x80>
 802c114:	eea7 6a87 	vfma.f32	s12, s15, s14
 802c118:	eddf 7a12 	vldr	s15, [pc, #72]	; 802c164 <__kernel_sinf+0x84>
 802c11c:	ee60 6a07 	vmul.f32	s13, s0, s14
 802c120:	eee6 7a07 	vfma.f32	s15, s12, s14
 802c124:	b930      	cbnz	r0, 802c134 <__kernel_sinf+0x54>
 802c126:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802c168 <__kernel_sinf+0x88>
 802c12a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802c12e:	eea6 0a26 	vfma.f32	s0, s12, s13
 802c132:	4770      	bx	lr
 802c134:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c138:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802c13c:	eee0 7a86 	vfma.f32	s15, s1, s12
 802c140:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802c144:	eddf 7a09 	vldr	s15, [pc, #36]	; 802c16c <__kernel_sinf+0x8c>
 802c148:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802c14c:	ee30 0a60 	vsub.f32	s0, s0, s1
 802c150:	4770      	bx	lr
 802c152:	bf00      	nop
 802c154:	2f2ec9d3 	.word	0x2f2ec9d3
 802c158:	b2d72f34 	.word	0xb2d72f34
 802c15c:	3638ef1b 	.word	0x3638ef1b
 802c160:	b9500d01 	.word	0xb9500d01
 802c164:	3c088889 	.word	0x3c088889
 802c168:	be2aaaab 	.word	0xbe2aaaab
 802c16c:	3e2aaaab 	.word	0x3e2aaaab

0802c170 <__ieee754_rem_pio2f>:
 802c170:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c172:	ee10 6a10 	vmov	r6, s0
 802c176:	4b86      	ldr	r3, [pc, #536]	; (802c390 <__ieee754_rem_pio2f+0x220>)
 802c178:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802c17c:	429d      	cmp	r5, r3
 802c17e:	b087      	sub	sp, #28
 802c180:	4604      	mov	r4, r0
 802c182:	dc05      	bgt.n	802c190 <__ieee754_rem_pio2f+0x20>
 802c184:	2300      	movs	r3, #0
 802c186:	ed80 0a00 	vstr	s0, [r0]
 802c18a:	6043      	str	r3, [r0, #4]
 802c18c:	2000      	movs	r0, #0
 802c18e:	e020      	b.n	802c1d2 <__ieee754_rem_pio2f+0x62>
 802c190:	4b80      	ldr	r3, [pc, #512]	; (802c394 <__ieee754_rem_pio2f+0x224>)
 802c192:	429d      	cmp	r5, r3
 802c194:	dc38      	bgt.n	802c208 <__ieee754_rem_pio2f+0x98>
 802c196:	2e00      	cmp	r6, #0
 802c198:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802c398 <__ieee754_rem_pio2f+0x228>
 802c19c:	4b7f      	ldr	r3, [pc, #508]	; (802c39c <__ieee754_rem_pio2f+0x22c>)
 802c19e:	f025 050f 	bic.w	r5, r5, #15
 802c1a2:	dd18      	ble.n	802c1d6 <__ieee754_rem_pio2f+0x66>
 802c1a4:	429d      	cmp	r5, r3
 802c1a6:	ee70 7a47 	vsub.f32	s15, s0, s14
 802c1aa:	bf09      	itett	eq
 802c1ac:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802c3a0 <__ieee754_rem_pio2f+0x230>
 802c1b0:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802c3a4 <__ieee754_rem_pio2f+0x234>
 802c1b4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802c1b8:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802c3a8 <__ieee754_rem_pio2f+0x238>
 802c1bc:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802c1c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c1c4:	edc0 6a00 	vstr	s13, [r0]
 802c1c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c1cc:	edc0 7a01 	vstr	s15, [r0, #4]
 802c1d0:	2001      	movs	r0, #1
 802c1d2:	b007      	add	sp, #28
 802c1d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c1d6:	429d      	cmp	r5, r3
 802c1d8:	ee70 7a07 	vadd.f32	s15, s0, s14
 802c1dc:	bf09      	itett	eq
 802c1de:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802c3a0 <__ieee754_rem_pio2f+0x230>
 802c1e2:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802c3a4 <__ieee754_rem_pio2f+0x234>
 802c1e6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802c1ea:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802c3a8 <__ieee754_rem_pio2f+0x238>
 802c1ee:	ee77 6a87 	vadd.f32	s13, s15, s14
 802c1f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c1f6:	edc0 6a00 	vstr	s13, [r0]
 802c1fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 802c1fe:	edc0 7a01 	vstr	s15, [r0, #4]
 802c202:	f04f 30ff 	mov.w	r0, #4294967295
 802c206:	e7e4      	b.n	802c1d2 <__ieee754_rem_pio2f+0x62>
 802c208:	4b68      	ldr	r3, [pc, #416]	; (802c3ac <__ieee754_rem_pio2f+0x23c>)
 802c20a:	429d      	cmp	r5, r3
 802c20c:	dc71      	bgt.n	802c2f2 <__ieee754_rem_pio2f+0x182>
 802c20e:	f7ff fe33 	bl	802be78 <fabsf>
 802c212:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802c3b0 <__ieee754_rem_pio2f+0x240>
 802c216:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802c21a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802c21e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802c222:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802c226:	ee17 0a90 	vmov	r0, s15
 802c22a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802c398 <__ieee754_rem_pio2f+0x228>
 802c22e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802c232:	281f      	cmp	r0, #31
 802c234:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802c3a4 <__ieee754_rem_pio2f+0x234>
 802c238:	ee67 7a27 	vmul.f32	s15, s14, s15
 802c23c:	eeb1 6a47 	vneg.f32	s12, s14
 802c240:	ee70 6a67 	vsub.f32	s13, s0, s15
 802c244:	ee16 2a90 	vmov	r2, s13
 802c248:	dc1c      	bgt.n	802c284 <__ieee754_rem_pio2f+0x114>
 802c24a:	495a      	ldr	r1, [pc, #360]	; (802c3b4 <__ieee754_rem_pio2f+0x244>)
 802c24c:	1e47      	subs	r7, r0, #1
 802c24e:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802c252:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802c256:	428b      	cmp	r3, r1
 802c258:	d014      	beq.n	802c284 <__ieee754_rem_pio2f+0x114>
 802c25a:	6022      	str	r2, [r4, #0]
 802c25c:	ed94 7a00 	vldr	s14, [r4]
 802c260:	ee30 0a47 	vsub.f32	s0, s0, s14
 802c264:	2e00      	cmp	r6, #0
 802c266:	ee30 0a67 	vsub.f32	s0, s0, s15
 802c26a:	ed84 0a01 	vstr	s0, [r4, #4]
 802c26e:	dab0      	bge.n	802c1d2 <__ieee754_rem_pio2f+0x62>
 802c270:	eeb1 7a47 	vneg.f32	s14, s14
 802c274:	eeb1 0a40 	vneg.f32	s0, s0
 802c278:	ed84 7a00 	vstr	s14, [r4]
 802c27c:	ed84 0a01 	vstr	s0, [r4, #4]
 802c280:	4240      	negs	r0, r0
 802c282:	e7a6      	b.n	802c1d2 <__ieee754_rem_pio2f+0x62>
 802c284:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802c288:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802c28c:	2908      	cmp	r1, #8
 802c28e:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802c292:	dde2      	ble.n	802c25a <__ieee754_rem_pio2f+0xea>
 802c294:	eddf 5a42 	vldr	s11, [pc, #264]	; 802c3a0 <__ieee754_rem_pio2f+0x230>
 802c298:	eef0 6a40 	vmov.f32	s13, s0
 802c29c:	eee6 6a25 	vfma.f32	s13, s12, s11
 802c2a0:	ee70 7a66 	vsub.f32	s15, s0, s13
 802c2a4:	eee6 7a25 	vfma.f32	s15, s12, s11
 802c2a8:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802c3a8 <__ieee754_rem_pio2f+0x238>
 802c2ac:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802c2b0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c2b4:	ee15 2a90 	vmov	r2, s11
 802c2b8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802c2bc:	1a5b      	subs	r3, r3, r1
 802c2be:	2b19      	cmp	r3, #25
 802c2c0:	dc04      	bgt.n	802c2cc <__ieee754_rem_pio2f+0x15c>
 802c2c2:	edc4 5a00 	vstr	s11, [r4]
 802c2c6:	eeb0 0a66 	vmov.f32	s0, s13
 802c2ca:	e7c7      	b.n	802c25c <__ieee754_rem_pio2f+0xec>
 802c2cc:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802c3b8 <__ieee754_rem_pio2f+0x248>
 802c2d0:	eeb0 0a66 	vmov.f32	s0, s13
 802c2d4:	eea6 0a25 	vfma.f32	s0, s12, s11
 802c2d8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802c2dc:	eddf 6a37 	vldr	s13, [pc, #220]	; 802c3bc <__ieee754_rem_pio2f+0x24c>
 802c2e0:	eee6 7a25 	vfma.f32	s15, s12, s11
 802c2e4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802c2e8:	ee30 7a67 	vsub.f32	s14, s0, s15
 802c2ec:	ed84 7a00 	vstr	s14, [r4]
 802c2f0:	e7b4      	b.n	802c25c <__ieee754_rem_pio2f+0xec>
 802c2f2:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802c2f6:	db06      	blt.n	802c306 <__ieee754_rem_pio2f+0x196>
 802c2f8:	ee70 7a40 	vsub.f32	s15, s0, s0
 802c2fc:	edc0 7a01 	vstr	s15, [r0, #4]
 802c300:	edc0 7a00 	vstr	s15, [r0]
 802c304:	e742      	b.n	802c18c <__ieee754_rem_pio2f+0x1c>
 802c306:	15ea      	asrs	r2, r5, #23
 802c308:	3a86      	subs	r2, #134	; 0x86
 802c30a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802c30e:	ee07 3a90 	vmov	s15, r3
 802c312:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802c316:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802c3c0 <__ieee754_rem_pio2f+0x250>
 802c31a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802c31e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c322:	ed8d 7a03 	vstr	s14, [sp, #12]
 802c326:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802c32a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802c32e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802c332:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c336:	ed8d 7a04 	vstr	s14, [sp, #16]
 802c33a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802c33e:	eef5 7a40 	vcmp.f32	s15, #0.0
 802c342:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c346:	edcd 7a05 	vstr	s15, [sp, #20]
 802c34a:	d11e      	bne.n	802c38a <__ieee754_rem_pio2f+0x21a>
 802c34c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802c350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c354:	bf14      	ite	ne
 802c356:	2302      	movne	r3, #2
 802c358:	2301      	moveq	r3, #1
 802c35a:	491a      	ldr	r1, [pc, #104]	; (802c3c4 <__ieee754_rem_pio2f+0x254>)
 802c35c:	9101      	str	r1, [sp, #4]
 802c35e:	2102      	movs	r1, #2
 802c360:	9100      	str	r1, [sp, #0]
 802c362:	a803      	add	r0, sp, #12
 802c364:	4621      	mov	r1, r4
 802c366:	f000 f895 	bl	802c494 <__kernel_rem_pio2f>
 802c36a:	2e00      	cmp	r6, #0
 802c36c:	f6bf af31 	bge.w	802c1d2 <__ieee754_rem_pio2f+0x62>
 802c370:	edd4 7a00 	vldr	s15, [r4]
 802c374:	eef1 7a67 	vneg.f32	s15, s15
 802c378:	edc4 7a00 	vstr	s15, [r4]
 802c37c:	edd4 7a01 	vldr	s15, [r4, #4]
 802c380:	eef1 7a67 	vneg.f32	s15, s15
 802c384:	edc4 7a01 	vstr	s15, [r4, #4]
 802c388:	e77a      	b.n	802c280 <__ieee754_rem_pio2f+0x110>
 802c38a:	2303      	movs	r3, #3
 802c38c:	e7e5      	b.n	802c35a <__ieee754_rem_pio2f+0x1ea>
 802c38e:	bf00      	nop
 802c390:	3f490fd8 	.word	0x3f490fd8
 802c394:	4016cbe3 	.word	0x4016cbe3
 802c398:	3fc90f80 	.word	0x3fc90f80
 802c39c:	3fc90fd0 	.word	0x3fc90fd0
 802c3a0:	37354400 	.word	0x37354400
 802c3a4:	37354443 	.word	0x37354443
 802c3a8:	2e85a308 	.word	0x2e85a308
 802c3ac:	43490f80 	.word	0x43490f80
 802c3b0:	3f22f984 	.word	0x3f22f984
 802c3b4:	0804482c 	.word	0x0804482c
 802c3b8:	2e85a300 	.word	0x2e85a300
 802c3bc:	248d3132 	.word	0x248d3132
 802c3c0:	43800000 	.word	0x43800000
 802c3c4:	080448ac 	.word	0x080448ac

0802c3c8 <scalbnf>:
 802c3c8:	ee10 3a10 	vmov	r3, s0
 802c3cc:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802c3d0:	d02b      	beq.n	802c42a <scalbnf+0x62>
 802c3d2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802c3d6:	d302      	bcc.n	802c3de <scalbnf+0x16>
 802c3d8:	ee30 0a00 	vadd.f32	s0, s0, s0
 802c3dc:	4770      	bx	lr
 802c3de:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802c3e2:	d123      	bne.n	802c42c <scalbnf+0x64>
 802c3e4:	4b24      	ldr	r3, [pc, #144]	; (802c478 <scalbnf+0xb0>)
 802c3e6:	eddf 7a25 	vldr	s15, [pc, #148]	; 802c47c <scalbnf+0xb4>
 802c3ea:	4298      	cmp	r0, r3
 802c3ec:	ee20 0a27 	vmul.f32	s0, s0, s15
 802c3f0:	db17      	blt.n	802c422 <scalbnf+0x5a>
 802c3f2:	ee10 3a10 	vmov	r3, s0
 802c3f6:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802c3fa:	3a19      	subs	r2, #25
 802c3fc:	f24c 3150 	movw	r1, #50000	; 0xc350
 802c400:	4288      	cmp	r0, r1
 802c402:	dd15      	ble.n	802c430 <scalbnf+0x68>
 802c404:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802c480 <scalbnf+0xb8>
 802c408:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802c484 <scalbnf+0xbc>
 802c40c:	ee10 3a10 	vmov	r3, s0
 802c410:	eeb0 7a67 	vmov.f32	s14, s15
 802c414:	2b00      	cmp	r3, #0
 802c416:	bfb8      	it	lt
 802c418:	eef0 7a66 	vmovlt.f32	s15, s13
 802c41c:	ee27 0a87 	vmul.f32	s0, s15, s14
 802c420:	4770      	bx	lr
 802c422:	eddf 7a19 	vldr	s15, [pc, #100]	; 802c488 <scalbnf+0xc0>
 802c426:	ee27 0a80 	vmul.f32	s0, s15, s0
 802c42a:	4770      	bx	lr
 802c42c:	0dd2      	lsrs	r2, r2, #23
 802c42e:	e7e5      	b.n	802c3fc <scalbnf+0x34>
 802c430:	4410      	add	r0, r2
 802c432:	28fe      	cmp	r0, #254	; 0xfe
 802c434:	dce6      	bgt.n	802c404 <scalbnf+0x3c>
 802c436:	2800      	cmp	r0, #0
 802c438:	dd06      	ble.n	802c448 <scalbnf+0x80>
 802c43a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802c43e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802c442:	ee00 3a10 	vmov	s0, r3
 802c446:	4770      	bx	lr
 802c448:	f110 0f16 	cmn.w	r0, #22
 802c44c:	da09      	bge.n	802c462 <scalbnf+0x9a>
 802c44e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802c488 <scalbnf+0xc0>
 802c452:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802c48c <scalbnf+0xc4>
 802c456:	ee10 3a10 	vmov	r3, s0
 802c45a:	eeb0 7a67 	vmov.f32	s14, s15
 802c45e:	2b00      	cmp	r3, #0
 802c460:	e7d9      	b.n	802c416 <scalbnf+0x4e>
 802c462:	3019      	adds	r0, #25
 802c464:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802c468:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802c46c:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802c490 <scalbnf+0xc8>
 802c470:	ee07 3a90 	vmov	s15, r3
 802c474:	e7d7      	b.n	802c426 <scalbnf+0x5e>
 802c476:	bf00      	nop
 802c478:	ffff3cb0 	.word	0xffff3cb0
 802c47c:	4c000000 	.word	0x4c000000
 802c480:	7149f2ca 	.word	0x7149f2ca
 802c484:	f149f2ca 	.word	0xf149f2ca
 802c488:	0da24260 	.word	0x0da24260
 802c48c:	8da24260 	.word	0x8da24260
 802c490:	33000000 	.word	0x33000000

0802c494 <__kernel_rem_pio2f>:
 802c494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c498:	ed2d 8b04 	vpush	{d8-d9}
 802c49c:	b0d9      	sub	sp, #356	; 0x164
 802c49e:	4688      	mov	r8, r1
 802c4a0:	9002      	str	r0, [sp, #8]
 802c4a2:	49b8      	ldr	r1, [pc, #736]	; (802c784 <__kernel_rem_pio2f+0x2f0>)
 802c4a4:	9866      	ldr	r0, [sp, #408]	; 0x198
 802c4a6:	9301      	str	r3, [sp, #4]
 802c4a8:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802c4ac:	9901      	ldr	r1, [sp, #4]
 802c4ae:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802c4b0:	f101 3bff 	add.w	fp, r1, #4294967295
 802c4b4:	1d11      	adds	r1, r2, #4
 802c4b6:	db25      	blt.n	802c504 <__kernel_rem_pio2f+0x70>
 802c4b8:	1ed0      	subs	r0, r2, #3
 802c4ba:	bf48      	it	mi
 802c4bc:	1d10      	addmi	r0, r2, #4
 802c4be:	10c0      	asrs	r0, r0, #3
 802c4c0:	1c45      	adds	r5, r0, #1
 802c4c2:	00e9      	lsls	r1, r5, #3
 802c4c4:	eba0 070b 	sub.w	r7, r0, fp
 802c4c8:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802c794 <__kernel_rem_pio2f+0x300>
 802c4cc:	9103      	str	r1, [sp, #12]
 802c4ce:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802c4d2:	eb0a 0c0b 	add.w	ip, sl, fp
 802c4d6:	ae1c      	add	r6, sp, #112	; 0x70
 802c4d8:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802c4dc:	2400      	movs	r4, #0
 802c4de:	4564      	cmp	r4, ip
 802c4e0:	dd12      	ble.n	802c508 <__kernel_rem_pio2f+0x74>
 802c4e2:	9901      	ldr	r1, [sp, #4]
 802c4e4:	ac1c      	add	r4, sp, #112	; 0x70
 802c4e6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802c4ea:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802c4ee:	f04f 0c00 	mov.w	ip, #0
 802c4f2:	45d4      	cmp	ip, sl
 802c4f4:	dc27      	bgt.n	802c546 <__kernel_rem_pio2f+0xb2>
 802c4f6:	f8dd e008 	ldr.w	lr, [sp, #8]
 802c4fa:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802c794 <__kernel_rem_pio2f+0x300>
 802c4fe:	4627      	mov	r7, r4
 802c500:	2600      	movs	r6, #0
 802c502:	e016      	b.n	802c532 <__kernel_rem_pio2f+0x9e>
 802c504:	2000      	movs	r0, #0
 802c506:	e7db      	b.n	802c4c0 <__kernel_rem_pio2f+0x2c>
 802c508:	42e7      	cmn	r7, r4
 802c50a:	bf5d      	ittte	pl
 802c50c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802c510:	ee07 1a90 	vmovpl	s15, r1
 802c514:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802c518:	eef0 7a47 	vmovmi.f32	s15, s14
 802c51c:	ece6 7a01 	vstmia	r6!, {s15}
 802c520:	3401      	adds	r4, #1
 802c522:	e7dc      	b.n	802c4de <__kernel_rem_pio2f+0x4a>
 802c524:	ecfe 6a01 	vldmia	lr!, {s13}
 802c528:	ed97 7a00 	vldr	s14, [r7]
 802c52c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802c530:	3601      	adds	r6, #1
 802c532:	455e      	cmp	r6, fp
 802c534:	f1a7 0704 	sub.w	r7, r7, #4
 802c538:	ddf4      	ble.n	802c524 <__kernel_rem_pio2f+0x90>
 802c53a:	ece9 7a01 	vstmia	r9!, {s15}
 802c53e:	f10c 0c01 	add.w	ip, ip, #1
 802c542:	3404      	adds	r4, #4
 802c544:	e7d5      	b.n	802c4f2 <__kernel_rem_pio2f+0x5e>
 802c546:	a908      	add	r1, sp, #32
 802c548:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802c54c:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802c550:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802c790 <__kernel_rem_pio2f+0x2fc>
 802c554:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802c78c <__kernel_rem_pio2f+0x2f8>
 802c558:	9105      	str	r1, [sp, #20]
 802c55a:	9304      	str	r3, [sp, #16]
 802c55c:	4656      	mov	r6, sl
 802c55e:	00b3      	lsls	r3, r6, #2
 802c560:	9306      	str	r3, [sp, #24]
 802c562:	ab58      	add	r3, sp, #352	; 0x160
 802c564:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802c568:	ac08      	add	r4, sp, #32
 802c56a:	ab44      	add	r3, sp, #272	; 0x110
 802c56c:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802c570:	46a4      	mov	ip, r4
 802c572:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802c576:	4637      	mov	r7, r6
 802c578:	2f00      	cmp	r7, #0
 802c57a:	f1a0 0004 	sub.w	r0, r0, #4
 802c57e:	dc4a      	bgt.n	802c616 <__kernel_rem_pio2f+0x182>
 802c580:	4628      	mov	r0, r5
 802c582:	9207      	str	r2, [sp, #28]
 802c584:	f7ff ff20 	bl	802c3c8 <scalbnf>
 802c588:	eeb0 8a40 	vmov.f32	s16, s0
 802c58c:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802c590:	ee28 0a00 	vmul.f32	s0, s16, s0
 802c594:	f7ff fd04 	bl	802bfa0 <floorf>
 802c598:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802c59c:	eea0 8a67 	vfms.f32	s16, s0, s15
 802c5a0:	2d00      	cmp	r5, #0
 802c5a2:	9a07      	ldr	r2, [sp, #28]
 802c5a4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802c5a8:	ee17 9a90 	vmov	r9, s15
 802c5ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802c5b0:	ee38 8a67 	vsub.f32	s16, s16, s15
 802c5b4:	dd41      	ble.n	802c63a <__kernel_rem_pio2f+0x1a6>
 802c5b6:	f106 3cff 	add.w	ip, r6, #4294967295
 802c5ba:	ab08      	add	r3, sp, #32
 802c5bc:	f1c5 0e08 	rsb	lr, r5, #8
 802c5c0:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802c5c4:	fa47 f00e 	asr.w	r0, r7, lr
 802c5c8:	4481      	add	r9, r0
 802c5ca:	fa00 f00e 	lsl.w	r0, r0, lr
 802c5ce:	1a3f      	subs	r7, r7, r0
 802c5d0:	f1c5 0007 	rsb	r0, r5, #7
 802c5d4:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802c5d8:	4107      	asrs	r7, r0
 802c5da:	2f00      	cmp	r7, #0
 802c5dc:	dd3c      	ble.n	802c658 <__kernel_rem_pio2f+0x1c4>
 802c5de:	f04f 0e00 	mov.w	lr, #0
 802c5e2:	f109 0901 	add.w	r9, r9, #1
 802c5e6:	4671      	mov	r1, lr
 802c5e8:	4576      	cmp	r6, lr
 802c5ea:	dc67      	bgt.n	802c6bc <__kernel_rem_pio2f+0x228>
 802c5ec:	2d00      	cmp	r5, #0
 802c5ee:	dd03      	ble.n	802c5f8 <__kernel_rem_pio2f+0x164>
 802c5f0:	2d01      	cmp	r5, #1
 802c5f2:	d074      	beq.n	802c6de <__kernel_rem_pio2f+0x24a>
 802c5f4:	2d02      	cmp	r5, #2
 802c5f6:	d07b      	beq.n	802c6f0 <__kernel_rem_pio2f+0x25c>
 802c5f8:	2f02      	cmp	r7, #2
 802c5fa:	d12d      	bne.n	802c658 <__kernel_rem_pio2f+0x1c4>
 802c5fc:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802c600:	ee30 8a48 	vsub.f32	s16, s0, s16
 802c604:	b341      	cbz	r1, 802c658 <__kernel_rem_pio2f+0x1c4>
 802c606:	4628      	mov	r0, r5
 802c608:	9207      	str	r2, [sp, #28]
 802c60a:	f7ff fedd 	bl	802c3c8 <scalbnf>
 802c60e:	9a07      	ldr	r2, [sp, #28]
 802c610:	ee38 8a40 	vsub.f32	s16, s16, s0
 802c614:	e020      	b.n	802c658 <__kernel_rem_pio2f+0x1c4>
 802c616:	ee60 7a28 	vmul.f32	s15, s0, s17
 802c61a:	3f01      	subs	r7, #1
 802c61c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802c620:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802c624:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802c628:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802c62c:	ecac 0a01 	vstmia	ip!, {s0}
 802c630:	ed90 0a00 	vldr	s0, [r0]
 802c634:	ee37 0a80 	vadd.f32	s0, s15, s0
 802c638:	e79e      	b.n	802c578 <__kernel_rem_pio2f+0xe4>
 802c63a:	d105      	bne.n	802c648 <__kernel_rem_pio2f+0x1b4>
 802c63c:	1e70      	subs	r0, r6, #1
 802c63e:	ab08      	add	r3, sp, #32
 802c640:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802c644:	11ff      	asrs	r7, r7, #7
 802c646:	e7c8      	b.n	802c5da <__kernel_rem_pio2f+0x146>
 802c648:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802c64c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802c650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c654:	da30      	bge.n	802c6b8 <__kernel_rem_pio2f+0x224>
 802c656:	2700      	movs	r7, #0
 802c658:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802c65c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c660:	f040 809a 	bne.w	802c798 <__kernel_rem_pio2f+0x304>
 802c664:	1e74      	subs	r4, r6, #1
 802c666:	46a4      	mov	ip, r4
 802c668:	2100      	movs	r1, #0
 802c66a:	45d4      	cmp	ip, sl
 802c66c:	da47      	bge.n	802c6fe <__kernel_rem_pio2f+0x26a>
 802c66e:	2900      	cmp	r1, #0
 802c670:	d063      	beq.n	802c73a <__kernel_rem_pio2f+0x2a6>
 802c672:	ab08      	add	r3, sp, #32
 802c674:	3d08      	subs	r5, #8
 802c676:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802c67a:	2b00      	cmp	r3, #0
 802c67c:	d07f      	beq.n	802c77e <__kernel_rem_pio2f+0x2ea>
 802c67e:	4628      	mov	r0, r5
 802c680:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802c684:	f7ff fea0 	bl	802c3c8 <scalbnf>
 802c688:	1c63      	adds	r3, r4, #1
 802c68a:	aa44      	add	r2, sp, #272	; 0x110
 802c68c:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802c790 <__kernel_rem_pio2f+0x2fc>
 802c690:	0099      	lsls	r1, r3, #2
 802c692:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802c696:	4623      	mov	r3, r4
 802c698:	2b00      	cmp	r3, #0
 802c69a:	f280 80ad 	bge.w	802c7f8 <__kernel_rem_pio2f+0x364>
 802c69e:	4623      	mov	r3, r4
 802c6a0:	2b00      	cmp	r3, #0
 802c6a2:	f2c0 80cb 	blt.w	802c83c <__kernel_rem_pio2f+0x3a8>
 802c6a6:	aa44      	add	r2, sp, #272	; 0x110
 802c6a8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802c6ac:	4e36      	ldr	r6, [pc, #216]	; (802c788 <__kernel_rem_pio2f+0x2f4>)
 802c6ae:	eddf 7a39 	vldr	s15, [pc, #228]	; 802c794 <__kernel_rem_pio2f+0x300>
 802c6b2:	2000      	movs	r0, #0
 802c6b4:	1ae2      	subs	r2, r4, r3
 802c6b6:	e0b6      	b.n	802c826 <__kernel_rem_pio2f+0x392>
 802c6b8:	2702      	movs	r7, #2
 802c6ba:	e790      	b.n	802c5de <__kernel_rem_pio2f+0x14a>
 802c6bc:	6820      	ldr	r0, [r4, #0]
 802c6be:	b949      	cbnz	r1, 802c6d4 <__kernel_rem_pio2f+0x240>
 802c6c0:	b118      	cbz	r0, 802c6ca <__kernel_rem_pio2f+0x236>
 802c6c2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802c6c6:	6020      	str	r0, [r4, #0]
 802c6c8:	2001      	movs	r0, #1
 802c6ca:	f10e 0e01 	add.w	lr, lr, #1
 802c6ce:	3404      	adds	r4, #4
 802c6d0:	4601      	mov	r1, r0
 802c6d2:	e789      	b.n	802c5e8 <__kernel_rem_pio2f+0x154>
 802c6d4:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802c6d8:	6020      	str	r0, [r4, #0]
 802c6da:	4608      	mov	r0, r1
 802c6dc:	e7f5      	b.n	802c6ca <__kernel_rem_pio2f+0x236>
 802c6de:	1e74      	subs	r4, r6, #1
 802c6e0:	ab08      	add	r3, sp, #32
 802c6e2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802c6e6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802c6ea:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802c6ee:	e783      	b.n	802c5f8 <__kernel_rem_pio2f+0x164>
 802c6f0:	1e74      	subs	r4, r6, #1
 802c6f2:	ab08      	add	r3, sp, #32
 802c6f4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802c6f8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802c6fc:	e7f5      	b.n	802c6ea <__kernel_rem_pio2f+0x256>
 802c6fe:	ab08      	add	r3, sp, #32
 802c700:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802c704:	f10c 3cff 	add.w	ip, ip, #4294967295
 802c708:	4301      	orrs	r1, r0
 802c70a:	e7ae      	b.n	802c66a <__kernel_rem_pio2f+0x1d6>
 802c70c:	3001      	adds	r0, #1
 802c70e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802c712:	2f00      	cmp	r7, #0
 802c714:	d0fa      	beq.n	802c70c <__kernel_rem_pio2f+0x278>
 802c716:	9b06      	ldr	r3, [sp, #24]
 802c718:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802c71c:	eb0d 0403 	add.w	r4, sp, r3
 802c720:	9b01      	ldr	r3, [sp, #4]
 802c722:	18f7      	adds	r7, r6, r3
 802c724:	ab1c      	add	r3, sp, #112	; 0x70
 802c726:	f106 0c01 	add.w	ip, r6, #1
 802c72a:	3c4c      	subs	r4, #76	; 0x4c
 802c72c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802c730:	4430      	add	r0, r6
 802c732:	4560      	cmp	r0, ip
 802c734:	da04      	bge.n	802c740 <__kernel_rem_pio2f+0x2ac>
 802c736:	4606      	mov	r6, r0
 802c738:	e711      	b.n	802c55e <__kernel_rem_pio2f+0xca>
 802c73a:	9c05      	ldr	r4, [sp, #20]
 802c73c:	2001      	movs	r0, #1
 802c73e:	e7e6      	b.n	802c70e <__kernel_rem_pio2f+0x27a>
 802c740:	9b04      	ldr	r3, [sp, #16]
 802c742:	f8dd e008 	ldr.w	lr, [sp, #8]
 802c746:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802c74a:	9306      	str	r3, [sp, #24]
 802c74c:	ee07 3a90 	vmov	s15, r3
 802c750:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802c754:	2600      	movs	r6, #0
 802c756:	ece7 7a01 	vstmia	r7!, {s15}
 802c75a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802c794 <__kernel_rem_pio2f+0x300>
 802c75e:	46b9      	mov	r9, r7
 802c760:	455e      	cmp	r6, fp
 802c762:	dd04      	ble.n	802c76e <__kernel_rem_pio2f+0x2da>
 802c764:	ece4 7a01 	vstmia	r4!, {s15}
 802c768:	f10c 0c01 	add.w	ip, ip, #1
 802c76c:	e7e1      	b.n	802c732 <__kernel_rem_pio2f+0x29e>
 802c76e:	ecfe 6a01 	vldmia	lr!, {s13}
 802c772:	ed39 7a01 	vldmdb	r9!, {s14}
 802c776:	3601      	adds	r6, #1
 802c778:	eee6 7a87 	vfma.f32	s15, s13, s14
 802c77c:	e7f0      	b.n	802c760 <__kernel_rem_pio2f+0x2cc>
 802c77e:	3c01      	subs	r4, #1
 802c780:	e777      	b.n	802c672 <__kernel_rem_pio2f+0x1de>
 802c782:	bf00      	nop
 802c784:	08044bf0 	.word	0x08044bf0
 802c788:	08044bc4 	.word	0x08044bc4
 802c78c:	43800000 	.word	0x43800000
 802c790:	3b800000 	.word	0x3b800000
 802c794:	00000000 	.word	0x00000000
 802c798:	9b03      	ldr	r3, [sp, #12]
 802c79a:	eeb0 0a48 	vmov.f32	s0, s16
 802c79e:	1a98      	subs	r0, r3, r2
 802c7a0:	f7ff fe12 	bl	802c3c8 <scalbnf>
 802c7a4:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802c78c <__kernel_rem_pio2f+0x2f8>
 802c7a8:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802c7ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c7b0:	db19      	blt.n	802c7e6 <__kernel_rem_pio2f+0x352>
 802c7b2:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802c790 <__kernel_rem_pio2f+0x2fc>
 802c7b6:	ee60 7a27 	vmul.f32	s15, s0, s15
 802c7ba:	aa08      	add	r2, sp, #32
 802c7bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802c7c0:	1c74      	adds	r4, r6, #1
 802c7c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802c7c6:	3508      	adds	r5, #8
 802c7c8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802c7cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802c7d0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802c7d4:	ee10 3a10 	vmov	r3, s0
 802c7d8:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802c7dc:	ee17 3a90 	vmov	r3, s15
 802c7e0:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802c7e4:	e74b      	b.n	802c67e <__kernel_rem_pio2f+0x1ea>
 802c7e6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802c7ea:	aa08      	add	r2, sp, #32
 802c7ec:	ee10 3a10 	vmov	r3, s0
 802c7f0:	4634      	mov	r4, r6
 802c7f2:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802c7f6:	e742      	b.n	802c67e <__kernel_rem_pio2f+0x1ea>
 802c7f8:	a808      	add	r0, sp, #32
 802c7fa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802c7fe:	9001      	str	r0, [sp, #4]
 802c800:	ee07 0a90 	vmov	s15, r0
 802c804:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802c808:	3b01      	subs	r3, #1
 802c80a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802c80e:	ee20 0a07 	vmul.f32	s0, s0, s14
 802c812:	ed62 7a01 	vstmdb	r2!, {s15}
 802c816:	e73f      	b.n	802c698 <__kernel_rem_pio2f+0x204>
 802c818:	ecf6 6a01 	vldmia	r6!, {s13}
 802c81c:	ecb5 7a01 	vldmia	r5!, {s14}
 802c820:	eee6 7a87 	vfma.f32	s15, s13, s14
 802c824:	3001      	adds	r0, #1
 802c826:	4550      	cmp	r0, sl
 802c828:	dc01      	bgt.n	802c82e <__kernel_rem_pio2f+0x39a>
 802c82a:	4290      	cmp	r0, r2
 802c82c:	ddf4      	ble.n	802c818 <__kernel_rem_pio2f+0x384>
 802c82e:	a858      	add	r0, sp, #352	; 0x160
 802c830:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802c834:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802c838:	3b01      	subs	r3, #1
 802c83a:	e731      	b.n	802c6a0 <__kernel_rem_pio2f+0x20c>
 802c83c:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802c83e:	2b02      	cmp	r3, #2
 802c840:	dc09      	bgt.n	802c856 <__kernel_rem_pio2f+0x3c2>
 802c842:	2b00      	cmp	r3, #0
 802c844:	dc2b      	bgt.n	802c89e <__kernel_rem_pio2f+0x40a>
 802c846:	d044      	beq.n	802c8d2 <__kernel_rem_pio2f+0x43e>
 802c848:	f009 0007 	and.w	r0, r9, #7
 802c84c:	b059      	add	sp, #356	; 0x164
 802c84e:	ecbd 8b04 	vpop	{d8-d9}
 802c852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c856:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802c858:	2b03      	cmp	r3, #3
 802c85a:	d1f5      	bne.n	802c848 <__kernel_rem_pio2f+0x3b4>
 802c85c:	aa30      	add	r2, sp, #192	; 0xc0
 802c85e:	1f0b      	subs	r3, r1, #4
 802c860:	4413      	add	r3, r2
 802c862:	461a      	mov	r2, r3
 802c864:	4620      	mov	r0, r4
 802c866:	2800      	cmp	r0, #0
 802c868:	f1a2 0204 	sub.w	r2, r2, #4
 802c86c:	dc52      	bgt.n	802c914 <__kernel_rem_pio2f+0x480>
 802c86e:	4622      	mov	r2, r4
 802c870:	2a01      	cmp	r2, #1
 802c872:	f1a3 0304 	sub.w	r3, r3, #4
 802c876:	dc5d      	bgt.n	802c934 <__kernel_rem_pio2f+0x4a0>
 802c878:	ab30      	add	r3, sp, #192	; 0xc0
 802c87a:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802c794 <__kernel_rem_pio2f+0x300>
 802c87e:	440b      	add	r3, r1
 802c880:	2c01      	cmp	r4, #1
 802c882:	dc67      	bgt.n	802c954 <__kernel_rem_pio2f+0x4c0>
 802c884:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802c888:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802c88c:	2f00      	cmp	r7, #0
 802c88e:	d167      	bne.n	802c960 <__kernel_rem_pio2f+0x4cc>
 802c890:	edc8 6a00 	vstr	s13, [r8]
 802c894:	ed88 7a01 	vstr	s14, [r8, #4]
 802c898:	edc8 7a02 	vstr	s15, [r8, #8]
 802c89c:	e7d4      	b.n	802c848 <__kernel_rem_pio2f+0x3b4>
 802c89e:	ab30      	add	r3, sp, #192	; 0xc0
 802c8a0:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802c794 <__kernel_rem_pio2f+0x300>
 802c8a4:	440b      	add	r3, r1
 802c8a6:	4622      	mov	r2, r4
 802c8a8:	2a00      	cmp	r2, #0
 802c8aa:	da24      	bge.n	802c8f6 <__kernel_rem_pio2f+0x462>
 802c8ac:	b34f      	cbz	r7, 802c902 <__kernel_rem_pio2f+0x46e>
 802c8ae:	eef1 7a47 	vneg.f32	s15, s14
 802c8b2:	edc8 7a00 	vstr	s15, [r8]
 802c8b6:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802c8ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c8be:	aa31      	add	r2, sp, #196	; 0xc4
 802c8c0:	2301      	movs	r3, #1
 802c8c2:	429c      	cmp	r4, r3
 802c8c4:	da20      	bge.n	802c908 <__kernel_rem_pio2f+0x474>
 802c8c6:	b10f      	cbz	r7, 802c8cc <__kernel_rem_pio2f+0x438>
 802c8c8:	eef1 7a67 	vneg.f32	s15, s15
 802c8cc:	edc8 7a01 	vstr	s15, [r8, #4]
 802c8d0:	e7ba      	b.n	802c848 <__kernel_rem_pio2f+0x3b4>
 802c8d2:	ab30      	add	r3, sp, #192	; 0xc0
 802c8d4:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802c794 <__kernel_rem_pio2f+0x300>
 802c8d8:	440b      	add	r3, r1
 802c8da:	2c00      	cmp	r4, #0
 802c8dc:	da05      	bge.n	802c8ea <__kernel_rem_pio2f+0x456>
 802c8de:	b10f      	cbz	r7, 802c8e4 <__kernel_rem_pio2f+0x450>
 802c8e0:	eef1 7a67 	vneg.f32	s15, s15
 802c8e4:	edc8 7a00 	vstr	s15, [r8]
 802c8e8:	e7ae      	b.n	802c848 <__kernel_rem_pio2f+0x3b4>
 802c8ea:	ed33 7a01 	vldmdb	r3!, {s14}
 802c8ee:	3c01      	subs	r4, #1
 802c8f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 802c8f4:	e7f1      	b.n	802c8da <__kernel_rem_pio2f+0x446>
 802c8f6:	ed73 7a01 	vldmdb	r3!, {s15}
 802c8fa:	3a01      	subs	r2, #1
 802c8fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c900:	e7d2      	b.n	802c8a8 <__kernel_rem_pio2f+0x414>
 802c902:	eef0 7a47 	vmov.f32	s15, s14
 802c906:	e7d4      	b.n	802c8b2 <__kernel_rem_pio2f+0x41e>
 802c908:	ecb2 7a01 	vldmia	r2!, {s14}
 802c90c:	3301      	adds	r3, #1
 802c90e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802c912:	e7d6      	b.n	802c8c2 <__kernel_rem_pio2f+0x42e>
 802c914:	edd2 7a00 	vldr	s15, [r2]
 802c918:	edd2 6a01 	vldr	s13, [r2, #4]
 802c91c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802c920:	3801      	subs	r0, #1
 802c922:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c926:	ed82 7a00 	vstr	s14, [r2]
 802c92a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802c92e:	edc2 7a01 	vstr	s15, [r2, #4]
 802c932:	e798      	b.n	802c866 <__kernel_rem_pio2f+0x3d2>
 802c934:	edd3 7a00 	vldr	s15, [r3]
 802c938:	edd3 6a01 	vldr	s13, [r3, #4]
 802c93c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802c940:	3a01      	subs	r2, #1
 802c942:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c946:	ed83 7a00 	vstr	s14, [r3]
 802c94a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802c94e:	edc3 7a01 	vstr	s15, [r3, #4]
 802c952:	e78d      	b.n	802c870 <__kernel_rem_pio2f+0x3dc>
 802c954:	ed33 7a01 	vldmdb	r3!, {s14}
 802c958:	3c01      	subs	r4, #1
 802c95a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802c95e:	e78f      	b.n	802c880 <__kernel_rem_pio2f+0x3ec>
 802c960:	eef1 6a66 	vneg.f32	s13, s13
 802c964:	eeb1 7a47 	vneg.f32	s14, s14
 802c968:	edc8 6a00 	vstr	s13, [r8]
 802c96c:	ed88 7a01 	vstr	s14, [r8, #4]
 802c970:	eef1 7a67 	vneg.f32	s15, s15
 802c974:	e790      	b.n	802c898 <__kernel_rem_pio2f+0x404>
 802c976:	bf00      	nop

0802c978 <abort>:
 802c978:	b508      	push	{r3, lr}
 802c97a:	2006      	movs	r0, #6
 802c97c:	f000 fa3a 	bl	802cdf4 <raise>
 802c980:	2001      	movs	r0, #1
 802c982:	f7d5 ff41 	bl	8002808 <_exit>
	...

0802c988 <__assert_func>:
 802c988:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802c98a:	4614      	mov	r4, r2
 802c98c:	461a      	mov	r2, r3
 802c98e:	4b09      	ldr	r3, [pc, #36]	; (802c9b4 <__assert_func+0x2c>)
 802c990:	681b      	ldr	r3, [r3, #0]
 802c992:	4605      	mov	r5, r0
 802c994:	68d8      	ldr	r0, [r3, #12]
 802c996:	b14c      	cbz	r4, 802c9ac <__assert_func+0x24>
 802c998:	4b07      	ldr	r3, [pc, #28]	; (802c9b8 <__assert_func+0x30>)
 802c99a:	9100      	str	r1, [sp, #0]
 802c99c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802c9a0:	4906      	ldr	r1, [pc, #24]	; (802c9bc <__assert_func+0x34>)
 802c9a2:	462b      	mov	r3, r5
 802c9a4:	f000 f982 	bl	802ccac <fiprintf>
 802c9a8:	f7ff ffe6 	bl	802c978 <abort>
 802c9ac:	4b04      	ldr	r3, [pc, #16]	; (802c9c0 <__assert_func+0x38>)
 802c9ae:	461c      	mov	r4, r3
 802c9b0:	e7f3      	b.n	802c99a <__assert_func+0x12>
 802c9b2:	bf00      	nop
 802c9b4:	20000164 	.word	0x20000164
 802c9b8:	08044bfc 	.word	0x08044bfc
 802c9bc:	08044c09 	.word	0x08044c09
 802c9c0:	08044c37 	.word	0x08044c37

0802c9c4 <atexit>:
 802c9c4:	2300      	movs	r3, #0
 802c9c6:	4601      	mov	r1, r0
 802c9c8:	461a      	mov	r2, r3
 802c9ca:	4618      	mov	r0, r3
 802c9cc:	f000 bb16 	b.w	802cffc <__register_exitproc>

0802c9d0 <malloc>:
 802c9d0:	4b02      	ldr	r3, [pc, #8]	; (802c9dc <malloc+0xc>)
 802c9d2:	4601      	mov	r1, r0
 802c9d4:	6818      	ldr	r0, [r3, #0]
 802c9d6:	f000 b82b 	b.w	802ca30 <_malloc_r>
 802c9da:	bf00      	nop
 802c9dc:	20000164 	.word	0x20000164

0802c9e0 <free>:
 802c9e0:	4b02      	ldr	r3, [pc, #8]	; (802c9ec <free+0xc>)
 802c9e2:	4601      	mov	r1, r0
 802c9e4:	6818      	ldr	r0, [r3, #0]
 802c9e6:	f000 bb67 	b.w	802d0b8 <_free_r>
 802c9ea:	bf00      	nop
 802c9ec:	20000164 	.word	0x20000164

0802c9f0 <sbrk_aligned>:
 802c9f0:	b570      	push	{r4, r5, r6, lr}
 802c9f2:	4e0e      	ldr	r6, [pc, #56]	; (802ca2c <sbrk_aligned+0x3c>)
 802c9f4:	460c      	mov	r4, r1
 802c9f6:	6831      	ldr	r1, [r6, #0]
 802c9f8:	4605      	mov	r5, r0
 802c9fa:	b911      	cbnz	r1, 802ca02 <sbrk_aligned+0x12>
 802c9fc:	f000 faa0 	bl	802cf40 <_sbrk_r>
 802ca00:	6030      	str	r0, [r6, #0]
 802ca02:	4621      	mov	r1, r4
 802ca04:	4628      	mov	r0, r5
 802ca06:	f000 fa9b 	bl	802cf40 <_sbrk_r>
 802ca0a:	1c43      	adds	r3, r0, #1
 802ca0c:	d00a      	beq.n	802ca24 <sbrk_aligned+0x34>
 802ca0e:	1cc4      	adds	r4, r0, #3
 802ca10:	f024 0403 	bic.w	r4, r4, #3
 802ca14:	42a0      	cmp	r0, r4
 802ca16:	d007      	beq.n	802ca28 <sbrk_aligned+0x38>
 802ca18:	1a21      	subs	r1, r4, r0
 802ca1a:	4628      	mov	r0, r5
 802ca1c:	f000 fa90 	bl	802cf40 <_sbrk_r>
 802ca20:	3001      	adds	r0, #1
 802ca22:	d101      	bne.n	802ca28 <sbrk_aligned+0x38>
 802ca24:	f04f 34ff 	mov.w	r4, #4294967295
 802ca28:	4620      	mov	r0, r4
 802ca2a:	bd70      	pop	{r4, r5, r6, pc}
 802ca2c:	200141a4 	.word	0x200141a4

0802ca30 <_malloc_r>:
 802ca30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ca34:	1ccd      	adds	r5, r1, #3
 802ca36:	f025 0503 	bic.w	r5, r5, #3
 802ca3a:	3508      	adds	r5, #8
 802ca3c:	2d0c      	cmp	r5, #12
 802ca3e:	bf38      	it	cc
 802ca40:	250c      	movcc	r5, #12
 802ca42:	2d00      	cmp	r5, #0
 802ca44:	4607      	mov	r7, r0
 802ca46:	db01      	blt.n	802ca4c <_malloc_r+0x1c>
 802ca48:	42a9      	cmp	r1, r5
 802ca4a:	d905      	bls.n	802ca58 <_malloc_r+0x28>
 802ca4c:	230c      	movs	r3, #12
 802ca4e:	603b      	str	r3, [r7, #0]
 802ca50:	2600      	movs	r6, #0
 802ca52:	4630      	mov	r0, r6
 802ca54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ca58:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802cb2c <_malloc_r+0xfc>
 802ca5c:	f000 f868 	bl	802cb30 <__malloc_lock>
 802ca60:	f8d8 3000 	ldr.w	r3, [r8]
 802ca64:	461c      	mov	r4, r3
 802ca66:	bb5c      	cbnz	r4, 802cac0 <_malloc_r+0x90>
 802ca68:	4629      	mov	r1, r5
 802ca6a:	4638      	mov	r0, r7
 802ca6c:	f7ff ffc0 	bl	802c9f0 <sbrk_aligned>
 802ca70:	1c43      	adds	r3, r0, #1
 802ca72:	4604      	mov	r4, r0
 802ca74:	d155      	bne.n	802cb22 <_malloc_r+0xf2>
 802ca76:	f8d8 4000 	ldr.w	r4, [r8]
 802ca7a:	4626      	mov	r6, r4
 802ca7c:	2e00      	cmp	r6, #0
 802ca7e:	d145      	bne.n	802cb0c <_malloc_r+0xdc>
 802ca80:	2c00      	cmp	r4, #0
 802ca82:	d048      	beq.n	802cb16 <_malloc_r+0xe6>
 802ca84:	6823      	ldr	r3, [r4, #0]
 802ca86:	4631      	mov	r1, r6
 802ca88:	4638      	mov	r0, r7
 802ca8a:	eb04 0903 	add.w	r9, r4, r3
 802ca8e:	f000 fa57 	bl	802cf40 <_sbrk_r>
 802ca92:	4581      	cmp	r9, r0
 802ca94:	d13f      	bne.n	802cb16 <_malloc_r+0xe6>
 802ca96:	6821      	ldr	r1, [r4, #0]
 802ca98:	1a6d      	subs	r5, r5, r1
 802ca9a:	4629      	mov	r1, r5
 802ca9c:	4638      	mov	r0, r7
 802ca9e:	f7ff ffa7 	bl	802c9f0 <sbrk_aligned>
 802caa2:	3001      	adds	r0, #1
 802caa4:	d037      	beq.n	802cb16 <_malloc_r+0xe6>
 802caa6:	6823      	ldr	r3, [r4, #0]
 802caa8:	442b      	add	r3, r5
 802caaa:	6023      	str	r3, [r4, #0]
 802caac:	f8d8 3000 	ldr.w	r3, [r8]
 802cab0:	2b00      	cmp	r3, #0
 802cab2:	d038      	beq.n	802cb26 <_malloc_r+0xf6>
 802cab4:	685a      	ldr	r2, [r3, #4]
 802cab6:	42a2      	cmp	r2, r4
 802cab8:	d12b      	bne.n	802cb12 <_malloc_r+0xe2>
 802caba:	2200      	movs	r2, #0
 802cabc:	605a      	str	r2, [r3, #4]
 802cabe:	e00f      	b.n	802cae0 <_malloc_r+0xb0>
 802cac0:	6822      	ldr	r2, [r4, #0]
 802cac2:	1b52      	subs	r2, r2, r5
 802cac4:	d41f      	bmi.n	802cb06 <_malloc_r+0xd6>
 802cac6:	2a0b      	cmp	r2, #11
 802cac8:	d917      	bls.n	802cafa <_malloc_r+0xca>
 802caca:	1961      	adds	r1, r4, r5
 802cacc:	42a3      	cmp	r3, r4
 802cace:	6025      	str	r5, [r4, #0]
 802cad0:	bf18      	it	ne
 802cad2:	6059      	strne	r1, [r3, #4]
 802cad4:	6863      	ldr	r3, [r4, #4]
 802cad6:	bf08      	it	eq
 802cad8:	f8c8 1000 	streq.w	r1, [r8]
 802cadc:	5162      	str	r2, [r4, r5]
 802cade:	604b      	str	r3, [r1, #4]
 802cae0:	4638      	mov	r0, r7
 802cae2:	f104 060b 	add.w	r6, r4, #11
 802cae6:	f000 f829 	bl	802cb3c <__malloc_unlock>
 802caea:	f026 0607 	bic.w	r6, r6, #7
 802caee:	1d23      	adds	r3, r4, #4
 802caf0:	1af2      	subs	r2, r6, r3
 802caf2:	d0ae      	beq.n	802ca52 <_malloc_r+0x22>
 802caf4:	1b9b      	subs	r3, r3, r6
 802caf6:	50a3      	str	r3, [r4, r2]
 802caf8:	e7ab      	b.n	802ca52 <_malloc_r+0x22>
 802cafa:	42a3      	cmp	r3, r4
 802cafc:	6862      	ldr	r2, [r4, #4]
 802cafe:	d1dd      	bne.n	802cabc <_malloc_r+0x8c>
 802cb00:	f8c8 2000 	str.w	r2, [r8]
 802cb04:	e7ec      	b.n	802cae0 <_malloc_r+0xb0>
 802cb06:	4623      	mov	r3, r4
 802cb08:	6864      	ldr	r4, [r4, #4]
 802cb0a:	e7ac      	b.n	802ca66 <_malloc_r+0x36>
 802cb0c:	4634      	mov	r4, r6
 802cb0e:	6876      	ldr	r6, [r6, #4]
 802cb10:	e7b4      	b.n	802ca7c <_malloc_r+0x4c>
 802cb12:	4613      	mov	r3, r2
 802cb14:	e7cc      	b.n	802cab0 <_malloc_r+0x80>
 802cb16:	230c      	movs	r3, #12
 802cb18:	603b      	str	r3, [r7, #0]
 802cb1a:	4638      	mov	r0, r7
 802cb1c:	f000 f80e 	bl	802cb3c <__malloc_unlock>
 802cb20:	e797      	b.n	802ca52 <_malloc_r+0x22>
 802cb22:	6025      	str	r5, [r4, #0]
 802cb24:	e7dc      	b.n	802cae0 <_malloc_r+0xb0>
 802cb26:	605b      	str	r3, [r3, #4]
 802cb28:	deff      	udf	#255	; 0xff
 802cb2a:	bf00      	nop
 802cb2c:	200141a0 	.word	0x200141a0

0802cb30 <__malloc_lock>:
 802cb30:	4801      	ldr	r0, [pc, #4]	; (802cb38 <__malloc_lock+0x8>)
 802cb32:	f000 ba52 	b.w	802cfda <__retarget_lock_acquire_recursive>
 802cb36:	bf00      	nop
 802cb38:	200142e9 	.word	0x200142e9

0802cb3c <__malloc_unlock>:
 802cb3c:	4801      	ldr	r0, [pc, #4]	; (802cb44 <__malloc_unlock+0x8>)
 802cb3e:	f000 ba4d 	b.w	802cfdc <__retarget_lock_release_recursive>
 802cb42:	bf00      	nop
 802cb44:	200142e9 	.word	0x200142e9

0802cb48 <__cxa_atexit>:
 802cb48:	b510      	push	{r4, lr}
 802cb4a:	4c05      	ldr	r4, [pc, #20]	; (802cb60 <__cxa_atexit+0x18>)
 802cb4c:	4613      	mov	r3, r2
 802cb4e:	b12c      	cbz	r4, 802cb5c <__cxa_atexit+0x14>
 802cb50:	460a      	mov	r2, r1
 802cb52:	4601      	mov	r1, r0
 802cb54:	2002      	movs	r0, #2
 802cb56:	f000 fa51 	bl	802cffc <__register_exitproc>
 802cb5a:	bd10      	pop	{r4, pc}
 802cb5c:	4620      	mov	r0, r4
 802cb5e:	e7fc      	b.n	802cb5a <__cxa_atexit+0x12>
 802cb60:	0802cffd 	.word	0x0802cffd

0802cb64 <std>:
 802cb64:	2300      	movs	r3, #0
 802cb66:	b510      	push	{r4, lr}
 802cb68:	4604      	mov	r4, r0
 802cb6a:	e9c0 3300 	strd	r3, r3, [r0]
 802cb6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802cb72:	6083      	str	r3, [r0, #8]
 802cb74:	8181      	strh	r1, [r0, #12]
 802cb76:	6643      	str	r3, [r0, #100]	; 0x64
 802cb78:	81c2      	strh	r2, [r0, #14]
 802cb7a:	6183      	str	r3, [r0, #24]
 802cb7c:	4619      	mov	r1, r3
 802cb7e:	2208      	movs	r2, #8
 802cb80:	305c      	adds	r0, #92	; 0x5c
 802cb82:	f000 f906 	bl	802cd92 <memset>
 802cb86:	4b0d      	ldr	r3, [pc, #52]	; (802cbbc <std+0x58>)
 802cb88:	6263      	str	r3, [r4, #36]	; 0x24
 802cb8a:	4b0d      	ldr	r3, [pc, #52]	; (802cbc0 <std+0x5c>)
 802cb8c:	62a3      	str	r3, [r4, #40]	; 0x28
 802cb8e:	4b0d      	ldr	r3, [pc, #52]	; (802cbc4 <std+0x60>)
 802cb90:	62e3      	str	r3, [r4, #44]	; 0x2c
 802cb92:	4b0d      	ldr	r3, [pc, #52]	; (802cbc8 <std+0x64>)
 802cb94:	6323      	str	r3, [r4, #48]	; 0x30
 802cb96:	4b0d      	ldr	r3, [pc, #52]	; (802cbcc <std+0x68>)
 802cb98:	6224      	str	r4, [r4, #32]
 802cb9a:	429c      	cmp	r4, r3
 802cb9c:	d006      	beq.n	802cbac <std+0x48>
 802cb9e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802cba2:	4294      	cmp	r4, r2
 802cba4:	d002      	beq.n	802cbac <std+0x48>
 802cba6:	33d0      	adds	r3, #208	; 0xd0
 802cba8:	429c      	cmp	r4, r3
 802cbaa:	d105      	bne.n	802cbb8 <std+0x54>
 802cbac:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802cbb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802cbb4:	f000 ba10 	b.w	802cfd8 <__retarget_lock_init_recursive>
 802cbb8:	bd10      	pop	{r4, pc}
 802cbba:	bf00      	nop
 802cbbc:	0802cd0d 	.word	0x0802cd0d
 802cbc0:	0802cd2f 	.word	0x0802cd2f
 802cbc4:	0802cd67 	.word	0x0802cd67
 802cbc8:	0802cd8b 	.word	0x0802cd8b
 802cbcc:	200141a8 	.word	0x200141a8

0802cbd0 <stdio_exit_handler>:
 802cbd0:	4a02      	ldr	r2, [pc, #8]	; (802cbdc <stdio_exit_handler+0xc>)
 802cbd2:	4903      	ldr	r1, [pc, #12]	; (802cbe0 <stdio_exit_handler+0x10>)
 802cbd4:	4803      	ldr	r0, [pc, #12]	; (802cbe4 <stdio_exit_handler+0x14>)
 802cbd6:	f000 b87b 	b.w	802ccd0 <_fwalk_sglue>
 802cbda:	bf00      	nop
 802cbdc:	2000010c 	.word	0x2000010c
 802cbe0:	0802d805 	.word	0x0802d805
 802cbe4:	20000118 	.word	0x20000118

0802cbe8 <cleanup_stdio>:
 802cbe8:	6841      	ldr	r1, [r0, #4]
 802cbea:	4b0c      	ldr	r3, [pc, #48]	; (802cc1c <cleanup_stdio+0x34>)
 802cbec:	4299      	cmp	r1, r3
 802cbee:	b510      	push	{r4, lr}
 802cbf0:	4604      	mov	r4, r0
 802cbf2:	d001      	beq.n	802cbf8 <cleanup_stdio+0x10>
 802cbf4:	f000 fe06 	bl	802d804 <_fflush_r>
 802cbf8:	68a1      	ldr	r1, [r4, #8]
 802cbfa:	4b09      	ldr	r3, [pc, #36]	; (802cc20 <cleanup_stdio+0x38>)
 802cbfc:	4299      	cmp	r1, r3
 802cbfe:	d002      	beq.n	802cc06 <cleanup_stdio+0x1e>
 802cc00:	4620      	mov	r0, r4
 802cc02:	f000 fdff 	bl	802d804 <_fflush_r>
 802cc06:	68e1      	ldr	r1, [r4, #12]
 802cc08:	4b06      	ldr	r3, [pc, #24]	; (802cc24 <cleanup_stdio+0x3c>)
 802cc0a:	4299      	cmp	r1, r3
 802cc0c:	d004      	beq.n	802cc18 <cleanup_stdio+0x30>
 802cc0e:	4620      	mov	r0, r4
 802cc10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802cc14:	f000 bdf6 	b.w	802d804 <_fflush_r>
 802cc18:	bd10      	pop	{r4, pc}
 802cc1a:	bf00      	nop
 802cc1c:	200141a8 	.word	0x200141a8
 802cc20:	20014210 	.word	0x20014210
 802cc24:	20014278 	.word	0x20014278

0802cc28 <global_stdio_init.part.0>:
 802cc28:	b510      	push	{r4, lr}
 802cc2a:	4b0b      	ldr	r3, [pc, #44]	; (802cc58 <global_stdio_init.part.0+0x30>)
 802cc2c:	4c0b      	ldr	r4, [pc, #44]	; (802cc5c <global_stdio_init.part.0+0x34>)
 802cc2e:	4a0c      	ldr	r2, [pc, #48]	; (802cc60 <global_stdio_init.part.0+0x38>)
 802cc30:	601a      	str	r2, [r3, #0]
 802cc32:	4620      	mov	r0, r4
 802cc34:	2200      	movs	r2, #0
 802cc36:	2104      	movs	r1, #4
 802cc38:	f7ff ff94 	bl	802cb64 <std>
 802cc3c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802cc40:	2201      	movs	r2, #1
 802cc42:	2109      	movs	r1, #9
 802cc44:	f7ff ff8e 	bl	802cb64 <std>
 802cc48:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802cc4c:	2202      	movs	r2, #2
 802cc4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802cc52:	2112      	movs	r1, #18
 802cc54:	f7ff bf86 	b.w	802cb64 <std>
 802cc58:	200142e0 	.word	0x200142e0
 802cc5c:	200141a8 	.word	0x200141a8
 802cc60:	0802cbd1 	.word	0x0802cbd1

0802cc64 <__sfp_lock_acquire>:
 802cc64:	4801      	ldr	r0, [pc, #4]	; (802cc6c <__sfp_lock_acquire+0x8>)
 802cc66:	f000 b9b8 	b.w	802cfda <__retarget_lock_acquire_recursive>
 802cc6a:	bf00      	nop
 802cc6c:	200142ea 	.word	0x200142ea

0802cc70 <__sfp_lock_release>:
 802cc70:	4801      	ldr	r0, [pc, #4]	; (802cc78 <__sfp_lock_release+0x8>)
 802cc72:	f000 b9b3 	b.w	802cfdc <__retarget_lock_release_recursive>
 802cc76:	bf00      	nop
 802cc78:	200142ea 	.word	0x200142ea

0802cc7c <__sinit>:
 802cc7c:	b510      	push	{r4, lr}
 802cc7e:	4604      	mov	r4, r0
 802cc80:	f7ff fff0 	bl	802cc64 <__sfp_lock_acquire>
 802cc84:	6a23      	ldr	r3, [r4, #32]
 802cc86:	b11b      	cbz	r3, 802cc90 <__sinit+0x14>
 802cc88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802cc8c:	f7ff bff0 	b.w	802cc70 <__sfp_lock_release>
 802cc90:	4b04      	ldr	r3, [pc, #16]	; (802cca4 <__sinit+0x28>)
 802cc92:	6223      	str	r3, [r4, #32]
 802cc94:	4b04      	ldr	r3, [pc, #16]	; (802cca8 <__sinit+0x2c>)
 802cc96:	681b      	ldr	r3, [r3, #0]
 802cc98:	2b00      	cmp	r3, #0
 802cc9a:	d1f5      	bne.n	802cc88 <__sinit+0xc>
 802cc9c:	f7ff ffc4 	bl	802cc28 <global_stdio_init.part.0>
 802cca0:	e7f2      	b.n	802cc88 <__sinit+0xc>
 802cca2:	bf00      	nop
 802cca4:	0802cbe9 	.word	0x0802cbe9
 802cca8:	200142e0 	.word	0x200142e0

0802ccac <fiprintf>:
 802ccac:	b40e      	push	{r1, r2, r3}
 802ccae:	b503      	push	{r0, r1, lr}
 802ccb0:	4601      	mov	r1, r0
 802ccb2:	ab03      	add	r3, sp, #12
 802ccb4:	4805      	ldr	r0, [pc, #20]	; (802cccc <fiprintf+0x20>)
 802ccb6:	f853 2b04 	ldr.w	r2, [r3], #4
 802ccba:	6800      	ldr	r0, [r0, #0]
 802ccbc:	9301      	str	r3, [sp, #4]
 802ccbe:	f000 fa71 	bl	802d1a4 <_vfiprintf_r>
 802ccc2:	b002      	add	sp, #8
 802ccc4:	f85d eb04 	ldr.w	lr, [sp], #4
 802ccc8:	b003      	add	sp, #12
 802ccca:	4770      	bx	lr
 802cccc:	20000164 	.word	0x20000164

0802ccd0 <_fwalk_sglue>:
 802ccd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ccd4:	4607      	mov	r7, r0
 802ccd6:	4688      	mov	r8, r1
 802ccd8:	4614      	mov	r4, r2
 802ccda:	2600      	movs	r6, #0
 802ccdc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802cce0:	f1b9 0901 	subs.w	r9, r9, #1
 802cce4:	d505      	bpl.n	802ccf2 <_fwalk_sglue+0x22>
 802cce6:	6824      	ldr	r4, [r4, #0]
 802cce8:	2c00      	cmp	r4, #0
 802ccea:	d1f7      	bne.n	802ccdc <_fwalk_sglue+0xc>
 802ccec:	4630      	mov	r0, r6
 802ccee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ccf2:	89ab      	ldrh	r3, [r5, #12]
 802ccf4:	2b01      	cmp	r3, #1
 802ccf6:	d907      	bls.n	802cd08 <_fwalk_sglue+0x38>
 802ccf8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802ccfc:	3301      	adds	r3, #1
 802ccfe:	d003      	beq.n	802cd08 <_fwalk_sglue+0x38>
 802cd00:	4629      	mov	r1, r5
 802cd02:	4638      	mov	r0, r7
 802cd04:	47c0      	blx	r8
 802cd06:	4306      	orrs	r6, r0
 802cd08:	3568      	adds	r5, #104	; 0x68
 802cd0a:	e7e9      	b.n	802cce0 <_fwalk_sglue+0x10>

0802cd0c <__sread>:
 802cd0c:	b510      	push	{r4, lr}
 802cd0e:	460c      	mov	r4, r1
 802cd10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802cd14:	f000 f8ee 	bl	802cef4 <_read_r>
 802cd18:	2800      	cmp	r0, #0
 802cd1a:	bfab      	itete	ge
 802cd1c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802cd1e:	89a3      	ldrhlt	r3, [r4, #12]
 802cd20:	181b      	addge	r3, r3, r0
 802cd22:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802cd26:	bfac      	ite	ge
 802cd28:	6563      	strge	r3, [r4, #84]	; 0x54
 802cd2a:	81a3      	strhlt	r3, [r4, #12]
 802cd2c:	bd10      	pop	{r4, pc}

0802cd2e <__swrite>:
 802cd2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cd32:	461f      	mov	r7, r3
 802cd34:	898b      	ldrh	r3, [r1, #12]
 802cd36:	05db      	lsls	r3, r3, #23
 802cd38:	4605      	mov	r5, r0
 802cd3a:	460c      	mov	r4, r1
 802cd3c:	4616      	mov	r6, r2
 802cd3e:	d505      	bpl.n	802cd4c <__swrite+0x1e>
 802cd40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802cd44:	2302      	movs	r3, #2
 802cd46:	2200      	movs	r2, #0
 802cd48:	f000 f8c2 	bl	802ced0 <_lseek_r>
 802cd4c:	89a3      	ldrh	r3, [r4, #12]
 802cd4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802cd52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802cd56:	81a3      	strh	r3, [r4, #12]
 802cd58:	4632      	mov	r2, r6
 802cd5a:	463b      	mov	r3, r7
 802cd5c:	4628      	mov	r0, r5
 802cd5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802cd62:	f000 b8fd 	b.w	802cf60 <_write_r>

0802cd66 <__sseek>:
 802cd66:	b510      	push	{r4, lr}
 802cd68:	460c      	mov	r4, r1
 802cd6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802cd6e:	f000 f8af 	bl	802ced0 <_lseek_r>
 802cd72:	1c43      	adds	r3, r0, #1
 802cd74:	89a3      	ldrh	r3, [r4, #12]
 802cd76:	bf15      	itete	ne
 802cd78:	6560      	strne	r0, [r4, #84]	; 0x54
 802cd7a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802cd7e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802cd82:	81a3      	strheq	r3, [r4, #12]
 802cd84:	bf18      	it	ne
 802cd86:	81a3      	strhne	r3, [r4, #12]
 802cd88:	bd10      	pop	{r4, pc}

0802cd8a <__sclose>:
 802cd8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802cd8e:	f000 b839 	b.w	802ce04 <_close_r>

0802cd92 <memset>:
 802cd92:	4402      	add	r2, r0
 802cd94:	4603      	mov	r3, r0
 802cd96:	4293      	cmp	r3, r2
 802cd98:	d100      	bne.n	802cd9c <memset+0xa>
 802cd9a:	4770      	bx	lr
 802cd9c:	f803 1b01 	strb.w	r1, [r3], #1
 802cda0:	e7f9      	b.n	802cd96 <memset+0x4>

0802cda2 <_raise_r>:
 802cda2:	291f      	cmp	r1, #31
 802cda4:	b538      	push	{r3, r4, r5, lr}
 802cda6:	4604      	mov	r4, r0
 802cda8:	460d      	mov	r5, r1
 802cdaa:	d904      	bls.n	802cdb6 <_raise_r+0x14>
 802cdac:	2316      	movs	r3, #22
 802cdae:	6003      	str	r3, [r0, #0]
 802cdb0:	f04f 30ff 	mov.w	r0, #4294967295
 802cdb4:	bd38      	pop	{r3, r4, r5, pc}
 802cdb6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802cdb8:	b112      	cbz	r2, 802cdc0 <_raise_r+0x1e>
 802cdba:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802cdbe:	b94b      	cbnz	r3, 802cdd4 <_raise_r+0x32>
 802cdc0:	4620      	mov	r0, r4
 802cdc2:	f000 f8bb 	bl	802cf3c <_getpid_r>
 802cdc6:	462a      	mov	r2, r5
 802cdc8:	4601      	mov	r1, r0
 802cdca:	4620      	mov	r0, r4
 802cdcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802cdd0:	f000 b8a2 	b.w	802cf18 <_kill_r>
 802cdd4:	2b01      	cmp	r3, #1
 802cdd6:	d00a      	beq.n	802cdee <_raise_r+0x4c>
 802cdd8:	1c59      	adds	r1, r3, #1
 802cdda:	d103      	bne.n	802cde4 <_raise_r+0x42>
 802cddc:	2316      	movs	r3, #22
 802cdde:	6003      	str	r3, [r0, #0]
 802cde0:	2001      	movs	r0, #1
 802cde2:	e7e7      	b.n	802cdb4 <_raise_r+0x12>
 802cde4:	2400      	movs	r4, #0
 802cde6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802cdea:	4628      	mov	r0, r5
 802cdec:	4798      	blx	r3
 802cdee:	2000      	movs	r0, #0
 802cdf0:	e7e0      	b.n	802cdb4 <_raise_r+0x12>
	...

0802cdf4 <raise>:
 802cdf4:	4b02      	ldr	r3, [pc, #8]	; (802ce00 <raise+0xc>)
 802cdf6:	4601      	mov	r1, r0
 802cdf8:	6818      	ldr	r0, [r3, #0]
 802cdfa:	f7ff bfd2 	b.w	802cda2 <_raise_r>
 802cdfe:	bf00      	nop
 802ce00:	20000164 	.word	0x20000164

0802ce04 <_close_r>:
 802ce04:	b538      	push	{r3, r4, r5, lr}
 802ce06:	4d06      	ldr	r5, [pc, #24]	; (802ce20 <_close_r+0x1c>)
 802ce08:	2300      	movs	r3, #0
 802ce0a:	4604      	mov	r4, r0
 802ce0c:	4608      	mov	r0, r1
 802ce0e:	602b      	str	r3, [r5, #0]
 802ce10:	f7d5 fd1c 	bl	800284c <_close>
 802ce14:	1c43      	adds	r3, r0, #1
 802ce16:	d102      	bne.n	802ce1e <_close_r+0x1a>
 802ce18:	682b      	ldr	r3, [r5, #0]
 802ce1a:	b103      	cbz	r3, 802ce1e <_close_r+0x1a>
 802ce1c:	6023      	str	r3, [r4, #0]
 802ce1e:	bd38      	pop	{r3, r4, r5, pc}
 802ce20:	200142e4 	.word	0x200142e4

0802ce24 <_reclaim_reent>:
 802ce24:	4b29      	ldr	r3, [pc, #164]	; (802cecc <_reclaim_reent+0xa8>)
 802ce26:	681b      	ldr	r3, [r3, #0]
 802ce28:	4283      	cmp	r3, r0
 802ce2a:	b570      	push	{r4, r5, r6, lr}
 802ce2c:	4604      	mov	r4, r0
 802ce2e:	d04b      	beq.n	802cec8 <_reclaim_reent+0xa4>
 802ce30:	69c3      	ldr	r3, [r0, #28]
 802ce32:	b143      	cbz	r3, 802ce46 <_reclaim_reent+0x22>
 802ce34:	68db      	ldr	r3, [r3, #12]
 802ce36:	2b00      	cmp	r3, #0
 802ce38:	d144      	bne.n	802cec4 <_reclaim_reent+0xa0>
 802ce3a:	69e3      	ldr	r3, [r4, #28]
 802ce3c:	6819      	ldr	r1, [r3, #0]
 802ce3e:	b111      	cbz	r1, 802ce46 <_reclaim_reent+0x22>
 802ce40:	4620      	mov	r0, r4
 802ce42:	f000 f939 	bl	802d0b8 <_free_r>
 802ce46:	6961      	ldr	r1, [r4, #20]
 802ce48:	b111      	cbz	r1, 802ce50 <_reclaim_reent+0x2c>
 802ce4a:	4620      	mov	r0, r4
 802ce4c:	f000 f934 	bl	802d0b8 <_free_r>
 802ce50:	69e1      	ldr	r1, [r4, #28]
 802ce52:	b111      	cbz	r1, 802ce5a <_reclaim_reent+0x36>
 802ce54:	4620      	mov	r0, r4
 802ce56:	f000 f92f 	bl	802d0b8 <_free_r>
 802ce5a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802ce5c:	b111      	cbz	r1, 802ce64 <_reclaim_reent+0x40>
 802ce5e:	4620      	mov	r0, r4
 802ce60:	f000 f92a 	bl	802d0b8 <_free_r>
 802ce64:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ce66:	b111      	cbz	r1, 802ce6e <_reclaim_reent+0x4a>
 802ce68:	4620      	mov	r0, r4
 802ce6a:	f000 f925 	bl	802d0b8 <_free_r>
 802ce6e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802ce70:	b111      	cbz	r1, 802ce78 <_reclaim_reent+0x54>
 802ce72:	4620      	mov	r0, r4
 802ce74:	f000 f920 	bl	802d0b8 <_free_r>
 802ce78:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802ce7a:	b111      	cbz	r1, 802ce82 <_reclaim_reent+0x5e>
 802ce7c:	4620      	mov	r0, r4
 802ce7e:	f000 f91b 	bl	802d0b8 <_free_r>
 802ce82:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802ce84:	b111      	cbz	r1, 802ce8c <_reclaim_reent+0x68>
 802ce86:	4620      	mov	r0, r4
 802ce88:	f000 f916 	bl	802d0b8 <_free_r>
 802ce8c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802ce8e:	b111      	cbz	r1, 802ce96 <_reclaim_reent+0x72>
 802ce90:	4620      	mov	r0, r4
 802ce92:	f000 f911 	bl	802d0b8 <_free_r>
 802ce96:	6a23      	ldr	r3, [r4, #32]
 802ce98:	b1b3      	cbz	r3, 802cec8 <_reclaim_reent+0xa4>
 802ce9a:	4620      	mov	r0, r4
 802ce9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802cea0:	4718      	bx	r3
 802cea2:	5949      	ldr	r1, [r1, r5]
 802cea4:	b941      	cbnz	r1, 802ceb8 <_reclaim_reent+0x94>
 802cea6:	3504      	adds	r5, #4
 802cea8:	69e3      	ldr	r3, [r4, #28]
 802ceaa:	2d80      	cmp	r5, #128	; 0x80
 802ceac:	68d9      	ldr	r1, [r3, #12]
 802ceae:	d1f8      	bne.n	802cea2 <_reclaim_reent+0x7e>
 802ceb0:	4620      	mov	r0, r4
 802ceb2:	f000 f901 	bl	802d0b8 <_free_r>
 802ceb6:	e7c0      	b.n	802ce3a <_reclaim_reent+0x16>
 802ceb8:	680e      	ldr	r6, [r1, #0]
 802ceba:	4620      	mov	r0, r4
 802cebc:	f000 f8fc 	bl	802d0b8 <_free_r>
 802cec0:	4631      	mov	r1, r6
 802cec2:	e7ef      	b.n	802cea4 <_reclaim_reent+0x80>
 802cec4:	2500      	movs	r5, #0
 802cec6:	e7ef      	b.n	802cea8 <_reclaim_reent+0x84>
 802cec8:	bd70      	pop	{r4, r5, r6, pc}
 802ceca:	bf00      	nop
 802cecc:	20000164 	.word	0x20000164

0802ced0 <_lseek_r>:
 802ced0:	b538      	push	{r3, r4, r5, lr}
 802ced2:	4d07      	ldr	r5, [pc, #28]	; (802cef0 <_lseek_r+0x20>)
 802ced4:	4604      	mov	r4, r0
 802ced6:	4608      	mov	r0, r1
 802ced8:	4611      	mov	r1, r2
 802ceda:	2200      	movs	r2, #0
 802cedc:	602a      	str	r2, [r5, #0]
 802cede:	461a      	mov	r2, r3
 802cee0:	f7d5 fcc0 	bl	8002864 <_lseek>
 802cee4:	1c43      	adds	r3, r0, #1
 802cee6:	d102      	bne.n	802ceee <_lseek_r+0x1e>
 802cee8:	682b      	ldr	r3, [r5, #0]
 802ceea:	b103      	cbz	r3, 802ceee <_lseek_r+0x1e>
 802ceec:	6023      	str	r3, [r4, #0]
 802ceee:	bd38      	pop	{r3, r4, r5, pc}
 802cef0:	200142e4 	.word	0x200142e4

0802cef4 <_read_r>:
 802cef4:	b538      	push	{r3, r4, r5, lr}
 802cef6:	4d07      	ldr	r5, [pc, #28]	; (802cf14 <_read_r+0x20>)
 802cef8:	4604      	mov	r4, r0
 802cefa:	4608      	mov	r0, r1
 802cefc:	4611      	mov	r1, r2
 802cefe:	2200      	movs	r2, #0
 802cf00:	602a      	str	r2, [r5, #0]
 802cf02:	461a      	mov	r2, r3
 802cf04:	f7d5 fc86 	bl	8002814 <_read>
 802cf08:	1c43      	adds	r3, r0, #1
 802cf0a:	d102      	bne.n	802cf12 <_read_r+0x1e>
 802cf0c:	682b      	ldr	r3, [r5, #0]
 802cf0e:	b103      	cbz	r3, 802cf12 <_read_r+0x1e>
 802cf10:	6023      	str	r3, [r4, #0]
 802cf12:	bd38      	pop	{r3, r4, r5, pc}
 802cf14:	200142e4 	.word	0x200142e4

0802cf18 <_kill_r>:
 802cf18:	b538      	push	{r3, r4, r5, lr}
 802cf1a:	4d07      	ldr	r5, [pc, #28]	; (802cf38 <_kill_r+0x20>)
 802cf1c:	2300      	movs	r3, #0
 802cf1e:	4604      	mov	r4, r0
 802cf20:	4608      	mov	r0, r1
 802cf22:	4611      	mov	r1, r2
 802cf24:	602b      	str	r3, [r5, #0]
 802cf26:	f7d5 fc67 	bl	80027f8 <_kill>
 802cf2a:	1c43      	adds	r3, r0, #1
 802cf2c:	d102      	bne.n	802cf34 <_kill_r+0x1c>
 802cf2e:	682b      	ldr	r3, [r5, #0]
 802cf30:	b103      	cbz	r3, 802cf34 <_kill_r+0x1c>
 802cf32:	6023      	str	r3, [r4, #0]
 802cf34:	bd38      	pop	{r3, r4, r5, pc}
 802cf36:	bf00      	nop
 802cf38:	200142e4 	.word	0x200142e4

0802cf3c <_getpid_r>:
 802cf3c:	f7d5 bc5a 	b.w	80027f4 <_getpid>

0802cf40 <_sbrk_r>:
 802cf40:	b538      	push	{r3, r4, r5, lr}
 802cf42:	4d06      	ldr	r5, [pc, #24]	; (802cf5c <_sbrk_r+0x1c>)
 802cf44:	2300      	movs	r3, #0
 802cf46:	4604      	mov	r4, r0
 802cf48:	4608      	mov	r0, r1
 802cf4a:	602b      	str	r3, [r5, #0]
 802cf4c:	f7d5 fc8c 	bl	8002868 <_sbrk>
 802cf50:	1c43      	adds	r3, r0, #1
 802cf52:	d102      	bne.n	802cf5a <_sbrk_r+0x1a>
 802cf54:	682b      	ldr	r3, [r5, #0]
 802cf56:	b103      	cbz	r3, 802cf5a <_sbrk_r+0x1a>
 802cf58:	6023      	str	r3, [r4, #0]
 802cf5a:	bd38      	pop	{r3, r4, r5, pc}
 802cf5c:	200142e4 	.word	0x200142e4

0802cf60 <_write_r>:
 802cf60:	b538      	push	{r3, r4, r5, lr}
 802cf62:	4d07      	ldr	r5, [pc, #28]	; (802cf80 <_write_r+0x20>)
 802cf64:	4604      	mov	r4, r0
 802cf66:	4608      	mov	r0, r1
 802cf68:	4611      	mov	r1, r2
 802cf6a:	2200      	movs	r2, #0
 802cf6c:	602a      	str	r2, [r5, #0]
 802cf6e:	461a      	mov	r2, r3
 802cf70:	f7d5 fc5e 	bl	8002830 <_write>
 802cf74:	1c43      	adds	r3, r0, #1
 802cf76:	d102      	bne.n	802cf7e <_write_r+0x1e>
 802cf78:	682b      	ldr	r3, [r5, #0]
 802cf7a:	b103      	cbz	r3, 802cf7e <_write_r+0x1e>
 802cf7c:	6023      	str	r3, [r4, #0]
 802cf7e:	bd38      	pop	{r3, r4, r5, pc}
 802cf80:	200142e4 	.word	0x200142e4

0802cf84 <__errno>:
 802cf84:	4b01      	ldr	r3, [pc, #4]	; (802cf8c <__errno+0x8>)
 802cf86:	6818      	ldr	r0, [r3, #0]
 802cf88:	4770      	bx	lr
 802cf8a:	bf00      	nop
 802cf8c:	20000164 	.word	0x20000164

0802cf90 <__libc_init_array>:
 802cf90:	b570      	push	{r4, r5, r6, lr}
 802cf92:	4d0d      	ldr	r5, [pc, #52]	; (802cfc8 <__libc_init_array+0x38>)
 802cf94:	4c0d      	ldr	r4, [pc, #52]	; (802cfcc <__libc_init_array+0x3c>)
 802cf96:	1b64      	subs	r4, r4, r5
 802cf98:	10a4      	asrs	r4, r4, #2
 802cf9a:	2600      	movs	r6, #0
 802cf9c:	42a6      	cmp	r6, r4
 802cf9e:	d109      	bne.n	802cfb4 <__libc_init_array+0x24>
 802cfa0:	4d0b      	ldr	r5, [pc, #44]	; (802cfd0 <__libc_init_array+0x40>)
 802cfa2:	4c0c      	ldr	r4, [pc, #48]	; (802cfd4 <__libc_init_array+0x44>)
 802cfa4:	f000 fd70 	bl	802da88 <_init>
 802cfa8:	1b64      	subs	r4, r4, r5
 802cfaa:	10a4      	asrs	r4, r4, #2
 802cfac:	2600      	movs	r6, #0
 802cfae:	42a6      	cmp	r6, r4
 802cfb0:	d105      	bne.n	802cfbe <__libc_init_array+0x2e>
 802cfb2:	bd70      	pop	{r4, r5, r6, pc}
 802cfb4:	f855 3b04 	ldr.w	r3, [r5], #4
 802cfb8:	4798      	blx	r3
 802cfba:	3601      	adds	r6, #1
 802cfbc:	e7ee      	b.n	802cf9c <__libc_init_array+0xc>
 802cfbe:	f855 3b04 	ldr.w	r3, [r5], #4
 802cfc2:	4798      	blx	r3
 802cfc4:	3601      	adds	r6, #1
 802cfc6:	e7f2      	b.n	802cfae <__libc_init_array+0x1e>
 802cfc8:	080ce370 	.word	0x080ce370
 802cfcc:	080ce370 	.word	0x080ce370
 802cfd0:	080ce370 	.word	0x080ce370
 802cfd4:	080ce384 	.word	0x080ce384

0802cfd8 <__retarget_lock_init_recursive>:
 802cfd8:	4770      	bx	lr

0802cfda <__retarget_lock_acquire_recursive>:
 802cfda:	4770      	bx	lr

0802cfdc <__retarget_lock_release_recursive>:
 802cfdc:	4770      	bx	lr

0802cfde <memcpy>:
 802cfde:	440a      	add	r2, r1
 802cfe0:	4291      	cmp	r1, r2
 802cfe2:	f100 33ff 	add.w	r3, r0, #4294967295
 802cfe6:	d100      	bne.n	802cfea <memcpy+0xc>
 802cfe8:	4770      	bx	lr
 802cfea:	b510      	push	{r4, lr}
 802cfec:	f811 4b01 	ldrb.w	r4, [r1], #1
 802cff0:	f803 4f01 	strb.w	r4, [r3, #1]!
 802cff4:	4291      	cmp	r1, r2
 802cff6:	d1f9      	bne.n	802cfec <memcpy+0xe>
 802cff8:	bd10      	pop	{r4, pc}
	...

0802cffc <__register_exitproc>:
 802cffc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d000:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802d0b4 <__register_exitproc+0xb8>
 802d004:	4606      	mov	r6, r0
 802d006:	f8d8 0000 	ldr.w	r0, [r8]
 802d00a:	461f      	mov	r7, r3
 802d00c:	460d      	mov	r5, r1
 802d00e:	4691      	mov	r9, r2
 802d010:	f7ff ffe3 	bl	802cfda <__retarget_lock_acquire_recursive>
 802d014:	4b23      	ldr	r3, [pc, #140]	; (802d0a4 <__register_exitproc+0xa8>)
 802d016:	681c      	ldr	r4, [r3, #0]
 802d018:	b934      	cbnz	r4, 802d028 <__register_exitproc+0x2c>
 802d01a:	4c23      	ldr	r4, [pc, #140]	; (802d0a8 <__register_exitproc+0xac>)
 802d01c:	601c      	str	r4, [r3, #0]
 802d01e:	4b23      	ldr	r3, [pc, #140]	; (802d0ac <__register_exitproc+0xb0>)
 802d020:	b113      	cbz	r3, 802d028 <__register_exitproc+0x2c>
 802d022:	681b      	ldr	r3, [r3, #0]
 802d024:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802d028:	6863      	ldr	r3, [r4, #4]
 802d02a:	2b1f      	cmp	r3, #31
 802d02c:	dd07      	ble.n	802d03e <__register_exitproc+0x42>
 802d02e:	f8d8 0000 	ldr.w	r0, [r8]
 802d032:	f7ff ffd3 	bl	802cfdc <__retarget_lock_release_recursive>
 802d036:	f04f 30ff 	mov.w	r0, #4294967295
 802d03a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802d03e:	b32e      	cbz	r6, 802d08c <__register_exitproc+0x90>
 802d040:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802d044:	b968      	cbnz	r0, 802d062 <__register_exitproc+0x66>
 802d046:	4b1a      	ldr	r3, [pc, #104]	; (802d0b0 <__register_exitproc+0xb4>)
 802d048:	2b00      	cmp	r3, #0
 802d04a:	d0f0      	beq.n	802d02e <__register_exitproc+0x32>
 802d04c:	f44f 7084 	mov.w	r0, #264	; 0x108
 802d050:	f7ff fcbe 	bl	802c9d0 <malloc>
 802d054:	2800      	cmp	r0, #0
 802d056:	d0ea      	beq.n	802d02e <__register_exitproc+0x32>
 802d058:	2300      	movs	r3, #0
 802d05a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802d05e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802d062:	6863      	ldr	r3, [r4, #4]
 802d064:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802d068:	2201      	movs	r2, #1
 802d06a:	409a      	lsls	r2, r3
 802d06c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802d070:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802d074:	4313      	orrs	r3, r2
 802d076:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802d07a:	2e02      	cmp	r6, #2
 802d07c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802d080:	bf02      	ittt	eq
 802d082:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802d086:	4313      	orreq	r3, r2
 802d088:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802d08c:	6863      	ldr	r3, [r4, #4]
 802d08e:	f8d8 0000 	ldr.w	r0, [r8]
 802d092:	1c5a      	adds	r2, r3, #1
 802d094:	3302      	adds	r3, #2
 802d096:	6062      	str	r2, [r4, #4]
 802d098:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802d09c:	f7ff ff9e 	bl	802cfdc <__retarget_lock_release_recursive>
 802d0a0:	2000      	movs	r0, #0
 802d0a2:	e7ca      	b.n	802d03a <__register_exitproc+0x3e>
 802d0a4:	20014378 	.word	0x20014378
 802d0a8:	200142ec 	.word	0x200142ec
 802d0ac:	08044c38 	.word	0x08044c38
 802d0b0:	0802c9d1 	.word	0x0802c9d1
 802d0b4:	20000168 	.word	0x20000168

0802d0b8 <_free_r>:
 802d0b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802d0ba:	2900      	cmp	r1, #0
 802d0bc:	d044      	beq.n	802d148 <_free_r+0x90>
 802d0be:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802d0c2:	9001      	str	r0, [sp, #4]
 802d0c4:	2b00      	cmp	r3, #0
 802d0c6:	f1a1 0404 	sub.w	r4, r1, #4
 802d0ca:	bfb8      	it	lt
 802d0cc:	18e4      	addlt	r4, r4, r3
 802d0ce:	f7ff fd2f 	bl	802cb30 <__malloc_lock>
 802d0d2:	4a1e      	ldr	r2, [pc, #120]	; (802d14c <_free_r+0x94>)
 802d0d4:	9801      	ldr	r0, [sp, #4]
 802d0d6:	6813      	ldr	r3, [r2, #0]
 802d0d8:	b933      	cbnz	r3, 802d0e8 <_free_r+0x30>
 802d0da:	6063      	str	r3, [r4, #4]
 802d0dc:	6014      	str	r4, [r2, #0]
 802d0de:	b003      	add	sp, #12
 802d0e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802d0e4:	f7ff bd2a 	b.w	802cb3c <__malloc_unlock>
 802d0e8:	42a3      	cmp	r3, r4
 802d0ea:	d908      	bls.n	802d0fe <_free_r+0x46>
 802d0ec:	6825      	ldr	r5, [r4, #0]
 802d0ee:	1961      	adds	r1, r4, r5
 802d0f0:	428b      	cmp	r3, r1
 802d0f2:	bf01      	itttt	eq
 802d0f4:	6819      	ldreq	r1, [r3, #0]
 802d0f6:	685b      	ldreq	r3, [r3, #4]
 802d0f8:	1949      	addeq	r1, r1, r5
 802d0fa:	6021      	streq	r1, [r4, #0]
 802d0fc:	e7ed      	b.n	802d0da <_free_r+0x22>
 802d0fe:	461a      	mov	r2, r3
 802d100:	685b      	ldr	r3, [r3, #4]
 802d102:	b10b      	cbz	r3, 802d108 <_free_r+0x50>
 802d104:	42a3      	cmp	r3, r4
 802d106:	d9fa      	bls.n	802d0fe <_free_r+0x46>
 802d108:	6811      	ldr	r1, [r2, #0]
 802d10a:	1855      	adds	r5, r2, r1
 802d10c:	42a5      	cmp	r5, r4
 802d10e:	d10b      	bne.n	802d128 <_free_r+0x70>
 802d110:	6824      	ldr	r4, [r4, #0]
 802d112:	4421      	add	r1, r4
 802d114:	1854      	adds	r4, r2, r1
 802d116:	42a3      	cmp	r3, r4
 802d118:	6011      	str	r1, [r2, #0]
 802d11a:	d1e0      	bne.n	802d0de <_free_r+0x26>
 802d11c:	681c      	ldr	r4, [r3, #0]
 802d11e:	685b      	ldr	r3, [r3, #4]
 802d120:	6053      	str	r3, [r2, #4]
 802d122:	440c      	add	r4, r1
 802d124:	6014      	str	r4, [r2, #0]
 802d126:	e7da      	b.n	802d0de <_free_r+0x26>
 802d128:	d902      	bls.n	802d130 <_free_r+0x78>
 802d12a:	230c      	movs	r3, #12
 802d12c:	6003      	str	r3, [r0, #0]
 802d12e:	e7d6      	b.n	802d0de <_free_r+0x26>
 802d130:	6825      	ldr	r5, [r4, #0]
 802d132:	1961      	adds	r1, r4, r5
 802d134:	428b      	cmp	r3, r1
 802d136:	bf04      	itt	eq
 802d138:	6819      	ldreq	r1, [r3, #0]
 802d13a:	685b      	ldreq	r3, [r3, #4]
 802d13c:	6063      	str	r3, [r4, #4]
 802d13e:	bf04      	itt	eq
 802d140:	1949      	addeq	r1, r1, r5
 802d142:	6021      	streq	r1, [r4, #0]
 802d144:	6054      	str	r4, [r2, #4]
 802d146:	e7ca      	b.n	802d0de <_free_r+0x26>
 802d148:	b003      	add	sp, #12
 802d14a:	bd30      	pop	{r4, r5, pc}
 802d14c:	200141a0 	.word	0x200141a0

0802d150 <__sfputc_r>:
 802d150:	6893      	ldr	r3, [r2, #8]
 802d152:	3b01      	subs	r3, #1
 802d154:	2b00      	cmp	r3, #0
 802d156:	b410      	push	{r4}
 802d158:	6093      	str	r3, [r2, #8]
 802d15a:	da08      	bge.n	802d16e <__sfputc_r+0x1e>
 802d15c:	6994      	ldr	r4, [r2, #24]
 802d15e:	42a3      	cmp	r3, r4
 802d160:	db01      	blt.n	802d166 <__sfputc_r+0x16>
 802d162:	290a      	cmp	r1, #10
 802d164:	d103      	bne.n	802d16e <__sfputc_r+0x1e>
 802d166:	f85d 4b04 	ldr.w	r4, [sp], #4
 802d16a:	f000 bb73 	b.w	802d854 <__swbuf_r>
 802d16e:	6813      	ldr	r3, [r2, #0]
 802d170:	1c58      	adds	r0, r3, #1
 802d172:	6010      	str	r0, [r2, #0]
 802d174:	7019      	strb	r1, [r3, #0]
 802d176:	4608      	mov	r0, r1
 802d178:	f85d 4b04 	ldr.w	r4, [sp], #4
 802d17c:	4770      	bx	lr

0802d17e <__sfputs_r>:
 802d17e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d180:	4606      	mov	r6, r0
 802d182:	460f      	mov	r7, r1
 802d184:	4614      	mov	r4, r2
 802d186:	18d5      	adds	r5, r2, r3
 802d188:	42ac      	cmp	r4, r5
 802d18a:	d101      	bne.n	802d190 <__sfputs_r+0x12>
 802d18c:	2000      	movs	r0, #0
 802d18e:	e007      	b.n	802d1a0 <__sfputs_r+0x22>
 802d190:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d194:	463a      	mov	r2, r7
 802d196:	4630      	mov	r0, r6
 802d198:	f7ff ffda 	bl	802d150 <__sfputc_r>
 802d19c:	1c43      	adds	r3, r0, #1
 802d19e:	d1f3      	bne.n	802d188 <__sfputs_r+0xa>
 802d1a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802d1a4 <_vfiprintf_r>:
 802d1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d1a8:	460d      	mov	r5, r1
 802d1aa:	b09d      	sub	sp, #116	; 0x74
 802d1ac:	4614      	mov	r4, r2
 802d1ae:	4698      	mov	r8, r3
 802d1b0:	4606      	mov	r6, r0
 802d1b2:	b118      	cbz	r0, 802d1bc <_vfiprintf_r+0x18>
 802d1b4:	6a03      	ldr	r3, [r0, #32]
 802d1b6:	b90b      	cbnz	r3, 802d1bc <_vfiprintf_r+0x18>
 802d1b8:	f7ff fd60 	bl	802cc7c <__sinit>
 802d1bc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802d1be:	07d9      	lsls	r1, r3, #31
 802d1c0:	d405      	bmi.n	802d1ce <_vfiprintf_r+0x2a>
 802d1c2:	89ab      	ldrh	r3, [r5, #12]
 802d1c4:	059a      	lsls	r2, r3, #22
 802d1c6:	d402      	bmi.n	802d1ce <_vfiprintf_r+0x2a>
 802d1c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802d1ca:	f7ff ff06 	bl	802cfda <__retarget_lock_acquire_recursive>
 802d1ce:	89ab      	ldrh	r3, [r5, #12]
 802d1d0:	071b      	lsls	r3, r3, #28
 802d1d2:	d501      	bpl.n	802d1d8 <_vfiprintf_r+0x34>
 802d1d4:	692b      	ldr	r3, [r5, #16]
 802d1d6:	b99b      	cbnz	r3, 802d200 <_vfiprintf_r+0x5c>
 802d1d8:	4629      	mov	r1, r5
 802d1da:	4630      	mov	r0, r6
 802d1dc:	f000 fb78 	bl	802d8d0 <__swsetup_r>
 802d1e0:	b170      	cbz	r0, 802d200 <_vfiprintf_r+0x5c>
 802d1e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802d1e4:	07dc      	lsls	r4, r3, #31
 802d1e6:	d504      	bpl.n	802d1f2 <_vfiprintf_r+0x4e>
 802d1e8:	f04f 30ff 	mov.w	r0, #4294967295
 802d1ec:	b01d      	add	sp, #116	; 0x74
 802d1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d1f2:	89ab      	ldrh	r3, [r5, #12]
 802d1f4:	0598      	lsls	r0, r3, #22
 802d1f6:	d4f7      	bmi.n	802d1e8 <_vfiprintf_r+0x44>
 802d1f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802d1fa:	f7ff feef 	bl	802cfdc <__retarget_lock_release_recursive>
 802d1fe:	e7f3      	b.n	802d1e8 <_vfiprintf_r+0x44>
 802d200:	2300      	movs	r3, #0
 802d202:	9309      	str	r3, [sp, #36]	; 0x24
 802d204:	2320      	movs	r3, #32
 802d206:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802d20a:	f8cd 800c 	str.w	r8, [sp, #12]
 802d20e:	2330      	movs	r3, #48	; 0x30
 802d210:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802d3c4 <_vfiprintf_r+0x220>
 802d214:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802d218:	f04f 0901 	mov.w	r9, #1
 802d21c:	4623      	mov	r3, r4
 802d21e:	469a      	mov	sl, r3
 802d220:	f813 2b01 	ldrb.w	r2, [r3], #1
 802d224:	b10a      	cbz	r2, 802d22a <_vfiprintf_r+0x86>
 802d226:	2a25      	cmp	r2, #37	; 0x25
 802d228:	d1f9      	bne.n	802d21e <_vfiprintf_r+0x7a>
 802d22a:	ebba 0b04 	subs.w	fp, sl, r4
 802d22e:	d00b      	beq.n	802d248 <_vfiprintf_r+0xa4>
 802d230:	465b      	mov	r3, fp
 802d232:	4622      	mov	r2, r4
 802d234:	4629      	mov	r1, r5
 802d236:	4630      	mov	r0, r6
 802d238:	f7ff ffa1 	bl	802d17e <__sfputs_r>
 802d23c:	3001      	adds	r0, #1
 802d23e:	f000 80a9 	beq.w	802d394 <_vfiprintf_r+0x1f0>
 802d242:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802d244:	445a      	add	r2, fp
 802d246:	9209      	str	r2, [sp, #36]	; 0x24
 802d248:	f89a 3000 	ldrb.w	r3, [sl]
 802d24c:	2b00      	cmp	r3, #0
 802d24e:	f000 80a1 	beq.w	802d394 <_vfiprintf_r+0x1f0>
 802d252:	2300      	movs	r3, #0
 802d254:	f04f 32ff 	mov.w	r2, #4294967295
 802d258:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802d25c:	f10a 0a01 	add.w	sl, sl, #1
 802d260:	9304      	str	r3, [sp, #16]
 802d262:	9307      	str	r3, [sp, #28]
 802d264:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802d268:	931a      	str	r3, [sp, #104]	; 0x68
 802d26a:	4654      	mov	r4, sl
 802d26c:	2205      	movs	r2, #5
 802d26e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d272:	4854      	ldr	r0, [pc, #336]	; (802d3c4 <_vfiprintf_r+0x220>)
 802d274:	f7d3 f81c 	bl	80002b0 <memchr>
 802d278:	9a04      	ldr	r2, [sp, #16]
 802d27a:	b9d8      	cbnz	r0, 802d2b4 <_vfiprintf_r+0x110>
 802d27c:	06d1      	lsls	r1, r2, #27
 802d27e:	bf44      	itt	mi
 802d280:	2320      	movmi	r3, #32
 802d282:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802d286:	0713      	lsls	r3, r2, #28
 802d288:	bf44      	itt	mi
 802d28a:	232b      	movmi	r3, #43	; 0x2b
 802d28c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802d290:	f89a 3000 	ldrb.w	r3, [sl]
 802d294:	2b2a      	cmp	r3, #42	; 0x2a
 802d296:	d015      	beq.n	802d2c4 <_vfiprintf_r+0x120>
 802d298:	9a07      	ldr	r2, [sp, #28]
 802d29a:	4654      	mov	r4, sl
 802d29c:	2000      	movs	r0, #0
 802d29e:	f04f 0c0a 	mov.w	ip, #10
 802d2a2:	4621      	mov	r1, r4
 802d2a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802d2a8:	3b30      	subs	r3, #48	; 0x30
 802d2aa:	2b09      	cmp	r3, #9
 802d2ac:	d94d      	bls.n	802d34a <_vfiprintf_r+0x1a6>
 802d2ae:	b1b0      	cbz	r0, 802d2de <_vfiprintf_r+0x13a>
 802d2b0:	9207      	str	r2, [sp, #28]
 802d2b2:	e014      	b.n	802d2de <_vfiprintf_r+0x13a>
 802d2b4:	eba0 0308 	sub.w	r3, r0, r8
 802d2b8:	fa09 f303 	lsl.w	r3, r9, r3
 802d2bc:	4313      	orrs	r3, r2
 802d2be:	9304      	str	r3, [sp, #16]
 802d2c0:	46a2      	mov	sl, r4
 802d2c2:	e7d2      	b.n	802d26a <_vfiprintf_r+0xc6>
 802d2c4:	9b03      	ldr	r3, [sp, #12]
 802d2c6:	1d19      	adds	r1, r3, #4
 802d2c8:	681b      	ldr	r3, [r3, #0]
 802d2ca:	9103      	str	r1, [sp, #12]
 802d2cc:	2b00      	cmp	r3, #0
 802d2ce:	bfbb      	ittet	lt
 802d2d0:	425b      	neglt	r3, r3
 802d2d2:	f042 0202 	orrlt.w	r2, r2, #2
 802d2d6:	9307      	strge	r3, [sp, #28]
 802d2d8:	9307      	strlt	r3, [sp, #28]
 802d2da:	bfb8      	it	lt
 802d2dc:	9204      	strlt	r2, [sp, #16]
 802d2de:	7823      	ldrb	r3, [r4, #0]
 802d2e0:	2b2e      	cmp	r3, #46	; 0x2e
 802d2e2:	d10c      	bne.n	802d2fe <_vfiprintf_r+0x15a>
 802d2e4:	7863      	ldrb	r3, [r4, #1]
 802d2e6:	2b2a      	cmp	r3, #42	; 0x2a
 802d2e8:	d134      	bne.n	802d354 <_vfiprintf_r+0x1b0>
 802d2ea:	9b03      	ldr	r3, [sp, #12]
 802d2ec:	1d1a      	adds	r2, r3, #4
 802d2ee:	681b      	ldr	r3, [r3, #0]
 802d2f0:	9203      	str	r2, [sp, #12]
 802d2f2:	2b00      	cmp	r3, #0
 802d2f4:	bfb8      	it	lt
 802d2f6:	f04f 33ff 	movlt.w	r3, #4294967295
 802d2fa:	3402      	adds	r4, #2
 802d2fc:	9305      	str	r3, [sp, #20]
 802d2fe:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802d3d4 <_vfiprintf_r+0x230>
 802d302:	7821      	ldrb	r1, [r4, #0]
 802d304:	2203      	movs	r2, #3
 802d306:	4650      	mov	r0, sl
 802d308:	f7d2 ffd2 	bl	80002b0 <memchr>
 802d30c:	b138      	cbz	r0, 802d31e <_vfiprintf_r+0x17a>
 802d30e:	9b04      	ldr	r3, [sp, #16]
 802d310:	eba0 000a 	sub.w	r0, r0, sl
 802d314:	2240      	movs	r2, #64	; 0x40
 802d316:	4082      	lsls	r2, r0
 802d318:	4313      	orrs	r3, r2
 802d31a:	3401      	adds	r4, #1
 802d31c:	9304      	str	r3, [sp, #16]
 802d31e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d322:	4829      	ldr	r0, [pc, #164]	; (802d3c8 <_vfiprintf_r+0x224>)
 802d324:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802d328:	2206      	movs	r2, #6
 802d32a:	f7d2 ffc1 	bl	80002b0 <memchr>
 802d32e:	2800      	cmp	r0, #0
 802d330:	d03f      	beq.n	802d3b2 <_vfiprintf_r+0x20e>
 802d332:	4b26      	ldr	r3, [pc, #152]	; (802d3cc <_vfiprintf_r+0x228>)
 802d334:	bb1b      	cbnz	r3, 802d37e <_vfiprintf_r+0x1da>
 802d336:	9b03      	ldr	r3, [sp, #12]
 802d338:	3307      	adds	r3, #7
 802d33a:	f023 0307 	bic.w	r3, r3, #7
 802d33e:	3308      	adds	r3, #8
 802d340:	9303      	str	r3, [sp, #12]
 802d342:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d344:	443b      	add	r3, r7
 802d346:	9309      	str	r3, [sp, #36]	; 0x24
 802d348:	e768      	b.n	802d21c <_vfiprintf_r+0x78>
 802d34a:	fb0c 3202 	mla	r2, ip, r2, r3
 802d34e:	460c      	mov	r4, r1
 802d350:	2001      	movs	r0, #1
 802d352:	e7a6      	b.n	802d2a2 <_vfiprintf_r+0xfe>
 802d354:	2300      	movs	r3, #0
 802d356:	3401      	adds	r4, #1
 802d358:	9305      	str	r3, [sp, #20]
 802d35a:	4619      	mov	r1, r3
 802d35c:	f04f 0c0a 	mov.w	ip, #10
 802d360:	4620      	mov	r0, r4
 802d362:	f810 2b01 	ldrb.w	r2, [r0], #1
 802d366:	3a30      	subs	r2, #48	; 0x30
 802d368:	2a09      	cmp	r2, #9
 802d36a:	d903      	bls.n	802d374 <_vfiprintf_r+0x1d0>
 802d36c:	2b00      	cmp	r3, #0
 802d36e:	d0c6      	beq.n	802d2fe <_vfiprintf_r+0x15a>
 802d370:	9105      	str	r1, [sp, #20]
 802d372:	e7c4      	b.n	802d2fe <_vfiprintf_r+0x15a>
 802d374:	fb0c 2101 	mla	r1, ip, r1, r2
 802d378:	4604      	mov	r4, r0
 802d37a:	2301      	movs	r3, #1
 802d37c:	e7f0      	b.n	802d360 <_vfiprintf_r+0x1bc>
 802d37e:	ab03      	add	r3, sp, #12
 802d380:	9300      	str	r3, [sp, #0]
 802d382:	462a      	mov	r2, r5
 802d384:	4b12      	ldr	r3, [pc, #72]	; (802d3d0 <_vfiprintf_r+0x22c>)
 802d386:	a904      	add	r1, sp, #16
 802d388:	4630      	mov	r0, r6
 802d38a:	f3af 8000 	nop.w
 802d38e:	4607      	mov	r7, r0
 802d390:	1c78      	adds	r0, r7, #1
 802d392:	d1d6      	bne.n	802d342 <_vfiprintf_r+0x19e>
 802d394:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802d396:	07d9      	lsls	r1, r3, #31
 802d398:	d405      	bmi.n	802d3a6 <_vfiprintf_r+0x202>
 802d39a:	89ab      	ldrh	r3, [r5, #12]
 802d39c:	059a      	lsls	r2, r3, #22
 802d39e:	d402      	bmi.n	802d3a6 <_vfiprintf_r+0x202>
 802d3a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802d3a2:	f7ff fe1b 	bl	802cfdc <__retarget_lock_release_recursive>
 802d3a6:	89ab      	ldrh	r3, [r5, #12]
 802d3a8:	065b      	lsls	r3, r3, #25
 802d3aa:	f53f af1d 	bmi.w	802d1e8 <_vfiprintf_r+0x44>
 802d3ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 802d3b0:	e71c      	b.n	802d1ec <_vfiprintf_r+0x48>
 802d3b2:	ab03      	add	r3, sp, #12
 802d3b4:	9300      	str	r3, [sp, #0]
 802d3b6:	462a      	mov	r2, r5
 802d3b8:	4b05      	ldr	r3, [pc, #20]	; (802d3d0 <_vfiprintf_r+0x22c>)
 802d3ba:	a904      	add	r1, sp, #16
 802d3bc:	4630      	mov	r0, r6
 802d3be:	f000 f879 	bl	802d4b4 <_printf_i>
 802d3c2:	e7e4      	b.n	802d38e <_vfiprintf_r+0x1ea>
 802d3c4:	08044c3c 	.word	0x08044c3c
 802d3c8:	08044c46 	.word	0x08044c46
 802d3cc:	00000000 	.word	0x00000000
 802d3d0:	0802d17f 	.word	0x0802d17f
 802d3d4:	08044c42 	.word	0x08044c42

0802d3d8 <_printf_common>:
 802d3d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802d3dc:	4616      	mov	r6, r2
 802d3de:	4699      	mov	r9, r3
 802d3e0:	688a      	ldr	r2, [r1, #8]
 802d3e2:	690b      	ldr	r3, [r1, #16]
 802d3e4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802d3e8:	4293      	cmp	r3, r2
 802d3ea:	bfb8      	it	lt
 802d3ec:	4613      	movlt	r3, r2
 802d3ee:	6033      	str	r3, [r6, #0]
 802d3f0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802d3f4:	4607      	mov	r7, r0
 802d3f6:	460c      	mov	r4, r1
 802d3f8:	b10a      	cbz	r2, 802d3fe <_printf_common+0x26>
 802d3fa:	3301      	adds	r3, #1
 802d3fc:	6033      	str	r3, [r6, #0]
 802d3fe:	6823      	ldr	r3, [r4, #0]
 802d400:	0699      	lsls	r1, r3, #26
 802d402:	bf42      	ittt	mi
 802d404:	6833      	ldrmi	r3, [r6, #0]
 802d406:	3302      	addmi	r3, #2
 802d408:	6033      	strmi	r3, [r6, #0]
 802d40a:	6825      	ldr	r5, [r4, #0]
 802d40c:	f015 0506 	ands.w	r5, r5, #6
 802d410:	d106      	bne.n	802d420 <_printf_common+0x48>
 802d412:	f104 0a19 	add.w	sl, r4, #25
 802d416:	68e3      	ldr	r3, [r4, #12]
 802d418:	6832      	ldr	r2, [r6, #0]
 802d41a:	1a9b      	subs	r3, r3, r2
 802d41c:	42ab      	cmp	r3, r5
 802d41e:	dc26      	bgt.n	802d46e <_printf_common+0x96>
 802d420:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802d424:	1e13      	subs	r3, r2, #0
 802d426:	6822      	ldr	r2, [r4, #0]
 802d428:	bf18      	it	ne
 802d42a:	2301      	movne	r3, #1
 802d42c:	0692      	lsls	r2, r2, #26
 802d42e:	d42b      	bmi.n	802d488 <_printf_common+0xb0>
 802d430:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802d434:	4649      	mov	r1, r9
 802d436:	4638      	mov	r0, r7
 802d438:	47c0      	blx	r8
 802d43a:	3001      	adds	r0, #1
 802d43c:	d01e      	beq.n	802d47c <_printf_common+0xa4>
 802d43e:	6823      	ldr	r3, [r4, #0]
 802d440:	6922      	ldr	r2, [r4, #16]
 802d442:	f003 0306 	and.w	r3, r3, #6
 802d446:	2b04      	cmp	r3, #4
 802d448:	bf02      	ittt	eq
 802d44a:	68e5      	ldreq	r5, [r4, #12]
 802d44c:	6833      	ldreq	r3, [r6, #0]
 802d44e:	1aed      	subeq	r5, r5, r3
 802d450:	68a3      	ldr	r3, [r4, #8]
 802d452:	bf0c      	ite	eq
 802d454:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802d458:	2500      	movne	r5, #0
 802d45a:	4293      	cmp	r3, r2
 802d45c:	bfc4      	itt	gt
 802d45e:	1a9b      	subgt	r3, r3, r2
 802d460:	18ed      	addgt	r5, r5, r3
 802d462:	2600      	movs	r6, #0
 802d464:	341a      	adds	r4, #26
 802d466:	42b5      	cmp	r5, r6
 802d468:	d11a      	bne.n	802d4a0 <_printf_common+0xc8>
 802d46a:	2000      	movs	r0, #0
 802d46c:	e008      	b.n	802d480 <_printf_common+0xa8>
 802d46e:	2301      	movs	r3, #1
 802d470:	4652      	mov	r2, sl
 802d472:	4649      	mov	r1, r9
 802d474:	4638      	mov	r0, r7
 802d476:	47c0      	blx	r8
 802d478:	3001      	adds	r0, #1
 802d47a:	d103      	bne.n	802d484 <_printf_common+0xac>
 802d47c:	f04f 30ff 	mov.w	r0, #4294967295
 802d480:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802d484:	3501      	adds	r5, #1
 802d486:	e7c6      	b.n	802d416 <_printf_common+0x3e>
 802d488:	18e1      	adds	r1, r4, r3
 802d48a:	1c5a      	adds	r2, r3, #1
 802d48c:	2030      	movs	r0, #48	; 0x30
 802d48e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802d492:	4422      	add	r2, r4
 802d494:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802d498:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802d49c:	3302      	adds	r3, #2
 802d49e:	e7c7      	b.n	802d430 <_printf_common+0x58>
 802d4a0:	2301      	movs	r3, #1
 802d4a2:	4622      	mov	r2, r4
 802d4a4:	4649      	mov	r1, r9
 802d4a6:	4638      	mov	r0, r7
 802d4a8:	47c0      	blx	r8
 802d4aa:	3001      	adds	r0, #1
 802d4ac:	d0e6      	beq.n	802d47c <_printf_common+0xa4>
 802d4ae:	3601      	adds	r6, #1
 802d4b0:	e7d9      	b.n	802d466 <_printf_common+0x8e>
	...

0802d4b4 <_printf_i>:
 802d4b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802d4b8:	7e0f      	ldrb	r7, [r1, #24]
 802d4ba:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802d4bc:	2f78      	cmp	r7, #120	; 0x78
 802d4be:	4691      	mov	r9, r2
 802d4c0:	4680      	mov	r8, r0
 802d4c2:	460c      	mov	r4, r1
 802d4c4:	469a      	mov	sl, r3
 802d4c6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802d4ca:	d807      	bhi.n	802d4dc <_printf_i+0x28>
 802d4cc:	2f62      	cmp	r7, #98	; 0x62
 802d4ce:	d80a      	bhi.n	802d4e6 <_printf_i+0x32>
 802d4d0:	2f00      	cmp	r7, #0
 802d4d2:	f000 80d4 	beq.w	802d67e <_printf_i+0x1ca>
 802d4d6:	2f58      	cmp	r7, #88	; 0x58
 802d4d8:	f000 80c0 	beq.w	802d65c <_printf_i+0x1a8>
 802d4dc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802d4e0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802d4e4:	e03a      	b.n	802d55c <_printf_i+0xa8>
 802d4e6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802d4ea:	2b15      	cmp	r3, #21
 802d4ec:	d8f6      	bhi.n	802d4dc <_printf_i+0x28>
 802d4ee:	a101      	add	r1, pc, #4	; (adr r1, 802d4f4 <_printf_i+0x40>)
 802d4f0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802d4f4:	0802d54d 	.word	0x0802d54d
 802d4f8:	0802d561 	.word	0x0802d561
 802d4fc:	0802d4dd 	.word	0x0802d4dd
 802d500:	0802d4dd 	.word	0x0802d4dd
 802d504:	0802d4dd 	.word	0x0802d4dd
 802d508:	0802d4dd 	.word	0x0802d4dd
 802d50c:	0802d561 	.word	0x0802d561
 802d510:	0802d4dd 	.word	0x0802d4dd
 802d514:	0802d4dd 	.word	0x0802d4dd
 802d518:	0802d4dd 	.word	0x0802d4dd
 802d51c:	0802d4dd 	.word	0x0802d4dd
 802d520:	0802d665 	.word	0x0802d665
 802d524:	0802d58d 	.word	0x0802d58d
 802d528:	0802d61f 	.word	0x0802d61f
 802d52c:	0802d4dd 	.word	0x0802d4dd
 802d530:	0802d4dd 	.word	0x0802d4dd
 802d534:	0802d687 	.word	0x0802d687
 802d538:	0802d4dd 	.word	0x0802d4dd
 802d53c:	0802d58d 	.word	0x0802d58d
 802d540:	0802d4dd 	.word	0x0802d4dd
 802d544:	0802d4dd 	.word	0x0802d4dd
 802d548:	0802d627 	.word	0x0802d627
 802d54c:	682b      	ldr	r3, [r5, #0]
 802d54e:	1d1a      	adds	r2, r3, #4
 802d550:	681b      	ldr	r3, [r3, #0]
 802d552:	602a      	str	r2, [r5, #0]
 802d554:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802d558:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802d55c:	2301      	movs	r3, #1
 802d55e:	e09f      	b.n	802d6a0 <_printf_i+0x1ec>
 802d560:	6820      	ldr	r0, [r4, #0]
 802d562:	682b      	ldr	r3, [r5, #0]
 802d564:	0607      	lsls	r7, r0, #24
 802d566:	f103 0104 	add.w	r1, r3, #4
 802d56a:	6029      	str	r1, [r5, #0]
 802d56c:	d501      	bpl.n	802d572 <_printf_i+0xbe>
 802d56e:	681e      	ldr	r6, [r3, #0]
 802d570:	e003      	b.n	802d57a <_printf_i+0xc6>
 802d572:	0646      	lsls	r6, r0, #25
 802d574:	d5fb      	bpl.n	802d56e <_printf_i+0xba>
 802d576:	f9b3 6000 	ldrsh.w	r6, [r3]
 802d57a:	2e00      	cmp	r6, #0
 802d57c:	da03      	bge.n	802d586 <_printf_i+0xd2>
 802d57e:	232d      	movs	r3, #45	; 0x2d
 802d580:	4276      	negs	r6, r6
 802d582:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802d586:	485a      	ldr	r0, [pc, #360]	; (802d6f0 <_printf_i+0x23c>)
 802d588:	230a      	movs	r3, #10
 802d58a:	e012      	b.n	802d5b2 <_printf_i+0xfe>
 802d58c:	682b      	ldr	r3, [r5, #0]
 802d58e:	6820      	ldr	r0, [r4, #0]
 802d590:	1d19      	adds	r1, r3, #4
 802d592:	6029      	str	r1, [r5, #0]
 802d594:	0605      	lsls	r5, r0, #24
 802d596:	d501      	bpl.n	802d59c <_printf_i+0xe8>
 802d598:	681e      	ldr	r6, [r3, #0]
 802d59a:	e002      	b.n	802d5a2 <_printf_i+0xee>
 802d59c:	0641      	lsls	r1, r0, #25
 802d59e:	d5fb      	bpl.n	802d598 <_printf_i+0xe4>
 802d5a0:	881e      	ldrh	r6, [r3, #0]
 802d5a2:	4853      	ldr	r0, [pc, #332]	; (802d6f0 <_printf_i+0x23c>)
 802d5a4:	2f6f      	cmp	r7, #111	; 0x6f
 802d5a6:	bf0c      	ite	eq
 802d5a8:	2308      	moveq	r3, #8
 802d5aa:	230a      	movne	r3, #10
 802d5ac:	2100      	movs	r1, #0
 802d5ae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802d5b2:	6865      	ldr	r5, [r4, #4]
 802d5b4:	60a5      	str	r5, [r4, #8]
 802d5b6:	2d00      	cmp	r5, #0
 802d5b8:	bfa2      	ittt	ge
 802d5ba:	6821      	ldrge	r1, [r4, #0]
 802d5bc:	f021 0104 	bicge.w	r1, r1, #4
 802d5c0:	6021      	strge	r1, [r4, #0]
 802d5c2:	b90e      	cbnz	r6, 802d5c8 <_printf_i+0x114>
 802d5c4:	2d00      	cmp	r5, #0
 802d5c6:	d04b      	beq.n	802d660 <_printf_i+0x1ac>
 802d5c8:	4615      	mov	r5, r2
 802d5ca:	fbb6 f1f3 	udiv	r1, r6, r3
 802d5ce:	fb03 6711 	mls	r7, r3, r1, r6
 802d5d2:	5dc7      	ldrb	r7, [r0, r7]
 802d5d4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802d5d8:	4637      	mov	r7, r6
 802d5da:	42bb      	cmp	r3, r7
 802d5dc:	460e      	mov	r6, r1
 802d5de:	d9f4      	bls.n	802d5ca <_printf_i+0x116>
 802d5e0:	2b08      	cmp	r3, #8
 802d5e2:	d10b      	bne.n	802d5fc <_printf_i+0x148>
 802d5e4:	6823      	ldr	r3, [r4, #0]
 802d5e6:	07de      	lsls	r6, r3, #31
 802d5e8:	d508      	bpl.n	802d5fc <_printf_i+0x148>
 802d5ea:	6923      	ldr	r3, [r4, #16]
 802d5ec:	6861      	ldr	r1, [r4, #4]
 802d5ee:	4299      	cmp	r1, r3
 802d5f0:	bfde      	ittt	le
 802d5f2:	2330      	movle	r3, #48	; 0x30
 802d5f4:	f805 3c01 	strble.w	r3, [r5, #-1]
 802d5f8:	f105 35ff 	addle.w	r5, r5, #4294967295
 802d5fc:	1b52      	subs	r2, r2, r5
 802d5fe:	6122      	str	r2, [r4, #16]
 802d600:	f8cd a000 	str.w	sl, [sp]
 802d604:	464b      	mov	r3, r9
 802d606:	aa03      	add	r2, sp, #12
 802d608:	4621      	mov	r1, r4
 802d60a:	4640      	mov	r0, r8
 802d60c:	f7ff fee4 	bl	802d3d8 <_printf_common>
 802d610:	3001      	adds	r0, #1
 802d612:	d14a      	bne.n	802d6aa <_printf_i+0x1f6>
 802d614:	f04f 30ff 	mov.w	r0, #4294967295
 802d618:	b004      	add	sp, #16
 802d61a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802d61e:	6823      	ldr	r3, [r4, #0]
 802d620:	f043 0320 	orr.w	r3, r3, #32
 802d624:	6023      	str	r3, [r4, #0]
 802d626:	4833      	ldr	r0, [pc, #204]	; (802d6f4 <_printf_i+0x240>)
 802d628:	2778      	movs	r7, #120	; 0x78
 802d62a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802d62e:	6823      	ldr	r3, [r4, #0]
 802d630:	6829      	ldr	r1, [r5, #0]
 802d632:	061f      	lsls	r7, r3, #24
 802d634:	f851 6b04 	ldr.w	r6, [r1], #4
 802d638:	d402      	bmi.n	802d640 <_printf_i+0x18c>
 802d63a:	065f      	lsls	r7, r3, #25
 802d63c:	bf48      	it	mi
 802d63e:	b2b6      	uxthmi	r6, r6
 802d640:	07df      	lsls	r7, r3, #31
 802d642:	bf48      	it	mi
 802d644:	f043 0320 	orrmi.w	r3, r3, #32
 802d648:	6029      	str	r1, [r5, #0]
 802d64a:	bf48      	it	mi
 802d64c:	6023      	strmi	r3, [r4, #0]
 802d64e:	b91e      	cbnz	r6, 802d658 <_printf_i+0x1a4>
 802d650:	6823      	ldr	r3, [r4, #0]
 802d652:	f023 0320 	bic.w	r3, r3, #32
 802d656:	6023      	str	r3, [r4, #0]
 802d658:	2310      	movs	r3, #16
 802d65a:	e7a7      	b.n	802d5ac <_printf_i+0xf8>
 802d65c:	4824      	ldr	r0, [pc, #144]	; (802d6f0 <_printf_i+0x23c>)
 802d65e:	e7e4      	b.n	802d62a <_printf_i+0x176>
 802d660:	4615      	mov	r5, r2
 802d662:	e7bd      	b.n	802d5e0 <_printf_i+0x12c>
 802d664:	682b      	ldr	r3, [r5, #0]
 802d666:	6826      	ldr	r6, [r4, #0]
 802d668:	6961      	ldr	r1, [r4, #20]
 802d66a:	1d18      	adds	r0, r3, #4
 802d66c:	6028      	str	r0, [r5, #0]
 802d66e:	0635      	lsls	r5, r6, #24
 802d670:	681b      	ldr	r3, [r3, #0]
 802d672:	d501      	bpl.n	802d678 <_printf_i+0x1c4>
 802d674:	6019      	str	r1, [r3, #0]
 802d676:	e002      	b.n	802d67e <_printf_i+0x1ca>
 802d678:	0670      	lsls	r0, r6, #25
 802d67a:	d5fb      	bpl.n	802d674 <_printf_i+0x1c0>
 802d67c:	8019      	strh	r1, [r3, #0]
 802d67e:	2300      	movs	r3, #0
 802d680:	6123      	str	r3, [r4, #16]
 802d682:	4615      	mov	r5, r2
 802d684:	e7bc      	b.n	802d600 <_printf_i+0x14c>
 802d686:	682b      	ldr	r3, [r5, #0]
 802d688:	1d1a      	adds	r2, r3, #4
 802d68a:	602a      	str	r2, [r5, #0]
 802d68c:	681d      	ldr	r5, [r3, #0]
 802d68e:	6862      	ldr	r2, [r4, #4]
 802d690:	2100      	movs	r1, #0
 802d692:	4628      	mov	r0, r5
 802d694:	f7d2 fe0c 	bl	80002b0 <memchr>
 802d698:	b108      	cbz	r0, 802d69e <_printf_i+0x1ea>
 802d69a:	1b40      	subs	r0, r0, r5
 802d69c:	6060      	str	r0, [r4, #4]
 802d69e:	6863      	ldr	r3, [r4, #4]
 802d6a0:	6123      	str	r3, [r4, #16]
 802d6a2:	2300      	movs	r3, #0
 802d6a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802d6a8:	e7aa      	b.n	802d600 <_printf_i+0x14c>
 802d6aa:	6923      	ldr	r3, [r4, #16]
 802d6ac:	462a      	mov	r2, r5
 802d6ae:	4649      	mov	r1, r9
 802d6b0:	4640      	mov	r0, r8
 802d6b2:	47d0      	blx	sl
 802d6b4:	3001      	adds	r0, #1
 802d6b6:	d0ad      	beq.n	802d614 <_printf_i+0x160>
 802d6b8:	6823      	ldr	r3, [r4, #0]
 802d6ba:	079b      	lsls	r3, r3, #30
 802d6bc:	d413      	bmi.n	802d6e6 <_printf_i+0x232>
 802d6be:	68e0      	ldr	r0, [r4, #12]
 802d6c0:	9b03      	ldr	r3, [sp, #12]
 802d6c2:	4298      	cmp	r0, r3
 802d6c4:	bfb8      	it	lt
 802d6c6:	4618      	movlt	r0, r3
 802d6c8:	e7a6      	b.n	802d618 <_printf_i+0x164>
 802d6ca:	2301      	movs	r3, #1
 802d6cc:	4632      	mov	r2, r6
 802d6ce:	4649      	mov	r1, r9
 802d6d0:	4640      	mov	r0, r8
 802d6d2:	47d0      	blx	sl
 802d6d4:	3001      	adds	r0, #1
 802d6d6:	d09d      	beq.n	802d614 <_printf_i+0x160>
 802d6d8:	3501      	adds	r5, #1
 802d6da:	68e3      	ldr	r3, [r4, #12]
 802d6dc:	9903      	ldr	r1, [sp, #12]
 802d6de:	1a5b      	subs	r3, r3, r1
 802d6e0:	42ab      	cmp	r3, r5
 802d6e2:	dcf2      	bgt.n	802d6ca <_printf_i+0x216>
 802d6e4:	e7eb      	b.n	802d6be <_printf_i+0x20a>
 802d6e6:	2500      	movs	r5, #0
 802d6e8:	f104 0619 	add.w	r6, r4, #25
 802d6ec:	e7f5      	b.n	802d6da <_printf_i+0x226>
 802d6ee:	bf00      	nop
 802d6f0:	08044c4d 	.word	0x08044c4d
 802d6f4:	08044c5e 	.word	0x08044c5e

0802d6f8 <__sflush_r>:
 802d6f8:	898a      	ldrh	r2, [r1, #12]
 802d6fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802d6fe:	4605      	mov	r5, r0
 802d700:	0710      	lsls	r0, r2, #28
 802d702:	460c      	mov	r4, r1
 802d704:	d458      	bmi.n	802d7b8 <__sflush_r+0xc0>
 802d706:	684b      	ldr	r3, [r1, #4]
 802d708:	2b00      	cmp	r3, #0
 802d70a:	dc05      	bgt.n	802d718 <__sflush_r+0x20>
 802d70c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802d70e:	2b00      	cmp	r3, #0
 802d710:	dc02      	bgt.n	802d718 <__sflush_r+0x20>
 802d712:	2000      	movs	r0, #0
 802d714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802d718:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802d71a:	2e00      	cmp	r6, #0
 802d71c:	d0f9      	beq.n	802d712 <__sflush_r+0x1a>
 802d71e:	2300      	movs	r3, #0
 802d720:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802d724:	682f      	ldr	r7, [r5, #0]
 802d726:	6a21      	ldr	r1, [r4, #32]
 802d728:	602b      	str	r3, [r5, #0]
 802d72a:	d032      	beq.n	802d792 <__sflush_r+0x9a>
 802d72c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802d72e:	89a3      	ldrh	r3, [r4, #12]
 802d730:	075a      	lsls	r2, r3, #29
 802d732:	d505      	bpl.n	802d740 <__sflush_r+0x48>
 802d734:	6863      	ldr	r3, [r4, #4]
 802d736:	1ac0      	subs	r0, r0, r3
 802d738:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802d73a:	b10b      	cbz	r3, 802d740 <__sflush_r+0x48>
 802d73c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802d73e:	1ac0      	subs	r0, r0, r3
 802d740:	2300      	movs	r3, #0
 802d742:	4602      	mov	r2, r0
 802d744:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802d746:	6a21      	ldr	r1, [r4, #32]
 802d748:	4628      	mov	r0, r5
 802d74a:	47b0      	blx	r6
 802d74c:	1c43      	adds	r3, r0, #1
 802d74e:	89a3      	ldrh	r3, [r4, #12]
 802d750:	d106      	bne.n	802d760 <__sflush_r+0x68>
 802d752:	6829      	ldr	r1, [r5, #0]
 802d754:	291d      	cmp	r1, #29
 802d756:	d82b      	bhi.n	802d7b0 <__sflush_r+0xb8>
 802d758:	4a29      	ldr	r2, [pc, #164]	; (802d800 <__sflush_r+0x108>)
 802d75a:	410a      	asrs	r2, r1
 802d75c:	07d6      	lsls	r6, r2, #31
 802d75e:	d427      	bmi.n	802d7b0 <__sflush_r+0xb8>
 802d760:	2200      	movs	r2, #0
 802d762:	6062      	str	r2, [r4, #4]
 802d764:	04d9      	lsls	r1, r3, #19
 802d766:	6922      	ldr	r2, [r4, #16]
 802d768:	6022      	str	r2, [r4, #0]
 802d76a:	d504      	bpl.n	802d776 <__sflush_r+0x7e>
 802d76c:	1c42      	adds	r2, r0, #1
 802d76e:	d101      	bne.n	802d774 <__sflush_r+0x7c>
 802d770:	682b      	ldr	r3, [r5, #0]
 802d772:	b903      	cbnz	r3, 802d776 <__sflush_r+0x7e>
 802d774:	6560      	str	r0, [r4, #84]	; 0x54
 802d776:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802d778:	602f      	str	r7, [r5, #0]
 802d77a:	2900      	cmp	r1, #0
 802d77c:	d0c9      	beq.n	802d712 <__sflush_r+0x1a>
 802d77e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802d782:	4299      	cmp	r1, r3
 802d784:	d002      	beq.n	802d78c <__sflush_r+0x94>
 802d786:	4628      	mov	r0, r5
 802d788:	f7ff fc96 	bl	802d0b8 <_free_r>
 802d78c:	2000      	movs	r0, #0
 802d78e:	6360      	str	r0, [r4, #52]	; 0x34
 802d790:	e7c0      	b.n	802d714 <__sflush_r+0x1c>
 802d792:	2301      	movs	r3, #1
 802d794:	4628      	mov	r0, r5
 802d796:	47b0      	blx	r6
 802d798:	1c41      	adds	r1, r0, #1
 802d79a:	d1c8      	bne.n	802d72e <__sflush_r+0x36>
 802d79c:	682b      	ldr	r3, [r5, #0]
 802d79e:	2b00      	cmp	r3, #0
 802d7a0:	d0c5      	beq.n	802d72e <__sflush_r+0x36>
 802d7a2:	2b1d      	cmp	r3, #29
 802d7a4:	d001      	beq.n	802d7aa <__sflush_r+0xb2>
 802d7a6:	2b16      	cmp	r3, #22
 802d7a8:	d101      	bne.n	802d7ae <__sflush_r+0xb6>
 802d7aa:	602f      	str	r7, [r5, #0]
 802d7ac:	e7b1      	b.n	802d712 <__sflush_r+0x1a>
 802d7ae:	89a3      	ldrh	r3, [r4, #12]
 802d7b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802d7b4:	81a3      	strh	r3, [r4, #12]
 802d7b6:	e7ad      	b.n	802d714 <__sflush_r+0x1c>
 802d7b8:	690f      	ldr	r7, [r1, #16]
 802d7ba:	2f00      	cmp	r7, #0
 802d7bc:	d0a9      	beq.n	802d712 <__sflush_r+0x1a>
 802d7be:	0793      	lsls	r3, r2, #30
 802d7c0:	680e      	ldr	r6, [r1, #0]
 802d7c2:	bf08      	it	eq
 802d7c4:	694b      	ldreq	r3, [r1, #20]
 802d7c6:	600f      	str	r7, [r1, #0]
 802d7c8:	bf18      	it	ne
 802d7ca:	2300      	movne	r3, #0
 802d7cc:	eba6 0807 	sub.w	r8, r6, r7
 802d7d0:	608b      	str	r3, [r1, #8]
 802d7d2:	f1b8 0f00 	cmp.w	r8, #0
 802d7d6:	dd9c      	ble.n	802d712 <__sflush_r+0x1a>
 802d7d8:	6a21      	ldr	r1, [r4, #32]
 802d7da:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802d7dc:	4643      	mov	r3, r8
 802d7de:	463a      	mov	r2, r7
 802d7e0:	4628      	mov	r0, r5
 802d7e2:	47b0      	blx	r6
 802d7e4:	2800      	cmp	r0, #0
 802d7e6:	dc06      	bgt.n	802d7f6 <__sflush_r+0xfe>
 802d7e8:	89a3      	ldrh	r3, [r4, #12]
 802d7ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802d7ee:	81a3      	strh	r3, [r4, #12]
 802d7f0:	f04f 30ff 	mov.w	r0, #4294967295
 802d7f4:	e78e      	b.n	802d714 <__sflush_r+0x1c>
 802d7f6:	4407      	add	r7, r0
 802d7f8:	eba8 0800 	sub.w	r8, r8, r0
 802d7fc:	e7e9      	b.n	802d7d2 <__sflush_r+0xda>
 802d7fe:	bf00      	nop
 802d800:	dfbffffe 	.word	0xdfbffffe

0802d804 <_fflush_r>:
 802d804:	b538      	push	{r3, r4, r5, lr}
 802d806:	690b      	ldr	r3, [r1, #16]
 802d808:	4605      	mov	r5, r0
 802d80a:	460c      	mov	r4, r1
 802d80c:	b913      	cbnz	r3, 802d814 <_fflush_r+0x10>
 802d80e:	2500      	movs	r5, #0
 802d810:	4628      	mov	r0, r5
 802d812:	bd38      	pop	{r3, r4, r5, pc}
 802d814:	b118      	cbz	r0, 802d81e <_fflush_r+0x1a>
 802d816:	6a03      	ldr	r3, [r0, #32]
 802d818:	b90b      	cbnz	r3, 802d81e <_fflush_r+0x1a>
 802d81a:	f7ff fa2f 	bl	802cc7c <__sinit>
 802d81e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802d822:	2b00      	cmp	r3, #0
 802d824:	d0f3      	beq.n	802d80e <_fflush_r+0xa>
 802d826:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802d828:	07d0      	lsls	r0, r2, #31
 802d82a:	d404      	bmi.n	802d836 <_fflush_r+0x32>
 802d82c:	0599      	lsls	r1, r3, #22
 802d82e:	d402      	bmi.n	802d836 <_fflush_r+0x32>
 802d830:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802d832:	f7ff fbd2 	bl	802cfda <__retarget_lock_acquire_recursive>
 802d836:	4628      	mov	r0, r5
 802d838:	4621      	mov	r1, r4
 802d83a:	f7ff ff5d 	bl	802d6f8 <__sflush_r>
 802d83e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802d840:	07da      	lsls	r2, r3, #31
 802d842:	4605      	mov	r5, r0
 802d844:	d4e4      	bmi.n	802d810 <_fflush_r+0xc>
 802d846:	89a3      	ldrh	r3, [r4, #12]
 802d848:	059b      	lsls	r3, r3, #22
 802d84a:	d4e1      	bmi.n	802d810 <_fflush_r+0xc>
 802d84c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802d84e:	f7ff fbc5 	bl	802cfdc <__retarget_lock_release_recursive>
 802d852:	e7dd      	b.n	802d810 <_fflush_r+0xc>

0802d854 <__swbuf_r>:
 802d854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d856:	460e      	mov	r6, r1
 802d858:	4614      	mov	r4, r2
 802d85a:	4605      	mov	r5, r0
 802d85c:	b118      	cbz	r0, 802d866 <__swbuf_r+0x12>
 802d85e:	6a03      	ldr	r3, [r0, #32]
 802d860:	b90b      	cbnz	r3, 802d866 <__swbuf_r+0x12>
 802d862:	f7ff fa0b 	bl	802cc7c <__sinit>
 802d866:	69a3      	ldr	r3, [r4, #24]
 802d868:	60a3      	str	r3, [r4, #8]
 802d86a:	89a3      	ldrh	r3, [r4, #12]
 802d86c:	071a      	lsls	r2, r3, #28
 802d86e:	d525      	bpl.n	802d8bc <__swbuf_r+0x68>
 802d870:	6923      	ldr	r3, [r4, #16]
 802d872:	b31b      	cbz	r3, 802d8bc <__swbuf_r+0x68>
 802d874:	6823      	ldr	r3, [r4, #0]
 802d876:	6922      	ldr	r2, [r4, #16]
 802d878:	1a98      	subs	r0, r3, r2
 802d87a:	6963      	ldr	r3, [r4, #20]
 802d87c:	b2f6      	uxtb	r6, r6
 802d87e:	4283      	cmp	r3, r0
 802d880:	4637      	mov	r7, r6
 802d882:	dc04      	bgt.n	802d88e <__swbuf_r+0x3a>
 802d884:	4621      	mov	r1, r4
 802d886:	4628      	mov	r0, r5
 802d888:	f7ff ffbc 	bl	802d804 <_fflush_r>
 802d88c:	b9e0      	cbnz	r0, 802d8c8 <__swbuf_r+0x74>
 802d88e:	68a3      	ldr	r3, [r4, #8]
 802d890:	3b01      	subs	r3, #1
 802d892:	60a3      	str	r3, [r4, #8]
 802d894:	6823      	ldr	r3, [r4, #0]
 802d896:	1c5a      	adds	r2, r3, #1
 802d898:	6022      	str	r2, [r4, #0]
 802d89a:	701e      	strb	r6, [r3, #0]
 802d89c:	6962      	ldr	r2, [r4, #20]
 802d89e:	1c43      	adds	r3, r0, #1
 802d8a0:	429a      	cmp	r2, r3
 802d8a2:	d004      	beq.n	802d8ae <__swbuf_r+0x5a>
 802d8a4:	89a3      	ldrh	r3, [r4, #12]
 802d8a6:	07db      	lsls	r3, r3, #31
 802d8a8:	d506      	bpl.n	802d8b8 <__swbuf_r+0x64>
 802d8aa:	2e0a      	cmp	r6, #10
 802d8ac:	d104      	bne.n	802d8b8 <__swbuf_r+0x64>
 802d8ae:	4621      	mov	r1, r4
 802d8b0:	4628      	mov	r0, r5
 802d8b2:	f7ff ffa7 	bl	802d804 <_fflush_r>
 802d8b6:	b938      	cbnz	r0, 802d8c8 <__swbuf_r+0x74>
 802d8b8:	4638      	mov	r0, r7
 802d8ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802d8bc:	4621      	mov	r1, r4
 802d8be:	4628      	mov	r0, r5
 802d8c0:	f000 f806 	bl	802d8d0 <__swsetup_r>
 802d8c4:	2800      	cmp	r0, #0
 802d8c6:	d0d5      	beq.n	802d874 <__swbuf_r+0x20>
 802d8c8:	f04f 37ff 	mov.w	r7, #4294967295
 802d8cc:	e7f4      	b.n	802d8b8 <__swbuf_r+0x64>
	...

0802d8d0 <__swsetup_r>:
 802d8d0:	b538      	push	{r3, r4, r5, lr}
 802d8d2:	4b2a      	ldr	r3, [pc, #168]	; (802d97c <__swsetup_r+0xac>)
 802d8d4:	4605      	mov	r5, r0
 802d8d6:	6818      	ldr	r0, [r3, #0]
 802d8d8:	460c      	mov	r4, r1
 802d8da:	b118      	cbz	r0, 802d8e4 <__swsetup_r+0x14>
 802d8dc:	6a03      	ldr	r3, [r0, #32]
 802d8de:	b90b      	cbnz	r3, 802d8e4 <__swsetup_r+0x14>
 802d8e0:	f7ff f9cc 	bl	802cc7c <__sinit>
 802d8e4:	89a3      	ldrh	r3, [r4, #12]
 802d8e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d8ea:	0718      	lsls	r0, r3, #28
 802d8ec:	d422      	bmi.n	802d934 <__swsetup_r+0x64>
 802d8ee:	06d9      	lsls	r1, r3, #27
 802d8f0:	d407      	bmi.n	802d902 <__swsetup_r+0x32>
 802d8f2:	2309      	movs	r3, #9
 802d8f4:	602b      	str	r3, [r5, #0]
 802d8f6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802d8fa:	81a3      	strh	r3, [r4, #12]
 802d8fc:	f04f 30ff 	mov.w	r0, #4294967295
 802d900:	e034      	b.n	802d96c <__swsetup_r+0x9c>
 802d902:	0758      	lsls	r0, r3, #29
 802d904:	d512      	bpl.n	802d92c <__swsetup_r+0x5c>
 802d906:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802d908:	b141      	cbz	r1, 802d91c <__swsetup_r+0x4c>
 802d90a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802d90e:	4299      	cmp	r1, r3
 802d910:	d002      	beq.n	802d918 <__swsetup_r+0x48>
 802d912:	4628      	mov	r0, r5
 802d914:	f7ff fbd0 	bl	802d0b8 <_free_r>
 802d918:	2300      	movs	r3, #0
 802d91a:	6363      	str	r3, [r4, #52]	; 0x34
 802d91c:	89a3      	ldrh	r3, [r4, #12]
 802d91e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802d922:	81a3      	strh	r3, [r4, #12]
 802d924:	2300      	movs	r3, #0
 802d926:	6063      	str	r3, [r4, #4]
 802d928:	6923      	ldr	r3, [r4, #16]
 802d92a:	6023      	str	r3, [r4, #0]
 802d92c:	89a3      	ldrh	r3, [r4, #12]
 802d92e:	f043 0308 	orr.w	r3, r3, #8
 802d932:	81a3      	strh	r3, [r4, #12]
 802d934:	6923      	ldr	r3, [r4, #16]
 802d936:	b94b      	cbnz	r3, 802d94c <__swsetup_r+0x7c>
 802d938:	89a3      	ldrh	r3, [r4, #12]
 802d93a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802d93e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802d942:	d003      	beq.n	802d94c <__swsetup_r+0x7c>
 802d944:	4621      	mov	r1, r4
 802d946:	4628      	mov	r0, r5
 802d948:	f000 f840 	bl	802d9cc <__smakebuf_r>
 802d94c:	89a0      	ldrh	r0, [r4, #12]
 802d94e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d952:	f010 0301 	ands.w	r3, r0, #1
 802d956:	d00a      	beq.n	802d96e <__swsetup_r+0x9e>
 802d958:	2300      	movs	r3, #0
 802d95a:	60a3      	str	r3, [r4, #8]
 802d95c:	6963      	ldr	r3, [r4, #20]
 802d95e:	425b      	negs	r3, r3
 802d960:	61a3      	str	r3, [r4, #24]
 802d962:	6923      	ldr	r3, [r4, #16]
 802d964:	b943      	cbnz	r3, 802d978 <__swsetup_r+0xa8>
 802d966:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802d96a:	d1c4      	bne.n	802d8f6 <__swsetup_r+0x26>
 802d96c:	bd38      	pop	{r3, r4, r5, pc}
 802d96e:	0781      	lsls	r1, r0, #30
 802d970:	bf58      	it	pl
 802d972:	6963      	ldrpl	r3, [r4, #20]
 802d974:	60a3      	str	r3, [r4, #8]
 802d976:	e7f4      	b.n	802d962 <__swsetup_r+0x92>
 802d978:	2000      	movs	r0, #0
 802d97a:	e7f7      	b.n	802d96c <__swsetup_r+0x9c>
 802d97c:	20000164 	.word	0x20000164

0802d980 <__swhatbuf_r>:
 802d980:	b570      	push	{r4, r5, r6, lr}
 802d982:	460c      	mov	r4, r1
 802d984:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d988:	2900      	cmp	r1, #0
 802d98a:	b096      	sub	sp, #88	; 0x58
 802d98c:	4615      	mov	r5, r2
 802d98e:	461e      	mov	r6, r3
 802d990:	da0d      	bge.n	802d9ae <__swhatbuf_r+0x2e>
 802d992:	89a3      	ldrh	r3, [r4, #12]
 802d994:	f013 0f80 	tst.w	r3, #128	; 0x80
 802d998:	f04f 0100 	mov.w	r1, #0
 802d99c:	bf0c      	ite	eq
 802d99e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802d9a2:	2340      	movne	r3, #64	; 0x40
 802d9a4:	2000      	movs	r0, #0
 802d9a6:	6031      	str	r1, [r6, #0]
 802d9a8:	602b      	str	r3, [r5, #0]
 802d9aa:	b016      	add	sp, #88	; 0x58
 802d9ac:	bd70      	pop	{r4, r5, r6, pc}
 802d9ae:	466a      	mov	r2, sp
 802d9b0:	f000 f848 	bl	802da44 <_fstat_r>
 802d9b4:	2800      	cmp	r0, #0
 802d9b6:	dbec      	blt.n	802d992 <__swhatbuf_r+0x12>
 802d9b8:	9901      	ldr	r1, [sp, #4]
 802d9ba:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802d9be:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802d9c2:	4259      	negs	r1, r3
 802d9c4:	4159      	adcs	r1, r3
 802d9c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802d9ca:	e7eb      	b.n	802d9a4 <__swhatbuf_r+0x24>

0802d9cc <__smakebuf_r>:
 802d9cc:	898b      	ldrh	r3, [r1, #12]
 802d9ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802d9d0:	079d      	lsls	r5, r3, #30
 802d9d2:	4606      	mov	r6, r0
 802d9d4:	460c      	mov	r4, r1
 802d9d6:	d507      	bpl.n	802d9e8 <__smakebuf_r+0x1c>
 802d9d8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802d9dc:	6023      	str	r3, [r4, #0]
 802d9de:	6123      	str	r3, [r4, #16]
 802d9e0:	2301      	movs	r3, #1
 802d9e2:	6163      	str	r3, [r4, #20]
 802d9e4:	b002      	add	sp, #8
 802d9e6:	bd70      	pop	{r4, r5, r6, pc}
 802d9e8:	ab01      	add	r3, sp, #4
 802d9ea:	466a      	mov	r2, sp
 802d9ec:	f7ff ffc8 	bl	802d980 <__swhatbuf_r>
 802d9f0:	9900      	ldr	r1, [sp, #0]
 802d9f2:	4605      	mov	r5, r0
 802d9f4:	4630      	mov	r0, r6
 802d9f6:	f7ff f81b 	bl	802ca30 <_malloc_r>
 802d9fa:	b948      	cbnz	r0, 802da10 <__smakebuf_r+0x44>
 802d9fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802da00:	059a      	lsls	r2, r3, #22
 802da02:	d4ef      	bmi.n	802d9e4 <__smakebuf_r+0x18>
 802da04:	f023 0303 	bic.w	r3, r3, #3
 802da08:	f043 0302 	orr.w	r3, r3, #2
 802da0c:	81a3      	strh	r3, [r4, #12]
 802da0e:	e7e3      	b.n	802d9d8 <__smakebuf_r+0xc>
 802da10:	89a3      	ldrh	r3, [r4, #12]
 802da12:	6020      	str	r0, [r4, #0]
 802da14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802da18:	81a3      	strh	r3, [r4, #12]
 802da1a:	9b00      	ldr	r3, [sp, #0]
 802da1c:	6163      	str	r3, [r4, #20]
 802da1e:	9b01      	ldr	r3, [sp, #4]
 802da20:	6120      	str	r0, [r4, #16]
 802da22:	b15b      	cbz	r3, 802da3c <__smakebuf_r+0x70>
 802da24:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802da28:	4630      	mov	r0, r6
 802da2a:	f000 f81d 	bl	802da68 <_isatty_r>
 802da2e:	b128      	cbz	r0, 802da3c <__smakebuf_r+0x70>
 802da30:	89a3      	ldrh	r3, [r4, #12]
 802da32:	f023 0303 	bic.w	r3, r3, #3
 802da36:	f043 0301 	orr.w	r3, r3, #1
 802da3a:	81a3      	strh	r3, [r4, #12]
 802da3c:	89a3      	ldrh	r3, [r4, #12]
 802da3e:	431d      	orrs	r5, r3
 802da40:	81a5      	strh	r5, [r4, #12]
 802da42:	e7cf      	b.n	802d9e4 <__smakebuf_r+0x18>

0802da44 <_fstat_r>:
 802da44:	b538      	push	{r3, r4, r5, lr}
 802da46:	4d07      	ldr	r5, [pc, #28]	; (802da64 <_fstat_r+0x20>)
 802da48:	2300      	movs	r3, #0
 802da4a:	4604      	mov	r4, r0
 802da4c:	4608      	mov	r0, r1
 802da4e:	4611      	mov	r1, r2
 802da50:	602b      	str	r3, [r5, #0]
 802da52:	f7d4 feff 	bl	8002854 <_fstat>
 802da56:	1c43      	adds	r3, r0, #1
 802da58:	d102      	bne.n	802da60 <_fstat_r+0x1c>
 802da5a:	682b      	ldr	r3, [r5, #0]
 802da5c:	b103      	cbz	r3, 802da60 <_fstat_r+0x1c>
 802da5e:	6023      	str	r3, [r4, #0]
 802da60:	bd38      	pop	{r3, r4, r5, pc}
 802da62:	bf00      	nop
 802da64:	200142e4 	.word	0x200142e4

0802da68 <_isatty_r>:
 802da68:	b538      	push	{r3, r4, r5, lr}
 802da6a:	4d06      	ldr	r5, [pc, #24]	; (802da84 <_isatty_r+0x1c>)
 802da6c:	2300      	movs	r3, #0
 802da6e:	4604      	mov	r4, r0
 802da70:	4608      	mov	r0, r1
 802da72:	602b      	str	r3, [r5, #0]
 802da74:	f7d4 fef4 	bl	8002860 <_isatty>
 802da78:	1c43      	adds	r3, r0, #1
 802da7a:	d102      	bne.n	802da82 <_isatty_r+0x1a>
 802da7c:	682b      	ldr	r3, [r5, #0]
 802da7e:	b103      	cbz	r3, 802da82 <_isatty_r+0x1a>
 802da80:	6023      	str	r3, [r4, #0]
 802da82:	bd38      	pop	{r3, r4, r5, pc}
 802da84:	200142e4 	.word	0x200142e4

0802da88 <_init>:
 802da88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802da8a:	bf00      	nop
 802da8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802da8e:	bc08      	pop	{r3}
 802da90:	469e      	mov	lr, r3
 802da92:	4770      	bx	lr

0802da94 <_fini>:
 802da94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802da96:	bf00      	nop
 802da98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802da9a:	bc08      	pop	{r3}
 802da9c:	469e      	mov	lr, r3
 802da9e:	4770      	bx	lr
